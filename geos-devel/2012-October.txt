From geos-trac at osgeo.org  Mon Oct  1 05:34:39 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 12:34:39 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.7895b073f1874b43882c9e76e082dc1c@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by robe):

  * status:  closed => reopened
  * resolution:  invalid =>


Comment:

 Can WE PLEASE GET RID OF THIS badthreadtest or explain whether it is
 supposed to be tested or not.  It's stopping the xmltester from being
 tested it seems.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 05:44:58 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 12:44:58 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.199752571c87fe6d6b1c2959353b14dd@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by strk):

 Could try try renaming badtreadtest.c to badtreadtest.cpp, update the
 Makefile.am accordingly and restart from ./autogen.sh step ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:4>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 07:50:49 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 14:50:49 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.d5285797ec896f6d337e18832b98893a@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by robe):

 That didn't work.  I had to rename both badthreadtest and threadtest and
 change the .am file, but just got different error:


 {{{
 x86_64-w64-mingw32-g++ -DHAVE_CONFIG_H -I. -I../../include
 -I../../include/geos -I../../include -I../../tests/unit/tut -I../../capi
 -DGEOS_INLINE  -pedantic -Wall -ansi -Wno-long-long  -ffloat-store -g -O2
 -MT threadtest.o -MD -MP -MF .deps/threadtest.Tpo -c -o threadtest.o
 threadtest.cc
 In file included from
 c:\ming64\mingw64\bin\../lib/gcc/x86_64-w64-mingw32/4.5.4/../../../../x86_64-w64-mingw32/include/unistd.h:10:0,
                  from threadtest.cc:19:
 ../../include/geos/io.h:61:2: warning: #warning *** DEPRECATED: You are
 using deprecated header io.h. Please, update your sources according to new
 layout of GEOS headers and namespaces
 threadtest.cc:23:21: fatal error: pthread.h: No such file or directory
 compilation terminated.
 make[4]: *** [threadtest.o] Error 1
 make[4]: Leaving directory `/c/jenkins/geos/branches/3.4/tests/thread'
 make[3]: *** [check-am] Error 2
 make[3]: Leaving directory `/c/jenkins/geos/branches/3.4/tests/thread'
 make[2]: *** [check-recursive] Error 1
 make[2]: Leaving directory `/c/jenkins/geos/branches/3.4/tests'
 make[1]: *** [check-recursive] Error 1
 make[1]: Leaving directory `/c/jenkins/geos/branches/3.4'
 make: *** [check] Error 2

 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:5>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 09:39:53 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 16:39:53 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.dbabb7032edcc5ea09110660915b5618@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by strk):

 Do you have a x86_64-w64-mingw32-g++ binary ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:6>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 09:47:56 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 16:47:56 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.75f5e53978fe3e21722ce6f3703b5ad1@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by robe):

 Yes.  Right in the bin folder where it should be.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:7>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 09:48:44 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 16:48:44 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.760623138d2bd26b13412f96c40932a2@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by robe):

 BTW this is testing my 64-bit not my 32-bit.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:8>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 09:52:40 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 16:52:40 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.515d261454f715cb93513143cfab65e4@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by strk):

 I'm looking again at the original report and can't understand this
 message:
 {{{
 In file included from
 c:\ming64\mingw64\bin\../lib/gcc/x86_64-w64-mingw32/4.5.4/../../../../x86_64-w64-mingw32/include/unistd.h:10:0,
                  from threadtest.c:19:
 ../../include/geos/io.h:19:11: error: expected '=', ',', ';', 'asm' or
 '__attribute__' before 'geos'
 }}}

 Where is {{{
 c:\ming64\mingw64\bin\../lib/gcc/x86_64-w64-mingw32/4.5.4/../../../../x86_64-w64-mingw32/include/unistd.h
 }}} ? And what is including io.h ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:9>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 09:59:10 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 16:59:10 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.4c82b5e715a0ee061dcce96f2a3be640@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by robe):

 I see an unistd.h in:


 {{{
 C:\ming64\mingw64\x86_64-w64-mingw32\include\unistd.h
 }}}

 and it does have a io.h include in the file. The file is fairly short --
 looks like this:


 {{{
 /**
  * This file has no copyright assigned and is placed in the Public Domain.
  * This file is part of the w64 mingw-runtime package.
  * No warranty is given; refer to the file DISCLAIMER.PD within this
 package.
  */
 #ifndef _UNISTD_H
 #define _UNISTD_H
 #define __UNISTD_H_SOURCED__ 1

 #include <io.h>
 #include <process.h>
 #include <getopt.h>

 #ifdef __cplusplus
 extern "C" {
 #endif

 #if !defined __NO_ISOCEXT
 #include <sys/types.h> /* For useconds_t. */

 int __cdecl __MINGW_NOTHROW usleep(useconds_t useconds);
 #endif  /* Not __NO_ISOCEXT */

 #ifndef FTRUNCATE_DEFINED
 #define FTRUNCATE_DEFINED
 /* This is defined as a real library function to allow autoconf
    to verify its existence. */
 #if !defined(NO_OLDNAMES) || defined(_POSIX)
 int ftruncate(int, off_t);
 #ifndef __CRT__NO_INLINE
 __CRT_INLINE int ftruncate(int __fd, off_t __length)
 {
   return _chsize (__fd, __length);
 }
 #endif /* !__CRT__NO_INLINE */
 #else
 int ftruncate(int, _off_t);
 #ifndef __CRT__NO_INLINE
 __CRT_INLINE int ftruncate(int __fd, _off_t __length)
 {
   return _chsize (__fd, __length);
 }
 #endif /* !__CRT__NO_INLINE */
 #endif
 #endif /* FTRUNCATE_DEFINED */

 #ifndef _CRT_SWAB_DEFINED
 #define _CRT_SWAB_DEFINED /* Also in stdlib.h */
   void __cdecl swab(char *_Buf1,char *_Buf2,int _SizeInBytes);
 #endif

 #ifdef __cplusplus
 }
 #endif

 #undef __UNISTD_H_SOURCED__
 #endif /* _UNISTD_H */
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:10>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 10:17:14 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 17:17:14 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.9f18b4b534fa01510c8e4ca65a4e00a9@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by strk):

 interesting, so geos headers are hiding system ones!
 I guess renaming io.h.

 Try removing -I../../include/geos from the CFLAGS

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:11>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 10:22:27 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 17:22:27 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.8742dd193ba88caa6e926b85837c0890@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by strk):

 I'm afraid include/geos gets into DEAULT_INCLUDE due to
  AM_CONFIG_HEADER([include/geos/platform.h])
 we might need another macro to generate that file without it being in the
 default -I

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:12>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 10:25:32 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 17:25:32 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.f63343b01bae3f685ee947a8782c4a11@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by strk):

 confirmed, it's all AM_CONFIG_HEADER's fault !

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:13>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  1 11:08:54 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Oct 2012 18:08:54 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.c4cb0bf1360364797eea1d1bdc5fa450@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  reopened                  
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by strk):

 I think we could rename io.h to geosIO.h, btw. I dubt anyone is using that
 header, and if it does it's known that C++ API is prone to changes.

 Anyway a more elegant solution only affecting DEFAULT_INCLUDE would be
 much better IMHO

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:14>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mwtoews at gmail.com  Wed Oct 10 18:18:35 2012
From: mwtoews at gmail.com (Mike Toews)
Date: Thu, 11 Oct 2012 14:18:35 +1300
Subject: [geos-devel] Buffer extends beyond flat end caps
Message-ID: <CAM2FmMq4Nc8S1TPpajq8ze2G6rS-BWu_hFvoCPvy0TGJeK1sJQ@mail.gmail.com>

Hi,

I'm not entirely sure if this is a bug or expected behaviour. I'm
attempting to buffer a LineString with a flat cap style or with a
single-sided buffer, except that the buffer can extend beyond the end
cap. Consider input WKT:

LINESTRING(33.193 54.345, 33.148 54.362, 30.646 55.565, 29.949 56.163,
29.351 56.676)

When buffered with a flat cap style, or only on the right side with
distances 5 to 10, the shape looks irregular. The result shows an
indent of the flat cap on the right side, but not a complete trim of
the buffer. It's difficult to describe, so take a look at screenshots
from JTS TestBuilder with the 5 and 10 buffers.

I've tried this with JTS 1.12 and with Shapely 1.2.14 (GEOS C API
1.6.2), which all have the same result.

-Mike
-------------- next part --------------
A non-text attachment was scrubbed...
Name: JTS TestBuilder_2012-10-11_14-12-26.png
Type: image/png
Size: 35223 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20121011/57599b1c/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: JTS TestBuilder_2012-10-11_14-13-08.png
Type: image/png
Size: 43351 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20121011/57599b1c/attachment-0003.png>

From mtnclimb at telus.net  Wed Oct 10 20:48:49 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Wed, 10 Oct 2012 20:48:49 -0700
Subject: [geos-devel] Buffer extends beyond flat end caps
In-Reply-To: <CAM2FmMq4Nc8S1TPpajq8ze2G6rS-BWu_hFvoCPvy0TGJeK1sJQ@mail.gmail.com>
References: <CAM2FmMq4Nc8S1TPpajq8ze2G6rS-BWu_hFvoCPvy0TGJeK1sJQ@mail.gmail.com>
Message-ID: <507641A1.9000802@telus.net>

Confirmed, this is an issue in GEOS and JTS (all versions).

This is due to some limitations in the current algorithm for generating 
buffer offset curves with flat ends for lines with relatively short 
segments at the end.  Hard to say how easy this will be to fix - 
sometimes these kinds of issues are surprisingly tricky to handle.

Martin


On 10/10/2012 6:18 PM, Mike Toews wrote:
> LINESTRING(33.193 54.345, 33.148 54.362, 30.646 55.565, 29.949 56.163,
> 29.351 56.676)


From cooperch at cf.ac.uk  Fri Oct 19 04:22:56 2012
From: cooperch at cf.ac.uk (Crispin Cooper)
Date: Fri, 19 Oct 2012 12:22:56 +0100
Subject: [geos-devel] Possible to link dynamically to GEOS C interface?
Message-ID: <50813810.7020801@cf.ac.uk>

Hi

I am having trouble with my dll finding geos_c.dll at runtime - even 
though they're located together!  I wonder if it's possible to link 
dynamically/explicitly to it somehow, then I could specify the right path?

The docs (http://geos.osgeo.org/doxygen/c_iface.html) only seem to 
describe static linking.

Best regards

Crispin

From mateusz at loskot.net  Fri Oct 19 04:53:15 2012
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 19 Oct 2012 12:53:15 +0100
Subject: [geos-devel] Possible to link dynamically to GEOS C interface?
In-Reply-To: <50813810.7020801@cf.ac.uk>
References: <50813810.7020801@cf.ac.uk>
Message-ID: <CABUeae_-DH8rVat9-gWHUXRNagLSm7xqa9OhJfMXX9R6=5gjew@mail.gmail.com>

On 19 October 2012 12:22, Crispin Cooper <cooperch at cf.ac.uk> wrote:
> Hi
>
> I am having trouble with my dll finding geos_c.dll at runtime - even though
> they're located together!  I wonder if it's possible to link
> dynamically/explicitly to it somehow, then I could specify the right path?

Yes, geos_i.lib is the import library for geos.dll.
Check:
http://trac.osgeo.org/geos/browser/trunk/nmake.opt#L160
http://trac.osgeo.org/geos/browser/trunk/src/Makefile.vc#L4

> The docs (http://geos.osgeo.org/doxygen/c_iface.html) only seem to describe
> static linking.

It doesn't say anything about static linking.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From cooperch at cf.ac.uk  Fri Oct 19 05:16:11 2012
From: cooperch at cf.ac.uk (Crispin Cooper)
Date: Fri, 19 Oct 2012 13:16:11 +0100
Subject: [geos-devel] Possible to link dynamically to GEOS C interface?
In-Reply-To: <CABUeae_-DH8rVat9-gWHUXRNagLSm7xqa9OhJfMXX9R6=5gjew@mail.gmail.com>
References: <50813810.7020801@cf.ac.uk>
	<CABUeae_-DH8rVat9-gWHUXRNagLSm7xqa9OhJfMXX9R6=5gjew@mail.gmail.com>
Message-ID: <5081448B.8090305@cf.ac.uk>

On 19/10/2012 12:53, Mateusz Loskot wrote:
> It doesn't say anything about static linking. Best regards, 
Sorry - think I need a new brain this afternoon!  I meant explicit 
linking.  I'd like to link explicitly at runtime, rather than implicitly 
which is what linking to geos_c_i.lib seems to do.  Or, more generally, 
I'd like to be able to tell geos_c_i.lib where to look for geos_c.dll.  
How can I do this?

Best,

Crispin

From mateusz at loskot.net  Fri Oct 19 05:25:21 2012
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 19 Oct 2012 13:25:21 +0100
Subject: [geos-devel] Possible to link dynamically to GEOS C interface?
In-Reply-To: <5081448B.8090305@cf.ac.uk>
References: <50813810.7020801@cf.ac.uk>
	<CABUeae_-DH8rVat9-gWHUXRNagLSm7xqa9OhJfMXX9R6=5gjew@mail.gmail.com>
	<5081448B.8090305@cf.ac.uk>
Message-ID: <CABUeae9-NXN=DbJzeHftCdAHi0st7V67H9hioBfHLDbPobsn0g@mail.gmail.com>

On 19 October 2012 13:16, Crispin Cooper <cooperch at cf.ac.uk> wrote:
> On 19/10/2012 12:53, Mateusz Loskot wrote:
>>
>> It doesn't say anything about static linking. Best regards,
>
> Sorry - think I need a new brain this afternoon!  I meant explicit linking.
> I'd like to link explicitly at runtime, rather than implicitly which is what
> linking to geos_c_i.lib seems to do.  Or, more generally, I'd like to be
> able to tell geos_c_i.lib where to look for geos_c.dll.  How can I do this?

http://msdn.microsoft.com/en-us/library/784bt7z7(v=vs.100).aspx

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From pedrommeirelles at gmail.com  Fri Oct 19 15:29:14 2012
From: pedrommeirelles at gmail.com (Pedro Meirelles)
Date: Fri, 19 Oct 2012 15:29:14 -0700
Subject: [geos-devel] Installation problem - OS 10.8/OS 10.6
Message-ID: <CAEW0jV9zPwv-GG64x2Czx-F6LJXYt2PMgkrAubxdmDaYN5wdjw@mail.gmail.com>

Hello,

I would love to instal the matplotlib Python package in my computer to plot
some maps for my work. I am biologist and I don't have a lot of experience
in cartography but I think that this package would be very useful for me.
This Python package requires GEOS others.

When I run this comand:

CC=gcc-4.0 CXX=g++-4.0 ./configure --enable-python

I get this error:

checking build system type... i386-apple-darwin12.2.0
checking host system type... i386-apple-darwin12.2.0
checking target system type... i386-apple-darwin12.2.0
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... ./install-sh -c -d
checking for gawk... no
checking for mawk... no
checking for nawk... no
checking for awk... awk
checking whether make sets $(MAKE)... yes
checking whether to enable maintainer-specific portions of Makefiles... no
checking for gcc... gcc-4.0
checking whether the C compiler works... no
configure: error: in `/Users/pedromeirelles/Desktop/geos-3.3.5':
configure: error: C compiler cannot create executables
See `config.log' for more details.




So I tried this one:

CXX=g++ ./configure --enable-python

and I got this error:

Undefined symbols for architecture x86_64:

"std::auto_ptr<geos::geom::Envelope>::auto_ptr(std::auto_ptr_ref<geos::geom::Envelope>)",
referenced from:
      virtual thunk to
geos::geom::GeometryCollection::computeEnvelopeInternal() constin
GeometryCollection.o
  "__ZNSt8auto_ptrIN4geos4geom8EnvelopeEEcvSt12auto_ptr_refIT_EIS2_EEv",
referenced from:
      virtual thunk to
geos::geom::GeometryCollection::computeEnvelopeInternal() constin
GeometryCollection.o
ld: symbol(s) not found for architecture x86_64
collect2: ld returned 1 exit status
make[2]: *** [libgeos.la] Error 1
make[1]: *** [all-recursive] Error 1
make: *** [all-recursive] Error 1


There is someone that can help me to install GEOS in my computer?

Thank you very much!

Pedro

-- 
_________________________________________
Pedro Milet Meirelles
www.flickr.com/pedromeirelles
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20121019/e48f0cae/attachment.html>

From woklist at kyngchaos.com  Fri Oct 19 15:42:44 2012
From: woklist at kyngchaos.com (William Kyngesburye)
Date: Fri, 19 Oct 2012 17:42:44 -0500
Subject: [geos-devel] Installation problem - OS 10.8/OS 10.6
In-Reply-To: <CAEW0jV9zPwv-GG64x2Czx-F6LJXYt2PMgkrAubxdmDaYN5wdjw@mail.gmail.com>
References: <CAEW0jV9zPwv-GG64x2Czx-F6LJXYt2PMgkrAubxdmDaYN5wdjw@mail.gmail.com>
Message-ID: <464594D1-3A60-438A-A056-D9C02A3F7B95@kyngchaos.com>

I have a lot of GIS related software ready to use for OS X, including matplotlib.

www.kyngchaos.com

But I wasn't aware that matplotlib needs GEOS.  If it does, the Python option in GEOS (enable-python) is not supported any more.

On Oct 19, 2012, at 5:29 PM, Pedro Meirelles wrote:

> Hello,
> 
> I would love to instal the matplotlib Python package in my computer to plot some maps for my work. I am biologist and I don't have a lot of experience in cartography but I think that this package would be very useful for me. This Python package requires GEOS others.
> 
> When I run this comand:
> 
> CC=gcc-4.0 CXX=g++-4.0 ./configure --enable-python
> 
> I get this error:
> 
> checking build system type... i386-apple-darwin12.2.0
> checking host system type... i386-apple-darwin12.2.0
> checking target system type... i386-apple-darwin12.2.0
> checking for a BSD-compatible install... /usr/bin/install -c
> checking whether build environment is sane... yes
> checking for a thread-safe mkdir -p... ./install-sh -c -d
> checking for gawk... no
> checking for mawk... no
> checking for nawk... no
> checking for awk... awk
> checking whether make sets $(MAKE)... yes
> checking whether to enable maintainer-specific portions of Makefiles... no
> checking for gcc... gcc-4.0
> checking whether the C compiler works... no
> configure: error: in `/Users/pedromeirelles/Desktop/geos-3.3.5':
> configure: error: C compiler cannot create executables
> See `config.log' for more details.
> 
> 
> 
> 
> So I tried this one:
> 
> CXX=g++ ./configure --enable-python
> 
> and I got this error:
> 
> Undefined symbols for architecture x86_64:
>   "std::auto_ptr<geos::geom::Envelope>::auto_ptr(std::auto_ptr_ref<geos::geom::Envelope>)", referenced from:
>       virtual thunk to geos::geom::GeometryCollection::computeEnvelopeInternal() constin GeometryCollection.o
>   "__ZNSt8auto_ptrIN4geos4geom8EnvelopeEEcvSt12auto_ptr_refIT_EIS2_EEv", referenced from:
>       virtual thunk to geos::geom::GeometryCollection::computeEnvelopeInternal() constin GeometryCollection.o
> ld: symbol(s) not found for architecture x86_64
> collect2: ld returned 1 exit status
> make[2]: *** [libgeos.la] Error 1
> make[1]: *** [all-recursive] Error 1
> make: *** [all-recursive] Error 1
> 
> 
> There is someone that can help me to install GEOS in my computer?
> 
> Thank you very much!
> 
> Pedro
> 
> -- 
> _________________________________________
> Pedro Milet Meirelles
> www.flickr.com/pedromeirelles
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-----
William Kyngesburye <kyngchaos*at*kyngchaos*dot*com>
http://www.kyngchaos.com/

First Pogril: Why is life like sticking your head in a bucket filled with hyena offal?
Second Pogril: I don't know.  Why IS life like sticking your head in a bucket filled with hyena offal?
First Pogril: I don't know either.  Wretched, isn't it?

-HitchHiker's Guide to the Galaxy



From pa.leroux at gmail.com  Fri Oct 26 01:00:27 2012
From: pa.leroux at gmail.com (Pascal Leroux)
Date: Fri, 26 Oct 2012 10:00:27 +0200
Subject: [geos-devel] GEOSUnaryUnion performances
Message-ID: <CAP87X37Gdq1p2DXkjYXCee_Z-3vK4p2NJL3TO-+eTuOJHcdC=Q@mail.gmail.com>

Hi everyone,

I want to build a planar graph with a large set of LineString geometries.
When I use OpenJump, it takes 3 or 4 seconds to determine and create the
edges of the graph. I took a look at JTS source code and this calculation
is based on the class UnaryUnionOp .

I have tried to do the same thing in Python (Shapely) with unary_union (new
in release 1.2.16, thanks Sean) and in C (geos C API) with GEOSUnaryUnion
(GEOS_MULTILINESTRING or GEOS_GEOMETRYCOLLECTION geometry types).

With the same input data, I have got the same results but it takes about 50
seconds (in C, 1 or 2 seconds more in Python).

Can anyone explain the differences ?

I use the release 3.3.3 of geos , on Mac OS X (10.6, Snow Leopard).

Here is the code I used to do tests in C :

#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <geos_c.h>
#include "shapefil.h"

GEOSGeometry *SHPObject_to_LineString(SHPObject *object)
{
    GEOSCoordSequence *coords = GEOSCoordSeq_create(object->nVertices,2);
    int i;

    assert(object->nParts == 1);
    for (i=0; i<object->nVertices; i++)
    {
        GEOSCoordSeq_setX(coords,i,object->padfX[i]);
        GEOSCoordSeq_setY(coords,i,object->padfY[i]);
    }
    return GEOSGeom_createLineString(coords);
}

GEOSGeometry *load_shapefile_as_collection(char *pathname)
{
    SHPHandle shape;
    int type, nobjs, i;
    double minBounds[4], maxBounds[4];
    GEOSGeometry **geometries;
    GEOSGeometry *collection;

    shape = SHPOpen(pathname,"rb");

    SHPGetInfo(shape,&nobjs,&type,minBounds,maxBounds);
    assert((type % 10) == SHPT_ARC);

    assert(geometries = malloc(nobjs*sizeof(GEOSGeometry *)));

    for (i=0; i<nobjs ;i++)
    {
        SHPObject *object = SHPReadObject(shape,i);
        geometries[i] = SHPObject_to_LineString(object);
    }

    SHPClose(shape);

    collection = GEOSGeom_createCollection(GEOS_GEOMETRYCOLLECTION,
geometries, nobjs);
    // collection = GEOSGeom_createCollection(GEOS_MULTILINESTRING,
geometries, nobjs);

    return collection;
}


int main(int argc,char *argv[])
{
    GEOSGeometry *collection;
    GEOSGeometry *unaryunion;
    GEOSWKTWriter *writer;
    FILE *output;
    int g;

    initGEOS(printf,printf);

    collection = load_shapefile_as_collection(argv[1]);

    unaryunion = GEOSUnaryUnion(collection);

}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20121026/39ad8ca9/attachment.html>

From strk at keybit.net  Fri Oct 26 02:14:18 2012
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 26 Oct 2012 11:14:18 +0200
Subject: [geos-devel] GEOSUnaryUnion performances
In-Reply-To: <CAP87X37Gdq1p2DXkjYXCee_Z-3vK4p2NJL3TO-+eTuOJHcdC=Q@mail.gmail.com>
References: <CAP87X37Gdq1p2DXkjYXCee_Z-3vK4p2NJL3TO-+eTuOJHcdC=Q@mail.gmail.com>
Message-ID: <20121026091418.GD3601@gnash>

Did you profile only the GEOSUnaryUnion call or the whole script ?
Could you break profiling into components ?
Also can you use the latest development version ?

Finally: if any robustness issue is encountered, the union will be
tried again after performing costly snapping operations, so it would
be interesting to see if either GEOS or JTS is getting any of that
(will take adding or enabling debugging lines in the code). 

It'll help to make very sure the two engines do start from the same
geometries. WKB would be the best way to get that.
You can also produce an XML based tester as input, which would then be
used by both JTS testrunner and GEOS XMLTestRunner scripts, for easier
comparison. HEXWKB would be supported there.

--strk;

On Fri, Oct 26, 2012 at 10:00:27AM +0200, Pascal Leroux wrote:
> Hi everyone,
> 
> I want to build a planar graph with a large set of LineString geometries.
> When I use OpenJump, it takes 3 or 4 seconds to determine and create the
> edges of the graph. I took a look at JTS source code and this calculation
> is based on the class UnaryUnionOp .
> 
> I have tried to do the same thing in Python (Shapely) with unary_union (new
> in release 1.2.16, thanks Sean) and in C (geos C API) with GEOSUnaryUnion
> (GEOS_MULTILINESTRING or GEOS_GEOMETRYCOLLECTION geometry types).
> 
> With the same input data, I have got the same results but it takes about 50
> seconds (in C, 1 or 2 seconds more in Python).
> 
> Can anyone explain the differences ?
> 
> I use the release 3.3.3 of geos , on Mac OS X (10.6, Snow Leopard).
> 
> Here is the code I used to do tests in C :
> 
> #include <stdio.h>
> #include <stdlib.h>
> #include <assert.h>
> #include <geos_c.h>
> #include "shapefil.h"
> 
> GEOSGeometry *SHPObject_to_LineString(SHPObject *object)
> {
>     GEOSCoordSequence *coords = GEOSCoordSeq_create(object->nVertices,2);
>     int i;
> 
>     assert(object->nParts == 1);
>     for (i=0; i<object->nVertices; i++)
>     {
>         GEOSCoordSeq_setX(coords,i,object->padfX[i]);
>         GEOSCoordSeq_setY(coords,i,object->padfY[i]);
>     }
>     return GEOSGeom_createLineString(coords);
> }
> 
> GEOSGeometry *load_shapefile_as_collection(char *pathname)
> {
>     SHPHandle shape;
>     int type, nobjs, i;
>     double minBounds[4], maxBounds[4];
>     GEOSGeometry **geometries;
>     GEOSGeometry *collection;
> 
>     shape = SHPOpen(pathname,"rb");
> 
>     SHPGetInfo(shape,&nobjs,&type,minBounds,maxBounds);
>     assert((type % 10) == SHPT_ARC);
> 
>     assert(geometries = malloc(nobjs*sizeof(GEOSGeometry *)));
> 
>     for (i=0; i<nobjs ;i++)
>     {
>         SHPObject *object = SHPReadObject(shape,i);
>         geometries[i] = SHPObject_to_LineString(object);
>     }
> 
>     SHPClose(shape);
> 
>     collection = GEOSGeom_createCollection(GEOS_GEOMETRYCOLLECTION,
> geometries, nobjs);
>     // collection = GEOSGeom_createCollection(GEOS_MULTILINESTRING,
> geometries, nobjs);
> 
>     return collection;
> }
> 
> 
> int main(int argc,char *argv[])
> {
>     GEOSGeometry *collection;
>     GEOSGeometry *unaryunion;
>     GEOSWKTWriter *writer;
>     FILE *output;
>     int g;
> 
>     initGEOS(printf,printf);
> 
>     collection = load_shapefile_as_collection(argv[1]);
> 
>     unaryunion = GEOSUnaryUnion(collection);
> 
> }

From pa.leroux at gmail.com  Fri Oct 26 06:25:48 2012
From: pa.leroux at gmail.com (Pascal Leroux)
Date: Fri, 26 Oct 2012 15:25:48 +0200
Subject: [geos-devel] GEOSUnaryUnion performances
In-Reply-To: <20121026091418.GD3601@gnash>
References: <CAP87X37Gdq1p2DXkjYXCee_Z-3vK4p2NJL3TO-+eTuOJHcdC=Q@mail.gmail.com>
	<20121026091418.GD3601@gnash>
Message-ID: <CAP87X37J2BqB_kb+ErY4dWkWs2rL3KLvBCiLn4o_eOXd2TsiJg@mail.gmail.com>

Hi Sandro,

2012/10/26 Sandro Santilli <strk at keybit.net>

> Did you profile only the GEOSUnaryUnion call or the whole script ?
> Could you break profiling into components ?
>

Loading the shapefile is not included in the 50 seconds. In the real code,
there was the C instruction system("date") before and after the
GEOSUnaryUnion call.


> Also can you use the latest development version ?
>
>
I've downloaded and installed the version 3.3.5. It doesn't change anything

[pascal:GraphePlanaire] ./unary_union troncon_de_route.
Ven 26 oct 2012 15:03:16 CEST
Ven 26 oct 2012 15:04:00 CEST



> Finally: if any robustness issue is encountered, the union will be
> tried again after performing costly snapping operations, so it would
> be interesting to see if either GEOS or JTS is getting any of that
> (will take adding or enabling debugging lines in the code).
>
> It'll help to make very sure the two engines do start from the same
> geometries. WKB would be the best way to get that.
> You can also produce an XML based tester as input, which would then be
> used by both JTS testrunner and GEOS XMLTestRunner scripts, for easier
> comparison. HEXWKB would be supported there.
>
>
In attached file : the zipped result of (Pyhton instructions)

>>> # linestrings = list of LineString geometries I've used
... wkb = open('linstrings.wkb','w')
>>> for ls in linestrings:
...     print >> wkb, ls.wkb.encode('hex')
...
>>> wkb.closed()



> --strk;
>
> On Fri, Oct 26, 2012 at 10:00:27AM +0200, Pascal Leroux wrote:
> > Hi everyone,
> >
> > I want to build a planar graph with a large set of LineString geometries.
> > When I use OpenJump, it takes 3 or 4 seconds to determine and create the
> > edges of the graph. I took a look at JTS source code and this calculation
> > is based on the class UnaryUnionOp .
> >
> > I have tried to do the same thing in Python (Shapely) with unary_union
> (new
> > in release 1.2.16, thanks Sean) and in C (geos C API) with GEOSUnaryUnion
> > (GEOS_MULTILINESTRING or GEOS_GEOMETRYCOLLECTION geometry types).
> >
> > With the same input data, I have got the same results but it takes about
> 50
> > seconds (in C, 1 or 2 seconds more in Python).
> >
> > Can anyone explain the differences ?
> >
> > I use the release 3.3.3 of geos , on Mac OS X (10.6, Snow Leopard).
> >
> > Here is the code I used to do tests in C :
> >
> > #include <stdio.h>
> > #include <stdlib.h>
> > #include <assert.h>
> > #include <geos_c.h>
> > #include "shapefil.h"
> >
> > GEOSGeometry *SHPObject_to_LineString(SHPObject *object)
> > {
> >     GEOSCoordSequence *coords = GEOSCoordSeq_create(object->nVertices,2);
> >     int i;
> >
> >     assert(object->nParts == 1);
> >     for (i=0; i<object->nVertices; i++)
> >     {
> >         GEOSCoordSeq_setX(coords,i,object->padfX[i]);
> >         GEOSCoordSeq_setY(coords,i,object->padfY[i]);
> >     }
> >     return GEOSGeom_createLineString(coords);
> > }
> >
> > GEOSGeometry *load_shapefile_as_collection(char *pathname)
> > {
> >     SHPHandle shape;
> >     int type, nobjs, i;
> >     double minBounds[4], maxBounds[4];
> >     GEOSGeometry **geometries;
> >     GEOSGeometry *collection;
> >
> >     shape = SHPOpen(pathname,"rb");
> >
> >     SHPGetInfo(shape,&nobjs,&type,minBounds,maxBounds);
> >     assert((type % 10) == SHPT_ARC);
> >
> >     assert(geometries = malloc(nobjs*sizeof(GEOSGeometry *)));
> >
> >     for (i=0; i<nobjs ;i++)
> >     {
> >         SHPObject *object = SHPReadObject(shape,i);
> >         geometries[i] = SHPObject_to_LineString(object);
> >     }
> >
> >     SHPClose(shape);
> >
> >     collection = GEOSGeom_createCollection(GEOS_GEOMETRYCOLLECTION,
> > geometries, nobjs);
> >     // collection = GEOSGeom_createCollection(GEOS_MULTILINESTRING,
> > geometries, nobjs);
> >
> >     return collection;
> > }
> >
> >
> > int main(int argc,char *argv[])
> > {
> >     GEOSGeometry *collection;
> >     GEOSGeometry *unaryunion;
> >     GEOSWKTWriter *writer;
> >     FILE *output;
> >     int g;
> >
> >     initGEOS(printf,printf);
> >
> >     collection = load_shapefile_as_collection(argv[1]);
> >
> >     unaryunion = GEOSUnaryUnion(collection);
> >
> > }
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20121026/fa332bbc/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: linestrings.wkb.zip
Type: application/zip
Size: 917377 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20121026/fa332bbc/attachment-0001.zip>

From strk at keybit.net  Fri Oct 26 06:58:21 2012
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 26 Oct 2012 15:58:21 +0200
Subject: [geos-devel] GEOSUnaryUnion performances
In-Reply-To: <CAP87X37J2BqB_kb+ErY4dWkWs2rL3KLvBCiLn4o_eOXd2TsiJg@mail.gmail.com>
References: <CAP87X37Gdq1p2DXkjYXCee_Z-3vK4p2NJL3TO-+eTuOJHcdC=Q@mail.gmail.com>
	<20121026091418.GD3601@gnash>
	<CAP87X37J2BqB_kb+ErY4dWkWs2rL3KLvBCiLn4o_eOXd2TsiJg@mail.gmail.com>
Message-ID: <20121026135821.GL3601@gnash>

I confirm there's a speed difference.
JTS completes in 12 seconds here, while GEOS takes 40.
It's not expected, no.
Want to put it under a profiler to see what's going on ?

I tried with GEOS trunk (3.4.0-dev) and JTS from September 2012.
There was no robustness issue involved.

--strk;

