From mateusz at loskot.net  Wed Oct  4 20:58:59 2006
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Missing inclusion guard in geos_c.h
Message-ID: <452458D3.1020504@loskot.net>

Hi,

Sandro, is this intentional there is no inclusion
guard in the geos_c.h header?

http://svn.refractions.net/geos/trunk/capi/geos_c.h.in

When the file is included more than once, it causes compiler errors.


Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From strk at refractions.net  Thu Oct  5 04:27:43 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Missing inclusion guard in geos_c.h
In-Reply-To: <452458D3.1020504@loskot.net>
References: <452458D3.1020504@loskot.net>
Message-ID: <20061005082743.GA34625@keybit.net>

On Thu, Oct 05, 2006 at 02:58:59AM +0200, Mateusz Loskot wrote:
> Hi,
> 
> Sandro, is this intentional there is no inclusion
> guard in the geos_c.h header?

Nope, it's a bug.
--strk;

From mateusz at loskot.net  Thu Oct  5 08:03:08 2006
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Missing inclusion guard in geos_c.h
In-Reply-To: <20061005082743.GA34625@keybit.net>
References: <452458D3.1020504@loskot.net> <20061005082743.GA34625@keybit.net>
Message-ID: <4524F47C.6040708@loskot.net>

strk@refractions.net wrote:
> On Thu, Oct 05, 2006 at 02:58:59AM +0200, Mateusz Loskot wrote:
>> Hi,
>>
>> Sandro, is this intentional there is no inclusion
>> guard in the geos_c.h header?
> 
> Nope, it's a bug.

Fixed, in r1858.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From warmerdam at pobox.com  Fri Oct 13 00:40:24 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Solaris build problems with GEOS 3.0.0 RC1
Message-ID: <452F18B8.30309@pobox.com>

Folks,

I have file a bug report with suggested changes for build problems on
Solaris with RC1.

   http://postgis.refractions.net/bugs/bug.php?op=show&bugid=118&pos=26

John Graham or I would be happy to test build an RC2 on this system when
you think the fixes are applied.  If needed I can provide more details.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org


From strk at refractions.net  Fri Oct 13 03:55:11 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Solaris build problems with GEOS 3.0.0 RC1
In-Reply-To: <452F18B8.30309@pobox.com>
References: <452F18B8.30309@pobox.com>
Message-ID: <20061013075511.GC83232@keybit.net>

FOr issue 1) I have a pending commit (svn seems to be having
problems). For issue 2 (classes renaming) I would think that'd
be a libtool job to rename as appropriate. It doses rename on
my system. Could you try updatin libtool ?

--strk;

On Fri, Oct 13, 2006 at 12:40:24AM -0400, Frank Warmerdam wrote:
> Folks,
> 
> I have file a bug report with suggested changes for build problems on
> Solaris with RC1.
> 
>   http://postgis.refractions.net/bugs/bug.php?op=show&bugid=118&pos=26
> 
> John Graham or I would be happy to test build an RC2 on this system when
> you think the fixes are applied.  If needed I can provide more details.
> 
> Best regards,

From warmerdam at pobox.com  Fri Oct 13 11:47:18 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Solaris build problems with GEOS 3.0.0 RC1
In-Reply-To: <20061013075511.GC83232@keybit.net>
References: <452F18B8.30309@pobox.com> <20061013075511.GC83232@keybit.net>
Message-ID: <452FB506.2080602@pobox.com>

strk@refractions.net wrote:
> FOr issue 1) I have a pending commit (svn seems to be having
> problems). For issue 2 (classes renaming) I would think that'd
> be a libtool job to rename as appropriate. It doses rename on
> my system. Could you try updatin libtool ?

Strk,

My understanding is that the geos distribution uses the libtool version
in the .tar file, not a system libtool.  Isn't that right?  If so, it seems
the system on which the geos distribution is generated might be the one
that needs to be updated - if newer libtool's do indeed take care of
renaming.

In any event, I think having "same named" object files going into a library
is a risky practice, and may cause problems on some systems. For instance
putting .obj files into a .lib file on win32 (though I think it does not
affect our current .dll generation).

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org


From strk at refractions.net  Tue Oct 17 05:08:30 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Solaris build problems with GEOS 3.0.0 RC1
In-Reply-To: <452FB506.2080602@pobox.com>
References: <452F18B8.30309@pobox.com> <20061013075511.GC83232@keybit.net>
	<452FB506.2080602@pobox.com>
Message-ID: <20061017090830.GB62545@keybit.net>

On Fri, Oct 13, 2006 at 11:47:18AM -0400, Frank Warmerdam wrote:
> strk@refractions.net wrote:
> >FOr issue 1) I have a pending commit (svn seems to be having
> >problems). For issue 2 (classes renaming) I would think that'd
> >be a libtool job to rename as appropriate. It doses rename on
> >my system. Could you try updatin libtool ?
> 
> Strk,
> 
> My understanding is that the geos distribution uses the libtool version
> in the .tar file, not a system libtool.  Isn't that right?  If so, it seems
> the system on which the geos distribution is generated might be the one
> that needs to be updated - if newer libtool's do indeed take care of
> renaming.
> 
> In any event, I think having "same named" object files going into a library
> is a risky practice, and may cause problems on some systems. For instance
> putting .obj files into a .lib file on win32 (though I think it does not
> affect our current .dll generation).

I've finally committed the Makefile.am patch (issue 1).
The rename of classes was performed to more closely track JTS 
naming. I'd try updating the libtool on the refractions' machine
that creates the distribution/snapshot and see what happen.
Paul ?

--strk;


From warmerdam at pobox.com  Tue Oct 17 13:12:18 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:53:26 2007
Subject: [geos-devel] Solaris build problems with GEOS 3.0.0 RC1
In-Reply-To: <20061017090830.GB62545@keybit.net>
References: <452F18B8.30309@pobox.com> <20061013075511.GC83232@keybit.net>
	<452FB506.2080602@pobox.com> <20061017090830.GB62545@keybit.net>
Message-ID: <45350EF2.5020000@pobox.com>

strk@refractions.net wrote:
> I've finally committed the Makefile.am patch (issue 1).
> The rename of classes was performed to more closely track JTS 
> naming. I'd try updating the libtool on the refractions' machine
> that creates the distribution/snapshot and see what happen.
> Paul ?
> 

Strk,

I have confirmed that autogen'ing with libtool 1.5.22 seems to resolve
the second problem with conflicting file names.

Paul - if you could update the dist building system to libtool 1.5.22
before RC2 that would be appreciated.

(bug 118 reassigned to paul)

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org


From strk at refractions.net  Fri Oct 20 05:55:48 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] Re: [postgis-users] GEOS3 RC1 -Crash with Buffer
	function
In-Reply-To: <00cf01c6f3b6$224d3340$2314a8c0@bender.local>
References: <453703AF.8090002@yahoo.fr>
	<00cf01c6f3b6$224d3340$2314a8c0@bender.local>
Message-ID: <20061020095548.GD28825@keybit.net>

On Thu, Oct 19, 2006 at 09:38:20PM +0200, Rene Neidt wrote:
> Hello Users,
> We have found a crash using Geos3 (yes, i known, it's only a RC1)
> See attachment, this statement Works in geos2.x.

Thanks, I confirm it's a GEOS bug. Attached an XML test
for regression.

--strk;
-------------- next part --------------
<run>
  <!--precisionModel scale="1.0" offsetx="0.0" offsety="0.0"/-->
  <precisionModel type="FLOATING" />
<case><desc>Case #</desc>
<a>

</a>
<test>
<op name="buffer" arg1="a" arg3="0">

</op>
</test>
</case>
</run>
From strk at refractions.net  Fri Oct 20 07:50:42 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] Re: [postgis-users] GEOS3 RC1 -Crash with Buffer
	function
In-Reply-To: <20061020095548.GD28825@keybit.net>
References: <453703AF.8090002@yahoo.fr>
	<00cf01c6f3b6$224d3340$2314a8c0@bender.local>
	<20061020095548.GD28825@keybit.net>
Message-ID: <20061020115042.GG28825@keybit.net>

The bug has been fixed in TRUNK, anyway note that your input
is invalid, and the test I attached won't pass ...

--strk;

On Fri, Oct 20, 2006 at 11:55:48AM +0200, strk@refractions.net wrote:
> On Thu, Oct 19, 2006 at 09:38:20PM +0200, Rene Neidt wrote:
> > Hello Users,
> > We have found a crash using Geos3 (yes, i known, it's only a RC1)
> > See attachment, this statement Works in geos2.x.
> 
> Thanks, I confirm it's a GEOS bug. Attached an XML test
> for regression.
> 
> --strk;

From strk at refractions.net  Thu Oct 26 05:52:49 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] GEOS-RC1 CAPI *header* broke 64bit systems
Message-ID: <20061026095249.GE33244@keybit.net>

This mail is just a warning for anyone that might have built
any GEOS client against GEOS-RC1.

The CAPI header file (geos_c.h) was bogus in RC1 as it was advertising
some functions as dealing with 'size_t' types where the underlying
library really expected 'int' types.
On hosts where 'size_t' is of different size then 'int' there are
pending troubles.

Bugs would only show IFF a client is really passing/expecting a 'size_t'
rather then an 'int'. This can happen if either the compiler performs
automatic conversion, of if client developers blindly changed the
calls to match the GEOS-CAPI header (the latter was the case 
for PostGIS-1.1.5).

Note that if you didn't recompile your client against GEOS-3.0.0-RC1
CAPI everything is fine, as the CAPI library *binary* interface hasn't
changed.

Any build against a prior version of the GEOS-CAPI will still work
with GEOS-3.0.0-RC1. RC2 (and current TRUNK) contain a fix in the
header, so if you build against it everything should be fine.

--strk;

From schabi at logix-tt.com  Thu Oct 26 07:05:19 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
Message-ID: <4540966F.3040203@logix-tt.com>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20061026/a18871e6/signature.bin
From strk at refractions.net  Thu Oct 26 07:11:28 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
In-Reply-To: <4540966F.3040203@logix-tt.com>
References: <4540966F.3040203@logix-tt.com>
Message-ID: <20061026111128.GI33244@keybit.net>

On Thu, Oct 26, 2006 at 01:05:19PM +0200, Markus Schaber wrote:
> Hi,
> 
> In order to automatically capture diversions between capi/geos_c.cpp and
> capi/geos_c.h, I applied the attached patch to geos.
> 
> Apart from being an ugly hack that I don't want to see applied
> permanently, it tells us that most remaining differences seem to be
> signed vs. unsigned char, and const declaration.
> 
> Should those be fixed? And can we come up with a better scheme to
> automatically catch diversions of those files?

I'd rather see this applied permanently, unless you see any
drawback (I assume you also get rid of all prototypes in the
.cpp file).

I think we can fix const vs. unconst and signed vs. unsigned,
witout fear of breaks. IIRC the problem with signed vs. unsigned
was with function returning -1 on exception. Those would force
callers to cast to signed for checking...

--strk;

From schabi at logix-tt.com  Thu Oct 26 07:17:55 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
In-Reply-To: <20061026111128.GI33244@keybit.net>
References: <4540966F.3040203@logix-tt.com> <20061026111128.GI33244@keybit.net>
Message-ID: <45409963.6020000@logix-tt.com>

Hi, Strk,

strk@refractions.net wrote:

>> In order to automatically capture diversions between capi/geos_c.cpp and
>> capi/geos_c.h, I applied the attached patch to geos.
>>
>> Apart from being an ugly hack that I don't want to see applied
>> permanently, it tells us that most remaining differences seem to be
>> signed vs. unsigned char, and const declaration.
>>
>> Should those be fixed? And can we come up with a better scheme to
>> automatically catch diversions of those files?
> 
> I'd rather see this applied permanently, unless you see any
> drawback (I assume you also get rid of all prototypes in the
> .cpp file).

Yes, getting rid of all those prototypes would be worth the effort, I think.

But we will need get more intrusive this way, including some
preprocessor magic in geos_c.h, to avoid
geos_c.h:72: error: expected unqualified-id before '{' token

This is the first error that's spit out. This and the '#define's are the
main cause why I regard that patch as an ugly hack. :-)

> I think we can fix const vs. unconst and signed vs. unsigned,
> witout fear of breaks. IIRC the problem with signed vs. unsigned
> was with function returning -1 on exception. Those would force
> callers to cast to signed for checking...

We should fix geos_c.cpp to provide whatever geos_c.h tells, to keep
compatibility with clients, possibly using (ugly) casts in geos_c.cpp.

C++ is more picky about those issues than C, I'm afraid.

HTH,
Markus
-- 
Markus Schaber | Logical Tracking&Tracing International AG
Dipl. Inf.     | Software Development GIS

Fight against software patents in Europe! www.ffii.org
www.nosoftwarepatents.org

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20061026/4945d041/signature.bin
From lists.paulselormey at gmail.com  Thu Oct 26 08:44:13 2006
From: lists.paulselormey at gmail.com (Paul Selormey)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] The new improvements?
Message-ID: <250a9eb60610260544q3dcf8d84sbaed29b812ca9537@mail.gmail.com>

GEOS 3.x is said to be added some improvements over JTS. Where do we
look for these improvements or which file contain them?

Best regards,
Paul.

From schabi at logix-tt.com  Thu Oct 26 10:02:43 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
In-Reply-To: <45409963.6020000@logix-tt.com>
References: <4540966F.3040203@logix-tt.com> <20061026111128.GI33244@keybit.net>
	<45409963.6020000@logix-tt.com>
Message-ID: <4540C003.2020407@logix-tt.com>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20061026/56bb0d7a/signature.bin
From schabi at logix-tt.com  Fri Oct 27 05:59:09 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
In-Reply-To: <4540C003.2020407@logix-tt.com>
References: <4540966F.3040203@logix-tt.com>
	<20061026111128.GI33244@keybit.net>	<45409963.6020000@logix-tt.com>
	<4540C003.2020407@logix-tt.com>
Message-ID: <4541D86D.4000105@logix-tt.com>

Hi,

Markus Schaber wrote:

> I've attached a patch that should fix all differences between header and
> implementation in the C-API.
> 
> It compiles fine, but is not tested further.

Actually, my code compiled fine, but the patch was broken. Strk, thanks
for your note on IRC.

I had accidentally fixed the GEOSGeom typo in geos_c.h instead of
geos_c.h.in. And as geos_c.h is not removed in "make clean", only in
"make distclean", I did not notice.

Apply the following patch to the .diff file I sent (or correct
geos_c.h.in manually).

--- ../capi_unify.diff  2006-10-26 15:47:55.638568500 +0200
+++ ../capi_unify2.diff 2006-10-27 11:19:25.214624250 +0200
@@ -780,7 +780,7 @@

  typedef void (*GEOSMessageHandler)(const char *fmt, ...);
 +
-+#ifndef GEOSGEOM
++#ifndef GEOSGeom
  typedef struct GEOSGeom_t *GEOSGeom;
  typedef struct GEOSCoordSeq_t *GEOSCoordSeq;
 +#endif

The resulting code compiles fine, and seems to pass "make check" on i386
and AMD64.

But I get loads of messages like:
> Trying with original input.
> Did not run OverlayResultValidator as the precision model is not
> floating

Btw, it seems that "make check" does not include any C-API tests...

HTH,
Markus
-- 
Markus Schaber | Logical Tracking&Tracing International AG
Dipl. Inf.     | Software Development GIS

Fight against software patents in Europe! www.ffii.org
www.nosoftwarepatents.org

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20061027/36f2a0e4/signature.bin
From strk at refractions.net  Fri Oct 27 06:21:45 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
In-Reply-To: <4541D86D.4000105@logix-tt.com>
References: <4540966F.3040203@logix-tt.com> <20061026111128.GI33244@keybit.net>
	<45409963.6020000@logix-tt.com> <4540C003.2020407@logix-tt.com>
	<4541D86D.4000105@logix-tt.com>
Message-ID: <20061027102145.GC68811@keybit.net>

On Fri, Oct 27, 2006 at 11:59:09AM +0200, Markus Schaber wrote:

> Apply the following patch to the .diff file I sent (or correct
> geos_c.h.in manually).

Ok, can you send a full ChangeLog entry for this please ?

> But I get loads of messages like:
> > Trying with original input.
> > Did not run OverlayResultValidator as the precision model is not
> > floating

It is expected, just a debugging message to remind us that overlay
operation are not validated in FIXED precision model...

> Btw, it seems that "make check" does not include any C-API tests...

Right... we should really think about adding some.
I dunno if TUT will be appropriated for this though. Mateusz ?

--strk;

From schabi at logix-tt.com  Fri Oct 27 06:37:27 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
In-Reply-To: <20061027102145.GC68811@keybit.net>
References: <4540966F.3040203@logix-tt.com>
	<20061026111128.GI33244@keybit.net>	<45409963.6020000@logix-tt.com>
	<4540C003.2020407@logix-tt.com>	<4541D86D.4000105@logix-tt.com>
	<20061027102145.GC68811@keybit.net>
Message-ID: <4541E167.3030600@logix-tt.com>

Hi, Strk,

strk@refractions.net wrote:

>> Apply the following patch to the .diff file I sent (or correct
>> geos_c.h.in manually).
> 
> Ok, can you send a full ChangeLog entry for this please ?

-- snip --

Changed the C-API implementation to actually include the header that's
included by the clients, this allows the compiler to check declarations
and implementation for consistency. On this trip, some small differences
(const, sign, bool) were fixed, and some const correctnes propagated
into core.

-- snap --

>> Btw, it seems that "make check" does not include any C-API tests...
> 
> Right... we should really think about adding some.
> I dunno if TUT will be appropriated for this though. Mateusz ?

There's a geostest binary built in the capi directory, but I don't know
whether that does any meaningful tests.

HTH,
Markus
-- 
Markus Schaber | Logical Tracking&Tracing International AG
Dipl. Inf.     | Software Development GIS

Fight against software patents in Europe! www.ffii.org
www.nosoftwarepatents.org

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20061027/e7d94ab1/signature.bin
From schabi at logix-tt.com  Fri Oct 27 07:46:03 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] C-API Header diversion
In-Reply-To: <4541E167.3030600@logix-tt.com>
References: <4540966F.3040203@logix-tt.com>	<20061026111128.GI33244@keybit.net>	<45409963.6020000@logix-tt.com>	<4540C003.2020407@logix-tt.com>	<4541D86D.4000105@logix-tt.com>	<20061027102145.GC68811@keybit.net>
	<4541E167.3030600@logix-tt.com>
Message-ID: <4541F17B.1040302@logix-tt.com>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20061027/aca7dc6e/signature.bin
From schabi at logix-tt.com  Mon Oct 30 06:24:16 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] Open issues
Message-ID: <4545E0E0.7080000@logix-tt.com>

Hi,

I'm just trying to summarize our discussion on #postgis.

The open issues for GEOS seem to be:

- The enum GEOSGeomTypeId was renamed to GEOSGeomTypes - this
  might break compatibility with clients. Why was it done, and should
  it be reverted?

- Our "typedef struct GEOSGeom_t *GEOSGeom;" used in function arguments
  as "const GEOSGeom" actually defines an unmodifiable Pointer to a
  modifiable Geometry. This is the reason for those "type qualifiers
  ignored on return type" warnings.
  Possible solutions:
  - Include the "const" into the typedef, as the C-API does not expose
    any in-place modificators.
  - Remove the "*" from the typedef, and declare the Pointers explicitly
    in the function definitions
  We will have to dig into whether this might break any clients.

- The same for "typedef struct GEOSCoordSeq_t *GEOSCoordSeq;".

- Missing regression test for Polygonizer.

- Inclusion of capi/geostest into "make check".

Some of this issues might be critical enough to block 3.0.0 final.

I hope that I did not miss something.

HTH,
Markus

-- 
Markus Schaber | Logical Tracking&Tracing International AG
Dipl. Inf.     | Software Development GIS

Fight against software patents in Europe! www.ffii.org
www.nosoftwarepatents.org

From strk at refractions.net  Mon Oct 30 08:29:55 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] Open issues
In-Reply-To: <4545E0E0.7080000@logix-tt.com>
References: <4545E0E0.7080000@logix-tt.com>
Message-ID: <20061030132955.GA31524@keybit.net>

On Mon, Oct 30, 2006 at 12:24:16PM +0100, Markus Schaber wrote:
> Hi,
> 
> I'm just trying to summarize our discussion on #postgis.
> 
> The open issues for GEOS seem to be:
> 
> - The enum GEOSGeomTypeId was renamed to GEOSGeomTypes - this
>   might break compatibility with clients. Why was it done, and should
>   it be reverted?

Reason for modification was clash with a function name:
http://lists.refractions.net/pipermail/geos-devel/2006-July/002437.html

I guess nobody was using the enum by name, or would have noticed
the same problem as reported in that message, so hopefully
the change would also be source-level compatible with all existing
clients. As for binary compatibility there are no functions 
taking or returning by enum name (only int-returning function)
so there should be no problem.

> - Our "typedef struct GEOSGeom_t *GEOSGeom;" used in function arguments
>   as "const GEOSGeom" actually defines an unmodifiable Pointer to a
>   modifiable Geometry. This is the reason for those "type qualifiers
>   ignored on return type" warnings.
>   Possible solutions:
>   - Include the "const" into the typedef, as the C-API does not expose
>     any in-place modificators.
>   - Remove the "*" from the typedef, and declare the Pointers explicitly
>     in the function definitions
>   We will have to dig into whether this might break any clients.

I'd like to hear opinion of others on this.
Making the pointer part visible is probably the cleanest thing to do,
but clients will suffer from this. Maybe should *add* new typedefs
so that old clients will still work w/out  modification but new code
can use the new typedefs ?

> - The same for "typedef struct GEOSCoordSeq_t *GEOSCoordSeq;".

CoordSeq has mutator so one of the options above is unavailable.

> - Missing regression test for Polygonizer.

We really need this 

> - Inclusion of capi/geostest into "make check".

geostest run was included in 'make check', but it's a very lame approach
(diff against an expected output - where output sliglty changes between
hosts - floats hell)


--strk;

From schabi at logix-tt.com  Mon Oct 30 11:01:03 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] Open issues
In-Reply-To: <20061030132955.GA31524@keybit.net>
References: <4545E0E0.7080000@logix-tt.com> <20061030132955.GA31524@keybit.net>
Message-ID: <454621BF.3020108@logix-tt.com>

Hi, Strk,

strk@refractions.net wrote:

>> - Our "typedef struct GEOSGeom_t *GEOSGeom;" used in function arguments
>>   as "const GEOSGeom" actually defines an unmodifiable Pointer to a
>>   modifiable Geometry. This is the reason for those "type qualifiers
>>   ignored on return type" warnings.
>>   Possible solutions:
>>   - Include the "const" into the typedef, as the C-API does not expose
>>     any in-place modificators.
>>   - Remove the "*" from the typedef, and declare the Pointers explicitly
>>     in the function definitions
>>   We will have to dig into whether this might break any clients.
> 
> I'd like to hear opinion of others on this.
> Making the pointer part visible is probably the cleanest thing to do,
> but clients will suffer from this. Maybe should *add* new typedefs
> so that old clients will still work w/out  modification but new code
> can use the new typedefs ?

The attached Patch is a first try of follwing this path. But it causes
clients (geostest, to be exactly) to throw scary warnings, and I assume
that fixing those warnings in the clients will break source
compatibility with GEOS 2.X.

HTH,
Markus

-- 
Markus Schaber | Logical Tracking&Tracing International AG
Dipl. Inf.     | Software Development GIS

Fight against software patents in Europe! www.ffii.org
www.nosoftwarepatents.org
-------------- next part --------------
Index: capi/geos_c.cpp
===================================================================
--- capi/geos_c.cpp	(revision 1887)
+++ capi/geos_c.cpp	(working copy)
@@ -51,8 +51,8 @@
 #include <memory>
 
 // Some extra magic to make type declarations in geos_c.h work - for cross-checking of types in header.
-#define GEOSGeom geos::geom::Geometry*
-#define GEOSCoordSeq geos::geom::CoordinateSequence*
+#define GEOSGeometry geos::geom::Geometry
+#define GEOSCoordSequence geos::geom::CoordinateSequence
 #include "geos_c.h"
 
 /// Define this if you want operations triggering Exceptions to
Index: capi/geos_c.h.in
===================================================================
--- capi/geos_c.h.in	(revision 1887)
+++ capi/geos_c.h.in	(working copy)
@@ -72,11 +72,17 @@
  * C-API users, we need to define them as "opaque" struct pointers, as 
  * those clients don't have access to the original C++ headers, by design.
  */
-#ifndef GEOSGeom
-typedef struct GEOSGeom_t *GEOSGeom;
-typedef struct GEOSCoordSeq_t *GEOSCoordSeq;
+#ifndef GEOSGeometry
+typedef struct GEOSGeom_t GEOSGeometry;
+typedef struct GEOSCoordSeq_t GEOSCoordSequence;
 #endif
 
+/* Those are compatibility definitions for source compatibility
+ * with GEOS 2.X clients relying on that type.
+ */
+typedef GEOSGeometry* GEOSGeom;
+typedef GEOSCoordSequence* GEOSCoordSeq;
+
 /* Supported geometry types
  * This was renamed from GEOSGeomTypeId in GEOS 2.2.X, which might
  * break compatibility, this issue is still under investigation.
@@ -124,8 +130,8 @@
  *
  ***********************************************************************/
 
-extern GEOSGeom GEOS_DLL GEOSGeomFromWKT(const char *wkt);
-extern char GEOS_DLL *GEOSGeomToWKT(const GEOSGeom g);
+extern GEOSGeometry* GEOS_DLL GEOSGeomFromWKT(const char *wkt);
+extern char GEOS_DLL *GEOSGeomToWKT(const GEOSGeometry* g);
 
 /*
  * Specify whether output WKB should be 2d or 3d.
@@ -141,11 +147,11 @@
 extern int GEOS_DLL GEOS_getWKBByteOrder();
 extern int GEOS_DLL GEOS_setWKBByteOrder(int byteOrder);
 
-extern GEOSGeom GEOS_DLL GEOSGeomFromWKB_buf(const unsigned char *wkb, size_t size);
-extern unsigned char GEOS_DLL *GEOSGeomToWKB_buf(const GEOSGeom g, size_t *size);
+extern GEOSGeometry* GEOS_DLL GEOSGeomFromWKB_buf(const unsigned char *wkb, size_t size);
+extern unsigned char GEOS_DLL *GEOSGeomToWKB_buf(const GEOSGeometry* g, size_t *size);
 
-extern GEOSGeom GEOS_DLL GEOSGeomFromHEX_buf(const unsigned char *hex, size_t size);
-extern unsigned char GEOS_DLL *GEOSGeomToHEX_buf(const GEOSGeom g, size_t *size);
+extern GEOSGeometry* GEOS_DLL GEOSGeomFromHEX_buf(const unsigned char *hex, size_t size);
+extern unsigned char GEOS_DLL *GEOSGeomToHEX_buf(const GEOSGeometry* g, size_t *size);
 
 /************************************************************************
  *
@@ -158,78 +164,78 @@
  * of ``dims'' dimensions.
  * Return NULL on exception.
  */
-extern GEOSCoordSeq GEOS_DLL GEOSCoordSeq_create(unsigned int size, unsigned int dims);
+extern GEOSCoordSequence* GEOS_DLL GEOSCoordSeq_create(unsigned int size, unsigned int dims);
 
 /*
  * Clone a Coordinate Sequence.
  * Return NULL on exception.
  */
-extern GEOSCoordSeq GEOS_DLL GEOSCoordSeq_clone(const GEOSCoordSeq s);
+extern GEOSCoordSequence* GEOS_DLL GEOSCoordSeq_clone(const GEOSCoordSequence* s);
 
 /*
  * Destroy a Coordinate Sequence.
  */
-extern void GEOS_DLL GEOSCoordSeq_destroy(GEOSCoordSeq s);
+extern void GEOS_DLL GEOSCoordSeq_destroy(GEOSCoordSequence* s);
 
 /*
  * Set ordinate values in a Coordinate Sequence.
  * Return 0 on exception.
  */
-extern int GEOS_DLL GEOSCoordSeq_setX(GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_setX(GEOSCoordSequence* s,
 	unsigned int idx, double val);
-extern int GEOS_DLL GEOSCoordSeq_setY(GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_setY(GEOSCoordSequence* s,
 	unsigned int idx, double val);
-extern int GEOS_DLL GEOSCoordSeq_setZ(GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_setZ(GEOSCoordSequence* s,
 	unsigned int idx, double val);
-extern int GEOS_DLL GEOSCoordSeq_setOrdinate(GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_setOrdinate(GEOSCoordSequence* s,
 	unsigned int idx, unsigned int dim, double val);
 
 /*
  * Get ordinate values from a Coordinate Sequence.
  * Return 0 on exception.
  */
-extern int GEOS_DLL GEOSCoordSeq_getX(const GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_getX(const GEOSCoordSequence* s,
 	unsigned int idx, double *val);
-extern int GEOS_DLL GEOSCoordSeq_getY(const GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_getY(const GEOSCoordSequence* s,
 	unsigned int idx, double *val);
-extern int GEOS_DLL GEOSCoordSeq_getZ(const GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_getZ(const GEOSCoordSequence* s,
 	unsigned int idx, double *val);
-extern int GEOS_DLL GEOSCoordSeq_getOrdinate(const GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_getOrdinate(const GEOSCoordSequence* s,
 	unsigned int idx, unsigned int dim, double *val);
 
 /*
  * Get size and dimensions info from a Coordinate Sequence.
  * Return 0 on exception.
  */
-extern int GEOS_DLL GEOSCoordSeq_getSize(const GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_getSize(const GEOSCoordSequence* s,
 	unsigned int *size);
-extern int GEOS_DLL GEOSCoordSeq_getDimensions(const GEOSCoordSeq s,
+extern int GEOS_DLL GEOSCoordSeq_getDimensions(const GEOSCoordSequence* s,
 	unsigned int *dims);
 
 
 /************************************************************************
  *
  * Geometry Constructors.
- * GEOSCoordSeq arguments will become ownership of the returned object.
+ * GEOSCoordSequence* arguments will become ownership of the returned object.
  * All functions return NULL on exception.
  *
  ***********************************************************************/
 
-extern GEOSGeom GEOS_DLL GEOSGeom_createPoint(GEOSCoordSeq s);
-extern GEOSGeom GEOS_DLL GEOSGeom_createLinearRing(GEOSCoordSeq s);
-extern GEOSGeom GEOS_DLL GEOSGeom_createLineString(GEOSCoordSeq s);
+extern GEOSGeometry* GEOS_DLL GEOSGeom_createPoint(GEOSCoordSequence* s);
+extern GEOSGeometry* GEOS_DLL GEOSGeom_createLinearRing(GEOSCoordSequence* s);
+extern GEOSGeometry* GEOS_DLL GEOSGeom_createLineString(GEOSCoordSequence* s);
 
 /*
- * Second argument is an array of GEOSGeom objects.
+ * Second argument is an array of GEOSGeometry* objects.
  * The caller remains owner of the array, but pointed-to
- * objects become ownership of the returned GEOSGeom.
+ * objects become ownership of the returned GEOSGeometry.
  */
-extern GEOSGeom GEOS_DLL GEOSGeom_createPolygon(GEOSGeom shell,
-	GEOSGeom *holes, unsigned int nholes);
-extern GEOSGeom GEOS_DLL GEOSGeom_createCollection(int type,
-	GEOSGeom *geoms, unsigned int ngeoms);
+extern GEOSGeometry* GEOS_DLL GEOSGeom_createPolygon(GEOSGeometry* shell,
+	GEOSGeometry* *holes, unsigned int nholes);
+extern GEOSGeometry* GEOS_DLL GEOSGeom_createCollection(int type,
+	GEOSGeometry* *geoms, unsigned int ngeoms);
 
-extern GEOSGeom GEOS_DLL GEOSGeom_clone(const GEOSGeom g);
+extern GEOSGeometry* GEOS_DLL GEOSGeom_clone(const GEOSGeometry* g);
 
 /************************************************************************
  *
@@ -237,7 +243,7 @@
  *
  ***********************************************************************/
 
-extern void GEOS_DLL GEOSGeom_destroy(GEOSGeom g);
+extern void GEOS_DLL GEOSGeom_destroy(GEOSGeometry* g);
 
 
 /************************************************************************
@@ -246,24 +252,24 @@
  *
  ***********************************************************************/
 
-extern GEOSGeom GEOS_DLL GEOSEnvelope(const GEOSGeom g1);
-extern GEOSGeom GEOS_DLL GEOSIntersection(const GEOSGeom g1, const GEOSGeom g2);
-extern GEOSGeom GEOS_DLL GEOSBuffer(const GEOSGeom g1,
+extern GEOSGeometry* GEOS_DLL GEOSEnvelope(const GEOSGeometry* g1);
+extern GEOSGeometry* GEOS_DLL GEOSIntersection(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern GEOSGeometry* GEOS_DLL GEOSBuffer(const GEOSGeometry* g1,
 	double width, int quadsegs);
-extern GEOSGeom GEOS_DLL GEOSConvexHull(const GEOSGeom g1);
-extern GEOSGeom GEOS_DLL GEOSDifference(const GEOSGeom g1, const GEOSGeom g2);
-extern GEOSGeom GEOS_DLL GEOSSymDifference(const GEOSGeom g1,
-	const GEOSGeom g2);
-extern GEOSGeom GEOS_DLL GEOSBoundary(const GEOSGeom g1);
-extern GEOSGeom GEOS_DLL GEOSUnion(const GEOSGeom g1, const GEOSGeom g2);
-extern GEOSGeom GEOS_DLL GEOSPointOnSurface(const GEOSGeom g1);
-extern GEOSGeom GEOS_DLL GEOSGetCentroid(const GEOSGeom g);
-extern char GEOS_DLL *GEOSRelate(const GEOSGeom g1, const GEOSGeom g2);
-extern GEOSGeom GEOS_DLL GEOSPolygonize(const GEOSGeom geoms[],
+extern GEOSGeometry* GEOS_DLL GEOSConvexHull(const GEOSGeometry* g1);
+extern GEOSGeometry* GEOS_DLL GEOSDifference(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern GEOSGeometry* GEOS_DLL GEOSSymDifference(const GEOSGeometry* g1,
+	const GEOSGeometry* g2);
+extern GEOSGeometry* GEOS_DLL GEOSBoundary(const GEOSGeometry* g1);
+extern GEOSGeometry* GEOS_DLL GEOSUnion(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern GEOSGeometry* GEOS_DLL GEOSPointOnSurface(const GEOSGeometry* g1);
+extern GEOSGeometry* GEOS_DLL GEOSGetCentroid(const GEOSGeometry* g);
+extern char GEOS_DLL *GEOSRelate(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern GEOSGeometry* GEOS_DLL GEOSPolygonize(const GEOSGeometry* geoms[],
 	unsigned int ngeoms);
-extern GEOSGeom GEOS_DLL GEOSLineMerge(const GEOSGeom g);
-extern GEOSGeom GEOS_DLL GEOSSimplify(const GEOSGeom g1, double tolerance);
-extern GEOSGeom GEOS_DLL GEOSTopologyPreserveSimplify(const GEOSGeom g1,
+extern GEOSGeometry* GEOS_DLL GEOSLineMerge(const GEOSGeometry* g);
+extern GEOSGeometry* GEOS_DLL GEOSSimplify(const GEOSGeometry* g1, double tolerance);
+extern GEOSGeometry* GEOS_DLL GEOSTopologyPreserveSimplify(const GEOSGeometry* g1,
 	double tolerance);
 
 /************************************************************************
@@ -272,17 +278,17 @@
  *
  ***********************************************************************/
 
-extern char GEOS_DLL GEOSRelatePattern(const GEOSGeom g1, const GEOSGeom g2,
+extern char GEOS_DLL GEOSRelatePattern(const GEOSGeometry* g1, const GEOSGeometry* g2,
 	const char *pat);
-extern char GEOS_DLL GEOSDisjoint(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSTouches(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSIntersects(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSCrosses(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSWithin(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSContains(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSOverlaps(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSEquals(const GEOSGeom g1, const GEOSGeom g2);
-extern char GEOS_DLL GEOSEqualsExact(const GEOSGeom g1, const GEOSGeom g2, double tolerance);
+extern char GEOS_DLL GEOSDisjoint(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSTouches(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSIntersects(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSCrosses(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSWithin(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSContains(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSOverlaps(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSEquals(const GEOSGeometry* g1, const GEOSGeometry* g2);
+extern char GEOS_DLL GEOSEqualsExact(const GEOSGeometry* g1, const GEOSGeometry* g2, double tolerance);
 
 
 /************************************************************************
@@ -291,11 +297,11 @@
  *
  ***********************************************************************/
 
-extern char GEOS_DLL GEOSisEmpty(const GEOSGeom g1);
-extern char GEOS_DLL GEOSisValid(const GEOSGeom g1);
-extern char GEOS_DLL GEOSisSimple(const GEOSGeom g1);
-extern char GEOS_DLL GEOSisRing(const GEOSGeom g1);
-extern char GEOS_DLL GEOSHasZ(const GEOSGeom g1);
+extern char GEOS_DLL GEOSisEmpty(const GEOSGeometry* g1);
+extern char GEOS_DLL GEOSisValid(const GEOSGeometry* g1);
+extern char GEOS_DLL GEOSisSimple(const GEOSGeometry* g1);
+extern char GEOS_DLL GEOSisRing(const GEOSGeometry* g1);
+extern char GEOS_DLL GEOSHasZ(const GEOSGeometry* g1);
 
 
 /************************************************************************
@@ -305,15 +311,15 @@
  ***********************************************************************/
 
 /* Return NULL on exception, result must be freed by caller. */
-extern char GEOS_DLL *GEOSGeomType(const GEOSGeom g1);
+extern char GEOS_DLL *GEOSGeomType(const GEOSGeometry* g1);
 
 /* Return -1 on exception */
-extern int GEOS_DLL GEOSGeomTypeId(const GEOSGeom g1);
+extern int GEOS_DLL GEOSGeomTypeId(const GEOSGeometry* g1);
 
 /* Return 0 on exception */
-extern int GEOS_DLL GEOSGetSRID(const GEOSGeom g1);
+extern int GEOS_DLL GEOSGetSRID(const GEOSGeometry* g1);
 
-extern void GEOS_DLL GEOSSetSRID(GEOSGeom g, int SRID);
+extern void GEOS_DLL GEOSSetSRID(GEOSGeometry* g, int SRID);
 
 /* May be called on all geometries in GEOS 3.x, returns -1 on error and 1
  * for non-multi geometries. Older GEOS versions only accept 
@@ -321,48 +327,48 @@
  * when feeded simple geometries, so beware if you need compatibility with
  * old GEOS versions.
  */
-extern int GEOS_DLL GEOSGetNumGeometries(const GEOSGeom g1);
+extern int GEOS_DLL GEOSGetNumGeometries(const GEOSGeometry* g1);
 
 /*
  * Return NULL on exception, Geometry must be a Collection.
  * Returned object is a pointer to internal storage:
  * it must NOT be destroyed directly.
  */
-extern const GEOSGeom GEOS_DLL GEOSGetGeometryN(const GEOSGeom g, int n);
+extern const GEOSGeometry* GEOS_DLL GEOSGetGeometryN(const GEOSGeometry* g, int n);
 
 /* Return -1 on exception */
-extern int GEOS_DLL GEOSNormalize(GEOSGeom g1);
+extern int GEOS_DLL GEOSNormalize(GEOSGeometry* g1);
 
 /* Return -1 on exception */
-extern int GEOS_DLL GEOSGetNumInteriorRings(const GEOSGeom g1);
+extern int GEOS_DLL GEOSGetNumInteriorRings(const GEOSGeometry* g1);
 
 /*
  * Return NULL on exception, Geometry must be a Polygon.
  * Returned object is a pointer to internal storage:
  * it must NOT be destroyed directly.
  */
-extern const GEOSGeom GEOS_DLL GEOSGetInteriorRingN(const GEOSGeom g, int n);
+extern const GEOSGeometry* GEOS_DLL GEOSGetInteriorRingN(const GEOSGeometry* g, int n);
 
 /*
  * Return NULL on exception, Geometry must be a Polygon.
  * Returned object is a pointer to internal storage:
  * it must NOT be destroyed directly.
  */
-extern const GEOSGeom GEOS_DLL GEOSGetExteriorRing(const GEOSGeom g);
+extern const GEOSGeometry* GEOS_DLL GEOSGetExteriorRing(const GEOSGeometry* g);
 
 /* Return -1 on exception */
-extern int GEOS_DLL GEOSGetNumCoordinates(const GEOSGeom g1);
+extern int GEOS_DLL GEOSGetNumCoordinates(const GEOSGeometry* g1);
 
 /*
  * Return NULL on exception.
  * Geometry must be a LineString, LinearRing or Point.
  */
-extern const GEOSCoordSeq GEOS_DLL GEOSGeom_getCoordSeq(const GEOSGeom g);
+extern const GEOSCoordSequence* GEOS_DLL GEOSGeom_getCoordSeq(const GEOSGeometry* g);
 
 /*
  * Return 0 on exception (or empty geometry)
  */
-extern int GEOS_DLL GEOSGeom_getDimensions(const GEOSGeom g);
+extern int GEOS_DLL GEOSGeom_getDimensions(const GEOSGeometry* g);
 
 /************************************************************************
  *
@@ -371,9 +377,9 @@
  ***********************************************************************/
 
 /* Return 0 on exception, 1 otherwise */
-extern int GEOS_DLL GEOSArea(const GEOSGeom g1, double *area);
-extern int GEOS_DLL GEOSLength(const GEOSGeom g1, double *length);
-extern int GEOS_DLL GEOSDistance(const GEOSGeom g1, const GEOSGeom g2,
+extern int GEOS_DLL GEOSArea(const GEOSGeometry* g1, double *area);
+extern int GEOS_DLL GEOSLength(const GEOSGeometry* g1, double *length);
+extern int GEOS_DLL GEOSDistance(const GEOSGeometry* g1, const GEOSGeometry* g2,
 	double *dist);
 
 #ifdef __cplusplus
From schabi at logix-tt.com  Mon Oct 30 11:07:57 2006
From: schabi at logix-tt.com (Markus Schaber)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] Open issues
In-Reply-To: <454621BF.3020108@logix-tt.com>
References: <4545E0E0.7080000@logix-tt.com> <20061030132955.GA31524@keybit.net>
	<454621BF.3020108@logix-tt.com>
Message-ID: <4546235D.5060909@logix-tt.com>

Hi, all,

Markus Schaber wrote:

> The attached Patch is a first try of follwing this path. But it causes
> clients (geostest, to be exactly) to throw scary warnings, and I assume
> that fixing those warnings in the clients will break source
> compatibility with GEOS 2.X.

As requested, here are those warnings:

geostest.c: In function 'fineGrainedReconstructionTest':
geostest.c:89: warning: assignment discards qualifiers from pointer
target type
geostest.c:96: warning: assignment discards qualifiers from pointer
target type
geostest.c:112: warning: assignment discards qualifiers from pointer
target type
geostest.c: In function 'do_all':
geostest.c:295: warning: passing argument 1 of 'GEOSPolygonize' from
incompatible pointer type

HTH,
Markus
-- 
Markus Schaber | Logical Tracking&Tracing International AG
Dipl. Inf.     | Software Development GIS

Fight against software patents in Europe! www.ffii.org
www.nosoftwarepatents.org

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20061030/27585f5f/signature.bin
From strk at refractions.net  Mon Oct 30 12:20:43 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] Open issues
In-Reply-To: <4546235D.5060909@logix-tt.com>
References: <4545E0E0.7080000@logix-tt.com> <20061030132955.GA31524@keybit.net>
	<454621BF.3020108@logix-tt.com> <4546235D.5060909@logix-tt.com>
Message-ID: <20061030172043.GA35884@keybit.net>

Have you tried runnign an already compiled postgis (compiled
against 2.2.3) with this new version of the CAPI ?
Have you tried *building* postgis against this new version 
of the CAPI ?

(the first 3 warnings seems actually good to me, the last one
haven't looked at more closely, but seems related to the wrong
'constness' we gave (to pointer instead of to object pointed to))

--strk;

On Mon, Oct 30, 2006 at 05:07:57PM +0100, Markus Schaber wrote:
> Hi, all,
> 
> Markus Schaber wrote:
> 
> > The attached Patch is a first try of follwing this path. But it causes
> > clients (geostest, to be exactly) to throw scary warnings, and I assume
> > that fixing those warnings in the clients will break source
> > compatibility with GEOS 2.X.
> 
> As requested, here are those warnings:
> 
> geostest.c: In function 'fineGrainedReconstructionTest':
> geostest.c:89: warning: assignment discards qualifiers from pointer
> target type
> geostest.c:96: warning: assignment discards qualifiers from pointer
> target type
> geostest.c:112: warning: assignment discards qualifiers from pointer
> target type
> geostest.c: In function 'do_all':
> geostest.c:295: warning: passing argument 1 of 'GEOSPolygonize' from
> incompatible pointer type
> 
> HTH,
> Markus
> -- 
> Markus Schaber | Logical Tracking&Tracing International AG
> Dipl. Inf.     | Software Development GIS
> 
> Fight against software patents in Europe! www.ffii.org
> www.nosoftwarepatents.org
> 



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From vamseejump at gmail.com  Mon Oct 30 12:50:04 2006
From: vamseejump at gmail.com (vamsee movva)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] can i ask questions related to postgresql spatial
	queries
Message-ID: <be5110d00610300950x40dbbd7chb1bd9de5ba841287@mail.gmail.com>

Hello all,
             I am using postgresql database with postgis support, i
understand postgis uses geos for geometrical calculations like contains(),
within() etc..
           I am faced some problems when i used these functions,
can i  ask for a help about them here?
Thanking you
vamsee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20061030/f6568b33/attachment.html
From strk at refractions.net  Mon Oct 30 13:23:46 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] can i ask questions related to postgresql spatial
	queries
In-Reply-To: <be5110d00610300950x40dbbd7chb1bd9de5ba841287@mail.gmail.com>
References: <be5110d00610300950x40dbbd7chb1bd9de5ba841287@mail.gmail.com>
Message-ID: <20061030182346.GB35884@keybit.net>

On Mon, Oct 30, 2006 at 11:50:04AM -0600, vamsee movva wrote:
> Hello all,
>             I am using postgresql database with postgis support, i
> understand postgis uses geos for geometrical calculations like contains(),
> within() etc..
>           I am faced some problems when i used these functions,
> can i  ask for a help about them here?

Don't ask to ask, just ask  :)
--strk;

From vamseejump at gmail.com  Mon Oct 30 14:33:20 2006
From: vamseejump at gmail.com (vamsee movva)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] can i ask questions related to postgresql spatial
	queries
In-Reply-To: <20061030182346.GB35884@keybit.net>
References: <be5110d00610300950x40dbbd7chb1bd9de5ba841287@mail.gmail.com>
	<20061030182346.GB35884@keybit.net>
Message-ID: <be5110d00610301133w3e953afekd81893d9d5f3d68c@mail.gmail.com>

Hello all,
           I am working with spatial tables  in postgresql with postgis
support. i have two spatial data tables, one represents the whole state and
another table represents the damaged locations in the state. My aim is to
find number of damaged locations in every county or parish.
Here i am giving the query i used to do this, could you please tell me
whether i am doing right thing or not.

"select count(*) from locations l1,county l2 where l1.the_geom &&
l2.the_geom and intersects(l2.the_geom,l1.the_geom) and l2.countyid= some
particular ID"

It gave some results, but i am not sure whether the query is correct or not,
I have one more problem with this query, this query taking lot of time
when some
particular ID ends with 9999(ex:220750501002999 ,xxxxxxx9999), do u have any
idea about this strange situation.

excuse my english and method of requesting for help if there are any errors.
Thanks in advance.
have a nice day
cheers
vamsee


On 10/30/06, strk@refractions.net <strk@refractions.net> wrote:
>
> On Mon, Oct 30, 2006 at 11:50:04AM -0600, vamsee movva wrote:
> > Hello all,
> >             I am using postgresql database with postgis support, i
> > understand postgis uses geos for geometrical calculations like
> contains(),
> > within() etc..
> >           I am faced some problems when i used these functions,
> > can i  ask for a help about them here?
>
> Don't ask to ask, just ask  :)
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20061030/73266b9e/attachment.html
From pramsey at refractions.net  Mon Oct 30 14:59:35 2006
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:53:27 2007
Subject: [geos-devel] can i ask questions related to postgresql spatial
	queries
In-Reply-To: <be5110d00610301133w3e953afekd81893d9d5f3d68c@mail.gmail.com>
References: <be5110d00610300950x40dbbd7chb1bd9de5ba841287@mail.gmail.com>
	<20061030182346.GB35884@keybit.net>
	<be5110d00610301133w3e953afekd81893d9d5f3d68c@mail.gmail.com>
Message-ID: <B5FB7EE8-CE78-44DD-892F-71A7E4E12F50@refractions.net>

Vamsee, this is more a PostGIS question than GEOS question so follow- 
up on postgis-users.

The query looks correct to me, what makes you think it is wrong?

The 9999 issue is certainly a symptom of something else, you might  
want to post the results of EXPLAIN ANALYZE on that query.

P

On 30-Oct-06, at 11:33 AM, vamsee movva wrote:

> Hello all,
>            I am working with spatial tables  in postgresql with  
> postgis support. i have two spatial data tables, one represents the  
> whole state and another table represents the damaged locations in  
> the state. My aim is to find number of damaged locations in every  
> county or parish.
> Here i am giving the query i used to do this, could you please tell  
> me whether i am doing right thing or not.
>
> "select count(*) from locations l1,county l2 where l1.the_geom &&  
> l2.the_geom and intersects(l2.the_geom,l1.the_geom) and  
> l2.countyid= some particular ID"
>
> It gave some results, but i am not sure whether the query is  
> correct or not,
> I have one more problem with this query, this query taking lot of  
> time when some particular ID ends with 9999(ex:220750501002999
> ,xxxxxxx9999), do u have any idea about this strange situation.
>
> excuse my english and method of requesting for help if there are  
> any errors.
> Thanks in advance.
> have a nice day
> cheers
> vamsee
>
>
> On 10/30/06, strk@refractions.net <strk@refractions.net> wrote:
> On Mon, Oct 30, 2006 at 11:50:04AM -0600, vamsee movva wrote:
> > Hello all,
> >             I am using postgresql database with postgis support, i
> > understand postgis uses geos for geometrical calculations like  
> contains(),
> > within() etc..
> >           I am faced some problems when i used these functions,
> > can i  ask for a help about them here?
>
> Don't ask to ask, just ask  :)
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20061030/d8a47fdb/attachment.html
