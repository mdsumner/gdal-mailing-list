From pramsey at cleverelephant.ca  Tue Sep  3 12:57:22 2024
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 3 Sep 2024 12:57:22 -0700
Subject: GEOS 3.13.0beta2 Available
Message-ID: <CBA3E55C-507D-4F37-8745-F0870F5056AF@cleverelephant.ca>

https://download.osgeo.org/geos/geos-3.13.0beta2.tar.bz2

If there are no bad comments I will release the final on Friday.

P.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20240903/19d5f904/attachment.htm>

From lr at pcorp.us  Tue Sep  3 13:00:49 2024
From: lr at pcorp.us (Regina Obe)
Date: Tue, 3 Sep 2024 16:00:49 -0400
Subject: GEOS 3.13.0beta2 Available
In-Reply-To: <CBA3E55C-507D-4F37-8745-F0870F5056AF@cleverelephant.ca>
References: <CBA3E55C-507D-4F37-8745-F0870F5056AF@cleverelephant.ca>
Message-ID: <002301dafe3b$f99ea420$ecdbec60$@pcorp.us>

+1 for release Friday

 

From: Paul Ramsey <pramsey at cleverelephant.ca> 
Sent: Tuesday, September 3, 2024 3:57 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: GEOS 3.13.0beta2 Available

 

https://download.osgeo.org/geos/geos-3.13.0beta2.tar.bz2

 

If there are no bad comments I will release the final on Friday.

 

P.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20240903/2d908413/attachment.htm>

From even.rouault at spatialys.com  Tue Sep  3 13:06:38 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 3 Sep 2024 22:06:38 +0200
Subject: GEOS 3.13.0beta2 Available
In-Reply-To: <CBA3E55C-507D-4F37-8745-F0870F5056AF@cleverelephant.ca>
References: <CBA3E55C-507D-4F37-8745-F0870F5056AF@cleverelephant.ca>
Message-ID: <004e5d0b-47b4-441a-b94b-942b7373a00f@spatialys.com>

GDAL autotest suite happy against GEOS main branch (but it doesn't 
torture it aggressively): +1

Le 03/09/2024 ? 21:57, Paul Ramsey a ?crit?:
> https://download.osgeo.org/geos/geos-3.13.0beta2.tar.bz2
>
> If there are no bad comments I will release the final on Friday.
>
> P.

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From gdt at lexort.com  Tue Sep  3 15:01:00 2024
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 03 Sep 2024 18:01:00 -0400
Subject: GEOS 3.13.0beta2 Available
In-Reply-To: <CBA3E55C-507D-4F37-8745-F0870F5056AF@cleverelephant.ca> (Paul
 Ramsey's message of "Tue, 3 Sep 2024 12:57:22 -0700")
References: <CBA3E55C-507D-4F37-8745-F0870F5056AF@cleverelephant.ca>
Message-ID: <rmiplpk75yb.fsf@s1.lexort.com>

Paul Ramsey <pramsey at cleverelephant.ca> writes:

> https://download.osgeo.org/geos/geos-3.13.0beta2.tar.bz2

Builds and packages on NetBSD 10 amd64, and tests are ok

  100% tests passed, 0 tests failed out of 492

  Total Test time (real) =  12.77 sec


so looks good to me.

From pramsey at cleverelephant.ca  Fri Sep  6 13:37:12 2024
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 6 Sep 2024 13:37:12 -0700
Subject: GEOS 3.13.0 Released
Message-ID: <F40BB09F-EC2D-4E36-BF68-572858A9FD00@cleverelephant.ca>

https://libgeos.org/posts/2024-09-06-geos-3-13-released/

The 3.13 release of GEOS is now available to download.

The headline features of this release are:

- A new approach to boolean predicates via RelateNG

  - Faster performance for many cases where a short circuit is available
  - Avoiding the full computation of a topology graph for every call
  - Ability to use a high speed ?prepared? approach for the complete set of predicates as well as the relate matrix functions

- Initial support for ISO SQL/MM curve types

  - Create, read and write support for CircularString, CompoundCurve, CurvedPolygon, MultiCurve, MultiSurface

This release includes the following new features in the C API (and of course underlying changes to the C++ code to support these features):

- GEOSGeom_createEmptyCircularString() creates a new empty CircularString
- GEOSGeom_createCircularString(coordseq) creates a CircularString with the supplied coordinates
- GEOSGeom_createEmptyCompoundCurve() creates a new empty CompoundCurve
- GEOSGeom_createCompoundCurve(curves, ncurves) creates a CompoundCurve with the supplied components (start/end coordinates must match up)
- GEOSGeom_createEmptyCurvePolygon() creates a new empty CurvePolygon
- GEOSGeom_createCurvePolygon(shell, holes, nholes) creates a CurvePolygon with the supplied rings
- GEOSPreparedRelate(prepgeom, geom) generates a DE9IM intersection matrix for the geometry pair, where one input has been ?prepared? for fast repeated calls
- GEOSPreparedRelatePattern(prepgeom, geom, pattern) tests a pair of geometry against a known DE9IM pattern to see if the relationship is consistent with the pattern

Thanks to everyone who contributed to this release!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20240906/0f0b2589/attachment.htm>

From pablogabrieldeluca at gmail.com  Thu Sep 12 15:43:29 2024
From: pablogabrieldeluca at gmail.com (Gabriel De Luca)
Date: Thu, 12 Sep 2024 19:43:29 -0300
Subject: Search for spatial predicate proof
Message-ID: <CAB-dfs1QwykQ=taQditFT_D9Mg90vu2-JEC_K=iaBma2_m1OUw@mail.gmail.com>

Hello everyone,

 I am working with a group of researchers on developing an algorithm to
decompose 2D polygons into meaningful parts, without using triangulations.

 Our algorithm relies on spatial set operations.
 Due to finite-precision floating point arithmetic, as clarified in the
Robustness section of the GEOS FAQs, as well as in section D.7 of the JTS
FAQs, some predicates do not necessarily agree in theory and practice.

 However, I am interested in finding out if there is any proof for the
following predicate, for which I do not find in practice that differ from
the theory:

Given two polygons P and Q, which overlaps:

 - *((P difference Q) touches (P difference(P difference Q)))* seems to be
always True and the intersection between their boundaries has dimension 1
(their interiors do not intersect and their boundaries have at least one
segment in common).

  If you know of any academic article in which this case has been
investigated, applied to finite-precision floating point computations, even
if you knew a counterexample, it would be of great help in our research.


Regards, and thank you very much for your great work,
Gabriel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20240912/c1b7b019/attachment.htm>

