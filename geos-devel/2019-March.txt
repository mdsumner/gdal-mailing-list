From me at komzpa.net  Fri Mar  1 11:59:57 2019
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Fri, 1 Mar 2019 22:59:57 +0300
Subject: [geos-devel] JTS TestBuilder for geometry visualization
In-Reply-To: <CAK2ens1n1T7RaGh082qwi+wwjhC_aZOJmxg96z09kVUxXM6hXg@mail.gmail.com>
References: <CAK2ens2d9Eftur2tbH96TG2Zfnijx8Ass-obeCLJsNX8FL-a7Q@mail.gmail.com>
 <8212047.Nr05H8Z9nf@even-i700>
 <CAK2ens1GOmmY50RztT10PV=T3hpAAoGb50+Qpq6-03tHxnuvEg@mail.gmail.com>
 <CAC8Q8t+ELquW=a29wepe930RXEpVFD8Lg1FV5rhTkKTib-ysgg@mail.gmail.com>
 <CAK2ens1n1T7RaGh082qwi+wwjhC_aZOJmxg96z09kVUxXM6hXg@mail.gmail.com>
Message-ID: <CAC8Q8tJrXOnUGyAWdZhspJbN0q8+X5z2Q5s8yFaPDboCNFaxdg@mail.gmail.com>

It will be interpreted as EPSG:4326 and displayed as EPSG:3857. It is
usually okay for real world datasets or test integer geometries around 0,0.

On Thu, Feb 28, 2019 at 8:26 PM Martin Davis <mtnclimb at gmail.com> wrote:

> That's slick.  For geojson.io does the data have to be in geodetic?
>
> On Thu, Feb 28, 2019 at 6:00 AM Darafei "Komяpa" Praliaskouski <
> me at komzpa.net> wrote:
>
>> Hi,
>>
>> I use Meta -> Load WKT string on geojson.io. Nothing to install, just a
>> browser tab.
>>
>> On Wed, Feb 27, 2019 at 11:01 PM Martin Davis <mtnclimb at gmail.com> wrote:
>>
>>> That's good to know too.
>>>
>>> These would be good to have in the wiki (if not there already).
>>>
>>> On Wed, Feb 27, 2019 at 11:34 AM Even Rouault <
>>> even.rouault at spatialys.com> wrote:
>>>
>>>> Martin,
>>>>
>>>> thanks for the hint. Let me mention alternatives :-)
>>>>
>>>> For those who prefer QGIS, I suggest the QuickWKT plugin where you can
>>>> paste
>>>> WKT or WKB.
>>>> If you select a feature (existing, or just created), copy and paste it
>>>> in a
>>>> text application, you will get the WKT.
>>>>
>>>> Otherwise (limited to WKT), you may also create a simple .csv file
>>>>
>>>> id,WKT
>>>> 1,"your WKT"
>>>> 2,"your WKT"
>>>>
>>>> and open it with QGIS. (the WKT colum name is critical so that the
>>>> column is
>>>> recognized as a geometry)
>>>>
>>>> Even
>>>>
>>>> > Just in case anyone isn't familiar with it, the JTS TestBuilder is a
>>>> Java
>>>> > GUI application which might be useful for some aspects of GEOS
>>>> > development.  In particular, it's handy for creating and viewing
>>>> geometry
>>>> > test cases.  You can draw and edit geometry, and capture the results
>>>> as WKT
>>>> > or WKB (and several other formats as well).  You can also drop an
>>>> entire
>>>> > JTS/GEOS Test XML file in order to view all the cases in the file.
>>>> >
>>>> > It's available as a fat jar from the JTS Releases page:
>>>> >
>>>> > https://github.com/locationtech/jts/releases
>>>> >
>>>> > Docs are limited, but most things have tooltips.  With suitable
>>>> > encouragement I might even get around to writing a proper manual one
>>>> day...
>>>>
>>>>
>>>> --
>>>> Spatialys - Geospatial professional services
>>>> http://www.spatialys.com
>>>>
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>>
>>
>> --
>> Darafei Praliaskouski
>> Support me: http://patreon.com/komzpa
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel



-- 
Darafei Praliaskouski
Support me: http://patreon.com/komzpa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20190301/e64fff4b/attachment.html>

From geos-trac at osgeo.org  Mon Mar 11 08:36:18 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 15:36:18 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
Message-ID: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+--------------------------
 Reporter:  Algunenano   |      Owner:  geos-devel@…
     Type:  defect       |     Status:  new
 Priority:  major        |  Milestone:  3.5.2
Component:  Default      |    Version:  3.5.0
 Severity:  Significant  |   Keywords:
-------------------------+--------------------------
 When passing the following **invalid** geometry to GEOSClipByRect, the
 result of the clipping is reversed (you get the part of the box that
 doesn't intersects with the geometry).

 {{{
 template<> template<> void object::test<14>
 ()
 {
     const char* wkt = "POLYGON((680 2050,682 2050,683 2054,686 2059,690
 2061,694 2062,697 2065,699 2071,700 2080,701 2081,702 2081,703 2082,702
 2083,701 2084,701 2085,699 2086,700 2086,699 2086,698 2085,699 2085,695
 2083,689 2083,687 2083,685 2085,679 2083,677 2081,677 2078,673 2069,668
 2062,667 2062,666 2062,665 2060,667 2058,667 2056,665 2055,666 2055,666
 2054,667 2053,666 2052,667 2050,668 2050,670 2054,672 2052,673 2053,674
 2052,676 2050,679 2050,680 2050))";
     geom1_ = GEOSGeomFromWKT(wkt);
     geom2_ = GEOSClipByRect(geom1_, -8, -8, 2056, 2056);
     isEqual(geom2_, "POLYGON((665 2055,667 2056,684.2 2056,683 2054,682
 2050,680 2050,679 2050,676 2050,674 2052,673 2053,672 2052,670 2054,668
 2050,667 2050,666 2052,667 2053,666 2054,666 2055,665 2055))");
 }
 }}}

 This is affecting Postgis, both in ST_ClipByBox2d and ST_AsMVTGeom
 (although it has a hack to try to detect this and drop the geometry
 completely).

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 08:37:05 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 15:37:05 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.d0197bd95f3c5fa01981fd970429f86a@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------
Changes (by Algunenano):

 * Attachment "clip.png" added.

 Visualized. Red = expected result. Orange = current result

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 09:30:23 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 16:30:23 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.f878d12fa638600b45ea115e4a529354@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by Algunenano):

 Related PR with just the broken test case:
 https://github.com/libgeos/geos/pull/152

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 09:41:39 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 16:41:39 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.dc0def879034f423cfafddab9c260413@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by strk):

 I think by definition invalid inputs result in invalid outputs

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 10:25:03 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 17:25:03 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.44a052bc7d5e8c74dc28fb0665191b71@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by mdavis):

 Given that this geometry is only slightly invalid (a single collapsed line
 segment), and given the relatively simplicity of clipping to a rectangle,
 it seems like it might be technically feasible to make clipping more
 tolerant of some invalid inputs.  This might require an entirely new
 algorithm, though.

 The other option for now is to ensure the input geometry is valid.  In
 this case that can be done via a simple linear scan of the polygon ring,
 to detect and remove the collapsed segment.  Perhaps that can be provided
 as a utility function. Or perhaps MakeValid could be enhanced with hints
 to optimize what kinds of cleaning approaches are used.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 15:33:18 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 22:33:18 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.9700a1214cbc71b130efdf0361a8a1c3@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by Algunenano):

 > I think by definition invalid inputs result in invalid outputs

 Fair enough, but then ST_AsMvtGeom shouldn't be using it. To be honest,
 I'm already on the verge of removing the geos path and leave wagyu as the
 only option for clipping and validation for MVT polygons.

 > Given that this geometry is only slightly invalid (a single collapsed
 line segment), and given the relatively simplicity of clipping to a
 rectangle, it seems like it might be technically feasible to make clipping
 more tolerant of some invalid inputs. This might require an entirely new
 algorithm, though.

 What surprised me the most is that it gives this invalid input although
 the invalid spike is outside the clipping rectangle (which is the only
 ring). I haven't checked the algorithm that Geos uses yet.

 As a reference, here is the current quick clip mechanism in wagyu:
 https://github.com/postgis/postgis/blob/svn-
 trunk/deps/wagyu/include/mapbox/geometry/wagyu/quick_clip.hpp#L67

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 15:52:07 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 22:52:07 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.df35b928908f031f8d7d994318d36a56@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by mdavis):

 That wagyu quick clip algorithm will certainly be fast. But it will
 produce highly invalid geometry from a GEOS geometry model perspective.
 That may not matter for tile rendering, of course.

 But then it's doing something different than GEOSClipByRect, which is
 intended to produce valid geometry.  This is a harder task, so slower and
 more demanding of the input.

 If MVT Tile generation can get away with a less restrictive geometry model
 and hence faster/simpler algorithms, that's great. But perhaps those
 algorithms should not be in GEOS, or at least they should be in a separate
 package.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 15:58:25 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 22:58:25 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.8aeae2e2e4ff496c02acd1e586f523c7@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by mdavis):

 Is the wagyu quick_clip all that is needed for clipping MVT polygons?  If
 so, that's easy to port.  If not, then it's not the real comparison.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:6>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Mar 11 16:57:09 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 11 Mar 2019 23:57:09 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.a70399dc5e1f40d50616e8744e9f81f0@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  closed
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:  invalid
 Keywords:               |
-------------------------+---------------------------
Changes (by Algunenano):

 * status:  new => closed
 * resolution:   => invalid


Comment:

 > Is the wagyu quick_clip all that is needed for clipping MVT polygons? If
 so, that's easy to port. If not, then it's not the real comparison.

 Yes and no, wagyu guarantees that the output will always be valid (it does
 a pass later for force validation with int coordinates). In exchange it
 might drop small triangles of a multipolygon, which you can't get away
 with in MVTs as it's normal for things to pop up/out and you zoom in/out.

 It doesn't make much sense to port that clipping algorithm without the
 whole paraphernalia (quick validation with int coordinates). I found and
 even harder issue around mvts today [1] where making a polygon valid
 changed some of its coordinates to floats (against the mvt spec), then
 snapping them to ints turned it invalid (against the mvt spec), and so on.

 Based on this, I think I'll keep dropping geometries when this happens and
 push to make wagyu the default for 3.0.

 Thanks a lot for the comments @mdavis.


 1 - https://trac.osgeo.org/postgis/ticket/4348

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:7>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Mar 12 14:40:31 2019
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 12 Mar 2019 21:40:31 -0000
Subject: [geos-devel] [GEOS] #959: Reversed result in GEOSClipByRect
In-Reply-To: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
References: <048.ebb34e7b2ae6e32c9b888a84f429a0e8@osgeo.org>
Message-ID: <063.f49ba89016aad9cbc01902765c72fc00@osgeo.org>

#959: Reversed result in GEOSClipByRect
-------------------------+---------------------------
 Reporter:  Algunenano   |       Owner:  geos-devel@…
     Type:  defect       |      Status:  closed
 Priority:  major        |   Milestone:  3.5.2
Component:  Default      |     Version:  3.5.0
 Severity:  Significant  |  Resolution:  invalid
 Keywords:               |
-------------------------+---------------------------

Comment (by mdavis):

 Replying to [comment:7 Algunenano]:

 > It doesn't make much sense to port that clipping algorithm without the
 whole paraphernalia (quick validation with int coordinates).

 Ok, so any replacement/improvement to GEOS-based MVT clipping has to
 produce valid integer geoms.

 > I found and even harder issue around mvts today [1] where making a
 polygon valid changed some of its coordinates to floats (against the mvt
 spec), then snapping them to ints turned it invalid (against the mvt
 spec), and so on.
 >
 Not totally surprising.  MakeValid operates at full precision, and can
 introduce new vertices.  And because it is using full precision, the
 output will not necessarily be valid when snapped to lower precision.

 The JTS (and probably GEOS) operations can actually specify a precision
 model, which might solve this problem.  It would have to be exposed by
 MakeValid, however.  And MakeValid is doing a LOT of complex processing,
 so not sure that's even feasible.  Also, for the kind of invalidity
 produced by brute-force clipping to a rectangle (as in quick_clip),
 MakeValid is probably overkill.  It might be possible to just node the
 clipped linework (using int precision), and then polygonize.  I will try
 and experiment with this.  If that works, it would provide a fairly simple
 GEOS-based rectangle clipper for MVT use.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/959#comment:8>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Mar 19 09:21:44 2019
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 19 Mar 2019 16:21:44 -0000
Subject: [geos-devel] [GEOS] #960: Exception when creating geometry buffer
Message-ID: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>

#960: Exception when creating geometry buffer
--------------------------+---------------------------------------
 Reporter:  allenkim0129  |      Owner:  geos-devel@…
     Type:  defect        |     Status:  new
 Priority:  blocker       |  Milestone:
Component:  Default       |    Version:  3.6.2
 Severity:  Unassigned    |   Keywords:  Buffer, TopologyException
--------------------------+---------------------------------------
 Issue:\\
 I am getting the following exception from GEOS:\\
 {{{
 TopologyException: assigned depths do not match at 3.3333333333333357
 36.666666666666664
 }}}


 Steps to re-produce:\\

 {{{
 //1. Create GEOS Geometry
 std::string wkt = "MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30,
 40 20, 30 10))";
 geos::io::WKTReader wkt_reader;
 geos::geom::Geometry* geom = wkt_reader.read(wkt);

 //2. BufferParameters
 geos::operation::buffer::BufferParameters param;
 param.setEndCapStyle(geos::operation::buffer::BufferParameters::CAP_FLAT);
 param.setQuadrantSegments(6);
 geos::operation::buffer::BufferBuilder builder(param);

 //3. Create Buffer
 double dist = 40;
 geos::geom::Geometry* geom_buffer = builder.buffer(geom, dist);


 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/960>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Mar 19 10:13:39 2019
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 19 Mar 2019 17:13:39 -0000
Subject: [geos-devel] [GEOS] #960: Exception when creating geometry
	buffer
In-Reply-To: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
References: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
Message-ID: <065.9c225469a14309238425dac23b81be40@osgeo.org>

#960: Exception when creating geometry buffer
---------------------------------------+---------------------------
 Reporter:  allenkim0129               |       Owner:  geos-devel@…
     Type:  defect                     |      Status:  new
 Priority:  blocker                    |   Milestone:
Component:  Default                    |     Version:  3.6.2
 Severity:  Unassigned                 |  Resolution:
 Keywords:  Buffer, TopologyException  |
---------------------------------------+---------------------------

Comment (by mdavis):

 You should note that buffering with CAP_FLAT produces a very poor buffer
 outline when the buffer distance is large relative to the geometry (as in
 this case). In fact, this should probably not be used at all in this case.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/960#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Mar 26 10:25:03 2019
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 26 Mar 2019 17:25:03 -0000
Subject: [geos-devel] [GEOS] #572: Contains issue for complex
 LineStrings [JTS fails too]
In-Reply-To: <045.fc82acdace0639d7b6097c86f1a9f515@osgeo.org>
References: <045.fc82acdace0639d7b6097c86f1a9f515@osgeo.org>
Message-ID: <060.f7c0ed928739efca95d551c1b3c35c4a@osgeo.org>

#572: Contains issue for complex LineStrings [JTS fails too]
------------------------+---------------------------
 Reporter:  Mike Toews  |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.8.0
Component:  Default     |     Version:  3.3.4
 Severity:  Unassigned  |  Resolution:
 Keywords:  jtsfail     |
------------------------+---------------------------

Comment (by mdavis):

 Upstream ticket is https://github.com/locationtech/jts/issues/396

 Still no solution for this.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/572#comment:7>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From kirill888 at gmail.com  Tue Mar 26 15:07:27 2019
From: kirill888 at gmail.com (Kirill Kouzoubov)
Date: Wed, 27 Mar 2019 09:07:27 +1100
Subject: [geos-devel] Small Fix to CMake files for static only builds
Message-ID: <CAL1dddkkMx3Ra=SUxTS970aAuLOQrvv1wGLgHN1WVCLetbzCww@mail.gmail.com>

Hi,

I wanted to have a static only build of `geos` library, but also run unit
tests on a compiled static library. Looks like currently tests are linked
against shared lib only. However it is relatively easy to make this work in
`cmake` by introducing "interface" library with the same name as shared lib
target would be and instructing `cmake` to link to `geos-static` in that
case.

Change is small and can be viewed here:

https://github.com/Kirill888/geos/commit/857372efca8b8e27711b0c85ddf847fc4676b380

Would be nice if someone incorporated that into master.

Regards,

Kirill
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20190327/32e2d6b4/attachment.html>

From strk at kbt.io  Wed Mar 27 03:56:59 2019
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 27 Mar 2019 11:56:59 +0100
Subject: [geos-devel] Small Fix to CMake files for static only builds
In-Reply-To: <CAL1dddkkMx3Ra=SUxTS970aAuLOQrvv1wGLgHN1WVCLetbzCww@mail.gmail.com>
References: <CAL1dddkkMx3Ra=SUxTS970aAuLOQrvv1wGLgHN1WVCLetbzCww@mail.gmail.com>
Message-ID: <20190327105659.GA9285@liz>

On Wed, Mar 27, 2019 at 09:07:27AM +1100, Kirill Kouzoubov wrote:
> Hi,
> 
> I wanted to have a static only build of `geos` library, but also run unit
> tests on a compiled static library. Looks like currently tests are linked
> against shared lib only. However it is relatively easy to make this work in
> `cmake` by introducing "interface" library with the same name as shared lib
> target would be and instructing `cmake` to link to `geos-static` in that
> case.
> 
> Change is small and can be viewed here:
> 
> https://github.com/Kirill888/geos/commit/857372efca8b8e27711b0c85ddf847fc4676b380
> 
> Would be nice if someone incorporated that into master.

Thanks, pushed as commit 43959918201670cd1e72913cf4cffb07b4666708

--strk;

From geos-trac at osgeo.org  Wed Mar 27 09:22:23 2019
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 27 Mar 2019 16:22:23 -0000
Subject: [geos-devel] [GEOS] #960: Exception when creating geometry
	buffer
In-Reply-To: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
References: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
Message-ID: <065.95d1ef90eaaaf7c4144fd8eb93a0df14@osgeo.org>

#960: Exception when creating geometry buffer
---------------------------------------+---------------------------
 Reporter:  allenkim0129               |       Owner:  geos-devel@…
     Type:  defect                     |      Status:  new
 Priority:  blocker                    |   Milestone:
Component:  Default                    |     Version:  3.6.2
 Severity:  Unassigned                 |  Resolution:
 Keywords:  Buffer, TopologyException  |
---------------------------------------+---------------------------
Changes (by allenkim0129):

 * Attachment "main.cpp" added.

 The main c++ file

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/960>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Mar 27 09:58:12 2019
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 27 Mar 2019 16:58:12 -0000
Subject: [geos-devel] [GEOS] #960: Exception when creating geometry
	buffer
In-Reply-To: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
References: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
Message-ID: <065.edea4cfcb9e1b86ce229a4e04a4f682e@osgeo.org>

#960: Exception when creating geometry buffer
---------------------------------------+---------------------------
 Reporter:  allenkim0129               |       Owner:  geos-devel@…
     Type:  defect                     |      Status:  new
 Priority:  blocker                    |   Milestone:
Component:  Default                    |     Version:  3.6.2
 Severity:  Unassigned                 |  Resolution:
 Keywords:  Buffer, TopologyException  |
---------------------------------------+---------------------------
Changes (by allenkim0129):

 * Attachment "CMakeLists.txt" added.

 makefile

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/960>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Mar 27 10:04:15 2019
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 27 Mar 2019 17:04:15 -0000
Subject: [geos-devel] [GEOS] #960: Exception when creating geometry
	buffer
In-Reply-To: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
References: <050.0363606e7bee87d149abb38507ca349d@osgeo.org>
Message-ID: <065.6ad1e50551118512ab030f19c7158d91@osgeo.org>

#960: Exception when creating geometry buffer
---------------------------------------+---------------------------
 Reporter:  allenkim0129               |       Owner:  geos-devel@…
     Type:  defect                     |      Status:  new
 Priority:  blocker                    |   Milestone:
Component:  Default                    |     Version:  3.6.2
 Severity:  Unassigned                 |  Resolution:
 Keywords:  Buffer, TopologyException  |
---------------------------------------+---------------------------

Comment (by allenkim0129):

 I have attached my test main.cpp and CMakeList.txt

 So far, what I have discovered is that the error is thrown from
 DirectedEdge::setDepth() function.


 {{{
 void
 DirectedEdge::setDepth(int position, int newDepth)
 {
         if (depth[position]!=-999) {
                 if (depth[position]!=newDepth)
                         throw util::TopologyException("assigned depths do
 not match", getCoordinate());
                         //Assert.isTrue(depth[position] == depthVal,
 "assigned depths do not match at " + getCoordinate());
         }
         depth[position]=newDepth;
 }
 }}}

 depth[position] is 2, but
 newDepth is 3

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/960#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From bontepaarden at gmail.com  Thu Mar 28 03:50:36 2019
From: bontepaarden at gmail.com (Paul Meems)
Date: Thu, 28 Mar 2019 11:50:36 +0100
Subject: [geos-devel] Simplify vs removeRepeatedPoints
Message-ID: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>

I'm looking at geos::simplify::DouglasPeuckerLineSimplifier (
http://geos.refractions.net/ro/doxygen_docs/html/classgeos_1_1simplify_1_1DouglasPeuckerLineSimplifier.html#_details)
and  geos::geom::CoordinateSequence::removeRepeatedPoints (
http://geos.refractions.net/ro/doxygen_docs/html/classgeos_1_1geom_1_1CoordinateSequence.html#a22
)

Looking at the explanation of the Ramer–Douglas–Peucker algorithm (
https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm)
I understand that the resulting geometry might be slightly different,
that's why a tolerance needs to be added.

But I don't want my geometry to be altered I just want to remove vertices
that don't contribute to the shape of the geometry.
Consider a square with not only 4 corner points but also points between the
corner points.
Those points I want to remove because they are redundant and without them,
I still have the 'same' square.

Should/can I use removeRepeatedPoints() or should I use another method?

Thanks,

Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20190328/7a38871d/attachment.html>

From strk at kbt.io  Thu Mar 28 04:02:13 2019
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 28 Mar 2019 12:02:13 +0100
Subject: [geos-devel] Simplify vs removeRepeatedPoints
In-Reply-To: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>
References: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>
Message-ID: <20190328110213.GA23629@liz>

On Thu, Mar 28, 2019 at 11:50:36AM +0100, Paul Meems wrote:

> But I don't want my geometry to be altered I just want to remove vertices
> that don't contribute to the shape of the geometry.
> Consider a square with not only 4 corner points but also points between the
> corner points.
> Those points I want to remove because they are redundant and without them,
> I still have the 'same' square.
> 
> Should/can I use removeRepeatedPoints() or should I use another method?

Use DP simplify with a tolerance of 0, will do what you're asking for.

--strk;

From bontepaarden at gmail.com  Thu Mar 28 04:07:38 2019
From: bontepaarden at gmail.com (Paul Meems)
Date: Thu, 28 Mar 2019 12:07:38 +0100
Subject: [geos-devel] Simplify vs removeRepeatedPoints
In-Reply-To: <20190328110213.GA23629@liz>
References: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>
 <20190328110213.GA23629@liz>
Message-ID: <CAHNf2YROLOAVH75-8JvuzAARVFi5p4xpO+9Z9zE9zOZtRWd5bA@mail.gmail.com>

Thanks, Sandro for the quick reply.

Good to read we don't need to implement both.

Regards,

Paul

Op do 28 mrt. 2019 om 12:02 schreef Sandro Santilli <strk at kbt.io>:

> On Thu, Mar 28, 2019 at 11:50:36AM +0100, Paul Meems wrote:
>
> > But I don't want my geometry to be altered I just want to remove vertices
> > that don't contribute to the shape of the geometry.
> > Consider a square with not only 4 corner points but also points between
> the
> > corner points.
> > Those points I want to remove because they are redundant and without
> them,
> > I still have the 'same' square.
> >
> > Should/can I use removeRepeatedPoints() or should I use another method?
>
> Use DP simplify with a tolerance of 0, will do what you're asking for.
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20190328/22dd807c/attachment.html>

From mtnclimb at gmail.com  Thu Mar 28 07:59:05 2019
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 28 Mar 2019 07:59:05 -0700
Subject: [geos-devel] Simplify vs removeRepeatedPoints
In-Reply-To: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>
References: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>
Message-ID: <CAK2ens15XCpYu8ZW3nBoxtrk32ULj9Dh0FS7rE73cS1e-amXMw@mail.gmail.com>

CoordinateSequence::removeRepeatedPoints does NOT do what you want - it
only removes consecutive points which have *identical* values.

You can probably use the DP Simplifier to remove redundant point along
straight lines by calling it with a very small distance tolerance.  This
will be a bit brittle however - if there happen to be points along the
square edges which are within that tolerance of a corner then the corner
point might get removed instead.  (For non-rectilinear geometry this
doesn't really matter, but of course for a rectangle it will make it
slightly non-rectilinear)


On Thu, Mar 28, 2019 at 3:51 AM Paul Meems <bontepaarden at gmail.com> wrote:

> I'm looking at geos::simplify::DouglasPeuckerLineSimplifier (
> http://geos.refractions.net/ro/doxygen_docs/html/classgeos_1_1simplify_1_1DouglasPeuckerLineSimplifier.html#_details)
> and  geos::geom::CoordinateSequence::removeRepeatedPoints (
> http://geos.refractions.net/ro/doxygen_docs/html/classgeos_1_1geom_1_1CoordinateSequence.html#a22
> )
>
> Looking at the explanation of the Ramer–Douglas–Peucker algorithm (
> https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm)
> I understand that the resulting geometry might be slightly different,
> that's why a tolerance needs to be added.
>
> But I don't want my geometry to be altered I just want to remove vertices
> that don't contribute to the shape of the geometry.
> Consider a square with not only 4 corner points but also points between
> the corner points.
> Those points I want to remove because they are redundant and without them,
> I still have the 'same' square.
>
> Should/can I use removeRepeatedPoints() or should I use another method?
>
> Thanks,
>
> Paul
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20190328/478e2efa/attachment.html>

From strk at kbt.io  Thu Mar 28 08:49:43 2019
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 28 Mar 2019 16:49:43 +0100
Subject: [geos-devel] Simplify vs removeRepeatedPoints
In-Reply-To: <CAK2ens15XCpYu8ZW3nBoxtrk32ULj9Dh0FS7rE73cS1e-amXMw@mail.gmail.com>
References: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>
 <CAK2ens15XCpYu8ZW3nBoxtrk32ULj9Dh0FS7rE73cS1e-amXMw@mail.gmail.com>
Message-ID: <20190328154943.GB32763@liz>

On Thu, Mar 28, 2019 at 07:59:05AM -0700, Martin Davis wrote:
> CoordinateSequence::removeRepeatedPoints does NOT do what you want - it
> only removes consecutive points which have *identical* values.
> 
> You can probably use the DP Simplifier to remove redundant point along
> straight lines by calling it with a very small distance tolerance.  This
> will be a bit brittle however - if there happen to be points along the
> square edges which are within that tolerance of a corner then the corner
> point might get removed instead.  (For non-rectilinear geometry this
> doesn't really matter, but of course for a rectangle it will make it
> slightly non-rectilinear)

That possibility only exists with a tolerance != 0, doesn't it ?

--strk;

From mtnclimb at gmail.com  Thu Mar 28 09:09:35 2019
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 28 Mar 2019 09:09:35 -0700
Subject: [geos-devel] Simplify vs removeRepeatedPoints
In-Reply-To: <20190328154943.GB32763@liz>
References: <CAHNf2YSQ=CmKZyPc4i1GHCoC1LFDVW6j=K9zLT0SviaCBXc0Kg@mail.gmail.com>
 <CAK2ens15XCpYu8ZW3nBoxtrk32ULj9Dh0FS7rE73cS1e-amXMw@mail.gmail.com>
 <20190328154943.GB32763@liz>
Message-ID: <CAK2ens3TwQEjn2O3FnDYR7yFQmFyz2MrLZCgG-_oLJosfdpNyg@mail.gmail.com>

On Thu, Mar 28, 2019 at 8:49 AM Sandro Santilli <strk at kbt.io> wrote:

> On Thu, Mar 28, 2019 at 07:59:05AM -0700, Martin Davis wrote:
> > CoordinateSequence::removeRepeatedPoints does NOT do what you want - it
> > only removes consecutive points which have *identical* values.
> >
> > You can probably use the DP Simplifier to remove redundant point along
> > straight lines by calling it with a very small distance tolerance.  This
> > will be a bit brittle however - if there happen to be points along the
> > square edges which are within that tolerance of a corner then the corner
> > point might get removed instead.  (For non-rectilinear geometry this
> > doesn't really matter, but of course for a rectangle it will make it
> > slightly non-rectilinear)
>
> That possibility only exists with a tolerance != 0, doesn't it ?
>

Yes.  Your suggestion of using tolerance = 0 is defnitely the better way to
handle this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20190328/6e1f81f5/attachment-0001.html>

From geos-trac at osgeo.org  Sun Mar 31 17:02:54 2019
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Apr 2019 00:02:54 -0000
Subject: [geos-devel] [GEOS] #961: CMake version number screwed up on mingw
Message-ID: <042.0bab4bd216009dc10e5b2c9aa924a364@osgeo.org>

#961: CMake version number screwed up on mingw
-----------------------+--------------------------
 Reporter:  robe       |      Owner:  geos-devel@…
     Type:  defect     |     Status:  new
 Priority:  major      |  Milestone:  3.8.0
Component:  Default    |    Version:  master
 Severity:  Annoyance  |   Keywords:  cmake winnie
-----------------------+--------------------------
 Okay just noticed that winnie is showing this for PostGIS building


 {{{
  GEOS: 3.8.0dev-CAPI-1.11.0 3.7.0rc1-288-gcf7e180
 }}}

 Not sure if it's just a mingw issue or all Cmake.  could be something I
 screwed up in my setup too

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/961>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

