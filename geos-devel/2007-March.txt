From pramsey at refractions.net  Sun Mar  4 20:17:45 2007
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Fwd: Re: compiling geos from svn on Solaris 10x86 and
	getting errors in doc
Message-ID: <1173057465.45eb6fb9eb17b@ssl.refractions.net>



----- Forwarded message from johng@telascience.org -----
    Date: Sun, 04 Mar 2007 16:41:11 -0800
    From: John Graham <johng@telascience.org>
Reply-To: John Graham <johng@telascience.org>
 Subject: Re: compiling geos from svn on Solaris 10x86 and getting errors in doc
      To: geos-devel-owner@geos.refractions.net

Can someone post this to the list... I dont want to join another list ;)

geos-devel-owner@geos.refractions.net wrote:
> You are not allowed to post to this mailing list, and your message has
> been automatically rejected.  If you think that your messages are
> being rejected in error, contact the mailing list owner at
> geos-devel-owner@geos.refractions.net.
>
>   
> Hi All
>
> I am compiling geos from svn on Solaris 10x86 and getting errors ... 
> it compiled fine on SGI redhat Itanuim2
> http://geos.refractions.net/geos-3.0.0rc4.tar.bz2 works fine on 
> both...  also looks like the nightly snapshots are not current
>
> Making all in doc
> gmake[1]: Entering directory `/export/optistor/viz/src/geos/doc'
> if g++ -DHAVE_CONFIG_H -I. -I. -I..//source/headers 
> -I..//source/headers/geos -I../source/headers    -g -O2 -DGEOS_INLINE 
> -Wall -ansi -pedantic -Wno-long-long -MT example.o -MD -MP -MF 
> ".deps/example.Tpo" -c -o example.o example.cpp; \
> then mv -f ".deps/example.Tpo" ".deps/example.Po"; else rm -f 
> ".deps/example.Tpo"; exit 1; fi
> /bin/bash ..//libtool --mode=link g++  -g -O2 -DGEOS_INLINE -Wall 
> -ansi -pedantic -Wno-long-long   -o example  example.o 
> ..//source/libgeos.la ..//source/libgeos.la
> mkdir .libs
> g++ -g -O2 -DGEOS_INLINE -Wall -ansi -pedantic -Wno-long-long -o 
> .libs/example example.o  ..//source/.libs/libgeos.so -L/usr/sfw/lib 
> /usr/sfw/lib/libstdc++.so -lc -Wl,-R -Wl,/usr/local/lib -Wl,-R 
> -Wl,/usr/sfw/lib
> ld: warning: file /usr/sfw/lib/libstdc++.so: attempted multiple 
> inclusion of file
> Undefined                       first referenced
> symbol                             in file
> geos::index::bintree::NodeBase::addAllItems(std::vector<void*, 
> std::allocator<void*> >*)..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::addAllItemsFromOverlapping(geos::index::bintree::Interval*, 
> std::vector<void*, std::allocator<void*> >*)..//source/.libs/libgeos.so
> typeinfo for geos::index::bintree::NodeBase..//source/.libs/libgeos.so
> geos::index::bintree::Interval::getMin() ..//source/.libs/libgeos.so
> geos::index::bintree::Interval::getMax() ..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::NodeBase()..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::~NodeBase()..//source/.libs/libgeos.so
> geos::index::bintree::Interval::getWidth() ..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::nodeSize() ..//source/.libs/libgeos.so
> geos::index::bintree::Interval::Interval(geos::index::bintree::Interval*)..//source/.libs/libgeos.so 
>
> geos::index::bintree::Interval::Interval()..//source/.libs/libgeos.so
> geos::index::bintree::Interval::~Interval()..//source/.libs/libgeos.so
> geos::index::bintree::Interval::Interval(double, 
> double)..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::add(void*)..//source/.libs/libgeos.so
> geos::index::bintree::Root::insert(geos::index::bintree::Interval*, 
> void*)..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::size() ..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::depth() ..//source/.libs/libgeos.so
> geos::index::bintree::NodeBase::getItems() ..//source/.libs/libgeos.so
> ld: fatal: Symbol 
referencing errors. No output written to .libs/example
> collect2: ld returned 1 exit status
> gmake[1]: *** [example] Error 1
> gmake[1]: Leaving directory `/export/optistor/viz/src/geos/doc'
> gmake: *** [all-recursive] Error 1
>


----- End forwarded message -----





From strk at refractions.net  Mon Mar  5 04:59:39 2007
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] nasty ring bug
In-Reply-To: <45DC374B.3030602@vadose.org>
References: <45DBD7D3.2020705@vadose.org> <20070221092839.GB62235@keybit.net>
	<45DC374B.3030602@vadose.org>
Message-ID: <20070305095939.GA30007@keybit.net>

On Wed, Feb 21, 2007 at 07:12:59AM -0500, Carl Anderson wrote:
> strk,
> 
> you are free to uses these examples as you want.
> 
> hole_from shell.xml   is the example we hit in production use
> hole_red.xml  is a reduced form of that
> 
> big_nasty.xml is a cut and paste from your email about a reduced form of 
> the big bad nasty buffer
> 
> I want to run a few more tests in the production environment to see if 
> any consequences of the patch pop up.
> I'll let you know in a few hours.

I've committed the two new testcases. big_nasty.xml is already in as
badguy3.xml. Please let me know if you found any problem with your 
tests in production environmnet. Thanks.

--strk;


From sgillies at frii.com  Mon Mar  5 11:42:22 2007
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] how to construct geos geometry instances using python
	bindings
In-Reply-To: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>
Message-ID: <45EC486E.3080309@frii.com>

N.J. Hardebol wrote:
> Hello,
> 
> I'm a medium level ocassional developper with not too much experience with
> python classes and especially not swig. I use python scripting a lot for
> medium level scripting for processing of geographic oriented data. Thereto
> I make use of gdal.ogr and geos libraries ported to python. Previously I
> ran my code under linux, allowing to build from newest source codes.
> Recently I moved code also to windows to interact also with ArcGIS, so
> limitted by available bin + swig compilations.
> 
> I've two questions, both to do with the construction of new geos geometry
> instances.
> 
> In first problem, I start with WKT or WKB geometry strings retrieved from
> postgis database. Afterwards I want to parse them to geos Geometry
> instances.
>>>> geosgeom = geos.WKTReader(geos.GeometryFactory()).read(wktgeom)
> This looks really awkward and as fact of the matter it doesn't build a
> geos.Geometry but a geos.GeometryPtr.
> So my Question1 is: How do i best build a geos Geometry from WKT-strings
> using geos-python bindings?
> 
> Then I also would like to crop an existing geos Linestring1 with an
> intersecting geos Polygon building a new geos Linestring2. So something
> like  Linestring2 = Linestring1.crop(Polygon). My workaround is (1) check
> whether intersect exists. (2) Find the intersection points between
> Linestring1 and Polygon. (3) Build the new linestring2 from the
> intersection-point vertices using WKTReader().
> 1) >>> if Linestring1.intersects(Geometry):
> 2) >>>      pnts = Linestring1.Intersection(Geometry)
> 3) >>>      Linestr2_wkt = 'LINESTRING ( %s %s , %s %s ) % ( pnts.GetX(0)
> 
>                          , pnts.GetY(0) , pnts.GetX(1) , pnts.GetY(1)  )
> 3) >>>      Linestring2 =
>                   geos.WKTReader(geos.GeometryFactory()).read(Linestr2_wkt)
> 
> Question2: Is there a better way for building a new linestring by corpping
> old one with polygon, instead of this work around. ANd if not, how do I
> deal with GeometryPtr instead of Geometry, okay might be simple sub class
> or pointer issue this guy is not familiar with.
> 
> thx in advance for any suggestions,
> 
> Nico Hardebol
> 

Nico,

OGR geometries acquire the operations of GEOS geometries. I think you 
may not need to use the GEOS Python module at all. At any rate, the 
Python module in GEOS is not actively maintained.

Cheers,
Sean

-- 
Sean Gillies
http://zcologia.com/news


From jean-claude.repetto at worldonline.fr  Fri Mar  9 10:02:21 2007
From: jean-claude.repetto at worldonline.fr (Jean-Claude Repetto)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Compiling GEOS for ARM processor
Message-ID: <45F176FD.5090302@worldonline.fr>

Hi,

I am trying to compile geos-2.2.3 for the ARM architecture.
There are no errors, but lots of warnings :

In file included from ../../source/headers/geos/geom.h:27,
                  from DefaultCoordinateSequence.cpp:35:
../../source/headers/geos/platform.h:37:2: warning: #warning "Could not 
find 64bit integer definition!"
In file included from DefaultCoordinateSequence.cpp:35:
../../source/headers/geos/geom.h: In static member function `static int
    geos::Coordinate::hashCode(double)':
../../source/headers/geos/geom.h:461: warning: right shift count >= width of
    type

Can I simply ignore these warnings, or must I dig into the source code 
to find the reasons of the warnings and fix them ?

(I am using arm-linux-gcc v 3.3.4).

Best regards,
Jean-Claude

From strk at refractions.net  Fri Mar  9 10:11:24 2007
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Compiling GEOS for ARM processor
In-Reply-To: <45F176FD.5090302@worldonline.fr>
References: <45F176FD.5090302@worldonline.fr>
Message-ID: <20070309151124.GA25991@keybit.net>

I think we can drop the hashCode function as a whole.
Please try commenting that out to see if anything stops
building.

--strk;

On Fri, Mar 09, 2007 at 04:02:21PM +0100, Jean-Claude Repetto wrote:
> Hi,
> 
> I am trying to compile geos-2.2.3 for the ARM architecture.
> There are no errors, but lots of warnings :
> 
> In file included from ../../source/headers/geos/geom.h:27,
>                  from DefaultCoordinateSequence.cpp:35:
> ../../source/headers/geos/platform.h:37:2: warning: #warning "Could not 
> find 64bit integer definition!"
> In file included from DefaultCoordinateSequence.cpp:35:
> ../../source/headers/geos/geom.h: In static member function `static int
>    geos::Coordinate::hashCode(double)':
> ../../source/headers/geos/geom.h:461: warning: right shift count >= width of
>    type
> 
> Can I simply ignore these warnings, or must I dig into the source code 
> to find the reasons of the warnings and fix them ?
> 
> (I am using arm-linux-gcc v 3.3.4).

From mateusz at loskot.net  Sat Mar 10 10:35:36 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] EnhancedPrecisionOp and C API
Message-ID: <45F2D048.3020409@loskot.net>

Hi,

Are operations provided by EnhancedPrecisionOp exposed
through the C API in some way?
If not, is there any plan to add them to the C API?

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From strk at refractions.net  Sat Mar 10 11:46:48 2007
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] EnhancedPrecisionOp and C API
In-Reply-To: <45F2D048.3020409@loskot.net>
References: <45F2D048.3020409@loskot.net>
Message-ID: <20070310164648.GC30987@keybit.net>

On Sat, Mar 10, 2007 at 04:35:36PM +0100, Mateusz Loskot wrote:
> Hi,
> 
> Are operations provided by EnhancedPrecisionOp exposed
> through the C API in some way?
> If not, is there any plan to add them to the C API?

All binary operations performed by the C API are Enhanced
themself using the BinaryOp templated class. It is more
or less the same heuristic used by EnhancedPrecisionOp.

--strk;

From mateusz at loskot.net  Sat Mar 10 12:00:43 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] EnhancedPrecisionOp and C API
In-Reply-To: <20070310164648.GC30987@keybit.net>
References: <45F2D048.3020409@loskot.net> <20070310164648.GC30987@keybit.net>
Message-ID: <45F2E43B.1000002@loskot.net>

strk@refractions.net wrote:
> On Sat, Mar 10, 2007 at 04:35:36PM +0100, Mateusz Loskot wrote:
>> Hi,
>> 
>> Are operations provided by EnhancedPrecisionOp exposed through the
>> C API in some way? If not, is there any plan to add them to the C
>> API?
> 
> All binary operations performed by the C API are Enhanced themself
> using the BinaryOp templated class. It is more or less the same
> heuristic used by EnhancedPrecisionOp.

Hmm, are you saying these operations exposed by C API are automatically
enhanced if EnhancedPrecisionOp is available?

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From strk at refractions.net  Sat Mar 10 13:54:33 2007
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] EnhancedPrecisionOp and C API
In-Reply-To: <45F2E43B.1000002@loskot.net>
References: <45F2D048.3020409@loskot.net> <20070310164648.GC30987@keybit.net>
	<45F2E43B.1000002@loskot.net>
Message-ID: <20070310185433.GD30987@keybit.net>

On Sat, Mar 10, 2007 at 06:00:43PM +0100, Mateusz Loskot wrote:
> strk@refractions.net wrote:
> > On Sat, Mar 10, 2007 at 04:35:36PM +0100, Mateusz Loskot wrote:
> >> Hi,
> >> 
> >> Are operations provided by EnhancedPrecisionOp exposed through the
> >> C API in some way? If not, is there any plan to add them to the C
> >> API?
> > 
> > All binary operations performed by the C API are Enhanced themself
> > using the BinaryOp templated class. It is more or less the same
> > heuristic used by EnhancedPrecisionOp.
> 
> Hmm, are you saying these operations exposed by C API are automatically
> enhanced if EnhancedPrecisionOp is available?

IIRC EnhancedPrecisionOp uses CommonBitsRemover.
The BinaryOp tries with original precision first, then
tries with CommonBitsRemover then tries with SNapping
ie: it applies different heuristics struggling to give some
meaningful result.
Compare EnhancedPrecisionOp with BinaryOp

---strk;

From nico.hardebol at falw.vu.nl  Mon Mar 12 16:05:47 2007
From: nico.hardebol at falw.vu.nl (N.J. Hardebol)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] question on prospectives of python bindings to
 opensource geospatial libraries
In-Reply-To: <45EC486E.3080309@frii.com>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu> 
	<45EC486E.3080309@frii.com>
Message-ID: <1729.82.216.150.142.1173729947.squirrel@webmail.falw.vu>

Hello,

In the email of Feb. 28 I posed some questions on python GEOS
implementations to which Sean Gillies replied saying also that Python
wrappers for GEOS are not actively maintained.
http://geos.refractions.net/pipermail/geos-devel/2007-February/002848.html
http://geos.refractions.net/pipermail/geos-devel/2007-March/002851.html

We ( = group of structural geologist - working on some academic coding -
see below) were expecting that with the advances in spatial open source
community, spatial statistics on scripting level (i.e. using python) would
be a feasible development path. Although also ESRI has made certain steps
allowing its topology functions to be called from within python we rather
prefer to rely on open source libraries.
For this we indeed require that GEOS and OGR developments would get better
supported to higher scripting languages. Although not well documented use
of swig python bindings appeared feasible to us. Further we noticed some
new initiatives like PCL - cartography.
You denoted that 'Python module in GEOS is not actively maintained' which
is indeed a warning.
Could you may give some more reflection and perspective on this?
Are there any alternatives in which GEOS is somehow embedded and extended
to python scripting level. e.g. initiatives like PCL?

It might be helpful to explain some more what we are in to. We're a
research-group of structural geologists working on new field acquisition
and post field data processing procedures. We try to characterize the
fracture patterns in rocks on cms to 100s of meters scale. For this we
acquire fractures digitized as polylines using a tablet pc and a
customized arcpad application. In the post-field processing we prefer to
remain independent of esri solutions and we've developed a small fracture
statistics routine. This routine is written with python and reads fracture
data from shapefiles
using the ogr-library and then some basic spatial statistics (fracture
spacing etc...) is being calculated using GEOS-functionality. In a pilot
project, using linux and with shapefiles as data-repository this worked
well.  Further improving coding and aiming for advanced processing my
migrating data to postgresql+postgis and adding user friendliness by
porting code to windows environment we can still obtain a working code.
However have run in some problems and also when cleaning up of code we've
noticed some untidy, mixed and inconsistent use of OGR and GEOS libraries.

Any suggestions on devolopers track or getting connected with devolpers
pursuing comparable goals would help us.

thanks,

Nico







From nico.hardebol at falw.vu.nl  Mon Mar 12 16:06:07 2007
From: nico.hardebol at falw.vu.nl (N.J. Hardebol)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] how to construct geos geometry instances using    
	python bindings
In-Reply-To: <45EC486E.3080309@frii.com>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu> 
	<45EC486E.3080309@frii.com>
Message-ID: <1733.82.216.150.142.1173729967.squirrel@webmail.falw.vu>

thanks for your response.

I 'm not sure though, if I've understood you well with 'OGR geometries
acquire the operations of GEOS geometries'. Does this mean that GEOS
geometry class or subclass methods like getArea() or getLength() functions
can be referenced from OGR-geometry objects? I think I've not well
understood as OGR-geometry and GEOS-geometry objects are not simply
interchangeable in PYTHON.
So it's not just for creating new geometry instances, we also want to
perform geometric and spatial-stat operations that generate some new
geometry instances as well. We considered that it requires the GEOS python
wrapper to perform geometry topology operations on scripting level as the
functionality within OGR is limited in this regard.

It might be helpful to explain some more what we are in to. I've just
posted another email getting also back to your comment that GEOS python
bindings are not being maintained and outlining briefly what we are aiming
for with our routine. For future of our develop-track, the prospectives of
python bindings are indeed crucial.
For now, as I think i certainly need GEOS, i have a working code with some
workarounds. It includes some untidy usage of OGR mixed with GEOS (i.e.
geometry instances conversion via OGRs. It's working for reading wkt
strings from PostgreSQL+Postgis database, but reading from shapefiles with
the OGR library give some problems.
My question in my first email on how to best create a new geometry - e.g.
GEOS LINESTRING remains. I've it working by defining a WKT-string and
using geos geometryfactory reader function. I guess there must be better
way.
My other problem with GeometryPtr might not be whre I initially thought it
was. An GEometryPtr instance of type LINESTRING with a getLength()
function is working well. However there is a series of function also
wrapped by the python swig, that give problems. Among them are
getPointN(), getStartPoint()
>From the python error message I can't tell where the problem exactly is,
seams in the underlying geos library called.
Could this possibly be due to bugs reported causing memory access violation
http://lists.refractions.net/pipermail/geos-devel/2006-March/001962.html
The windows geos python binding compilation, as not actively maintained
could possibly have been compiled around this time.
If so then further code cleaning get's here to end and need to stay with
my workaround.

thanks,

Nico












From sgillies at frii.com  Mon Mar 12 16:34:49 2007
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] how to construct geos geometry instances using 
	python bindings
In-Reply-To: <1733.82.216.150.142.1173729967.squirrel@webmail.falw.vu>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>
	<45EC486E.3080309@frii.com>
	<1733.82.216.150.142.1173729967.squirrel@webmail.falw.vu>
Message-ID: <45F5B969.3080407@frii.com>

N.J. Hardebol wrote:
> thanks for your response.
> 
> I 'm not sure though, if I've understood you well with 'OGR geometries
> acquire the operations of GEOS geometries'. Does this mean that GEOS
> geometry class or subclass methods like getArea() or getLength() functions
> can be referenced from OGR-geometry objects? I think I've not well
> understood as OGR-geometry and GEOS-geometry objects are not simply
> interchangeable in PYTHON.

Hi Nico,

The objects are not interchangeable, but OGR links in GEOS, and many 
methods of OGR geometries wrap corresponding GEOS functions. See the OGR 
geometry API docs:

http://www.gdal.org/ogr/classOGRGeometry.html

and compare to the GEOS geometry API:

http://geos.refractions.net/ro/doxygen_docs/html/classgeos_1_1geom_1_1Geometry.html

ogr.py geometries have get_Area(), get_Length(), and more. I hope that I 
am not stating the obvious to you.

> So it's not just for creating new geometry instances, we also want to
> perform geometric and spatial-stat operations that generate some new
> geometry instances as well. We considered that it requires the GEOS python
> wrapper to perform geometry topology operations on scripting level as the
> functionality within OGR is limited in this regard.
> 

What specifically does OGR lack?

> It might be helpful to explain some more what we are in to. I've just
> posted another email getting also back to your comment that GEOS python
> bindings are not being maintained and outlining briefly what we are aiming
> for with our routine. For future of our develop-track, the prospectives of
> python bindings are indeed crucial.
> For now, as I think i certainly need GEOS, i have a working code with some
> workarounds. It includes some untidy usage of OGR mixed with GEOS (i.e.
> geometry instances conversion via OGRs. It's working for reading wkt
> strings from PostgreSQL+Postgis database, but reading from shapefiles with
> the OGR library give some problems.
> My question in my first email on how to best create a new geometry - e.g.
> GEOS LINESTRING remains. I've it working by defining a WKT-string and
> using geos geometryfactory reader function. I guess there must be better
> way.
> My other problem with GeometryPtr might not be whre I initially thought it
> was. An GEometryPtr instance of type LINESTRING with a getLength()
> function is working well. However there is a series of function also
> wrapped by the python swig, that give problems. Among them are
> getPointN(), getStartPoint()
>>From the python error message I can't tell where the problem exactly is,
> seams in the underlying geos library called.
> Could this possibly be due to bugs reported causing memory access violation
> http://lists.refractions.net/pipermail/geos-devel/2006-March/001962.html
> The windows geos python binding compilation, as not actively maintained
> could possibly have been compiled around this time.
> If so then further code cleaning get's here to end and need to stay with
> my workaround.
> 
> thanks,
> 
> Nico
> 

Windows? I won't be much use to you. I've never personally compiled GEOS 
or the Python bindings on windows.

Sean

-- 
Sean Gillies
http://zcologia.com/news


From sgillies at frii.com  Mon Mar 12 17:03:16 2007
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] question on prospectives of python bindings to
	opensource geospatial libraries
In-Reply-To: <1729.82.216.150.142.1173729947.squirrel@webmail.falw.vu>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>
	<45EC486E.3080309@frii.com>
	<1729.82.216.150.142.1173729947.squirrel@webmail.falw.vu>
Message-ID: <45F5C014.3000306@frii.com>

N.J. Hardebol wrote:
> Hello,
> 
> In the email of Feb. 28 I posed some questions on python GEOS
> implementations to which Sean Gillies replied saying also that Python
> wrappers for GEOS are not actively maintained.
> http://geos.refractions.net/pipermail/geos-devel/2007-February/002848.html
> http://geos.refractions.net/pipermail/geos-devel/2007-March/002851.html
> 
> We ( = group of structural geologist - working on some academic coding -
> see below) were expecting that with the advances in spatial open source
> community, spatial statistics on scripting level (i.e. using python) would
> be a feasible development path. Although also ESRI has made certain steps
> allowing its topology functions to be called from within python we rather
> prefer to rely on open source libraries.
> For this we indeed require that GEOS and OGR developments would get better
> supported to higher scripting languages. Although not well documented use
> of swig python bindings appeared feasible to us. Further we noticed some
> new initiatives like PCL - cartography.
> You denoted that 'Python module in GEOS is not actively maintained' which
> is indeed a warning.
> Could you may give some more reflection and perspective on this?
> Are there any alternatives in which GEOS is somehow embedded and extended
> to python scripting level. e.g. initiatives like PCL?
> 
> It might be helpful to explain some more what we are in to. We're a
> research-group of structural geologists working on new field acquisition
> and post field data processing procedures. We try to characterize the
> fracture patterns in rocks on cms to 100s of meters scale. For this we
> acquire fractures digitized as polylines using a tablet pc and a
> customized arcpad application. In the post-field processing we prefer to
> remain independent of esri solutions and we've developed a small fracture
> statistics routine. This routine is written with python and reads fracture
> data from shapefiles
> using the ogr-library and then some basic spatial statistics (fracture
> spacing etc...) is being calculated using GEOS-functionality. In a pilot
> project, using linux and with shapefiles as data-repository this worked
> well.  Further improving coding and aiming for advanced processing my
> migrating data to postgresql+postgis and adding user friendliness by
> porting code to windows environment we can still obtain a working code.
> However have run in some problems and also when cleaning up of code we've
> noticed some untidy, mixed and inconsistent use of OGR and GEOS libraries.
> 
> Any suggestions on devolopers track or getting connected with devolpers
> pursuing comparable goals would help us.
> 
> thanks,
> 
> Nico
> 

Hi Nico,

Since you are working on windows, I recommend that you introduce 
yourself to the GDAL/OGR community, and talk to the developers about 
adding the functionality that you need. PCL (I am the lead programmer) 
has a nicer Python API, but is not as mature as ogr.py, and has no 
current binary distribution for win32.

Cheers,
Sean

-- 
Sean Gillies
http://zcologia.com/news


From mateusz at loskot.net  Mon Mar 12 17:20:42 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] question on prospectives of python bindings
	to	opensource geospatial libraries
In-Reply-To: <45F5C014.3000306@frii.com>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>	<45EC486E.3080309@frii.com>	<1729.82.216.150.142.1173729947.squirrel@webmail.falw.vu>
	<45F5C014.3000306@frii.com>
Message-ID: <45F5C42A.1060406@loskot.net>

Sean Gillies wrote:
> N.J. Hardebol wrote:
>> [...]
>> Any suggestions on devolopers track or getting connected with devolpers
>> pursuing comparable goals would help us.
>>
>> thanks,
>>
>> Nico
>>
> 
> Hi Nico,
> 
> Since you are working on windows, I recommend that you introduce
> yourself to the GDAL/OGR community, and talk to the developers about
> adding the functionality that you need. PCL (I am the lead programmer)
> has a nicer Python API, but is not as mature as ogr.py, and has no
> current binary distribution for win32.

Right, good idea Sean.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From mateusz at loskot.net  Mon Mar 12 17:21:47 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] how to construct geos geometry instances using 
	python bindings
In-Reply-To: <45F5B969.3080407@frii.com>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>	<45EC486E.3080309@frii.com>	<1733.82.216.150.142.1173729967.squirrel@webmail.falw.vu>
	<45F5B969.3080407@frii.com>
Message-ID: <45F5C46B.1010207@loskot.net>

Sean Gillies wrote:
> Windows? I won't be much use to you. I've never personally compiled GEOS
> or the Python bindings on windows.

I can help with any GEOS on Windows related problems.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From juliogalindoq at gmail.com  Fri Mar 16 14:43:18 2007
From: juliogalindoq at gmail.com (Julio Galindo)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] how to construct geos geometry instances using
	python bindings
In-Reply-To: <45F5C46B.1010207@loskot.net>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>
	<45EC486E.3080309@frii.com>
	<1733.82.216.150.142.1173729967.squirrel@webmail.falw.vu>
	<45F5B969.3080407@frii.com> <45F5C46B.1010207@loskot.net>
Message-ID: <5eb35f470703161143i6e79472ctdd31328d3be99e04@mail.gmail.com>

Hi Mateusz,

Do you know if some one has compiled  POSTGIS with Goes Release 3 for
windows?

Regards,

Julio Galindo.


On 3/12/07, Mateusz Loskot <mateusz@loskot.net> wrote:
>
> Sean Gillies wrote:
> > Windows? I won't be much use to you. I've never personally compiled GEOS
> > or the Python bindings on windows.
>
> I can help with any GEOS on Windows related problems.
>
> Cheers
> --
> Mateusz Loskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20070316/5854137d/attachment.html
From mateusz at loskot.net  Fri Mar 16 14:59:18 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] how to construct geos geometry instances using	python
	bindings
In-Reply-To: <5eb35f470703161143i6e79472ctdd31328d3be99e04@mail.gmail.com>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>	<45EC486E.3080309@frii.com>	<1733.82.216.150.142.1173729967.squirrel@webmail.falw.vu>	<45F5B969.3080407@frii.com>
	<45F5C46B.1010207@loskot.net>
	<5eb35f470703161143i6e79472ctdd31328d3be99e04@mail.gmail.com>
Message-ID: <45FAE906.8090609@loskot.net>

Julio Galindo wrote:
> Hi Mateusz,
> 
> Do you know if some one has compiled  POSTGIS with Goes Release 3 for
> windows?

Julio,

No, I don't know it.
I'd suggest you to ask on the postgis list.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From juliogalindoq at gmail.com  Fri Mar 16 15:41:49 2007
From: juliogalindoq at gmail.com (Julio Galindo)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] how to construct geos geometry instances using
	python bindings
In-Reply-To: <45FAE906.8090609@loskot.net>
References: <2358.82.216.150.142.1172699506.squirrel@webmail.falw.vu>
	<45EC486E.3080309@frii.com>
	<1733.82.216.150.142.1173729967.squirrel@webmail.falw.vu>
	<45F5B969.3080407@frii.com> <45F5C46B.1010207@loskot.net>
	<5eb35f470703161143i6e79472ctdd31328d3be99e04@mail.gmail.com>
	<45FAE906.8090609@loskot.net>
Message-ID: <5eb35f470703161241t627d9a83tac248b06d5e85cb9@mail.gmail.com>

Thanks for your answer. I will ask there.

Cheers,

Julio


On 3/16/07, Mateusz Loskot <mateusz@loskot.net> wrote:
>
> Julio Galindo wrote:
> > Hi Mateusz,
> >
> > Do you know if some one has compiled  POSTGIS with Goes Release 3 for
> > windows?
>
> Julio,
>
> No, I don't know it.
> I'd suggest you to ask on the postgis list.
>
> Cheers
> --
> Mateusz Loskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20070316/b95f3e0e/attachment.html
From carl.anderson at vadose.org  Sun Mar 18 21:15:43 2007
From: carl.anderson at vadose.org (Carl Anderson)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] buffer issue 
Message-ID: <45FDE43F.4050103@vadose.org>

Test case attached.

On the face of it, I'd bet that this and the "big_nasty" have the same 
root logic issue.

I will try to track it down this week.

C.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: u3small.xml
Type: text/xml
Size: 2259 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070318/6b42e2c1/u3small.xml
