From pramsey at refractions.net  Tue Oct  1 12:51:10 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Update on Relate()?
Message-ID: <3D99D27E.6070000@refractions.net>

Yury,
What word on the progress with Relate()?
Paul

-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From mbdavis at VividSolutions.com  Tue Oct  1 12:58:58 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Update on Relate()?
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A299F@venus.VividSolutions.com>

I'll jump in with my 2 cents worth here (but Yury, please still post a status update).

Yury & I had our regular status meeting yesterday.  He's at the stage of running the test suite through relate.  I believe that 80% (?) of the tests work, but there are a few bugs in the other ones.  We worked through a problem he was having with a simple test case yesterday, and were able to quickly identify a Java-C++ translation issue that was causing it. (value-base equality vs reference equality, if you want the gory details).  He's going to go through his code and ensure this isn't cropping up elsewhere.  

There may be more bugs, of course (Yury can give us an idea of how many test cases still cause problems) but I suspect it won't take long to eliminate them.  It's sure nice have an implementation that works correctly to compare the ported code against!  I suspected this would make the debugging of the ported code a lot easier, and it's nice to see that prove correct.

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Paul Ramsey [mailto:pramsey@refractions.net]
> Sent: Tuesday, October 01, 2002 9:51 AM
> To: geos-devel@geos.refractions.net
> Subject: [geos-devel] Update on Relate()?
> 
> 
> Yury,
> What word on the progress with Relate()?
> Paul
> 
> -- 
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From pramsey at refractions.net  Sun Oct  6 22:44:34 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Another Portability Quirk
Message-ID: <3DA0F512.5060002@refractions.net>

My GNU compilation us currently failing with an error of this sort:

Polygon.cpp:223: no matching function for call to `vector<Geometry *,
allocator<Geometry *> >::at (unsigned int &)'

With the offending code looking like:

         for(unsigned int i=0;i<holes.size();i++) {
                 holes.at(i)->apply(filter);
         }

I assume 'holes' is a 'vector' object from the STL and 'at()' is a 
function name which does not exist in my GNU version of the STL.

P.



From pramsey at refractions.net  Sun Oct  6 22:57:26 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] More Info - Another Portability Quirk
References: <3DA0F512.5060002@refractions.net>
Message-ID: <3DA0F816.40503@refractions.net>

I just went through my stl_*.h files, as well as the G++ STL online 
documentation, and it looks like at() is a recent addition to the G++ 
STL -- sometime in the 3.x series (mine is from gcc 2.96 vintage). Are 
there other accessors which are possible, or is a latest-and-greatest 
STL going to be one of our requirements? Is there a way of having 
configure check the existance of various components of the STL?

BTW, congratulations Yury on getting Relate close to completion! We are 
really looking forward to the integration! Keep on it!

Paul

Paul Ramsey wrote:
> My GNU compilation us currently failing with an error of this sort:
> 
> Polygon.cpp:223: no matching function for call to `vector<Geometry *,
> allocator<Geometry *> >::at (unsigned int &)'
> 
> With the offending code looking like:
> 
>         for(unsigned int i=0;i<holes.size();i++) {
>                 holes.at(i)->apply(filter);
>         }
> 
> I assume 'holes' is a 'vector' object from the STL and 'at()' is a 
> function name which does not exist in my GNU version of the STL.
> 
> P.
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 




From nhv at cape.com  Sun Oct  6 23:34:21 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] More Info - Another Portability Quirk
References: <3DA0F512.5060002@refractions.net> <3DA0F816.40503@refractions.net>
Message-ID: <001e01c26db2$6dcef080$0100a8c0@sfdev3>

Paul Ramsey writes:

> I just went through my stl_*.h files, as well as the G++ STL online 
> documentation, and it looks like at() is a recent addition to the G++ 
> STL -- sometime in the 3.x series (mine is from gcc 2.96 vintage). Are 
> there other accessors which are possible, or is a latest-and-greatest 
> STL going to be one of our requirements? Is there a way of having 
> configure check the existance of various components of the STL?

Paul

You can use the [] operator, in fact I made all of the changes
locally todo this then realized that the at() method performs
an out of range check that the [] operator doesn't so didn't
forward my changes.

as you noticed  according to http://gcc.gnu.org/libstdc++/status.html
gcc users will need to use a 3.x version inorder to use libstdc++3

My current thinking is that it is probably worth going with the
newer at() because of the builtin range checking

As a temporary measure I could update my patch so that it
was done with a bunch of 
#if defined(__GNUC__) &&  (__GNUC__ < 3 )
 use []
#else
 use at()
#endif

but this is rather ugly :-(

Another solution would be to use a typedef

#if defined(__GNUC__) &&  (__GNUC__ < 3 )
typedef GEOS_VECTOR geos_vector

template < class _Tp >
class geos_vector < _Tp > : public vector < _Tp >
{
// add at() members
  reference at(size_type __n)
    { return (*this)[__n]; }

  const_reference at(size_type __n) const
    { return (*this)[__n]; }
}
 
#else
 typedef GEOS_VECTOR vector
#endif

and change all occurrences of vector to GEOS_VECTOR

Cheers

Norman



From nhv at cape.com  Mon Oct  7 01:00:01 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] More Info - Another Portability Quirk
References: <3DA0F512.5060002@refractions.net> <3DA0F816.40503@refractions.net> <001e01c26db2$6dcef080$0100a8c0@sfdev3>
Message-ID: <004501c26dbe$6528c620$0100a8c0@sfdev3>

Norman Vine wrote:

> Paul Ramsey writes:
>
> > I just went through my stl_*.h files, as well as the G++ STL online
> > documentation, and it looks like at() is a recent addition to the G++
> > STL -- sometime in the 3.x series (mine is from gcc 2.96 vintage). Are
> > there other accessors which are possible, or is a latest-and-greatest
> > STL going to be one of our requirements? Is there a way of having
> > configure check the existance of various components of the STL?
>
> Paul
>
> You can use the [] operator, in fact I made all of the changes
> locally todo this then realized that the at() method performs
> an out of range check that the [] operator doesn't so didn't
> forward my changes.

I have placed < temporarily > a tarball of tonight's CVS source files with
changes to use the vector<> [] operator instead of the vector<>.at() method
@
http://www.vso.cape.com/~nhv/files/postgres/geos_nhv_src.tgz

This compiles for me with gcc-2.95.10 < Cygwin >

Cheers

Norman



From ybychkov at direct.ca  Mon Oct  7 04:51:14 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Update on Relate()
References: <5A94289A9268514C8D6C0F1FF44BA0270A299F@venus.VividSolutions.com>
Message-ID: <009a01c26dde$b3458440$de354d18@yury>

Good news today. I've had several breakthroughs today with relate() debugging.
Now it can correctly execute 488 out of 490 test in test/validate. There are
still some memory leaks, but hopefully fixing that (and remaining 2 cases) will
not take long.

Yury




From nhv at cape.com  Mon Oct  7 19:25:24 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Re: About < temporarily > GEOS tarball of tonight's CVS source
References: <3DFF131E4E6D2D4198CDD758F35A5353010ABD5E@postoffice.GASAI.Com> <3D77448B.5040803@frw.uva.nl> <02ec01c254d6$07cc9de0$0100a8c0@sfdev3> <006801c26e0a$f9462f90$650202c0@vip> <01fa01c26e0c$94053f70$0100a8c0@sfdev3> <00b301c26e55$466561c0$650202c0@vip>
Message-ID: <00bf01c26e58$d4dd8560$0100a8c0@sfdev3>

Hisaji ONO writes:

> Thank you very much for your help, Mr. Vine.
>
>  I could download CVS codes and overwrite your modifications over them.
>
>  However I've got following error messages after executing  make.
>
>
g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers -I../../source/headers -D
> GEOS
> _VERSION=\"0.0.1\" -g -O2 -c
>
./graph/index/MonotoneChainEdge.cpp -Wp,-MD,.deps/MonotoneChainEdge.TPlo  -D
PIC -DPIC -o MonotoneChainEdge.o
> ../graph/index/MonotoneChainEdge.cpp: In method `double
MonotoneChainEdge::getMinX(int)':
> ../graph/index/MonotoneChainEdge.cpp:43: no matching function for call to
`vector<int,allocator<int> >::at (int &)'

it seems as if we are working from different sources
this is what I have for   ../graph/index/MonotoneChainEdge.cpp:43
 double x1=pts.getAt(startIndex[chainIndex]).x;

ACK...  I see ....  I didn't get all of my changes into the tarball

OK - I have uploaded a new tarball which should hopefully have all
my changes this time

# this tarball made with this command from $geos/src
tar -czvf nhv_src.tgz */*.cpp */*/*.cpp */*.h */Makefile.am

new file @
http://www.vso.cape.com/~nhv/files/postgres/geos_nhv_src.tgz

My apologies for the inconvenience

Norman


==========
Instructions:
==========
 This is just the 'source' directory

 You will need a complete set of GEOS files from
 the CVS inorder to get this to work

 Best to back up your originals first


 ie after doing a CVS checkout
 cd to $GEOS source
 # make a tarball of eveeryting
 % tar -czvf orig_src.tgz */*.cpp */*/*.cpp */*.h */Makefile.am
 # extract my files
 % tar -xzvf $PATH_TO/nhv_src.tgz

 # reconfigure GEOS
 % cd $GEOS
 % ./autogen.sh
 % ./configure
 % make





From nhv at cape.com  Tue Oct  8 11:42:58 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Re: About < temporarily > GEOS tarball of tonight's CVS source
References: <3DFF131E4E6D2D4198CDD758F35A5353010ABD5E@postoffice.GASAI.Com> <3D77448B.5040803@frw.uva.nl> <02ec01c254d6$07cc9de0$0100a8c0@sfdev3> <006801c26e0a$f9462f90$650202c0@vip> <01fa01c26e0c$94053f70$0100a8c0@sfdev3> <00b301c26e55$466561c0$650202c0@vip> <00bf01c26e58$d4dd8560$0100a8c0@sfdev3> <009a01c26ece$d8e83490$650202c0@vip> <020a01c26ecf$d8b76b20$0100a8c0@sfdev3> <00b501c26ed8$8b05a730$650202c0@vip>
Message-ID: <024201c26ee1$616d86a0$0100a8c0@sfdev3>

Hisaji ONO writes:

> Thank you for your quick response, Mr. Vine.
> 
>  I mistook a directory to unarcve your modification files.
> 
>  After unarchive  modification files in correct directory, exec make, but
> I've got following errors.

< error messages snipped >

Ooops 

You will need to use the attached configure.in 
inorder to compile this with Cygwin 
< my changes should not affect other systems
  but I am not sure therefore I have not commited this
  to the CVS >

FYI - I am using a VERY current Cygwin < CVS >
but this should work with the 'current' Cygwin releases.
I am not sure if it will work with anything but the 'latest' Cygwin 
Binutils and 'experimental' automake autoconf and libtool packages

These are all available from http://www.cygwin.com
by using the Cygwin setup program found there

After installing the new configure.in you will need to do

% make clean
% ./autogen.sh
% ./configure
% make

HTH

Norman


-------------- next part --------------
A non-text attachment was scrubbed...
Name: configure.in
Type: application/octet-stream
Size: 1627 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20021008/05ba649e/configure.obj
From mbdavis at VividSolutions.com  Tue Oct 15 18:34:34 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Incorporating JTS 1.2 changes
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2A4F@venus.VividSolutions.com>

As people have probably seen, Version 1.2 of JTS has been released to the world.   It incorporates a couple of significant changes:

- repeated points are now handled
- the robustness of line segment intersection has been improved.

The GEOS project team probably need to think about if, when and how these changes should be rolled into GEOS.



Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com



From ybychkov at direct.ca  Tue Oct 15 19:12:14 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Status Report (October 15)
Message-ID: <00b901c274a0$4ded6c70$de354d18@yury>

Hi Everyone.

Last three weeks I was debugging relate() operation. There were numerous
problems mostly caused by subtle differences between C++ and Java.

Current state of GEOS:
Relate() operation works and my tester successfully executes all 500 tests from
JTS/test/validate. However 2 of those tests take too long to execute.

Next to do:
Profile the code in order to fix these 2 tests. Fix some memory leaks.

Yury





From pramsey at refractions.net  Wed Oct 16 13:59:11 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Status Report (October 15)
References: <00b901c274a0$4ded6c70$de354d18@yury>
Message-ID: <3DADA8EF.30500@refractions.net>

Thanks Yury,
Would you commit your working-but-slow changes so that the portability 
crew can get things compiling under GNU? It looks like things are in a 
state where some integration work would not be impossible and the API to 
Relate should be stable here on in...
P.

Yury A. Bychkov wrote:
> Hi Everyone.
> 
> Last three weeks I was debugging relate() operation. There were numerous
> problems mostly caused by subtle differences between C++ and Java.
> 
> Current state of GEOS:
> Relate() operation works and my tester successfully executes all 500 tests from
> JTS/test/validate. However 2 of those tests take too long to execute.
> 
> Next to do:
> Profile the code in order to fix these 2 tests. Fix some memory leaks.
> 
> Yury

-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From dblasby at refractions.net  Wed Oct 16 14:10:05 2002
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Incorporating JTS 1.2 changes
References: <5A94289A9268514C8D6C0F1FF44BA0270A2A4F@venus.VividSolutions.com>
Message-ID: <3DADAB7D.EDDE2564@refractions.net>

Martin Davis wrote:

> As people have probably seen, Version 1.2 of JTS has been released to the world.   It incorporates a couple of significant changes:
>
> - repeated points are now handled
> - the robustness of line segment intersection has been improved.
>
> The GEOS project team probably need to think about if, when and how these changes should be rolled into GEOS.

Are these changes going to affect the relate() functions?

If not, lets add these changes in when yuri starts on the "intersection"-based functions.

I'd really like to get these changes in fairly soon so we dont have to worry about code drift.

dave



From mbdavis at VividSolutions.com  Wed Oct 16 14:13:18 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Incorporating JTS 1.2 changes
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2A5C@venus.VividSolutions.com>

They do affect relate().  In JTS 1.1 relate() would fail if run on an geometry containing repeated points (since this was an invalid geometry according to the JTS 1.1 model).  In JTS 1.2 repeated points are effectively removed before operations are performed, so repeated points are no longer a failure case.

The changes are not too major, so it should be not problem to roll them in.    They should be independent of the debugging work Yury is doing now.  Perhaps the best strategy is to let him carry on cleaning up the current code.  When that's complete, he can roll in the changes from 1.2 before continuing on to the overlay ops and other operations.

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: David Blasby [mailto:dblasby@refractions.net]
> Sent: Wednesday, October 16, 2002 11:10 AM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Incorporating JTS 1.2 changes
> 
> 
> Martin Davis wrote:
> 
> > As people have probably seen, Version 1.2 of JTS has been 
> released to the world.   It incorporates a couple of 
> significant changes:
> >
> > - repeated points are now handled
> > - the robustness of line segment intersection has been improved.
> >
> > The GEOS project team probably need to think about if, when 
> and how these changes should be rolled into GEOS.
> 
> Are these changes going to affect the relate() functions?
> 
> If not, lets add these changes in when yuri starts on the 
> "intersection"-based functions.
> 
> I'd really like to get these changes in fairly soon so we 
> dont have to worry about code drift.
> 
> dave
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From dblasby at refractions.net  Wed Oct 16 14:26:13 2002
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Incorporating JTS 1.2 changes
References: <5A94289A9268514C8D6C0F1FF44BA0270A2A5C@venus.VividSolutions.com>
Message-ID: <3DADAF45.1C670ED7@refractions.net>

Martin Davis wrote:

> The changes are not too major, so it should be not problem to roll them in.    They should be independent of the debugging work Yury is doing now.  Perhaps the best strategy is to let him carry on cleaning up the current code.  When that's complete, he can roll in the changes from 1.2 before continuing on to the overlay ops and other operations.

I like that idea - lets let yuri do his debugging and optimization then stick in the 1.2 changes before he hits the next stuff.

dave



From ybychkov at direct.ca  Thu Oct 17 03:16:16 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Status Report (October 15)
References: <00b901c274a0$4ded6c70$de354d18@yury>
 <3DADA8EF.30500@refractions.net>
Message-ID: <001e01c275ad$161ebb60$de354d18@yury>

> Would you commit your working-but-slow changes so that the portability 
> crew can get things compiling under GNU?
Done. The latest version is in repository now.

Yury




From nhv at cape.com  Sat Oct 19 17:04:55 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Status Report (October 15)
References: <00b901c274a0$4ded6c70$de354d18@yury> <3DADA8EF.30500@refractions.net> <001e01c275ad$161ebb60$de354d18@yury>
Message-ID: <005801c277b3$3023f770$a737ba8c@sfdev3>

Yury A. Bychkov writes:

> > Would you commit your working-but-slow changes so that the portability 
> > crew can get things compiling under GNU?
> Done. The latest version is in repository now.

Here is a tarball of my GEOS directory 
This contains the changes I  made to get GEOS to compile with  
Cygwin using gcc 2.95.3

http://www.vso.cape.com/~nhv/files/postgres/geos_nhv.tgz

Cheers

Norman




From pramsey at refractions.net  Tue Oct 22 20:28:21 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Status Report (October 15)
References: <00b901c274a0$4ded6c70$de354d18@yury> <3DADA8EF.30500@refractions.net> <001e01c275ad$161ebb60$de354d18@yury> <005801c277b3$3023f770$a737ba8c@sfdev3>
Message-ID: <3DB5ED25.9070901@refractions.net>

OK, having diff'ed up this tarball, it looks like 99% of the changes are 
-at(x)
+[x]
in addition to that there are a bunch of changes to the build 
envirnoment to account for the new files. Norman, could you commit the 
changes to the build environment ASAP, for a  start?
Everyone, could we have some kind of decision on whether at() is a 
requirement? Norman noted that there is a bounds-check in at() which is 
not there in []. Is this check required by the code, or not? if not, I 
would just as soon use [], since we get wider compatibility with it. 
Otherwise we will have to require very fresh releases of the GNU STL in 
order to compile in GNU.
P.

Norman Vine wrote:
> Yury A. Bychkov writes:
> 
> 
>>>Would you commit your working-but-slow changes so that the portability 
>>>crew can get things compiling under GNU?
>>
>>Done. The latest version is in repository now.
> 
> 
> Here is a tarball of my GEOS directory 
> This contains the changes I  made to get GEOS to compile with  
> Cygwin using gcc 2.95.3
> 
> http://www.vso.cape.com/~nhv/files/postgres/geos_nhv.tgz
> 
> Cheers
> 
> Norman
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From nhv at cape.com  Tue Oct 22 22:27:51 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Status Report (October 15)
References: <00b901c274a0$4ded6c70$de354d18@yury> <3DADA8EF.30500@refractions.net> <001e01c275ad$161ebb60$de354d18@yury> <005801c277b3$3023f770$a737ba8c@sfdev3> <3DB5ED25.9070901@refractions.net>
Message-ID: <00c301c27a3b$ca35d560$7d37ba8c@sfdev3>

Paul Ramsey writes:

> OK, having diff'ed up this tarball, it looks like 99% of the changes are
> -at(x)
> +[x]
> in addition to that there are a bunch of changes to the build
> envirnoment to account for the new files. Norman, could you commit the
> changes to the build environment ASAP, for a  start?

Done

Norman

Checking in configure.in;
/home/cvs/postgis/geos/configure.in,v  <--  configure.in
new revision: 1.7; previous revision: 1.6
done
Checking in source/Makefile.am;
/home/cvs/postgis/geos/source/Makefile.am,v  <--  Makefile.am
new revision: 1.5; previous revision: 1.4
done
Checking in source/geom/Geometry.cpp;
/home/cvs/postgis/geos/source/geom/Geometry.cpp,v  <--  Geometry.cpp
new revision: 1.7; previous revision: 1.6
done
Checking in source/geom/GeometryCollection.cpp;
/home/cvs/postgis/geos/source/geom/GeometryCollection.cpp,v  <--
GeometryCollection.cpp
new revision: 1.5; previous revision: 1.4
done
Checking in source/geom/Makefile.am;
/home/cvs/postgis/geos/source/geom/Makefile.am,v  <--  Makefile.am
new revision: 1.6; previous revision: 1.5
done
Checking in source/geom/Polygon.cpp;
/home/cvs/postgis/geos/source/geom/Polygon.cpp,v  <--  Polygon.cpp
new revision: 1.5; previous revision: 1.4
done
Checking in source/graph/Depth.cpp;
/home/cvs/postgis/geos/source/graph/Depth.cpp,v  <--  Depth.cpp
new revision: 1.2; previous revision: 1.1
done
Checking in source/graph/DirectedEdgeStar.cpp;
/home/cvs/postgis/geos/source/graph/DirectedEdgeStar.cpp,v  <--
DirectedEdgeStar.cpp
new revision: 1.6; previous revision: 1.5
done
Checking in source/graph/EdgeEnd.cpp;
/home/cvs/postgis/geos/source/graph/EdgeEnd.cpp,v  <--  EdgeEnd.cpp
new revision: 1.3; previous revision: 1.2
done
Checking in source/graph/EdgeEndStar.cpp;
/home/cvs/postgis/geos/source/graph/EdgeEndStar.cpp,v  <--  EdgeEndStar.cpp
new revision: 1.6; previous revision: 1.5
done
Checking in source/graph/EdgeIntersection.cpp;
/home/cvs/postgis/geos/source/graph/EdgeIntersection.cpp,v  <--
EdgeIntersection.cpp
new revision: 1.2; previous revision: 1.1
done
Checking in source/graph/EdgeList.cpp;
/home/cvs/postgis/geos/source/graph/EdgeList.cpp,v  <--  EdgeList.cpp
new revision: 1.3; previous revision: 1.2
done

Checking in source/graph/EdgeRing.cpp;
/home/cvs/postgis/geos/source/graph/EdgeRing.cpp,v  <--  EdgeRing.cpp
new revision: 1.3; previous revision: 1.2
done
Checking in source/graph/PlanarGraph.cpp;
/home/cvs/postgis/geos/source/graph/PlanarGraph.cpp,v  <--  PlanarGraph.cpp
new revision: 1.5; previous revision: 1.4
done
Checking in source/graph/Quadrant.cpp;
/home/cvs/postgis/geos/source/graph/Quadrant.cpp,v  <--  Quadrant.cpp
new revision: 1.3; previous revision: 1.2
done
Checking in source/graph/index/MonotoneChainEdge.cpp;
/home/cvs/postgis/geos/source/graph/index/MonotoneChainEdge.cpp,v  <--
MonotoneChainEdge.cpp
new revision: 1.2; previous revision: 1.1
done
Checking in source/graph/index/SegmentIntersector.cpp;
/home/cvs/postgis/geos/source/graph/index/SegmentIntersector.cpp,v  <--
SegmentIntersector.cpp
new revision: 1.6; previous revision: 1.5
done
Checking in source/graph/index/SimpleMCSweepLineIntersector.cpp;
/home/cvs/postgis/geos/source/graph/index/SimpleMCSweepLineIntersector.cpp,v
<--  SimpleMCSweepLineIntersector.cpp
new revision: 1.4; previous revision: 1.3
done
Checking in source/graph/index/SweepLineEvent.cpp;
/home/cvs/postgis/geos/source/graph/index/SweepLineEvent.cpp,v  <--
SweepLineEvent.cpp
new revision: 1.3; previous revision: 1.2
done
Checking in source/operation/GeometryGraphOperation.cpp;
/home/cvs/postgis/geos/source/operation/GeometryGraphOperation.cpp,v  <--
GeometryGraphOperation.cpp
new revision: 1.3; previous revision: 1.2
done
Checking in source/operation/relate/RelateComputer.cpp;
/home/cvs/postgis/geos/source/operation/relate/RelateComputer.cpp,v  <--
RelateComputer.cpp
new revision: 1.3; previous revision: 1.2
done
Checking in source/test/CTS.cpp;
/home/cvs/postgis/geos/source/test/CTS.cpp,v  <--  CTS.cpp
new revision: 1.2; previous revision: 1.1
done
Checking in source/test/SimpleWKTTester.cpp;
/home/cvs/postgis/geos/source/test/SimpleWKTTester.cpp,v  <--
SimpleWKTTester.cpp
new revision: 1.2; previous revision: 1.1
done
Checking in source/test/XMLTester.cpp;
/home/cvs/postgis/geos/source/test/XMLTester.cpp,v  <--  XMLTester.cpp
new revision: 1.5; previous revision: 1.4
done



From nhv at cape.com  Wed Oct 23 07:18:04 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] CVS Tools
References: <00b901c274a0$4ded6c70$de354d18@yury> <3DADA8EF.30500@refractions.net> <001e01c275ad$161ebb60$de354d18@yury> <005801c277b3$3023f770$a737ba8c@sfdev3> <3DB5ED25.9070901@refractions.net>
Message-ID: <012201c27a85$ddb91ad0$3636ba8c@sfdev3>

Hi All

Two tools I have found VERY helpful for distributed
CVS based development

http://sourceforge.net/projects/cvs-syncmail/
syncmail is a CVS notification tool which provides a unified or context diff
for every change to a cvs repository, mailed to a specified email address.
This tool is extremely useful for large communities to monitor changes to a
code base, and is currentl


http://sourceforge.net/projects/viewcvs
ViewCVS can browse directories, change logs, and specific revisions of
files. It can display diffs between versions and show selections of files
based on tags or branches. In addition, ViewCVS has "annotation" or "blame"
support, Bonsai-like query facilities, template-based page generation, and
support for individually configuring virtual hosts.

Any chance of getting these or their equivalant setup ?

I gladly offer any assistance I can provide to help doing this as
I am convinced using them will help make GEOS and PostGIS better.

Cheers

Norman



From mbdavis at VividSolutions.com  Wed Oct 23 11:55:30 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] [] vs at()
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2AC2@venus.VividSolutions.com>

> Everyone, could we have some kind of decision on whether at() is a 
> requirement? Norman noted that there is a bounds-check in 
> at() which is 
> not there in []. Is this check required by the code, or not? 

My take on this is that using [] should be fine, in spite of the lack of bounds checking.  Since we're working from 
pretty well debugged Java code, we're pretty safe in assuming that the algorithms do not go zinging off the end of arrays.
(If they did, the Java code would report bounds exceptions - but it never does).

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com

 


From pramsey at refractions.net  Wed Oct 23 12:05:26 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] [] vs at()
References: <5A94289A9268514C8D6C0F1FF44BA0270A2AC2@venus.VividSolutions.com>
Message-ID: <3DB6C8C6.5020209@refractions.net>

Yury, do you concur? If so, globally commit that change ASAP.
Thanks, Paul

Martin Davis wrote:
>>Everyone, could we have some kind of decision on whether at() is a 
>>requirement? Norman noted that there is a bounds-check in 
>>at() which is 
>>not there in []. Is this check required by the code, or not? 
> 
> 
> My take on this is that using [] should be fine, in spite of the lack of bounds checking.  Since we're working from 
> pretty well debugged Java code, we're pretty safe in assuming that the algorithms do not go zinging off the end of arrays.
> (If they did, the Java code would report bounds exceptions - but it never does).
> 
> Martin Davis, Senior Technical Specialist
> Vivid Solutions Inc.
> Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
> Phone: (250) 385 6040    Fax: (250) 385 6046
> EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com
> 
>  
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From ybychkov at direct.ca  Wed Oct 23 22:47:25 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] [] vs at()
References: <5A94289A9268514C8D6C0F1FF44BA0270A2AC2@venus.VividSolutions.com>
 <3DB6C8C6.5020209@refractions.net>
Message-ID: <017101c27b07$d5f891e0$de354d18@yury>

Yes, [] should work fine. I'll do the changes as soon as I can.

Yury

----- Original Message -----
From: "Paul Ramsey" <pramsey@refractions.net>
To: <geos-devel@geos.refractions.net>
Sent: Wednesday, October 23, 2002 9:05 AM
Subject: Re: [geos-devel] [] vs at()


> Yury, do you concur? If so, globally commit that change ASAP.
> Thanks, Paul
>
> Martin Davis wrote:
> >>Everyone, could we have some kind of decision on whether at() is a
> >>requirement? Norman noted that there is a bounds-check in
> >>at() which is
> >>not there in []. Is this check required by the code, or not?
> >
> >
> > My take on this is that using [] should be fine, in spite of the lack of
bounds checking.  Since we're working from
> > pretty well debugged Java code, we're pretty safe in assuming that the
algorithms do not go zinging off the end of arrays.
> > (If they did, the Java code would report bounds exceptions - but it never
does).
> >
> > Martin Davis, Senior Technical Specialist
> > Vivid Solutions Inc.
> > Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
> > Phone: (250) 385 6040    Fax: (250) 385 6046
> > EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com
> >
> >
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> >
>
>
> --
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>




From pramsey at refractions.net  Thu Oct 24 01:16:57 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability Modifications
Message-ID: <3DB78249.DE4E7862@refractions.net>

Yury,
The patchset Norman committed last night seems to include all the at()
-> [] changes already, so you should probably do a careful update to
pull those into your sandbox (careful because there might be some
conflicts).
Norman,
I can compile almost everything now, the only exceptions are in
source/test, the CTS program dies when it tries to link. I am too thick
to quite understand all the interdependencies going on, I am afraid. 

/bin/sh ../../libtool --mode=link g++  -g -O2  -o CTS  CTS.o
../geom/libgeos.la ../geom/libgeos.la
g++ -g -O2 -o .libs/CTS CTS.o  ../geom/.libs/libgeos.so -Wl,--rpath
-Wl,/usr/local/lib
CTS.o: In function `ParseException type_info function':
/home/pramsey/geos/source/test/CTS.cpp:524: undefined reference to
`ParseException::~ParseException(void)'
/home/pramsey/geos/source/test/CTS.cpp:524: undefined reference to
`ParseException::toString(void)'
/home/pramsey/geos/source/test/CTS.cpp:524: undefined reference to
`ParseException::~ParseException(void)'
../geom/.libs/libgeos.so: undefined reference to `Assert::isTrue(bool)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::isSimple(LineString *)'
../geom/.libs/libgeos.so: undefined reference to
`RelateOp::relate(Geometry *, Geometry *)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::length(CoordinateList)'
../geom/.libs/libgeos.so: undefined reference to
`WKTWriter::WKTWriter(void)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::signedArea(CoordinateList)'
../geom/.libs/libgeos.so: undefined reference to
`WKTWriter::~WKTWriter(void)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::distancePointLine(Coordinate, Coordinate, Coordinate)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::distanceLineLine(Coordinate, Coordinate, Coordinate,
Coordinate)'
../geom/.libs/libgeos.so: undefined reference to
`GeometryGraph::GeometryGraph(int, Geometry *)'
../geom/.libs/libgeos.so: undefined reference to
`GeometryGraph::getBoundaryPoints(void)'
../geom/.libs/libgeos.so: undefined reference to
`Assert::shouldNeverReachHere(void)'
../geom/.libs/libgeos.so: undefined reference to
`WKTWriter::write(Geometry *)'
../geom/.libs/libgeos.so: undefined reference to
`Assert::shouldNeverReachHere(basic_string<char,
string_char_traits<char>, __default_alloc_template<true, 0> >)'
../geom/.libs/libgeos.so: undefined reference to
`RobustCGAlgorithms::RobustCGAlgorithms(void)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::isSimple(MultiLineString *)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::IsSimpleOp(void)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::isSimple(MultiPoint *)'
collect2: ld returned 1 exit status
make: *** [CTS] Error 1


From pramsey at refractions.net  Thu Oct 24 01:18:56 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability Modifications
Message-ID: <3DB782C0.E37FAFA8@refractions.net>

Yury,
The patchset Norman committed last night seems to include all the at()
-> [] changes already, so you should probably do a careful update to
pull those into your sandbox (careful because there might be some
conflicts).
Norman,
I can compile almost everything now, the only exceptions are in
source/test, the CTS program dies when it tries to link. I am too thick
to quite understand all the interdependencies going on, I am afraid. 

/bin/sh ../../libtool --mode=link g++  -g -O2  -o CTS  CTS.o
../geom/libgeos.la ../geom/libgeos.la
g++ -g -O2 -o .libs/CTS CTS.o  ../geom/.libs/libgeos.so -Wl,--rpath
-Wl,/usr/local/lib
CTS.o: In function `ParseException type_info function':
/home/pramsey/geos/source/test/CTS.cpp:524: undefined reference to
`ParseException::~ParseException(void)'
/home/pramsey/geos/source/test/CTS.cpp:524: undefined reference to
`ParseException::toString(void)'
/home/pramsey/geos/source/test/CTS.cpp:524: undefined reference to
`ParseException::~ParseException(void)'
../geom/.libs/libgeos.so: undefined reference to `Assert::isTrue(bool)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::isSimple(LineString *)'
../geom/.libs/libgeos.so: undefined reference to
`RelateOp::relate(Geometry *, Geometry *)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::length(CoordinateList)'
../geom/.libs/libgeos.so: undefined reference to
`WKTWriter::WKTWriter(void)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::signedArea(CoordinateList)'
../geom/.libs/libgeos.so: undefined reference to
`WKTWriter::~WKTWriter(void)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::distancePointLine(Coordinate, Coordinate, Coordinate)'
../geom/.libs/libgeos.so: undefined reference to
`CGAlgorithms::distanceLineLine(Coordinate, Coordinate, Coordinate,
Coordinate)'
../geom/.libs/libgeos.so: undefined reference to
`GeometryGraph::GeometryGraph(int, Geometry *)'
../geom/.libs/libgeos.so: undefined reference to
`GeometryGraph::getBoundaryPoints(void)'
../geom/.libs/libgeos.so: undefined reference to
`Assert::shouldNeverReachHere(void)'
../geom/.libs/libgeos.so: undefined reference to
`WKTWriter::write(Geometry *)'
../geom/.libs/libgeos.so: undefined reference to
`Assert::shouldNeverReachHere(basic_string<char,
string_char_traits<char>, __default_alloc_template<true, 0> >)'
../geom/.libs/libgeos.so: undefined reference to
`RobustCGAlgorithms::RobustCGAlgorithms(void)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::isSimple(MultiLineString *)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::IsSimpleOp(void)'
../geom/.libs/libgeos.so: undefined reference to
`IsSimpleOp::isSimple(MultiPoint *)'
collect2: ld returned 1 exit status
make: *** [CTS] Error 1


From nhv at cape.com  Thu Oct 24 08:31:08 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability Modifications
References: <3DB782C0.E37FAFA8@refractions.net>
Message-ID: <02b601c27b59$3b409830$5d3dba8c@sfdev3>

Paul Ramsey writes:
>
> Norman,
> I can compile almost everything now, the only exceptions are in
> source/test, the CTS program dies when it tries to link. I am too thick
> to quite understand all the interdependencies going on, I am afraid. 

Looks like there is a $PATH problem that somehow I missed before
funny though in that I was sure that I tested this ???

anyway It all compiles for me with the following patch

Will take a look at the Makefiles when I get some time :-)

HTH

Norman



Index: CTS.cpp
===================================================================
RCS file: /home/cvs/postgis/geos/source/test/CTS.cpp,v
retrieving revision 1.2
diff -r1.2 CTS.cpp
4d3
< #include "io.h"
5a5,7
> #include "../headers/geom.h"
> #include "../headers/io.h"
> 
Index: SimpleWKTTester.cpp
===================================================================
RCS file: /home/cvs/postgis/geos/source/test/SimpleWKTTester.cpp,v
retrieving revision 1.2
diff -r1.2 SimpleWKTTester.cpp
6c6
< #include "io.h"
---
> #include "../headers/io.h"
Index: XMLTester.cpp
===================================================================
RCS file: /home/cvs/postgis/geos/source/test/XMLTester.cpp,v
retrieving revision 1.5
diff -r1.5 XMLTester.cpp
1d0
< #include "MarkupSTL.h"
6,9c5,9
< #include "util.h"
< #include "graph.h"
< #include "io.h"
< #include "opRelate.h"
---
> #include "../headers/util.h"
> #include "../headers/graph.h"
> #include "../headers/io.h"
> #include "../headers/opRelate.h"
> #include "../io/markup/MarkupSTL.h"





From pramsey at refractions.net  Thu Oct 24 11:47:11 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability Modifications
References: <3DB782C0.E37FAFA8@refractions.net> <02b601c27b59$3b409830$5d3dba8c@sfdev3>
Message-ID: <3DB815FF.2060103@refractions.net>

Hm, this patch does not change things for me at all... the initial 
compilation of CTS.o works fine, and there are good include paths on the 
command line... it is at the link stage where things bomb.

g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers -I../headers 
-I../io/markup    -g -O2 -c CTS.cpp
/bin/sh ../../libtool --mode=link g++  -g -O2  -o CTS  CTS.o 
../geom/libgeos.la ../geom/libgeos.la
mkdir .libs
g++ -g -O2 -o .libs/CTS CTS.o  ../geom/.libs/libgeos.so -Wl,--rpath 
-Wl,/usr/local/lib
CTS.o: In function `ParseException type_info function':
/home/pramsey/geos/source/test/CTS.cpp:524: undefined reference to 
`ParseException::~ParseException(void)'
../geom/.libs/libgeos.so: undefined reference to `Assert::isTrue(bool)'
../geom/.libs/libgeos.so: undefined reference to 
'IsSimpleOp::isSimple(LineString *)'
....
etc....
....

Norman Vine wrote:
> Paul Ramsey writes:
> 
>>Norman,
>>I can compile almost everything now, the only exceptions are in
>>source/test, the CTS program dies when it tries to link. I am too thick
>>to quite understand all the interdependencies going on, I am afraid. 
> 
> 
> Looks like there is a $PATH problem that somehow I missed before
> funny though in that I was sure that I tested this ???
> 
> anyway It all compiles for me with the following patch
> 
> Will take a look at the Makefiles when I get some time :-)
> 
> HTH
> 
> Norman
> 
> 
> 
> Index: CTS.cpp
> ===================================================================
> RCS file: /home/cvs/postgis/geos/source/test/CTS.cpp,v
> retrieving revision 1.2
> diff -r1.2 CTS.cpp
> 4d3
> < #include "io.h"
> 5a5,7
> 
>>#include "../headers/geom.h"
>>#include "../headers/io.h"
>>
> 
> Index: SimpleWKTTester.cpp
> ===================================================================
> RCS file: /home/cvs/postgis/geos/source/test/SimpleWKTTester.cpp,v
> retrieving revision 1.2
> diff -r1.2 SimpleWKTTester.cpp
> 6c6
> < #include "io.h"
> ---
> 
>>#include "../headers/io.h"
> 
> Index: XMLTester.cpp
> ===================================================================
> RCS file: /home/cvs/postgis/geos/source/test/XMLTester.cpp,v
> retrieving revision 1.5
> diff -r1.5 XMLTester.cpp
> 1d0
> < #include "MarkupSTL.h"
> 6,9c5,9
> < #include "util.h"
> < #include "graph.h"
> < #include "io.h"
> < #include "opRelate.h"
> ---
> 
>>#include "../headers/util.h"
>>#include "../headers/graph.h"
>>#include "../headers/io.h"
>>#include "../headers/opRelate.h"
>>#include "../io/markup/MarkupSTL.h"
> 
> 
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From nhv at cape.com  Thu Oct 24 12:09:56 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability Modifications
References: <3DB782C0.E37FAFA8@refractions.net> <02b601c27b59$3b409830$5d3dba8c@sfdev3> <3DB815FF.2060103@refractions.net>
Message-ID: <050701c27b77$cc632710$5d3dba8c@sfdev3>

Paul Ramsey writes:

> Hm, this patch does not change things for me at all... the initial 
> compilation of CTS.o works fine, and there are good include paths on the 
> command line... it is at the link stage where things bomb.

Paul

The problem is probably in part due to that libtool support with Cygwin
is well 'sketchy' and I have only tested this with

./configure --disable-shared

I do not have a Linux system and have no way of testing the
dynamic library linking there

Norman





From pramsey at refractions.net  Thu Oct 24 12:16:59 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability Modifications
References: <3DB782C0.E37FAFA8@refractions.net> <02b601c27b59$3b409830$5d3dba8c@sfdev3> <3DB815FF.2060103@refractions.net> <050701c27b77$cc632710$5d3dba8c@sfdev3>
Message-ID: <3DB81CFB.7090908@refractions.net>

Nope, compiling with --disable-shared I still get errors at the linking 
stage. Very odd.

Norman Vine wrote:
> Paul Ramsey writes:
> 
> 
>>Hm, this patch does not change things for me at all... the initial 
>>compilation of CTS.o works fine, and there are good include paths on the 
>>command line... it is at the link stage where things bomb.
> 
> 
> Paul
> 
> The problem is probably in part due to that libtool support with Cygwin
> is well 'sketchy' and I have only tested this with
> 
> ./configure --disable-shared
> 
> I do not have a Linux system and have no way of testing the
> dynamic library linking there
> 
> Norman
> 
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From nhv at cape.com  Thu Oct 24 17:37:55 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability Modifications
References: <3DB782C0.E37FAFA8@refractions.net> <02b601c27b59$3b409830$5d3dba8c@sfdev3> <3DB815FF.2060103@refractions.net> <050701c27b77$cc632710$5d3dba8c@sfdev3> <3DB81CFB.7090908@refractions.net>
Message-ID: <096101c27ba5$9ddbc040$5d3dba8c@sfdev3>

Paul Ramsey writes:

> Nope, compiling with --disable-shared I still get errors at the linking 
> stage. Very odd.

Hmm..

did you do a 
% make distclean-libtool
% ./configure
% make

Norman




From ybychkov at direct.ca  Tue Oct 29 12:43:04 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS Report (October 29, 2002)
References: <004101c24b4e$62569950$de354d18@yury>
 <015c01c250ce$12b1ea50$de354d18@yury> <008001c25779$0f2d1fb0$de354d18@yury>
Message-ID: <005301c27f72$a34d8100$de354d18@yury>

Hi Everyone,

Current status:
C++ version still runs slower then Java, though not by much now (about 2.5 vs
3.5 seconds for 100 tests). It seems that this happens due to a number of small
inefficiences and not a bug somewhere in the computeIntersections() algorithm.

Thisngs to do:
1. Test the code on a VERY BIG starfish-shaped geometry (10000 nodes or so) to
check the assertion above.
2. Streamline GEOS XML tester a bit to make it more command-line friendly.
3. Do some performance tuning and try to det rid of some of the inefficiences.


Yury




From pramsey at refractions.net  Tue Oct 29 12:47:21 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS Report (October 29, 2002)
References: <004101c24b4e$62569950$de354d18@yury> <015c01c250ce$12b1ea50$de354d18@yury> <008001c25779$0f2d1fb0$de354d18@yury> <005301c27f72$a34d8100$de354d18@yury>
Message-ID: <3DBEC9A9.4090700@refractions.net>

Can we have a checkin of the working code, s'il vous plait? Gotta share, 
  or others cannot play with the toys... as long as your current sandbox 
is not actually "broken" (compilation failures or really unpleasant 
runtime errors) at a given point in time, you should be committing 
regularly.
Thanks,
Paul

Yury A. Bychkov wrote:
> Hi Everyone,
> 
> Current status:
> C++ version still runs slower then Java, though not by much now (about 2.5 vs
> 3.5 seconds for 100 tests). It seems that this happens due to a number of small
> inefficiences and not a bug somewhere in the computeIntersections() algorithm.
> 
> Thisngs to do:
> 1. Test the code on a VERY BIG starfish-shaped geometry (10000 nodes or so) to
> check the assertion above.
> 2. Streamline GEOS XML tester a bit to make it more command-line friendly.
> 3. Do some performance tuning and try to det rid of some of the inefficiences.
> 
> 
> Yury
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From pramsey at refractions.net  Wed Oct 30 15:10:34 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Linux Compilation
Message-ID: <3DC03CBA.9020309@refractions.net>

Works!
With an upgrade to automake, and an edit to the source/geom/Makefile.am, 
I now have a complete compiled Linux GEOS!
Now, I started trying running the tests... the XMLTester is really 
fragile! Is this the tester you are using Yury, or do you have a private 
one hidden at home? If so, check it in! As it stands, any WKT defined 
with newlines in it crashes the WKT. Since all the JTS test XML files 
are formatted this way, it makes it laborious to run the tests here :)

For example,

   <a>
      POLYGON(
         (100 60, 140 100, 100 140, 60 100, 100 60))
   </a>

crashes the XMLTester on read() while

  <a> POLYGON((100 60, 140 100, 100 140, 60 100, 100 60)) </a>

does not.

-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From pramsey at refractions.net  Wed Oct 30 15:21:23 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Linux Compilation
References: <3DC03CBA.9020309@refractions.net>
Message-ID: <3DC03F43.20803@refractions.net>

With a little perl and a foreach I cleaned up the JTS1.2 test xml files 
sufficiently to run them all. There were no failures at all in the GNU 
Linux compilation!

Paul Ramsey wrote:
> Works!
> With an upgrade to automake, and an edit to the source/geom/Makefile.am, 
> I now have a complete compiled Linux GEOS!
> Now, I started trying running the tests... the XMLTester is really 
> fragile! Is this the tester you are using Yury, or do you have a private 
> one hidden at home? If so, check it in! As it stands, any WKT defined 
> with newlines in it crashes the WKT. Since all the JTS test XML files 
> are formatted this way, it makes it laborious to run the tests here :)
> 
> For example,
> 
>   <a>
>      POLYGON(
>         (100 60, 140 100, 100 140, 60 100, 100 60))
>   </a>
> 
> crashes the XMLTester on read() while
> 
>  <a> POLYGON((100 60, 140 100, 100 140, 60 100, 100 60)) </a>
> 
> does not.
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From mbdavis at VividSolutions.com  Wed Oct 30 15:30:22 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Linux Compilation
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2B52@venus.VividSolutions.com>

Excellent news!  So what's next - integration with PostGIS?

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Paul Ramsey [mailto:pramsey@refractions.net]
> Sent: Wednesday, October 30, 2002 12:11 PM
> To: geos-devel@geos.refractions.net
> Subject: [geos-devel] Linux Compilation
> 
> 
> Works!
> With an upgrade to automake, and an edit to the 
> source/geom/Makefile.am, 
> I now have a complete compiled Linux GEOS!
> Now, I started trying running the tests... the XMLTester is really 
> fragile! Is this the tester you are using Yury, or do you 
> have a private 
> one hidden at home? If so, check it in! As it stands, any WKT defined 
> with newlines in it crashes the WKT. Since all the JTS test XML files 
> are formatted this way, it makes it laborious to run the tests here :)
> 
> For example,
> 
>    <a>
>       POLYGON(
>          (100 60, 140 100, 100 140, 60 100, 100 60))
>    </a>
> 
> crashes the XMLTester on read() while
> 
>   <a> POLYGON((100 60, 140 100, 100 140, 60 100, 100 60)) </a>
> 
> does not.
> 
> -- 
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From mbdavis at VividSolutions.com  Wed Oct 30 15:39:14 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Performance of GEOS
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2B53@venus.VividSolutions.com>

Something we may need to brainstorm a bit on is how much attention we should pay to the performance of the code in GEOS.  Currently it seems to perform at about the level of JTS, or a bit slower.  This may well be "good enough" for use in PostGIS - that's something you PostGIS wonks will have to decide.  But there may be room for some real improvements in performance, if we start getting clever about how we interact with the C++ memory manager.  (malloc is notoriously slow, so a bulk allocation scheme might bring some real improvements).

Yury and I are going to do a bit of investigation to make sure we're not overlooking any obvious speedups in the straightforward port.

We need to decide how to prioritize the development - are we looking for functionality first, or good performance from the relate code?

(The fact that "naively implemented" GEOS code is no faster than the Java code is quite interesting - so much for complaints that Java is "too slow" for production work!)

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com



From ybychkov at direct.ca  Wed Oct 30 16:32:52 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Linux Compilation
References: <3DC03CBA.9020309@refractions.net> <3DC03F43.20803@refractions.net>
Message-ID: <004701c2805c$31ae0570$de354d18@yury>

> With a little perl and a foreach I cleaned up the JTS1.2 test xml files
> sufficiently to run them all. There were no failures at all in the GNU
> Linux compilation!
Great.

> > Now, I started trying running the tests... the XMLTester is really
> > fragile! Is this the tester you are using Yury, or do you have a private
> > one hidden at home?
I am using the same tester and yes, it is rather fragile. However I used an
exact copy of JTS WKTReader and didn't modify it because I wasn't sure if I
should do it.

> > As it stands, any WKT defined with newlines in it crashes the WKT.
> > Since all the JTS test XML files are formatted this way,
> > it makes it laborious to run the tests here :)
I did the same thing as you (with perl) and just reformatted the test files.

Yury




From mbdavis at VividSolutions.com  Wed Oct 30 16:56:46 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Linux Compilation
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2B55@venus.VividSolutions.com>

I'm not sure I understand here....  I think that the JTS TestRunner must ignore newlines, since we run the test files just as they are.  Is it possible that this has been overlooked in the port?

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Yury A. Bychkov [mailto:ybychkov@direct.ca]
> Sent: Wednesday, October 30, 2002 1:33 PM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Linux Compilation
> 
> 
> > With a little perl and a foreach I cleaned up the JTS1.2 
> test xml files
> > sufficiently to run them all. There were no failures at all 
> in the GNU
> > Linux compilation!
> Great.
> 
> > > Now, I started trying running the tests... the XMLTester is really
> > > fragile! Is this the tester you are using Yury, or do you 
> have a private
> > > one hidden at home?
> I am using the same tester and yes, it is rather fragile. 
> However I used an
> exact copy of JTS WKTReader and didn't modify it because I 
> wasn't sure if I
> should do it.
> 
> > > As it stands, any WKT defined with newlines in it crashes the WKT.
> > > Since all the JTS test XML files are formatted this way,
> > > it makes it laborious to run the tests here :)
> I did the same thing as you (with perl) and just reformatted 
> the test files.
> 
> Yury
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From ybychkov at direct.ca  Wed Oct 30 17:12:47 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Linux Compilation
References: <5A94289A9268514C8D6C0F1FF44BA0270A2B55@venus.VividSolutions.com>
Message-ID: <006b01c28061$7c595ed0$de354d18@yury>

That was strange to me too. I haven't seen the source for TestRunner, so I can't
know for sure, but the only possibility that I can think of is that it doesn't
use WKTReader from 'io' package. If you'll look at lines 177 and 264 in
WKTReader.java, it throws an exception if it encounters EOL.

Yury
----- Original Message -----
From: "Martin Davis" <mbdavis@VividSolutions.com>
To: <geos-devel@geos.refractions.net>
Sent: Wednesday, October 30, 2002 1:56 PM
Subject: RE: [geos-devel] Linux Compilation


I'm not sure I understand here....  I think that the JTS TestRunner must ignore
newlines, since we run the test files just as they are.  Is it possible that
this has been overlooked in the port?

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Yury A. Bychkov [mailto:ybychkov@direct.ca]
> Sent: Wednesday, October 30, 2002 1:33 PM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Linux Compilation
>
>
> > With a little perl and a foreach I cleaned up the JTS1.2
> test xml files
> > sufficiently to run them all. There were no failures at all
> in the GNU
> > Linux compilation!
> Great.
>
> > > Now, I started trying running the tests... the XMLTester is really
> > > fragile! Is this the tester you are using Yury, or do you
> have a private
> > > one hidden at home?
> I am using the same tester and yes, it is rather fragile.
> However I used an
> exact copy of JTS WKTReader and didn't modify it because I
> wasn't sure if I
> should do it.
>
> > > As it stands, any WKT defined with newlines in it crashes the WKT.
> > > Since all the JTS test XML files are formatted this way,
> > > it makes it laborious to run the tests here :)
> I did the same thing as you (with perl) and just reformatted
> the test files.
>
> Yury
>
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>

_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net
http://geos.refractions.net/mailman/listinfo/geos-devel






From mbdavis at VividSolutions.com  Wed Oct 30 17:22:51 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] RE: handling newlines in WKT
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2B59@venus.VividSolutions.com>

Ok, mystery resolved.  WKTReader.java indeed throws Exceptions if it encounters newline tokens - but it will never encounter any such tokens!  The default configuration of the StreamTokenizer is to translate newlines to whitespace, and that's how JTS uses it.

So the correct semantics for the WKTReader is to treat newlines as whitespace.  Yury, whatever you used to tokenize the WKT stream should follow these semantics.

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Yury A. Bychkov [mailto:ybychkov@direct.ca]
> Sent: Wednesday, October 30, 2002 2:13 PM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Linux Compilation
> 
> 
> That was strange to me too. I haven't seen the source for 
> TestRunner, so I can't
> know for sure, but the only possibility that I can think of 
> is that it doesn't
> use WKTReader from 'io' package. If you'll look at lines 177 
> and 264 in
> WKTReader.java, it throws an exception if it encounters EOL.
> 
> Yury
> ----- Original Message -----
> From: "Martin Davis" <mbdavis@VividSolutions.com>
> To: <geos-devel@geos.refractions.net>
> Sent: Wednesday, October 30, 2002 1:56 PM
> Subject: RE: [geos-devel] Linux Compilation
> 
> 
> I'm not sure I understand here....  I think that the JTS 
> TestRunner must ignore
> newlines, since we run the test files just as they are.  Is 
> it possible that
> this has been overlooked in the port?
> 
> Martin Davis, Senior Technical Specialist
> Vivid Solutions Inc.
> Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
> Phone: (250) 385 6040    Fax: (250) 385 6046
> EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com
> 
> 
> > -----Original Message-----
> > From: Yury A. Bychkov [mailto:ybychkov@direct.ca]
> > Sent: Wednesday, October 30, 2002 1:33 PM
> > To: geos-devel@geos.refractions.net
> > Subject: Re: [geos-devel] Linux Compilation
> >
> >
> > > With a little perl and a foreach I cleaned up the JTS1.2
> > test xml files
> > > sufficiently to run them all. There were no failures at all
> > in the GNU
> > > Linux compilation!
> > Great.
> >
> > > > Now, I started trying running the tests... the 
> XMLTester is really
> > > > fragile! Is this the tester you are using Yury, or do you
> > have a private
> > > > one hidden at home?
> > I am using the same tester and yes, it is rather fragile.
> > However I used an
> > exact copy of JTS WKTReader and didn't modify it because I
> > wasn't sure if I
> > should do it.
> >
> > > > As it stands, any WKT defined with newlines in it 
> crashes the WKT.
> > > > Since all the JTS test XML files are formatted this way,
> > > > it makes it laborious to run the tests here :)
> > I did the same thing as you (with perl) and just reformatted
> > the test files.
> >
> > Yury
> >
> >
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> >
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 
> 
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From nhv at cape.com  Wed Oct 30 17:31:41 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Performance of GEOS
References: <5A94289A9268514C8D6C0F1FF44BA0270A2B53@venus.VividSolutions.com>
Message-ID: <0e9101c28064$1f569c90$0100a8c0@sfdev3>

Martin Davis writes:

> Something we may need to brainstorm a bit on is how much attention 
> we should pay to the performance of the code in GEOS.  Currently it 
> seems to perform at about the level of JTS, or a bit slower.  

> We need to decide how to prioritize the development - 
> are we looking for functionality first, 
> or good performance from the relate code?

Robust Functionality first
 
Out of curiosity what are folks using for a performance test 
and could we add it and the data for it to the CVS 

Cheers

Norman



From mbdavis at VividSolutions.com  Wed Oct 30 17:34:18 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Performance of GEOS
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2B5C@venus.VividSolutions.com>

My thoughts too...  although I am a bit worried that performance improvement will be forgotten at the end of the project, and never end up getting done.

Good idea about adding the performance code to the archive - we'll do that.

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Norman Vine [mailto:nhv@cape.com]
> Sent: Wednesday, October 30, 2002 2:32 PM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Performance of GEOS
> 
> 
> Martin Davis writes:
> 
> > Something we may need to brainstorm a bit on is how much attention 
> > we should pay to the performance of the code in GEOS.  Currently it 
> > seems to perform at about the level of JTS, or a bit slower.  
> 
> > We need to decide how to prioritize the development - 
> > are we looking for functionality first, 
> > or good performance from the relate code?
> 
> Robust Functionality first
>  
> Out of curiosity what are folks using for a performance test 
> and could we add it and the data for it to the CVS 
> 
> Cheers
> 
> Norman
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From ybychkov at direct.ca  Thu Oct 31 02:38:07 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] RE: handling newlines in WKT
References: <5A94289A9268514C8D6C0F1FF44BA0270A2B59@venus.VividSolutions.com>
Message-ID: <026101c280b0$77ca9600$de354d18@yury>

I've fixed my StreamTokenizer and now XMLTester can execute all those tests with
newlines. CVS has been updated.

Yury


----- Original Message -----
From: "Martin Davis" <mbdavis@VividSolutions.com>
To: <geos-devel@geos.refractions.net>
Sent: Wednesday, October 30, 2002 2:22 PM
Subject: [geos-devel] RE: handling newlines in WKT


Ok, mystery resolved.  WKTReader.java indeed throws Exceptions if it encounters
newline tokens - but it will never encounter any such tokens!  The default
configuration of the StreamTokenizer is to translate newlines to whitespace, and
that's how JTS uses it.

So the correct semantics for the WKTReader is to treat newlines as whitespace.
Yury, whatever you used to tokenize the WKT stream should follow these
semantics.

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Yury A. Bychkov [mailto:ybychkov@direct.ca]
> Sent: Wednesday, October 30, 2002 2:13 PM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Linux Compilation
>
>
> That was strange to me too. I haven't seen the source for
> TestRunner, so I can't
> know for sure, but the only possibility that I can think of
> is that it doesn't
> use WKTReader from 'io' package. If you'll look at lines 177
> and 264 in
> WKTReader.java, it throws an exception if it encounters EOL.
>
> Yury
> ----- Original Message -----
> From: "Martin Davis" <mbdavis@VividSolutions.com>
> To: <geos-devel@geos.refractions.net>
> Sent: Wednesday, October 30, 2002 1:56 PM
> Subject: RE: [geos-devel] Linux Compilation
>
>
> I'm not sure I understand here....  I think that the JTS
> TestRunner must ignore
> newlines, since we run the test files just as they are.  Is
> it possible that
> this has been overlooked in the port?
>
> Martin Davis, Senior Technical Specialist
> Vivid Solutions Inc.
> Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
> Phone: (250) 385 6040    Fax: (250) 385 6046
> EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com
>
>
> > -----Original Message-----
> > From: Yury A. Bychkov [mailto:ybychkov@direct.ca]
> > Sent: Wednesday, October 30, 2002 1:33 PM
> > To: geos-devel@geos.refractions.net
> > Subject: Re: [geos-devel] Linux Compilation
> >
> >
> > > With a little perl and a foreach I cleaned up the JTS1.2
> > test xml files
> > > sufficiently to run them all. There were no failures at all
> > in the GNU
> > > Linux compilation!
> > Great.
> >
> > > > Now, I started trying running the tests... the
> XMLTester is really
> > > > fragile! Is this the tester you are using Yury, or do you
> > have a private
> > > > one hidden at home?
> > I am using the same tester and yes, it is rather fragile.
> > However I used an
> > exact copy of JTS WKTReader and didn't modify it because I
> > wasn't sure if I
> > should do it.
> >
> > > > As it stands, any WKT defined with newlines in it
> crashes the WKT.
> > > > Since all the JTS test XML files are formatted this way,
> > > > it makes it laborious to run the tests here :)
> > I did the same thing as you (with perl) and just reformatted
> > the test files.
> >
> > Yury
> >
> >
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> >
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>
>
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>

_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net
http://geos.refractions.net/mailman/listinfo/geos-devel






From fvilla at zoo.uvm.edu  Thu Oct 31 14:28:25 2002
From: fvilla at zoo.uvm.edu (Ferdinando Villa)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] namespace?
Message-ID: <1036092506.1680.9.camel@basil.snr.uvm.edu>

Any consensus on putting all of geos under namespace geos? I can do it
if everyone agrees - now is probably the best time for the change.

ferdinando
-- 
ferdinando villa, ph.d.                    associate professor
gund institute for ecological economics, university of vermont
590 main street, burlington, vt 05405    phone: (802) 656-2972



From mbdavis at VividSolutions.com  Thu Oct 31 20:35:02 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] namespace?
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2B88@venus.VividSolutions.com>

Seems like a good idea to me, as long as it doesn't break any compatibility...  (I'm still using MSVC6, so maybe I'm the Luddite here and you should just ignore me  8^)

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Ferdinando Villa [mailto:fvilla@zoo.uvm.edu]
> Sent: Thursday, October 31, 2002 11:28 AM
> To: GEOS developers
> Subject: [geos-devel] namespace?
> 
> 
> Any consensus on putting all of geos under namespace geos? I can do it
> if everyone agrees - now is probably the best time for the change.
> 
> ferdinando
> -- 
> ferdinando villa, ph.d.                    associate professor
> gund institute for ecological economics, university of vermont
> 590 main street, burlington, vt 05405    phone: (802) 656-2972
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


