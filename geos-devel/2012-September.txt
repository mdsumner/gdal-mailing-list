From geos-trac at osgeo.org  Sat Sep  1 05:16:20 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 01 Sep 2012 12:16:20 -0000
Subject: [geos-devel] [GEOS] #584: Port robust distance fixes from JTS
Message-ID: <044.0b42218f2646a34bb02c5880a7ff7ea0@osgeo.org>

#584: Port robust distance fixes from JTS
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.5                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 See http://sourceforge.net/mailarchive/forum.php?thread_name=CAHZR-
 48gov_ZjtpsTC%2BHA%3DySCwzFsqw1mnTx59KeBQcr1dEO0g%40mail.gmail.com&forum_name
 =jts-topo-suite-user

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/584>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep  2 23:26:07 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 03 Sep 2012 06:26:07 -0000
Subject: [geos-devel] [GEOS] #584: Port robust distance fixes from JTS
In-Reply-To: <044.0b42218f2646a34bb02c5880a7ff7ea0@osgeo.org>
References: <044.0b42218f2646a34bb02c5880a7ff7ea0@osgeo.org>
Message-ID: <053.708ba8cdc594a1978546c9fa47dcf706@osgeo.org>

#584: Port robust distance fixes from JTS
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
Changes (by strk):

  * version:  3.3.4 => svn-trunk
  * milestone:  3.3.5 => 3.3.6


-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/584#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep  2 23:30:23 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 03 Sep 2012 06:30:23 -0000
Subject: [geos-devel] [GEOS] #572: Contains issue for complex
 LineStrings [JTS fails too]
In-Reply-To: <047.5caa9d29e19b13245ee7a3cbf4a4f89d@osgeo.org>
References: <047.5caa9d29e19b13245ee7a3cbf4a4f89d@osgeo.org>
Message-ID: <056.a6e972c7d41b1a2474e146b9070ed3ad@osgeo.org>

#572: Contains issue for complex LineStrings [JTS fails too]
------------------------+---------------------------------------------------
 Reporter:  mwtoews     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:  jtsfail                   
------------------------+---------------------------------------------------
Changes (by strk):

  * milestone:  3.3.5 => 3.4.0


-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/572#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep  2 23:31:41 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 03 Sep 2012 06:31:41 -0000
Subject: [geos-devel] [GEOS] #580: Contains(Polygon,
 Point) return False instead of True
In-Reply-To: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
References: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
Message-ID: <056.dbbd28b9e5cb1eb9548e7eeff75c1404@osgeo.org>

#580: Contains(Polygon, Point) return False instead of True
------------------------+---------------------------------------------------
 Reporter:  skurlat     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
Changes (by strk):

  * milestone:  3.3.5 => 3.3.6


Comment:

 Did you check the polygon for validity ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/580#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep  2 23:32:16 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 03 Sep 2012 06:32:16 -0000
Subject: [geos-devel] [GEOS] #582: GEOSGetCentroid seg faults on certain
	MultiPolygons
In-Reply-To: <046.d444e4afb6037110f1c1eee4001af65f@osgeo.org>
References: <046.d444e4afb6037110f1c1eee4001af65f@osgeo.org>
Message-ID: <055.7e6f1dc68426ca6279ebb9a483bfb484@osgeo.org>

#582: GEOSGetCentroid seg faults on certain MultiPolygons
----------------------+-----------------------------------------------------
 Reporter:  dazuma    |       Owner:  geos-devel@?              
     Type:  defect    |      Status:  new                       
 Priority:  major     |   Milestone:  3.3.6                     
Component:  Default   |     Version:  3.3.4                     
 Severity:  Critical  |    Keywords:                            
----------------------+-----------------------------------------------------
Changes (by strk):

  * severity:  Unassigned => Critical
  * milestone:  3.3.5 => 3.3.6


-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/582#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep  2 23:42:05 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 03 Sep 2012 06:42:05 -0000
Subject: [geos-devel] [GEOS] #578: NMake fails to build on Windows 8
	Release Preview
In-Reply-To: <045.8a5b0462ccf09707e7575cfb1ddf1537@osgeo.org>
References: <045.8a5b0462ccf09707e7575cfb1ddf1537@osgeo.org>
Message-ID: <054.eb0d0c47f59bf97ab2ad57ef7d69de8f@osgeo.org>

#578: NMake fails to build on Windows 8 Release Preview
------------------------+---------------------------------------------------
 Reporter:  scook       |       Owner:  geos-devel@?                   
     Type:  defect      |      Status:  new                            
 Priority:  trivial     |   Milestone:  3.4.0                          
Component:  Default     |     Version:  svn-trunk                      
 Severity:  Unassigned  |    Keywords:  nmake, Window 8 Release Preview
------------------------+---------------------------------------------------
Changes (by strk):

  * milestone:  3.3.5 => 3.4.0


-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/578#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep  3 10:43:12 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 03 Sep 2012 17:43:12 -0000
Subject: [geos-devel] [GEOS] #580: Contains(Polygon,
 Point) return False instead of True
In-Reply-To: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
References: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
Message-ID: <056.99159709806c8e16a91d699caa28c800@osgeo.org>

#580: Contains(Polygon, Point) return False instead of True
------------------------+---------------------------------------------------
 Reporter:  skurlat     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by pramsey):

 I did, ST_IsValid says it's valid. And the PostGIS ST_Contains returns
 true, which would be calculated in the internal liblwgeom code line
 (point-in-poly), not in GEOS.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/580#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep  5 12:38:06 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 05 Sep 2012 19:38:06 -0000
Subject: [geos-devel] [GEOS] #570: Add Z support in delaunay
	triangulation
In-Reply-To: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
References: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
Message-ID: <053.53c927a6716db20f41391ebf634ce49f@osgeo.org>

#570: Add Z support in delaunay triangulation
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by blc56):

 Yup. I agree. Here is a proper patch with a test case.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/570#comment:4>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at telus.net  Fri Sep  7 12:06:27 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Fri, 07 Sep 2012 12:06:27 -0700
Subject: [geos-devel] Polygon simplicity and validity
In-Reply-To: <CAOodmJqp-GpsEpOCRfuG3BkykXMY8ruZdc_gmT-nmN5Q_DYxqQ@mail.gmail.com>
References: <CAOodmJqp-GpsEpOCRfuG3BkykXMY8ruZdc_gmT-nmN5Q_DYxqQ@mail.gmail.com>
Message-ID: <504A45B3.9070703@telus.net>

The OGC SFS specifies that valid polygons are simple by definition, 
presumably because valid polygons cannot contain any 
self-intersections.  Because of this, JTS/GEOS simply returns true for 
Polygon.isSimple(), without attempting any inspection of the actual 
linework.  isValid can be used to detect self-intersections.

On 8/29/2012 11:19 AM, Sean Gillies wrote:
> Is simplicity meaningful for polygons or only for lines? Here's a
> single ring bowtie that GEOS 3.3.0 reports as invalid but simple:
>
> POLYGON ((39.1451330299999967 23.7510081600000014, 97.0537220899999937
> 40.5455008799999987, 105.2652701399999984 48.1330221300000005,
> 100.9175268500000016 58.4333681499999997, 71.5608144800000048
> 83.5511480100000057, 60.7118916800000008 86.2531609899999978,
> 62.0046980799999972 75.1478175999999962, 83.1631000699999987
> 42.8207167300000009, 92.8230586199999976 37.1917558199999974,
> 95.9940112900000031 26.4705124599999984, 106.2205448200000006
> 15.5197519199999991, 39.1451330299999967 23.7510081600000014))
>
> https://github.com/Toblerity/Shapely/issues/16#issuecomment-8116396
>


From mtnclimb at telus.net  Fri Sep  7 12:10:40 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Fri, 07 Sep 2012 12:10:40 -0700
Subject: [geos-devel] predicates precision
In-Reply-To: <4DDD462E988B52488DA728A04EF7C5745EB2A03FE1@Eucles.Siradel.local>
References: <4DDD462E988B52488DA728A04EF7C5745EB2A03FE1@Eucles.Siradel.local>
Message-ID: <504A46B0.90302@telus.net>

GEOS uses the same algorithm for the binary predicates as JTS.

Unfortunately, recently a GEOS ticket was filed that revealed a small 
robustness problem with the predicates in certain Line/Line situations.  
(http://trac.osgeo.org/geos/ticket/572).  Currently there's no 
resolution for this problem, but it's being actively researched.

On 8/27/2012 3:38 AM, Jasmin FORMONT wrote:
>
> Hi everyone,
>
> I have a question concerning the precision of predicates, and mainly 
> touches. On the JTS website, I read "The algorithms used to implement 
> the SFS predicates and functions have been developed to eliminate or 
> minimize robustness problems. The binary predicate algorithm is 
> completely robust."
>
> In GEOS, is combinatorial also used for the binary predicates, and are 
> they totally robust ?
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20120907/543a6c33/attachment.html>

From geos-trac at osgeo.org  Fri Sep  7 23:15:43 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 08 Sep 2012 06:15:43 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
Message-ID: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 strk,

 Okay I've had enough of these false warnings.  I think you and Mat decided
 this was not a mingw64 only issue, and that it shouldn't even be going
 into this loop and there is something wrong with your arm configure
 script.  Error:


 {{{
 make  threadtest.exe badthreadtest.exe
 make[4]: Entering directory `/c/jenkins/geos/branches/3.4/tests/thread'
 x86_64-w64-mingw32-gcc -DHAVE_CONFIG_H -I. -I../../include
 -I../../include/geos -I../../include -I../../tests/unit/tut -I../../capi
 -pedantic -Wall -ansi -Wno-long-long  -ffloat-store -g -O2 -MT
 threadtest.o -MD -MP -MF .deps/threadtest.Tpo -c -o threadtest.o
 threadtest.c
 In file included from
 c:\ming64\mingw64\bin\../lib/gcc/x86_64-w64-mingw32/4.5.4/../../../../x86_64-w64-mingw32/include/unistd.h:10:0,
                  from threadtest.c:19:
 ../../include/geos/io.h:19:11: error: expected '=', ',', ';', 'asm' or
 '__attribute__' before 'geos'
 In file included from ../../include/geos/io.h:48:0,
                  from
 c:\ming64\mingw64\bin\../lib/gcc/x86_64-w64-mingw32/4.5.4/../../../../x86_64-w64-mingw32/include/unistd.h:10,
                  from threadtest.c:19:
 ../../include/geos/io/ByteOrderDataInStream.h:30:61: fatal error: iosfwd:
 No such file or directory
 compilation terminated.
 make[4]: *** [threadtest.o] Error 1
 make[4]: Leaving directory `/c/jenkins/geos/branches/3.4/tests/thread'
 make[3]: *** [check-am] Error 2
 make[3]: Leaving directory `/c/jenkins/geos/branches/3.4/tests/thread'
 make[2]: *** [check-recursive] Error 1
 make[2]: Leaving directory `/c/jenkins/geos/branches/3.4/tests'
 make[1]: *** [check-recursive] Error 1
 make[1]: Leaving directory `/c/jenkins/geos/branches/3.4'
 make: *** [check] Error 2
 }}}

 Full gory details here:

 http://winjen.postgis.net:1500/view/GEOS/job/GEOS_Trunk_ming/30/console

 It should automatically rebuild after you commit a change.  Well within 15
 minutes, but you can manually build.  You know the account.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at telus.net  Sat Sep  8 22:11:15 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Sat, 08 Sep 2012 22:11:15 -0700
Subject: [geos-devel] Polygon simplicity and validity
In-Reply-To: <504A45B3.9070703@telus.net>
References: <CAOodmJqp-GpsEpOCRfuG3BkykXMY8ruZdc_gmT-nmN5Q_DYxqQ@mail.gmail.com>
	<504A45B3.9070703@telus.net>
Message-ID: <504C24F3.8000807@telus.net>

Sean, FWIW I agree with you that it makes more sense to have isSimple 
for polygons and rings report whether the underlying linework is simple. 
The current JTS hard-coded implementation was done for sake of 
expediency during the initial development of the library. It's a bit of 
a wasted opportunity to not allow isSimple to report self-intersecting 
linework (even if it still formally meets the SFS specification).  I'll 
look into enhancing this in JTS.

On 9/7/2012 12:06 PM, Martin Davis wrote:
> The OGC SFS specifies that valid polygons are simple by definition, 
> presumably because valid polygons cannot contain any 
> self-intersections.  Because of this, JTS/GEOS simply returns true for 
> Polygon.isSimple(), without attempting any inspection of the actual 
> linework.  isValid can be used to detect self-intersections.
>
> On 8/29/2012 11:19 AM, Sean Gillies wrote:
>> Is simplicity meaningful for polygons or only for lines? Here's a
>> single ring bowtie that GEOS 3.3.0 reports as invalid but simple:
>>
>> POLYGON ((39.1451330299999967 23.7510081600000014, 97.0537220899999937
>> 40.5455008799999987, 105.2652701399999984 48.1330221300000005,
>> 100.9175268500000016 58.4333681499999997, 71.5608144800000048
>> 83.5511480100000057, 60.7118916800000008 86.2531609899999978,
>> 62.0046980799999972 75.1478175999999962, 83.1631000699999987
>> 42.8207167300000009, 92.8230586199999976 37.1917558199999974,
>> 95.9940112900000031 26.4705124599999984, 106.2205448200000006
>> 15.5197519199999991, 39.1451330299999967 23.7510081600000014))
>>
>> https://github.com/Toblerity/Shapely/issues/16#issuecomment-8116396
>>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2012.0.2197 / Virus Database: 2437/5254 - Release Date: 09/07/12
>
>


From mtnclimb at telus.net  Sat Sep  8 22:39:25 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Sat, 08 Sep 2012 22:39:25 -0700
Subject: [geos-devel] Polygon simplicity and validity
In-Reply-To: <504C24F3.8000807@telus.net>
References: <CAOodmJqp-GpsEpOCRfuG3BkykXMY8ruZdc_gmT-nmN5Q_DYxqQ@mail.gmail.com>
	<504A45B3.9070703@telus.net> <504C24F3.8000807@telus.net>
Message-ID: <504C2B8D.30504@telus.net>

This does raise the issue of what the semantics of isSimple for polygons 
should be. Should the original example of a hole overlapping the 
containing shell be reported as NOT simple? This would seem to be 
consistent with the OGC SFS definition of simplicity as "having no 
anomalous geometric points". But then isSimple pretty much becomes a 
synonym for isValid, in the case of polygons.

Or should it follow your idea of being the conjunction of the simplicity 
of the component rings?

It's not clear to me what the most useful semantics would be. It feels 
like the latter definition would be less redundant.

On 9/8/2012 10:11 PM, Martin Davis wrote:
> Sean, FWIW I agree with you that it makes more sense to have isSimple 
> for polygons and rings report whether the underlying linework is 
> simple. The current JTS hard-coded implementation was done for sake of 
> expediency during the initial development of the library. It's a bit 
> of a wasted opportunity to not allow isSimple to report 
> self-intersecting linework (even if it still formally meets the SFS 
> specification).  I'll look into enhancing this in JTS.
>
> On 9/7/2012 12:06 PM, Martin Davis wrote:
>> The OGC SFS specifies that valid polygons are simple by definition, 
>> presumably because valid polygons cannot contain any 
>> self-intersections.  Because of this, JTS/GEOS simply returns true 
>> for Polygon.isSimple(), without attempting any inspection of the 
>> actual linework.  isValid can be used to detect self-intersections.
>>
>> On 8/29/2012 11:19 AM, Sean Gillies wrote:
>>> Is simplicity meaningful for polygons or only for lines? Here's a
>>> single ring bowtie that GEOS 3.3.0 reports as invalid but simple:
>>>
>>> POLYGON ((39.1451330299999967 23.7510081600000014, 97.0537220899999937
>>> 40.5455008799999987, 105.2652701399999984 48.1330221300000005,
>>> 100.9175268500000016 58.4333681499999997, 71.5608144800000048
>>> 83.5511480100000057, 60.7118916800000008 86.2531609899999978,
>>> 62.0046980799999972 75.1478175999999962, 83.1631000699999987
>>> 42.8207167300000009, 92.8230586199999976 37.1917558199999974,
>>> 95.9940112900000031 26.4705124599999984, 106.2205448200000006
>>> 15.5197519199999991, 39.1451330299999967 23.7510081600000014))
>>>
>>> https://github.com/Toblerity/Shapely/issues/16#issuecomment-8116396
>>>
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>>
>> -----
>> No virus found in this message.
>> Checked by AVG - www.avg.com
>> Version: 2012.0.2197 / Virus Database: 2437/5254 - Release Date: 
>> 09/07/12
>>
>>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2012.0.2197 / Virus Database: 2437/5256 - Release Date: 09/08/12
>
>


From geos-trac at osgeo.org  Sun Sep  9 15:06:06 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 09 Sep 2012 22:06:06 -0000
Subject: [geos-devel] [GEOS] #586: Segfault from intersection
Message-ID: <044.3b5d94a6f4cb46d2aae4bfd93e0b5861@osgeo.org>

#586: Segfault from intersection
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 See http://trac.osgeo.org/postgis/ticket/1977

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/586>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 10 03:09:10 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 10 Sep 2012 10:09:10 -0000
Subject: [geos-devel] [GEOS] #587: Memory leak in geos trunk
Message-ID: <045.f138e530aaa5bd099d4271b16879aa24@osgeo.org>

#587: Memory leak in geos trunk
------------------------+---------------------------------------------------
 Reporter:  bradh       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I'm working on an application that uses GEOS indirectly (via SpatiaLite).
 In earlier versions of GEOS, it was valgrind-clean (no memory leaks). With
 trunk, I see two minor leaks, both of which come from initGEOS().


 {{{
 ==7181== 16 bytes in 1 blocks are still reachable in loss record 1 of 2
 ==7181==    at 0x4C28B35: operator new(unsigned long)
 (vg_replace_malloc.c:261)
 ==7181==    by 0x6C7133E: geos::geom::GeometryFactory::GeometryFactory()
 (GeometryFactory.cpp:86)
 ==7181==    by 0x6C7400E:
 geos::geom::GeometryFactory::getDefaultInstance()
 (GeometryFactory.cpp:728)
 ==7181==    by 0x6874B5C: initGEOS_r (geos_ts_c.cpp:206)
 ==7181==    by 0x6872ACD: initGEOS (geos_c.cpp:98)
 ==7181==    by 0x51B8BFA: spatialite_init (spatialite.c:21708)
 ==7181==    by 0x40092C: main (check_point_to_tile_wrong_arg_type.c:61)
 ==7181==
 ==7181== 32 bytes in 1 blocks are still reachable in loss record 2 of 2
 ==7181==    at 0x4C28B35: operator new(unsigned long)
 (vg_replace_malloc.c:261)
 ==7181==    by 0x6C74003:
 geos::geom::GeometryFactory::getDefaultInstance()
 (GeometryFactory.cpp:728)
 ==7181==    by 0x6874B5C: initGEOS_r (geos_ts_c.cpp:206)
 ==7181==    by 0x6872ACD: initGEOS (geos_c.cpp:98)
 ==7181==    by 0x51B8BFA: spatialite_init (spatialite.c:21708)
 ==7181==    by 0x40092C: main (check_point_to_tile_wrong_arg_type.c:61)
 }}}

 Note that there is a call to finishGEOS() which cleans up most, but not
 all, of the memory leak.

 I did try investigating this, and deleting the defInstance did fix the
 memory leak, but it completely broke on threaded applications.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/587>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 10 03:12:07 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 10 Sep 2012 10:12:07 -0000
Subject: [geos-devel] [GEOS] #587: Memory leak in geos trunk
In-Reply-To: <045.f138e530aaa5bd099d4271b16879aa24@osgeo.org>
References: <045.f138e530aaa5bd099d4271b16879aa24@osgeo.org>
Message-ID: <054.e7cb06c3d433d78935adf6af76ca14a2@osgeo.org>

#587: Memory leak in geos trunk
------------------------+---------------------------------------------------
 Reporter:  bradh       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by bradh):

 Sorry:

 ''Note that there is a call to finishGEOS() which cleans up most, but not
 all, of the memory leak.''

 should read

 ''Note that there is a call to finishGEOS() which cleans up most, but not
 all, of the memory allocated in initGEOS, resulting in this leak.''

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/587#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 10 03:15:24 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 10 Sep 2012 10:15:24 -0000
Subject: [geos-devel] [GEOS] #587: Memory leak in geos trunk
In-Reply-To: <045.f138e530aaa5bd099d4271b16879aa24@osgeo.org>
References: <045.f138e530aaa5bd099d4271b16879aa24@osgeo.org>
Message-ID: <054.39a3da3466409a0d1b9052ba56967ed9@osgeo.org>

#587: Memory leak in geos trunk
------------------------+---------------------------------------------------
 Reporter:  bradh       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 I think it used to be a function static, so automatically created and
 deleted. Then it turned to heap-allocated but forgot by which reason
 (there was a reason, but maybe invalid).

 In any case it's not a big leak, just a singleton...

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/587#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 10 03:38:21 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 10 Sep 2012 10:38:21 -0000
Subject: [geos-devel] [GEOS] #570: Add Z support in delaunay
	triangulation
In-Reply-To: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
References: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
Message-ID: <053.e0cd99ae2ec2998bf9cfef283d228666@osgeo.org>

#570: Add Z support in delaunay triangulation
------------------------+---------------------------------------------------
 Reporter:  strk        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:  fixed                     
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by strk):

  * status:  new => closed
  * resolution:  => fixed


Comment:

 Committed in r3716, thanks !

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/570#comment:5>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 10 04:23:11 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 10 Sep 2012 11:23:11 -0000
Subject: [geos-devel] [GEOS] #587: Memory leak in geos trunk
In-Reply-To: <045.f138e530aaa5bd099d4271b16879aa24@osgeo.org>
References: <045.f138e530aaa5bd099d4271b16879aa24@osgeo.org>
Message-ID: <054.ae8a3af1f2ce4c5f8680a1e8c63cdc4d@osgeo.org>

#587: Memory leak in geos trunk
------------------------+---------------------------------------------------
 Reporter:  bradh       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by bradh):

 I agree about the "not a big leak", hence the "minor" priority. In fact,
 its mostly just a nuisance when using valgrind on my app. It might be
 easier just to add a suppression.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/587#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 11 21:50:33 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 04:50:33 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.ec231adbe0088ae2c1b33941ff2691e5@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by robe):

 This is a bit more complicated than I thought.  My windows 7 64-bit which
 is running the same version and gcc mingw64 as the windows bot.  The
 windows bot is windows 2003 64-bit.

 These errors are not showing up at all on my windows 7, however I'm
 getting a lot of xmltester failures which I think is a new issue. I'll
 post as separate ticket.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 12 02:49:52 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 09:49:52 -0000
Subject: [geos-devel] [GEOS] #588: valid polygon when cw, not valid when ccw
Message-ID: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>

#588: valid polygon when cw, not valid when ccw
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 Geos says this polygon is valid :

 {{{
 POLYGON ((
 -86.3958130146539250 114.3482370100377900,
 64.7285128575111490 156.9678884302379600,
 138.3490775437400700 43.1639042523018260,
 87.9271046586986810 -10.5302909001479570,
 87.9271046586986810 -10.5302909001479530,
 55.7321237336437390 -44.8146215164960250,
 -86.3958130146539250 114.3482370100377900))
 }}}


 Now, I reverse the points :

 {{{
 POLYGON ((
 -86.3958130146539250 114.3482370100377900,
 55.7321237336437390 -44.8146215164960250,
 87.9271046586986810 -10.5302909001479530,
 87.9271046586986810 -10.5302909001479570,
 138.3490775437400700 43.1639042523018260,
 64.7285128575111490 156.9678884302379600,
 -86.3958130146539250 114.3482370100377900))
 }}}


 Geos notices me "Self-intersection at or near point 87.927104658698681
 -10.530290900147953".

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/588>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 12 03:04:03 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 10:04:03 -0000
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
	not valid when ccw
In-Reply-To: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
Message-ID: <058.338f6884aca5b099e190a5df91f71cc1@osgeo.org>

#588: valid polygon when cw, not valid when ccw
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Ouch! Confirmed, also using st_reverse.
 I'm with 3.4.0dev here, are you on 3.3.5 ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/588#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 12 03:08:12 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 10:08:12 -0000
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
	not valid when ccw
In-Reply-To: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
Message-ID: <058.9d6c11c853bf9cdc78bbfef17af318fa@osgeo.org>

#588: valid polygon when cw, not valid when ccw
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by olivier80):

 Yes.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/588#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 12 03:14:56 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 10:14:56 -0000
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
	not valid when ccw
In-Reply-To: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
Message-ID: <058.40cb5f5ffab2c7c3ae3d6ae52f8f0e7f@osgeo.org>

#588: valid polygon when cw, not valid when ccw
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 The polygon ring has 7 points, but it's a 4 sides polygon. So 2 vertices
 are very close to other vertices.

 I'd love to have a function (in postgis) to analyze these cases and answer
 questions like: what's the minimum distance between two consecutive
 vertices ? what's the minimum distance between any two vertices ?

 Simplifying the geometry with a tolerance of 1e-10 is enough to fix the
 invalidity, but anyway the robustness problem exists. I didn't try with
 JTS but I suspect it may be an issue there as well.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/588#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 12 03:25:58 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 10:25:58 -0000
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
	not valid when ccw
In-Reply-To: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
Message-ID: <058.cd6cff474026d3051832a1d92ede09a1@osgeo.org>

#588: valid polygon when cw, not valid when ccw
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by olivier80):

 Unfortunately, I'm not a postgis user, I use geos with the C api. This
 polygon is a simplified version of a GEOSBufferWithStyle() result. I keep
 only the problematic points (87.9271046586986810 -10.5302909001479570 and
 87.9271046586986810 -10.5302909001479530). The distance between those two
 points is nothing and yes, you're right, simplifying should fix.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/588#comment:4>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 12 03:47:39 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 10:47:39 -0000
Subject: [geos-devel] [GEOS] #589: GEOSBufferWithStyle with mitre style on
	LinearRing
Message-ID: <049.1bdc6779d5280e5e755d00414fcb0221@osgeo.org>

#589: GEOSBufferWithStyle with mitre style on LinearRing
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I?m not sure if it is a bug or if it is normal behaviour.

 Consider this linearring.

 {{{
 LINEARRING (
 10.0000000000000000 10.0000000000000000,
 20.0000000000000000 10.0000000000000000,
 20.0000000000000000 20.0000000000000000,
 10.0000000000000000 20.0000000000000000,
 10.0000000000000000 10.0000000000000000)
 }}}

 Now I do :

 {{{
 GEOSBufferWithStyle(linearring, 1, 3, GEOSBUF_CAP_FLAT,
 GEOSBUF_JOIN_MITRE, 5)
 }}}

 Result :


 {{{
 POLYGON ((
 10.0000000000000000 10.0000000000000000,
 9.0000000000000000 10.0000000000000000,
 9.0000000000000000 21.0000000000000000,
 21.0000000000000000 21.0000000000000000,
 21.0000000000000000 9.0000000000000000,
 10.0000000000000000 9.0000000000000000,
 10.0000000000000000 10.0000000000000000),
 (11.0000000000000000 11.0000000000000000,
 19.0000000000000000 11.0000000000000000,
 19.0000000000000000 19.0000000000000000,
 11.0000000000000000 19.0000000000000000,
 11.0000000000000000 11.0000000000000000))
 }}}


 The first and last points of my buffer are in flat style. I think on a
 linearring, geos should use the join style, not the cap style for the
 closing point.
 Otherwise, how can I mitre the first point and last points on a linearring
 ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/589>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 12 04:58:32 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 11:58:32 -0000
Subject: [geos-devel] [GEOS] #590: GEOSBufferWithStyle result isn't valid
 and GEOSIsValid() says it is
Message-ID: <049.671b8994e39302351c29a20fe5047e86@osgeo.org>

#590: GEOSBufferWithStyle result isn't valid and GEOSIsValid() says it is
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 {{{
 LINEARRING(38.7066196617741550 -28.8266827415760860,
 -48.9228243285119790 100.6496977731573000,
 54.4799195800256510 129.8110447359351000,
 108.8101748540030500 45.8263654831350490,
 86.7372079193139310 22.3209346883718070,
 71.8793256882949690 36.0080540867567290,
 55.2741306329362700 34.2630391674088840,
 52.0696193064635370 19.4304123529519610,
 62.0890652576763390 -3.9267923737325212,
 38.7066196617741550 -28.8266827415760860)
 }}}


 I do :

 {{{
 GEOSBufferWithStyle(object, 22.532378519833863, 6, GEOSBUF_CAP_FLAT,
 GEOSBUF_JOIN_MITRE, 5)

 }}}

 The result is :

 {{{
 POLYGON ((
 -85.0750607179665220 113.8654258494467400,
 64.3672965899103670 156.0107332916275600,
 137.3079656672400100 43.2577438927670460,
 87.8851662143294450 -9.3724347171667830,
 64.1043275247160270 12.5345351643778980,
 57.6290566127233890 11.8540587044160620,
 56.4515936228298330 23.0585489359124730,
 66.2862534590275200 31.8839277149233600,
 77.2983762851187630 29.5048162624378390,
 75.6128088072109530 21.7028799222997040,
 88.6113412524690600 -8.5991332777010179,
 55.1320522049615960 -44.2511194421583620,
 38.7066196617741550 -28.8266827415760860,
 20.0462661184433340 -41.4559854697147760,
 -85.0750607179665220 113.8654258494467400),
 (30.0425661643411640 24.1756403122601360,
 36.6948846784684620 54.9670302991890620,
 73.5550410624974380 58.8406085742523290,
 44.5925425701409350 103.6113561802426200,
 -12.7705879390574210 87.4339696968678620,
 30.0425661643411640 24.1756403122601360))
 }}}


 GEOSIsValid() on the result returns 1. But it is a self crossing polygon
 (near 88.6 -8.6).

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/590>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at telus.net  Wed Sep 12 07:25:39 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Wed, 12 Sep 2012 07:25:39 -0700
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
 not valid when ccw
In-Reply-To: <058.40cb5f5ffab2c7c3ae3d6ae52f8f0e7f@osgeo.org>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
	<058.40cb5f5ffab2c7c3ae3d6ae52f8f0e7f@osgeo.org>
Message-ID: <50509B63.2010401@telus.net>

Yes, JTS has the problem too.  Sigh....  I'll have to dig into it to 
find out why this is failing.  I made some improvements to the 
orientation test recently which I thought would make it fully robust, 
but perhaps there's still issues.  Or else something else is going on....

On 9/12/2012 3:14 AM, GEOS wrote:
> #588: valid polygon when cw, not valid when ccw
> ------------------------+---------------------------------------------------
>   Reporter:  olivier80   |       Owner:  geos-devel@?
>       Type:  defect      |      Status:  new
>   Priority:  major       |   Milestone:  3.3.6
> Component:  Default     |     Version:  3.3.5
>   Severity:  Unassigned  |    Keywords:
> ------------------------+---------------------------------------------------
>
> Comment(by strk):
>
>   The polygon ring has 7 points, but it's a 4 sides polygon. So 2 vertices
>   are very close to other vertices.
>
>   I'd love to have a function (in postgis) to analyze these cases and answer
>   questions like: what's the minimum distance between two consecutive
>   vertices ? what's the minimum distance between any two vertices ?
>
>   Simplifying the geometry with a tolerance of 1e-10 is enough to fix the
>   invalidity, but anyway the robustness problem exists. I didn't try with
>   JTS but I suspect it may be an issue there as well.
>


From geos-trac at osgeo.org  Wed Sep 12 08:07:06 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 12 Sep 2012 15:07:06 -0000
Subject: [geos-devel] [GEOS] #588: [JTS fails] valid polygon when cw,
 not valid when ccw (was: valid polygon when cw, not valid when ccw)
In-Reply-To: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
Message-ID: <058.fc67022910e1e96bad1222dfbbb03249@osgeo.org>

#588: [JTS fails] valid polygon when cw, not valid when ccw
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:  jtsfail                   
------------------------+---------------------------------------------------
Changes (by strk):

  * keywords:  => jtsfail


Comment:

 Current JTS fails too: http://lists.osgeo.org/pipermail/geos-
 devel/2012-September/006022.html

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/588#comment:5>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at telus.net  Wed Sep 12 20:43:51 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Wed, 12 Sep 2012 20:43:51 -0700
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
 not valid when ccw
In-Reply-To: <50509B63.2010401@telus.net>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
	<058.40cb5f5ffab2c7c3ae3d6ae52f8f0e7f@osgeo.org>
	<50509B63.2010401@telus.net>
Message-ID: <50515677.2020105@telus.net>

Turns out that this isn't an issue in the trunk version of JTS (but it 
is in JST 1.12).

This is probably due to the recent switch to using extended precision to 
compute determinant signs - which affects all intersection 
computations.  It would be good if GEOS switched to using this new more 
(fully?) robust technique as well.

On 9/12/2012 7:25 AM, Martin Davis wrote:
> Yes, JTS has the problem too.  Sigh....  I'll have to dig into it to 
> find out why this is failing.  I made some improvements to the 
> orientation test recently which I thought would make it fully robust, 
> but perhaps there's still issues.  Or else something else is going on....
>
> On 9/12/2012 3:14 AM, GEOS wrote:
>> #588: valid polygon when cw, not valid when ccw
>> ------------------------+--------------------------------------------------- 
>>
>>   Reporter:  olivier80   |       Owner:  geos-devel@?
>>       Type:  defect      |      Status:  new
>>   Priority:  major       |   Milestone:  3.3.6
>> Component:  Default     |     Version:  3.3.5
>>   Severity:  Unassigned  |    Keywords:
>> ------------------------+--------------------------------------------------- 
>>
>>
>> Comment(by strk):
>>
>>   The polygon ring has 7 points, but it's a 4 sides polygon. So 2 
>> vertices
>>   are very close to other vertices.
>>
>>   I'd love to have a function (in postgis) to analyze these cases and 
>> answer
>>   questions like: what's the minimum distance between two consecutive
>>   vertices ? what's the minimum distance between any two vertices ?
>>
>>   Simplifying the geometry with a tolerance of 1e-10 is enough to fix 
>> the
>>   invalidity, but anyway the robustness problem exists. I didn't try 
>> with
>>   JTS but I suspect it may be an issue there as well.
>>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2012.0.2221 / Virus Database: 2437/5263 - Release Date: 09/11/12


From strk at keybit.net  Thu Sep 13 00:50:40 2012
From: strk at keybit.net (Sandro Santilli)
Date: Thu, 13 Sep 2012 09:50:40 +0200
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
 not valid when ccw
In-Reply-To: <50515677.2020105@telus.net>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
	<058.40cb5f5ffab2c7c3ae3d6ae52f8f0e7f@osgeo.org>
	<50509B63.2010401@telus.net> <50515677.2020105@telus.net>
Message-ID: <20120913075040.GH2598@gnash>

On Wed, Sep 12, 2012 at 08:43:51PM -0700, Martin Davis wrote:
> Turns out that this isn't an issue in the trunk version of JTS (but
> it is in JST 1.12).
> 
> This is probably due to the recent switch to using extended
> precision to compute determinant signs - which affects all
> intersection computations.  It would be good if GEOS switched to
> using this new more (fully?) robust technique as well.

Are you referring to this commit ?
http://jts-topo-suite.svn.sourceforge.net/viewvc/jts-topo-suite/trunk/jts/java/src/com/vividsolutions/jts/algorithm/CGAlgorithms.java?r1=652&r2=651&pathrev=652

Or which other  else ?

--strk;

 http://www.cartodb.com - Map, analyze and build applications with your data

                                       ~~ http://strk.keybit.net 


From geos-trac at osgeo.org  Thu Sep 13 00:52:21 2012
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 13 Sep 2012 07:52:21 -0000
Subject: [geos-devel] [GEOS] #591: Port robust determinant fixes from JTS
Message-ID: <044.1cc558a7a3be4128383f28dc221e6277@osgeo.org>

#591: Port robust determinant fixes from JTS
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 See http://jts-topo-suite.svn.sourceforge.net/viewvc/jts-topo-
 suite?view=revision&revision=626

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/591>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Sep 13 00:54:30 2012
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 13 Sep 2012 07:54:30 -0000
Subject: [geos-devel] [GEOS] #588: [JTS fails] valid polygon when cw,
 not valid when ccw
In-Reply-To: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
Message-ID: <058.0c2be2d5961144ed7e8761c7e4826653@osgeo.org>

#588: [JTS fails] valid polygon when cw, not valid when ccw
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:  jtsfail                   
------------------------+---------------------------------------------------

Comment(by strk):

 Martin Davis wrote:
 > Turns out that this isn't an issue in the trunk version of JTS
 > (but it is in JST 1.12).
 >
 > This is probably due to the recent switch to using extended precision
 > to compute determinant signs - which affects all intersection
 computations.
 > It would be good if GEOS switched to using this new more (fully?)
 > robust technique as well.

 See ticket #591 for that

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/588#comment:6>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Sep 13 00:58:56 2012
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 13 Sep 2012 07:58:56 -0000
Subject: [geos-devel] [GEOS] #584: Port robust distance fixes from JTS
In-Reply-To: <044.0b42218f2646a34bb02c5880a7ff7ea0@osgeo.org>
References: <044.0b42218f2646a34bb02c5880a7ff7ea0@osgeo.org>
Message-ID: <053.8356ccd5d7a3cfa46e929575ca4b0209@osgeo.org>

#584: Port robust distance fixes from JTS
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 For the actual JST revision, see http://jts-topo-
 suite.svn.sourceforge.net/viewvc/jts-topo-suite?view=revision&revision=652

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/584#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at telus.net  Thu Sep 13 08:16:43 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Thu, 13 Sep 2012 08:16:43 -0700
Subject: [geos-devel] [GEOS] #588: valid polygon when cw,
 not valid when ccw
In-Reply-To: <20120913075040.GH2598@gnash>
References: <049.8d0da4144ecbb31552c2c91213c02bd6@osgeo.org>
	<058.40cb5f5ffab2c7c3ae3d6ae52f8f0e7f@osgeo.org>
	<50509B63.2010401@telus.net> <50515677.2020105@telus.net>
	<20120913075040.GH2598@gnash>
Message-ID: <5051F8DB.7050906@telus.net>

rev 652 was a fix for a robustness issue, but the major one that 
improves general topology robustness was 626.

Note that this references other code that was commited in other 
revisions - you'll have to follow it through to get everything. There 
aren't too many classes involved, however.  The major work will be 
porting the DD code.

On 9/13/2012 12:50 AM, Sandro Santilli wrote:
> On Wed, Sep 12, 2012 at 08:43:51PM -0700, Martin Davis wrote:
>> Turns out that this isn't an issue in the trunk version of JTS (but
>> it is in JST 1.12).
>>
>> This is probably due to the recent switch to using extended
>> precision to compute determinant signs - which affects all
>> intersection computations.  It would be good if GEOS switched to
>> using this new more (fully?) robust technique as well.
> Are you referring to this commit ?
> http://jts-topo-suite.svn.sourceforge.net/viewvc/jts-topo-suite/trunk/jts/java/src/com/vividsolutions/jts/algorithm/CGAlgorithms.java?r1=652&r2=651&pathrev=652
>
> Or which other  else ?
>
> --strk;
>
>   http://www.cartodb.com - Map, analyze and build applications with your data
>
>                                         ~~ http://strk.keybit.net
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2012.0.2221 / Virus Database: 2437/5264 - Release Date: 09/12/12
>
>


From geos-trac at osgeo.org  Sun Sep 16 12:58:53 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 16 Sep 2012 19:58:53 -0000
Subject: [geos-devel] [GEOS] #589: GEOSBufferWithStyle with mitre style
	on LinearRing
In-Reply-To: <049.1bdc6779d5280e5e755d00414fcb0221@osgeo.org>
References: <049.1bdc6779d5280e5e755d00414fcb0221@osgeo.org>
Message-ID: <058.ebd962185420a7d3a54554bf4ab076f5@osgeo.org>

#589: GEOSBufferWithStyle with mitre style on LinearRing
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Same issue exists with JTS. Martin: rationale for that ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/589#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at telus.net  Sun Sep 16 13:06:25 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Sun, 16 Sep 2012 13:06:25 -0700
Subject: [geos-devel] [GEOS] #589: GEOSBufferWithStyle with mitre style
 on LinearRing
In-Reply-To: <058.ebd962185420a7d3a54554bf4ab076f5@osgeo.org>
References: <049.1bdc6779d5280e5e755d00414fcb0221@osgeo.org>
	<058.ebd962185420a7d3a54554bf4ab076f5@osgeo.org>
Message-ID: <50563141.1090802@telus.net>

Yes, that probably makes more sense.  The only rationale for not doing 
this already is that it will take some work to create offset linework 
that reflects this logic.  (Currently linearrings are handled by the 
same code as linestrings, because when the end cap style is round the 
ends merge seamlessly anyway.  Cap styles were added later, but the 
linearring handling was not enhanced to respect them).

On 9/16/2012 12:58 PM, GEOS wrote:
> #589: GEOSBufferWithStyle with mitre style on LinearRing
> ------------------------+---------------------------------------------------
>   Reporter:  olivier80   |       Owner:  geos-devel@?
>       Type:  defect      |      Status:  new
>   Priority:  major       |   Milestone:  3.3.6
> Component:  Default     |     Version:  3.3.5
>   Severity:  Unassigned  |    Keywords:
> ------------------------+---------------------------------------------------
>
> Comment(by strk):
>
>   Same issue exists with JTS. Martin: rationale for that ?
>


From geos-trac at osgeo.org  Sun Sep 16 13:21:40 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 16 Sep 2012 20:21:40 -0000
Subject: [geos-devel] [GEOS] #580: Contains(Polygon,
 Point) return False instead of True
In-Reply-To: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
References: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
Message-ID: <056.acef8794d0b8c5994cd3357e43186c94@osgeo.org>

#580: Contains(Polygon, Point) return False instead of True
------------------------+---------------------------------------------------
 Reporter:  skurlat     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Martin: is JTS affected by this ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/580#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep 16 13:33:40 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 16 Sep 2012 20:33:40 -0000
Subject: [geos-devel] [GEOS] #589: GEOSBufferWithStyle with mitre style
	on LinearRing
In-Reply-To: <049.1bdc6779d5280e5e755d00414fcb0221@osgeo.org>
References: <049.1bdc6779d5280e5e755d00414fcb0221@osgeo.org>
Message-ID: <058.a0dd88eea966612f46449afe21a96542@osgeo.org>

#589: GEOSBufferWithStyle with mitre style on LinearRing
------------------------+---------------------------------------------------
 Reporter:  olivier80   |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Martin said:
 > Yes, that probably makes more sense.  The only rationale
 > for not doing this already is that it will take some
 > work to create offset linework that reflects this logic.
 > (Currently linearrings are handled by the same code as
 > linestrings, because when the end cap style is round
 > the ends merge seamlessly anyway.  Cap styles were added
 > later, but the linearring handling was not enhanced to
 > respect them).

 (it would be lovely if trac accepted mail replies, but unfortunately it
 doesn't, so I'm copy&pasting mailing list only reply ..)

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/589#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep 16 13:38:31 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 16 Sep 2012 20:38:31 -0000
Subject: [geos-devel] [GEOS] #580: Contains(Polygon,
 Point) return False instead of True
In-Reply-To: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
References: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
Message-ID: <056.2c8ff74ce5dffc31dab3e165da17ac2b@osgeo.org>

#580: Contains(Polygon, Point) return False instead of True
------------------------+---------------------------------------------------
 Reporter:  skurlat     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by darkblueb):

 this rev works for me:
 {{{
 select postgis_full_version();
 "POSTGIS="2.0.1 r9979" GEOS="3.3.3-CAPI-1.7.4" PROJ="Rel. 4.8.0, 6 March
 2012" GDAL="GDAL 2.0dev, released 2011/12/29" LIBXML="2.7.8"
 LIBJSON="UNKNOWN" RASTER"

 select st_contains(
    'POLYGON ((-1.183864 52.951915, -1.183862 52.951903, -1.183890
 52.951900, -1.183924 52.951897, -1.183958 52.951894, -1.183954
 52.951880, -1.183954 52.951878, -1.183932 52.951841, -1.183904
 52.951844, -1.183870 52.951847, -1.183832 52.951852, -1.183824
 52.951838, -1.183820 52.951830, -1.183870 52.951819, -1.183886
 52.951815, -1.183890 52.951819, -1.183929 52.951810, -1.183909
 52.951776, -1.183861 52.951787, -1.183853 52.951788, -1.183842
 52.951770, -1.183970 52.951742, -1.183983 52.951763, -1.183963
 52.951768, -1.183975 52.951788, -1.183994 52.951785, -1.184009
 52.951807, -1.184002 52.951808, -1.184009 52.951835, -1.183990
 52.951836, -1.183990 52.951836, -1.183990 52.951838, -1.184001
 52.951880, -1.184018 52.951954, -1.184020 52.951956, -1.183998
 52.951957, -1.183998 52.951956, -1.183996 52.951948, -1.183970
 52.951906, -1.183936 52.951909, -1.183864 52.951915))'::geometry,
  'POINT (-1.183972 52.951871)'::geometry );

 st_contains
 boolean
 ---------------
 t
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/580#comment:4>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at telus.net  Sun Sep 16 18:08:10 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Sun, 16 Sep 2012 18:08:10 -0700
Subject: [geos-devel] [GEOS] #580: Contains(Polygon,
 Point) return False instead of True
In-Reply-To: <056.acef8794d0b8c5994cd3357e43186c94@osgeo.org>
References: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
	<056.acef8794d0b8c5994cd3357e43186c94@osgeo.org>
Message-ID: <505677FA.6050507@telus.net>

Nope.

On 9/16/2012 1:21 PM, GEOS wrote:
> #580: Contains(Polygon, Point) return False instead of True
> ------------------------+---------------------------------------------------
>   Reporter:  skurlat     |       Owner:  geos-devel@?
>       Type:  defect      |      Status:  new
>   Priority:  major       |   Milestone:  3.3.6
> Component:  Default     |     Version:  3.3.4
>   Severity:  Unassigned  |    Keywords:
> ------------------------+---------------------------------------------------
>
> Comment(by strk):
>
>   Martin: is JTS affected by this ?
>


From geos-trac at osgeo.org  Sun Sep 16 23:40:04 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Sep 2012 06:40:04 -0000
Subject: [geos-devel] [GEOS] #580: Contains(Polygon,
 Point) return False instead of True
In-Reply-To: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
References: <047.92a287a0e8abdcc8d51a8d6c0e7fcfbd@osgeo.org>
Message-ID: <056.112912db97aad093d38401342ee8e0ee@osgeo.org>

#580: Contains(Polygon, Point) return False instead of True
------------------------+---------------------------------------------------
 Reporter:  skurlat     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 JTS works fine, so it must be a GEOS only bug.
 http://lists.osgeo.org/pipermail/geos-devel/2012-September/006035.html

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/580#comment:5>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 17 01:16:47 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Sep 2012 08:16:47 -0000
Subject: [geos-devel] [GEOS] #592: Build error in 3.2 branch
Message-ID: <044.1915da0ddec614dfe3b01944ec05a37c@osgeo.org>

#592: Build error in 3.2 branch
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.2.4                     
Component:  Default     |     Version:  3.2.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 g++ (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3

 {{{
 libtool: compile:  ccache g++ -DHAVE_CONFIG_H -I. -I../../source/headers
 -I../../source/headers/geos -I../../source/headers -g -O2 -DGEOS_INLINE
 -pedantic -Wall -ansi -Wno-long-long -ffloat-store -MT
 CoordinateSequenceFactory.lo -MD -MP -MF
 .deps/CoordinateSequenceFactory.Tpo -c CoordinateSequenceFactory.cpp
 -fPIC -DPIC -o .libs/CoordinateSequenceFactory.o
 In file included from CoordinateSequenceFactory.cpp:20:0:
 ../../source/headers/geos/geom/CoordinateSequenceFactory.h:78:37: error:
 'create' declared as a 'virtual' field
 ../../source/headers/geos/geom/CoordinateSequenceFactory.h:78:30: error:
 expected ';' at end of member declaration
 ../../source/headers/geos/geom/CoordinateSequenceFactory.h:78:37: error:
 declaration of 'geos::geom::CoordinateSequence*
 geos::geom::CoordinateSequenceFactory::create'
 ../../source/headers/geos/geom/CoordinateSequenceFactory.h:65:30: error:
 conflicts with previous declaration 'virtual
 geos::geom::CoordinateSequence*
 geos::geom::CoordinateSequenceFactory::create(std::vector<geos::geom::Coordinate>*)
 const'
 ../../source/headers/geos/geom/CoordinateSequenceFactory.h:78:44: error:
 expected ')' before 'size'
 make[3]: *** [CoordinateSequenceFactory.lo] Error 1
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/592>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 17 01:53:32 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Sep 2012 08:53:32 -0000
Subject: [geos-devel] [GEOS] #592: Build error in 3.2 branch
In-Reply-To: <044.1915da0ddec614dfe3b01944ec05a37c@osgeo.org>
References: <044.1915da0ddec614dfe3b01944ec05a37c@osgeo.org>
Message-ID: <053.8f1a12fc1c06b5d890ec409a6ed3c0a8@osgeo.org>

#592: Build error in 3.2 branch
------------------------+---------------------------------------------------
 Reporter:  strk        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:  3.2.4                     
Component:  Default     |      Version:  3.2.3                     
 Severity:  Unassigned  |   Resolution:  fixed                     
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by strk):

  * status:  new => closed
  * resolution:  => fixed


Comment:

 Fixed by r3717

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/592#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 17 03:13:17 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Sep 2012 10:13:17 -0000
Subject: [geos-devel] [GEOS] #592: Build error in 3.2 branch
In-Reply-To: <044.1915da0ddec614dfe3b01944ec05a37c@osgeo.org>
References: <044.1915da0ddec614dfe3b01944ec05a37c@osgeo.org>
Message-ID: <053.29d58dbefcb801b35064b8bc00be26a2@osgeo.org>

#592: Build error in 3.2 branch
------------------------+---------------------------------------------------
 Reporter:  strk        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:  3.2.4                     
Component:  Default     |      Version:  3.2.3                     
 Severity:  Unassigned  |   Resolution:  fixed                     
 Keywords:  history     |  
------------------------+---------------------------------------------------
Changes (by strk):

  * keywords:  => history


-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/592#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 24 01:19:16 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 24 Sep 2012 08:19:16 -0000
Subject: [geos-devel] [GEOS] #544: Port JTS bugfix and testcases for
 MCIndexSnapRounder / GeometryNoder
In-Reply-To: <044.6061adbad1d82050cfe07c3617f61255@osgeo.org>
References: <044.6061adbad1d82050cfe07c3617f61255@osgeo.org>
Message-ID: <053.48b6877bf5961317cf286fe42ad9638b@osgeo.org>

#544: Port JTS bugfix and testcases for MCIndexSnapRounder / GeometryNoder
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Another fix in the works:
 http://sourceforge.net/mailarchive/message.php?msg_id=29873742

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/544#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 24 12:15:36 2012
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 24 Sep 2012 19:15:36 -0000
Subject: [geos-devel] [GEOS] #593: WKB Should output SRID of 0
Message-ID: <044.133659409f939ee42eda572f5a2a4d53@osgeo.org>

#593: WKB Should output SRID of 0
------------------------+---------------------------------------------------
 Reporter:  cfis        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 Postgis 2.x now assumes that 0 represents an "unknown" srid.  So in our db
 we have an enforce_srid constraint that says the srid should be 0 when
 storing indoor features.

 Problem is geos intentionally doesn't output a 0 srid, here is the code:

 void
 WKBWriter::writeSRID(int SRID)
 {
     if (includeSRID && SRID != 0)
         writeInt(SRID);
 }

 This breaks our app because when it inserts a record to postgis it sends
 the new geometry using the wkb format.  Since geos doesn't emit the 0
 srid, the enforce constraint fails because the srid isn't set at all (and
 we want it to be 0).

 Could this check be removed to bring geos in line with postgis?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/593>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 24 23:32:17 2012
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 25 Sep 2012 06:32:17 -0000
Subject: [geos-devel] [GEOS] #593: WKB Should output SRID of 0
In-Reply-To: <044.133659409f939ee42eda572f5a2a4d53@osgeo.org>
References: <044.133659409f939ee42eda572f5a2a4d53@osgeo.org>
Message-ID: <053.2dfa9e1889240c8862e4482f10ec42d4@osgeo.org>

#593: WKB Should output SRID of 0
------------------------+---------------------------------------------------
 Reporter:  cfis        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Absence of SRID is considered to be the same as SRID=0 by PostGIS.
 What does your `postgis_full_version()` say ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/593#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 25 18:49:31 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 26 Sep 2012 01:49:31 -0000
Subject: [geos-devel] [GEOS] #594: geos turns 'POLYGON EMPTY' into
	'POLYGON(EMPTY)'
Message-ID: <050.a353927037ee118aee78940b5ba3a08b@osgeo.org>

#594: geos turns 'POLYGON EMPTY' into 'POLYGON(EMPTY)'
------------------------+---------------------------------------------------
 Reporter:  cdestigter  |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I wouldn't mind except that in postgis, ST_IsEmpty('POLYGON(EMPTY)') ==>
 False.

 Using the geodjango bindings:

 {{{
     >>> from django.contrib.gis import geos
     >>> g = geos.GEOSGeometry('POLYGON EMPTY')
     >>> print g.wkt, g.hex
     '01030000000100000000000000'

     >>> g = geos.GEOSGeometry('POLYGON(EMPTY)')
     >>> print g.wkt, g.hex
     '01030000000100000000000000'
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/594>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 25 18:57:35 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 26 Sep 2012 01:57:35 -0000
Subject: [geos-devel] [GEOS] #594: geos turns 'POLYGON EMPTY' into
	'POLYGON(EMPTY)'
In-Reply-To: <050.a353927037ee118aee78940b5ba3a08b@osgeo.org>
References: <050.a353927037ee118aee78940b5ba3a08b@osgeo.org>
Message-ID: <059.5bcf84802d04889b3dcda97f70f6e598@osgeo.org>

#594: geos turns 'POLYGON EMPTY' into 'POLYGON(EMPTY)'
------------------------+---------------------------------------------------
 Reporter:  cdestigter  |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by cdestigter):

 I filed a postgis bug for that ST_IsEmpty issue:
 http://trac.osgeo.org/postgis/ticket/2015

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/594#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 25 21:05:56 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 26 Sep 2012 04:05:56 -0000
Subject: [geos-devel] [GEOS] #594: geos turns 'POLYGON EMPTY' into
	'POLYGON(EMPTY)'
In-Reply-To: <050.a353927037ee118aee78940b5ba3a08b@osgeo.org>
References: <050.a353927037ee118aee78940b5ba3a08b@osgeo.org>
Message-ID: <059.bbe269b006bb72d3e709ef4748e085f7@osgeo.org>

#594: geos turns 'POLYGON EMPTY' into 'POLYGON(EMPTY)'
------------------------+---------------------------------------------------
 Reporter:  cdestigter  |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.6                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by cdestigter):

 Even worse, I can't even use hex to create the geometry, which means I
 can't work around the bug:

 {{{
     >>> geos.GEOSGeometry('010300000000000000').hex
     '01030000000100000000000000'
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/594#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Sep 30 11:30:05 2012
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 30 Sep 2012 18:30:05 -0000
Subject: [geos-devel] [GEOS] #585: mingw64 trunk make check fail on
	badthreadtest
In-Reply-To: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
References: <044.87e71821642b36cf1f6d53bfc0962558@osgeo.org>
Message-ID: <053.05fc7ec3ae27486dd004024bfe162d32@osgeo.org>

#585: mingw64 trunk make check fail on badthreadtest
------------------------+---------------------------------------------------
 Reporter:  robe        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  minor       |    Milestone:  3.4.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:  invalid                   
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by robe):

  * status:  new => closed
  * resolution:  => invalid


Comment:

 Nevermind.  The fundamental problem is that the platform.h.in is all wrong
 for 64-bit builds, but more or less right for 32-bit builds.

 I discovered why my windows 7 box was exhibiting different failures.

 In my jenkins install, I had hacked the platform.h.in to work for mingw64
 bit using the hack:

 {{{
 http://www.gaia-gis.it/spatialite-3.0.0-BETA/mingw64_how_to.html#libgeos
 }}}



 , but it caused issues for 32-bit evidentally causing it to go thru this
 badthreadtest loop.  So short answer your platform thingy doesn't work and
 I have to have a different one for 32 vs. 64 bit.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/585#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

