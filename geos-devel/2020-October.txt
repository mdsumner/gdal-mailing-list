From even.rouault at spatialys.com  Thu Oct  1 14:03:29 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 01 Oct 2020 23:03:29 +0200
Subject: [geos-devel] Motion: stop brain damage and move finally to github
	as primary repository
Message-ID: <2399395.yf9Ea7NRgr@even-i700>

Hi,

Github is a proprietary trap, but not being on it as the 
primary repository is just a waste of time and a lost battle.

Rationale: https://github.com/libgeos/geos/pull/
328#issuecomment-702390885

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201001/50c6d5b6/attachment.html>

From pramsey at cleverelephant.ca  Thu Oct  1 15:40:48 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 1 Oct 2020 15:40:48 -0700
Subject: [geos-devel] Motion: stop brain damage and move finally to
 github as primary repository
In-Reply-To: <2399395.yf9Ea7NRgr@even-i700>
References: <2399395.yf9Ea7NRgr@even-i700>
Message-ID: <E36A1A66-3D1E-4DF4-9A96-81E0E35F00A0@cleverelephant.ca>

Sorry about that, I must have mashed the button instead of merging the branch manually and pushing to osgeo.
Yes, I would agree that consolidating to GH would be very nice, or at a minimum making GH the primary repo so that the magic tooling works. 
First though... 3.9  :)
P

> On Oct 1, 2020, at 2:03 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Hi,
>  
> Github is a proprietary trap, but not being on it as the primary repository is just a waste of time and a lost battle.
>  
> Rationale: https://github.com/libgeos/geos/pull/328#issuecomment-702390885
>  
> Even
>  
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Fri Oct  2 03:12:52 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 2 Oct 2020 12:12:52 +0200
Subject: [geos-devel] Motion: stop brain damage and move finally to
 github as primary repository
In-Reply-To: <2399395.yf9Ea7NRgr@even-i700>
References: <2399395.yf9Ea7NRgr@even-i700>
Message-ID: <20201002101252.GB3996@lif>

On Thu, Oct 01, 2020 at 11:03:29PM +0200, Even Rouault wrote:
> Hi,
> 
> Github is a proprietary trap, but not being on it as the 
> primary repository is just a waste of time and a lost battle.

The battle is only lost if you don't fight it.

--strk;

From gdt at lexort.com  Fri Oct  2 04:21:13 2020
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 02 Oct 2020 07:21:13 -0400
Subject: [geos-devel] Motion: stop brain damage and move finally to
	github as primary repository
In-Reply-To: <20201002101252.GB3996@lif> (Sandro Santilli's message of "Fri, 2
 Oct 2020 12:12:52 +0200")
References: <2399395.yf9Ea7NRgr@even-i700> <20201002101252.GB3996@lif>
Message-ID: <rmi5z7s6fh2.fsf@s1.lexort.com>


Sandro Santilli <strk at kbt.io> writes:

> On Thu, Oct 01, 2020 at 11:03:29PM +0200, Even Rouault wrote:
>> Hi,
>> 
>> Github is a proprietary trap, but not being on it as the 
>> primary repository is just a waste of time and a lost battle.
>
> The battle is only lost if you don't fight it.
>
> --strk;

Obviously I'm not on PSC, but I agreed with strk.  I have always found
the willingness of open source projects to use github distressing.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201002/83d1b058/attachment.sig>

From geos-trac at osgeo.org  Fri Oct  2 17:59:00 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 03 Oct 2020 00:59:00 -0000
Subject: [geos-devel] [GEOS] #1052: Thread safety: C API contexts use
 shared GeometryFactory without any refCount synchronization
In-Reply-To: <046.559ef089fa02ac6dcea3d40c7cbdf478@osgeo.org>
References: <046.559ef089fa02ac6dcea3d40c7cbdf478@osgeo.org>
Message-ID: <061.5222111789bba705b30604338039e746@osgeo.org>

#1052: Thread safety: C API contexts use shared GeometryFactory without any
refCount synchronization
------------------------+---------------------------
 Reporter:  macdrevx    |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by macdrevx):

 * cc: macdrevx (added)
 * version:  3.6.2 => master


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1052#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct  2 18:02:34 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 03 Oct 2020 01:02:34 -0000
Subject: [geos-devel] [GEOS] #1012: Thread Sanitizer warns of data race
 in geos::util::Interrupt::cancel()
In-Reply-To: <046.b5405f3a930bd392f9a7c59bf85ebfb2@osgeo.org>
References: <046.b5405f3a930bd392f9a7c59bf85ebfb2@osgeo.org>
Message-ID: <061.8ef0996220701af50c9080fdf2d2d870@osgeo.org>

#1012: Thread Sanitizer warns of data race in geos::util::Interrupt::cancel()
------------------------+---------------------------
 Reporter:  macdrevx    |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by macdrevx):

 * cc: macdrevx (added)
 * version:  3.7.0 => master


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1012#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 03:42:02 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 10:42:02 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.f7ddb1c3da355b390a63605b4c3a5b10@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Martin: I'm trying at first to reduce the test for easier comparison.
 Should I be able to detect the difference by using the SnappingNoderTest
 class ? How would I run a single test in that class, with JTS test runner
 ?

 In GEOS, the inputs in this class result in:
 {{{
      message: `TopologyException: found non-noded intersection between
 LINESTRING (655016 1.79494e+06, 655016 1.79494e+06) and LINESTRING (655016
 1.79494e+06, 655016 1.79494e+06) at 655016.27295748401 1794940.0344945551`
 }}}

 Both with 1.79499E-6 and 1 tolerance

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:16>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 04:12:40 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 11:12:40 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.6f31fec7bdc6d9a2ffed5f851e4c5bf3@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 It does not help that for Java these inputs trigger "constant string too
 long"

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:17>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 04:34:25 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 11:34:25 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.a82c074c7915009b5b0893f3ca9cd119@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 For the record: SnappingNoderTest can be run in JTS as such:
 {{{
 java -cp \
 ./modules/core/target/jts-core-1.18.0-SNAPSHOT.jar:./modules/core/target
 /jts-core-1.18.0-SNAPSHOT-
 tests.jar:/home/strk/.m2/repository/junit/junit/4.12/junit-4.12.jar \
 org.locationtech.jts.noding.snap.SnappingNoderTest
 }}}

 Will still need a way to avoid the long literal

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:18>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 04:55:01 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 11:55:01 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.ca08764a8ad9ad3a302409ea8a456a2c@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Reading the WKT from a file allows me to run the test, but the result of
 the test is a MULTILINESTRING EMPTY, dunno why:
 {{{
       FileInputStream fstream = new FileInputStream("/tmp/x");
       BufferedReader br = new BufferedReader(new
 InputStreamReader(fstream));
       String wkt1 = br.readLine();
       String wkt2 = br.readLine();
       String expected = "POINT EMPTY"; /* known to NOT be what we really
 want */
       double tol = 1.79499E-6;
       System.err.println("Using WKT1: " + wkt1);
       System.err.println("Using WKT2: " + wkt2);
       System.err.println("Using tolerance: " + tol);
       checkRounding(wkt1, wkt2, tol, expected);
 }}}

 Which results in:
 {{{
 FAIL - Expected = POINT EMPTY actual = MULTILINESTRING EMPTY
 F
 Time: 0.095
 There was 1 failure:
 1)
 testOverlappingLinesWithNearVertex(org.locationtech.jts.noding.snap.SnappingNoderTest)junit.framework.AssertionFailedError
         at test.jts.GeometryTestCase.checkEqual(GeometryTestCase.java:61)
         at
 org.locationtech.jts.noding.snap.SnappingNoderTest.checkRounding(SnappingNoderTest.java:53)
         at
 org.locationtech.jts.noding.snap.SnappingNoderTest.testOverlappingLinesWithNearVertex(SnappingNoderTest.java:31)
         at
 java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native
 Method)
         at
 java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
         at
 java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
         at
 org.locationtech.jts.noding.snap.SnappingNoderTest.main(SnappingNoderTest.java:14)

 FAILURES!!!
 Tests run: 1,  Failures: 1,  Errors: 0
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:19>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 07:58:23 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 14:58:23 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.8e8a59e3ccacc9cb2caef1cddd73af0f@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Martin: how about an XML operation doing just SnappingNoder ?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:20>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 09:29:52 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 16:29:52 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.20ac417e15d4dc0941354fd2b8160d84@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 This is what the
 [https://github.com/locationtech/jts/blob/master/doc/JTSOp.md jtsop
 utility] is for.  You can put WKT or WKB in files, and run any function
 that is provided in the TestBuilder (which is many), or else run your own
 (by add a class file containing static methods).

 So if you have the following files:
 {{{
 snapping-test-a.wkt:
 LINESTRING (100 200, 200 100.1, 300 100)

 snapping-test-b.wkt:
 LINESTRING (100 200, 200 100.1, 300 100)
 }}}

 the SnappingNoder can be run using:
 {{{
 <JTS_HOME>/bin/jtsop.sh -a snapping-test-a.wkt -b snapping-test-b.wkt -f
 wkt Noding.snappingNoder 1
 }}}

 (Note that the Noding.snappingNoder function actually allows a null second
 input, but at the moment the jtsop command doesn't recognize this).

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:21>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 09:48:08 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 16:48:08 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.7df2f11cf9450059647b8c3d260a8795@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * Attachment "TestOverlay-geos-1051-simp.xml" added.

 First simplification of testcase (1/10 simplification)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 09:56:38 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 16:56:38 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * Attachment "TestOverlay-geos-1051-simp.xml" removed.

 First simplification of testcase (1/10 simplification)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 09:57:18 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 16:57:18 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.19512979ebe252969b888aec2519e9c0@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * Attachment "TestOverlay-geos-1051-simp.xml" added.

 First simplification of testcase (1/10 simplification)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 10:02:18 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 17:02:18 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.f5e28e325b5cf525073e5d25bbaa018c@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 With TestOverlay-geos-1051-simp.xml​ both GEOS and JTS SnappingNoder end
 up with 636 noded segmentstrings. Hard to tell how they differ between
 one-other as the output is slightly different in terms of significant
 digits.

 To get you an Idea I'll paste the first 10 noded segstrings for each.

 GEOS:
 {{{
 Trying overlaySnapping(tol 1.79499e-06).
 NODED:  LINESTRING(654948.38532997924 1794977.1058540251,
 654995.48203391524 1794988.7717037243)
 NODED:  LINESTRING(654995.48203391524 1794988.7717037243,
 654997.17955858458 1794989.1921804454)
 NODED:  LINESTRING(654997.17955858458 1794989.1921804454,
 655000.36381421797 1794989.9809203045, 655006.34643579996
 1794983.8258888787)
 NODED:  LINESTRING(655006.34643579996 1794983.8258888787,
 655051.77446297742 1794937.088696653, 655102.56059972045
 1794927.5021000544)
 NODED:  LINESTRING(655102.56059972045 1794927.5021000544,
 655108.42102836783 1794926.3958618378, 655110.0720664172
 1794923.1048861023)
 NODED:  LINESTRING(655110.0720664172 1794923.1048861023,
 655110.12012789119 1794923.0090862843)
 NODED:  LINESTRING(655110.12012789119 1794923.0090862843,
 655111.03361745446 1794921.1882487882, 655105.8944992529
 1794809.0953964447, 655103.6628449125 1794805.4566734952)
 NODED:  LINESTRING(655103.6628449125 1794805.4566734952,
 655070.41920929297 1794806.064489258, 655062.62551842164
 1794798.488781017, 655061.46045440866 1794798.8496030809,
 655063.81619753118 1794810.6547597279)
 NODED:  LINESTRING(655063.81619753118 1794810.6547597279,
 655064.15367999999 1794812.3459600001, 655064.1887750614
 1794812.591778927, 655042.95566738653 1794904.1646406003,
 655029.10396397568 1794921.2111610321, 655029.01317000005
 1794921.3055899998, 655028.61825000006 1794921.71276, 655028.22155999998
 1794922.1181999999, 655027.82310000004 1794922.5219099999,
 655027.69848218339 1794922.6470757592, 655027.63206300582
 1794922.7137853792, 655027.62398069503 1794922.721903034)
 NODED:  LINESTRING(655027.62398069503 1794922.721903034,
 655027.62397786777 1794922.7219058727)
 }}}

 JTS:
 {{{
 try overlaySnapping with tolerance 1.7949899809203045E-6
 NODED: LINESTRING (654948.3853299792 1794977.105854025, 654995.4820339152
 1794988.7717037243)
 NODED: LINESTRING (654995.4820339152 1794988.7717037243, 654997.1795585846
 1794989.1921804454)
 NODED: LINESTRING (654997.1795585846 1794989.1921804454, 655000.363814218
 1794989.9809203045, 655006.3464358 1794983.8258888787)
 NODED: LINESTRING (655006.3464358 1794983.8258888787, 655051.7744629774
 1794937.088696653, 655102.5605997205 1794927.5021000544)
 NODED: LINESTRING (655102.5605997205 1794927.5021000544, 655108.4210283678
 1794926.3958618378, 655110.0720664172 1794923.1048861023)
 NODED: LINESTRING (655110.0720664172 1794923.1048861023, 655110.1201278912
 1794923.0090862843)
 NODED: LINESTRING (655110.1201278912 1794923.0090862843, 655111.0336174545
 1794921.1882487882, 655105.8944992529 1794809.0953964447,
 655103.6628449125 1794805.4566734952)
 NODED: LINESTRING (655103.6628449125 1794805.4566734952, 655070.419209293
 1794806.064489258, 655062.6255184216 1794798.488781017, 655061.4604544087
 1794798.849603081, 655063.8161975312 1794810.654759728)
 NODED: LINESTRING (655063.8161975312 1794810.654759728, 655064.15368
 1794812.34596, 655064.1887750614 1794812.591778927, 655042.9556673865
 1794904.1646406003, 655029.1039639757 1794921.211161032, 655029.01317
 1794921.3055899998, 655028.61825 1794921.71276, 655028.22156 1794922.1182,
 655027.8231 1794922.52191, 655027.6984821834 1794922.6470757592,
 655027.6320630058 1794922.7137853792, 655027.623980695 1794922.721903034)
 NODED: LINESTRING (655027.623980695 1794922.721903034, 655027.6239778678
 1794922.7219058727)
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:22>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 10:07:01 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 17:07:01 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.4eb27135a90aa56f40cdd27c2b329948@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Snap tolerance is the same up to 17 significant digits:
 1.7949899809203045E-6 (verified in GEOS)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:23>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 10:58:45 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 17:58:45 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.907f9977bc95db30074cfcb184624d1d@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * Attachment "TestOverlay-geos-1051-simp2.xml" added.

 Further simplified testcase (only 6 vertices each polygon)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 10:59:30 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 17:59:30 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.17b5aa80ec318402b4c3cbea3e8c68d0@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 The second simplified testcase has only 6 vertices in each polygon, which
 should help comparing JTS and GEOS.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:24>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 11:11:59 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 18:11:59 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.c9dc634686c10a903e0d305ac0ebee3c@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Now that I see only 20 noded segments strings I can spot that ONE
 segmentstring has 3 vertices instead of 2 in the GEOS case. I'll write
 them all here:

 GEOS:
 {{{
 NODED: LINESTRING(654948.38532997924 1794977.1058540251,
 655015.54770534404 1794940.3747519043)
 NODED: LINESTRING(655015.54770534404 1794940.3747519043,
 655016.29615051334 1794939.965427252)
 NODED: LINESTRING(655016.29615051334 1794939.965427252, 655016.3812220972
 1794939.9189016039, 655016.20226531825 1794940.1099718122)
 NODED: LINESTRING(655016.20226531825 1794940.1099718122,
 655016.20226000005 1794940.10998)
 NODED: LINESTRING(655016.20226000005 1794940.10998, 655016.20225819293
 1794940.1099794197)
 NODED: LINESTRING(655016.20225819293 1794940.1099794197,
 655016.20126093226 1794940.1110076148)
 NODED: LINESTRING(655016.20126093226 1794940.1110076148,
 655014.92640687118 1794941.4254068714, 655014.83171824354
 1794941.5196832407)
 NODED: LINESTRING(655014.83171824354 1794941.5196832407,
 655014.82956023223 1794941.5218318563)
 NODED: LINESTRING(655014.82956023223 1794941.5218318563,
 655014.74088346737 1794941.6101225375)
 NODED: LINESTRING(655014.74088346737 1794941.6101225375,
 654948.38532997924 1794977.1058540251)
 NODED: LINESTRING(655103.66284549481 1794805.4566744049,
 655016.29615051334 1794939.965427252)
 NODED: LINESTRING(655016.29615051334 1794939.965427252, 655016.20226531825
 1794940.1099718122)
 XXXXX: LINESTRING(655016.20226531825 1794940.1099718122,
 655016.20226000005 1794940.10998, 655016.20225819293 1794940.1099794197)
 NODED: LINESTRING(655016.20225819293 1794940.1099794197,
 655016.20226000005 1794940.10998)
 NODED: LINESTRING(655016.20226000005 1794940.10998,
 655016.20126093226 1794940.1110076148)
 NODED: LINESTRING(655016.20126093226 1794940.1110076148,
 655014.83171824354 1794941.5196832407)
 NODED: LINESTRING(655014.83171824354 1794941.5196832407,
 655014.82956023223 1794941.5218318563)
 NODED: LINESTRING(655014.82956023223 1794941.5218318563,
 655014.74088346737 1794941.6101225375)
 NODED: LINESTRING(655014.74088346737 1794941.6101225375,
 655015.54770534404 1794940.3747519043)
 NODED: LINESTRING(655015.54770534404 1794940.3747519043,
 655103.66284549481 1794805.4566744049)
 }}}

 JTS:
 {{{
 NODED: LINESTRING(654948.3853299792  1794977.105854025,  655015.547705344
 1794940.3747519043)
 NODED: LINESTRING(655015.547705344   1794940.3747519043, 655016.2961505133
 1794939.965427252)
 NODED: LINESTRING(655016.2961505133  1794939.965427252, 655016.3812220972
 1794939.918901604,  655016.2022653183  1794940.1099718122)
 NODED: LINESTRING(655016.2022653183  1794940.1099718122, 655016.20226
 1794940.10998)
 NODED: LINESTRING(655016.20226       1794940.10998, 655016.2022581929
 1794940.1099794197)
 NODED: LINESTRING(655016.2022581929  1794940.1099794197, 655016.2012609323
 1794940.1110076148)
 NODED: LINESTRING(655016.2012609323  1794940.1110076148, 655014.9264068712
 1794941.4254068714, 655014.8317182435 1794941.5196832407)
 NODED: LINESTRING(655014.8317182435  1794941.5196832407, 655014.8295602322
 1794941.5218318563)
 NODED: LINESTRING(655014.8295602322  1794941.5218318563, 655014.7408834674
 1794941.6101225375)
 NODED: LINESTRING(655014.7408834674  1794941.6101225375, 654948.3853299792
 1794977.105854025)
 NODED: LINESTRING(655103.6628454948  1794805.456674405,  655016.2961505133
 1794939.965427252)
 NODED: LINESTRING(655016.2961505133  1794939.965427252, 655016.2022653183
 1794940.1099718122)
 NODED: LINESTRING(655016.2022653183  1794940.1099718122, 655016.20226
 1794940.10998)
 NODED: LINESTRING(655016.20226       1794940.10998,      655016.2022581929
 1794940.1099794197)
 NODED: LINESTRING(655016.2022581929  1794940.1099794197, 655016.2012609323
 1794940.1110076148)
 NODED: LINESTRING(655016.2012609323  1794940.1110076148, 655014.8317182435
 1794941.5196832407)
 NODED: LINESTRING(655014.8317182435  1794941.5196832407, 655014.8295602322
 1794941.5218318563)
 NODED: LINESTRING(655014.8295602322  1794941.5218318563, 655014.7408834674
 1794941.6101225375)
 NODED: LINESTRING(655014.7408834674  1794941.6101225375, 655015.547705344
 1794940.3747519043)
 NODED: LINESTRING(655015.547705344   1794940.3747519043, 655103.6628454948
 1794805.456674405)
 }}}

 See the one marked with XXXXX in the GEOS output

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:25>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From lr at pcorp.us  Mon Oct  5 12:25:27 2020
From: lr at pcorp.us (Regina Obe)
Date: Mon, 5 Oct 2020 15:25:27 -0400
Subject: [geos-devel] FW: When did ST_BuildArea change
Message-ID: <005401d69b4d$493622c0$dba26840$@pcorp.us>

Opps wrong address sent for Geos.

 


Sent: Monday, October 5, 2020 3:21 PM
To: 'PostGIS Development Discussion' <postgis-devel at lists.osgeo.org>
Cc: 'geos-devel-bounces at lists.osgeo.org'
<geos-devel-bounces at lists.osgeo.org>
Subject: When did ST_BuildArea change

 

I noticed this before but came across it again.

 

http://postgis.net/docs/manual-dev/ST_BuildArea.html

 

At the time I created this page which I am guessing was like circa 2008

 

This query created a gaping hole.  Now it doesn't so the docs are wrong

 

SELECT ST_BuildArea(ST_Collect(line,circle))

FROM (SELECT

    ST_Buffer(

        ST_MakeLine(ST_MakePoint(10, 10),ST_MakePoint(190, 190)),

                5)  As line,

    ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50) As circle) As foo;

 

--this creates the same gaping hole

--but using linestrings instead of polygons

SELECT ST_BuildArea(

    ST_Collect(ST_ExteriorRing(line),ST_ExteriorRing(circle))

    )

FROM (SELECT ST_Buffer(

    ST_MakeLine(ST_MakePoint(10, 10),ST_MakePoint(190, 190))

        ,5)  As line,

    ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50) As circle) As foo;

 

Docs say this:

 



 

But when I run in pgAdmin4 I get this:

 

 



 

Does anyone know when this behavior changed and why?  I'm assuming it is a
GEOS change, so cc'ing GEOS dev as well.

 

More depressing is my signature symmetric podded Bee Hive on this page
(circa 2010(

 

http://postgis.net/docs/manual-dev/ST_LongestLine.html

 

Which looked like this (minus the longest line of course) - beautiful isn't
it?

 

 



 

Now looks like a shadow of its former self

 



 

 

 

 

Thanks,

Regina

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201005/711aace7/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3432 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201005/711aace7/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 6270 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201005/711aace7/attachment-0005.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 18342 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201005/711aace7/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 7629 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201005/711aace7/attachment-0007.png>

From geos-trac at osgeo.org  Mon Oct  5 13:52:26 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 20:52:26 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed intentional?
 and when did it happen
Message-ID: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+--------------------------
 Reporter:  robe        |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 strk suggested I put the ticket
 https://trac.osgeo.org/postgis/ticket/4763

 Here as PostGIS uses GEOS directly for ST_BuildArea.

 The issue is:


 {{{
 SELECT ST_BuildArea('MULTIPOLYGON(((186.464466094067
 193.535533905933,187.222148834902 194.157348061513,188.086582838175
 194.619397662556,189.024548389919 194.903926402016,190
 195,190.975451610081 194.903926402016,191.913417161825
 194.619397662556,192.777851165098 194.157348061513,193.535533905933
 193.535533905933,194.157348061513 192.777851165098,194.619397662556
 191.913417161825,194.903926402016 190.975451610081,195
 190,194.903926402016 189.024548389919,194.619397662556
 188.086582838175,194.157348061513 187.222148834902,193.535533905933
 186.464466094067,13.5355339059327 6.46446609406726,12.777851165098
 5.84265193848727,11.9134171618254 5.38060233744356,10.9754516100806
 5.09607359798385,10 5,9.02454838991936 5.09607359798385,8.08658283817455
 5.38060233744357,7.22214883490199 5.84265193848727,6.46446609406726
 6.46446609406726,5.84265193848728 7.22214883490199,5.38060233744357
 8.08658283817455,5.09607359798385 9.02454838991935,5
 9.99999999999999,5.09607359798385 10.9754516100806,5.38060233744356
 11.9134171618254,5.84265193848727 12.777851165098,6.46446609406726
 13.5355339059327,186.464466094067 193.535533905933)),((150
 90,149.039264020162 80.2454838991936,146.193976625564
 70.8658283817455,141.573480615127 62.2214883490199,135.355339059327
 54.6446609406727,127.77851165098 48.4265193848728,119.134171618255
 43.8060233744357,109.754516100806 40.9607359798385,100 40,90.2454838991937
 40.9607359798385,80.8658283817456 43.8060233744356,72.22148834902
 48.4265193848727,64.6446609406727 54.6446609406725,58.4265193848728
 62.2214883490198,53.8060233744357 70.8658283817454,50.9607359798385
 80.2454838991934,50 89.9999999999998,50.9607359798384
 99.7545161008062,53.8060233744356 109.134171618254,58.4265193848726
 117.77851165098,64.6446609406725 125.355339059327,72.2214883490197
 131.573480615127,80.8658283817453 136.193976625564,90.2454838991934
 139.039264020161,99.9999999999998 140,109.754516100806
 139.039264020162,119.134171618254 136.193976625564,127.77851165098
 131.573480615127,135.355339059327 125.355339059327,141.573480615127
 117.77851165098,146.193976625564 109.134171618255,149.039264020162
 99.7545161008065,150 90)))'::geometry);
 }}}

 Used to look like:


 [[Image(before_gaping_hole.png)]]

 But now looks like

 [[Image(after_gaping_hole_no_more.png)]]

 --


 {{{
 SELECT ST_BuildArea('MULTIPOLYGON(((91 50,79 22,51 10,23 22,11 50,23 78,51
 90,79 78,91 50)),((91 100,79 72,51 60,23 72,11 100,23 128,51 140,79 128,91
 100)),((91 150,79 122,51 110,23 122,11 150,23 178,51 190,79 178,91
 150)),((141 50,129 22,101 10,73 22,61 50,73 78,101 90,129 78,141
 50)),((141 100,129 72,101 60,73 72,61 100,73 128,101 140,129 128,141
 100)),((141 150,129 122,101 110,73 122,61 150,73 178,101 190,129 178,141
 150)))'::geometry);
 }}}


 Used to Look like:

 [[Image[before_beautiful_beehive.png]]

 After

 [[Image[after_boring_beehive.png]]

 I think this has been (broken for me) and it's unclear if this was an
 intentional change or not. I personally prefer the old behavior, but as I
 review more I can understand how someone may have decided the new behavior
 was more predictable and thus better.


 So it's been like this I would say probably since 3.6 (maybe even as early
 as 3.5). One pattern I see with the failures is they are all invalid
 polygons. So perhaps it's doing an UnaryUnion or something before feeding
 to ST_BuildArea.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 13:52:39 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 20:52:39 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.3577bfc28c6bd4cb0ecfc9feaa241d4e@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * Attachment "before_gaping_hole.png" added.


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 13:52:49 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 20:52:49 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.ece43404d57d1a78b081a1e9c32ed91e@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * Attachment "after_gaping_hole_no_more.png" added.


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 13:53:00 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 20:53:00 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.c8eea70ed38abfb5ebc396563286a1ba@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * Attachment "before_beautiful_beehive.png" added.


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 13:53:14 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 20:53:14 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.5882c45f9d309f8c1967256d943ff628@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * Attachment "after_boring_beehive.png" added.


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 13:54:29 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 20:54:29 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.ddcf0787a9047c3e66718f6aa209affa@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Description changed by robe:

Old description:

> strk suggested I put the ticket
> https://trac.osgeo.org/postgis/ticket/4763
>
> Here as PostGIS uses GEOS directly for ST_BuildArea.
>
> The issue is:
>

> {{{
> SELECT ST_BuildArea('MULTIPOLYGON(((186.464466094067
> 193.535533905933,187.222148834902 194.157348061513,188.086582838175
> 194.619397662556,189.024548389919 194.903926402016,190
> 195,190.975451610081 194.903926402016,191.913417161825
> 194.619397662556,192.777851165098 194.157348061513,193.535533905933
> 193.535533905933,194.157348061513 192.777851165098,194.619397662556
> 191.913417161825,194.903926402016 190.975451610081,195
> 190,194.903926402016 189.024548389919,194.619397662556
> 188.086582838175,194.157348061513 187.222148834902,193.535533905933
> 186.464466094067,13.5355339059327 6.46446609406726,12.777851165098
> 5.84265193848727,11.9134171618254 5.38060233744356,10.9754516100806
> 5.09607359798385,10 5,9.02454838991936 5.09607359798385,8.08658283817455
> 5.38060233744357,7.22214883490199 5.84265193848727,6.46446609406726
> 6.46446609406726,5.84265193848728 7.22214883490199,5.38060233744357
> 8.08658283817455,5.09607359798385 9.02454838991935,5
> 9.99999999999999,5.09607359798385 10.9754516100806,5.38060233744356
> 11.9134171618254,5.84265193848727 12.777851165098,6.46446609406726
> 13.5355339059327,186.464466094067 193.535533905933)),((150
> 90,149.039264020162 80.2454838991936,146.193976625564
> 70.8658283817455,141.573480615127 62.2214883490199,135.355339059327
> 54.6446609406727,127.77851165098 48.4265193848728,119.134171618255
> 43.8060233744357,109.754516100806 40.9607359798385,100
> 40,90.2454838991937 40.9607359798385,80.8658283817456
> 43.8060233744356,72.22148834902 48.4265193848727,64.6446609406727
> 54.6446609406725,58.4265193848728 62.2214883490198,53.8060233744357
> 70.8658283817454,50.9607359798385 80.2454838991934,50
> 89.9999999999998,50.9607359798384 99.7545161008062,53.8060233744356
> 109.134171618254,58.4265193848726 117.77851165098,64.6446609406725
> 125.355339059327,72.2214883490197 131.573480615127,80.8658283817453
> 136.193976625564,90.2454838991934 139.039264020161,99.9999999999998
> 140,109.754516100806 139.039264020162,119.134171618254
> 136.193976625564,127.77851165098 131.573480615127,135.355339059327
> 125.355339059327,141.573480615127 117.77851165098,146.193976625564
> 109.134171618255,149.039264020162 99.7545161008065,150 90)))'::geometry);
> }}}
>
> Used to look like:
>

> [[Image(before_gaping_hole.png)]]
>
> But now looks like
>
> [[Image(after_gaping_hole_no_more.png)]]
>
> --
>

> {{{
> SELECT ST_BuildArea('MULTIPOLYGON(((91 50,79 22,51 10,23 22,11 50,23
> 78,51 90,79 78,91 50)),((91 100,79 72,51 60,23 72,11 100,23 128,51 140,79
> 128,91 100)),((91 150,79 122,51 110,23 122,11 150,23 178,51 190,79 178,91
> 150)),((141 50,129 22,101 10,73 22,61 50,73 78,101 90,129 78,141
> 50)),((141 100,129 72,101 60,73 72,61 100,73 128,101 140,129 128,141
> 100)),((141 150,129 122,101 110,73 122,61 150,73 178,101 190,129 178,141
> 150)))'::geometry);
> }}}
>

> Used to Look like:
>
> [[Image[before_beautiful_beehive.png]]
>
> After
>
> [[Image[after_boring_beehive.png]]
>
> I think this has been (broken for me) and it's unclear if this was an
> intentional change or not. I personally prefer the old behavior, but as I
> review more I can understand how someone may have decided the new
> behavior was more predictable and thus better.
>

> So it's been like this I would say probably since 3.6 (maybe even as
> early as 3.5). One pattern I see with the failures is they are all
> invalid polygons. So perhaps it's doing an UnaryUnion or something before
> feeding to ST_BuildArea.

New description:

 strk suggested I put the ticket
 https://trac.osgeo.org/postgis/ticket/4763

 Here as PostGIS uses GEOS directly for ST_BuildArea.

 The issue is:


 {{{
 SELECT ST_BuildArea('MULTIPOLYGON(((186.464466094067
 193.535533905933,187.222148834902 194.157348061513,188.086582838175
 194.619397662556,189.024548389919 194.903926402016,190
 195,190.975451610081 194.903926402016,191.913417161825
 194.619397662556,192.777851165098 194.157348061513,193.535533905933
 193.535533905933,194.157348061513 192.777851165098,194.619397662556
 191.913417161825,194.903926402016 190.975451610081,195
 190,194.903926402016 189.024548389919,194.619397662556
 188.086582838175,194.157348061513 187.222148834902,193.535533905933
 186.464466094067,13.5355339059327 6.46446609406726,12.777851165098
 5.84265193848727,11.9134171618254 5.38060233744356,10.9754516100806
 5.09607359798385,10 5,9.02454838991936 5.09607359798385,8.08658283817455
 5.38060233744357,7.22214883490199 5.84265193848727,6.46446609406726
 6.46446609406726,5.84265193848728 7.22214883490199,5.38060233744357
 8.08658283817455,5.09607359798385 9.02454838991935,5
 9.99999999999999,5.09607359798385 10.9754516100806,5.38060233744356
 11.9134171618254,5.84265193848727 12.777851165098,6.46446609406726
 13.5355339059327,186.464466094067 193.535533905933)),((150
 90,149.039264020162 80.2454838991936,146.193976625564
 70.8658283817455,141.573480615127 62.2214883490199,135.355339059327
 54.6446609406727,127.77851165098 48.4265193848728,119.134171618255
 43.8060233744357,109.754516100806 40.9607359798385,100 40,90.2454838991937
 40.9607359798385,80.8658283817456 43.8060233744356,72.22148834902
 48.4265193848727,64.6446609406727 54.6446609406725,58.4265193848728
 62.2214883490198,53.8060233744357 70.8658283817454,50.9607359798385
 80.2454838991934,50 89.9999999999998,50.9607359798384
 99.7545161008062,53.8060233744356 109.134171618254,58.4265193848726
 117.77851165098,64.6446609406725 125.355339059327,72.2214883490197
 131.573480615127,80.8658283817453 136.193976625564,90.2454838991934
 139.039264020161,99.9999999999998 140,109.754516100806
 139.039264020162,119.134171618254 136.193976625564,127.77851165098
 131.573480615127,135.355339059327 125.355339059327,141.573480615127
 117.77851165098,146.193976625564 109.134171618255,149.039264020162
 99.7545161008065,150 90)))'::geometry);
 }}}

 Used to look like:


 [[Image(before_gaping_hole.png)]]

 But now looks like

 [[Image(after_gaping_hole_no_more.png)]]

 --


 {{{
 SELECT ST_BuildArea('MULTIPOLYGON(((91 50,79 22,51 10,23 22,11 50,23 78,51
 90,79 78,91 50)),((91 100,79 72,51 60,23 72,11 100,23 128,51 140,79 128,91
 100)),((91 150,79 122,51 110,23 122,11 150,23 178,51 190,79 178,91
 150)),((141 50,129 22,101 10,73 22,61 50,73 78,101 90,129 78,141
 50)),((141 100,129 72,101 60,73 72,61 100,73 128,101 140,129 128,141
 100)),((141 150,129 122,101 110,73 122,61 150,73 178,101 190,129 178,141
 150)))'::geometry);
 }}}


 Used to Look like:

 [[Image(before_beautiful_beehive.png)]

 After

 [[Image(after_boring_beehive.png)]

 I think this has been (broken for me) and it's unclear if this was an
 intentional change or not. I personally prefer the old behavior, but as I
 review more I can understand how someone may have decided the new behavior
 was more predictable and thus better.


 So it's been like this I would say probably since 3.6 (maybe even as early
 as 3.5). One pattern I see with the failures is they are all invalid
 polygons. So perhaps it's doing an UnaryUnion or something before feeding
 to ST_BuildArea.

--

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 13:55:16 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 20:55:16 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.c5b4ef6cba21b237a7022d015667e330@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Description changed by robe:

Old description:

> strk suggested I put the ticket
> https://trac.osgeo.org/postgis/ticket/4763
>
> Here as PostGIS uses GEOS directly for ST_BuildArea.
>
> The issue is:
>

> {{{
> SELECT ST_BuildArea('MULTIPOLYGON(((186.464466094067
> 193.535533905933,187.222148834902 194.157348061513,188.086582838175
> 194.619397662556,189.024548389919 194.903926402016,190
> 195,190.975451610081 194.903926402016,191.913417161825
> 194.619397662556,192.777851165098 194.157348061513,193.535533905933
> 193.535533905933,194.157348061513 192.777851165098,194.619397662556
> 191.913417161825,194.903926402016 190.975451610081,195
> 190,194.903926402016 189.024548389919,194.619397662556
> 188.086582838175,194.157348061513 187.222148834902,193.535533905933
> 186.464466094067,13.5355339059327 6.46446609406726,12.777851165098
> 5.84265193848727,11.9134171618254 5.38060233744356,10.9754516100806
> 5.09607359798385,10 5,9.02454838991936 5.09607359798385,8.08658283817455
> 5.38060233744357,7.22214883490199 5.84265193848727,6.46446609406726
> 6.46446609406726,5.84265193848728 7.22214883490199,5.38060233744357
> 8.08658283817455,5.09607359798385 9.02454838991935,5
> 9.99999999999999,5.09607359798385 10.9754516100806,5.38060233744356
> 11.9134171618254,5.84265193848727 12.777851165098,6.46446609406726
> 13.5355339059327,186.464466094067 193.535533905933)),((150
> 90,149.039264020162 80.2454838991936,146.193976625564
> 70.8658283817455,141.573480615127 62.2214883490199,135.355339059327
> 54.6446609406727,127.77851165098 48.4265193848728,119.134171618255
> 43.8060233744357,109.754516100806 40.9607359798385,100
> 40,90.2454838991937 40.9607359798385,80.8658283817456
> 43.8060233744356,72.22148834902 48.4265193848727,64.6446609406727
> 54.6446609406725,58.4265193848728 62.2214883490198,53.8060233744357
> 70.8658283817454,50.9607359798385 80.2454838991934,50
> 89.9999999999998,50.9607359798384 99.7545161008062,53.8060233744356
> 109.134171618254,58.4265193848726 117.77851165098,64.6446609406725
> 125.355339059327,72.2214883490197 131.573480615127,80.8658283817453
> 136.193976625564,90.2454838991934 139.039264020161,99.9999999999998
> 140,109.754516100806 139.039264020162,119.134171618254
> 136.193976625564,127.77851165098 131.573480615127,135.355339059327
> 125.355339059327,141.573480615127 117.77851165098,146.193976625564
> 109.134171618255,149.039264020162 99.7545161008065,150 90)))'::geometry);
> }}}
>
> Used to look like:
>

> [[Image(before_gaping_hole.png)]]
>
> But now looks like
>
> [[Image(after_gaping_hole_no_more.png)]]
>
> --
>

> {{{
> SELECT ST_BuildArea('MULTIPOLYGON(((91 50,79 22,51 10,23 22,11 50,23
> 78,51 90,79 78,91 50)),((91 100,79 72,51 60,23 72,11 100,23 128,51 140,79
> 128,91 100)),((91 150,79 122,51 110,23 122,11 150,23 178,51 190,79 178,91
> 150)),((141 50,129 22,101 10,73 22,61 50,73 78,101 90,129 78,141
> 50)),((141 100,129 72,101 60,73 72,61 100,73 128,101 140,129 128,141
> 100)),((141 150,129 122,101 110,73 122,61 150,73 178,101 190,129 178,141
> 150)))'::geometry);
> }}}
>

> Used to Look like:
>
> [[Image(before_beautiful_beehive.png)]
>
> After
>
> [[Image(after_boring_beehive.png)]
>
> I think this has been (broken for me) and it's unclear if this was an
> intentional change or not. I personally prefer the old behavior, but as I
> review more I can understand how someone may have decided the new
> behavior was more predictable and thus better.
>

> So it's been like this I would say probably since 3.6 (maybe even as
> early as 3.5). One pattern I see with the failures is they are all
> invalid polygons. So perhaps it's doing an UnaryUnion or something before
> feeding to ST_BuildArea.

New description:

 strk suggested I put the ticket
 https://trac.osgeo.org/postgis/ticket/4763

 Here as PostGIS uses GEOS directly for ST_BuildArea.

 The issue is:


 {{{
 SELECT ST_BuildArea('MULTIPOLYGON(((186.464466094067
 193.535533905933,187.222148834902 194.157348061513,188.086582838175
 194.619397662556,189.024548389919 194.903926402016,190
 195,190.975451610081 194.903926402016,191.913417161825
 194.619397662556,192.777851165098 194.157348061513,193.535533905933
 193.535533905933,194.157348061513 192.777851165098,194.619397662556
 191.913417161825,194.903926402016 190.975451610081,195
 190,194.903926402016 189.024548389919,194.619397662556
 188.086582838175,194.157348061513 187.222148834902,193.535533905933
 186.464466094067,13.5355339059327 6.46446609406726,12.777851165098
 5.84265193848727,11.9134171618254 5.38060233744356,10.9754516100806
 5.09607359798385,10 5,9.02454838991936 5.09607359798385,8.08658283817455
 5.38060233744357,7.22214883490199 5.84265193848727,6.46446609406726
 6.46446609406726,5.84265193848728 7.22214883490199,5.38060233744357
 8.08658283817455,5.09607359798385 9.02454838991935,5
 9.99999999999999,5.09607359798385 10.9754516100806,5.38060233744356
 11.9134171618254,5.84265193848727 12.777851165098,6.46446609406726
 13.5355339059327,186.464466094067 193.535533905933)),((150
 90,149.039264020162 80.2454838991936,146.193976625564
 70.8658283817455,141.573480615127 62.2214883490199,135.355339059327
 54.6446609406727,127.77851165098 48.4265193848728,119.134171618255
 43.8060233744357,109.754516100806 40.9607359798385,100 40,90.2454838991937
 40.9607359798385,80.8658283817456 43.8060233744356,72.22148834902
 48.4265193848727,64.6446609406727 54.6446609406725,58.4265193848728
 62.2214883490198,53.8060233744357 70.8658283817454,50.9607359798385
 80.2454838991934,50 89.9999999999998,50.9607359798384
 99.7545161008062,53.8060233744356 109.134171618254,58.4265193848726
 117.77851165098,64.6446609406725 125.355339059327,72.2214883490197
 131.573480615127,80.8658283817453 136.193976625564,90.2454838991934
 139.039264020161,99.9999999999998 140,109.754516100806
 139.039264020162,119.134171618254 136.193976625564,127.77851165098
 131.573480615127,135.355339059327 125.355339059327,141.573480615127
 117.77851165098,146.193976625564 109.134171618255,149.039264020162
 99.7545161008065,150 90)))'::geometry);
 }}}

 Used to look like:


 [[Image(before_gaping_hole.png)]]

 But now looks like

 [[Image(after_gaping_hole_no_more.png)]]

 --


 {{{
 SELECT ST_BuildArea('MULTIPOLYGON(((91 50,79 22,51 10,23 22,11 50,23 78,51
 90,79 78,91 50)),((91 100,79 72,51 60,23 72,11 100,23 128,51 140,79 128,91
 100)),((91 150,79 122,51 110,23 122,11 150,23 178,51 190,79 178,91
 150)),((141 50,129 22,101 10,73 22,61 50,73 78,101 90,129 78,141
 50)),((141 100,129 72,101 60,73 72,61 100,73 128,101 140,129 128,141
 100)),((141 150,129 122,101 110,73 122,61 150,73 178,101 190,129 178,141
 150)))'::geometry);
 }}}


 Used to Look like:

 [[Image(before_beautiful_beehive.png)]]

 After

 [[Image(after_boring_beehive.png)]]

 I think this has been (broken for me) and it's unclear if this was an
 intentional change or not. I personally prefer the old behavior, but as I
 review more I can understand how someone may have decided the new behavior
 was more predictable and thus better.


 So it's been like this I would say probably since 3.6 (maybe even as early
 as 3.5). One pattern I see with the failures is they are all invalid
 polygons. So perhaps it's doing an UnaryUnion or something before feeding
 to ST_BuildArea.

--

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  5 14:20:24 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 05 Oct 2020 21:20:24 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.a3c068a55804d7127274f7146b99b106@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 BuildArea needs input to be noded. Not sure how it could have worked when
 you first wrote the documentation (would be nice to know).

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Oct  6 16:18:20 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 06 Oct 2020 23:18:20 -0000
Subject: [geos-devel] [GEOS] #1054: BuildArea behavior changed
 intentional? and when did it happen
In-Reply-To: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
References: <042.9f5354e6ab1b15bf38ca92d10c85a321@osgeo.org>
Message-ID: <057.987e17d227fc34696b40ad730b869ae0@osgeo.org>

#1054: BuildArea behavior changed intentional? and when did it happen
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:  wontfix
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 okay guess by design then -- I've moved examples in PostGIS to
 ST_MakeValid.
 as noted in https://trac.osgeo.org/postgis/ticket/4763

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1054#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 12:35:16 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 07 Oct 2020 19:35:16 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.a0394fa36c4eb404cc0db38f79c1784a@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 The problem turns out to be that GEOS is not sorting the `SegmentNode`s in
 a `SegmentNodeList` quite correctly.  This is shown by dumping the segment
 nodes for the B geometry:

 GEOS:
 {{{
 0: Seg 0 - 655103.66284549481 1794805.4566744049 (Segment Start vertex)
 1: Seg 0 - 655016.29615051334 1794939.965427252
 2: Seg 0 - 655016.20226531825 1794940.1099718122
 3: Seg 1 - 655016.20225819293 1794940.1099794197 <-- *** incorrectly
 sorted ***
 4: Seg 1 - 655016.20226000005 1794940.10998 (Segment Start vertex)
 }}}

 JTS:
 {{{
 0: Seg 0 - 655103.66284549481 1794805.4566744049 (Segment Start vertex)
 1: Seg 0 - 655016.29615051334 1794939.965427252
 2: Seg 0 - 655016.20226531825 1794940.1099718122
 3: Seg 1 - 655016.20226 1794940.10998 (Segment Start vertex)
 4: Seg 1 - 655016.20225819293 1794940.1099794197
 }}}

 Note that the order of the last two nodes is different, AND that in GEOS
 in segment 1 the segment start point is incorrectly sorted ''after'' the
 next node in the segment.

 The reason for this is because the `SegmentNodeComparator` algorithm is
 slightly non-commutative as it stands in GEOS. This is due to the
 assumption that the nodes being compared are very close to the segment
 they are assigned to, so that their relative octant is the same as or
 adjacent to the segment octant.  This assumption doesn't hold in some
 situations when using a snapping tolerance. I.e. a node near a segment
 endpoint may actually lie far enough from the segment that it does not lie
 in the same or an adjacent octant).

 JTS fixed this last year in [https://github.com/locationtech/jts/pull/399
 PR 399], with
 [https://github.com/locationtech/jts/blob/master/modules/core/src/main/java/org/locationtech/jts/noding/SegmentNode.java#L75-L76
 this code].  I verified that this fix solves this test case.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:26>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 12:37:05 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 07 Oct 2020 19:37:05 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.72db567b1de5e6c5a6ee9519f11eca6b@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 Well spotted, Sandro!  This is a sneaky little bug for sure.

 Now, the question is whether to change the EdgeMerger error back to an
 assertion, rather than a `TopologyException`.  My vote is to revert this
 change, since otherwise it may  mask any further issues with the noding
 code.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:27>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 12:37:48 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 07 Oct 2020 19:37:48 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.9ce53fe06ddf060ea0939556270841c9@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by mdavis):

 * status:  closed => reopened
 * resolution:  fixed =>


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:28>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 12:47:51 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 07 Oct 2020 19:47:51 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.278cd3ddabcd82818e58997dcbf1e339@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Great hunter! Reverting to Assert sounds dangerous from a production
 point of view (nobody wants their database cluster brougth down by a
 bug). But we should have an AssertionFailedException handy, to avoid
 TopologyException catching

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:29>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 12:50:28 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 07 Oct 2020 19:50:28 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.bc93737f170f60d388d5d593d8fa9473@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 Replying to [comment:29 strk]:
 > Great hunter! Reverting to Assert sounds dangerous from a production
 > point of view (nobody wants their database cluster brougth down by a
 > bug). But we should have an AssertionFailedException handy, to avoid
 > TopologyException catching

 Very good point.  Is there an `AssertionFailedException` in GEOS?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:30>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 13:06:45 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 07 Oct 2020 20:06:45 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.5a10d7d5a89f72a9da6bcd01e9734ffe@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by Sandro Santilli <strk@…>):

 In [changeset:"e2157728ed6c5a41155b8f9d69d79ab758d63ed4/git" e215772/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="e2157728ed6c5a41155b8f9d69d79ab758d63ed4"
 Port JTS fix for very close nodes on same segment.

 References #1051 fixing its root cause.

 This commit partially reverts abb96620c275 to avoid hiding
 eventual other missing ports from JTS.
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:31>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 13:08:14 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 07 Oct 2020 20:08:14 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.e70532ff77720c342ba07b979ba536e7@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Yes, and we now use that exception. I'm leaving this ticket open waiting
 for your new fix test to land in JTS and port here (or please close the
 ticket if you don't think you'll create such test)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:32>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  7 17:11:00 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 08 Oct 2020 00:11:00 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.e39aa07a4434f23657dfb49f6151ba7f@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 Some new JTS tests testing SegmentNode ordering using this data are in
 [https://github.com/locationtech/jts/pull/610 JTS PR 610].

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:33>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 10 11:48:38 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 10 Oct 2020 18:48:38 -0000
Subject: [geos-devel] [GEOS] #1012: Thread Sanitizer warns of data race
 in geos::util::Interrupt::cancel()
In-Reply-To: <046.b5405f3a930bd392f9a7c59bf85ebfb2@osgeo.org>
References: <046.b5405f3a930bd392f9a7c59bf85ebfb2@osgeo.org>
Message-ID: <061.84076781724b3b11cf3474731ea183dd@osgeo.org>

#1012: Thread Sanitizer warns of data race in geos::util::Interrupt::cancel()
------------------------+---------------------------
 Reporter:  macdrevx    |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by macdrevx):

 I've spent some time considering what would be gained by making
 `requested` atomic. While it would avoid the data race on that particular
 memory, it would not result in a thread-safe system overall.

 Consider this example: there are long-running operations on 2 threads. A
 3rd thread requests an interrupt. The result could be either:

 A. 1 thread is interrupted (passes the check at Interrupt.cpp:66 and
 executes line 67 to lock out the other thread), or
 B. Both threads are interrupted. (Both threads pass the check at
 Interrupt.cpp:66 before either one executes line 67).

 Which scenario occurs (and within scenario A, which thread is interrupted)
 depends on the timing.

 A better solution would provide an interface that allows the consumer to
 be specific about their intent. My current thought is that for the thread
 safe CAPI we could design a new interface that would allow requesting an
 interrupt only on a specific context. Ideally, any such interface would
 avoid requiring the CAPI consumer to implement synchronization mechanisms
 around the context. Optionally, we could maintain the existing
 `GEOS_interruptRequest` interface to allow requesting interruption on
 '''all''' contexts.

 I have some implementation ideas, but I'll wait to share them until after
 getting some feedback about whether this general direction is desirable.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1012#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct 12 07:19:13 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 12 Oct 2020 14:19:13 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.dd888d03b2df86cc1ae2ec11019e1d95@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by Sandro Santilli <strk@…>):

 In [changeset:"8d203e348716efed8da34c18b40309259a90024e/git" 8d203e3/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="8d203e348716efed8da34c18b40309259a90024e"
 Add test for https://trac.osgeo.org/geos/ticket/1051

 References #1051
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:34>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct 12 07:27:50 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 12 Oct 2020 14:27:50 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.a1e4feeaae6818dad59bab0260aa929c@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by Sandro Santilli <strk@…>):

 In [changeset:"3507276eee3ae0623d9aeb4cb91254844834109c/git" 3507276/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="3507276eee3ae0623d9aeb4cb91254844834109c"
 Another test for 1051, at another level

 References #1051
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:35>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct 12 07:28:44 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 12 Oct 2020 14:28:44 -0000
Subject: [geos-devel] [GEOS] #1051: overlayng::EdgeMerger::merge():
 Assertion `baseEdge->size() == edge->size()' failed.
In-Reply-To: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
References: <042.342c1954f77a6c6b1dbb6e63979c24eb@osgeo.org>
Message-ID: <057.00030cb18062daacfb8d1ae33090b25a@osgeo.org>

#1051: overlayng::EdgeMerger::merge(): Assertion `baseEdge->size() ==
edge->size()' failed.
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * status:  reopened => closed
 * resolution:   => fixed


Comment:

 All tests ported, thanks !

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1051#comment:36>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From Roger.Bivand at nhh.no  Tue Oct 13 11:08:14 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 13 Oct 2020 20:08:14 +0200
Subject: [geos-devel] Checking GEOS master (state 8 October)
Message-ID: <alpine.LFD.2.23.451.2010131957290.1206887@reclus.nhh.no>

I've been checking the possible fallout from Overlay_NG (assuming that 
building from master on 8 October uses the new code) in some R packages, 
in particular sf and rgeos. I see messages such as:

CBR: result (after common-bits addition) is INVALID: Self-intersection at 
or near point 368576.69999999995 864696 (368576.69999999995343 864696)

followed by the text representation of the object dumped to console. The 
message and the dumped object are not passed through error or warning 
handlers passed in through initGEOS_r(), and so are hard to trap and 
handle. Is this a temporary feature which will be normalised for 3.9.0?

So far I don't think that there are obvious failures in R packages related 
to the new code (again assuming that a straight build of master of 8 
November exercises Overlay_NG), but the unexpected output was surprising.

Best wishes,

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Tue Oct 13 11:17:32 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 13 Oct 2020 11:17:32 -0700
Subject: [geos-devel] Checking GEOS master (state 8 October)
In-Reply-To: <alpine.LFD.2.23.451.2010131957290.1206887@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010131957290.1206887@reclus.nhh.no>
Message-ID: <CD36413A-1574-43EC-8268-DCA0F28EA6B1@cleverelephant.ca>



> On Oct 13, 2020, at 11:08 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> I've been checking the possible fallout from Overlay_NG (assuming that building from master on 8 October uses the new code) in some R packages, in particular sf and rgeos. I see messages such as:
> 
> CBR: result (after common-bits addition) is INVALID: Self-intersection at or near point 368576.69999999995 864696 (368576.69999999995343 864696)

That looks like the old overlay handler. Have you turned NG on in your build?

P


> 
> followed by the text representation of the object dumped to console. The message and the dumped object are not passed through error or warning handlers passed in through initGEOS_r(), and so are hard to trap and handle. Is this a temporary feature which will be normalised for 3.9.0?
> 
> So far I don't think that there are obvious failures in R packages related to the new code (again assuming that a straight build of master of 8 November exercises Overlay_NG), but the unexpected output was surprising.
> 
> Best wishes,
> 
> Roger
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From Roger.Bivand at nhh.no  Tue Oct 13 11:23:49 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 13 Oct 2020 20:23:49 +0200
Subject: [geos-devel] Checking GEOS master (state 8 October)
In-Reply-To: <CD36413A-1574-43EC-8268-DCA0F28EA6B1@cleverelephant.ca>
References: <alpine.LFD.2.23.451.2010131957290.1206887@reclus.nhh.no>
 <CD36413A-1574-43EC-8268-DCA0F28EA6B1@cleverelephant.ca>
Message-ID: <alpine.LFD.2.23.451.2010132021190.1207331@reclus.nhh.no>

On Tue, 13 Oct 2020, Paul Ramsey wrote:

>
>
>> On Oct 13, 2020, at 11:08 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> I've been checking the possible fallout from Overlay_NG (assuming that 
>> building from master on 8 October uses the new code) in some R 
>> packages, in particular sf and rgeos. I see messages such as:
>>
>> CBR: result (after common-bits addition) is INVALID: Self-intersection 
>> at or near point 368576.69999999995 864696 (368576.69999999995343 
>> 864696)
>
> That looks like the old overlay handler. Have you turned NG on in your 
> build?

Thanks for the quick response. First, is "master" the correct branch 
(gitea)? If yes, what is the incantation - I couldn't find any reference 
to NG in the code or configure.ac? I'd assumed from earlier discussion 
here that NG was on by default on "master".

Roger

>
> P
>
>
>>
>> followed by the text representation of the object dumped to console. 
>> The message and the dumped object are not passed through error or 
>> warning handlers passed in through initGEOS_r(), and so are hard to 
>> trap and handle. Is this a temporary feature which will be normalised 
>> for 3.9.0?
>>
>> So far I don't think that there are obvious failures in R packages 
>> related to the new code (again assuming that a straight build of master 
>> of 8 November exercises Overlay_NG), but the unexpected output was 
>> surprising.
>>
>> Best wishes,
>>
>> Roger
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Tue Oct 13 11:37:08 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 13 Oct 2020 11:37:08 -0700
Subject: [geos-devel] Checking GEOS master (state 8 October)
In-Reply-To: <alpine.LFD.2.23.451.2010132021190.1207331@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010131957290.1206887@reclus.nhh.no>
 <CD36413A-1574-43EC-8268-DCA0F28EA6B1@cleverelephant.ca>
 <alpine.LFD.2.23.451.2010132021190.1207331@reclus.nhh.no>
Message-ID: <5FC891CD-8785-469E-B287-0FBA931847BD@cleverelephant.ca>

In Cmake set DISABLE_OVERLAYNG to OFF
P

> On Oct 13, 2020, at 11:23 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> On Tue, 13 Oct 2020, Paul Ramsey wrote:
> 
>> 
>> 
>>> On Oct 13, 2020, at 11:08 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>> 
>>> I've been checking the possible fallout from Overlay_NG (assuming that building from master on 8 October uses the new code) in some R packages, in particular sf and rgeos. I see messages such as:
>>> 
>>> CBR: result (after common-bits addition) is INVALID: Self-intersection at or near point 368576.69999999995 864696 (368576.69999999995343 864696)
>> 
>> That looks like the old overlay handler. Have you turned NG on in your build?
> 
> Thanks for the quick response. First, is "master" the correct branch (gitea)? If yes, what is the incantation - I couldn't find any reference to NG in the code or configure.ac? I'd assumed from earlier discussion here that NG was on by default on "master".
> 
> Roger
> 
>> 
>> P
>> 
>> 
>>> 
>>> followed by the text representation of the object dumped to console. The message and the dumped object are not passed through error or warning handlers passed in through initGEOS_r(), and so are hard to trap and handle. Is this a temporary feature which will be normalised for 3.9.0?
>>> 
>>> So far I don't think that there are obvious failures in R packages related to the new code (again assuming that a straight build of master of 8 November exercises Overlay_NG), but the unexpected output was surprising.
>>> 
>>> Best wishes,
>>> 
>>> Roger
>>> 
>>> --
>>> Roger Bivand
>>> Department of Economics, Norwegian School of Economics,
>>> Helleveien 30, N-5045 Bergen, Norway.
>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>> https://orcid.org/0000-0003-2392-6140
>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>> 
>> 
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger.Bivand at nhh.no  Tue Oct 13 11:40:21 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 13 Oct 2020 20:40:21 +0200
Subject: [geos-devel] Checking GEOS master (state 8 October)
In-Reply-To: <5FC891CD-8785-469E-B287-0FBA931847BD@cleverelephant.ca>
References: <alpine.LFD.2.23.451.2010131957290.1206887@reclus.nhh.no>
 <CD36413A-1574-43EC-8268-DCA0F28EA6B1@cleverelephant.ca>
 <alpine.LFD.2.23.451.2010132021190.1207331@reclus.nhh.no>
 <5FC891CD-8785-469E-B287-0FBA931847BD@cleverelephant.ca>
Message-ID: <alpine.LFD.2.23.451.2010132038380.1207331@reclus.nhh.no>

On Tue, 13 Oct 2020, Paul Ramsey wrote:

> In Cmake set DISABLE_OVERLAYNG to OFF

Thanks, never Cmake here, am trying ../configure --enable-overlayng. I'm 
still puzzled about the free output to console not going through the error 
or warning handler.

Roger


> P
>
>> On Oct 13, 2020, at 11:23 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> On Tue, 13 Oct 2020, Paul Ramsey wrote:
>>
>>>
>>>
>>>> On Oct 13, 2020, at 11:08 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>
>>>> I've been checking the possible fallout from Overlay_NG (assuming that building from master on 8 October uses the new code) in some R packages, in particular sf and rgeos. I see messages such as:
>>>>
>>>> CBR: result (after common-bits addition) is INVALID: Self-intersection at or near point 368576.69999999995 864696 (368576.69999999995343 864696)
>>>
>>> That looks like the old overlay handler. Have you turned NG on in your build?
>>
>> Thanks for the quick response. First, is "master" the correct branch (gitea)? If yes, what is the incantation - I couldn't find any reference to NG in the code or configure.ac? I'd assumed from earlier discussion here that NG was on by default on "master".
>>
>> Roger
>>
>>>
>>> P
>>>
>>>
>>>>
>>>> followed by the text representation of the object dumped to console. The message and the dumped object are not passed through error or warning handlers passed in through initGEOS_r(), and so are hard to trap and handle. Is this a temporary feature which will be normalised for 3.9.0?
>>>>
>>>> So far I don't think that there are obvious failures in R packages related to the new code (again assuming that a straight build of master of 8 November exercises Overlay_NG), but the unexpected output was surprising.
>>>>
>>>> Best wishes,
>>>>
>>>> Roger
>>>>
>>>> --
>>>> Roger Bivand
>>>> Department of Economics, Norwegian School of Economics,
>>>> Helleveien 30, N-5045 Bergen, Norway.
>>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>> https://orcid.org/0000-0003-2392-6140
>>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From mtnclimb at gmail.com  Tue Oct 13 12:06:27 2020
From: mtnclimb at gmail.com (Martin Davis)
Date: Tue, 13 Oct 2020 12:06:27 -0700
Subject: [geos-devel] Checking GEOS master (state 8 October)
In-Reply-To: <alpine.LFD.2.23.451.2010132038380.1207331@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010131957290.1206887@reclus.nhh.no>
 <CD36413A-1574-43EC-8268-DCA0F28EA6B1@cleverelephant.ca>
 <alpine.LFD.2.23.451.2010132021190.1207331@reclus.nhh.no>
 <5FC891CD-8785-469E-B287-0FBA931847BD@cleverelephant.ca>
 <alpine.LFD.2.23.451.2010132038380.1207331@reclus.nhh.no>
Message-ID: <CAK2ens2DigVqJj3jn1wKbKajA-wOTqJuAv_H730LhL3wUOVNXg@mail.gmail.com>

That output is coming from HeuristicOverlay.cpp:
https://github.com/libgeos/geos/blame/c4aebbbc048618e75b39f6c8d85dce8e8216cf9f/src/geom/HeuristicOverlay.cpp#L206

It shouldn't be showing up unless GEOS_DEBUG_HEURISTICOVERLAY has been
enabled, however.

On Tue, Oct 13, 2020 at 11:40 AM Roger Bivand <Roger.Bivand at nhh.no> wrote:

> On Tue, 13 Oct 2020, Paul Ramsey wrote:
>
> > In Cmake set DISABLE_OVERLAYNG to OFF
>
> Thanks, never Cmake here, am trying ../configure --enable-overlayng. I'm
> still puzzled about the free output to console not going through the error
> or warning handler.
>
> Roger
>
>
> > P
> >
> >> On Oct 13, 2020, at 11:23 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> >>
> >> On Tue, 13 Oct 2020, Paul Ramsey wrote:
> >>
> >>>
> >>>
> >>>> On Oct 13, 2020, at 11:08 AM, Roger Bivand <Roger.Bivand at nhh.no>
> wrote:
> >>>>
> >>>> I've been checking the possible fallout from Overlay_NG (assuming
> that building from master on 8 October uses the new code) in some R
> packages, in particular sf and rgeos. I see messages such as:
> >>>>
> >>>> CBR: result (after common-bits addition) is INVALID:
> Self-intersection at or near point 368576.69999999995 864696
> (368576.69999999995343 864696)
> >>>
> >>> That looks like the old overlay handler. Have you turned NG on in your
> build?
> >>
> >> Thanks for the quick response. First, is "master" the correct branch
> (gitea)? If yes, what is the incantation - I couldn't find any reference to
> NG in the code or configure.ac? I'd assumed from earlier discussion here
> that NG was on by default on "master".
> >>
> >> Roger
> >>
> >>>
> >>> P
> >>>
> >>>
> >>>>
> >>>> followed by the text representation of the object dumped to console.
> The message and the dumped object are not passed through error or warning
> handlers passed in through initGEOS_r(), and so are hard to trap and
> handle. Is this a temporary feature which will be normalised for 3.9.0?
> >>>>
> >>>> So far I don't think that there are obvious failures in R packages
> related to the new code (again assuming that a straight build of master of
> 8 November exercises Overlay_NG), but the unexpected output was surprising.
> >>>>
> >>>> Best wishes,
> >>>>
> >>>> Roger
> >>>>
> >>>> --
> >>>> Roger Bivand
> >>>> Department of Economics, Norwegian School of Economics,
> >>>> Helleveien 30, N-5045 Bergen, Norway.
> >>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> >>>> https://orcid.org/0000-0003-2392-6140
> >>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> >>>> _______________________________________________
> >>>> geos-devel mailing list
> >>>> geos-devel at lists.osgeo.org
> >>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >>>
> >>>
> >>
> >> --
> >> Roger Bivand
> >> Department of Economics, Norwegian School of Economics,
> >> Helleveien 30, N-5045 Bergen, Norway.
> >> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> >> https://orcid.org/0000-0003-2392-6140
> >> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> >
> >
>
> --
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201013/f49ed831/attachment.html>

From Roger.Bivand at nhh.no  Thu Oct 15 08:59:39 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 15 Oct 2020 17:59:39 +0200
Subject: [geos-devel] Is Overlay-NG active?
Message-ID: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>

Can I ask whether there is, or could be, a function exposed in the C_API, 
or a header variable say in geoc_c.h, showing whether the running GEOS is 
using Overlay-NG or not?

After help from the list, I've now run checks on R packages either 
themselves linking to GEOS, or using functions from packages which do link 
to GEOS. A half-dozen or so fail on unit tests, typically because the 
ordering  of coordinates varies (say same polygon, but starting at  a 
different place), or the ordering of sub-geometries (say slivers from a 
Union operation) varies from before Overlay-NG. The objects are the same 
(for given precision), but unit tests in packages compare the WKT of the 
output geometry with the expected WKT (often generated from output before 
Overlay-NG).

So if we could provide a way for the unit tests to compare correctly 
branching on Overlay-NG or not, the package maintainers could avoid 
having to scramble when platforms and R packages linking to GEOS begin to 
appear.

Another question raised by package maintainers - do we know when 3.9.0 may 
be expected, and will it have Overlay-NG? However, providing them with an 
easy way to ask the GEOS runtime if it is Overlay-NG or not will relieve 
the pressure.

Anyway, the failure count is very low, a half-dozen from hundreds is fine 
(and if they didn't write tests, that isn't our problem...).

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Thu Oct 15 09:39:27 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 15 Oct 2020 09:39:27 -0700
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
Message-ID: <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>

The "plan" as I see it is to, for 3.9, actually make NG the default for the standard intersection(), union(), unaryunion(), difference(), symdifference() calls. So the "test" will be "is this GEOS 3.9". I don't want to go forward into the future where a released GEOS has two potential behaviour modes, that way lies madness. We needed to keep a switch in place to allow other development to continue and to compare before/after easily on the working branch (and to allow people like you to test the new without suddenly have everything break on ordinary testing).

Does that make sense?

P

> On Oct 15, 2020, at 8:59 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> Can I ask whether there is, or could be, a function exposed in the C_API, or a header variable say in geoc_c.h, showing whether the running GEOS is using Overlay-NG or not?
> 
> After help from the list, I've now run checks on R packages either themselves linking to GEOS, or using functions from packages which do link to GEOS. A half-dozen or so fail on unit tests, typically because the ordering  of coordinates varies (say same polygon, but starting at  a different place), or the ordering of sub-geometries (say slivers from a Union operation) varies from before Overlay-NG. The objects are the same (for given precision), but unit tests in packages compare the WKT of the output geometry with the expected WKT (often generated from output before Overlay-NG).
> 
> So if we could provide a way for the unit tests to compare correctly branching on Overlay-NG or not, the package maintainers could avoid having to scramble when platforms and R packages linking to GEOS begin to appear.
> 
> Another question raised by package maintainers - do we know when 3.9.0 may be expected, and will it have Overlay-NG? However, providing them with an easy way to ask the GEOS runtime if it is Overlay-NG or not will relieve the pressure.
> 
> Anyway, the failure count is very low, a half-dozen from hundreds is fine (and if they didn't write tests, that isn't our problem...).
> 
> Roger
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Thu Oct 15 09:55:45 2020
From: lr at pcorp.us (Regina Obe)
Date: Thu, 15 Oct 2020 12:55:45 -0400
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>
Message-ID: <000801d6a314$076ebea0$164c3be0$@pcorp.us>

Roger,

I'll let Paul answer the question of when we can expect a 3.9 as he probably has a better idea than anyone else.
All I know is the plan is we'll be releasing GEOS 3.9 and PostGIS 3.1 around the same time since there is some functionality in PostGIS 3.1 that leverages GEOS 3.9 if it is compiled with GEOS 3.9.

As far as testing, on the PostGIS side to make the old Geos and new Geos agree, I've been applying ST_Normalize

Which looks to come from Geos CAPI - GEOSNormalize

Can you use that to deal with the  failures you are running into?  That should make the wkt of both GEOS old and new agree.

Thanks,
Regina

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Thursday, October 15, 2020 12:39 PM
> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
> devel at lists.osgeo.org>
> Subject: Re: [geos-devel] Is Overlay-NG active?
> 
> The "plan" as I see it is to, for 3.9, actually make NG the default for the
> standard intersection(), union(), unaryunion(), difference(), symdifference()
> calls. So the "test" will be "is this GEOS 3.9". I don't want to go forward into
> the future where a released GEOS has two potential behaviour modes, that
> way lies madness. We needed to keep a switch in place to allow other
> development to continue and to compare before/after easily on the working
> branch (and to allow people like you to test the new without suddenly have
> everything break on ordinary testing).
> 
> Does that make sense?
> 
> P
> 
> > On Oct 15, 2020, at 8:59 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> >
> > Can I ask whether there is, or could be, a function exposed in the C_API, or
> a header variable say in geoc_c.h, showing whether the running GEOS is
> using Overlay-NG or not?
> >
> > After help from the list, I've now run checks on R packages either
> themselves linking to GEOS, or using functions from packages which do link
> to GEOS. A half-dozen or so fail on unit tests, typically because the ordering
> of coordinates varies (say same polygon, but starting at  a different place), or
> the ordering of sub-geometries (say slivers from a Union operation) varies
> from before Overlay-NG. The objects are the same (for given precision), but
> unit tests in packages compare the WKT of the output geometry with the
> expected WKT (often generated from output before Overlay-NG).
> >
> > So if we could provide a way for the unit tests to compare correctly
> branching on Overlay-NG or not, the package maintainers could avoid having
> to scramble when platforms and R packages linking to GEOS begin to appear.
> >
> > Another question raised by package maintainers - do we know when 3.9.0
> may be expected, and will it have Overlay-NG? However, providing them
> with an easy way to ask the GEOS runtime if it is Overlay-NG or not will
> relieve the pressure.
> >
> > Anyway, the failure count is very low, a half-dozen from hundreds is fine
> (and if they didn't write tests, that isn't our problem...).
> >
> > Roger
> >
> > --
> > Roger Bivand
> > Department of Economics, Norwegian School of Economics, Helleveien 30,
> > N-5045 Bergen, Norway.
> > voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> > https://orcid.org/0000-0003-2392-6140
> > https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Thu Oct 15 10:12:46 2020
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 15 Oct 2020 19:12:46 +0200
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
Message-ID: <20201015171246.GB42972@lif>

On Thu, Oct 15, 2020 at 05:59:39PM +0200, Roger Bivand wrote:
> Can I ask whether there is, or could be, a function exposed in the C_API, or
> a header variable say in geoc_c.h, showing whether the running GEOS is using
> Overlay-NG or not?

There are functions with Prec suffix, in current GEOS master branch,
that can be used to explicitly request OverlayNG.

The new signatures will keep making sense even when OverlayNG becomes
the default because they allow you to specify a grid size which would
be used for the operation.

--strk;

From Roger.Bivand at nhh.no  Thu Oct 15 12:24:32 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 15 Oct 2020 21:24:32 +0200
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <000801d6a314$076ebea0$164c3be0$@pcorp.us>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>
 <000801d6a314$076ebea0$164c3be0$@pcorp.us>
Message-ID: <alpine.LFD.2.23.451.2010152121330.2118584@reclus.nhh.no>

On Thu, 15 Oct 2020, Regina Obe wrote:

> Roger,
>
> I'll let Paul answer the question of when we can expect a 3.9 as he 
> probably has a better idea than anyone else. All I know is the plan is 
> we'll be releasing GEOS 3.9 and PostGIS 3.1 around the same time since 
> there is some functionality in PostGIS 3.1 that leverages GEOS 3.9 if it 
> is compiled with GEOS 3.9.
>
> As far as testing, on the PostGIS side to make the old Geos and new Geos 
> agree, I've been applying ST_Normalize
>
> Which looks to come from Geos CAPI - GEOSNormalize
>
> Can you use that to deal with the failures you are running into?  That 
> should make the wkt of both GEOS old and new agree.

Thank you, yes, probably. However, both legacy overlay and Overlay-NG 
differ from GEOSNormalize() (as far as I can see from a simple test), so 
the half-dozen package maintainers will need to go from legacy to 
normalized and then avoid having to condition on the GEOS version.

Best wishes,

Roger

>
> Thanks,
> Regina
>
>> -----Original Message-----
>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
>> Paul Ramsey
>> Sent: Thursday, October 15, 2020 12:39 PM
>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
>> devel at lists.osgeo.org>
>> Subject: Re: [geos-devel] Is Overlay-NG active?
>>
>> The "plan" as I see it is to, for 3.9, actually make NG the default for the
>> standard intersection(), union(), unaryunion(), difference(), symdifference()
>> calls. So the "test" will be "is this GEOS 3.9". I don't want to go forward into
>> the future where a released GEOS has two potential behaviour modes, that
>> way lies madness. We needed to keep a switch in place to allow other
>> development to continue and to compare before/after easily on the working
>> branch (and to allow people like you to test the new without suddenly have
>> everything break on ordinary testing).
>>
>> Does that make sense?
>>
>> P
>>
>>> On Oct 15, 2020, at 8:59 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>
>>> Can I ask whether there is, or could be, a function exposed in the C_API, or
>> a header variable say in geoc_c.h, showing whether the running GEOS is
>> using Overlay-NG or not?
>>>
>>> After help from the list, I've now run checks on R packages either
>> themselves linking to GEOS, or using functions from packages which do link
>> to GEOS. A half-dozen or so fail on unit tests, typically because the ordering
>> of coordinates varies (say same polygon, but starting at  a different place), or
>> the ordering of sub-geometries (say slivers from a Union operation) varies
>> from before Overlay-NG. The objects are the same (for given precision), but
>> unit tests in packages compare the WKT of the output geometry with the
>> expected WKT (often generated from output before Overlay-NG).
>>>
>>> So if we could provide a way for the unit tests to compare correctly
>> branching on Overlay-NG or not, the package maintainers could avoid having
>> to scramble when platforms and R packages linking to GEOS begin to appear.
>>>
>>> Another question raised by package maintainers - do we know when 3.9.0
>> may be expected, and will it have Overlay-NG? However, providing them
>> with an easy way to ask the GEOS runtime if it is Overlay-NG or not will
>> relieve the pressure.
>>>
>>> Anyway, the failure count is very low, a half-dozen from hundreds is fine
>> (and if they didn't write tests, that isn't our problem...).
>>>
>>> Roger
>>>
>>> --
>>> Roger Bivand
>>> Department of Economics, Norwegian School of Economics, Helleveien 30,
>>> N-5045 Bergen, Norway.
>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>> https://orcid.org/0000-0003-2392-6140
>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger.Bivand at nhh.no  Thu Oct 15 12:25:36 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 15 Oct 2020 21:25:36 +0200
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>
Message-ID: <alpine.LFD.2.23.451.2010152125090.2118584@reclus.nhh.no>

On Thu, 15 Oct 2020, Paul Ramsey wrote:

> The "plan" as I see it is to, for 3.9, actually make NG the default for 
> the standard intersection(), union(), unaryunion(), difference(), 
> symdifference() calls. So the "test" will be "is this GEOS 3.9". I don't 
> want to go forward into the future where a released GEOS has two 
> potential behaviour modes, that way lies madness. We needed to keep a 
> switch in place to allow other development to continue and to compare 
> before/after easily on the working branch (and to allow people like you 
> to test the new without suddenly have everything break on ordinary 
> testing).
>
> Does that make sense?

Yes, it does, thank you.

Best wishes,

Roger

>
> P
>
>> On Oct 15, 2020, at 8:59 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> Can I ask whether there is, or could be, a function exposed in the C_API, or a header variable say in geoc_c.h, showing whether the running GEOS is using Overlay-NG or not?
>>
>> After help from the list, I've now run checks on R packages either themselves linking to GEOS, or using functions from packages which do link to GEOS. A half-dozen or so fail on unit tests, typically because the ordering  of coordinates varies (say same polygon, but starting at  a different place), or the ordering of sub-geometries (say slivers from a Union operation) varies from before Overlay-NG. The objects are the same (for given precision), but unit tests in packages compare the WKT of the output geometry with the expected WKT (often generated from output before Overlay-NG).
>>
>> So if we could provide a way for the unit tests to compare correctly branching on Overlay-NG or not, the package maintainers could avoid having to scramble when platforms and R packages linking to GEOS begin to appear.
>>
>> Another question raised by package maintainers - do we know when 3.9.0 may be expected, and will it have Overlay-NG? However, providing them with an easy way to ask the GEOS runtime if it is Overlay-NG or not will relieve the pressure.
>>
>> Anyway, the failure count is very low, a half-dozen from hundreds is fine (and if they didn't write tests, that isn't our problem...).
>>
>> Roger
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger.Bivand at nhh.no  Thu Oct 15 12:39:44 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 15 Oct 2020 21:39:44 +0200
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <20201015171246.GB42972@lif>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <20201015171246.GB42972@lif>
Message-ID: <alpine.LFD.2.23.451.2010152126070.2118584@reclus.nhh.no>

On Thu, 15 Oct 2020, Sandro Santilli wrote:

> On Thu, Oct 15, 2020 at 05:59:39PM +0200, Roger Bivand wrote:
>> Can I ask whether there is, or could be, a function exposed in the 
>> C_API, or a header variable say in geoc_c.h, showing whether the 
>> running GEOS is using Overlay-NG or not?
>
> There are functions with Prec suffix, in current GEOS master branch,
> that can be used to explicitly request OverlayNG.
>
> The new signatures will keep making sense even when OverlayNG becomes
> the default because they allow you to specify a grid size which would
> be used for the operation.

Thanks - this will be useful anyway, for example see the discussion in 
(with apologies for github):

https://github.com/r-spatial/sf/issues/1510

where the resolution for a regression in intersection and/or STRtrees from 
3.6 to 3.7/3.8 was associated with an input problem challenging the use of 
0 precision in the R sf package by default.

Best wishes,

Roger

OT: We've been worried by not being able to build GEOS on Solaris 10 on 
ix64/x64 with GEOS after 3.6 - we had had a Sparc Solaris to run checks on 
a big-endian system, and have continued on Intel Solaris, and because the 
build train is divergent, it finds lots of assumptions made in coding, and 
since 3.6, we haven't been able to install GEOS. With Apple Silicon 
coming, it would be helpful to solve the Solaris build problem to keep our 
check systems up to date:

https://cran.r-project.org/web/checks/check_summary.html
https://cran.r-project.org/web/checks/check_flavors.html

>
> --strk;
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Thu Oct 15 12:45:48 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 15 Oct 2020 12:45:48 -0700
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <alpine.LFD.2.23.451.2010152126070.2118584@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <20201015171246.GB42972@lif>
 <alpine.LFD.2.23.451.2010152126070.2118584@reclus.nhh.no>
Message-ID: <C3A4A1B3-74B2-4107-9136-EDED91C92552@cleverelephant.ca>

I share your concern about niche architectures. We are running ARM64 in CI now. We have no access to an easy bigendian platform to test on. I tried Travis S390 for a while, but the CI itself was very unreliable on that platform, frequent timeouts made it hard to keep in the test matrix, so I dropped it. Access to a big-endian machine with a modern build chain would be handy for occasional manual test runs, and of course debugging. "It don't work" is so nonactionable, and with the only access to alternative architectures being CI sometimes, it's hard to fix problems that do arise (see the litany of weird MIPS failures that Debian reports)

P.

> On Oct 15, 2020, at 12:39 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> OT: We've been worried by not being able to build GEOS on Solaris 10 on ix64/x64 with GEOS after 3.6 - we had had a Sparc Solaris to run checks on a big-endian system, and have continued on Intel Solaris, and because the build train is divergent, it finds lots of assumptions made in coding, and since 3.6, we haven't been able to install GEOS. With Apple Silicon coming, it would be helpful to solve the Solaris build problem to keep our check systems up to date:


From Roger.Bivand at nhh.no  Thu Oct 15 12:56:37 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 15 Oct 2020 19:56:37 +0000
Subject: [geos-devel] Is Overlay-NG active?
Message-ID: <AM4PR05MB3316B99237628831514292F5AC020@AM4PR05MB3316.eurprd05.prod.outlook.com>

I apologise for brevity, this blog shows some current thinking:

https://developer.r-project.org/Blog/public/2020/05/29/testing-r-on-emulated-platforms/index.html

Roger

---
Roger Bivand
Department of Economics
Norwegian School of Economics
Bergen, Norway
roger.bivand at nhh.no

________________________________
Fra: Paul Ramsey <pramsey at cleverelephant.ca>
Sendt: torsdag 15. oktober 2020, 21:45
Til: roger.bivand at nhh.no; GEOS Development List
Emne: Re: [geos-devel] Is Overlay-NG active?

I share your concern about niche architectures. We are running ARM64 in CI now. We have no access to an easy bigendian platform to test on. I tried Travis S390 for a while, but the CI itself was very unreliable on that platform, frequent timeouts made it hard to keep in the test matrix, so I dropped it. Access to a big-endian machine with a modern build chain would be handy for occasional manual test runs, and of course debugging. "It don't work" is so nonactionable, and with the only access to alternative architectures being CI sometimes, it's hard to fix problems that do arise (see the litany of weird MIPS failures that Debian reports) P. > On Oct 15, 2020, at 12:39 PM, Roger Bivand wrote: > > OT: We've been worried by not being able to build GEOS on Solaris 10 on ix64/x64 with GEOS after 3.6 - we had had a Sparc Solaris to run checks on a big-endian system, and have continued on Intel Solaris, and because the build train is divergent, it finds lots of assumptions made in coding, and since 3.6, we haven't been able to install GEOS. With Apple Silicon coming, it would be helpful to solve the Solaris build problem to keep our check systems up to date:
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201015/9a3e2519/attachment.html>

From mtnclimb at gmail.com  Thu Oct 15 13:57:03 2020
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 15 Oct 2020 13:57:03 -0700
Subject: [geos-devel] Unit testing Overlay operations
Message-ID: <CAK2ens2xoZK9AP6P4k+tosNrtDDHXfj=acHytr64JdT+xLaVfA@mail.gmail.com>

As noted in a recent thread, it's tricky to create unit tests for overlay
operations. One reason for this is that the order of the result components
and coordinates is undefined, and so can vary between diifferent algorithms
and even different library releases.   (The lack of well-defined ordering
is deliberate, since introducing ordering would reduce performance).

The solution to this is to normalize the actual result (and possibly the
expected value, to ensure it is stable).  This imposes a well-defined
ordering.  It works well for cases which are hand-crafted to test overlay
functionality.

But overlay results can vary in other ways as well, due to the use of
different algorithms, different handling of numerical precision, and the
heuristics used to ensure robustness.  This is much harder to handle.  In
GEOS we deal with this in a limited way by testing area and length of the
result, rather than the actual result geometry.  This is obviously a fairly
weak test, and it's used mostly for checking robustness (which tends to
produce either grossly wrong results or outright failure).

A further option would be to use some kind of similarity metric.  JTS has
used Area of Symmetric Difference and Hausdorff distance to unit test the
buffer operation (which has this problem as well). I've also experimented
with a "pinhole" method, involving generating points within a given
distance of the input and result linework.

To keep things simple, it's easiest to use relatively simple geometry to
test functionality, and cruder comparisons to test robustness.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201015/2f631ee3/attachment-0001.html>

From mtnclimb at gmail.com  Thu Oct 15 14:38:13 2020
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 15 Oct 2020 14:38:13 -0700
Subject: [geos-devel] Testing OverlayNG robustness in R-sf
In-Reply-To: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
Message-ID: <CAK2ens3GVmjYwzZzevXMDEas4XBDiqcu-uz+Gev8zteyp2sCLg@mail.gmail.com>

On Thu, Oct 15, 2020 at 9:00 AM Roger Bivand <Roger.Bivand at nhh.no> wrote:

>
> Anyway, the failure count is very low, a half-dozen from hundreds is fine
> (and if they didn't write tests, that isn't our problem...).
>

What would be especially interesting is to see whether OverlayNG resolves
the various overlay robustness issues reported in R-sf issues.

E.g.
https://github.com/r-spatial/sf/issues/794
https://github.com/r-spatial/sf/issues/603
https://github.com/r-spatial/sf/issues/936
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201015/da1f6f99/attachment.html>

From lr at pcorp.us  Thu Oct 15 14:48:31 2020
From: lr at pcorp.us (Regina Obe)
Date: Thu, 15 Oct 2020 17:48:31 -0400
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <alpine.LFD.2.23.451.2010152121330.2118584@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>
 <000801d6a314$076ebea0$164c3be0$@pcorp.us>
 <alpine.LFD.2.23.451.2010152121330.2118584@reclus.nhh.no>
Message-ID: <000a01d6a33c$ed20e6d0$c762b470$@pcorp.us>

> > Roger,
> >
> > I'll let Paul answer the question of when we can expect a 3.9 as he
> > probably has a better idea than anyone else. All I know is the plan is
> > we'll be releasing GEOS 3.9 and PostGIS 3.1 around the same time since
> > there is some functionality in PostGIS 3.1 that leverages GEOS 3.9 if
> > it is compiled with GEOS 3.9.
> >
> > As far as testing, on the PostGIS side to make the old Geos and new
> > Geos agree, I've been applying ST_Normalize
> >
> > Which looks to come from Geos CAPI - GEOSNormalize
> >
> > Can you use that to deal with the failures you are running into?  That
> > should make the wkt of both GEOS old and new agree.
> 
> Thank you, yes, probably. However, both legacy overlay and Overlay-NG
> differ from GEOSNormalize() (as far as I can see from a simple test), so
the
> half-dozen package maintainers will need to go from legacy to normalized
> and then avoid having to condition on the GEOS version.
> 
> Best wishes,
> 
> Roger
> 

Yah both legacy and NG both defer from GEOSNormalize, but the GEOSNormalize
of both is equivalent so what we do is

Essentially

WKT(GeosNormalize(outputfromfunc)) = WKT(GeosNormalize(oldexpectedresult))

Not ideal I know and maybe much harder to do in your setup than it was on
our tests as it does require changing your wkt expected output to the
normalized version.




From lr at pcorp.us  Thu Oct 15 14:52:40 2020
From: lr at pcorp.us (Regina Obe)
Date: Thu, 15 Oct 2020 17:52:40 -0400
Subject: [geos-devel] Unit testing Overlay operations
In-Reply-To: <CAK2ens2xoZK9AP6P4k+tosNrtDDHXfj=acHytr64JdT+xLaVfA@mail.gmail.com>
References: <CAK2ens2xoZK9AP6P4k+tosNrtDDHXfj=acHytr64JdT+xLaVfA@mail.gmail.com>
Message-ID: <001701d6a33d$81c3e580$854bb080$@pcorp.us>

Forgot about the area and length tests I think that is what I settled on on some tests in PostGIS where the answers truly were different but different in a unmeaningful way, by that I mean they both achieved satisfactory answers.

This was done for GDAL as well cause GDAL in 3.2 changed their polygonise algorithms which broke one of our raster tests and the results even after normalize were different.

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Martin Davis
Sent: Thursday, October 15, 2020 4:57 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: [geos-devel] Unit testing Overlay operations

 

As noted in a recent thread, it's tricky to create unit tests for overlay operations. One reason for this is that the order of the result components and coordinates is undefined, and so can vary between diifferent algorithms and even different library releases.   (The lack of well-defined ordering is deliberate, since introducing ordering would reduce performance).

 

The solution to this is to normalize the actual result (and possibly the expected value, to ensure it is stable).  This imposes a well-defined ordering.  It works well for cases which are hand-crafted to test overlay functionality.

 

But overlay results can vary in other ways as well, due to the use of different algorithms, different handling of numerical precision, and the heuristics used to ensure robustness.  This is much harder to handle.  In GEOS we deal with this in a limited way by testing area and length of the result, rather than the actual result geometry.  This is obviously a fairly weak test, and it's used mostly for checking robustness (which tends to produce either grossly wrong results or outright failure).

 

A further option would be to use some kind of similarity metric.  JTS has used Area of Symmetric Difference and Hausdorff distance to unit test the buffer operation (which has this problem as well). I've also experimented with a "pinhole" method, involving generating points within a given distance of the input and result linework.

 

To keep things simple, it's easiest to use relatively simple geometry to test functionality, and cruder comparisons to test robustness.

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201015/58faf78b/attachment.html>

From geos-trac at osgeo.org  Fri Oct 16 05:55:06 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 16 Oct 2020 12:55:06 -0000
Subject: [geos-devel] [GEOS] #1056: GEOSClipByRect: Incorrect line clipping
Message-ID: <048.6cfa73ea52faba6c5083c25df39d82e1@osgeo.org>

#1056: GEOSClipByRect: Incorrect line clipping
------------------------+--------------------------
 Reporter:  Algunenano  |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.8.2
Component:  Default     |    Version:  3.8.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Comes from Postgis' https://trac.osgeo.org/postgis/ticket/4765

 There are some situations where parts of a line that matches the box
 boundaries are not included in the final intersection.

 Example in GEOS itself:
 {{{
 diff --git a/tests/unit/capi/GEOSClipByRectTest.cpp
 b/tests/unit/capi/GEOSClipByRectTest.cpp
 index e5358436..364c6649 100644
 --- a/tests/unit/capi/GEOSClipByRectTest.cpp
 +++ b/tests/unit/capi/GEOSClipByRectTest.cpp
 @@ -200,5 +200,19 @@ template<> template<> void object::test<13>
      isEqual(geom2_, "POLYGON ((5 5, 5 15, 10 15, 10 10, 15 10, 15 5, 5
 5))");
  }

 +/// Comes from https://trac.osgeo.org/postgis/ticket/4765
 +template<> template<> void object::test<14>
 +()
 +{
 +    const char* wkt = "LINESTRING(0 0, 0 15, 15 15, 1 1)";
 +    geom1_ = GEOSGeomFromWKT(wkt);
 +    geom2_ = GEOSClipByRect(geom1_, 0, 0, 10, 10);
 +    /*
 +     * EXP: MULTILINESTRING((0 0,0 10),(10 10,1 1))
 +     * OBT: LINESTRING (10 10, 1 1)
 +     */
 +    isEqual(geom2_, "MULTILINESTRING((0 0,0 10),(10 10,1 1))");
 +}
 +
  } // namespace tut

 }}}


 Broken in at least GEOS 3.8 and master (I haven't tested it in older
 releases).

 Attaching an image showcasing the issue.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1056>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 16 05:55:30 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 16 Oct 2020 12:55:30 -0000
Subject: [geos-devel] [GEOS] #1056: GEOSClipByRect: Incorrect line
	clipping
In-Reply-To: <048.6cfa73ea52faba6c5083c25df39d82e1@osgeo.org>
References: <048.6cfa73ea52faba6c5083c25df39d82e1@osgeo.org>
Message-ID: <063.0466d02ba12bb4412544731f8fad1003@osgeo.org>

#1056: GEOSClipByRect: Incorrect line clipping
------------------------+---------------------------
 Reporter:  Algunenano  |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.8.2
Component:  Default     |     Version:  3.8.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by Algunenano):

 * Attachment "clipByBox.png" added.


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1056>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 16 06:13:34 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 16 Oct 2020 13:13:34 -0000
Subject: [geos-devel] [GEOS] #1057: GEOSClipByRect might return mixed
	dimension geometries
Message-ID: <048.2616413a58b2e5124c85ef527d792a22@osgeo.org>

#1057: GEOSClipByRect might return mixed dimension geometries
------------------------+--------------------------
 Reporter:  Algunenano  |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.8.2
Component:  Default     |    Version:  3.8.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Comes from Postgis' https://trac.osgeo.org/postgis/ticket/4690

 Reproducer:
 {{{
 diff --git a/tests/unit/capi/GEOSClipByRectTest.cpp
 b/tests/unit/capi/GEOSClipByRectTest.cpp
 index e5358436..f2b0ad12 100644
 --- a/tests/unit/capi/GEOSClipByRectTest.cpp
 +++ b/tests/unit/capi/GEOSClipByRectTest.cpp
 @@ -200,5 +200,24 @@ template<> template<> void object::test<13>
      isEqual(geom2_, "POLYGON ((5 5, 5 15, 10 15, 10 10, 15 10, 15 5, 5
 5))");
  }

 -} // namespace tut
 +/// Comes from https://trac.osgeo.org/geos/ticket/1056
 +template<> template<> void object::test<15>
 +()
 +{
 +    const char* wkt = "LINESTRING(2542 4287 5,2540 4299
 5.361999999965,2537 4305 5.910000000033,2530 4311 6.832999999984,2519 4314
 8.670000000042,2511 4318 10.351999999955,2504 4325 12.388000000035,2499
 4331 14.146999999997,2497 4337 15.354999999981,2497 4363
 18.652000000002,2484 4382 19.369999999995,2481 4390 19.572999999975,2480
 4394 19.675999999978,2485 4406 20,2484 4410 20,2480 4415
 20.123999999952,2466 4423 20.464999999967,2464 4425 20.503999999957,2458
 4438 21.265000000014,2453 4443 21.55700000003,2451 4444
 21.589000000036,2446 4446 21.898000000045,2441 4450 22.373000000021,2438
 4455 22.876000000047,2437 4460 23.35699999996,2435 4475
 24.327999999979,2432 4479 24.689999999944,2428 4483 24.974999999977,2423
 4484 25.236000000033,2419 4483 25.587000000058,2414 4481
 25.886000000057,2408 4480 26.34600000002,2404 4483 26.780999999959,2401
 4488 27.089999999967,2398 4491 27.447000000044,2392 4493
 28.158999999985,2385 4494 28.90399999998,2379 4492 29.648000000045,2375
 4489 30.082999999984,2370 4481 30.947000000044,2368 4478
 31.459999999963,2340 4479 34.521999999997,2320 4483 38.736999999965,2294
 4491 42,2289 4493 42,2283 4498 42.108000000008,2277 4504
 42.302000000025,2269 4517 43.079000000027,2263 4522 43.53899999999,2261
 4523 43.706000000006,2255 4523 44.201000000001,2243 4521 45.5,2239 4517
 45.886000000057,2234 4502 47.400999999954,2213 4462 49.908999999985,2211
 4454 50.160999999964,2210 4443 50.631999999983,2211 4429
 51.402000000002,2214 4418 52.089000000036,2212 4414 52.373000000021,2199
 4404 53.283999999985,2188 4397 54,2184 4397 54.295000000042,2179 4398
 54.626999999979,2166 4405 55,2159 4405 55,2155 4402 55.070999999996,2153
 4390 55.351000000024,2149 4381 55.976000000024,2138 4334 60.5,2136 4330
 60.895000000019,2131 4324 61.405999999959,2121 4315 62.069999999949,2103
 4290 63.123999999952,2097 4284 63.302999999956,2090 4279
 63.515999999945,2085 4273 63.805000000051,2076 4266 64.10699999996,2073
 4262 64.185000000056,2072 4260 64.197999999975,2072 4253
 64.396999999997,2072 4242 64.701000000001,2074 4228 65,2075 4208 65,2071
 4202 65,2064 4197 65,2061 4193 65,2061 4186 65,2063 4179 65,2064 4169
 65,2060 4154 65,2056 4145 65.222999999998,2052 4140 65.363999999943,2047
 4139 65.493000000017,2039 4140 65.812000000035,2023 4146 66,2021 4146
 66,2013 4140 66,2011 4139 66,2009 4140 66,2005 4143 66,2003 4143 66,2001
 4142 66,1990 4130 66,1986 4124 66,1984 4118 66)";
 +    geom1_ = GEOSGeomFromWKT(wkt);
 +    geom2_ = GEOSClipByRect(geom1_, -256,256,4352,4352);
 +
 +    for (int i = 0; i < GEOSGetNumGeometries(geom2_); i++)
 +    {
 +        const GEOSGeometry* g = GEOSGetGeometryN(geom2_, i);
 +        bool hasz = GEOSHasZ(g);
 +        if (!hasz) {
 +            std::printf("Expected subgeom %d to have z-coordinate and it
 doesn't", i);
 +        }
 +        ensure(hasz);
 +    }
 +    ensure(GEOSHasZ(geom2_) == true);
 +}

 +} // namespace tut
 \ No newline at end of file
 }}}

 The result of this GEOSClipByRect is a multilinestring where the first
 (index 0) linestring has 3 coordinates (xyz) but the second one only has 2
 (xy). I would expect to either have everything 2D or everything 3D, but
 AFAIK having mixed dimensions in a multigeometry is invalid (at least in
 Postgis it is).

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1057>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From Roger.Bivand at nhh.no  Fri Oct 16 11:33:18 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 16 Oct 2020 20:33:18 +0200
Subject: [geos-devel] Is Overlay-NG active?
In-Reply-To: <000a01d6a33c$ed20e6d0$c762b470$@pcorp.us>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <C79E4223-299D-4888-BF69-0B1F30EE7DFD@cleverelephant.ca>
 <000801d6a314$076ebea0$164c3be0$@pcorp.us>
 <alpine.LFD.2.23.451.2010152121330.2118584@reclus.nhh.no>
 <000a01d6a33c$ed20e6d0$c762b470$@pcorp.us>
Message-ID: <alpine.LFD.2.23.451.2010162029020.2135225@reclus.nhh.no>

On Thu, 15 Oct 2020, Regina Obe wrote:

>>> Roger,
>>>
>>> I'll let Paul answer the question of when we can expect a 3.9 as he
>>> probably has a better idea than anyone else. All I know is the plan is
>>> we'll be releasing GEOS 3.9 and PostGIS 3.1 around the same time since
>>> there is some functionality in PostGIS 3.1 that leverages GEOS 3.9 if
>>> it is compiled with GEOS 3.9.
>>>
>>> As far as testing, on the PostGIS side to make the old Geos and new
>>> Geos agree, I've been applying ST_Normalize
>>>
>>> Which looks to come from Geos CAPI - GEOSNormalize
>>>
>>> Can you use that to deal with the failures you are running into?  That
>>> should make the wkt of both GEOS old and new agree.
>>
>> Thank you, yes, probably. However, both legacy overlay and Overlay-NG
>> differ from GEOSNormalize() (as far as I can see from a simple test), so
> the
>> half-dozen package maintainers will need to go from legacy to normalized
>> and then avoid having to condition on the GEOS version.
>>
>> Best wishes,
>>
>> Roger
>>
>
> Yah both legacy and NG both defer from GEOSNormalize, but the GEOSNormalize
> of both is equivalent so what we do is
>
> Essentially
>
> WKT(GeosNormalize(outputfromfunc)) = WKT(GeosNormalize(oldexpectedresult))
>
> Not ideal I know and maybe much harder to do in your setup than it was on
> our tests as it does require changing your wkt expected output to the
> normalized version.

Regina,

Thanks again. Since we accept that we can rely on the existing WKT 
representations remaining fixed < "3.9.0", and that Overlay-NG will be 
used >= "3.9.0", we are choosing to advise package maintainers to add a 
condition to their tests to add the new >= "3.9.0" WKT when GEOS >= 
"3.9.0". Not ideal, but we can return to normalization later if this isn't 
enough.

Best wishes,

Roger

>
>
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger.Bivand at nhh.no  Fri Oct 16 11:59:32 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 16 Oct 2020 20:59:32 +0200
Subject: [geos-devel] Testing OverlayNG robustness in R-sf
In-Reply-To: <CAK2ens3GVmjYwzZzevXMDEas4XBDiqcu-uz+Gev8zteyp2sCLg@mail.gmail.com>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <CAK2ens3GVmjYwzZzevXMDEas4XBDiqcu-uz+Gev8zteyp2sCLg@mail.gmail.com>
Message-ID: <alpine.LFD.2.23.451.2010162041220.2135225@reclus.nhh.no>

On Thu, 15 Oct 2020, Martin Davis wrote:

> On Thu, Oct 15, 2020 at 9:00 AM Roger Bivand <Roger.Bivand at nhh.no> wrote:
>
>>
>> Anyway, the failure count is very low, a half-dozen from hundreds is fine
>> (and if they didn't write tests, that isn't our problem...).
>>
>
> What would be especially interesting is to see whether OverlayNG resolves
> the various overlay robustness issues reported in R-sf issues.
>
> E.g.
> https://github.com/r-spatial/sf/issues/794

(I had a local copy of the all.rds file)

> all %>% st_intersection -> o
Error in CPL_nary_intersection(x) :
   Evaluation error: TopologyException: found non-noded intersection 
between LINESTRING (28.2168 45.4666, 28.2153 45.4669) and LINESTRING 
(28.2153 45.4669, 28.2168 45.4666) at 28.215309983502991 
45.466850983501708.
> all %>% st_set_precision(1e8) %>% st_intersection -> o
Error in CPL_nary_intersection(x) :
   Evaluation error: TopologyException: found non-noded intersection 
between LINESTRING (40.1413 4.01209, 40.1296 4.00625) and LINESTRING 
(40.1413 4.01209, 40.1296 4.00625) at 40.141307598308956 
4.0120866067334404.



> https://github.com/r-spatial/sf/issues/603

> library(sf)
Linking to GEOS 3.9.0dev, GDAL 3.2.0dev-b51dc28ab7, PROJ 7.2.0
> p1 <- readRDS("p1.rds")
> p2 <- readRDS("p2.rds")
> p3 <- sf::st_difference(p1, p2)

so now runs with Overlay-NG and sf's default 0 precision, but sf has also 
changed since late 2017.

> https://github.com/r-spatial/sf/issues/936
>

Error in CPL_nary_intersection(x) :
   Evaluation error: TopologyException: Input geom 0 is invalid: 
Self-intersection at 314406.13208707399 -5762352.8343122564.

> o <- st_make_valid(test_set)
> overlap <- st_intersection(o)

Error in CPL_nary_intersection(x) :
   Evaluation error: TopologyException: found non-noded intersection 
between LINESTRING (316483 -5.76278e+06, 316483 -5.76278e+06) and 
LINESTRING (316483 -5.76278e+06, 316411 -5.76283e+06) at 
316482.77665721485 -5762778.376178137.

Cases 794 and 936 are all-by-all intersections, and as noted in the latter 
issue, the problems occurring differ by input order.

Please ask off-list if someone needs all.rds from 794.

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From mtnclimb at gmail.com  Fri Oct 16 12:55:05 2020
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 16 Oct 2020 12:55:05 -0700
Subject: [geos-devel] Testing OverlayNG robustness in R-sf
In-Reply-To: <alpine.LFD.2.23.451.2010162041220.2135225@reclus.nhh.no>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <CAK2ens3GVmjYwzZzevXMDEas4XBDiqcu-uz+Gev8zteyp2sCLg@mail.gmail.com>
 <alpine.LFD.2.23.451.2010162041220.2135225@reclus.nhh.no>
Message-ID: <CAK2ens06UTVWSk=70JWgUdr7tmTG48iH1irjPjzOAp9KECOt1A@mail.gmail.com>

On Fri, Oct 16, 2020 at 11:59 AM Roger Bivand <Roger.Bivand at nhh.no> wrote:

> Cases 794 and 936 are all-by-all intersections, and as noted in the latter
> issue, the problems occurring differ by input order.
>

Well, that's disappointing that 794 and 936 still have failures.
Especially because 794 was also reported as JTS 300:

https://github.com/locationtech/jts/issues/300

and the test data there is incoporated in the robustness test suilte in
both JTS [1] and GEOS [2] , where it passes using OverlayNG.

Is there any way to get a dump of the actual input geometries to GEOS which
are causing these errors?

[1]
https://github.com/locationtech/jts/blob/master/modules/tests/src/test/resources/testxml/robust/overlay/TestOverlay-jts-300.xml
[2]
https://git.osgeo.org/gitea/geos/geos/src/branch/master/tests/xmltester/tests/robust/overlay/TestOverlay-jts-300.xml
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201016/891f2ca6/attachment.html>

From Roger.Bivand at nhh.no  Sat Oct 17 06:02:53 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 17 Oct 2020 15:02:53 +0200
Subject: [geos-devel] Testing OverlayNG robustness in R-sf
In-Reply-To: <CAK2ens06UTVWSk=70JWgUdr7tmTG48iH1irjPjzOAp9KECOt1A@mail.gmail.com>
References: <alpine.LFD.2.23.451.2010151747010.2115598@reclus.nhh.no>
 <CAK2ens3GVmjYwzZzevXMDEas4XBDiqcu-uz+Gev8zteyp2sCLg@mail.gmail.com>
 <alpine.LFD.2.23.451.2010162041220.2135225@reclus.nhh.no>
 <CAK2ens06UTVWSk=70JWgUdr7tmTG48iH1irjPjzOAp9KECOt1A@mail.gmail.com>
Message-ID: <alpine.LFD.2.23.451.2010171457140.2149808@reclus.nhh.no>

On Fri, 16 Oct 2020, Martin Davis wrote:

> On Fri, Oct 16, 2020 at 11:59 AM Roger Bivand <Roger.Bivand at nhh.no> wrote:
>
>> Cases 794 and 936 are all-by-all intersections, and as noted in the latter
>> issue, the problems occurring differ by input order.
>>
>
> Well, that's disappointing that 794 and 936 still have failures.
> Especially because 794 was also reported as JTS 300:
>
> https://github.com/locationtech/jts/issues/300
>
> and the test data there is incoporated in the robustness test suilte in
> both JTS [1] and GEOS [2] , where it passes using OverlayNG.
>
> Is there any way to get a dump of the actual input geometries to GEOS which
> are causing these errors?

I've prepared a 13.7GB WKT file (I think - trying to tidy it up), but this 
looks like overkill. My present take after stepping back from the original 
question - which language multipolygons intersect each other and what are 
the combined geometries - to run N=7510 intersections between all and each 
in turn. These did not fail with Overlay-NG, but maybe didn't fail before 
either. All with all was probably an unhelpful understanding of how 
intersection works initially. Further, the list of all-with-each contains 
many non-polygon artefacts, which probably need to be discarded anyway.

So far for now,

Roger

>
> [1]
> https://github.com/locationtech/jts/blob/master/modules/tests/src/test/resources/testxml/robust/overlay/TestOverlay-jts-300.xml
> [2]
> https://git.osgeo.org/gitea/geos/geos/src/branch/master/tests/xmltester/tests/robust/overlay/TestOverlay-jts-300.xml
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From geos-trac at osgeo.org  Tue Oct 20 07:37:26 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 20 Oct 2020 14:37:26 -0000
Subject: [geos-devel] [GEOS] #1059: Cannot build GEOS on Windows 10 under
	MinGW
Message-ID: <047.65d740a306713594cb22add661480e8b@osgeo.org>

#1059: Cannot build GEOS on Windows 10 under MinGW
------------------------+--------------------------
 Reporter:  twrackers   |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  3.8.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Followed the instructions on this site for MinGW, and at the "ld" step I
 get a whole series of messages like this:

 c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe:
 CMakeFiles/geos.dir/objects.a(MaximalEdgeRing.cpp.obj):MaximalEdgeRing.cpp:(.text$_ZN4geos9operation7overlay15MinimalEdgeRingD0Ev[__ZN4geos9operation7overlay15MinimalEdgeRingD0Ev]+0x0):
 multiple definition of
 `geos::operation::overlay::MinimalEdgeRing::~MinimalEdgeRing()';
 CMakeFiles/geos.dir/objects.a(inlines.cpp.obj):inlines.cpp:(.text+0x410):
 first defined here

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1059>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Oct 20 09:50:00 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 20 Oct 2020 16:50:00 -0000
Subject: [geos-devel] [GEOS] #1060: Cannot build GEOS on Windows 10 under
	MinGW
Message-ID: <047.d8dd210a8b3cae26de191dc37666f498@osgeo.org>

#1060: Cannot build GEOS on Windows 10 under MinGW
------------------------+-----------------------------
 Reporter:  twrackers   |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:  MinGW geos make
------------------------+-----------------------------
 New issue: Under MinGW on Windows 10 host, ran following commands.

 export PROJECTS=/c/minGW/projects
 export GEOS_VER=3.8.1
 export OS_BUILD=64

 cmake -G "MSYS Makefiles" ../trunk -DCMAKE_BUILD_TYPE=Release \
 -DCMAKE_INSTALL_PREFIX:PATH=${PROJECTS}/geos/rel-${GEOS_VER}w${OS_BUILD} \
  -DHAVE_STD_ISNAN=1 -DHAVE_LONG_LONG_INT_64=1 -DDISABLE_GEOS_INLINE=ON \
 -DGEOS_ENABLE_TESTS=ON

 make

 Build terminates with:

 ...
 [ 99%] Building CXX object
 tools/astyle/CMakeFiles/astyle.dir/ASLocalizer.cpp.obj
 [100%] Building CXX object
 tools/astyle/CMakeFiles/astyle.dir/ASResource.cpp.obj
 [100%] Building CXX object
 tools/astyle/CMakeFiles/astyle.dir/astyle_main.cpp.obj
 In file included from
 c:/Users/609798/geos-3.8.1/trunk/tools/astyle/astyle_main.cpp:36:
 c:/Users/609798/geos-3.8.1/trunk/tools/astyle/astyle_main.h:74:4: error:
 #error - Use MinGW compiler version 4 or higher
    74 |   #error - Use MinGW compiler version 4 or higher
       |    ^~~~~
 make[2]: *** [tools/astyle/CMakeFiles/astyle.dir/astyle_main.cpp.obj]
 Error 1
 make[1]: *** [tools/astyle/CMakeFiles/astyle.dir/all] Error 2
 make: *** [all] Error 2

 I am using the most current MinGW compiler, 9.2.0.  How do I fix this?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1060>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Oct 20 09:51:30 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 20 Oct 2020 16:51:30 -0000
Subject: [geos-devel] [GEOS] #1061: Cannot build GEOS on Windows 10 under
	MinGW
Message-ID: <047.7e6fca943d9812956254e165f3f9ca71@osgeo.org>

#1061: Cannot build GEOS on Windows 10 under MinGW
------------------------+-----------------------------
 Reporter:  twrackers   |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:  MinGW geos make
------------------------+-----------------------------
 New issue: Under MinGW on Windows 10 host, ran following commands.

 export PROJECTS=/c/minGW/projects

 export GEOS_VER=3.8.1

 export OS_BUILD=64

 cmake -G "MSYS Makefiles" ../trunk -DCMAKE_BUILD_TYPE=Release \
 -DCMAKE_INSTALL_PREFIX:PATH=${PROJECTS}/geos/rel-${GEOS_VER}w${OS_BUILD} \
  -DHAVE_STD_ISNAN=1 -DHAVE_LONG_LONG_INT_64=1 -DDISABLE_GEOS_INLINE=ON \
 -DGEOS_ENABLE_TESTS=ON

 make

 Build terminates with:

 ...
 [ 99%] Building CXX object
 tools/astyle/CMakeFiles/astyle.dir/ASLocalizer.cpp.obj
 [100%] Building CXX object
 tools/astyle/CMakeFiles/astyle.dir/ASResource.cpp.obj
 [100%] Building CXX object
 tools/astyle/CMakeFiles/astyle.dir/astyle_main.cpp.obj
 In file included from
 c:/Users/609798/geos-3.8.1/trunk/tools/astyle/astyle_main.cpp:36:
 c:/Users/609798/geos-3.8.1/trunk/tools/astyle/astyle_main.h:74:4: error:
 #error - Use MinGW compiler version 4 or higher
    74 |   #error - Use MinGW compiler version 4 or higher
       |    ^~~~~
 make[2]: *** [tools/astyle/CMakeFiles/astyle.dir/astyle_main.cpp.obj]
 Error 1
 make[1]: *** [tools/astyle/CMakeFiles/astyle.dir/all] Error 2
 make: *** [all] Error 2

 I am using the most current MinGW compiler, 9.2.0.  How do I fix this?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1061>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Oct 20 09:52:44 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 20 Oct 2020 16:52:44 -0000
Subject: [geos-devel] [GEOS] #1060: Cannot build GEOS on Windows 10
	under MinGW
In-Reply-To: <047.d8dd210a8b3cae26de191dc37666f498@osgeo.org>
References: <047.d8dd210a8b3cae26de191dc37666f498@osgeo.org>
Message-ID: <062.5ef46fbe14985d4dc17cb8d9d9af770b@osgeo.org>

#1060: Cannot build GEOS on Windows 10 under MinGW
-----------------------------+---------------------------
 Reporter:  twrackers        |       Owner:  geos-devel@…
     Type:  defect           |      Status:  closed
 Priority:  major            |   Milestone:
Component:  Default          |     Version:  3.6.2
 Severity:  Unassigned       |  Resolution:  duplicate
 Keywords:  MinGW geos make  |
-----------------------------+---------------------------
Changes (by twrackers):

 * status:  new => closed
 * resolution:   => duplicate


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1060#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Oct 20 09:54:08 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 20 Oct 2020 16:54:08 -0000
Subject: [geos-devel] [GEOS] #1061: Cannot build GEOS on Windows 10
	under MinGW
In-Reply-To: <047.7e6fca943d9812956254e165f3f9ca71@osgeo.org>
References: <047.7e6fca943d9812956254e165f3f9ca71@osgeo.org>
Message-ID: <062.9102fa68def97134f37e60336fc94b43@osgeo.org>

#1061: Cannot build GEOS on Windows 10 under MinGW
-----------------------------+---------------------------
 Reporter:  twrackers        |       Owner:  geos-devel@…
     Type:  defect           |      Status:  new
 Priority:  major            |   Milestone:
Component:  Default          |     Version:  3.6.2
 Severity:  Unassigned       |  Resolution:
 Keywords:  MinGW geos make  |
-----------------------------+---------------------------

Comment (by twrackers):

 Sorry, pasted text in original ticket formatted badly.  I'm new to this
 site.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1061#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct 28 14:26:12 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 28 Oct 2020 21:26:12 -0000
Subject: [geos-devel] [GEOS] #1048: WKB representation of POINT EMPTY
	has 3 dimensions
In-Reply-To: <045.09b3c48e6a8017106287792e0a467f3d@osgeo.org>
References: <045.09b3c48e6a8017106287792e0a467f3d@osgeo.org>
Message-ID: <060.4a4e0ba5807dc03b78652b16f2316e71@osgeo.org>

#1048: WKB representation of POINT EMPTY has 3 dimensions
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by pramsey):

 In general the WKT reader and default creators try to create things with
 3d coordinates, which is counter to my own sense of "least surprise".
 Directly relating to this ticket, the EMPTY case in WKT reader fails to
 note the presence of any dimensionality tags in the input (POINT Z EMPTY)
 and just creates a 3d empty every time. Looks like most types will need to
 be touched to put this completely right.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1048#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Oct 29 18:01:14 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 30 Oct 2020 01:01:14 -0000
Subject: [geos-devel] [GEOS] #1005: Writing POINT EMPTY in WKB
In-Reply-To: <045.366567d3a98a536e7a5028bd2b4c1f41@osgeo.org>
References: <045.366567d3a98a536e7a5028bd2b4c1f41@osgeo.org>
Message-ID: <060.41d67a2c291f3639ab546da0866153c3@osgeo.org>

#1005: Writing POINT EMPTY in WKB
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Annoyance   |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by pramsey):

 In general the WKT parser did not parse in "GEOMETRY Z EMPTY" forms and
 notice there was a Z there. Point was fiddly to fix, and that still left
 other types, so I figured I'd fix them all... turns out the core model of
 GEOS/JTS can't even represent a "GEOMETRYCOLLECTION Z EMPTY" of any type.
 There's nowhere for the dimensionality to live!

 Also! The question of what to instantiate for a "POINT EMPTY",
 dimensionally speaking. The default in the code was a 3D empty. That
 seemed wrong to me, so I've moved it down to a 2D empty. That should also
 cause other things to harmonize. There was also a bug hiding, in the
 clone() method, that incorrectly cloned 2D POINT EMPTY.

 Anyways, just waiting for a CI build before merging, but suffice to say
 this isn't a *comprehensive* fix, since that requires some larger
 restructuring to even be able to represent some of these concepts that are
 expressible in WKT and WKB.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1005#comment:9>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Oct 29 18:02:35 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 30 Oct 2020 01:02:35 -0000
Subject: [geos-devel] [GEOS] #1048: WKB representation of POINT EMPTY
	has 3 dimensions
In-Reply-To: <045.09b3c48e6a8017106287792e0a467f3d@osgeo.org>
References: <045.09b3c48e6a8017106287792e0a467f3d@osgeo.org>
Message-ID: <060.65c3b28d4e8d21ba53558067e68f2fc8@osgeo.org>

#1048: WKB representation of POINT EMPTY has 3 dimensions
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by pramsey):

 In general the WKT parser did not parse in "GEOMETRY Z EMPTY" forms and
 notice there was a Z there. Point was fiddly to fix, and that still left
 other types, so I figured I'd fix them all... turns out the core model of
 GEOS/JTS can't even represent a "GEOMETRYCOLLECTION Z EMPTY" of any type.
 There's nowhere for the dimensionality to live!

 Also! The question of what to instantiate for a "POINT EMPTY",
 dimensionally speaking. The default in the code was a 3D empty. That
 seemed wrong to me, so I've moved it down to a 2D empty. That should also
 cause other things to harmonize. There was also a bug hiding, in the
 clone() method, that incorrectly cloned 2D POINT EMPTY.

 Anyways, just waiting for a CI build before merging, but suffice to say
 this isn't a *comprehensive* fix, since that requires some larger
 restructuring to even be able to represent some of these concepts that are
 expressible in WKT and WKB.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1048#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 30 05:24:39 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 30 Oct 2020 12:24:39 -0000
Subject: [geos-devel] [GEOS] #1063: Port OverlayNG Z handling from JTS
Message-ID: <042.8250135be9e8a324b6061aef49192332@osgeo.org>

#1063: Port OverlayNG Z handling from JTS
------------------------+--------------------------
 Reporter:  strk        |      Owner:  geos-devel@…
     Type:  task        |     Status:  assigned
 Priority:  major       |  Milestone:  3.9.0
Component:  Default     |    Version:  master
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 See https://github.com/locationtech/jts/issues/626

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1063>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 30 08:12:18 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 30 Oct 2020 15:12:18 -0000
Subject: [geos-devel] [GEOS] #1048: WKB representation of POINT EMPTY
	has 3 dimensions
In-Reply-To: <045.09b3c48e6a8017106287792e0a467f3d@osgeo.org>
References: <045.09b3c48e6a8017106287792e0a467f3d@osgeo.org>
Message-ID: <060.e69d76fb5c881be7f45ca4a1f7c4bc49@osgeo.org>

#1048: WKB representation of POINT EMPTY has 3 dimensions
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by Paul Ramsey <pramsey@…>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"708d32b2cd2dd3bedc38ff1d839368656b1f9626/git" 708d32b/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="708d32b2cd2dd3bedc38ff1d839368656b1f9626"
 Create new EMPTY geometry with 2D coordinates by default. Parse Z EMPTY
 geometry in WKT reader, for simple (non-multi) geometries. Closes #1048
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1048#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 30 08:15:06 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 30 Oct 2020 15:15:06 -0000
Subject: [geos-devel] [GEOS] #544: Port JTS bugfix and testcases for
 MCIndexSnapRounder / GeometryNoder
In-Reply-To: <042.7e9f33c775608d3344d9268e746d7671@osgeo.org>
References: <042.7e9f33c775608d3344d9268e746d7671@osgeo.org>
Message-ID: <057.5bd51d94844e95c55e1c7126235bb91c@osgeo.org>

#544: Port JTS bugfix and testcases for MCIndexSnapRounder / GeometryNoder
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.9.0
Component:  Default     |     Version:  3.3.3
 Severity:  Unassigned  |  Resolution:  wontfix
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 This is obsoleted by NG work.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/544#comment:10>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Fri Oct 30 12:47:27 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 30 Oct 2020 12:47:27 -0700
Subject: [geos-devel] OverlayNG as Default
Message-ID: <CACowWR03Dz614d_KGySSKqAR+zfpJTm7d-gk3Xge9yKm+yfhUA@mail.gmail.com>

OK, it's been a while, and I'd like to flip over GEOS master to use
OverlayNG as the engine behind

Geometry.intersection()
Geometry.difference()
Geometry.union()
Geometry.symdifference()
Geometry.unaryunion()

That will entail changing the expected outputs for a few of the regression
tests, as detailed here.

https://docs.google.com/document/d/1TDm2aR4a7O41-soS-25Xog1EdQcjmvKCnKltxjbxOC0/edit#heading=h.ojs23hjdmk7a

Once that is done, regressions in PostGIS and other downstream projects can
be #ifdef'ed around GEOS version. As seen in the document above, there
actually aren't than many cases that need special handling in PostGIS, and
hopefully not in other downstream projects.

If you have any concerns, please light your hair on fair in the next couple
days.

P.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201030/e0f34f54/attachment.html>

From lr at pcorp.us  Fri Oct 30 13:09:58 2020
From: lr at pcorp.us (Regina Obe)
Date: Fri, 30 Oct 2020 16:09:58 -0400
Subject: [geos-devel] OverlayNG as Default
In-Reply-To: <CACowWR03Dz614d_KGySSKqAR+zfpJTm7d-gk3Xge9yKm+yfhUA@mail.gmail.com>
References: <CACowWR03Dz614d_KGySSKqAR+zfpJTm7d-gk3Xge9yKm+yfhUA@mail.gmail.com>
Message-ID: <003001d6aef8$a4f6d2d0$eee47870$@pcorp.us>

+1 for flipping the switch.

 

I don’t know what “light your hair on fair”   means :)

 

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Paul Ramsey
Sent: Friday, October 30, 2020 3:47 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: [geos-devel] OverlayNG as Default

 

OK, it's been a while, and I'd like to flip over GEOS master to use OverlayNG as the engine behind

 

Geometry.intersection()

Geometry.difference()

Geometry.union()

Geometry.symdifference()

Geometry.unaryunion()

 

That will entail changing the expected outputs for a few of the regression tests, as detailed here.

 

https://docs.google.com/document/d/1TDm2aR4a7O41-soS-25Xog1EdQcjmvKCnKltxjbxOC0/edit#heading=h.ojs23hjdmk7a

 

Once that is done, regressions in PostGIS and other downstream projects can be #ifdef'ed around GEOS version. As seen in the document above, there actually aren't than many cases that need special handling in PostGIS, and hopefully not in other downstream projects.

 

If you have any concerns, please light your hair on fair in the next couple days.

 

P.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201030/14c8f86f/attachment.html>

From geos-trac at osgeo.org  Sat Oct 31 16:58:46 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 31 Oct 2020 23:58:46 -0000
Subject: [geos-devel] [GEOS] #1035: VoronoiLines and VoronoiPolygons
 hangs indefinitely on multipoint
In-Reply-To: <042.b44dd6231ab929e07a7dd7f0117df6d9@osgeo.org>
References: <042.b44dd6231ab929e07a7dd7f0117df6d9@osgeo.org>
Message-ID: <057.b2722ba974162e85263fd76d00b533ae@osgeo.org>

#1035: VoronoiLines and VoronoiPolygons hangs indefinitely on multipoint
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 See also #976 and #859.

 This case works fine in JTS.
 It seems that the fix that worked in JTS (computing triangle
 circumcentres) does not work in GEOS?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1035#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 31 17:04:32 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 01 Nov 2020 00:04:32 -0000
Subject: [geos-devel] [GEOS] #1064: Topology preserve simplify: unexpected
 behavior on similar polygons
Message-ID: <045.abe8b92b93d463fda61bf648574f5880@osgeo.org>

#1064: Topology preserve simplify: unexpected behavior on similar polygons
------------------------+--------------------------
 Reporter:  uclaros     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  minor       |  Milestone:
Component:  Default     |    Version:  master
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 When simplifying a polygon, the first/last vertex is not removed even when
 within the threshold.
 The following WKT polygons are essentially the same polygon, each time
 with a different first/last vertex:

 {{{
 Polygon((0 42, 0 100, 42 100, 100 42, 42 42, 0 42))
 Polygon((0 100, 42 100, 100 42, 42 42, 0 42, 0 100))
 Polygon((42 100, 100 42, 42 42, 0 42, 0 100, 42 100))
 Polygon((100 42, 42 42, 0 42, 0 100, 42 100, 100 42))
 Polygon((42 42, 0 42, 0 100, 42 100, 100 42, 42 42))
 }}}

 simplifying those polygons with a threshold of 1 should give the same
 result, ie remove the vertex at (42,42) but in the last case this does not
 happen and the input polygon is returned untouched.

 If we remove the vertex at (0,100) and rerun the test:
 {{{
 Polygon((0 42, 42 100, 100 42, 42 42, 0 42))
 Polygon((42 100, 100 42, 42 42, 0 42, 42 100))
 Polygon((100 42, 42 42, 0 42, 42 100, 100 42))
 Polygon((42 42, 0 42, 42 100, 100 42, 42 42))
 }}}
 then only the second polygon gives the correct result, all the others are
 returned untouched

 Tested in QGIS with geos 3.9.0dev :
 {{{
 QgsGeometry.fromWkt('Polygon((0 42, 42 100, 100 42, 42 42, 0
 42))').simplify(1)
 QgsGeometry.fromWkt('Polygon((42 100, 100 42, 42 42, 0 42, 42
 100))').simplify(1)
 QgsGeometry.fromWkt('Polygon((100 42, 42 42, 0 42, 42 100, 100
 42))').simplify(1)
 QgsGeometry.fromWkt('Polygon((42 42, 0 42, 42 100, 100 42, 42
 42))').simplify(1)

 QgsGeometry.fromWkt('Polygon((0 42, 0 100, 42 100, 100 42, 42 42, 0
 42))').simplify(1)
 QgsGeometry.fromWkt('Polygon((0 100, 42 100, 100 42, 42 42, 0 42, 0
 100))').simplify(1)
 QgsGeometry.fromWkt('Polygon((42 100, 100 42, 42 42, 0 42, 0 100, 42
 100))').simplify(1)
 QgsGeometry.fromWkt('Polygon((100 42, 42 42, 0 42, 0 100, 42 100, 100
 42))').simplify(1)
 QgsGeometry.fromWkt('Polygon((42 42, 0 42, 0 100, 42 100, 100 42, 42
 42))').simplify(1)
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1064>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 31 17:26:12 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 01 Nov 2020 00:26:12 -0000
Subject: [geos-devel] [GEOS] #1064: Topology preserve simplify:
 unexpected behavior on similar polygons
In-Reply-To: <045.abe8b92b93d463fda61bf648574f5880@osgeo.org>
References: <045.abe8b92b93d463fda61bf648574f5880@osgeo.org>
Message-ID: <060.f4f647008516c4bb44228b42aaeb9407@osgeo.org>

#1064: Topology preserve simplify: unexpected behavior on similar polygons
------------------------+---------------------------
 Reporter:  uclaros     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  minor       |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * milestone:   => 3.9.0


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1064#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 31 21:32:46 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 01 Nov 2020 04:32:46 -0000
Subject: [geos-devel] [GEOS] #1035: VoronoiLines and VoronoiPolygons
 hangs indefinitely on multipoint
In-Reply-To: <042.b44dd6231ab929e07a7dd7f0117df6d9@osgeo.org>
References: <042.b44dd6231ab929e07a7dd7f0117df6d9@osgeo.org>
Message-ID: <057.9974a6d2a53b9b2488480248b284e5e4@osgeo.org>

#1035: VoronoiLines and VoronoiPolygons hangs indefinitely on multipoint
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 That's a pretty massive tolerance value compared to the scale of the
 input.  It's possible that has something to do with the infinite loop.  If
 so, still need to figure out a way to disallow it, at least.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1035#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

