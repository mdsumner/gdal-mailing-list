From pramsey at cleverelephant.ca  Wed Jun  1 13:36:44 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 1 Jun 2022 13:36:44 -0700
Subject: [geos-devel] Stable Patch Releases
Message-ID: <D879FFEA-3D3F-491B-80DF-9474990B37B7@cleverelephant.ca>

Just getting the last changes to the CAPI into main, but in the meanwhile, would like approval to push out all the extant stable patch releases, 3.7, 3.8, 3.9, 3.10.

+1!

P

From lr at pcorp.us  Wed Jun  1 14:57:48 2022
From: lr at pcorp.us (Regina Obe)
Date: Wed, 1 Jun 2022 17:57:48 -0400
Subject: [geos-devel] Stable Patch Releases
In-Reply-To: <D879FFEA-3D3F-491B-80DF-9474990B37B7@cleverelephant.ca>
References: <D879FFEA-3D3F-491B-80DF-9474990B37B7@cleverelephant.ca>
Message-ID: <001f01d87602$a2933c40$e7b9b4c0$@pcorp.us>

> Just getting the last changes to the CAPI into main, but in the meanwhile,
> would like approval to push out all the extant stable patch releases, 3.7,
3.8,
> 3.9, 3.10.
> 
> +1!
> 
> P
[Regina Obe] 
+1


From pramsey at cleverelephant.ca  Thu Jun  2 10:05:21 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 2 Jun 2022 10:05:21 -0700
Subject: [geos-devel] Stable Patch Releases
In-Reply-To: <001f01d87602$a2933c40$e7b9b4c0$@pcorp.us>
References: <D879FFEA-3D3F-491B-80DF-9474990B37B7@cleverelephant.ca>
 <001f01d87602$a2933c40$e7b9b4c0$@pcorp.us>
Message-ID: <CACowWR0aJL6Xn+Vs5-G5Gmsv_EN3CsPuNZ72GD=W=F_EQbMXQg@mail.gmail.com>

Hearing no objection, I'm going to start chewing through these.
P

On Wed, Jun 1, 2022 at 2:57 PM Regina Obe <lr at pcorp.us> wrote:
>
> > Just getting the last changes to the CAPI into main, but in the meanwhile,
> > would like approval to push out all the extant stable patch releases, 3.7,
> 3.8,
> > 3.9, 3.10.
> >
> > +1!
> >
> > P
> [Regina Obe]
> +1
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

From pramsey at cleverelephant.ca  Thu Jun  2 11:46:00 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 2 Jun 2022 11:46:00 -0700
Subject: [geos-devel] Zero Copy Mafia
Message-ID: <D599A0B3-1F3F-4BA4-80A8-E0F3E05573F6@cleverelephant.ca>

They are coming for us, they are in the ceiling, they are in the room wtih us...

https://dewey.dunnington.ca/post/2022/building-bridges-arrow-parquet-and-geospatial-computing/



From lr at pcorp.us  Thu Jun  2 11:53:20 2022
From: lr at pcorp.us (Regina Obe)
Date: Thu, 2 Jun 2022 14:53:20 -0400
Subject: [geos-devel] Zero Copy Mafia
In-Reply-To: <D599A0B3-1F3F-4BA4-80A8-E0F3E05573F6@cleverelephant.ca>
References: <D599A0B3-1F3F-4BA4-80A8-E0F3E05573F6@cleverelephant.ca>
Message-ID: <001601d876b2$07d3ffe0$177bffa0$@pcorp.us>

> They are coming for us, they are in the ceiling, they are in the room wtih
us...
> 
> https://dewey.dunnington.ca/post/2022/building-bridges-arrow-parquet-and-
> geospatial-computing/
> 
> 
[Regina Obe] 
Yah I've been hearing a lot about GeoParquet in the last month or so.
I hadn't even heard about GeoParquet as a thing until recently

Of course you are partly to blame Paul :)  As you have been implicated in
that article with a link to your blog entry -
https://www.crunchydata.com/blog/parquet-and-postgres-in-the-data-lake




From mtnclimb at gmail.com  Thu Jun  2 11:58:59 2022
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 2 Jun 2022 11:58:59 -0700
Subject: [geos-devel] Zero Copy Mafia
In-Reply-To: <D599A0B3-1F3F-4BA4-80A8-E0F3E05573F6@cleverelephant.ca>
References: <D599A0B3-1F3F-4BA4-80A8-E0F3E05573F6@cleverelephant.ca>
Message-ID: <CAK2ens2wYHfW=FKf2mWLBHS9A+o0DX9wL-Q2V3Dvf6OWA2YGkQ@mail.gmail.com>

An ABI-stable C interface!  Sounds eerily familiar :)

https://arrow.apache.org/docs/format/CDataInterface.html

On Thu, Jun 2, 2022 at 11:46 AM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> They are coming for us, they are in the ceiling, they are in the room wtih
> us...
>
>
> https://dewey.dunnington.ca/post/2022/building-bridges-arrow-parquet-and-geospatial-computing/
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220602/c999a060/attachment.htm>

From mtnclimb at gmail.com  Thu Jun  2 12:53:20 2022
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 2 Jun 2022 12:53:20 -0700
Subject: [geos-devel] Zero Copy Mafia
In-Reply-To: <CAK2ens2wYHfW=FKf2mWLBHS9A+o0DX9wL-Q2V3Dvf6OWA2YGkQ@mail.gmail.com>
References: <D599A0B3-1F3F-4BA4-80A8-E0F3E05573F6@cleverelephant.ca>
 <CAK2ens2wYHfW=FKf2mWLBHS9A+o0DX9wL-Q2V3Dvf6OWA2YGkQ@mail.gmail.com>
Message-ID: <CAK2ens0qwtkgWR0YsV6s+MnKQ=r_AEBFxU11pmrSmX4NPqoBWQ@mail.gmail.com>

Also sounds familiar:  in
https://github.com/geopandas/geo-arrow-spec/blob/main/format.md

Except for Points, empty geometries can be faithfully represented as an
empty inner list.

Empty points can be represented as POINT (NaN NaN).

On Thu, Jun 2, 2022 at 11:58 AM Martin Davis <mtnclimb at gmail.com> wrote:

> An ABI-stable C interface!  Sounds eerily familiar :)
>
> https://arrow.apache.org/docs/format/CDataInterface.html
>
> On Thu, Jun 2, 2022 at 11:46 AM Paul Ramsey <pramsey at cleverelephant.ca>
> wrote:
>
>> They are coming for us, they are in the ceiling, they are in the room
>> wtih us...
>>
>>
>> https://dewey.dunnington.ca/post/2022/building-bridges-arrow-parquet-and-geospatial-computing/
>>
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220602/0fbae020/attachment.htm>

From pramsey at cleverelephant.ca  Fri Jun  3 09:44:46 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 3 Jun 2022 09:44:46 -0700
Subject: [geos-devel] Released 3.7.4, 3.8.3, 3.9.3, 3.10.3
Message-ID: <76EDE9CB-E042-47B3-904F-591B4E4C0271@cleverelephant.ca>

Hot and tasty downloads available! 

https://libgeos.org/posts/2022-06-03-geos-3-10-3-released/

Mostly in 3.10, as one would expect.


- Fixes/Improvements:
- VoronoiDiagramBuilder::setSites(const CoordinateSequence&) return sorted (GH-551)
- Add SnappingNoder seeding (Martin Davis)
- Fix RelateOp (and intersects predicate) for lines with intersections very near boundary (GH-570, Martin Davis)
- Fix segfault in Hausdorff distance with empty geometries (GH-569)
- Fix inf loop in PolygonTriangulator (GH-574, Andrew Stelter)
- Fix short circuit from TemplateSTRtree query (GH-577, Andrew Stelter)
- Fix IsValidOp to handle repeated node points (JTS-845, Martin Davis)
- Fix IsSimpleOp to handle closed LineStrings with repeated endpoints (JTS-851, Martin Davis)
- Add OverlayNG area check heuristic (JTS-812, Paul Ramsey)
- Improve test_geos_unit application error checking and reporting (Martin Davis)
- Fix LengthIndexedLine (via LengthLocationMap fix) (JTS-859, Martin Davis)
- Fix PolygonHoleJoiner (JTS-862, Martin Davis)
- Fix crash in GeometryNoder on empty intpu (GH-601, Paul Ramsey)
- Handle case where user sets explicit absolute lib and include dirs (GH-608, Paul Ramsey)
- Fix MinimumDiameter getMinimumRectangle for flat input (JTS-875, Martin Davis)
- Fix HilbertEncoder difference in ARM vs x64 (GH-579, Paul Ramsey)
- Fix BufferOp inverted ring check (JTS-878, Martin Davis)

From pramsey at cleverelephant.ca  Mon Jun  6 11:36:00 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 6 Jun 2022 11:36:00 -0700
Subject: [geos-devel] 3.11.0beta1
Message-ID: <939B6381-DB77-40AC-9615-AF0BE3590CE6@cleverelephant.ca>

Any objection to a beta release? We are feature complete for this release, so a quick packaging check release makes sense.

P.

From strk at kbt.io  Mon Jun  6 12:58:53 2022
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 6 Jun 2022 21:58:53 +0200
Subject: [geos-devel] 3.11.0beta1
In-Reply-To: <939B6381-DB77-40AC-9615-AF0BE3590CE6@cleverelephant.ca>
References: <939B6381-DB77-40AC-9615-AF0BE3590CE6@cleverelephant.ca>
Message-ID: <Yp5cfeqne+qHFkiR@c19>

On Mon, Jun 06, 2022 at 11:36:00AM -0700, Paul Ramsey wrote:
> Any objection to a beta release? We are feature complete for this release, so a quick packaging check release makes sense.

+1

--strk;

From lr at pcorp.us  Mon Jun  6 14:59:05 2022
From: lr at pcorp.us (Regina Obe)
Date: Mon, 6 Jun 2022 17:59:05 -0400
Subject: [geos-devel] 3.11.0beta1
In-Reply-To: <939B6381-DB77-40AC-9615-AF0BE3590CE6@cleverelephant.ca>
References: <939B6381-DB77-40AC-9615-AF0BE3590CE6@cleverelephant.ca>
Message-ID: <000c01d879f0$a493c810$edbb5830$@pcorp.us>

No objection from me.

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Monday, June 6, 2022 2:36 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] 3.11.0beta1
> 
> Any objection to a beta release? We are feature complete for this release,
so a
> quick packaging check release makes sense.
> 
> P.
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Thu Jun  9 12:09:55 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 9 Jun 2022 12:09:55 -0700
Subject: [geos-devel] DDISABLE_GEOS_INLINE
Message-ID: <878EDF9D-E8A6-46A9-A042-23D61F5C1E9E@cleverelephant.ca>

A few months ago we removed all the .inl files and got rid of the optionality around inlining... but we stll have DDISABLE_GEOS_INLINE. Any concerns about me ripping that out of the configuration options?

P

From lr at pcorp.us  Thu Jun  9 13:12:32 2022
From: lr at pcorp.us (Regina Obe)
Date: Thu, 9 Jun 2022 16:12:32 -0400
Subject: [geos-devel] DDISABLE_GEOS_INLINE
In-Reply-To: <878EDF9D-E8A6-46A9-A042-23D61F5C1E9E@cleverelephant.ca>
References: <878EDF9D-E8A6-46A9-A042-23D61F5C1E9E@cleverelephant.ca>
Message-ID: <000001d87c3d$4177f720$c467e560$@pcorp.us>

None from me. 

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Thursday, June 9, 2022 3:10 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] DDISABLE_GEOS_INLINE
> 
> A few months ago we removed all the .inl files and got rid of the
optionality
> around inlining... but we stll have DDISABLE_GEOS_INLINE. Any concerns
> about me ripping that out of the configuration options?
> 
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Sun Jun 12 17:07:05 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sun, 12 Jun 2022 17:07:05 -0700
Subject: [geos-devel] 3.11.0beta1 Released
Message-ID: <CACowWR1HVZrJGGLD3Dx_8Vc6LLitj6pDXmpKvdDMHFO_HV88Dg@mail.gmail.com>

Testing out release-on-tag, seems to work.

https://github.com/libgeos/geos/releases/tag/3.11.0beta1

Also available at the usual download location.

http://download.osgeo.org/geos/geos-3.11.0beta1.tar.bz2

We need to unravel the mystery of the MinGW versioning change for
Regina, and presumably we'll have some packaging issues to clean up,
but hopefully on track for a final release before the month ends or
sooner.

From lr at pcorp.us  Mon Jun 13 09:00:50 2022
From: lr at pcorp.us (Regina Obe)
Date: Mon, 13 Jun 2022 12:00:50 -0400
Subject: [geos-devel] mingw64 file libs changed
Message-ID: <003b01d87f3e$c0ff8220$42fe8660$@pcorp.us>

I mentioned this on IRC, and Paul is looking into why the change was made.

I'm mentioning here in case someone knows the reason.  Why was this change
made?

The library files on mingw64 changed:

For geos < 3.11 the files were 

libgeos.dll, libgeos_c.dll


For geos 3.11 (including the just released 3.11.0beta1)
libgeos_c-1.dll, libgeos-3.11.0.dll



From pramsey at cleverelephant.ca  Mon Jun 13 09:23:15 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 13 Jun 2022 09:23:15 -0700
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <003b01d87f3e$c0ff8220$42fe8660$@pcorp.us>
References: <003b01d87f3e$c0ff8220$42fe8660$@pcorp.us>
Message-ID: <FD80FE52-14EA-4D8C-83DF-6B6785FBE894@cleverelephant.ca>

https://github.com/manisandro/geos/commit/927e442ab1da361d3f487e2b620a878dd11f191d#commitcomment-75986489

> On Jun 13, 2022, at 9:00 AM, Regina Obe <lr at pcorp.us> wrote:
> 
> I mentioned this on IRC, and Paul is looking into why the change was made.
> 
> I'm mentioning here in case someone knows the reason.  Why was this change
> made?
> 
> The library files on mingw64 changed:
> 
> For geos < 3.11 the files were 
> 
> libgeos.dll, libgeos_c.dll
> 
> 
> For geos 3.11 (including the just released 3.11.0beta1)
> libgeos_c-1.dll, libgeos-3.11.0.dll
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Mon Jun 13 09:29:22 2022
From: lr at pcorp.us (Regina Obe)
Date: Mon, 13 Jun 2022 12:29:22 -0400
Subject: [geos-devel] mingw64 file libs changed
Message-ID: <004201d87f42$bd6e2130$384a6390$@pcorp.us>

Okay guess the question has been answered by

https://github.com/manisandro/geos/commit/927e442ab1da361d3f487e2b620a878dd1
1f191d

I'll have to live with it moving forward.

Thanks,
Regina

> -----Original Message-----
> From: Regina Obe [mailto:lr at pcorp.us]
> Sent: Monday, June 13, 2022 12:01 PM
> To: 'GEOS Development List' <geos-devel at lists.osgeo.org>
> Subject: mingw64 file libs changed
> 
> I mentioned this on IRC, and Paul is looking into why the change was made.
> 
> I'm mentioning here in case someone knows the reason.  Why was this
> change made?
> 
> The library files on mingw64 changed:
> 
> For geos < 3.11 the files were
> 
> libgeos.dll, libgeos_c.dll
> 
> 
> For geos 3.11 (including the just released 3.11.0beta1) libgeos_c-1.dll,
> libgeos-3.11.0.dll



From pramsey at cleverelephant.ca  Mon Jun 13 09:31:35 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 13 Jun 2022 09:31:35 -0700
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <004201d87f42$bd6e2130$384a6390$@pcorp.us>
References: <004201d87f42$bd6e2130$384a6390$@pcorp.us>
Message-ID: <C247A145-20AD-4C11-91B4-B42B032306F7@cleverelephant.ca>



> On Jun 13, 2022, at 9:29 AM, Regina Obe <lr at pcorp.us> wrote:
> 
> Okay guess the question has been answered by
> 
> https://github.com/manisandro/geos/commit/927e442ab1da361d3f487e2b620a878dd1
> 1f191d
> 
> I'll have to live with it moving forward.

I wouldn't say so necessarily. I took in a commit from someone with an opinion on MinGW (I had no opinion, so I took the commit) but the discussion in GDAL shows other MinGW people with other opinions, and, importantly I think, the folks at CMake (who see a *lot* of build cases) have not chosen to just slam in a file prefix on MinGW targets that have an SOVERSION set, even though they do so on when generating outputs for other platforms.

So I'd say it is very much up to you, as someone who has MinGW opinions.

P


> 
> Thanks,
> Regina
> 
>> -----Original Message-----
>> From: Regina Obe [mailto:lr at pcorp.us]
>> Sent: Monday, June 13, 2022 12:01 PM
>> To: 'GEOS Development List' <geos-devel at lists.osgeo.org>
>> Subject: mingw64 file libs changed
>> 
>> I mentioned this on IRC, and Paul is looking into why the change was made.
>> 
>> I'm mentioning here in case someone knows the reason.  Why was this
>> change made?
>> 
>> The library files on mingw64 changed:
>> 
>> For geos < 3.11 the files were
>> 
>> libgeos.dll, libgeos_c.dll
>> 
>> 
>> For geos 3.11 (including the just released 3.11.0beta1) libgeos_c-1.dll,
>> libgeos-3.11.0.dll
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Mon Jun 13 10:10:01 2022
From: lr at pcorp.us (Regina Obe)
Date: Mon, 13 Jun 2022 13:10:01 -0400
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <C247A145-20AD-4C11-91B4-B42B032306F7@cleverelephant.ca>
References: <004201d87f42$bd6e2130$384a6390$@pcorp.us>
 <C247A145-20AD-4C11-91B4-B42B032306F7@cleverelephant.ca>
Message-ID: <005401d87f48$6bd89ac0$4389d040$@pcorp.us>

Is there a way in CMake to make this an option.
I wouldn't want to inconvenience someone to satisfy me.
If I could have a switch I can turn on to get the old CMAKE behavior I'd be
very happy.

My use case is different from Manisandro. He's probably packaging for
pacman.

In my case, I can only ever have one geos version for each version of
PostgreSQL. Those all live in the respective PostgreSQL versioned folders

PostgreSQL/14/bin   , PostgreSQL/15/bin  ...



> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Monday, June 13, 2022 12:32 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] mingw64 file libs changed
> 
> 
> 
> > On Jun 13, 2022, at 9:29 AM, Regina Obe <lr at pcorp.us> wrote:
> >
> > Okay guess the question has been answered by
> >
> >
> https://github.com/manisandro/geos/commit/927e442ab1da361d3f487e2b6
> 20a
> > 878dd1
> > 1f191d
> >
> > I'll have to live with it moving forward.
> 
> I wouldn't say so necessarily. I took in a commit from someone with an
> opinion on MinGW (I had no opinion, so I took the commit) but the
discussion
> in GDAL shows other MinGW people with other opinions, and, importantly I
> think, the folks at CMake (who see a *lot* of build cases) have not chosen
to
> just slam in a file prefix on MinGW targets that have an SOVERSION set,
even
> though they do so on when generating outputs for other platforms.
> 
> So I'd say it is very much up to you, as someone who has MinGW opinions.
> 
> P
> 
> 
> >
> > Thanks,
> > Regina
> >
> >> -----Original Message-----
> >> From: Regina Obe [mailto:lr at pcorp.us]
> >> Sent: Monday, June 13, 2022 12:01 PM
> >> To: 'GEOS Development List' <geos-devel at lists.osgeo.org>
> >> Subject: mingw64 file libs changed
> >>
> >> I mentioned this on IRC, and Paul is looking into why the change was
> made.
> >>
> >> I'm mentioning here in case someone knows the reason.  Why was this
> >> change made?
> >>
> >> The library files on mingw64 changed:
> >>
> >> For geos < 3.11 the files were
> >>
> >> libgeos.dll, libgeos_c.dll
> >>
> >>
> >> For geos 3.11 (including the just released 3.11.0beta1)
> >> libgeos_c-1.dll, libgeos-3.11.0.dll
> >
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From manisandro at gmail.com  Mon Jun 13 10:33:12 2022
From: manisandro at gmail.com (Sandro Mani)
Date: Mon, 13 Jun 2022 19:33:12 +0200
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <005401d87f48$6bd89ac0$4389d040$@pcorp.us>
References: <004201d87f42$bd6e2130$384a6390$@pcorp.us>
 <C247A145-20AD-4C11-91B4-B42B032306F7@cleverelephant.ca>
 <005401d87f48$6bd89ac0$4389d040$@pcorp.us>
Message-ID: <e1aff5cc-6c62-880d-6a3c-e29600d52ef1@gmail.com>

Hi

I'm actually packaging for Fedora.

In short, autotools (and more recently, meson) both add suffixes to the 
shared library names with version number, cmake does not do so, but 
apparently just because no-one actually pursued it [1].

Why is it useful?

- Quickly picking out which packages need to be rebuild when a dependent 
package which carries an ABI incompatibilty is updated (i.e. dnf 
repoquery --whatrequires 'mingw64(libgeos_c-1.dll)'). This is *very* 
useful for packaging.
- Actually even noticing when an ABI incompatibility arises. Packagers 
often spot ABI incompatibilities when the so version of a library is 
bumped. This clearly requires upstream to properly set and update the 
soversion.
- For the same reason as above, versioned requires between packages
- Potentially, allowing parallel versions without DLL name collisions

Thanks
Sandro


[1] https://gitlab.kitware.com/cmake/cmake/-/issues/21716

On 13.06.22 19:10, Regina Obe wrote:
> Is there a way in CMake to make this an option.
> I wouldn't want to inconvenience someone to satisfy me.
> If I could have a switch I can turn on to get the old CMAKE behavior I'd be
> very happy.
>
> My use case is different from Manisandro. He's probably packaging for
> pacman.
>
> In my case, I can only ever have one geos version for each version of
> PostgreSQL. Those all live in the respective PostgreSQL versioned folders
>
> PostgreSQL/14/bin   , PostgreSQL/15/bin  ...
>
>
>
>> -----Original Message-----
>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
>> Paul Ramsey
>> Sent: Monday, June 13, 2022 12:32 PM
>> To: GEOS Development List <geos-devel at lists.osgeo.org>
>> Subject: Re: [geos-devel] mingw64 file libs changed
>>
>>
>>
>>> On Jun 13, 2022, at 9:29 AM, Regina Obe <lr at pcorp.us> wrote:
>>>
>>> Okay guess the question has been answered by
>>>
>>>
>> https://github.com/manisandro/geos/commit/927e442ab1da361d3f487e2b6
>> 20a
>>> 878dd1
>>> 1f191d
>>>
>>> I'll have to live with it moving forward.
>> I wouldn't say so necessarily. I took in a commit from someone with an
>> opinion on MinGW (I had no opinion, so I took the commit) but the
> discussion
>> in GDAL shows other MinGW people with other opinions, and, importantly I
>> think, the folks at CMake (who see a *lot* of build cases) have not chosen
> to
>> just slam in a file prefix on MinGW targets that have an SOVERSION set,
> even
>> though they do so on when generating outputs for other platforms.
>>
>> So I'd say it is very much up to you, as someone who has MinGW opinions.
>>
>> P
>>
>>
>>> Thanks,
>>> Regina
>>>
>>>> -----Original Message-----
>>>> From: Regina Obe [mailto:lr at pcorp.us]
>>>> Sent: Monday, June 13, 2022 12:01 PM
>>>> To: 'GEOS Development List' <geos-devel at lists.osgeo.org>
>>>> Subject: mingw64 file libs changed
>>>>
>>>> I mentioned this on IRC, and Paul is looking into why the change was
>> made.
>>>> I'm mentioning here in case someone knows the reason.  Why was this
>>>> change made?
>>>>
>>>> The library files on mingw64 changed:
>>>>
>>>> For geos < 3.11 the files were
>>>>
>>>> libgeos.dll, libgeos_c.dll
>>>>
>>>>
>>>> For geos 3.11 (including the just released 3.11.0beta1)
>>>> libgeos_c-1.dll, libgeos-3.11.0.dll
>>>
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

From lr at pcorp.us  Mon Jun 13 16:31:47 2022
From: lr at pcorp.us (Regina Obe)
Date: Mon, 13 Jun 2022 19:31:47 -0400
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <e1aff5cc-6c62-880d-6a3c-e29600d52ef1@gmail.com>
References: <004201d87f42$bd6e2130$384a6390$@pcorp.us>
 <C247A145-20AD-4C11-91B4-B42B032306F7@cleverelephant.ca>
 <005401d87f48$6bd89ac0$4389d040$@pcorp.us>
 <e1aff5cc-6c62-880d-6a3c-e29600d52ef1@gmail.com>
Message-ID: <000901d87f7d$c0756bf0$416043d0$@pcorp.us>

So what's your interest in mingw64?
Are you building mingw64 packages on Fedora?

The thing is libgeos_c.dll never changes (I'm fine with a c_1.dll for that) 
But the c++ api is unstable.
So why do I want this changing in every micro release when all that should be used is the C-API by packagers which is stable?



> -----Original Message-----
> From: Sandro Mani [mailto:manisandro at gmail.com]
> Sent: Monday, June 13, 2022 1:33 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>; Regina Obe
> <lr at pcorp.us>
> Subject: Re: [geos-devel] mingw64 file libs changed
> 
> Hi
> 
> I'm actually packaging for Fedora.
> 
> In short, autotools (and more recently, meson) both add suffixes to the
> shared library names with version number, cmake does not do so, but
> apparently just because no-one actually pursued it [1].
> 
> Why is it useful?
> 
> - Quickly picking out which packages need to be rebuild when a dependent
> package which carries an ABI incompatibilty is updated (i.e. dnf repoquery --
> whatrequires 'mingw64(libgeos_c-1.dll)'). This is *very* useful for packaging.
> - Actually even noticing when an ABI incompatibility arises. Packagers often
> spot ABI incompatibilities when the so version of a library is bumped. This
> clearly requires upstream to properly set and update the soversion.
> - For the same reason as above, versioned requires between packages
> - Potentially, allowing parallel versions without DLL name collisions
> 
> Thanks
> Sandro
> 
> 
> [1] https://gitlab.kitware.com/cmake/cmake/-/issues/21716
> 
> On 13.06.22 19:10, Regina Obe wrote:
> > Is there a way in CMake to make this an option.
> > I wouldn't want to inconvenience someone to satisfy me.
> > If I could have a switch I can turn on to get the old CMAKE behavior
> > I'd be very happy.
> >
> > My use case is different from Manisandro. He's probably packaging for
> > pacman.
> >
> > In my case, I can only ever have one geos version for each version of
> > PostgreSQL. Those all live in the respective PostgreSQL versioned
> > folders
> >
> > PostgreSQL/14/bin   , PostgreSQL/15/bin  ...
> >
> >
> >
> >> -----Original Message-----
> >> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
> >> Behalf Of Paul Ramsey
> >> Sent: Monday, June 13, 2022 12:32 PM
> >> To: GEOS Development List <geos-devel at lists.osgeo.org>
> >> Subject: Re: [geos-devel] mingw64 file libs changed
> >>
> >>
> >>
> >>> On Jun 13, 2022, at 9:29 AM, Regina Obe <lr at pcorp.us> wrote:
> >>>
> >>> Okay guess the question has been answered by
> >>>
> >>>
> >>
> https://github.com/manisandro/geos/commit/927e442ab1da361d3f487e2b6
> >> 20a
> >>> 878dd1
> >>> 1f191d
> >>>
> >>> I'll have to live with it moving forward.
> >> I wouldn't say so necessarily. I took in a commit from someone with
> >> an opinion on MinGW (I had no opinion, so I took the commit) but the
> > discussion
> >> in GDAL shows other MinGW people with other opinions, and,
> >> importantly I think, the folks at CMake (who see a *lot* of build
> >> cases) have not chosen
> > to
> >> just slam in a file prefix on MinGW targets that have an SOVERSION
> >> set,
> > even
> >> though they do so on when generating outputs for other platforms.
> >>
> >> So I'd say it is very much up to you, as someone who has MinGW opinions.
> >>
> >> P
> >>
> >>
> >>> Thanks,
> >>> Regina
> >>>
> >>>> -----Original Message-----
> >>>> From: Regina Obe [mailto:lr at pcorp.us]
> >>>> Sent: Monday, June 13, 2022 12:01 PM
> >>>> To: 'GEOS Development List' <geos-devel at lists.osgeo.org>
> >>>> Subject: mingw64 file libs changed
> >>>>
> >>>> I mentioned this on IRC, and Paul is looking into why the change
> >>>> was
> >> made.
> >>>> I'm mentioning here in case someone knows the reason.  Why was this
> >>>> change made?
> >>>>
> >>>> The library files on mingw64 changed:
> >>>>
> >>>> For geos < 3.11 the files were
> >>>>
> >>>> libgeos.dll, libgeos_c.dll
> >>>>
> >>>>
> >>>> For geos 3.11 (including the just released 3.11.0beta1)
> >>>> libgeos_c-1.dll, libgeos-3.11.0.dll
> >>>
> >>> _______________________________________________
> >>> geos-devel mailing list
> >>> geos-devel at lists.osgeo.org
> >>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >> _______________________________________________
> >> geos-devel mailing list
> >> geos-devel at lists.osgeo.org
> >> https://lists.osgeo.org/mailman/listinfo/geos-devel
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel


From manisandro at gmail.com  Mon Jun 13 23:04:40 2022
From: manisandro at gmail.com (Sandro Mani)
Date: Tue, 14 Jun 2022 08:04:40 +0200
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <000901d87f7d$c0756bf0$416043d0$@pcorp.us>
References: <004201d87f42$bd6e2130$384a6390$@pcorp.us>
 <C247A145-20AD-4C11-91B4-B42B032306F7@cleverelephant.ca>
 <005401d87f48$6bd89ac0$4389d040$@pcorp.us>
 <e1aff5cc-6c62-880d-6a3c-e29600d52ef1@gmail.com>
 <000901d87f7d$c0756bf0$416043d0$@pcorp.us>
Message-ID: <712988e4-030b-341d-10d1-017d297caedc@gmail.com>


On 14.06.22 01:31, Regina Obe wrote:
> So what's your interest in mingw64?
> Are you building mingw64 packages on Fedora?
Yes, resp. Fedora offers a fairly large collection of mingw packages in 
its repos. These can be used to cross-compile an application to Windows 
from Fedora.
>
> The thing is libgeos_c.dll never changes (I'm fine with a c_1.dll for that)
> But the c++ api is unstable.
> So why do I want this changing in every micro release when all that should be used is the C-API by packagers which is stable?
Well that's actually the reason why versioning is useful. If dependent 
packages use the unstable API of GEOS (whether they should or should 
not), you can pick up which are doing so by scanning the requires of the 
dependent packages for libgeos-$version.dll, and rebuild these when 
pushing the new GEOS version.
>
>
>
>> -----Original Message-----
>> From: Sandro Mani [mailto:manisandro at gmail.com]
>> Sent: Monday, June 13, 2022 1:33 PM
>> To: GEOS Development List <geos-devel at lists.osgeo.org>; Regina Obe
>> <lr at pcorp.us>
>> Subject: Re: [geos-devel] mingw64 file libs changed
>>
>> Hi
>>
>> I'm actually packaging for Fedora.
>>
>> In short, autotools (and more recently, meson) both add suffixes to the
>> shared library names with version number, cmake does not do so, but
>> apparently just because no-one actually pursued it [1].
>>
>> Why is it useful?
>>
>> - Quickly picking out which packages need to be rebuild when a dependent
>> package which carries an ABI incompatibilty is updated (i.e. dnf repoquery --
>> whatrequires 'mingw64(libgeos_c-1.dll)'). This is *very* useful for packaging.
>> - Actually even noticing when an ABI incompatibility arises. Packagers often
>> spot ABI incompatibilities when the so version of a library is bumped. This
>> clearly requires upstream to properly set and update the soversion.
>> - For the same reason as above, versioned requires between packages
>> - Potentially, allowing parallel versions without DLL name collisions
>>
>> Thanks
>> Sandro
>>
>>
>> [1] https://gitlab.kitware.com/cmake/cmake/-/issues/21716
>>
>> On 13.06.22 19:10, Regina Obe wrote:
>>> Is there a way in CMake to make this an option.
>>> I wouldn't want to inconvenience someone to satisfy me.
>>> If I could have a switch I can turn on to get the old CMAKE behavior
>>> I'd be very happy.
>>>
>>> My use case is different from Manisandro. He's probably packaging for
>>> pacman.
>>>
>>> In my case, I can only ever have one geos version for each version of
>>> PostgreSQL. Those all live in the respective PostgreSQL versioned
>>> folders
>>>
>>> PostgreSQL/14/bin   , PostgreSQL/15/bin  ...
>>>
>>>
>>>
>>>> -----Original Message-----
>>>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
>>>> Behalf Of Paul Ramsey
>>>> Sent: Monday, June 13, 2022 12:32 PM
>>>> To: GEOS Development List <geos-devel at lists.osgeo.org>
>>>> Subject: Re: [geos-devel] mingw64 file libs changed
>>>>
>>>>
>>>>
>>>>> On Jun 13, 2022, at 9:29 AM, Regina Obe <lr at pcorp.us> wrote:
>>>>>
>>>>> Okay guess the question has been answered by
>>>>>
>>>>>
>> https://github.com/manisandro/geos/commit/927e442ab1da361d3f487e2b6
>>>> 20a
>>>>> 878dd1
>>>>> 1f191d
>>>>>
>>>>> I'll have to live with it moving forward.
>>>> I wouldn't say so necessarily. I took in a commit from someone with
>>>> an opinion on MinGW (I had no opinion, so I took the commit) but the
>>> discussion
>>>> in GDAL shows other MinGW people with other opinions, and,
>>>> importantly I think, the folks at CMake (who see a *lot* of build
>>>> cases) have not chosen
>>> to
>>>> just slam in a file prefix on MinGW targets that have an SOVERSION
>>>> set,
>>> even
>>>> though they do so on when generating outputs for other platforms.
>>>>
>>>> So I'd say it is very much up to you, as someone who has MinGW opinions.
>>>>
>>>> P
>>>>
>>>>
>>>>> Thanks,
>>>>> Regina
>>>>>
>>>>>> -----Original Message-----
>>>>>> From: Regina Obe [mailto:lr at pcorp.us]
>>>>>> Sent: Monday, June 13, 2022 12:01 PM
>>>>>> To: 'GEOS Development List' <geos-devel at lists.osgeo.org>
>>>>>> Subject: mingw64 file libs changed
>>>>>>
>>>>>> I mentioned this on IRC, and Paul is looking into why the change
>>>>>> was
>>>> made.
>>>>>> I'm mentioning here in case someone knows the reason.  Why was this
>>>>>> change made?
>>>>>>
>>>>>> The library files on mingw64 changed:
>>>>>>
>>>>>> For geos < 3.11 the files were
>>>>>>
>>>>>> libgeos.dll, libgeos_c.dll
>>>>>>
>>>>>>
>>>>>> For geos 3.11 (including the just released 3.11.0beta1)
>>>>>> libgeos_c-1.dll, libgeos-3.11.0.dll
>>>>> _______________________________________________
>>>>> geos-devel mailing list
>>>>> geos-devel at lists.osgeo.org
>>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel

From Roger.Bivand at nhh.no  Tue Jun 14 03:59:10 2022
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 14 Jun 2022 12:59:10 +0200 (CEST)
Subject: [geos-devel] mingw64 file libs changed
Message-ID: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>

In R >= 4.2, Windows static linked binary packages linking to GEOS use 
MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:

https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/toolchain_libs/mxe/src/geos.mk

We currently hot-patch geos-config to modify it for static libs:

https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/toolchain_libs/mxe/src/geos-1-fixes.patch

We could hot-patch files in a GEOS >= 3.11.0 tarball to remove 
instructions creating versioned libraries, but have not yet tested RC1. R 
packages also need to list static linked libraries by name, and revising 
each of a dozen or so at each GEOS release would be error prone.

Is a cmake option a way to satisfy both those needing versioned, or 
unversioned library names?

Does anyone else use MXE; if so, might it make sense to feed changes in 
GEOS forward to MXE?

Best wishes,

Roger

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From manisandro at gmail.com  Tue Jun 14 05:00:07 2022
From: manisandro at gmail.com (Sandro Mani)
Date: Tue, 14 Jun 2022 14:00:07 +0200
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
Message-ID: <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>

Just a note: library versioning only applies to shared libraries, static 
libraries are unversioned. And FWIW, import libraries are also 
unversioned. So no link command should be affected (unless you are 
linking against the dll shared library rather than the dll.a import 
library).

Sandro

On 14.06.22 12:59, Roger Bivand wrote:
> In R >= 4.2, Windows static linked binary packages linking to GEOS use 
> MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
>
> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/toolchain_libs/mxe/src/geos.mk 
>
>
> We currently hot-patch geos-config to modify it for static libs:
>
> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/toolchain_libs/mxe/src/geos-1-fixes.patch 
>
>
> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove 
> instructions creating versioned libraries, but have not yet tested 
> RC1. R packages also need to list static linked libraries by name, and 
> revising each of a dozen or so at each GEOS release would be error prone.
>
> Is a cmake option a way to satisfy both those needing versioned, or 
> unversioned library names?
>
> Does anyone else use MXE; if so, might it make sense to feed changes 
> in GEOS forward to MXE?
>
> Best wishes,
>
> Roger
>

From lr at pcorp.us  Tue Jun 14 09:21:17 2022
From: lr at pcorp.us (Regina Obe)
Date: Tue, 14 Jun 2022 12:21:17 -0400
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
Message-ID: <001c01d8800a$c6d5d380$54817a80$@pcorp.us>

In my case, I need the c++ library statically linked into the geos C-api.
I need the geos c-API shared but not the c++ one.  The main reason for need
of c-api shared is all the extensions I ship rely on that.
So I don't want both statically linked.

Also for regression testing I do want to replace the c-lib without having to
recompile all my extensions.

Dan and strk had suggested a way to have the c++ be object .a so it can be
statically linked to the c lib.
I'm not sure how to do that in Cmake or if it is even currently possible.

So Sandro - my annoyance with your change is now I have this extra c++ lib
to worry about which was always a static name before and now is changing
with each micro release.

Thanks,
Regina


> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Sandro Mani
> Sent: Tuesday, June 14, 2022 8:00 AM
> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
> devel at lists.osgeo.org>
> Subject: Re: [geos-devel] mingw64 file libs changed
> 
> Just a note: library versioning only applies to shared libraries, static
libraries
> are unversioned. And FWIW, import libraries are also unversioned. So no
link
> command should be affected (unless you are linking against the dll shared
> library rather than the dll.a import library).
> 
> Sandro
> 
> On 14.06.22 12:59, Roger Bivand wrote:
> > In R >= 4.2, Windows static linked binary packages linking to GEOS use
> > MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
> >
> > https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/
> > toolchain_libs/mxe/src/geos.mk
> >
> >
> > We currently hot-patch geos-config to modify it for static libs:
> >
> > https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/
> > toolchain_libs/mxe/src/geos-1-fixes.patch
> >
> >
> > We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
> > instructions creating versioned libraries, but have not yet tested
> > RC1. R packages also need to list static linked libraries by name, and
> > revising each of a dozen or so at each GEOS release would be error
prone.
> >
> > Is a cmake option a way to satisfy both those needing versioned, or
> > unversioned library names?
> >
> > Does anyone else use MXE; if so, might it make sense to feed changes
> > in GEOS forward to MXE?
> >
> > Best wishes,
> >
> > Roger
> >
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Tue Jun 14 09:25:35 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 14 Jun 2022 09:25:35 -0700
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
Message-ID: <4323BA5E-1EFF-4EBA-BC7A-FDF6CEA600F0@cleverelephant.ca>

I'm tempted to put the versioned MinGW stuff behind an option and return to the default cmake output by default.
That doesn't get to your "ideal" scenario Regina, that would have to be yet another option, since most people are not probably going to want to totally hide the c++ DLL inside the c DLL.
But it's closer to what you were happy with before.
???
P

> On Jun 14, 2022, at 9:21 AM, Regina Obe <lr at pcorp.us> wrote:
> 
> In my case, I need the c++ library statically linked into the geos C-api.
> I need the geos c-API shared but not the c++ one.  The main reason for need
> of c-api shared is all the extensions I ship rely on that.
> So I don't want both statically linked.
> 
> Also for regression testing I do want to replace the c-lib without having to
> recompile all my extensions.
> 
> Dan and strk had suggested a way to have the c++ be object .a so it can be
> statically linked to the c lib.
> I'm not sure how to do that in Cmake or if it is even currently possible.
> 
> So Sandro - my annoyance with your change is now I have this extra c++ lib
> to worry about which was always a static name before and now is changing
> with each micro release.
> 
> Thanks,
> Regina
> 
> 
>> -----Original Message-----
>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
>> Sandro Mani
>> Sent: Tuesday, June 14, 2022 8:00 AM
>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
>> devel at lists.osgeo.org>
>> Subject: Re: [geos-devel] mingw64 file libs changed
>> 
>> Just a note: library versioning only applies to shared libraries, static
> libraries
>> are unversioned. And FWIW, import libraries are also unversioned. So no
> link
>> command should be affected (unless you are linking against the dll shared
>> library rather than the dll.a import library).
>> 
>> Sandro
>> 
>> On 14.06.22 12:59, Roger Bivand wrote:
>>> In R >= 4.2, Windows static linked binary packages linking to GEOS use
>>> MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
>>> 
>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/
>>> toolchain_libs/mxe/src/geos.mk
>>> 
>>> 
>>> We currently hot-patch geos-config to modify it for static libs:
>>> 
>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/
>>> toolchain_libs/mxe/src/geos-1-fixes.patch
>>> 
>>> 
>>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
>>> instructions creating versioned libraries, but have not yet tested
>>> RC1. R packages also need to list static linked libraries by name, and
>>> revising each of a dozen or so at each GEOS release would be error
> prone.
>>> 
>>> Is a cmake option a way to satisfy both those needing versioned, or
>>> unversioned library names?
>>> 
>>> Does anyone else use MXE; if so, might it make sense to feed changes
>>> in GEOS forward to MXE?
>>> 
>>> Best wishes,
>>> 
>>> Roger
>>> 
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Tue Jun 14 10:39:14 2022
From: lr at pcorp.us (Regina Obe)
Date: Tue, 14 Jun 2022 13:39:14 -0400
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <4323BA5E-1EFF-4EBA-BC7A-FDF6CEA600F0@cleverelephant.ca>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
 <4323BA5E-1EFF-4EBA-BC7A-FDF6CEA600F0@cleverelephant.ca>
Message-ID: <004301d88015$ab18d6f0$014a84d0$@pcorp.us>

Yap that works for me. 

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Tuesday, June 14, 2022 12:26 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Cc: Roger.Bivand at nhh.no
> Subject: Re: [geos-devel] mingw64 file libs changed
> 
> I'm tempted to put the versioned MinGW stuff behind an option and return
> to the default cmake output by default.
> That doesn't get to your "ideal" scenario Regina, that would have to be
yet
> another option, since most people are not probably going to want to
totally
> hide the c++ DLL inside the c DLL.
> But it's closer to what you were happy with before.
> ???
> P
> 
> > On Jun 14, 2022, at 9:21 AM, Regina Obe <lr at pcorp.us> wrote:
> >
> > In my case, I need the c++ library statically linked into the geos
C-api.
> > I need the geos c-API shared but not the c++ one.  The main reason for
> > need of c-api shared is all the extensions I ship rely on that.
> > So I don't want both statically linked.
> >
> > Also for regression testing I do want to replace the c-lib without
> > having to recompile all my extensions.
> >
> > Dan and strk had suggested a way to have the c++ be object .a so it
> > can be statically linked to the c lib.
> > I'm not sure how to do that in Cmake or if it is even currently
possible.
> >
> > So Sandro - my annoyance with your change is now I have this extra c++
> > lib to worry about which was always a static name before and now is
> > changing with each micro release.
> >
> > Thanks,
> > Regina
> >
> >
> >> -----Original Message-----
> >> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
> >> Behalf Of Sandro Mani
> >> Sent: Tuesday, June 14, 2022 8:00 AM
> >> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
> >> devel at lists.osgeo.org>
> >> Subject: Re: [geos-devel] mingw64 file libs changed
> >>
> >> Just a note: library versioning only applies to shared libraries,
> >> static
> > libraries
> >> are unversioned. And FWIW, import libraries are also unversioned. So
> >> no
> > link
> >> command should be affected (unless you are linking against the dll
> >> shared library rather than the dll.a import library).
> >>
> >> Sandro
> >>
> >> On 14.06.22 12:59, Roger Bivand wrote:
> >>> In R >= 4.2, Windows static linked binary packages linking to GEOS
> >>> use MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
> >>>
> >>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
> >>> 3/
> >>> toolchain_libs/mxe/src/geos.mk
> >>>
> >>>
> >>> We currently hot-patch geos-config to modify it for static libs:
> >>>
> >>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
> >>> 3/ toolchain_libs/mxe/src/geos-1-fixes.patch
> >>>
> >>>
> >>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
> >>> instructions creating versioned libraries, but have not yet tested
> >>> RC1. R packages also need to list static linked libraries by name,
> >>> and revising each of a dozen or so at each GEOS release would be
> >>> error
> > prone.
> >>>
> >>> Is a cmake option a way to satisfy both those needing versioned, or
> >>> unversioned library names?
> >>>
> >>> Does anyone else use MXE; if so, might it make sense to feed changes
> >>> in GEOS forward to MXE?
> >>>
> >>> Best wishes,
> >>>
> >>> Roger
> >>>
> >> _______________________________________________
> >> geos-devel mailing list
> >> geos-devel at lists.osgeo.org
> >> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From manisandro at gmail.com  Tue Jun 14 10:49:40 2022
From: manisandro at gmail.com (Sandro Mani)
Date: Tue, 14 Jun 2022 19:49:40 +0200
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
Message-ID: <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>

Can you point me to the Makefile / ... which is doing this linking? It 
should never be necessary to point to a versioned shared library name in 
a link command line. Static libraries are unversioned, and for the 
dynamic libraries the corresponding import libraries are also unversioned.

Sandro

On 14.06.22 18:21, Regina Obe wrote:
> In my case, I need the c++ library statically linked into the geos C-api.
> I need the geos c-API shared but not the c++ one.  The main reason for need
> of c-api shared is all the extensions I ship rely on that.
> So I don't want both statically linked.
>
> Also for regression testing I do want to replace the c-lib without having to
> recompile all my extensions.
>
> Dan and strk had suggested a way to have the c++ be object .a so it can be
> statically linked to the c lib.
> I'm not sure how to do that in Cmake or if it is even currently possible.
>
> So Sandro - my annoyance with your change is now I have this extra c++ lib
> to worry about which was always a static name before and now is changing
> with each micro release.
>
> Thanks,
> Regina
>
>
>> -----Original Message-----
>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
>> Sandro Mani
>> Sent: Tuesday, June 14, 2022 8:00 AM
>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
>> devel at lists.osgeo.org>
>> Subject: Re: [geos-devel] mingw64 file libs changed
>>
>> Just a note: library versioning only applies to shared libraries, static
> libraries
>> are unversioned. And FWIW, import libraries are also unversioned. So no
> link
>> command should be affected (unless you are linking against the dll shared
>> library rather than the dll.a import library).
>>
>> Sandro
>>
>> On 14.06.22 12:59, Roger Bivand wrote:
>>> In R >= 4.2, Windows static linked binary packages linking to GEOS use
>>> MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
>>>
>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/
>>> toolchain_libs/mxe/src/geos.mk
>>>
>>>
>>> We currently hot-patch geos-config to modify it for static libs:
>>>
>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt3/
>>> toolchain_libs/mxe/src/geos-1-fixes.patch
>>>
>>>
>>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
>>> instructions creating versioned libraries, but have not yet tested
>>> RC1. R packages also need to list static linked libraries by name, and
>>> revising each of a dozen or so at each GEOS release would be error
> prone.
>>> Is a cmake option a way to satisfy both those needing versioned, or
>>> unversioned library names?
>>>
>>> Does anyone else use MXE; if so, might it make sense to feed changes
>>> in GEOS forward to MXE?
>>>
>>> Best wishes,
>>>
>>> Roger
>>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel

From lr at pcorp.us  Tue Jun 14 11:05:00 2022
From: lr at pcorp.us (Regina Obe)
Date: Tue, 14 Jun 2022 14:05:00 -0400
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
 <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>
Message-ID: <005001d88019$4490d5f0$cdb281d0$@pcorp.us>

Sandro,

I'm not sure I understand your question.

The issue is not the linking of my code. It's the dependency of 

libgeos_c-1.dll

To libgeos-3.11.0.dll

I am trying to get rid of.  

All my code ends up having a dependency on libgeos_c-1.dll  (before libgeos_c.dll)
Which before linked to a unversioned libgeos.dll (this libgeos.dll was always called that so could be cleanly removed and replaced)

I don't care about if the c dll is called libgeos_c-1.dll or libgeos_c.dll.  
It's the annoyance of that c++ dll changing with every micro release.  
Cause these are harder to predict and uninstall as part of an install process.


> -----Original Message-----
> From: Sandro Mani [mailto:manisandro at gmail.com]
> Sent: Tuesday, June 14, 2022 1:50 PM
> To: Regina Obe <lr at pcorp.us>; 'GEOS Development List' <geos-
> devel at lists.osgeo.org>; Roger.Bivand at nhh.no
> Subject: Re: [geos-devel] mingw64 file libs changed
> 
> Can you point me to the Makefile / ... which is doing this linking? It should
> never be necessary to point to a versioned shared library name in a link
> command line. Static libraries are unversioned, and for the dynamic libraries
> the corresponding import libraries are also unversioned.
> 
> Sandro
> 
> On 14.06.22 18:21, Regina Obe wrote:
> > In my case, I need the c++ library statically linked into the geos C-api.
> > I need the geos c-API shared but not the c++ one.  The main reason for
> > need of c-api shared is all the extensions I ship rely on that.
> > So I don't want both statically linked.
> >
> > Also for regression testing I do want to replace the c-lib without
> > having to recompile all my extensions.
> >
> > Dan and strk had suggested a way to have the c++ be object .a so it
> > can be statically linked to the c lib.
> > I'm not sure how to do that in Cmake or if it is even currently possible.
> >
> > So Sandro - my annoyance with your change is now I have this extra c++
> > lib to worry about which was always a static name before and now is
> > changing with each micro release.
> >
> > Thanks,
> > Regina
> >
> >
> >> -----Original Message-----
> >> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
> >> Behalf Of Sandro Mani
> >> Sent: Tuesday, June 14, 2022 8:00 AM
> >> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
> >> devel at lists.osgeo.org>
> >> Subject: Re: [geos-devel] mingw64 file libs changed
> >>
> >> Just a note: library versioning only applies to shared libraries,
> >> static
> > libraries
> >> are unversioned. And FWIW, import libraries are also unversioned. So
> >> no
> > link
> >> command should be affected (unless you are linking against the dll
> >> shared library rather than the dll.a import library).
> >>
> >> Sandro
> >>
> >> On 14.06.22 12:59, Roger Bivand wrote:
> >>> In R >= 4.2, Windows static linked binary packages linking to GEOS
> >>> use MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
> >>>
> >>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
> >>> 3/
> >>> toolchain_libs/mxe/src/geos.mk
> >>>
> >>>
> >>> We currently hot-patch geos-config to modify it for static libs:
> >>>
> >>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
> >>> 3/ toolchain_libs/mxe/src/geos-1-fixes.patch
> >>>
> >>>
> >>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
> >>> instructions creating versioned libraries, but have not yet tested
> >>> RC1. R packages also need to list static linked libraries by name,
> >>> and revising each of a dozen or so at each GEOS release would be
> >>> error
> > prone.
> >>> Is a cmake option a way to satisfy both those needing versioned, or
> >>> unversioned library names?
> >>>
> >>> Does anyone else use MXE; if so, might it make sense to feed changes
> >>> in GEOS forward to MXE?
> >>>
> >>> Best wishes,
> >>>
> >>> Roger
> >>>
> >> _______________________________________________
> >> geos-devel mailing list
> >> geos-devel at lists.osgeo.org
> >> https://lists.osgeo.org/mailman/listinfo/geos-devel


From manisandro at gmail.com  Tue Jun 14 13:18:41 2022
From: manisandro at gmail.com (Sandro Mani)
Date: Tue, 14 Jun 2022 22:18:41 +0200
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <005001d88019$4490d5f0$cdb281d0$@pcorp.us>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
 <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>
 <005001d88019$4490d5f0$cdb281d0$@pcorp.us>
Message-ID: <baf03cd1-b96a-1f1a-b981-b647ecbdb9cb@gmail.com>

Ah now I understand, I had interpreted

 > In my case, I need the c++ library statically linked into the geos 
C-api. I need the geos c-API shared but not the c++ one. The main reason 
for need of c-api shared is all the extensions I ship rely on that. So I 
don't want both statically linked.

as if the issue was determining the link library name.

Sandro

On 14.06.22 20:05, Regina Obe wrote:
> Sandro,
>
> I'm not sure I understand your question.
>
> The issue is not the linking of my code. It's the dependency of
>
> libgeos_c-1.dll
>
> To libgeos-3.11.0.dll
>
> I am trying to get rid of.
>
> All my code ends up having a dependency on libgeos_c-1.dll  (before libgeos_c.dll)
> Which before linked to a unversioned libgeos.dll (this libgeos.dll was always called that so could be cleanly removed and replaced)
>
> I don't care about if the c dll is called libgeos_c-1.dll or libgeos_c.dll.
> It's the annoyance of that c++ dll changing with every micro release.
> Cause these are harder to predict and uninstall as part of an install process.
>
>
>> -----Original Message-----
>> From: Sandro Mani [mailto:manisandro at gmail.com]
>> Sent: Tuesday, June 14, 2022 1:50 PM
>> To: Regina Obe <lr at pcorp.us>; 'GEOS Development List' <geos-
>> devel at lists.osgeo.org>; Roger.Bivand at nhh.no
>> Subject: Re: [geos-devel] mingw64 file libs changed
>>
>> Can you point me to the Makefile / ... which is doing this linking? It should
>> never be necessary to point to a versioned shared library name in a link
>> command line. Static libraries are unversioned, and for the dynamic libraries
>> the corresponding import libraries are also unversioned.
>>
>> Sandro
>>
>> On 14.06.22 18:21, Regina Obe wrote:
>>> In my case, I need the c++ library statically linked into the geos C-api.
>>> I need the geos c-API shared but not the c++ one.  The main reason for
>>> need of c-api shared is all the extensions I ship rely on that.
>>> So I don't want both statically linked.
>>>
>>> Also for regression testing I do want to replace the c-lib without
>>> having to recompile all my extensions.
>>>
>>> Dan and strk had suggested a way to have the c++ be object .a so it
>>> can be statically linked to the c lib.
>>> I'm not sure how to do that in Cmake or if it is even currently possible.
>>>
>>> So Sandro - my annoyance with your change is now I have this extra c++
>>> lib to worry about which was always a static name before and now is
>>> changing with each micro release.
>>>
>>> Thanks,
>>> Regina
>>>
>>>
>>>> -----Original Message-----
>>>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
>>>> Behalf Of Sandro Mani
>>>> Sent: Tuesday, June 14, 2022 8:00 AM
>>>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
>>>> devel at lists.osgeo.org>
>>>> Subject: Re: [geos-devel] mingw64 file libs changed
>>>>
>>>> Just a note: library versioning only applies to shared libraries,
>>>> static
>>> libraries
>>>> are unversioned. And FWIW, import libraries are also unversioned. So
>>>> no
>>> link
>>>> command should be affected (unless you are linking against the dll
>>>> shared library rather than the dll.a import library).
>>>>
>>>> Sandro
>>>>
>>>> On 14.06.22 12:59, Roger Bivand wrote:
>>>>> In R >= 4.2, Windows static linked binary packages linking to GEOS
>>>>> use MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
>>>>>
>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
>>>>> 3/
>>>>> toolchain_libs/mxe/src/geos.mk
>>>>>
>>>>>
>>>>> We currently hot-patch geos-config to modify it for static libs:
>>>>>
>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
>>>>> 3/ toolchain_libs/mxe/src/geos-1-fixes.patch
>>>>>
>>>>>
>>>>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
>>>>> instructions creating versioned libraries, but have not yet tested
>>>>> RC1. R packages also need to list static linked libraries by name,
>>>>> and revising each of a dozen or so at each GEOS release would be
>>>>> error
>>> prone.
>>>>> Is a cmake option a way to satisfy both those needing versioned, or
>>>>> unversioned library names?
>>>>>
>>>>> Does anyone else use MXE; if so, might it make sense to feed changes
>>>>> in GEOS forward to MXE?
>>>>>
>>>>> Best wishes,
>>>>>
>>>>> Roger
>>>>>
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel

From pramsey at cleverelephant.ca  Wed Jun 15 09:16:48 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 15 Jun 2022 09:16:48 -0700
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <005001d88019$4490d5f0$cdb281d0$@pcorp.us>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
 <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>
 <005001d88019$4490d5f0$cdb281d0$@pcorp.us>
Message-ID: <76AF55AF-5EEE-450C-A34E-6CABE9A9B2E7@cleverelephant.ca>

This is in main now.

P

> On Jun 14, 2022, at 11:05 AM, Regina Obe <lr at pcorp.us> wrote:
> 
> Sandro,
> 
> I'm not sure I understand your question.
> 
> The issue is not the linking of my code. It's the dependency of 
> 
> libgeos_c-1.dll
> 
> To libgeos-3.11.0.dll
> 
> I am trying to get rid of.  
> 
> All my code ends up having a dependency on libgeos_c-1.dll  (before libgeos_c.dll)
> Which before linked to a unversioned libgeos.dll (this libgeos.dll was always called that so could be cleanly removed and replaced)
> 
> I don't care about if the c dll is called libgeos_c-1.dll or libgeos_c.dll.  
> It's the annoyance of that c++ dll changing with every micro release.  
> Cause these are harder to predict and uninstall as part of an install process.
> 
> 
>> -----Original Message-----
>> From: Sandro Mani [mailto:manisandro at gmail.com]
>> Sent: Tuesday, June 14, 2022 1:50 PM
>> To: Regina Obe <lr at pcorp.us>; 'GEOS Development List' <geos-
>> devel at lists.osgeo.org>; Roger.Bivand at nhh.no
>> Subject: Re: [geos-devel] mingw64 file libs changed
>> 
>> Can you point me to the Makefile / ... which is doing this linking? It should
>> never be necessary to point to a versioned shared library name in a link
>> command line. Static libraries are unversioned, and for the dynamic libraries
>> the corresponding import libraries are also unversioned.
>> 
>> Sandro
>> 
>> On 14.06.22 18:21, Regina Obe wrote:
>>> In my case, I need the c++ library statically linked into the geos C-api.
>>> I need the geos c-API shared but not the c++ one.  The main reason for
>>> need of c-api shared is all the extensions I ship rely on that.
>>> So I don't want both statically linked.
>>> 
>>> Also for regression testing I do want to replace the c-lib without
>>> having to recompile all my extensions.
>>> 
>>> Dan and strk had suggested a way to have the c++ be object .a so it
>>> can be statically linked to the c lib.
>>> I'm not sure how to do that in Cmake or if it is even currently possible.
>>> 
>>> So Sandro - my annoyance with your change is now I have this extra c++
>>> lib to worry about which was always a static name before and now is
>>> changing with each micro release.
>>> 
>>> Thanks,
>>> Regina
>>> 
>>> 
>>>> -----Original Message-----
>>>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
>>>> Behalf Of Sandro Mani
>>>> Sent: Tuesday, June 14, 2022 8:00 AM
>>>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
>>>> devel at lists.osgeo.org>
>>>> Subject: Re: [geos-devel] mingw64 file libs changed
>>>> 
>>>> Just a note: library versioning only applies to shared libraries,
>>>> static
>>> libraries
>>>> are unversioned. And FWIW, import libraries are also unversioned. So
>>>> no
>>> link
>>>> command should be affected (unless you are linking against the dll
>>>> shared library rather than the dll.a import library).
>>>> 
>>>> Sandro
>>>> 
>>>> On 14.06.22 12:59, Roger Bivand wrote:
>>>>> In R >= 4.2, Windows static linked binary packages linking to GEOS
>>>>> use MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
>>>>> 
>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
>>>>> 3/
>>>>> toolchain_libs/mxe/src/geos.mk
>>>>> 
>>>>> 
>>>>> We currently hot-patch geos-config to modify it for static libs:
>>>>> 
>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/ucrt
>>>>> 3/ toolchain_libs/mxe/src/geos-1-fixes.patch
>>>>> 
>>>>> 
>>>>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
>>>>> instructions creating versioned libraries, but have not yet tested
>>>>> RC1. R packages also need to list static linked libraries by name,
>>>>> and revising each of a dozen or so at each GEOS release would be
>>>>> error
>>> prone.
>>>>> Is a cmake option a way to satisfy both those needing versioned, or
>>>>> unversioned library names?
>>>>> 
>>>>> Does anyone else use MXE; if so, might it make sense to feed changes
>>>>> in GEOS forward to MXE?
>>>>> 
>>>>> Best wishes,
>>>>> 
>>>>> Roger
>>>>> 
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Wed Jun 15 09:32:37 2022
From: lr at pcorp.us (Regina Obe)
Date: Wed, 15 Jun 2022 12:32:37 -0400
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <76AF55AF-5EEE-450C-A34E-6CABE9A9B2E7@cleverelephant.ca>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
 <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>
 <005001d88019$4490d5f0$cdb281d0$@pcorp.us>
 <76AF55AF-5EEE-450C-A34E-6CABE9A9B2E7@cleverelephant.ca>
Message-ID: <000201d880d5$86a5ecc0$93f1c640$@pcorp.us>

Now I see libgeos_c-1.dll and libgeos.dll.

It's different from 3.9 and 3.10, which had libgeos_c.dll for the c-api lib
file but I'm fine with that.  Just want to make sure you intended to keep
that change.

Thanks,
Regina


> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Wednesday, June 15, 2022 12:17 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Cc: Roger.Bivand at nhh.no
> Subject: Re: [geos-devel] mingw64 file libs changed
> 
> This is in main now.
> 
> P
> 
> > On Jun 14, 2022, at 11:05 AM, Regina Obe <lr at pcorp.us> wrote:
> >
> > Sandro,
> >
> > I'm not sure I understand your question.
> >
> > The issue is not the linking of my code. It's the dependency of
> >
> > libgeos_c-1.dll
> >
> > To libgeos-3.11.0.dll
> >
> > I am trying to get rid of.
> >
> > All my code ends up having a dependency on libgeos_c-1.dll  (before
> > libgeos_c.dll) Which before linked to a unversioned libgeos.dll (this
> > libgeos.dll was always called that so could be cleanly removed and
> > replaced)
> >
> > I don't care about if the c dll is called libgeos_c-1.dll or
libgeos_c.dll.
> > It's the annoyance of that c++ dll changing with every micro release.
> > Cause these are harder to predict and uninstall as part of an install
process.
> >
> >
> >> -----Original Message-----
> >> From: Sandro Mani [mailto:manisandro at gmail.com]
> >> Sent: Tuesday, June 14, 2022 1:50 PM
> >> To: Regina Obe <lr at pcorp.us>; 'GEOS Development List' <geos-
> >> devel at lists.osgeo.org>; Roger.Bivand at nhh.no
> >> Subject: Re: [geos-devel] mingw64 file libs changed
> >>
> >> Can you point me to the Makefile / ... which is doing this linking?
> >> It should never be necessary to point to a versioned shared library
> >> name in a link command line. Static libraries are unversioned, and
> >> for the dynamic libraries the corresponding import libraries are also
> unversioned.
> >>
> >> Sandro
> >>
> >> On 14.06.22 18:21, Regina Obe wrote:
> >>> In my case, I need the c++ library statically linked into the geos
C-api.
> >>> I need the geos c-API shared but not the c++ one.  The main reason
> >>> for need of c-api shared is all the extensions I ship rely on that.
> >>> So I don't want both statically linked.
> >>>
> >>> Also for regression testing I do want to replace the c-lib without
> >>> having to recompile all my extensions.
> >>>
> >>> Dan and strk had suggested a way to have the c++ be object .a so it
> >>> can be statically linked to the c lib.
> >>> I'm not sure how to do that in Cmake or if it is even currently
possible.
> >>>
> >>> So Sandro - my annoyance with your change is now I have this extra
> >>> c++ lib to worry about which was always a static name before and now
> >>> is changing with each micro release.
> >>>
> >>> Thanks,
> >>> Regina
> >>>
> >>>
> >>>> -----Original Message-----
> >>>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
> >>>> Behalf Of Sandro Mani
> >>>> Sent: Tuesday, June 14, 2022 8:00 AM
> >>>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
> >>>> devel at lists.osgeo.org>
> >>>> Subject: Re: [geos-devel] mingw64 file libs changed
> >>>>
> >>>> Just a note: library versioning only applies to shared libraries,
> >>>> static
> >>> libraries
> >>>> are unversioned. And FWIW, import libraries are also unversioned.
> >>>> So no
> >>> link
> >>>> command should be affected (unless you are linking against the dll
> >>>> shared library rather than the dll.a import library).
> >>>>
> >>>> Sandro
> >>>>
> >>>> On 14.06.22 12:59, Roger Bivand wrote:
> >>>>> In R >= 4.2, Windows static linked binary packages linking to GEOS
> >>>>> use MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
> >>>>>
> >>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/uc
> >>>>> rt
> >>>>> 3/
> >>>>> toolchain_libs/mxe/src/geos.mk
> >>>>>
> >>>>>
> >>>>> We currently hot-patch geos-config to modify it for static libs:
> >>>>>
> >>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/uc
> >>>>> rt 3/ toolchain_libs/mxe/src/geos-1-fixes.patch
> >>>>>
> >>>>>
> >>>>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
> >>>>> instructions creating versioned libraries, but have not yet tested
> >>>>> RC1. R packages also need to list static linked libraries by name,
> >>>>> and revising each of a dozen or so at each GEOS release would be
> >>>>> error
> >>> prone.
> >>>>> Is a cmake option a way to satisfy both those needing versioned,
> >>>>> or unversioned library names?
> >>>>>
> >>>>> Does anyone else use MXE; if so, might it make sense to feed
> >>>>> changes in GEOS forward to MXE?
> >>>>>
> >>>>> Best wishes,
> >>>>>
> >>>>> Roger
> >>>>>
> >>>> _______________________________________________
> >>>> geos-devel mailing list
> >>>> geos-devel at lists.osgeo.org
> >>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Wed Jun 15 10:08:20 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 15 Jun 2022 10:08:20 -0700
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <000201d880d5$86a5ecc0$93f1c640$@pcorp.us>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
 <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>
 <005001d88019$4490d5f0$cdb281d0$@pcorp.us>
 <76AF55AF-5EEE-450C-A34E-6CABE9A9B2E7@cleverelephant.ca>
 <000201d880d5$86a5ecc0$93f1c640$@pcorp.us>
Message-ID: <D6A64154-6541-436C-A9EB-F0951183162A@cleverelephant.ca>



> On Jun 15, 2022, at 9:32 AM, Regina Obe <lr at pcorp.us> wrote:
> 
> Now I see libgeos_c-1.dll and libgeos.dll.
> 
> It's different from 3.9 and 3.10, which had libgeos_c.dll for the c-api lib
> file but I'm fine with that.  Just want to make sure you intended to keep
> that change.

Nope, missed a spot. Main should be back to original behaviour now.

P

> 
> Thanks,
> Regina
> 
> 
>> -----Original Message-----
>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
>> Paul Ramsey
>> Sent: Wednesday, June 15, 2022 12:17 PM
>> To: GEOS Development List <geos-devel at lists.osgeo.org>
>> Cc: Roger.Bivand at nhh.no
>> Subject: Re: [geos-devel] mingw64 file libs changed
>> 
>> This is in main now.
>> 
>> P
>> 
>>> On Jun 14, 2022, at 11:05 AM, Regina Obe <lr at pcorp.us> wrote:
>>> 
>>> Sandro,
>>> 
>>> I'm not sure I understand your question.
>>> 
>>> The issue is not the linking of my code. It's the dependency of
>>> 
>>> libgeos_c-1.dll
>>> 
>>> To libgeos-3.11.0.dll
>>> 
>>> I am trying to get rid of.
>>> 
>>> All my code ends up having a dependency on libgeos_c-1.dll  (before
>>> libgeos_c.dll) Which before linked to a unversioned libgeos.dll (this
>>> libgeos.dll was always called that so could be cleanly removed and
>>> replaced)
>>> 
>>> I don't care about if the c dll is called libgeos_c-1.dll or
> libgeos_c.dll.
>>> It's the annoyance of that c++ dll changing with every micro release.
>>> Cause these are harder to predict and uninstall as part of an install
> process.
>>> 
>>> 
>>>> -----Original Message-----
>>>> From: Sandro Mani [mailto:manisandro at gmail.com]
>>>> Sent: Tuesday, June 14, 2022 1:50 PM
>>>> To: Regina Obe <lr at pcorp.us>; 'GEOS Development List' <geos-
>>>> devel at lists.osgeo.org>; Roger.Bivand at nhh.no
>>>> Subject: Re: [geos-devel] mingw64 file libs changed
>>>> 
>>>> Can you point me to the Makefile / ... which is doing this linking?
>>>> It should never be necessary to point to a versioned shared library
>>>> name in a link command line. Static libraries are unversioned, and
>>>> for the dynamic libraries the corresponding import libraries are also
>> unversioned.
>>>> 
>>>> Sandro
>>>> 
>>>> On 14.06.22 18:21, Regina Obe wrote:
>>>>> In my case, I need the c++ library statically linked into the geos
> C-api.
>>>>> I need the geos c-API shared but not the c++ one.  The main reason
>>>>> for need of c-api shared is all the extensions I ship rely on that.
>>>>> So I don't want both statically linked.
>>>>> 
>>>>> Also for regression testing I do want to replace the c-lib without
>>>>> having to recompile all my extensions.
>>>>> 
>>>>> Dan and strk had suggested a way to have the c++ be object .a so it
>>>>> can be statically linked to the c lib.
>>>>> I'm not sure how to do that in Cmake or if it is even currently
> possible.
>>>>> 
>>>>> So Sandro - my annoyance with your change is now I have this extra
>>>>> c++ lib to worry about which was always a static name before and now
>>>>> is changing with each micro release.
>>>>> 
>>>>> Thanks,
>>>>> Regina
>>>>> 
>>>>> 
>>>>>> -----Original Message-----
>>>>>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
>>>>>> Behalf Of Sandro Mani
>>>>>> Sent: Tuesday, June 14, 2022 8:00 AM
>>>>>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
>>>>>> devel at lists.osgeo.org>
>>>>>> Subject: Re: [geos-devel] mingw64 file libs changed
>>>>>> 
>>>>>> Just a note: library versioning only applies to shared libraries,
>>>>>> static
>>>>> libraries
>>>>>> are unversioned. And FWIW, import libraries are also unversioned.
>>>>>> So no
>>>>> link
>>>>>> command should be affected (unless you are linking against the dll
>>>>>> shared library rather than the dll.a import library).
>>>>>> 
>>>>>> Sandro
>>>>>> 
>>>>>> On 14.06.22 12:59, Roger Bivand wrote:
>>>>>>> In R >= 4.2, Windows static linked binary packages linking to GEOS
>>>>>>> use MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
>>>>>>> 
>>>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/uc
>>>>>>> rt
>>>>>>> 3/
>>>>>>> toolchain_libs/mxe/src/geos.mk
>>>>>>> 
>>>>>>> 
>>>>>>> We currently hot-patch geos-config to modify it for static libs:
>>>>>>> 
>>>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/uc
>>>>>>> rt 3/ toolchain_libs/mxe/src/geos-1-fixes.patch
>>>>>>> 
>>>>>>> 
>>>>>>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
>>>>>>> instructions creating versioned libraries, but have not yet tested
>>>>>>> RC1. R packages also need to list static linked libraries by name,
>>>>>>> and revising each of a dozen or so at each GEOS release would be
>>>>>>> error
>>>>> prone.
>>>>>>> Is a cmake option a way to satisfy both those needing versioned,
>>>>>>> or unversioned library names?
>>>>>>> 
>>>>>>> Does anyone else use MXE; if so, might it make sense to feed
>>>>>>> changes in GEOS forward to MXE?
>>>>>>> 
>>>>>>> Best wishes,
>>>>>>> 
>>>>>>> Roger
>>>>>>> 
>>>>>> _______________________________________________
>>>>>> geos-devel mailing list
>>>>>> geos-devel at lists.osgeo.org
>>>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>> 
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>> 
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 


From lr at pcorp.us  Wed Jun 15 12:23:15 2022
From: lr at pcorp.us (Regina Obe)
Date: Wed, 15 Jun 2022 15:23:15 -0400
Subject: [geos-devel] mingw64 file libs changed
In-Reply-To: <D6A64154-6541-436C-A9EB-F0951183162A@cleverelephant.ca>
References: <c380d06f-d288-f61e-99e7-e33f23013d8@reclus2.nhh.no>
 <288da4c2-7b59-a4b1-274d-9b63618174a0@gmail.com>
 <001c01d8800a$c6d5d380$54817a80$@pcorp.us>
 <1ce9a3d0-da2b-6e66-d584-62c7deb8141f@gmail.com>
 <005001d88019$4490d5f0$cdb281d0$@pcorp.us>
 <76AF55AF-5EEE-450C-A34E-6CABE9A9B2E7@cleverelephant.ca>
 <000201d880d5$86a5ecc0$93f1c640$@pcorp.us>
 <D6A64154-6541-436C-A9EB-F0951183162A@cleverelephant.ca>
Message-ID: <000001d880ed$5d1855b0$17490110$@pcorp.us>

Back to old names now.

Thanks,
Regina

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Wednesday, June 15, 2022 1:08 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] mingw64 file libs changed
> 
> 
> 
> > On Jun 15, 2022, at 9:32 AM, Regina Obe <lr at pcorp.us> wrote:
> >
> > Now I see libgeos_c-1.dll and libgeos.dll.
> >
> > It's different from 3.9 and 3.10, which had libgeos_c.dll for the
> > c-api lib file but I'm fine with that.  Just want to make sure you
> > intended to keep that change.
> 
> Nope, missed a spot. Main should be back to original behaviour now.
> 
> P
> 
> >
> > Thanks,
> > Regina
> >
> >
> >> -----Original Message-----
> >> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
> >> Behalf Of Paul Ramsey
> >> Sent: Wednesday, June 15, 2022 12:17 PM
> >> To: GEOS Development List <geos-devel at lists.osgeo.org>
> >> Cc: Roger.Bivand at nhh.no
> >> Subject: Re: [geos-devel] mingw64 file libs changed
> >>
> >> This is in main now.
> >>
> >> P
> >>
> >>> On Jun 14, 2022, at 11:05 AM, Regina Obe <lr at pcorp.us> wrote:
> >>>
> >>> Sandro,
> >>>
> >>> I'm not sure I understand your question.
> >>>
> >>> The issue is not the linking of my code. It's the dependency of
> >>>
> >>> libgeos_c-1.dll
> >>>
> >>> To libgeos-3.11.0.dll
> >>>
> >>> I am trying to get rid of.
> >>>
> >>> All my code ends up having a dependency on libgeos_c-1.dll  (before
> >>> libgeos_c.dll) Which before linked to a unversioned libgeos.dll
> >>> (this libgeos.dll was always called that so could be cleanly removed
> >>> and
> >>> replaced)
> >>>
> >>> I don't care about if the c dll is called libgeos_c-1.dll or
> > libgeos_c.dll.
> >>> It's the annoyance of that c++ dll changing with every micro release.
> >>> Cause these are harder to predict and uninstall as part of an
> >>> install
> > process.
> >>>
> >>>
> >>>> -----Original Message-----
> >>>> From: Sandro Mani [mailto:manisandro at gmail.com]
> >>>> Sent: Tuesday, June 14, 2022 1:50 PM
> >>>> To: Regina Obe <lr at pcorp.us>; 'GEOS Development List' <geos-
> >>>> devel at lists.osgeo.org>; Roger.Bivand at nhh.no
> >>>> Subject: Re: [geos-devel] mingw64 file libs changed
> >>>>
> >>>> Can you point me to the Makefile / ... which is doing this linking?
> >>>> It should never be necessary to point to a versioned shared library
> >>>> name in a link command line. Static libraries are unversioned, and
> >>>> for the dynamic libraries the corresponding import libraries are
> >>>> also
> >> unversioned.
> >>>>
> >>>> Sandro
> >>>>
> >>>> On 14.06.22 18:21, Regina Obe wrote:
> >>>>> In my case, I need the c++ library statically linked into the geos
> > C-api.
> >>>>> I need the geos c-API shared but not the c++ one.  The main reason
> >>>>> for need of c-api shared is all the extensions I ship rely on that.
> >>>>> So I don't want both statically linked.
> >>>>>
> >>>>> Also for regression testing I do want to replace the c-lib without
> >>>>> having to recompile all my extensions.
> >>>>>
> >>>>> Dan and strk had suggested a way to have the c++ be object .a so
> >>>>> it can be statically linked to the c lib.
> >>>>> I'm not sure how to do that in Cmake or if it is even currently
> > possible.
> >>>>>
> >>>>> So Sandro - my annoyance with your change is now I have this extra
> >>>>> c++ lib to worry about which was always a static name before and
> >>>>> c++ now
> >>>>> is changing with each micro release.
> >>>>>
> >>>>> Thanks,
> >>>>> Regina
> >>>>>
> >>>>>
> >>>>>> -----Original Message-----
> >>>>>> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On
> >>>>>> Behalf Of Sandro Mani
> >>>>>> Sent: Tuesday, June 14, 2022 8:00 AM
> >>>>>> To: Roger.Bivand at nhh.no; GEOS Development List <geos-
> >>>>>> devel at lists.osgeo.org>
> >>>>>> Subject: Re: [geos-devel] mingw64 file libs changed
> >>>>>>
> >>>>>> Just a note: library versioning only applies to shared libraries,
> >>>>>> static
> >>>>> libraries
> >>>>>> are unversioned. And FWIW, import libraries are also unversioned.
> >>>>>> So no
> >>>>> link
> >>>>>> command should be affected (unless you are linking against the
> >>>>>> dll shared library rather than the dll.a import library).
> >>>>>>
> >>>>>> Sandro
> >>>>>>
> >>>>>> On 14.06.22 12:59, Roger Bivand wrote:
> >>>>>>> In R >= 4.2, Windows static linked binary packages linking to
> >>>>>>> GEOS use MXE, locally updating the MXE use of GEOS 3.6.2 to 3.9.1:
> >>>>>>>
> >>>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/
> >>>>>>> uc
> >>>>>>> rt
> >>>>>>> 3/
> >>>>>>> toolchain_libs/mxe/src/geos.mk
> >>>>>>>
> >>>>>>>
> >>>>>>> We currently hot-patch geos-config to modify it for static libs:
> >>>>>>>
> >>>>>>> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/
> >>>>>>> uc rt 3/ toolchain_libs/mxe/src/geos-1-fixes.patch
> >>>>>>>
> >>>>>>>
> >>>>>>> We could hot-patch files in a GEOS >= 3.11.0 tarball to remove
> >>>>>>> instructions creating versioned libraries, but have not yet
> >>>>>>> tested RC1. R packages also need to list static linked libraries
> >>>>>>> by name, and revising each of a dozen or so at each GEOS release
> >>>>>>> would be error
> >>>>> prone.
> >>>>>>> Is a cmake option a way to satisfy both those needing versioned,
> >>>>>>> or unversioned library names?
> >>>>>>>
> >>>>>>> Does anyone else use MXE; if so, might it make sense to feed
> >>>>>>> changes in GEOS forward to MXE?
> >>>>>>>
> >>>>>>> Best wishes,
> >>>>>>>
> >>>>>>> Roger
> >>>>>>>
> >>>>>> _______________________________________________
> >>>>>> geos-devel mailing list
> >>>>>> geos-devel at lists.osgeo.org
> >>>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >>>
> >>> _______________________________________________
> >>> geos-devel mailing list
> >>> geos-devel at lists.osgeo.org
> >>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >>
> >> _______________________________________________
> >> geos-devel mailing list
> >> geos-devel at lists.osgeo.org
> >> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Mon Jun 20 10:28:10 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 20 Jun 2022 10:28:10 -0700
Subject: [geos-devel] 3.11.0beta2 Released
Message-ID: <CACowWR3boORSttkGP8tQvku77d8VbxycVuZYDP3n-cQWW6_k7w@mail.gmail.com>

Available wherever fine computational geometries are sold.

https://github.com/libgeos/geos/releases/tag/3.11.0beta2
http://download.osgeo.org/geos/geos-3.11.0beta2.tar.bz2

From gdt at lexort.com  Tue Jun 21 03:44:09 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 21 Jun 2022 06:44:09 -0400
Subject: [geos-devel] build failure of 3.10.3 on smartos (= illumos)
Message-ID: <rmiilou5m9y.fsf@s1.lexort.com>


pkgsrc is getting ready for quarterly branch, and I noticed geos fails
to build on smartos.

  https://us-central.manta.mnx.io/pkgsrc/public/reports/upstream-trunk/20220620.2256/geos-3.10.3/build.log

The issue is sqrt(5) leading to ambiguous overload with long double,
double, float.

Appparently that is supposed to be ok, and maybe cmath is supposed to be
included, maybe using std::sqrt, maybe neither.   And maybe c++11 is
supposed to handle int as an arg to sqrt.

Opinions as to whether this is a geos issue vs a smartos toolchain issue
vs ?




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220621/d594d2e6/attachment.sig>

From gdt at lexort.com  Tue Jun 21 03:48:26 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 21 Jun 2022 06:48:26 -0400
Subject: [geos-devel] build failure of 3.10.3 on smartos (= illumos)
In-Reply-To: <rmiilou5m9y.fsf@s1.lexort.com> (Greg Troxel's message of "Tue,
 21 Jun 2022 06:44:09 -0400")
References: <rmiilou5m9y.fsf@s1.lexort.com>
Message-ID: <rmiedzi5m2t.fsf@s1.lexort.com>


Also, I should point out that we are carrying a patch, which seems like
it can't be related, but:


$NetBSD: patch-util_geosop_cxxopts.hpp,v 1.1 2022/03/27 13:33:21 tnn Exp $

On at least modern SunOS, int8_t is typedef'd to char, so parse_value()
that operates on int8_t& conflicts with the one that operates on char&.

--- util/geosop/cxxopts.hpp.orig	2022-01-15 21:14:55.000000000 +0000
+++ util/geosop/cxxopts.hpp
@@ -677,12 +677,14 @@ namespace cxxopts
       integer_parser(text, value);
     }
 
+#if !defined(__sun)
     inline
     void
     parse_value(const std::string& text, int8_t& value)
     {
       integer_parser(text, value);
     }
+#endif
 
     inline
     void
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220621/4613611e/attachment.sig>

From pramsey at cleverelephant.ca  Tue Jun 21 13:14:48 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 21 Jun 2022 13:14:48 -0700
Subject: [geos-devel] build failure of 3.10.3 on smartos (= illumos)
In-Reply-To: <rmiilou5m9y.fsf@s1.lexort.com>
References: <rmiilou5m9y.fsf@s1.lexort.com>
Message-ID: <69FC39A4-6EC9-4AAD-8DF8-0EF785C11222@cleverelephant.ca>

Well, it's super rare, platformwise so I don't really categorize it as "our problem", but it's nice to be clearer. What's the simplest way to even find out if a change fixes this? I'm tempted to make everything std::sqrt() on some kind of principle, but I have no idea if that will actually change anything. Probably just changing the 5 to 5.0 would do the trick.

P

> On Jun 21, 2022, at 3:44 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> 
> pkgsrc is getting ready for quarterly branch, and I noticed geos fails
> to build on smartos.
> 
>  https://us-central.manta.mnx.io/pkgsrc/public/reports/upstream-trunk/20220620.2256/geos-3.10.3/build.log
> 
> The issue is sqrt(5) leading to ambiguous overload with long double,
> double, float.
> 
> Appparently that is supposed to be ok, and maybe cmath is supposed to be
> included, maybe using std::sqrt, maybe neither.   And maybe c++11 is
> supposed to handle int as an arg to sqrt.
> 
> Opinions as to whether this is a geos issue vs a smartos toolchain issue
> vs ?
> 
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From gdt at lexort.com  Tue Jun 21 15:22:15 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 21 Jun 2022 18:22:15 -0400
Subject: [geos-devel] build failure of 3.10.3 on smartos (= illumos)
In-Reply-To: <69FC39A4-6EC9-4AAD-8DF8-0EF785C11222@cleverelephant.ca> (Paul
 Ramsey's message of "Tue, 21 Jun 2022 13:14:48 -0700")
References: <rmiilou5m9y.fsf@s1.lexort.com>
 <69FC39A4-6EC9-4AAD-8DF8-0EF785C11222@cleverelephant.ca>
Message-ID: <rmia6a51wtk.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> Well, it's super rare, platformwise so I don't really categorize it as
> "our problem", but it's nice to be clearer. What's the simplest way to

I said smartos but this is almost certainly most if not all solaris.

> even find out if a change fixes this? I'm tempted to make everything
> std::sqrt() on some kind of principle, but I have no idea if that will
> actually change anything. Probably just changing the 5 to 5.0 would do
> the trick.

With a candidate change, I can apply it and see what happens.   I don't
know the C++ rules well enough to pick something that is correct by
spec.

If your preferred approach is changing to 5.0 (which I presume is a
double constant since it is not 5.0f), then I can try that.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220621/15405d11/attachment.sig>

From even.rouault at spatialys.com  Tue Jun 21 15:30:35 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 22 Jun 2022 00:30:35 +0200
Subject: [geos-devel] build failure of 3.10.3 on smartos (= illumos)
In-Reply-To: <rmia6a51wtk.fsf@s1.lexort.com>
References: <rmiilou5m9y.fsf@s1.lexort.com>
 <69FC39A4-6EC9-4AAD-8DF8-0EF785C11222@cleverelephant.ca>
 <rmia6a51wtk.fsf@s1.lexort.com>
Message-ID: <f71c8460-3c5f-44f3-9e80-643dd226ec67@spatialys.com>

Since C++11, std::sqrt() is required to have an integral overload. See 
https://en.cppreference.com/w/cpp/numeric/math/sqrt

Looking at 
https://github.com/google/sentencepiece/issues/432#issuecomment-639434698, 
it seems this is a known defect of Solaris world

Using 5.0 should be a no-brainer and portable fix.

Le 22/06/2022 ? 00:22, Greg Troxel a ?crit?:
> Paul Ramsey <pramsey at cleverelephant.ca> writes:
>
>> Well, it's super rare, platformwise so I don't really categorize it as
>> "our problem", but it's nice to be clearer. What's the simplest way to
> I said smartos but this is almost certainly most if not all solaris.
>
>> even find out if a change fixes this? I'm tempted to make everything
>> std::sqrt() on some kind of principle, but I have no idea if that will
>> actually change anything. Probably just changing the 5 to 5.0 would do
>> the trick.
> With a candidate change, I can apply it and see what happens.   I don't
> know the C++ rules well enough to pick something that is correct by
> spec.
>
> If your preferred approach is changing to 5.0 (which I presume is a
> double constant since it is not 5.0f), then I can try that.
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From pramsey at cleverelephant.ca  Tue Jun 21 15:35:38 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 21 Jun 2022 15:35:38 -0700
Subject: [geos-devel] build failure of 3.10.3 on smartos (= illumos)
In-Reply-To: <f71c8460-3c5f-44f3-9e80-643dd226ec67@spatialys.com>
References: <rmiilou5m9y.fsf@s1.lexort.com>
 <69FC39A4-6EC9-4AAD-8DF8-0EF785C11222@cleverelephant.ca>
 <rmia6a51wtk.fsf@s1.lexort.com>
 <f71c8460-3c5f-44f3-9e80-643dd226ec67@spatialys.com>
Message-ID: <1E246253-44DA-4A37-AFA6-5AF9B6F30055@cleverelephant.ca>

Thanks!
Going to run this through the CI grinder.

https://github.com/libgeos/geos/pull/641

P

> On Jun 21, 2022, at 3:30 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Since C++11, std::sqrt() is required to have an integral overload. See https://en.cppreference.com/w/cpp/numeric/math/sqrt
> 
> Looking at https://github.com/google/sentencepiece/issues/432#issuecomment-639434698, it seems this is a known defect of Solaris world
> 
> Using 5.0 should be a no-brainer and portable fix.
> 
> Le 22/06/2022 ? 00:22, Greg Troxel a ?crit :
>> Paul Ramsey <pramsey at cleverelephant.ca> writes:
>> 
>>> Well, it's super rare, platformwise so I don't really categorize it as
>>> "our problem", but it's nice to be clearer. What's the simplest way to
>> I said smartos but this is almost certainly most if not all solaris.
>> 
>>> even find out if a change fixes this? I'm tempted to make everything
>>> std::sqrt() on some kind of principle, but I have no idea if that will
>>> actually change anything. Probably just changing the 5 to 5.0 would do
>>> the trick.
>> With a candidate change, I can apply it and see what happens.   I don't
>> know the C++ rules well enough to pick something that is correct by
>> spec.
>> 
>> If your preferred approach is changing to 5.0 (which I presume is a
>> double constant since it is not 5.0f), then I can try that.
>> 
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 


From pramsey at cleverelephant.ca  Tue Jun 28 16:27:48 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 28 Jun 2022 16:27:48 -0700
Subject: [geos-devel] 3.11.0 Release Vote
Message-ID: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>

3.11.0beta2 has been out for a week, and no complaints. This is the vote on final release of 3.11.0

+1 Paul


P



From lr at pcorp.us  Tue Jun 28 16:28:29 2022
From: lr at pcorp.us (Regina Obe)
Date: Tue, 28 Jun 2022 19:28:29 -0400
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
Message-ID: <008e01d88b46$c680c8d0$53825a70$@pcorp.us>

+1

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Tuesday, June 28, 2022 7:28 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] 3.11.0 Release Vote
> 
> 3.11.0beta2 has been out for a week, and no complaints. This is the vote
on
> final release of 3.11.0
> 
> +1 Paul
> 
> 
> P
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From mtnclimb at gmail.com  Tue Jun 28 16:45:05 2022
From: mtnclimb at gmail.com (Martin Davis)
Date: Tue, 28 Jun 2022 16:45:05 -0700
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
Message-ID: <CAK2ens3O0L5bqy77x2OPvt_jzY4M2idwF93bLXgLBwA5Fo0jNw@mail.gmail.com>

+1

On Tue, Jun 28, 2022 at 4:27 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> 3.11.0beta2 has been out for a week, and no complaints. This is the vote
> on final release of 3.11.0
>
> +1 Paul
>
>
> P
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220628/fbd91580/attachment.htm>

From gdt at lexort.com  Tue Jun 28 17:19:56 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 28 Jun 2022 20:19:56 -0400
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca> (Paul
 Ramsey's message of "Tue, 28 Jun 2022 16:27:48 -0700")
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
Message-ID: <rmi7d50xqvn.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> 3.11.0beta2 has been out for a week, and no complaints. This is the vote on final release of 3.11.0

I didn't get to it because it was pkgsrc's quarterly freeze week.  It
builds on NetBSD 9 amd64, and I've included the diff to the set of
installed files, minus noise.  The set of include changes is somewhat
explainable from NEWS, but I'm not following.  I don't mean to push on
that; really I'm asking "is this what is expected?".

+include/geos.h
+include/geos/algorithm/hull/ConcaveHull.h
+include/geos/algorithm/hull/ConcaveHullOfPolygons.h
+include/geos/algorithm/hull/HullTri.h
+include/geos/algorithm/hull/HullTriangulation.h
+include/geos/geom/util/GeometryMapper.h
+include/geos/index/VertexSequencePackedRtree.h
+include/geos/noding/SegmentExtractingNoder.h
+include/geos/operation/buffer/BufferCurveSetBuilder.h
+include/geos/operation/buffer/OffsetCurve.h
-include/geos/operation/buffer/OffsetCurveSetBuilder.h
+include/geos/operation/buffer/SegmentMCIndex.h
+include/geos/operation/overlayng/CoverageUnion.h
-include/geos/operation/valid/ConnectedInteriorTester.h
+include/geos/simplify/LinkedRing.h
+include/geos/simplify/PolygonHullSimplifier.h
+include/geos/simplify/RingHull.h
+include/geos/simplify/RingHullIndex.h
-include/geos/triangulate/polygon/VertexSequencePackedRtree.h
-lib/libgeos.so.3.10.3
+lib/libgeos.so.3.11.0
 lib/libgeos_c.so
 lib/libgeos_c.so.1
-lib/libgeos_c.so.1.16.1
+lib/libgeos_c.so.1.16.0
 lib/pkgconfig/geos.pc
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220628/e7a88184/attachment.sig>

From gdt at lexort.com  Tue Jun 28 17:32:13 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 28 Jun 2022 20:32:13 -0400
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca> (Paul
 Ramsey's message of "Tue, 28 Jun 2022 16:27:48 -0700")
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
Message-ID: <rmi35foxqb6.fsf@s1.lexort.com>


Also, test suite passes on NetBSD 9 amd64.

The bug (previously sent in email) where the tests use the installed
version instead of the build tree version remains.  But after I
installed it and then built and run tests, they passed.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20220628/1a4fe950/attachment.sig>

From sebastic at xs4all.nl  Tue Jun 28 20:19:40 2022
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 29 Jun 2022 05:19:40 +0200
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
Message-ID: <a3e71ee0-cc79-2d5a-5489-ee153873ff20@xs4all.nl>

On 6/29/22 01:27, Paul Ramsey wrote:
> 3.11.0beta2 has been out for a week, and no complaints. This is the vote on final release of 3.11.0

Shouldn't there be an 3.11.0rc1 first?

Kind Regards,

Bas

-- 
  GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From pramsey at cleverelephant.ca  Wed Jun 29 08:03:00 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 29 Jun 2022 08:03:00 -0700
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <a3e71ee0-cc79-2d5a-5489-ee153873ff20@xs4all.nl>
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
 <a3e71ee0-cc79-2d5a-5489-ee153873ff20@xs4all.nl>
Message-ID: <84732752-5F58-4A43-A933-ECEFFD6F6C96@cleverelephant.ca>

No, there's only slightly more than zero code commits since beta2, CI is green, I'm fine w/ the state of things.

P.

> On Jun 28, 2022, at 8:19 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> On 6/29/22 01:27, Paul Ramsey wrote:
>> 3.11.0beta2 has been out for a week, and no complaints. This is the vote on final release of 3.11.0
> 
> Shouldn't there be an 3.11.0rc1 first?
> 
> Kind Regards,
> 
> Bas
> 
> -- 
> GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Wed Jun 29 16:12:13 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 29 Jun 2022 16:12:13 -0700
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <rmi7d50xqvn.fsf@s1.lexort.com>
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
 <rmi7d50xqvn.fsf@s1.lexort.com>
Message-ID: <CACowWR1wWo1emHDamHWTj66V3qHy1B_7f60sc-R_O9=UWOwtCg@mail.gmail.com>

Thanks, this all looks good except the CAPI_INTERFACE_CURRENT and
CAPI_INTERFACE_AGE need to be bumped so the CAPI minor increments..
I really wonder why we retain this super confusing numbering system
for the CAPI, which needs it's own little documentation to explain. I
think we got it from libtool maybe, but it does nothing for me.
P.

On Tue, Jun 28, 2022 at 5:19 PM Greg Troxel <gdt at lexort.com> wrote:
>
>
> Paul Ramsey <pramsey at cleverelephant.ca> writes:
>
> > 3.11.0beta2 has been out for a week, and no complaints. This is the vote on final release of 3.11.0
>
> I didn't get to it because it was pkgsrc's quarterly freeze week.  It
> builds on NetBSD 9 amd64, and I've included the diff to the set of
> installed files, minus noise.  The set of include changes is somewhat
> explainable from NEWS, but I'm not following.  I don't mean to push on
> that; really I'm asking "is this what is expected?".
>
> +include/geos.h
> +include/geos/algorithm/hull/ConcaveHull.h
> +include/geos/algorithm/hull/ConcaveHullOfPolygons.h
> +include/geos/algorithm/hull/HullTri.h
> +include/geos/algorithm/hull/HullTriangulation.h
> +include/geos/geom/util/GeometryMapper.h
> +include/geos/index/VertexSequencePackedRtree.h
> +include/geos/noding/SegmentExtractingNoder.h
> +include/geos/operation/buffer/BufferCurveSetBuilder.h
> +include/geos/operation/buffer/OffsetCurve.h
> -include/geos/operation/buffer/OffsetCurveSetBuilder.h
> +include/geos/operation/buffer/SegmentMCIndex.h
> +include/geos/operation/overlayng/CoverageUnion.h
> -include/geos/operation/valid/ConnectedInteriorTester.h
> +include/geos/simplify/LinkedRing.h
> +include/geos/simplify/PolygonHullSimplifier.h
> +include/geos/simplify/RingHull.h
> +include/geos/simplify/RingHullIndex.h
> -include/geos/triangulate/polygon/VertexSequencePackedRtree.h
> -lib/libgeos.so.3.10.3
> +lib/libgeos.so.3.11.0
>  lib/libgeos_c.so
>  lib/libgeos_c.so.1
> -lib/libgeos_c.so.1.16.1
> +lib/libgeos_c.so.1.16.0
>  lib/pkgconfig/geos.pc

From pramsey at cleverelephant.ca  Wed Jun 29 16:36:11 2022
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 29 Jun 2022 16:36:11 -0700
Subject: [geos-devel] 3.11.0 Release Vote
In-Reply-To: <84732752-5F58-4A43-A933-ECEFFD6F6C96@cleverelephant.ca>
References: <2423B912-CA5F-4C94-9B91-993B7F69D4B5@cleverelephant.ca>
 <a3e71ee0-cc79-2d5a-5489-ee153873ff20@xs4all.nl>
 <84732752-5F58-4A43-A933-ECEFFD6F6C96@cleverelephant.ca>
Message-ID: <CACowWR2rBb1mk8ioZwkDJF7TsF0hA_38ssXw7L83qi2Du+C7iw@mail.gmail.com>

That said, since Greg found a versioning issue on the CAPI I've cut an
rc0 anyways, it is at the usual place, please check if that's what you
would like to do, as I am going to cut the release Friday.

http://libgeos.org/usage/download/

P.

On Wed, Jun 29, 2022 at 8:03 AM Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>
> No, there's only slightly more than zero code commits since beta2, CI is green, I'm fine w/ the state of things.
>
> P.
>
> > On Jun 28, 2022, at 8:19 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> >
> > On 6/29/22 01:27, Paul Ramsey wrote:
> >> 3.11.0beta2 has been out for a week, and no complaints. This is the vote on final release of 3.11.0
> >
> > Shouldn't there be an 3.11.0rc1 first?
> >
> > Kind Regards,
> >
> > Bas
> >
> > --
> > GPG Key ID: 4096R/6750F10AE88D4AF1
> > Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
>

