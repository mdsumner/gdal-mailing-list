From cfis at interserv.com  Wed Feb  1 20:50:07 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOS / SRID / WKB
Message-ID: <43E1654F.5050306@interserv.com>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2781 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060201/794b0db3/smime.bin
From strk at refractions.net  Wed Feb  1 20:57:33 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Re: GEOS / SRID / WKB
In-Reply-To: <43E1654F.5050306@interserv.com>
References: <43E1654F.5050306@interserv.com>
Message-ID: <20060202015733.GC45838@keybit.net>

Charlie, we're playing dirty here, even for Z values.
One thing is accepting "extensions", another thing is spitting them out.
Z,M and SRID flags are postgis-specific.
The next update on OGC dox will define a different way to express
Z and M for example, and won't say anything about SRID.

The most correct way to support multiple different specs
would be to provide a method to specify which one to use.

For example:

	WKBWriter writer;
	writer.setFormat(DIALECT);
	writer.write(geom);

Same would apply to WKBReader and to WKT reader/writer.

--strk;

On Wed, Feb 01, 2006 at 06:50:07PM -0700, Charlie Savage wrote:
> I'd like to be able to read/write SRID information from GEOS using the 
> WKB Reader/Writer.  Currently the WKBReader reads the SRID value in an 
> extended WKB format, but then tosses it away.  Attached is a patch that 
> saves the SRID value by calling setSRID on the newly created geometry. 
> 
> It would also be nice if WKBWriter could output SRID values.  Looking 
> through the code, it would be easy enough to write this information 
> out.  However, if a geometry has an SRID, the output WKB value would be 
> one byte longer plus have an SRID flag in the geomtype byte.  So this 
> would break existing code that reads wkb values if a geometry has an 
> SRID.  I'm not sure if this is an issue or not, since I see the SRID 
> field on a geometry is not documented.  Is this a frequently used 
> feature?  An alternative of course would be having a separate method, 
> maybe called writeExtended or some such thing.  
> 
> Thanks,
> 
> Charlie

> Index: source/io/WKBReader.cpp
> ===================================================================
> RCS file: /home/cvs/postgis/geos/source/io/WKBReader.cpp,v
> retrieving revision 1.15
> diff -u -r1.15 WKBReader.cpp
> --- source/io/WKBReader.cpp	20 Jan 2006 00:59:55 -0000	1.15
> +++ source/io/WKBReader.cpp	2 Feb 2006 01:44:16 -0000
> @@ -230,31 +230,43 @@
>  	cout<<"WKB hasSRID: "<<hasZ<<endl;
>  #endif
>  
> -	if (hasSRID) dis.readInt(); // skip SRID
> -
> +	int srid = -1;
> +	if (hasSRID) srid = dis.readInt(); // read SRID
>  
>  	// allocate space for ordValues 
>  	if ( ordValues.size() < inputDimension )
>  		ordValues.resize(inputDimension);
>  
> +	Geometry * result;
>  
>  	switch (geometryType) {
>  		case WKBConstants::wkbPoint :
> -			return readPoint();
> +			result = readPoint();
> +			break;
>  		case WKBConstants::wkbLineString :
> -			return readLineString();
> +			result = readLineString();
> +			break;
>  		case WKBConstants::wkbPolygon :
> -			return readPolygon();
> +			result = readPolygon();
> +			break;
>  		case WKBConstants::wkbMultiPoint :
> -			return readMultiPoint();
> +			result = readMultiPoint();
> +			break;
>  		case WKBConstants::wkbMultiLineString :
> -			return readMultiLineString();
> +			result = readMultiLineString();
> +			break;
>  		case WKBConstants::wkbMultiPolygon :
> -			return readMultiPolygon();
> +			result = readMultiPolygon();
> +			break;
>  		case WKBConstants::wkbGeometryCollection :
> -			return readGeometryCollection();
> +			result = readGeometryCollection();
> +			break;
> +		default:
> +			throw new ParseException("Unknown WKB type " + geometryType);
>  	}
> -	throw new ParseException("Unknown WKB type " + geometryType);
> +
> +	result->setSRID(srid);
> +	return result;
>  }
>  
>  Point *
> 




-- 

 +----------------------------------------+
 | Fight against software patents in EU!  |
 | www.ffii.org www.nosoftwarepatents.org |
 +----------------------------------------+


From cfis at interserv.com  Thu Feb  2 03:26:33 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Re: GEOS / SRID / WKB
In-Reply-To: <20060202015733.GC45838@keybit.net>
References: <43E1654F.5050306@interserv.com>
	<20060202015733.GC45838@keybit.net>
Message-ID: <43E1C239.3080506@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2781 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060202/672419b1/smime.bin
From strk at refractions.net  Thu Feb  2 05:17:17 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Re: GEOS / SRID / WKB
In-Reply-To: <43E1C239.3080506@interserv.com>
References: <43E1654F.5050306@interserv.com>
	<20060202015733.GC45838@keybit.net>
	<43E1C239.3080506@interserv.com>
Message-ID: <20060202101717.GA51064@keybit.net>

On Thu, Feb 02, 2006 at 01:26:33AM -0700, Charlie Savage wrote:
> Hi Strk,
> 
> Yes, that sounds like a good way of doing it.  Is this planned for the 
> near future, or should I  put something together if I need it?

No plans for near future.
I think that should also include support for M, and
GEOS is not ready for that yet.

> What do you think of saving the SRID on input (i.e., accepting 
> extensions)?  That's the part that I need at the moment.

The Geometry class provides a setUserData/getUserData mechanism
for extended informations to be added to a Geometry. 
Maybe that's a better way to handle this, as the setSRID/getSRID
methods have been marked as deprecated.

--strk;


> 
> Thanks,
> 
> Charlie
> 
> strk@refractions.net wrote:
> >Charlie, we're playing dirty here, even for Z values.
> >One thing is accepting "extensions", another thing is spitting them out.
> >Z,M and SRID flags are postgis-specific.
> >The next update on OGC dox will define a different way to express
> >Z and M for example, and won't say anything about SRID.
> >
> >The most correct way to support multiple different specs
> >would be to provide a method to specify which one to use.
> >
> >For example:
> >
> >	WKBWriter writer;
> >	writer.setFormat(DIALECT);
> >	writer.write(geom);
> >
> >Same would apply to WKBReader and to WKT reader/writer.
> >
> >--strk;
> >
> >On Wed, Feb 01, 2006 at 06:50:07PM -0700, Charlie Savage wrote:
> >  
> >>I'd like to be able to read/write SRID information from GEOS using the 
> >>WKB Reader/Writer.  Currently the WKBReader reads the SRID value in an 
> >>extended WKB format, but then tosses it away.  Attached is a patch that 
> >>saves the SRID value by calling setSRID on the newly created geometry. 
> >>
> >>It would also be nice if WKBWriter could output SRID values.  Looking 
> >>through the code, it would be easy enough to write this information 
> >>out.  However, if a geometry has an SRID, the output WKB value would be 
> >>one byte longer plus have an SRID flag in the geomtype byte.  So this 
> >>would break existing code that reads wkb values if a geometry has an 
> >>SRID.  I'm not sure if this is an issue or not, since I see the SRID 
> >>field on a geometry is not documented.  Is this a frequently used 
> >>feature?  An alternative of course would be having a separate method, 
> >>maybe called writeExtended or some such thing.  
> >>
> >>Thanks,
> >>
> >>Charlie
> >>    
> >
> >  
> >>Index: source/io/WKBReader.cpp
> >>===================================================================
> >>RCS file: /home/cvs/postgis/geos/source/io/WKBReader.cpp,v
> >>retrieving revision 1.15
> >>diff -u -r1.15 WKBReader.cpp
> >>--- source/io/WKBReader.cpp	20 Jan 2006 00:59:55 -0000	1.15
> >>+++ source/io/WKBReader.cpp	2 Feb 2006 01:44:16 -0000
> >>@@ -230,31 +230,43 @@
> >> 	cout<<"WKB hasSRID: "<<hasZ<<endl;
> >> #endif
> >> 
> >>-	if (hasSRID) dis.readInt(); // skip SRID
> >>-
> >>+	int srid = -1;
> >>+	if (hasSRID) srid = dis.readInt(); // read SRID
> >> 
> >> 	// allocate space for ordValues 
> >> 	if ( ordValues.size() < inputDimension )
> >> 		ordValues.resize(inputDimension);
> >> 
> >>+	Geometry * result;
> >> 
> >> 	switch (geometryType) {
> >> 		case WKBConstants::wkbPoint :
> >>-			return readPoint();
> >>+			result = readPoint();
> >>+			break;
> >> 		case WKBConstants::wkbLineString :
> >>-			return readLineString();
> >>+			result = readLineString();
> >>+			break;
> >> 		case WKBConstants::wkbPolygon :
> >>-			return readPolygon();
> >>+			result = readPolygon();
> >>+			break;
> >> 		case WKBConstants::wkbMultiPoint :
> >>-			return readMultiPoint();
> >>+			result = readMultiPoint();
> >>+			break;
> >> 		case WKBConstants::wkbMultiLineString :
> >>-			return readMultiLineString();
> >>+			result = readMultiLineString();
> >>+			break;
> >> 		case WKBConstants::wkbMultiPolygon :
> >>-			return readMultiPolygon();
> >>+			result = readMultiPolygon();
> >>+			break;
> >> 		case WKBConstants::wkbGeometryCollection :
> >>-			return readGeometryCollection();
> >>+			result = readGeometryCollection();
> >>+			break;
> >>+		default:
> >>+			throw new ParseException("Unknown WKB type " + 
> >>geometryType);
> >> 	}
> >>-	throw new ParseException("Unknown WKB type " + geometryType);
> >>+
> >>+	result->setSRID(srid);
> >>+	return result;
> >> }
> >> 
> >> Point *
> >>
> >>    
> >
> >
> >
> >
> >  



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 +----------------------------------------+
 | Fight against software patents in EU!  |
 | www.ffii.org www.nosoftwarepatents.org |
 +----------------------------------------+


From cfis at interserv.com  Thu Feb  2 19:07:01 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Re: GEOS / SRID / WKB
In-Reply-To: <20060202101717.GA51064@keybit.net>
References: <43E1654F.5050306@interserv.com>	<20060202015733.GC45838@keybit.net>	<43E1C239.3080506@interserv.com>
	<20060202101717.GA51064@keybit.net>
Message-ID: <43E29EA5.7010809@interserv.com>

Any chance get/set SRID could be "undeprecated?"

The reason is that it is much harder to use userdata. With get/set SRID 
all you have to do is set an integer. With user data you have deal with 
allocating/deallocating memory instead of setting a simple integer.  
That's ok, but it becomes harder if you want to clone geometries.  If 
you do that, then the clone methods (which end up eventually in the copy 
constructor of Geometry) set the new object's user data to null, which 
is reasonable since its a pointer.  But that makes it hard to make use 
of the user data to store SRID values - since you have to first clone 
the object then manually copy over the user data.

I realize that SRID values don't play a role in the traditional use 
cases for GEOS.  I gather I'm using it in a bit of a non-traditional way 
- as a client-side library for being able to read in data queried from 
PostGIS, then use Ruby to work with that data.  So the SRID values for 
my case are quite important.  I think that as the use of GEOS increases, 
this type of usage could become more common.

The only things I really need for this are:

1.  Keeping get/set SRID around
2.  Saving srid values read from the WKB format (see patch from yesterday).
3.  A change in the Geometry copy constructor - right now when you clone 
an object the new object gets its SRID value from the geometry factory 
and not from the cloned geometry.  That seems incorrect to me - I'd 
expect if you'd clone an object you'd get a true copy of it (I can 
provide a patch for this, its a one line change).
4.  It would be nice to be able to write out the SRID values in EWKT or 
EWKB, but that's not really critical.

So one vote to keep get/set SRID as official parts of the api....

Charlie


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2781 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060202/432f6a8b/smime.bin
From mbdavis at VividSolutions.com  Thu Feb  2 19:20:12 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Re: GEOS / SRID / WKB
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0279C3ED1@venus.VividSolutions.com>

In JTS we deprecated get/setSRID a few versions ago.   The reason for
doing this was because JTS didn't do anything with the SRID values, so
the feeling was that this was outside the scope of the API and should
not be supported.  The userData concept was introduced at the same time,
and the feeling was that this could be used for SRID management if
desired.

However, following this decision there started to be user pressure to
undeprecate the SRID feature, since it was just too convenient to
eliminate.  Also, while removing it may have been the right "pure"
decision, it does go against the OGC SFS spec.  So, the most recent
versions of JTS have removed the deprecation.

Maybe GEOS should do the same thing?  This should be a pretty trivial
change, I think.

But I agree with strk that starting to add support for reading and
writing SRIDs is fraught with peril, and should be carefully considered.
If a reader is needed to handle SRIDs coming out of a particular format,
perhaps that should be split out as an entirely separate reader class?
That would make it clear that it is tied to a particular extended
format.

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: geos-devel-bounces@geos.refractions.net 
> [mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of 
> strk@refractions.net
> Sent: February 2, 2006 2:17 AM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Re: GEOS / SRID / WKB
> 
> 
> On Thu, Feb 02, 2006 at 01:26:33AM -0700, Charlie Savage wrote:
> > Hi Strk,
> > 
> > Yes, that sounds like a good way of doing it.  Is this 
> planned for the
> > near future, or should I  put something together if I need it?
> 
> No plans for near future.
> I think that should also include support for M, and
> GEOS is not ready for that yet.
> 
> > What do you think of saving the SRID on input (i.e., accepting
> > extensions)?  That's the part that I need at the moment.
> 
> The Geometry class provides a setUserData/getUserData 
> mechanism for extended informations to be added to a Geometry. 
> Maybe that's a better way to handle this, as the 
> setSRID/getSRID methods have been marked as deprecated.
> 
> --strk;
> 
> 
> > 
> > Thanks,
> > 
> > Charlie
> > 
> > strk@refractions.net wrote:
> > >Charlie, we're playing dirty here, even for Z values.
> > >One thing is accepting "extensions", another thing is 
> spitting them 
> > >out. Z,M and SRID flags are postgis-specific. The next 
> update on OGC 
> > >dox will define a different way to express Z and M for 
> example, and 
> > >won't say anything about SRID.
> > >
> > >The most correct way to support multiple different specs 
> would be to 
> > >provide a method to specify which one to use.
> > >
> > >For example:
> > >
> > >	WKBWriter writer;
> > >	writer.setFormat(DIALECT);
> > >	writer.write(geom);
> > >
> > >Same would apply to WKBReader and to WKT reader/writer.
> > >
> > >--strk;
> > >
> > >On Wed, Feb 01, 2006 at 06:50:07PM -0700, Charlie Savage wrote:
> > >  
> > >>I'd like to be able to read/write SRID information from 
> GEOS using 
> > >>the
> > >>WKB Reader/Writer.  Currently the WKBReader reads the 
> SRID value in an 
> > >>extended WKB format, but then tosses it away.  Attached 
> is a patch that 
> > >>saves the SRID value by calling setSRID on the newly 
> created geometry. 
> > >>
> > >>It would also be nice if WKBWriter could output SRID values.  
> > >>Looking
> > >>through the code, it would be easy enough to write this 
> information 
> > >>out.  However, if a geometry has an SRID, the output WKB 
> value would be 
> > >>one byte longer plus have an SRID flag in the geomtype 
> byte.  So this 
> > >>would break existing code that reads wkb values if a 
> geometry has an 
> > >>SRID.  I'm not sure if this is an issue or not, since I 
> see the SRID 
> > >>field on a geometry is not documented.  Is this a frequently used 
> > >>feature?  An alternative of course would be having a 
> separate method, 
> > >>maybe called writeExtended or some such thing.  
> > >>
> > >>Thanks,
> > >>
> > >>Charlie
> > >>    
> > >
> > >  
> > >>Index: source/io/WKBReader.cpp 
> > 
> >>===================================================================
> > >>RCS file: /home/cvs/postgis/geos/source/io/WKBReader.cpp,v
> > >>retrieving revision 1.15
> > >>diff -u -r1.15 WKBReader.cpp
> > >>--- source/io/WKBReader.cpp	20 Jan 2006 00:59:55 
> -0000	1.15
> > >>+++ source/io/WKBReader.cpp	2 Feb 2006 01:44:16 -0000
> > >>@@ -230,31 +230,43 @@
> > >> 	cout<<"WKB hasSRID: "<<hasZ<<endl;
> > >> #endif
> > >> 
> > >>-	if (hasSRID) dis.readInt(); // skip SRID
> > >>-
> > >>+	int srid = -1;
> > >>+	if (hasSRID) srid = dis.readInt(); // read SRID
> > >> 
> > >> 	// allocate space for ordValues 
> > >> 	if ( ordValues.size() < inputDimension )
> > >> 		ordValues.resize(inputDimension);
> > >> 
> > >>+	Geometry * result;
> > >> 
> > >> 	switch (geometryType) {
> > >> 		case WKBConstants::wkbPoint :
> > >>-			return readPoint();
> > >>+			result = readPoint();
> > >>+			break;
> > >> 		case WKBConstants::wkbLineString :
> > >>-			return readLineString();
> > >>+			result = readLineString();
> > >>+			break;
> > >> 		case WKBConstants::wkbPolygon :
> > >>-			return readPolygon();
> > >>+			result = readPolygon();
> > >>+			break;
> > >> 		case WKBConstants::wkbMultiPoint :
> > >>-			return readMultiPoint();
> > >>+			result = readMultiPoint();
> > >>+			break;
> > >> 		case WKBConstants::wkbMultiLineString :
> > >>-			return readMultiLineString();
> > >>+			result = readMultiLineString();
> > >>+			break;
> > >> 		case WKBConstants::wkbMultiPolygon :
> > >>-			return readMultiPolygon();
> > >>+			result = readMultiPolygon();
> > >>+			break;
> > >> 		case WKBConstants::wkbGeometryCollection :
> > >>-			return readGeometryCollection();
> > >>+			result = readGeometryCollection();
> > >>+			break;
> > >>+		default:
> > >>+			throw new ParseException("Unknown WKB type " +
> > >>geometryType);
> > >> 	}
> > >>-	throw new ParseException("Unknown WKB type " + geometryType);
> > >>+
> > >>+	result->setSRID(srid);
> > >>+	return result;
> > >> }
> > >> 
> > >> Point *
> > >>
> > >>    
> > >
> > >
> > >
> > >
> > >  
> 
> 
> 
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net 
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> 
> 
> -- 
> 
>  +----------------------------------------+
>  | Fight against software patents in EU!  |
>  | www.ffii.org www.nosoftwarepatents.org |  
> +----------------------------------------+
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net 
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 

From cfis at interserv.com  Thu Feb  2 19:47:34 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Re: GEOS / SRID / WKB
In-Reply-To: <5A94289A9268514C8D6C0F1FF44BA0279C3ED1@venus.VividSolutions.com>
References: <5A94289A9268514C8D6C0F1FF44BA0279C3ED1@venus.VividSolutions.com>
Message-ID: <43E2A826.2050700@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2781 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060202/0aa4ddbc/smime.bin
From mbdavis at VividSolutions.com  Thu Feb  2 19:58:54 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Re: GEOS / SRID / WKB
Message-ID: <5A94289A9268514C8D6C0F1FF44BA02796D779@venus.VividSolutions.com>

Makes sense to me, if that functionality is already there.
 
 
Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046

	-----Original Message-----
	From: geos-devel-bounces@geos.refractions.net
[mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of Charlie
Savage
	Sent: February 2, 2006 4:48 PM
	To: GEOS Development List
	Subject: Re: [geos-devel] Re: GEOS / SRID / WKB
	
	


		But I agree with strk that starting to add support for
reading and
		writing SRIDs is fraught with peril, and should be
carefully considered.
		If a reader is needed to handle SRIDs coming out of a
particular format,
		perhaps that should be split out as an entirely separate
reader class?
		That would make it clear that it is tied to a particular
extended
		format.
		  

	Yes, I agree that it would be very important to have a
well-defined infrastructure for plugging in new readers/writers for
different formats.
	
	For the short term, the Geos WKBReader already reads the SRID
value.  Thus the only change I am proposing is that it takes the SRID
value it reads and calls setSRID().   Right now it just dumps the SRID
value into the ether (i.e., reads it into a variable and then ignores
it).
	
	Thanks,
	
	Charlie
	

		Martin Davis, Senior Technical Architect
		Vivid Solutions Inc.      www.vividsolutions.com
		Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
		Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046
		
		
		  

			-----Original Message-----
			From: geos-devel-bounces@geos.refractions.net 
			[mailto:geos-devel-bounces@geos.refractions.net]
On Behalf Of 
			strk@refractions.net
			Sent: February 2, 2006 2:17 AM
			To: geos-devel@geos.refractions.net
			Subject: Re: [geos-devel] Re: GEOS / SRID / WKB
			
			
			On Thu, Feb 02, 2006 at 01:26:33AM -0700,
Charlie Savage wrote:
			    

				Hi Strk,
				
				Yes, that sounds like a good way of
doing it.  Is this 
				      

			planned for the
			    

				near future, or should I  put something
together if I need it?
				      

			No plans for near future.
			I think that should also include support for M,
and
			GEOS is not ready for that yet.
			
			    

				What do you think of saving the SRID on
input (i.e., accepting
				extensions)?  That's the part that I
need at the moment.
				      

			The Geometry class provides a
setUserData/getUserData 
			mechanism for extended informations to be added
to a Geometry. 
			Maybe that's a better way to handle this, as the

			setSRID/getSRID methods have been marked as
deprecated.
			
			--strk;
			
			
			    

				Thanks,
				
				Charlie
				
				strk@refractions.net wrote:
				      

				Charlie, we're playing dirty here, even
for Z values.
				One thing is accepting "extensions",
another thing is 
				        

			spitting them 
			    

				out. Z,M and SRID flags are
postgis-specific. The next 
				        

			update on OGC 
			    

				dox will define a different way to
express Z and M for 
				        

			example, and 
			    

				won't say anything about SRID.
				
				The most correct way to support multiple
different specs 
				        

			would be to 
			    

				provide a method to specify which one to
use.
				
				For example:
				
					WKBWriter writer;
					writer.setFormat(DIALECT);
					writer.write(geom);
				
				Same would apply to WKBReader and to WKT
reader/writer.
				
				--strk;
				
				On Wed, Feb 01, 2006 at 06:50:07PM
-0700, Charlie Savage wrote:
				 
				        

				I'd like to be able to read/write SRID
information from 
				          

			GEOS using 
			    

				the
				WKB Reader/Writer.  Currently the
WKBReader reads the 
				          

			SRID value in an 
			    

				extended WKB format, but then tosses it
away.  Attached 
				          

			is a patch that 
			    

				saves the SRID value by calling setSRID
on the newly 
				          

			created geometry. 
			    

				It would also be nice if WKBWriter could
output SRID values.  
				Looking
				through the code, it would be easy
enough to write this 
				          

			information 
			    

				out.  However, if a geometry has an
SRID, the output WKB 
				          

			value would be 
			    

				one byte longer plus have an SRID flag
in the geomtype 
				          

			byte.  So this 
			    

				would break existing code that reads wkb
values if a 
				          

			geometry has an 
			    

				SRID.  I'm not sure if this is an issue
or not, since I 
				          

			see the SRID 
			    

				field on a geometry is not documented.
Is this a frequently used 
				feature?  An alternative of course would
be having a 
				          

			separate method, 
			    

				maybe called writeExtended or some such
thing.  
				
				Thanks,
				
				Charlie
				   
				          

				 
				        

				Index: source/io/WKBReader.cpp 
				          

	
===================================================================
				        

				RCS file:
/home/cvs/postgis/geos/source/io/WKBReader.cpp,v
				retrieving revision 1.15
				diff -u -r1.15 WKBReader.cpp
				--- source/io/WKBReader.cpp	20 Jan
2006 00:59:55 
				          

			-0000	1.15
			    

				+++ source/io/WKBReader.cpp	2 Feb
2006 01:44:16 -0000
				@@ -230,31 +230,43 @@
					cout<<"WKB hasSRID:
"<<hasZ<<endl;
				#endif
				
				-	if (hasSRID) dis.readInt(); //
skip SRID
				-
				+	int srid = -1;
				+	if (hasSRID) srid =
dis.readInt(); // read SRID
				
					// allocate space for ordValues 
					if ( ordValues.size() <
inputDimension )
	
ordValues.resize(inputDimension);
				
				+	Geometry * result;
				
					switch (geometryType) {
						case
WKBConstants::wkbPoint :
				-			return
readPoint();
				+			result =
readPoint();
				+			break;
						case
WKBConstants::wkbLineString :
				-			return
readLineString();
				+			result =
readLineString();
				+			break;
						case
WKBConstants::wkbPolygon :
				-			return
readPolygon();
				+			result =
readPolygon();
				+			break;
						case
WKBConstants::wkbMultiPoint :
				-			return
readMultiPoint();
				+			result =
readMultiPoint();
				+			break;
						case
WKBConstants::wkbMultiLineString :
				-			return
readMultiLineString();
				+			result =
readMultiLineString();
				+			break;
						case
WKBConstants::wkbMultiPolygon :
				-			return
readMultiPolygon();
				+			result =
readMultiPolygon();
				+			break;
						case
WKBConstants::wkbGeometryCollection :
				-			return
readGeometryCollection();
				+			result =
readGeometryCollection();
				+			break;
				+		default:
				+			throw new
ParseException("Unknown WKB type " +
				geometryType);
					}
				-	throw new
ParseException("Unknown WKB type " + geometryType);
				+
				+	result->setSRID(srid);
				+	return result;
				}
				
				Point *
				
				   
				          

				
				
				 
				        

			
			    

	
_______________________________________________
				geos-devel mailing list
				geos-devel@geos.refractions.net 
	
http://geos.refractions.net/mailman/listinfo/geos-devel
				      

			-- 
			
			 +----------------------------------------+
			 | Fight against software patents in EU!  |
			 | www.ffii.org www.nosoftwarepatents.org |  
			+----------------------------------------+
			
			_______________________________________________
			geos-devel mailing list
			geos-devel@geos.refractions.net 
	
http://geos.refractions.net/mailman/listinfo/geos-devel
			
			    

		_______________________________________________
		geos-devel mailing list
		geos-devel@geos.refractions.net
		http://geos.refractions.net/mailman/listinfo/geos-devel
		
		
		  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20060202/3b64e199/attachment.html
From hobu at iastate.edu  Sun Feb  5 20:33:34 2006
From: hobu at iastate.edu (Howard Butler)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] WKB/WKT Reader/Writer in the C API
Message-ID: <p06200703c00c57a4a9d9@[192.168.11.4]>

strk,

Can we put the WKB/WKT readers and writers in the C API?  Are they 
already there?

Howard

From strk at refractions.net  Sun Feb  5 20:36:13 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] WKB/WKT Reader/Writer in the C API
In-Reply-To: <p06200703c00c57a4a9d9@[192.168.11.4]>
References: <p06200703c00c57a4a9d9@[192.168.11.4]>
Message-ID: <20060206013612.GA4068@keybit.net>

On Sun, Feb 05, 2006 at 07:33:34PM -0600, Howard Butler wrote:
> strk,
> 
> Can we put the WKB/WKT readers and writers in the C API?  Are they 
> already there?

Already there.
--strk;

From strk at keybit.net  Mon Feb  6 07:29:28 2006
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] JTS Assert class
Message-ID: <20060206122928.GA9057@keybit.net>

Martin, am I right assuming the Assert
class to be only used to catch developer
errors (as contrary to user input execptions)?

I'm thinking about changing all Assert::isTrue()
calls with assert() macro provided by standard
C++ lib. An expression evaluating to false
will abort the program.

--strk;

 +----------------------------------------+
 | Fight against software patents in EU!  |
 | www.ffii.org www.nosoftwarepatents.org |
 +----------------------------------------+


From mbdavis at VividSolutions.com  Mon Feb  6 12:08:53 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] RE: JTS Assert class
Message-ID: <5A94289A9268514C8D6C0F1FF44BA02796D786@venus.VividSolutions.com>

Yep, that's the intention.

It should be no problem replacing it with the standard C++ assert.  We
only used our own class because at that time Java did not have a
built-in assert facility.

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: strk [mailto:strk@keybit.net] 
> Sent: February 6, 2006 4:29 AM
> To: Martin Davis
> Cc: geos-devel@geos.refractions.net
> Subject: JTS Assert class
> 
> 
> Martin, am I right assuming the Assert
> class to be only used to catch developer
> errors (as contrary to user input execptions)?
> 
> I'm thinking about changing all Assert::isTrue()
> calls with assert() macro provided by standard
> C++ lib. An expression evaluating to false
> will abort the program.
> 
> --strk;
> 
>  +----------------------------------------+
>  | Fight against software patents in EU!  |
>  | www.ffii.org www.nosoftwarepatents.org |  
> +----------------------------------------+
> 
> 

From cfis at interserv.com  Tue Feb  7 00:17:02 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOS Head no longer compiles on MinGW
Message-ID: <43E82D4E.1030409@interserv.com>

Hi everyone,

The recent changes to GEOS have broken the MinGW windows build (up to 
two weeks ago everything built fine).

The first problem is that the generated makefiles have libtool use gcc 
and not g++, thus the standard C++ library is not being linked.  The 
problem is that autoconf sees there are no sources a library it will 
choose the C compiler, not the C++ compiler.  This is now the case for 
GEOS, if you look at makefile.am in the source directory.

libgeos_la_SOURCES =

Note there are no sources anymore.  The post below describes the problem 
- but provides no solution:

http://lists.debian.org/debian-mentors/2003/06/msg00000.html

This problem gets some hits on Google, but I've found no solutions.  
Maybe someone knows how to fix this?  For the moment I just manually 
update the makefiles (which is the best solution offered in the post above).

The second issue is more critical.  The MingW linker can't seem to 
handle GEOS's new layout with a library in each directory.  The linker 
dies with a segmentation fault, and this error message:

mingw32\bin\ld.exe: BFD 2.16.91 20050827 assertion fail 
../../src/bfd/cofflink.c:1926

Searching again with Google, its seems like lots of people have problems 
with cofflink, but I can't seem to dig up any help on this issue.  I 
guess the next step is go find the source for cofflink and see what 
assertion is failing.

Once again, any help appreciated!

Note my environment is MingW on Windows XP. g++ version 3.4.4, ld 
version 2.16.91, libtool version 1.5.22, autoconf version 2.59.

Thanks,

Charlie

Charlie




-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2781 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060206/9a5807a3/smime.bin
From cfis at interserv.com  Tue Feb  7 01:07:52 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOS Head no longer compiles on MinGW
In-Reply-To: <43E82D4E.1030409@interserv.com>
References: <43E82D4E.1030409@interserv.com>
Message-ID: <43E83938.2070907@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2781 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060206/186296af/smime.bin
From cfis at interserv.com  Tue Feb  7 13:48:54 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOS Head no longer compiles on MinGW
In-Reply-To: <43E82D4E.1030409@interserv.com>
References: <43E82D4E.1030409@interserv.com>
Message-ID: <43E8EB96.5080800@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2781 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060207/4304c121/smime.bin
From sgillies at frii.com  Wed Feb  8 10:23:02 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Adding geometric area() to C API
Message-ID: <2F0FAF41-0F1C-457B-93E2-49880E04B603@frii.com>

strk,

Can you explain to me how I would go about adding to the C API? I am  
particularly interested in exposing getArea().

cheers,
Sean

---
Sean Gillies
sgillies at frii dot com
http://zcologia.com/news




From strk at refractions.net  Wed Feb  8 10:43:29 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Adding geometric area() to C API
In-Reply-To: <2F0FAF41-0F1C-457B-93E2-49880E04B603@frii.com>
References: <2F0FAF41-0F1C-457B-93E2-49880E04B603@frii.com>
Message-ID: <20060208154329.GA39111@keybit.net>

On Wed, Feb 08, 2006 at 08:23:02AM -0700, Sean Gillies wrote:
> strk,
> 
> Can you explain to me how I would go about adding to the C API? I am  
> particularly interested in exposing getArea().

It should be very simple.
Next release will come out of HEAD, so:

* get head 
* cd capi
* edit geos_c.cpp:
	
	extern "C" int GEOS_DLL GEOSArea(const Geometry *g, double *area);
	...
	int
	GEOSArea(const Geometry *g, double *area)
	{
		try  {
			*result = g->getArea();
		} catch (whatever) {
			ERROR_MESSAGE(whatever_msg);
			return 0;
		}
		return 1;
	}	
 
* edit geos_c.h.in:

	/* Return 0 on exception, 1 otherwise */
	extern int GEOS_DLL GEOSArea(const GEOSGeom g1, double *area);

* test
* cvs diff -U2 | mail strk

Mmm.. it seems it's done already, just make sure you catch
both GEOSException* _AND_ std::exception&, as GEOSException
will probably be changed to a std::exception derived.

--strk; 

 +----------------------------------------+
 | Fight against software patents in EU!  |
 | www.ffii.org www.nosoftwarepatents.org |
 +----------------------------------------+


From pramsey at refractions.net  Wed Feb  8 18:25:45 2006
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOS Upgrade to JTS 1.7 Parity
Message-ID: <5A48BC95-E627-4B75-9AB7-16AC4580B692@refractions.net>

FYI, to everyone in the PostGIS and GEOS community.  You may have  
noticed a larger number of new commits than usual flowing into the  
GEOS CVS tree.  This is because we have started re-synchronizing the  
GEOS code with the latest version of JTS, which is 1.7.  The previous  
synchronization was done for JTS 1.4, so there many new things coming  
in.

This work is bringing in some new structures and algorithms which  
should hopefully allow us to complete the final robustness steps for  
union, intersection, and difference.  If you are interested in  
funding this last mile, please contact me offline.

The JTS 1.7 synchronization is being funded by two members of the  
GEOS corporate user community, Autodesk (who use it in their new  
MapGuide Open Source offering) and Safe Software (who use it in their  
FME).  I want to thank Autodesk and Safe for their support and great  
community spirit in helping this development along.

Paul

From warmerdam at pobox.com  Wed Feb  8 19:10:08 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] WKBReader Bug Fixed
Message-ID: <931f8ea90602081610w54755eata7221ba8d1677a5@mail.gmail.com>

Folks,

I fixed a bug in the GEOS WKBReader where a WKB
'POLYGON EMPTY' caused an exception and the
exception handler crashed for some reason.   Actually,
I never tracked down why the exception handler was
crashing...

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

From strk at refractions.net  Wed Feb  8 19:55:58 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] WKBReader Bug Fixed
In-Reply-To: <931f8ea90602081610w54755eata7221ba8d1677a5@mail.gmail.com>
References: <931f8ea90602081610w54755eata7221ba8d1677a5@mail.gmail.com>
Message-ID: <20060209005558.GD43809@keybit.net>

On Wed, Feb 08, 2006 at 07:10:08PM -0500, Frank Warmerdam wrote:
> Folks,
> 
> I fixed a bug in the GEOS WKBReader where a WKB
> 'POLYGON EMPTY' caused an exception and the
> exception handler crashed for some reason.   Actually,
> I never tracked down why the exception handler was
> crashing...

Did you notice where the exception handler was at all ?
--strk;

From warmerdam at pobox.com  Wed Feb  8 20:56:42 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] WKBReader Bug Fixed
In-Reply-To: <20060209005558.GD43809@keybit.net>
References: <931f8ea90602081610w54755eata7221ba8d1677a5@mail.gmail.com>
	<20060209005558.GD43809@keybit.net>
Message-ID: <931f8ea90602081756w743db95fx2f48a900cada29df@mail.gmail.com>

On 2/8/06, strk@refractions.net <strk@refractions.net> wrote:
> Did you notice where the exception handler was at all ?
> --strk;

The WKBReader::readLineString() is calling dis.readInt()
which apparently throws an exception.  I can't seem to
debug into it.

It is trapped in the GEOSException case within
GEOSGeomFromWKB_buf().   The ERROR_MESSAGE
triggers a seg fault.

I didn't seem to have debug info on the "ge"
exception, and so couldn't inspect it to see what
was going.

I wish I could provide a more authoritative report
on the exception problem but there is just too much
opaque stuff when I try to step through in gdb.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

From strk at refractions.net  Thu Feb  9 10:58:45 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOSException: std:exception
Message-ID: <20060209155845.GI50911@keybit.net>

I've finally committed the long standing GEOSException model change.
>From now on, GEOSExceptions are thrown by const ref, rather then
by pointer.

Also, GEOSException now derives from std::exception, so if you
cleanly catch (const std::exception&) you'd be all fine with
the change, except from fine-tuned catches.

I hope this won't be too much of a problem for existing code.
(there'll be much more with next release, anyway)

--strk;

From strk at refractions.net  Thu Feb  9 11:10:27 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] CAPI and libtool (question for BSD users)
Message-ID: <20060209161027.GJ50911@keybit.net>

The CAPI has a new function GEOSArea().
Libtool manual says that this should trigger
an INTERFACE_CURRENT increment, so from

CURRENT=1
AGE=0
REVISION=1

we should go to 

CURRENT=2
AGE=1 // support all previous interfaces
REVISION=0

I know this will bring to libgeos_c.so.1.1.0
under GNU/Linux, but IIRC on BSD systems this
resulted in 2.0.0 instead, if not worst.

Is there any BSD user willing to test this ?
Basically we need to check:

	1) what would the resulting library
	   SONAME be in BSD

	2) if 2.0.0 wheter ABI compatibility
	   is really broke or not (could
	   be libtool is right)

Volunteers ?

--strk;

From eric.faurot at gmail.com  Thu Feb  9 11:41:46 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] CAPI and libtool (question for BSD users)
In-Reply-To: <20060209161027.GJ50911@keybit.net>
References: <20060209161027.GJ50911@keybit.net>
Message-ID: <e012d6b50602090841m789932d8wac2ef792fa929b7e@mail.gmail.com>

On 2/9/06, strk@refractions.net <strk@refractions.net> wrote:
> The CAPI has a new function GEOSArea().
> Libtool manual says that this should trigger
> an INTERFACE_CURRENT increment, so from
>
> CURRENT=1
> AGE=0
> REVISION=1
>
> we should go to
>
> CURRENT=2
> AGE=1 // support all previous interfaces
> REVISION=0
>
> I know this will bring to libgeos_c.so.1.1.0
> under GNU/Linux, but IIRC on BSD systems this
> resulted in 2.0.0 instead, if not worst.
>
> Is there any BSD user willing to test this ?
> Basically we need to check:
>
>         1) what would the resulting library
>            SONAME be in BSD
>
>         2) if 2.0.0 wheter ABI compatibility
>            is really broke or not (could
>            be libtool is right)

As far as OpenBSD is concerned, version info <current>:<revision>:<age>
results in lib<name>.so.<current>.<revision>, ignoring age completely.
That said, the package team decided to takeover library versioning in
ports. So anyway I do not think it is really necessary for you to try
to come up with a portable scheme wrt versioning, as it will eventually
be controlled by the packagers. They just need to be informed of backward
compatibility issues between releases to know if a major bump is required
or not.

Eric.
From strk at refractions.net  Thu Feb  9 12:45:27 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] CAPI and libtool (question for BSD users)
In-Reply-To: <e012d6b50602090841m789932d8wac2ef792fa929b7e@mail.gmail.com>
References: <20060209161027.GJ50911@keybit.net>
	<e012d6b50602090841m789932d8wac2ef792fa929b7e@mail.gmail.com>
Message-ID: <20060209174527.GF54679@keybit.net>

On Thu, Feb 09, 2006 at 05:41:46PM +0100, Eric Faurot wrote:
> On 2/9/06, strk@refractions.net <strk@refractions.net> wrote:
> > The CAPI has a new function GEOSArea().
> > Libtool manual says that this should trigger
> > an INTERFACE_CURRENT increment, so from
> >
> > CURRENT=1
> > AGE=0
> > REVISION=1
> >
> > we should go to
> >
> > CURRENT=2
> > AGE=1 // support all previous interfaces
> > REVISION=0
> >
> > I know this will bring to libgeos_c.so.1.1.0
> > under GNU/Linux, but IIRC on BSD systems this
> > resulted in 2.0.0 instead, if not worst.
> >
> > Is there any BSD user willing to test this ?
> > Basically we need to check:
> >
> >         1) what would the resulting library
> >            SONAME be in BSD
> >
> >         2) if 2.0.0 wheter ABI compatibility
> >            is really broke or not (could
> >            be libtool is right)
> 
> As far as OpenBSD is concerned, version info <current>:<revision>:<age>
> results in lib<name>.so.<current>.<revision>, ignoring age completely.

But. Why ?!
Is it a libtool bug or is there a reason ?

--strk;

> That said, the package team decided to takeover library versioning in
> ports. So anyway I do not think it is really necessary for you to try
> to come up with a portable scheme wrt versioning, as it will eventually
> be controlled by the packagers. They just need to be informed of backward
> compatibility issues between releases to know if a major bump is required
> or not.
> 
> Eric.

> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 +----------------------------------------+
 | Fight against software patents in EU!  |
 | www.ffii.org www.nosoftwarepatents.org |
 +----------------------------------------+


From eric.faurot at gmail.com  Thu Feb  9 14:03:10 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] CAPI and libtool (question for BSD users)
In-Reply-To: <20060209174527.GF54679@keybit.net>
References: <20060209161027.GJ50911@keybit.net>
	<e012d6b50602090841m789932d8wac2ef792fa929b7e@mail.gmail.com>
	<20060209174527.GF54679@keybit.net>
Message-ID: <e012d6b50602091103y3fad5cd3r59925fa7c769cf33@mail.gmail.com>

> > As far as OpenBSD is concerned, version info <current>:<revision>:<age>
> > results in lib<name>.so.<current>.<revision>, ignoring age completely.
>
> But. Why ?!
> Is it a libtool bug or is there a reason ?

OpenBSD has its own libtool packaged in this specific way. IMHO it is
a very reasonnable thing to do since libtool is supposed to be
platform-specific. But basically, the real problem is that the
GNU/linux/libtool model for library versioning is simply not
applicable on BSD. So there is no correct solution in general,
only "vendor"-specific policy. Which is why you cannot impose
or expect soname to be this or that.

Eric.
From mateusz at loskot.net  Fri Feb 10 04:32:47 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOSException: std:exception
In-Reply-To: <20060209155845.GI50911@keybit.net>
References: <20060209155845.GI50911@keybit.net>
Message-ID: <43EC5DBF.3040402@loskot.net>

strk@refractions.net wrote:
> I've finally committed the long standing GEOSException model change.
>>From now on, GEOSExceptions are thrown by const ref, rather then
> by pointer.

I'd like to clarify one thing.
Those exceptions aren't thrown by const ref, but only handled by const 
reference.
Somebody may misunderstand that "thrown by const ref" means special 
syntax etc.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Fri Feb 10 05:30:54 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOSException: std:exception
In-Reply-To: <43EC5DBF.3040402@loskot.net>
References: <20060209155845.GI50911@keybit.net> <43EC5DBF.3040402@loskot.net>
Message-ID: <20060210103054.GA65697@keybit.net>

On Fri, Feb 10, 2006 at 10:32:47AM +0100, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> >I've finally committed the long standing GEOSException model change.
> >>From now on, GEOSExceptions are thrown by const ref, rather then
> >by pointer.
> 
> I'd like to clarify one thing.
> Those exceptions aren't thrown by const ref, but only handled by const 
> reference.
> Somebody may misunderstand that "thrown by const ref" means special 
> syntax etc.

Confirmed. Sorry for the confusion.

--strk;

From Charlie.Okeefe at ngc.com  Sun Feb 12 20:22:55 2006
From: Charlie.Okeefe at ngc.com (Okeefe, Charlie (Mission Systems))
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Planar point location query?
Message-ID: <77771F5FF7A2ED42B9B6F43ADCA95A9F06D6E2@xmbco501.northgrum.com>

I'm wondering if GEOS is (capable of) / (a good fit for) answering the
following problem:
 
Given a static database of countries and oceans in the world, each
defined by a set of polygons, answer the query, "which country or ocean
contains point P?" where P has some arbitrary latitude and longitude.
 
Thanks for any help!
 
Charlie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20060212/212b7674/attachment.html
From pramsey at refractions.net  Sun Feb 12 21:12:35 2006
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Planar point location query?
In-Reply-To: <77771F5FF7A2ED42B9B6F43ADCA95A9F06D6E2@xmbco501.northgrum.com>
References: <77771F5FF7A2ED42B9B6F43ADCA95A9F06D6E2@xmbco501.northgrum.com>
Message-ID: <174A0BD1-D3BD-43FA-9131-80C839221050@refractions.net>

That's a pretty easy question Charlie, and almost any spatial  
framework at all will answer it.  Whether GEOS is the tool for the  
job depends on what your larger architectural context is.  Is the  
question always going to be that easy, or will it get harder, larger,  
more frequent?  Would the flexibility of a database help?  If time-to- 
deployment is an issue, either using PostGIS and SQL as the  
interface, or Mapserver and the Mapserver CGI as an interface can  
give you a system that answers that kind of a question in half an  
hour or less of setup.

P

On 12-Feb-06, at 5:22 PM, Okeefe, Charlie (Mission Systems) wrote:

> I'm wondering if GEOS is (capable of) / (a good fit for) answering  
> the following problem:
>
> Given a static database of countries and oceans in the world, each  
> defined by a set of polygons, answer the query, "which country or  
> ocean contains point P?" where P has some arbitrary latitude and  
> longitude.
>
> Thanks for any help!
>
> Charlie
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


From Charlie.Okeefe at ngc.com  Mon Feb 13 13:13:54 2006
From: Charlie.Okeefe at ngc.com (Okeefe, Charlie (Mission Systems))
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Planar point location query?
Message-ID: <77771F5FF7A2ED42B9B6F43ADCA95A9F06D6E3@xmbco501.northgrum.com>

Well, more broadly, I'm writing a 3D earth viewer for terrain, raster
and vector data as well as overlaid function plots. One early issue that
sparked my question was, if the user clicks somewhere with the mouse,
quickly determine the region the user clicked. I suppose I am looking
for a sort of computational geometry framework, especially for dealing
with vector data. So far I use GDAL for accessing geospatial data but I
think that is just an importer/exporter. Whether to use a database or
not, I'm not sure about yet. Can you suggest tools (LGPL or similar)
that might be ideal for this? Thanks again for your response.

Charlie

-----Original Message-----
From: geos-devel-bounces@geos.refractions.net
[mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of Paul
Ramsey
Sent: Sunday, February 12, 2006 7:13 PM
To: GEOS Development List
Subject: Re: [geos-devel] Planar point location query?

That's a pretty easy question Charlie, and almost any spatial framework
at all will answer it.  Whether GEOS is the tool for the job depends on
what your larger architectural context is.  Is the question always going
to be that easy, or will it get harder, larger, more frequent?  Would
the flexibility of a database help?  If time-to- deployment is an issue,
either using PostGIS and SQL as the interface, or Mapserver and the
Mapserver CGI as an interface can give you a system that answers that
kind of a question in half an hour or less of setup.

P

On 12-Feb-06, at 5:22 PM, Okeefe, Charlie (Mission Systems) wrote:

> I'm wondering if GEOS is (capable of) / (a good fit for) answering the

> following problem:
>
> Given a static database of countries and oceans in the world, each 
> defined by a set of polygons, answer the query, "which country or 
> ocean contains point P?" where P has some arbitrary latitude and 
> longitude.
>
> Thanks for any help!
>
> Charlie
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net
http://geos.refractions.net/mailman/listinfo/geos-devel

From pramsey at refractions.net  Mon Feb 13 16:59:02 2006
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Planar point location query?
In-Reply-To: <77771F5FF7A2ED42B9B6F43ADCA95A9F06D6E3@xmbco501.northgrum.com>
References: <77771F5FF7A2ED42B9B6F43ADCA95A9F06D6E3@xmbco501.northgrum.com>
Message-ID: <E6039BC3-6872-4433-B7DD-037F3AE47F74@refractions.net>

Like osgPlanet?  <http://www.ossim.org/tiki-read_article.php? 
articleId=3>
Or Punt? <http://punt.sourceforge.net/>

For vector computational geometry, GEOS is a good choice, but for 3d  
viewer purposes there are much more developed frameworks to hang your  
stuff off of.  The two links above are examples of developed  
projects, the link below is more infrastructural, but still more on- 
point than GEOS in particular.

Openscenegraph: <http://www.openscenegraph.org/>

Don't re-invent the wheel on this one, there are lots of open source  
starting points to work with.

Paul


On 13-Feb-06, at 10:13 AM, Okeefe, Charlie (Mission Systems) wrote:

> Well, more broadly, I'm writing a 3D earth viewer for terrain, raster
> and vector data as well as overlaid function plots. One early issue  
> that
> sparked my question was, if the user clicks somewhere with the mouse,
> quickly determine the region the user clicked. I suppose I am looking
> for a sort of computational geometry framework, especially for dealing
> with vector data. So far I use GDAL for accessing geospatial data  
> but I
> think that is just an importer/exporter. Whether to use a database or
> not, I'm not sure about yet. Can you suggest tools (LGPL or similar)
> that might be ideal for this? Thanks again for your response.
>
> Charlie
>
> -----Original Message-----
> From: geos-devel-bounces@geos.refractions.net
> [mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of Paul
> Ramsey
> Sent: Sunday, February 12, 2006 7:13 PM
> To: GEOS Development List
> Subject: Re: [geos-devel] Planar point location query?
>
> That's a pretty easy question Charlie, and almost any spatial  
> framework
> at all will answer it.  Whether GEOS is the tool for the job  
> depends on
> what your larger architectural context is.  Is the question always  
> going
> to be that easy, or will it get harder, larger, more frequent?  Would
> the flexibility of a database help?  If time-to- deployment is an  
> issue,
> either using PostGIS and SQL as the interface, or Mapserver and the
> Mapserver CGI as an interface can give you a system that answers that
> kind of a question in half an hour or less of setup.
>
> P
>
> On 12-Feb-06, at 5:22 PM, Okeefe, Charlie (Mission Systems) wrote:
>
>> I'm wondering if GEOS is (capable of) / (a good fit for) answering  
>> the
>
>> following problem:
>>
>> Given a static database of countries and oceans in the world, each
>> defined by a set of polygons, answer the query, "which country or
>> ocean contains point P?" where P has some arbitrary latitude and
>> longitude.
>>
>> Thanks for any help!
>>
>> Charlie
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@geos.refractions.net
>> http://geos.refractions.net/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


From Charlie.Okeefe at ngc.com  Tue Feb 14 00:27:14 2006
From: Charlie.Okeefe at ngc.com (Okeefe, Charlie (Mission Systems))
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Planar point location query?
Message-ID: <77771F5FF7A2ED42B9B6F43ADCA95A9F06D6E4@xmbco501.northgrum.com>

I am actually already using openscenegraph - I have a 3d earth with
terrain and images, but no vector stuff yet. It wasn't obvious to me how
to do planar point location using openscenegraph though. I will have to
look again.

Charlie

-----Original Message-----
From: geos-devel-bounces@geos.refractions.net
[mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of Paul
Ramsey
Sent: Monday, February 13, 2006 2:59 PM
To: GEOS Development List
Subject: Re: [geos-devel] Planar point location query?

Like osgPlanet?  <http://www.ossim.org/tiki-read_article.php? 
articleId=3>
Or Punt? <http://punt.sourceforge.net/>

For vector computational geometry, GEOS is a good choice, but for 3d
viewer purposes there are much more developed frameworks to hang your
stuff off of.  The two links above are examples of developed projects,
the link below is more infrastructural, but still more on- point than
GEOS in particular.

Openscenegraph: <http://www.openscenegraph.org/>

Don't re-invent the wheel on this one, there are lots of open source
starting points to work with.

Paul


On 13-Feb-06, at 10:13 AM, Okeefe, Charlie (Mission Systems) wrote:

> Well, more broadly, I'm writing a 3D earth viewer for terrain, raster 
> and vector data as well as overlaid function plots. One early issue 
> that sparked my question was, if the user clicks somewhere with the 
> mouse, quickly determine the region the user clicked. I suppose I am 
> looking for a sort of computational geometry framework, especially for

> dealing with vector data. So far I use GDAL for accessing geospatial 
> data but I think that is just an importer/exporter. Whether to use a 
> database or not, I'm not sure about yet. Can you suggest tools (LGPL 
> or similar) that might be ideal for this? Thanks again for your 
> response.
>
> Charlie
>
> -----Original Message-----
> From: geos-devel-bounces@geos.refractions.net
> [mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of Paul 
> Ramsey
> Sent: Sunday, February 12, 2006 7:13 PM
> To: GEOS Development List
> Subject: Re: [geos-devel] Planar point location query?
>
> That's a pretty easy question Charlie, and almost any spatial 
> framework at all will answer it.  Whether GEOS is the tool for the job

> depends on what your larger architectural context is.  Is the question

> always going to be that easy, or will it get harder, larger, more 
> frequent?  Would the flexibility of a database help?  If time-to- 
> deployment is an issue, either using PostGIS and SQL as the interface,

> or Mapserver and the Mapserver CGI as an interface can give you a 
> system that answers that kind of a question in half an hour or less of

> setup.
>
> P
>
> On 12-Feb-06, at 5:22 PM, Okeefe, Charlie (Mission Systems) wrote:
>
>> I'm wondering if GEOS is (capable of) / (a good fit for) answering 
>> the
>
>> following problem:
>>
>> Given a static database of countries and oceans in the world, each 
>> defined by a set of polygons, answer the query, "which country or 
>> ocean contains point P?" where P has some arbitrary latitude and 
>> longitude.
>>
>> Thanks for any help!
>>
>> Charlie
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@geos.refractions.net
>> http://geos.refractions.net/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net
http://geos.refractions.net/mailman/listinfo/geos-devel

From sgillies at frii.com  Wed Feb 15 18:31:04 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOS 2.2.2
Message-ID: <976FC462-8C5B-412F-98BF-D800ADBE4C49@frii.com>

Hi strk,

What would you think about porting my additions of GEOSArea and  
GEOSGeomType to the C API back to 2.1 and making a 2.2.2 release?

Sean

---
Sean Gillies
sgillies at frii dot com
http://zcologia.com/news




From strk at refractions.net  Thu Feb 16 12:06:31 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
Message-ID: <20060216170631.GC50460@keybit.net>

Need some help from C++ gurus.
One of the new JTS classes expects to modify
the Coordinates associated with a SegmentString.

So far the SegmentString kept a const-pointe
to an externally provided CoordinateSequence.
This means you can't modify a CoordinateSequence
getting it's pointer from the SegmentString,
even if the SegmentString itself is non-const
(it's not the owner of the CoordinateSequence).

Changing the interface to allow SegmentString
to keep non-const pointers to CoordinateSequence
instead, will break all promises of constness
on which existing code relies.

What I'd like to model is a SegmentString
that will either store a const or a non-const
pointer to CoordinateSequence depending on
construction. Is it possible at all w/out 
making it a templated class ?

--strk;


From strk at refractions.net  Thu Feb 16 12:10:45 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] GEOS 2.2.2
In-Reply-To: <976FC462-8C5B-412F-98BF-D800ADBE4C49@frii.com>
References: <976FC462-8C5B-412F-98BF-D800ADBE4C49@frii.com>
Message-ID: <20060216171045.GD50460@keybit.net>

On Wed, Feb 15, 2006 at 04:31:04PM -0700, Sean Gillies wrote:
> Hi strk,
> 
> What would you think about porting my additions of GEOSArea and  
> GEOSGeomType to the C API back to 2.1 and making a 2.2.2 release?

I think 2.2.2 should just be a bug-fix relase.
If we add functionalities/interfaces we should go with 2.3.0, but
I don't think those two functions apply for a minor increment.

--strk;

From mateusz at loskot.net  Thu Feb 16 12:44:12 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <20060216170631.GC50460@keybit.net>
References: <20060216170631.GC50460@keybit.net>
Message-ID: <43F4B9EC.1070602@loskot.net>

strk@refractions.net wrote:
> Need some help from C++ gurus.
> One of the new JTS classes expects to modify
> the Coordinates associated with a SegmentString.
> 
> So far the SegmentString kept a const-pointe
> to an externally provided CoordinateSequence.
> This means you can't modify a CoordinateSequence
> getting it's pointer from the SegmentString,
> even if the SegmentString itself is non-const
> (it's not the owner of the CoordinateSequence).

I've taken a look at GEOS sources and that's clear for me.

> Changing the interface to allow SegmentString
> to keep non-const pointers to CoordinateSequence
> instead, will break all promises of constness
> on which existing code relies.

IMHO it does not make sense saying storing data member by non-const 
pointer "will break all promises of constness".
You can store data member as private and non-const and you still can 
provide 100% of const correctness by encapsulation this data member.

IMO current design of collaboration of SegmentString and 
CoordinateString is wrong. SegmentString should store non-const pointer 
to CoordinateString *and* provide appropriate API which keep things 
correct from const point of view.
Keeping CoordinateSequence by const pointer is really hazardous because 
it will likely be changed/edited in some contexts.

Check STL sources and you will see that e.g. std::vector::bedin() and 
std::vector::end() are provided in two versions: const and non-const, so 
you can retrive vector elements by as read-only - by const reference or 
read-write by non-const reference depending on current context.

Check this piece of code:

#include <iostream>
using namespace std;

struct C
{
     int mx;
     int my;
     C() : mx(0), my(0) {}
};

class B
{
     C* c;  // Store C by non-const pointer
public:
     B(C* pc) : c(pc) {}
     ~B() { delete c; }

     // Const correctness provided by properly designed API
     C* get() { return c; }
     const C* get() const { return c; }
};

int main()
{
     // Create objects
     C* pc = new C();
     B b(pc);

     // Retrieve B::c by non-const pointer to edit B::c data members
     C* c1 = b.get(); // Here no constness is required
     cout << "0: " << c1->mx << "  " << c1->my << endl;
     c1->mx = 9;
     c1->my = 10;

     // Now, retrieve B::c by *const* pointer to only *read* B::c member
     const C* c2 = b.get(); // Here const correctness is provided
     cout << "1: " << c2->mx << "  " << c2->my << endl;

     // uncomment and you'll get compilation error
     //c2->mx = 10;  // c2 is read-only !!!
}


So, B::get() interface provide proper const correctness if any context 
will require it.

Certainly, in other classes, non-editable by design, you can provide 
read-only interface:

class ReadOnlyB
{
     C* c;  // Store C by non-const pointer
public:
     B(C* pc) : c(pc) {}
     ~B() { delete c; }

     // Const correctness provided by properly designed API
     const C* get() const { return c; }
};

> What I'd like to model is a SegmentString
> that will either store a const or a non-const
> pointer to CoordinateSequence depending on
> construction. Is it possible at all w/out 
> making it a templated class ?


I don't like it. Well working const correctness and encapsulation can be 
achived by properly modeled class interface but not by class internals.
Class internals should be separated from outside world by class 
interface and not its (internals) implementation, that's why you can 
hide data in class and provide proper interface. If you will need 
another behaviour e.g. read-write instead of read-only then you can add 
functions to class interface and if you need read-only behaviour of 
read-write class then you can wrap it behind read-only interface.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Thu Feb 16 12:54:40 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <43F4B9EC.1070602@loskot.net>
References: <20060216170631.GC50460@keybit.net> <43F4B9EC.1070602@loskot.net>
Message-ID: <20060216175440.GC51738@keybit.net>

Are you suggesting SegmentString should take ownership
of the passed CoordinateSequence ?
This is not how it currently works. Not that I like current
behaviour, but I'm trying to understand your suggestion.

In the examples you show B takes ownership of B*, things
get simpler in that case. But when B does not own C, changing
C isn't the same as changing B.

--strk;

On Thu, Feb 16, 2006 at 06:44:12PM +0100, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> >Need some help from C++ gurus.
> >One of the new JTS classes expects to modify
> >the Coordinates associated with a SegmentString.
> >
> >So far the SegmentString kept a const-pointe
> >to an externally provided CoordinateSequence.
> >This means you can't modify a CoordinateSequence
> >getting it's pointer from the SegmentString,
> >even if the SegmentString itself is non-const
> >(it's not the owner of the CoordinateSequence).
> 
> I've taken a look at GEOS sources and that's clear for me.
> 
> >Changing the interface to allow SegmentString
> >to keep non-const pointers to CoordinateSequence
> >instead, will break all promises of constness
> >on which existing code relies.
> 
> IMHO it does not make sense saying storing data member by non-const 
> pointer "will break all promises of constness".
> You can store data member as private and non-const and you still can 
> provide 100% of const correctness by encapsulation this data member.
> 
> IMO current design of collaboration of SegmentString and 
> CoordinateString is wrong. SegmentString should store non-const pointer 
> to CoordinateString *and* provide appropriate API which keep things 
> correct from const point of view.
> Keeping CoordinateSequence by const pointer is really hazardous because 
> it will likely be changed/edited in some contexts.
> 
> Check STL sources and you will see that e.g. std::vector::bedin() and 
> std::vector::end() are provided in two versions: const and non-const, so 
> you can retrive vector elements by as read-only - by const reference or 
> read-write by non-const reference depending on current context.
> 
> Check this piece of code:
> 
> #include <iostream>
> using namespace std;
> 
> struct C
> {
>     int mx;
>     int my;
>     C() : mx(0), my(0) {}
> };
> 
> class B
> {
>     C* c;  // Store C by non-const pointer
> public:
>     B(C* pc) : c(pc) {}
>     ~B() { delete c; }
> 
>     // Const correctness provided by properly designed API
>     C* get() { return c; }
>     const C* get() const { return c; }
> };
> 
> int main()
> {
>     // Create objects
>     C* pc = new C();
>     B b(pc);
> 
>     // Retrieve B::c by non-const pointer to edit B::c data members
>     C* c1 = b.get(); // Here no constness is required
>     cout << "0: " << c1->mx << "  " << c1->my << endl;
>     c1->mx = 9;
>     c1->my = 10;
> 
>     // Now, retrieve B::c by *const* pointer to only *read* B::c member
>     const C* c2 = b.get(); // Here const correctness is provided
>     cout << "1: " << c2->mx << "  " << c2->my << endl;
> 
>     // uncomment and you'll get compilation error
>     //c2->mx = 10;  // c2 is read-only !!!
> }
> 
> 
> So, B::get() interface provide proper const correctness if any context 
> will require it.
> 
> Certainly, in other classes, non-editable by design, you can provide 
> read-only interface:
> 
> class ReadOnlyB
> {
>     C* c;  // Store C by non-const pointer
> public:
>     B(C* pc) : c(pc) {}
>     ~B() { delete c; }
> 
>     // Const correctness provided by properly designed API
>     const C* get() const { return c; }
> };
> 
> >What I'd like to model is a SegmentString
> >that will either store a const or a non-const
> >pointer to CoordinateSequence depending on
> >construction. Is it possible at all w/out 
> >making it a templated class ?
> 
> 
> I don't like it. Well working const correctness and encapsulation can be 
> achived by properly modeled class interface but not by class internals.
> Class internals should be separated from outside world by class 
> interface and not its (internals) implementation, that's why you can 
> hide data in class and provide proper interface. If you will need 
> another behaviour e.g. read-write instead of read-only then you can add 
> functions to class interface and if you need read-only behaviour of 
> read-write class then you can wrap it behind read-only interface.
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                            
      State-collected Geographic Data is public property   
                                                          
                 -*- sign the petition -*-               
                                                        
              http://petition.publicgeodata.org        
                                                      
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


From mateusz at loskot.net  Thu Feb 16 13:12:32 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <20060216175440.GC51738@keybit.net>
References: <20060216170631.GC50460@keybit.net> <43F4B9EC.1070602@loskot.net>
	<20060216175440.GC51738@keybit.net>
Message-ID: <43F4C090.8080208@loskot.net>

strk@refractions.net wrote:
> Are you suggesting SegmentString should take ownership
> of the passed CoordinateSequence ?
> This is not how it currently works. Not that I like current
> behaviour, but I'm trying to understand your suggestion.
> 
> In the examples you show B takes ownership of B*, things
> get simpler in that case. But when B does not own C, changing
> C isn't the same as changing B.

In my example B owns object assigned to B::c because it's simple example 
and my aim was to make it correct.
But in my idea ownership of object assigned to B::c is not important.
We are talking about const correctness what does not depend on objects 
ownership.

How is responsible to destroy CoordinateSequence assigned to 
SegmentString in current solution?
As I see SegmentString's destructor does not do it.
So, if you will make SegmentString::pts member as non-const:

CoordinateSequence *pts;

it won't change the situation regarding ptr ownership at all.

If you are asking about ownership in my example (my idea) you have two 
choices simple:

1 - SegmentString owns CoordinateSequence passed by pointer to 
SegmentString constructor. So, CoordinateSequence owned by SegmentString 
is destroyed in SegmentString destructor.

2. - CoordinateSequence is not owned by SegmentString but then it must 
be *explained* in the documentation and user (client of SegmentString) 
is required to deallocate CoordinateSequence passed to SegmentString.
In this situation SegmentString acts as a handler of CoordinateSequence.
Similar "solution" is used in GDAL where you have static factory methods 
like CreateFeature and deallocators like DestroyFeature.


Another idea is to provide a kind of garbage collector to this hierarchy 
  in form of smart pointers e.g. shared_ptr from Boost library.
Note: there are many types of smart pointers so it should be analyzed 
which one fits most here.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Fri Feb 17 03:39:23 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <43F4C090.8080208@loskot.net>
References: <20060216170631.GC50460@keybit.net> <43F4B9EC.1070602@loskot.net>
	<20060216175440.GC51738@keybit.net> <43F4C090.8080208@loskot.net>
Message-ID: <20060217083923.GC53151@keybit.net>

On Thu, Feb 16, 2006 at 07:12:32PM +0100, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> >Are you suggesting SegmentString should take ownership
> >of the passed CoordinateSequence ?
> >This is not how it currently works. Not that I like current
> >behaviour, but I'm trying to understand your suggestion.
> >
> >In the examples you show B takes ownership of B*, things
> >get simpler in that case. But when B does not own C, changing
> >C isn't the same as changing B.
> 
> In my example B owns object assigned to B::c because it's simple example 
> and my aim was to make it correct.
> But in my idea ownership of object assigned to B::c is not important.
> We are talking about const correctness what does not depend on objects 
> ownership.

I somehow disagree on this.
If B does not own C*, changing C* should not be the
same as changing B iself.

> How is responsible to destroy CoordinateSequence assigned to 
> SegmentString in current solution?
> As I see SegmentString's destructor does not do it.
> So, if you will make SegmentString::pts member as non-const:
> 
> CoordinateSequence *pts;
> 
> it won't change the situation regarding ptr ownership at all.

No, but it won't be able to assign a const pointer to it.

The problem can be seen in operation/Buffer/OffsetCurveSetBuilder.cpp.
The addCurve(const CoordinateSequence* coord) function constructs
a SegmentString passing it 'coord'. This is possible as far as
SegmentString promises not to change 'coord' itself.
Indeed SegmentString won't change it, but then it won't provide
any method to get a non-const ref to let others change it.
This (changing CoordinateSequence trhough SegmentString) would
be required by the ScaledNoder class, which I'm about to port
from JTS.

Currently, the CoordinateSequence ownership is:
	- of OffsetCurveBuilder (ptList)
	- of SegmentNodeList 
	- of Edge (in EdgeNodingValidator, unused actually)

I guess making SegmentString own the CoordinateSequence could
be a viable solution for now.

--strk;

From mateusz at loskot.net  Fri Feb 17 06:35:56 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <20060217083923.GC53151@keybit.net>
References: <20060216170631.GC50460@keybit.net>
	<43F4B9EC.1070602@loskot.net>	<20060216175440.GC51738@keybit.net>
	<43F4C090.8080208@loskot.net> <20060217083923.GC53151@keybit.net>
Message-ID: <43F5B51C.1080602@loskot.net>

strk@refractions.net wrote:
> On Thu, Feb 16, 2006 at 07:12:32PM +0100, Mateusz ??oskot wrote:
>>strk@refractions.net wrote:
>>
>>>Are you suggesting SegmentString should take ownership
>>>of the passed CoordinateSequence ?
>>>This is not how it currently works. Not that I like current
>>>behaviour, but I'm trying to understand your suggestion.
>>>
>>>In the examples you show B takes ownership of B*, things
>>>get simpler in that case. But when B does not own C, changing
>>>C isn't the same as changing B.
>>
>>In my example B owns object assigned to B::c because it's simple example 
>>and my aim was to make it correct.
>>But in my idea ownership of object assigned to B::c is not important.
>>We are talking about const correctness what does not depend on objects 
>>ownership.
> 
> 
> I somehow disagree on this.
> If B does not own C*, changing C* should not be the
> same as changing B iself.


OK, I agree with small note: ownership depends on relation defined
between B and C. This relation is a matter of design.

>>How is responsible to destroy CoordinateSequence assigned to 
>>SegmentString in current solution?
>>As I see SegmentString's destructor does not do it.
>>So, if you will make SegmentString::pts member as non-const:
>>
>>CoordinateSequence *pts;
>>
>>it won't change the situation regarding ptr ownership at all.
> 
> 
> No, but it won't be able to assign a const pointer to it.

Yes, that may be the problem.
Another option, I assume SegmentString owns CoordinateSequence,
is to add constructor assigning CoordinateSequence by-copy.

SegmentString(CoordinateSequence const& newPts)
{
    // 1. Create new CoordianteSequence dynamically, assign to pts
    // 2. Make a copy oc newPts

    // pts will be deleted in SegmentString destructor
}

or keep two constructors taking pointers:

// This one will assign newPts to CoordinateSequence::pts
SegmentString(CoordinateSequence* newPts);

// This one will make a copy of newPts and assing
// new copy to CoordinateSequence::pts
SegmentString(const CoordinateSequence* newPts)

Note: Making changes related to const correctness in current stage of 
GEOS may be a big challange and may require to refactor huge amount of code:
http://parashift.com/c++-faq-lite/const-correctness.html#faq-18.3

> The problem can be seen in operation/Buffer/OffsetCurveSetBuilder.cpp.
> The addCurve(const CoordinateSequence* coord) function constructs
> a SegmentString passing it 'coord'. This is possible as far as
> SegmentString promises not to change 'coord' itself.
 > Indeed SegmentString won't change it, but then it won't provide
 > any method to get a non-const ref to let others change it.

Is this promise a matter of logic or because of that coordinate sequence 
is hold by const pointe?
const CoordinateSequence* pts;

> This (changing CoordinateSequence trhough SegmentString) would
> be required by the ScaledNoder class, which I'm about to port
> from JTS.

So, if I understand it correctly, you need to make currently read-only 
SegmentString::pts to be changable. Right?
But why SegmentString::pts can not be read-write but accessed only 
through read-only interface (member functions returning/taking const 
reference or pointer) in operation/Buffer/OffsetCurveSetBuilder.cpp
and through read-write interface in ScaledNode.

I'm still trying to point out that the context is really important so 
you don't have to make object const if the context will promise the 
const correctness.

> Currently, the CoordinateSequence ownership is:
> 	- of OffsetCurveBuilder (ptList)
> 	- of SegmentNodeList 
> 	- of Edge (in EdgeNodingValidator, unused actually)
> 
> I guess making SegmentString own the CoordinateSequence could
> be a viable solution for now.

Yes, that seems to be OK.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net


From mateusz at loskot.net  Fri Feb 17 12:55:02 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <20060216170631.GC50460@keybit.net>
References: <20060216170631.GC50460@keybit.net>
Message-ID: <43F60DF6.4000607@loskot.net>

strk@refractions.net wrote:
> Need some help from C++ gurus. One of the new JTS classes expects to 
> modify the Coordinates associated with a SegmentString.

I wonder why SegmentString::pts is declared as
const CoordinateSequence* pts;

As I see, in JTS sources SegmentString::pts is not declared as const.
I'm not a Java guru but IMHO const in Java has similar meaning
as in C++.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Sat Feb 18 09:36:32 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <43F60DF6.4000607@loskot.net>
References: <20060216170631.GC50460@keybit.net> <43F60DF6.4000607@loskot.net>
Message-ID: <20060218143632.GB78371@keybit.net>

On Fri, Feb 17, 2006 at 06:55:02PM +0100, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> >Need some help from C++ gurus. One of the new JTS classes expects to 
> >modify the Coordinates associated with a SegmentString.
> 
> I wonder why SegmentString::pts is declared as
> const CoordinateSequence* pts;
> 
> As I see, in JTS sources SegmentString::pts is not declared as const.
> I'm not a Java guru but IMHO const in Java has similar meaning
> as in C++.

I've been the 'const' pusher in GEOS. I tried adding
const-correctness here and there to help maintainance
and reduce unneeded copies.
I could take the const out of SegmentString but I guess
JTS code itself is not enough to tell what the intended
behaviour is.

Asking Martin is the way to go :)

Martin is the JTS designer.

--strk;

From mateusz at loskot.net  Sat Feb 18 10:32:06 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] SegmentString modeling
In-Reply-To: <20060218143632.GB78371@keybit.net>
References: <20060216170631.GC50460@keybit.net> <43F60DF6.4000607@loskot.net>
	<20060218143632.GB78371@keybit.net>
Message-ID: <43F73DF6.8010004@loskot.net>

strk@refractions.net wrote:
> On Fri, Feb 17, 2006 at 06:55:02PM +0100, Mateusz ??oskot wrote:
>>strk@refractions.net wrote:
>>
>>>Need some help from C++ gurus. One of the new JTS classes expects to 
>>>modify the Coordinates associated with a SegmentString.
>>
>>I wonder why SegmentString::pts is declared as
>>const CoordinateSequence* pts;
>>
>>As I see, in JTS sources SegmentString::pts is not declared as const.
>>I'm not a Java guru but IMHO const in Java has similar meaning
>>as in C++.
> 
> 
> I've been the 'const' pusher in GEOS. I tried adding
> const-correctness here and there to help maintainance
> and reduce unneeded copies.

I mostly agree but in this case const does not make better 
const-correctness. Second, it causes problems as now while porting new 
class which requires mutable access to SegmentString::pts which is 
defined as const.

OK, I see one case when current solution makes const-correctness required:

void foo(const CoordinateSequence &a)
{
     // foo promises to not to modify 'a' object so
     // it requires SegmentString to hold 'a' as const pointer - as
     // it currently is defined

     // IMPORTANT!
     // if SegmentString holds 'a' by non-const pointer then foo
     // will fail because it cannot cast from const to non-const

     SegmentString b(&a);
}

This sentence market as IMPORTANT! is very important :-) in case you 
decide to move SegmentString::pts from const to non-const declaration - 
what I also suggested in my previous replies.
So, if there is some similar function defined as foo above then problems 
may occur.
I hope my explanation is clear. If my english it very poor then please 
let me know I'll try to make it clearer ;-)

Yesterday, I consulted the problem with my friend and he suggested to 
move this case to more "modern C++" design solution based on policies.
Policy-based design of classes was introduced by Andrei Alexandrescu

http://en.wikipedia.org/wiki/Policy-based_design

and comes extremely handy in such cases, especially when you may expect 
some design changes (just as this one about moving from const -> 
non-const problem) in future.

Here is simple example how to handle const and non-const versions of the 
same type using policies:

struct use_const
{
     typedef const A * pointer_type;
};

struct dont_use_const
{
     typedef A * pointer_type;
};

template <class ConstCorrectness>
class B
{
     typedef typename ConstCorrectness::pointer_type pointer_type;
     pointer_type a;
public:
     B(pointer_type p) : a(p) {}
     pointer_type get() { return a; }
};


Now, you can define const version:

B<use_const> b(&a);

and non-const version:

B<dont_use_const> b(&a);

Both versions are interchangable and follows the Liskov Substitution 
Principle:

http://www.objectmentor.com/resources/articles/lsp.pdf


> I could take the const out of SegmentString but I guess
> JTS code itself is not enough to tell what the intended
> behaviour is.

That's usually the big problem when porting from Java or C# to C++ :-)

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From sgillies at frii.com  Sat Feb 18 12:47:15 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Segfault when passing malformed WKT to GEOSGeomFromWKT
Message-ID: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>

"POINT ()" sent to GEOSGeomFromWKT() results in a segfault with GEOS  
2.2.1. Is this a known issue? If so, what do you do in PostGIS to  
guard against this?

Sean

From strk at refractions.net  Sat Feb 18 14:37:48 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Segfault when passing malformed WKT to
	GEOSGeomFromWKT
In-Reply-To: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>
References: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>
Message-ID: <20060218193748.GJ80535@keybit.net>

On Sat, Feb 18, 2006 at 10:47:15AM -0700, Sean Gillies wrote:
> "POINT ()" sent to GEOSGeomFromWKT() results in a segfault with GEOS  
> 2.2.1. Is this a known issue? If so, what do you do in PostGIS to  
> guard against this?

Doesn't seem a known issue, please file a bug report.
No worries for PostGIS, doesn't use WKT or WKB for GEOS<->PostGIS
Geometry conversion.

--strk;

From sgillies at frii.com  Sat Feb 18 15:16:30 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Segfault when passing malformed WKT to
	GEOSGeomFromWKT
In-Reply-To: <20060218193748.GJ80535@keybit.net>
References: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>
	<20060218193748.GJ80535@keybit.net>
Message-ID: <A230F737-896D-4AC2-8555-DD83D9880BF9@frii.com>

On Feb 18, 2006, at 12:37 PM, strk@refractions.net wrote:

> On Sat, Feb 18, 2006 at 10:47:15AM -0700, Sean Gillies wrote:
>> "POINT ()" sent to GEOSGeomFromWKT() results in a segfault with GEOS
>> 2.2.1. Is this a known issue? If so, what do you do in PostGIS to
>> guard against this?
>
> Doesn't seem a known issue, please file a bug report.
> No worries for PostGIS, doesn't use WKT or WKB for GEOS<->PostGIS
> Geometry conversion.
>
> --strk;

There's a GEOS issue tracker? I didn't see anything on http:// 
geos.refractions.net.

Sean

From strk at refractions.net  Sat Feb 18 15:17:55 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Segfault when passing malformed WKT to
	GEOSGeomFromWKT
In-Reply-To: <A230F737-896D-4AC2-8555-DD83D9880BF9@frii.com>
References: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>
	<20060218193748.GJ80535@keybit.net>
	<A230F737-896D-4AC2-8555-DD83D9880BF9@frii.com>
Message-ID: <20060218201755.GM80535@keybit.net>

On Sat, Feb 18, 2006 at 01:16:30PM -0700, Sean Gillies wrote:
> On Feb 18, 2006, at 12:37 PM, strk@refractions.net wrote:
> 
> >On Sat, Feb 18, 2006 at 10:47:15AM -0700, Sean Gillies wrote:
> >>"POINT ()" sent to GEOSGeomFromWKT() results in a segfault with GEOS
> >>2.2.1. Is this a known issue? If so, what do you do in PostGIS to
> >>guard against this?
> >
> >Doesn't seem a known issue, please file a bug report.
> >No worries for PostGIS, doesn't use WKT or WKB for GEOS<->PostGIS
> >Geometry conversion.
> >
> >--strk;
> 
> There's a GEOS issue tracker? I didn't see anything on http:// 
> geos.refractions.net.

Oh, it's the postgis bug tracker, can be used for GEOS as well
(there should be a GEOS project registered).

--strk;

From sgillies at frii.com  Sat Feb 18 15:33:03 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Segfault when passing malformed WKT to
	GEOSGeomFromWKT
In-Reply-To: <20060218201755.GM80535@keybit.net>
References: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>
	<20060218193748.GJ80535@keybit.net>
	<A230F737-896D-4AC2-8555-DD83D9880BF9@frii.com>
	<20060218201755.GM80535@keybit.net>
Message-ID: <4B8EB4B2-D895-419B-A98C-D492C4969679@frii.com>

On Feb 18, 2006, at 1:17 PM, strk@refractions.net wrote:

> On Sat, Feb 18, 2006 at 01:16:30PM -0700, Sean Gillies wrote:
>> On Feb 18, 2006, at 12:37 PM, strk@refractions.net wrote:
>>
>>> On Sat, Feb 18, 2006 at 10:47:15AM -0700, Sean Gillies wrote:
>>>> "POINT ()" sent to GEOSGeomFromWKT() results in a segfault with  
>>>> GEOS
>>>> 2.2.1. Is this a known issue? If so, what do you do in PostGIS to
>>>> guard against this?
>>>
>>> Doesn't seem a known issue, please file a bug report.
>>> No worries for PostGIS, doesn't use WKT or WKB for GEOS<->PostGIS
>>> Geometry conversion.
>>>
>>> --strk;
>>
>> There's a GEOS issue tracker? I didn't see anything on http://
>> geos.refractions.net.
>
> Oh, it's the postgis bug tracker, can be used for GEOS as well
> (there should be a GEOS project registered).
>
> --strk;

Thanks. One more question: how does GEOS represent the empty point  
set? As NULL?

Sean


From strk at refractions.net  Sat Feb 18 15:50:52 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Segfault when passing malformed WKT to
	GEOSGeomFromWKT
In-Reply-To: <4B8EB4B2-D895-419B-A98C-D492C4969679@frii.com>
References: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>
	<20060218193748.GJ80535@keybit.net>
	<A230F737-896D-4AC2-8555-DD83D9880BF9@frii.com>
	<20060218201755.GM80535@keybit.net>
	<4B8EB4B2-D895-419B-A98C-D492C4969679@frii.com>
Message-ID: <20060218205052.GO80535@keybit.net>

On Sat, Feb 18, 2006 at 01:33:03PM -0700, Sean Gillies wrote:

> Thanks. One more question: how does GEOS represent the empty point  
> set? As NULL?

Ehm... represent ? 
WKT for it should be GEOMETRYCOLLECTION EMPTY.
--strk;

From sgillies at frii.com  Sat Feb 18 16:05:03 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Segfault when passing malformed WKT to
	GEOSGeomFromWKT
In-Reply-To: <20060218205052.GO80535@keybit.net>
References: <E3011F74-9173-4C10-9E8E-1581B7F1FE4C@frii.com>
	<20060218193748.GJ80535@keybit.net>
	<A230F737-896D-4AC2-8555-DD83D9880BF9@frii.com>
	<20060218201755.GM80535@keybit.net>
	<4B8EB4B2-D895-419B-A98C-D492C4969679@frii.com>
	<20060218205052.GO80535@keybit.net>
Message-ID: <CF56175C-6239-4003-B589-4D4565813606@frii.com>

On Feb 18, 2006, at 1:50 PM, strk@refractions.net wrote:

> On Sat, Feb 18, 2006 at 01:33:03PM -0700, Sean Gillies wrote:
>
>> Thanks. One more question: how does GEOS represent the empty point
>> set? As NULL?
>
> Ehm... represent ?
> WKT for it should be GEOMETRYCOLLECTION EMPTY.
> --strk;

Thanks, strk, you answered I was trying to ask :)

Sean

From sgillies at frii.com  Sat Feb 18 17:45:30 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Problem with GEOS bug tracker
Message-ID: <9407A644-3898-4DB4-9BE1-D0FDB5C752E2@frii.com>

strk,

I've made some headway on the bugs 26 and 27, but your tracker won't  
let me back in to those issues. DB Error: unknown error from http:// 
postgis.refractions.net/bugs/bug.php?op=show&bugid=26.

Anyhow, the segfault occurs when ERROR_MESSAGE is called after a  
ParseException is caught.

Sean


From geoionescu at hotmail.com  Sun Feb 19 03:56:15 2006
From: geoionescu at hotmail.com (George Ionescu)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] QuadTree indexing
Message-ID: <BAY22-DAV1F52EB26ED7D90EA9A382CAFE0@phx.gbl>

Hello all geos developers,
I'm quite new with geos so please be gentle.
 
I'm trying to use geos library to perform spatial queries.
 
1. I have a large number of line segments (around 100.000) and I'm trying to
do hit-testing (e.g. does the point x,y falls on one of the lines with a
given tollerance?). 
For this, I thought of creating an Envelope for each line segment, adding
them to a QuadTree index and then construct another Envelope (x-tollerance,
x+tollerance, y-tollerance, y+tollerance) and query the index to find all
overlapping polygons. From there, I'll compute the distance from my point to
each of the lines and take the shortest one. To be short, I have something
like this:
 
typedef std::vector<void*> VoidEmptyVec;
geos::Quadtree tree;
 
geos::Envelope* env = new geos::Envelope(10, 30, 10, 30);
tree.insert(env, env);
geos::Envelope* envQuery = new geos::Envelope(0, 4, 0, 4);
VoidEmptyVec* queryResults = tree.query(envQuery);
if (!queryResults->empty()) {
geos::Envelope* envResult = (geos::Envelope*)*queryResults->begin();
}
 
To my surprise, the tree finds the first Envelope (10, 30, 10, 30) as
overlapping the query Envelope (0, 4, 0, 4) !
Is there something I'm missing here? The comment from geos::Quadtree::query
states 
 
vector<void*>*
Quadtree::query(const Envelope *searchEnv)
{
 /*
  * the items that are matched are the items in quads which
  * overlap the search envelope
  */
 
So shouldn't the query method find the envelopes which overlap? This is
definitively not true in my example.
 
2. If it's me who doesn't understand how things work, given a set of N
envelopes, what is the index I should use to find the envelopes which
overlap a given envelope E?
 
3. Are there indexes which could be used to find the envelopes which contain
a given point P?
 
Thanking for your answers,
George.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20060219/41107798/attachment.html
From strk at refractions.net  Mon Feb 20 04:42:39 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: SegmentString CHANGES (was: [geos-devel] SegmentString modeling)
In-Reply-To: <43F73DF6.8010004@loskot.net>
References: <20060216170631.GC50460@keybit.net> <43F60DF6.4000607@loskot.net>
	<20060218143632.GB78371@keybit.net> <43F73DF6.8010004@loskot.net>
Message-ID: <20060220094239.GB99983@keybit.net>

Just to have this in archive, the SegmentString class changed
it's semantic by *not* promising constness of the CoordinateSequence
passed at construction time.

Also, the getCoordinatesRO() method has been dropped and the
getCoordinates() has been changed to NOT return a clone, but
the CoordinateSequence passed at construction time.

--strk;

On Sat, Feb 18, 2006 at 04:32:06PM +0100, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> >On Fri, Feb 17, 2006 at 06:55:02PM +0100, Mateusz ?
?oskot wrote:
> >>strk@refractions.net wrote:
> >>
> >>>Need some help from C++ gurus. One of the new JTS classes expects to 
> >>>modify the Coordinates associated with a SegmentString.
> >>
> >>I wonder why SegmentString::pts is declared as
> >>const CoordinateSequence* pts;
> >>
> >>As I see, in JTS sources SegmentString::pts is not declared as const.
> >>I'm not a Java guru but IMHO const in Java has similar meaning
> >>as in C++.
> >
> >
> >I've been the 'const' pusher in GEOS. I tried adding
> >const-correctness here and there to help maintainance
> >and reduce unneeded copies.
> 
> I mostly agree but in this case const does not make better 
> const-correctness. Second, it causes problems as now while porting new 
> class which requires mutable access to SegmentString::pts which is 
> defined as const.
> 
> OK, I see one case when current solution makes const-correctness required:
> 
> void foo(const CoordinateSequence &a)
> {
>     // foo promises to not to modify 'a' object so
>     // it requires SegmentString to hold 'a' as const pointer - as
>     // it currently is defined
> 
>     // IMPORTANT!
>     // if SegmentString holds 'a' by non-const pointer then foo
>     // will fail because it cannot cast from const to non-const
> 
>     SegmentString b(&a);
> }
> 
> This sentence market as IMPORTANT! is very important :-) in case you 
> decide to move SegmentString::pts from const to non-const declaration - 
> what I also suggested in my previous replies.
> So, if there is some similar function defined as foo above then problems 
> may occur.
> I hope my explanation is clear. If my english it very poor then please 
> let me know I'll try to make it clearer ;-)
> 
> Yesterday, I consulted the problem with my friend and he suggested to 
> move this case to more "modern C++" design solution based on policies.
> Policy-based design of classes was introduced by Andrei Alexandrescu
> 
> http://en.wikipedia.org/wiki/Policy-based_design
> 
> and comes extremely handy in such cases, especially when you may expect 
> some design changes (just as this one about moving from const -> 
> non-const problem) in future.
> 
> Here is simple example how to handle const and non-const versions of the 
> same type using policies:
> 
> struct use_const
> {
>     typedef const A * pointer_type;
> };
> 
> struct dont_use_const
> {
>     typedef A * pointer_type;
> };
> 
> template <class ConstCorrectness>
> class B
> {
>     typedef typename ConstCorrectness::pointer_type pointer_type;
>     pointer_type a;
> public:
>     B(pointer_type p) : a(p) {}
>     pointer_type get() { return a; }
> };
> 
> 
> Now, you can define const version:
> 
> B<use_const> b(&a);
> 
> and non-const version:
> 
> B<dont_use_const> b(&a);
> 
> Both versions are interchangable and follows the Liskov Substitution 
> Principle:
> 
> http://www.objectmentor.com/resources/articles/lsp.pdf
> 
> 
> >I could take the const out of SegmentString but I guess
> >JTS code itself is not enough to tell what the intended
> >behaviour is.
> 
> That's usually the big problem when porting from Java or C# to C++ :-)
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                            
      State-collected Geographic Data is public property   
                                                          
                 -*- sign the petition -*-               
                                                        
              http://petition.publicgeodata.org        
                                                      
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


From mateusz at loskot.net  Mon Feb 20 08:06:12 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
Message-ID: <43F9BEC4.8020802@loskot.net>

Hi,

Has anyone tried to build latest CVS HEAD with MSVC++ 8.0?

When I try to build it using makefile.vc I encounter following error:

CoordinateSequenceFactory.cpp
NMAKE : fatal error U1073: don't know how to make 
'geom\DefaultCoordinateSequence.obj'
Stop.

Should I fix it?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Mon Feb 20 08:10:02 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Can we remove serialVersionUID?
Message-ID: <43F9BFAA.3030709@loskot.net>

Hi,

Yesterday, I consulted with strk and we decided to ask if there is 
anyone using/relaying on serialVersionUID data member in GEOS classes?

If it's not used anywhere we would suggest to remove it in near future.
Any comments?

Here is a list of files/lines whre serialVersionUID is defined.
I found it using following command:

findu . -name *.h | xargs grep "Version"

./headers/geos/config.h:/* Version number of package */
./headers/geos/geom.h:	static const int64 serialVersionUID = 
7777263578777803835I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
7777263578777803835LL;
./headers/geos/geom.h:	static const int64 
serialVersionUID=6683108902428366910I64;
./headers/geos/geom.h:	static const int64 
serialVersionUID=6683108902428366910LL;
./headers/geos/geom.h:	static const int64 
serialVersionUID=5873921885273102420I64;
./headers/geos/geom.h:	static const int64 
serialVersionUID=5873921885273102420LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-6820524753094095635I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-6820524753094095635LL;
./headers/geos/geom.h:    static const int64 serialVersionUID = 
8763622679187376702I64;
./headers/geos/geom.h:    static const int64 serialVersionUID = 
8763622679187376702LL;
./headers/geos/geom.h:  static const int64 
serialVersionUID=3252005833466256227I64;
./headers/geos/geom.h:  static const int64 
serialVersionUID=3252005833466256227LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-5694727726395021467I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-5694727726395021467LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
4902022702746614570I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
4902022702746614570LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
3110669828065365560I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
3110669828065365560LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-4261142084085851829I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-4261142084085851829LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-3494792200821764533I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-3494792200821764533LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-8048474874175355449I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-8048474874175355449LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
8166665132445433741I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
8166665132445433741LL;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-551033529766975875I64;
./headers/geos/geom.h:	static const int64 serialVersionUID = 
-551033529766975875LL;


Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Mon Feb 20 08:18:51 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43F9BEC4.8020802@loskot.net>
References: <43F9BEC4.8020802@loskot.net>
Message-ID: <43F9C1BB.9050203@loskot.net>

Mateusz ?oskot wrote:
> Hi,
> 
> Has anyone tried to build latest CVS HEAD with MSVC++ 8.0?
> 
> When I try to build it using makefile.vc I encounter following error:
> 
> CoordinateSequenceFactory.cpp
> NMAKE : fatal error U1073: don't know how to make 
> 'geom\DefaultCoordinateSequence.obj'
> Stop.
> 

I've seen in CVS log it was renamed near 1.19 rev.
It seems makefile.vc has not been updated. Should I do it?
Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mbdavis at VividSolutions.com  Mon Feb 20 12:36:58 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] QuadTree indexing
Message-ID: <5A94289A9268514C8D6C0F1FF44BA02796D829@venus.VividSolutions.com>

The way Quadtree actually works is that it returns a candidate set of
items whose Envelopes *may* intersect the query envelope.  The candidate
set is normally much smaller than the entire set of objects in the
index.  You need to check for actual intersection in a subsequent step.
 
The reason this was done is to move the envelope intersection check
outside of the index, to allow the caller to decide whether or not it
needs to perform it.  (For instance, the caller may simply be calling a
further function on the returned items which does the envelope check
anyway - in which case this avoids a redundant check).
 
Note that STRtree is usually faster than QuadTree.
 
You have the right approach for GEOS.  There may be other indexes which
make point-in-envelope queries faster, but they aren't in GEOS.
 
 
 
Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046

	-----Original Message-----
	From: geos-devel-bounces@geos.refractions.net
[mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of George
Ionescu
	Sent: February 19, 2006 12:56 AM
	To: geos-devel@geos.refractions.net
	Subject: [geos-devel] QuadTree indexing
	
	
	Hello all geos developers,
	I'm quite new with geos so please be gentle.
	 
	I'm trying to use geos library to perform spatial queries.
	 
	1. I have a large number of line segments (around 100.000) and
I'm trying to do hit-testing (e.g. does the point x,y falls on one of
the lines with a given tollerance?). 
	For this, I thought of creating an Envelope for each line
segment, adding them to a QuadTree index and then construct another
Envelope (x-tollerance, x+tollerance, y-tollerance, y+tollerance) and
query the index to find all overlapping polygons. From there, I'll
compute the distance from my point to each of the lines and take the
shortest one. To be short, I have something like this:
	 
	typedef std::vector<void*> VoidEmptyVec;
	geos::Quadtree tree;
	 
	geos::Envelope* env = new geos::Envelope(10, 30, 10, 30);
	tree.insert(env, env);
	
	geos::Envelope* envQuery = new geos::Envelope(0, 4, 0, 4);
	VoidEmptyVec* queryResults = tree.query(envQuery);
	if (!queryResults->empty()) {
	geos::Envelope* envResult =
(geos::Envelope*)*queryResults->begin();
	}
	 
	To my surprise, the tree finds the first Envelope (10, 30, 10,
30) as overlapping the query Envelope (0, 4, 0, 4) !
	Is there something I'm missing here? The comment from
geos::Quadtree::query states 
	 
	vector<void*>*
	Quadtree::query(const Envelope *searchEnv)
	{
	 /*
	  * the items that are matched are the items in quads which
	  * overlap the search envelope
	  */
	 
	So shouldn't the query method find the envelopes which overlap?
This is definitively not true in my example.
	 
	2. If it's me who doesn't understand how things work, given a
set of N envelopes, what is the index I should use to find the envelopes
which overlap a given envelope E?
	 
	3. Are there indexes which could be used to find the envelopes
which contain a given point P?
	 
	Thanking for your answers,
	George.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20060220/77cae64d/attachment.html
From s.zschocke at infozoom.de  Wed Feb 22 10:55:03 2006
From: s.zschocke at infozoom.de (Stefan Zschocke)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] memory leaks in Bigtest
Message-ID: <007a01c637c8$5870c450$17c0a8c0@infozoom.infozoom.de>

I just downloaded and compiled the Geos code. I tried the bigtest sample
and found it leaks memory like hell.
I hate having leaking test programs as it prevents from checking wether
the leak is in the test or the library itself.
First things I did: in the main, make GeometryFactory a local stack
variable, and in run-function delete the 2 polygons after use.
But it still leaks. I assume the leaks result from the code in
GeometryTestFactory.cpp.
Does someone have a clean GeometryTestFactory.cpp, which doesn't leak?

Otherwise I would have to check the code in this file to produce a
non-leaking version.
I already had a look at it, and saw many dynamically-created objects go
into ctors as parameters.
Checked a few and the ctors looked like they needed these objects
permanently, because there were other ctor-overloads with
const-reference parameters, which cloned the const-parms.
But somewhere there must be a fat leak.

Thx, Stefan

BTW: I did the test with VS.Net under XP. I slightly modified the code
to build a GEOS.DLL. Just put a dllExport-macro in the class
declarations, but this would not affect the memory
allocation/deallocation.


From strk at refractions.net  Wed Feb 22 11:12:29 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] memory leaks in Bigtest
In-Reply-To: <007a01c637c8$5870c450$17c0a8c0@infozoom.infozoom.de>
References: <007a01c637c8$5870c450$17c0a8c0@infozoom.infozoom.de>
Message-ID: <20060222161229.GE30325@keybit.net>

Stefan, the bigtest code is not really run, leaks are checked
using the XMLTest against the .xml files located under its dir.
That's the most stable testing framework in GEOS.

It would be worth porting JTS unit tests to GEOS to augment
the cases. If you want to provide a fix for the bigtest I'll
be happy to apply it.

--strk;

BTW: dynamically created objects are a plague of GEOS. I'm fighting
     against them daily.

On Wed, Feb 22, 2006 at 04:55:03PM +0100, Stefan Zschocke wrote:
> I just downloaded and compiled the Geos code. I tried the bigtest sample
> and found it leaks memory like hell.
> I hate having leaking test programs as it prevents from checking wether
> the leak is in the test or the library itself.
> First things I did: in the main, make GeometryFactory a local stack
> variable, and in run-function delete the 2 polygons after use.
> But it still leaks. I assume the leaks result from the code in
> GeometryTestFactory.cpp.
> Does someone have a clean GeometryTestFactory.cpp, which doesn't leak?
> 
> Otherwise I would have to check the code in this file to produce a
> non-leaking version.
> I already had a look at it, and saw many dynamically-created objects go
> into ctors as parameters.
> Checked a few and the ctors looked like they needed these objects
> permanently, because there were other ctor-overloads with
> const-reference parameters, which cloned the const-parms.
> But somewhere there must be a fat leak.
> 
> Thx, Stefan
> 
> BTW: I did the test with VS.Net under XP. I slightly modified the code
> to build a GEOS.DLL. Just put a dllExport-macro in the class
> declarations, but this would not affect the memory
> allocation/deallocation.
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 
---------------------------------------------------------------------------
State-collected Geographic Data is public property   
Sign the petition: http://petition.publicgeodata.org        
                                                      


From s.zschocke at infozoom.de  Wed Feb 22 11:16:09 2006
From: s.zschocke at infozoom.de (Stefan Zschocke)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] RE: memory leaks in Bigtest
Message-ID: <007d01c637cb$4bb3c840$17c0a8c0@infozoom.infozoom.de>

Update: I changed all the *new Coordinate() calls in the
GeometryTestFactory to Coordinate(..)
and now the leaks are significantly reduced to 10 allocations. These 10
allocations however result from just calling 
	GeometryFactory fact;
in the main-function. Even if all of the run-calls are commented out,
the leak of 10 objects remains.
Stefan

-----Original Message-----
From: Stefan Zschocke 
Sent: Wednesday, February 22, 2006 4:55 PM
To: 'geos-devel@geos.refractions.net'
Subject: memory leaks in Bigtest


I just downloaded and compiled the Geos code. I tried the bigtest sample
and found it leaks memory like hell. I hate having leaking test programs
as it prevents from checking wether the leak is in the test or the
library itself. First things I did: in the main, make GeometryFactory a
local stack variable, and in run-function delete the 2 polygons after
use. But it still leaks. I assume the leaks result from the code in
GeometryTestFactory.cpp. Does someone have a clean
GeometryTestFactory.cpp, which doesn't leak?

Otherwise I would have to check the code in this file to produce a
non-leaking version. I already had a look at it, and saw many
dynamically-created objects go into ctors as parameters. Checked a few
and the ctors looked like they needed these objects permanently, because
there were other ctor-overloads with const-reference parameters, which
cloned the const-parms. But somewhere there must be a fat leak.

Thx, Stefan

BTW: I did the test with VS.Net under XP. I slightly modified the code
to build a GEOS.DLL. Just put a dllExport-macro in the class
declarations, but this would not affect the memory
allocation/deallocation.


From strk at refractions.net  Wed Feb 22 11:51:00 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] RE: memory leaks in Bigtest
In-Reply-To: <007d01c637cb$4bb3c840$17c0a8c0@infozoom.infozoom.de>
References: <007d01c637cb$4bb3c840$17c0a8c0@infozoom.infozoom.de>
Message-ID: <20060222165100.GH30325@keybit.net>

On Wed, Feb 22, 2006 at 05:16:09PM +0100, Stefan Zschocke wrote:
> Update: I changed all the *new Coordinate() calls in the
> GeometryTestFactory to Coordinate(..)
> and now the leaks are significantly reduced to 10 allocations. These 10
> allocations however result from just calling 
> 	GeometryFactory fact;
> in the main-function. Even if all of the run-calls are commented out,
> the leak of 10 objects remains.
> Stefan

I guess the GeoemtryFactory default ctor constructs a PrecisionModel.
I'd remove the default constructor or provide a default PrecisionModel
as a singleton. For a quick fix try:

PrecisionModel pm;
GeometryFactory fact(&pm);

--strk;

From s.zschocke at infozoom.de  Wed Feb 22 12:14:44 2006
From: s.zschocke at infozoom.de (Stefan Zschocke)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] RE: memory leaks in Bigtest
In-Reply-To: <20060222165100.GH30325@keybit.net>
Message-ID: <008c01c637d3$7b6806c0$17c0a8c0@infozoom.infozoom.de>

Hi, should I post the fixed 2 files of bigtest as attachemt to the
group?
Stefan

-----Original Message-----
From: geos-devel-bounces@geos.refractions.net
[mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of
strk@refractions.net
Sent: Wednesday, February 22, 2006 5:51 PM
To: geos-devel@geos.refractions.net
Subject: Re: [geos-devel] RE: memory leaks in Bigtest


On Wed, Feb 22, 2006 at 05:16:09PM +0100, Stefan Zschocke wrote:
> Update: I changed all the *new Coordinate() calls in the 
> GeometryTestFactory to Coordinate(..) and now the leaks are 
> significantly reduced to 10 allocations. These 10 allocations however 
> result from just calling
> 	GeometryFactory fact;
> in the main-function. Even if all of the run-calls are commented out, 
> the leak of 10 objects remains. Stefan

I guess the GeoemtryFactory default ctor constructs a PrecisionModel.
I'd remove the default constructor or provide a default PrecisionModel
as a singleton. For a quick fix try:

PrecisionModel pm;
GeometryFactory fact(&pm);

--strk;
_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net
http://geos.refractions.net/mailman/listinfo/geos-devel


From strk at refractions.net  Wed Feb 22 12:40:54 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:57 2007
Subject: [geos-devel] RE: memory leaks in Bigtest
In-Reply-To: <008c01c637d3$7b6806c0$17c0a8c0@infozoom.infozoom.de>
References: <20060222165100.GH30325@keybit.net>
	<008c01c637d3$7b6806c0$17c0a8c0@infozoom.infozoom.de>
Message-ID: <20060222174054.GA32067@keybit.net>

On Wed, Feb 22, 2006 at 06:14:44PM +0100, Stefan Zschocke wrote:
> Hi, should I post the fixed 2 files of bigtest as attachemt to the
> group?

Please send them to me.
--strk;

From cfis at interserv.com  Wed Feb 22 15:36:46 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43F9C1BB.9050203@loskot.net>
References: <43F9BEC4.8020802@loskot.net> <43F9C1BB.9050203@loskot.net>
Message-ID: <43FCCB5E.1030403@interserv.com>

Hi Mateusz,

Yes, I build geos with VC++ 8 fairly frequently.  I have a VC 
solution/project I can send you if you'd like.  The one hang-up at the 
moment is that VC++ does not have a round function in math.h, which is 
used in HotPixel::scale for example.

Charlie

Mateusz ?oskot wrote:
> Mateusz ?oskot wrote:
>> Hi,
>>
>> Has anyone tried to build latest CVS HEAD with MSVC++ 8.0?
>>
>> When I try to build it using makefile.vc I encounter following error:
>>
>> CoordinateSequenceFactory.cpp
>> NMAKE : fatal error U1073: don't know how to make 
>> 'geom\DefaultCoordinateSequence.obj'
>> Stop.
>>
>
> I've seen in CVS log it was renamed near 1.19 rev.
> It seems makefile.vc has not been updated. Should I do it?
> Cheers
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060222/cde75751/smime.bin
From mateusz at loskot.net  Wed Feb 22 16:30:00 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCCB5E.1030403@interserv.com>
References: <43F9BEC4.8020802@loskot.net> <43F9C1BB.9050203@loskot.net>
	<43FCCB5E.1030403@interserv.com>
Message-ID: <43FCD7D8.1020001@loskot.net>

Charlie Savage wrote:
> 
> Yes, I build geos with VC++ 8 fairly frequently.  I have a VC 
> solution/project I can send you if you'd like.  The one hang-up at the 
> moment is that VC++ does not have a round function in math.h, which is 
> used in HotPixel::scale for example.

Hi Charlie,
Yes, I also build GEOS quite often with VC++ 8.0.
Latest problem is caused by that round function which is not
available in VC++.
Besides that VC++ does not support this function, it's not C++
standard function. ANSI/ISO C++ does not list [1] it as supported 
function from C library. Second, not all features from C are supported 
by C++ by default ;-)

BTW, here I ask about round on MSDN forums
http://forums.microsoft.com/msdn/showpost.aspx?postid=260134

[1] Standard for Programming Language C++ (working draft), Apendix C:
"7 - The C++ Standard library provides 209 standard functions from the C 
library, as shown in Table 102.$"

And the Appendinx C does not include round in Table 102. So, it's not 
supported by C++.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Wed Feb 22 16:49:54 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCD7D8.1020001@loskot.net>
References: <43F9BEC4.8020802@loskot.net>
	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>
	<43FCD7D8.1020001@loskot.net>
Message-ID: <43FCDC82.2000406@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060222/ce3e49be/smime.bin
From mateusz at loskot.net  Wed Feb 22 17:19:52 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCDC82.2000406@interserv.com>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>
	<43FCDC82.2000406@interserv.com>
Message-ID: <43FCE388.7080802@loskot.net>

Charlie Savage wrote:
> Take a look at an email from today on the MingW mailing list about
> round (attached below).

Yes, that confirms what I wrote.
Although, is GEOS considered as conformable to C (C99) or C++ standard?
AFAIK GEOS is a C++ port of the JTS.

> Strk - can we get rid of the use of round in geos?  If not, then I
> think we have to have an implement in the GEOS source tree.

I'd suggest to get rid of it too.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Wed Feb 22 17:40:19 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCE388.7080802@loskot.net>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>
	<43FCE388.7080802@loskot.net>
Message-ID: <43FCE853.8090701@interserv.com>

One thing to follow up on.  I realize there used to be VC++ solution  in 
the GEOS source tree.  However, it wasn't maintained and thus was 
removed a few months ago.

Is there any interest in having a working VC++ solution again?  I don't 
mind keeping it up to date since I do that locally anyways.

What I have now builds geos as a static library (have to because there 
aren't any DLL_EXPORT/IMPORT declarations in the geos C++ code base), 
builds the geos C dll, and builds the Ruby SWIG extension.  It would be 
easy enough to also add in building the Python SWIG extension.

Thanks,

Charlie

Mateusz ?oskot wrote:
> Charlie Savage wrote:
>> Take a look at an email from today on the MingW mailing list about
>> round (attached below).
>
> Yes, that confirms what I wrote.
> Although, is GEOS considered as conformable to C (C99) or C++ standard?
> AFAIK GEOS is a C++ port of the JTS.
>
>> Strk - can we get rid of the use of round in geos?  If not, then I
>> think we have to have an implement in the GEOS source tree.
>
> I'd suggest to get rid of it too.
>
> Cheers
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060222/9e161610/smime.bin
From mateusz at loskot.net  Wed Feb 22 17:50:39 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCE853.8090701@interserv.com>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>	<43FCE388.7080802@loskot.net>
	<43FCE853.8090701@interserv.com>
Message-ID: <43FCEABF.5030800@loskot.net>

Charlie Savage wrote:
> One thing to follow up on.  I realize there used to be VC++ solution  in 
> the GEOS source tree.  However, it wasn't maintained and thus was 
> removed a few months ago.
> 
> Is there any interest in having a working VC++ solution again?  I don't 
> mind keeping it up to date since I do that locally anyways.

I don't understand. Are you talking about round function issue?
Does it mean you are asking if it's worth to keep GEOS compilable
with VC++ ?
If I'm following your point, should I understand that GEOS is (usually) 
not compiled by the GEOS Community with VC++ at all?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Wed Feb 22 17:58:30 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCDC82.2000406@interserv.com>
References: <43F9BEC4.8020802@loskot.net> <43F9C1BB.9050203@loskot.net>
	<43FCCB5E.1030403@interserv.com> <43FCD7D8.1020001@loskot.net>
	<43FCDC82.2000406@interserv.com>
Message-ID: <20060222225830.GA36070@keybit.net>

It is ok for me to get rid of it, but can you provide the alternative ?
I'm pretty busy with port and refactoring so I can't take care
of that in the short term.

If i'm not wrong Yury provided a replacement for it in the past.
Should be somewhere burned inside GEOS source code :)

Probably a good way to find it is find Math.round() in JTS and
compare with GEOS version of the corresponding class. Volunteers ?

--strk;


On Wed, Feb 22, 2006 at 02:49:54PM -0700, Charlie Savage wrote:
> Take a look at an email from today on the MingW mailing list about round 
> (attached below).
> 
> Strk - can we get rid of the use of round in geos?  If not, then I think 
> we have to have an implement in the GEOS source tree.
> 
> Charlie
> 
> 
> 
> Mark Bourne wrote:
> 
> 
> >> I get the same results as the original poster using Windows 2000, SP4,
> >> GCC 3.2.3
> >> Where are the functions round() and nearbyint() defined? I don't think
> >> they're standard C functions?
> >  
> 
> They are most definitely standard functions with precise semanitcs. 
> round() and friends are specified in both SUSv3 (aka POSIX) which
> mirrors IEC-9899 aka C99.  Section 7.12.9.6 defines them as:
> 
>  The round functions round their argument to the nearest 
>  integer value in floating-point format, rounding halfway
>  cases away from zero, regardless of the current rounding
>  direction.
> 
> So there can be no ambiguity here.
> 
> Since MSVCRT does not implment full C99 compliance these functions come
> from -lmingwex (libmingwex.a) which is part of mingw-runtime, hence the
> suggestion by Ross R:
> 
> 
> >> Update the version of the MinGW runtime that
> >> you're using.  Old versions of of the runtime
> >> incorrectly rounded away from zero, instead of
> >> rounding to nearest.
> >  
> 
> Brian
> 
> 
> -------------------------------------------------------
> This SF.net email is sponsored by: Splunk Inc. Do you grep through log files
> for problems?  Stop!  Download the new AJAX search engine that makes
> searching your log files as easy as surfing the  web.  DOWNLOAD SPLUNK!
> http://sel.as-us.falkag.net/sel?cmd=lnk&kid=103432&bid=230486&dat=121642
> _______________________________________________
> MinGW-users mailing list
> MinGW-users@lists.sourceforge.net
> 
> You may change your MinGW Account Options or unsubscribe at:
> https://lists.sourceforge.net/lists/listinfo/mingw-users
> 
> 
> 
> 
> 
> 
> 
> 
> Mateusz ??oskot wrote:
> >Charlie Savage wrote:
> >>
> >>Yes, I build geos with VC++ 8 fairly frequently.  I have a VC 
> >>solution/project I can send you if you'd like.  The one hang-up at 
> >>the moment is that VC++ does not have a round function in math.h, 
> >>which is used in HotPixel::scale for example.
> >
> >Hi Charlie,
> >Yes, I also build GEOS quite often with VC++ 8.0.
> >Latest problem is caused by that round function which is not
> >available in VC++.
> >Besides that VC++ does not support this function, it's not C++
> >standard function. ANSI/ISO C++ does not list [1] it as supported 
> >function from C library. Second, not all features from C are supported 
> >by C++ by default ;-)
> >
> >BTW, here I ask about round on MSDN forums
> >http://forums.microsoft.com/msdn/showpost.aspx?postid=260134
> >
> >[1] Standard for Programming Language C++ (working draft), Apendix C:
> >"7 - The C++ Standard library provides 209 standard functions from the 
> >C library, as shown in Table 102.$"
> >
> >And the Appendinx C does not include round in Table 102. So, it's not 
> >supported by C++.
> >
> >Cheers



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 
---------------------------------------------------------------------------
State-collected Geographic Data is public property   
Sign the petition: http://petition.publicgeodata.org        
                                                      


From cfis at interserv.com  Wed Feb 22 19:01:56 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCEABF.5030800@loskot.net>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>	<43FCE388.7080802@loskot.net>	<43FCE853.8090701@interserv.com>
	<43FCEABF.5030800@loskot.net>
Message-ID: <43FCFB74.6090107@interserv.com>

Hi Matuesz,

I was just offering to donate the Visual Studio C++ Solution files 
(i.e., the VC++ project files) that I have to GEOS.

That is a separate thing from fixing the round function, which stops 
VC++ from compiling GEOS whether you use Visual Studio, the Visual 
Studio command line or nmake.

However, I gather the VC++ community doesn't use GEOS much though, since 
there aren't any Visual Studio files or build scripts that GEOS provides 
that work with VC++.

Charlie

Mateusz ?oskot wrote:
> Charlie Savage wrote:
>> One thing to follow up on.  I realize there used to be VC++ solution  
>> in the GEOS source tree.  However, it wasn't maintained and thus was 
>> removed a few months ago.
>>
>> Is there any interest in having a working VC++ solution again?  I 
>> don't mind keeping it up to date since I do that locally anyways.
>
> I don't understand. Are you talking about round function issue?
> Does it mean you are asking if it's worth to keep GEOS compilable
> with VC++ ?
> If I'm following your point, should I understand that GEOS is 
> (usually) not compiled by the GEOS Community with VC++ at all?
>
> Cheers
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060222/b40dce2a/smime.bin
From cfis at interserv.com  Wed Feb 22 19:25:19 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <20060222225830.GA36070@keybit.net>
References: <43F9BEC4.8020802@loskot.net>
	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>
	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>
	<20060222225830.GA36070@keybit.net>
Message-ID: <43FD00EF.7050503@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060222/b4054a61/smime.bin
From chodgson at refractions.net  Wed Feb 22 19:26:44 2006
From: chodgson at refractions.net (Chris Hodgson)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCEABF.5030800@loskot.net>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>	<43FCE388.7080802@loskot.net>	<43FCE853.8090701@interserv.com>
	<43FCEABF.5030800@loskot.net>
Message-ID: <43FD0144.7060502@refractions.net>

Mateusz ?oskot wrote:
 > I don't understand. Are you talking about round function issue?
 > Does it mean you are asking if it's worth to keep GEOS compilable
 > with VC++ ?
 > If I'm following your point, should I understand that GEOS is (usually)
 > not compiled by the GEOS Community with VC++ at all?

The primary development target is linux/gcc-g++. However we certainly do 
want to maintain compatibiliy with solaris, windows/mingw, and native 
windows/VC++. As strk has mentioned, he's busy doing new work right now, 
and that will take priority over compatibility changes/improvements. 
Ideally we could get some people regularly testing on the various other 
platforms and submitting patches, etc. to keep everything compatible. 
Until we have these "platform champions", the other platforms will suffer :(

Chris



From cfis at interserv.com  Wed Feb 22 19:41:32 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FD0144.7060502@refractions.net>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>	<43FCE388.7080802@loskot.net>	<43FCE853.8090701@interserv.com>	<43FCEABF.5030800@loskot.net>
	<43FD0144.7060502@refractions.net>
Message-ID: <43FD04BC.5040406@interserv.com>

Hi Chris,

Yup, understood.  I've been bugging strk a bunch about Windows.  VC++ is 
quite close to working again (just the round issue).

Unfortunately, MingW broke (worked fine before) with the change to using 
a bunch of static libraries that are linked at the end.  Everything 
compiles fine, but a segmentation fault happens when linking.   See 
http://sourceforge.net/mailarchive/message.php?msg_id=14729192 for more 
info.  Unfortunately, I don't see any easy way to fix this and haven't 
found a way to work around it.

Charlie

Chris Hodgson wrote:
> Mateusz ?oskot wrote:
> > I don't understand. Are you talking about round function issue?
> > Does it mean you are asking if it's worth to keep GEOS compilable
> > with VC++ ?
> > If I'm following your point, should I understand that GEOS is (usually)
> > not compiled by the GEOS Community with VC++ at all?
>
> The primary development target is linux/gcc-g++. However we certainly 
> do want to maintain compatibiliy with solaris, windows/mingw, and 
> native windows/VC++. As strk has mentioned, he's busy doing new work 
> right now, and that will take priority over compatibility 
> changes/improvements. Ideally we could get some people regularly 
> testing on the various other platforms and submitting patches, etc. to 
> keep everything compatible. Until we have these "platform champions", 
> the other platforms will suffer :(
>
> Chris
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060222/60b79d81/smime.bin
From warmerdam at pobox.com  Wed Feb 22 20:40:26 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCFB74.6090107@interserv.com>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>	<43FCE388.7080802@loskot.net>	<43FCE853.8090701@interserv.com>	<43FCEABF.5030800@loskot.net>
	<43FCFB74.6090107@interserv.com>
Message-ID: <43FD128A.9040504@pobox.com>

Charlie Savage wrote:
> Hi Matuesz,
> 
> I was just offering to donate the Visual Studio C++ Solution files 
> (i.e., the VC++ project files) that I have to GEOS.
> 
> That is a separate thing from fixing the round function, which stops 
> VC++ from compiling GEOS whether you use Visual Studio, the Visual 
> Studio command line or nmake.
> 
> However, I gather the VC++ community doesn't use GEOS much though, since 
> there aren't any Visual Studio files or build scripts that GEOS provides 
> that work with VC++.

Charlie,

Note, there are NMAKE files which I have maintained.  There used to be a
project file, but no one maintained it.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


From cfis at interserv.com  Wed Feb 22 23:19:11 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FD128A.9040504@pobox.com>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>	<43FCE388.7080802@loskot.net>	<43FCE853.8090701@interserv.com>	<43FCEABF.5030800@loskot.net>	<43FCFB74.6090107@interserv.com>
	<43FD128A.9040504@pobox.com>
Message-ID: <43FD37BF.6040306@interserv.com>

Thanks for the tip Frank - I never noticed the makefile.vc. 

Charlie

Frank Warmerdam wrote:
> Charlie Savage wrote:
>> Hi Matuesz,
>>
>> I was just offering to donate the Visual Studio C++ Solution files 
>> (i.e., the VC++ project files) that I have to GEOS.
>>
>> That is a separate thing from fixing the round function, which stops 
>> VC++ from compiling GEOS whether you use Visual Studio, the Visual 
>> Studio command line or nmake.
>>
>> However, I gather the VC++ community doesn't use GEOS much though, 
>> since there aren't any Visual Studio files or build scripts that GEOS 
>> provides that work with VC++.
>
> Charlie,
>
> Note, there are NMAKE files which I have maintained.  There used to be a
> project file, but no one maintained it.
>
> Best regards,
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060222/0566a508/smime.bin
From s.zschocke at infozoom.de  Thu Feb 23 03:16:30 2006
From: s.zschocke at infozoom.de (Stefan Zschocke)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCFB74.6090107@interserv.com>
Message-ID: <00d001c63851$73bbc5f0$17c0a8c0@infozoom.infozoom.de>

Hi,
I just downloaded geos yesterday and defined a new project in VS.Net
2003 with it.
I built the code as dll and kept the samples out. Then I defined a test
console program with the bigtest sample and linked to the dll. It worked
fine. But I don't know wether the compiled code behaves correctly in
runtime. I will test some more samples.
I didn't have problems with round-function. Is this a compile time or a
runtime issue?
Concerning compatibility with VS.Net 2003, I had to make a few changes
to platform.h (the vc version), and also a few changes to the header
files. These changes were made in order to have the classes exported
from the dll, so they can be used from other programs.
in the platform.h  header I added:
#ifdef GEOSDLL_EXPORTS
#define GEOSDLL_API __declspec(dllexport)
#else
#define GEOSDLL_API __declspec(dllimport)
#endif

and in the class-headers I inserted the macro:
class GEOSDLL_API PrecisionModel { ..}; 
and so on with all public class declarations.

The dll project has the GEOSDLL_EXPORTS defined in the project-settings,
thus all classes are exported.
Client code which includes the headers draw them in as import-symbols.

In order to have these changes in the public Geos tree with the modified
class declarations one would just have define the GEOSDLL_API as empty
macro in the non-VS platform.h.

I can share my VC DLL-project and solution with the samples no problem,
but it only works with the mentioned macros in place.

Stefan

-----Original Message-----
From: geos-devel-bounces@geos.refractions.net
[mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of Charlie
Savage
Sent: Thursday, February 23, 2006 1:02 AM
To: GEOS Development List
Subject: Re: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0


Hi Matuesz,

I was just offering to donate the Visual Studio C++ Solution files 
(i.e., the VC++ project files) that I have to GEOS.

That is a separate thing from fixing the round function, which stops 
VC++ from compiling GEOS whether you use Visual Studio, the Visual
Studio command line or nmake.

However, I gather the VC++ community doesn't use GEOS much though, since

there aren't any Visual Studio files or build scripts that GEOS provides

that work with VC++.

Charlie

Mateusz ?oskot wrote:
> Charlie Savage wrote:
>> One thing to follow up on.  I realize there used to be VC++ solution

>> in the GEOS source tree.  However, it wasn't maintained and thus was 
>> removed a few months ago.
>>
>> Is there any interest in having a working VC++ solution again?  I 
>> don't mind keeping it up to date since I do that locally anyways.
>
> I don't understand. Are you talking about round function issue?
> Does it mean you are asking if it's worth to keep GEOS compilable
> with VC++ ?
> If I'm following your point, should I understand that GEOS is 
> (usually) not compiled by the GEOS Community with VC++ at all?
>
> Cheers


From s.zschocke at infozoom.de  Thu Feb 23 03:55:04 2006
From: s.zschocke at infozoom.de (Stefan Zschocke)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FCFB74.6090107@interserv.com>
Message-ID: <00d401c63856$d71bbce0$17c0a8c0@infozoom.infozoom.de>

Hi, 
seems I am missing something.
I have been experimenting with the geos-2.2.1.tar and I don't find round
anywhere in the sources.
Can you point me to the code where this round problem arises?
I have checked another c++ project of mine and there I do have a custom
round function, I don't remember why, but certainly it is because of the
same issue mentioned in this thread.
I use the following code:

long double roundl(long double d,short dec);  
double round(double d,short dec);
#include <math.h>
#include <float.h>
inline long double roundl(long double d,short dec){ 
  long double div=powl(10,dec);
  d*=div;
  d*=(1.+LDBL_EPSILON); 
  __asm{ 
    fld d 
    frndint
    fstp d
  }
  return d/div; 
}  

inline double round(double d,short dec){ 
  double div=pow(10.,dec);
  d*=div;
  d*=(1.+DBL_EPSILON); 
  __asm{ 
    fld d 
    frndint
    fstp d
  }
  return d/div; 
}  


Stefan

-----Original Message-----
From: geos-devel-bounces@geos.refractions.net
[mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of Charlie
Savage
Sent: Thursday, February 23, 2006 1:02 AM
To: GEOS Development List
Subject: Re: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0


Hi Matuesz,

I was just offering to donate the Visual Studio C++ Solution files 
(i.e., the VC++ project files) that I have to GEOS.

That is a separate thing from fixing the round function, which stops 
VC++ from compiling GEOS whether you use Visual Studio, the Visual
Studio command line or nmake.

However, I gather the VC++ community doesn't use GEOS much though, since

there aren't any Visual Studio files or build scripts that GEOS provides

that work with VC++.

Charlie

Mateusz ?oskot wrote:
> Charlie Savage wrote:
>> One thing to follow up on.  I realize there used to be VC++ solution

>> in the GEOS source tree.  However, it wasn't maintained and thus was 
>> removed a few months ago.
>>
>> Is there any interest in having a working VC++ solution again?  I 
>> don't mind keeping it up to date since I do that locally anyways.
>
> I don't understand. Are you talking about round function issue?
> Does it mean you are asking if it's worth to keep GEOS compilable
> with VC++ ?
> If I'm following your point, should I understand that GEOS is 
> (usually) not compiled by the GEOS Community with VC++ at all?
>
> Cheers


From cfis at interserv.com  Thu Feb 23 04:06:51 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <00d401c63856$d71bbce0$17c0a8c0@infozoom.infozoom.de>
References: <00d401c63856$d71bbce0$17c0a8c0@infozoom.infozoom.de>
Message-ID: <43FD7B2B.7060806@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060223/842137cd/smime.bin
From mateusz at loskot.net  Thu Feb 23 05:20:04 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Building latest CVS HEAD with MSVC++ 8.0
In-Reply-To: <43FD128A.9040504@pobox.com>
References: <43F9BEC4.8020802@loskot.net>	<43F9C1BB.9050203@loskot.net>	<43FCCB5E.1030403@interserv.com>	<43FCD7D8.1020001@loskot.net>	<43FCDC82.2000406@interserv.com>	<43FCE388.7080802@loskot.net>	<43FCE853.8090701@interserv.com>	<43FCEABF.5030800@loskot.net>	<43FCFB74.6090107@interserv.com>
	<43FD128A.9040504@pobox.com>
Message-ID: <43FD8C54.8050601@loskot.net>

Frank Warmerdam wrote:
> Charlie Savage wrote:
>>
>> I was just offering to donate the Visual Studio C++ Solution files 
>> (i.e., the VC++ project files) that I have to GEOS.
>>
>> That is a separate thing from fixing the round function, which stops 
>> VC++ from compiling GEOS whether you use Visual Studio, the Visual 
>> Studio command line or nmake.
>>
>> However, I gather the VC++ community doesn't use GEOS much though, 
>> since there aren't any Visual Studio files or build scripts that GEOS 
>> provides that work with VC++.
> 
> 
> Charlie,
> 
> Note, there are NMAKE files which I have maintained.  There used to be a
> project file, but no one maintained it.

Hi,
Yes, there are makefiles for NMAKE.
2 days ago I started to update makefile.vc, it's not finished because I 
stucked with missing round function. So, if it will be fixed (or 
removed) I'll continue to work on it.
BTW, I think round may be safely removed.

Charlie,
Thanks for your offer about project files but I have created them myself 
for VC++ 8.0. I think some projects could be available on CVS but it's 
hard to keep them up to date while serious changes are made to the repo
everyday (remove/add files).

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Fri Feb 24 07:27:32 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] [PATCH] Update to makefile.vc for building on Win32
	with VC++
Message-ID: <43FEFBB4.8030704@loskot.net>

Index: Makefile.vc
===================================================================
RCS file: /home/cvs/postgis/geos/source/Makefile.vc,v
retrieving revision 1.6
diff -u -a -r1.6 Makefile.vc
--- Makefile.vc	31 Jan 2006 21:42:01 -0000	1.6
+++ Makefile.vc	24 Feb 2006 11:49:19 -0000
@@ -34,17 +34,30 @@
  # Revision 1.1  2004/12/03 16:25:47  frank
  # New
  #
+!INCLUDE dirlist.mak
+
+# Check compiler version given in command line
+# nmake -f makefile.vc MSVC_VER=xxxx
+!IF $(MSVC_VER) == 1400
+MSVC_CPPFLAGS = /EHs /D "_CRT_SECURE_NO_DEPRECATE"
+!ELSE
+MSVC_CPPFLAGS = /GX
+!ENDIF
+
+#CFLAGS = -Iheaders /GX /MD /GR /Zi /nologo
+#CFLAGS = -Iheaders /GX /MD /GR /O1 /D "NDEBUG" /nologo
+CFLAGS = -Iheaders /MD /GR /O2 /D "NDEBUG" /nologo \
+	 $(MSVC_CPPFLAGS)

-CFLAGS = -Iheaders /GX /MD /GR /Zi /nologo

  LIBNAME =	geos.lib
  DLLNAME = 	geos.dll
  SLIBNAME =	geos_i.lib

-OBJ =	algorithm\CGAlgorithms.obj \
-	algorithm\CentroidArea.obj \
+OBJ = 	algorithm\CentroidArea.obj \
  	algorithm\CentroidLine.obj \
  	algorithm\CentroidPoint.obj \
+	algorithm\CGAlgorithms.obj \
  	algorithm\ConvexHull.obj \
  	algorithm\HCoordinate.obj \
  	algorithm\InteriorPointArea.obj \
@@ -56,14 +69,14 @@
  	algorithm\NotRepresentableException.obj \
  	algorithm\PointLocator.obj \
  	algorithm\RobustDeterminant.obj \
-	algorithm\SIRtreePointInRing.obj \
  	algorithm\SimplePointInAreaLocator.obj \
  	algorithm\SimplePointInRing.obj \
+	algorithm\SIRtreePointInRing.obj \
  	geom\Coordinate.obj \
+	geom\CoordinateArraySequence.obj \
+	geom\CoordinateArraySequenceFactory.obj \
  	geom\CoordinateSequence.obj \
  	geom\CoordinateSequenceFactory.obj \
-	geom\DefaultCoordinateSequence.obj \
-	geom\DefaultCoordinateSequenceFactory.obj \
  	geom\Dimension.obj \
  	geom\Envelope.obj \
  	geom\Geometry.obj \
@@ -72,9 +85,9 @@
  	geom\GeometryComponentFilter.obj \
  	geom\GeometryFactory.obj \
  	geom\IntersectionMatrix.obj \
+	geom\LinearRing.obj \
  	geom\LineSegment.obj \
  	geom\LineString.obj \
-	geom\LinearRing.obj \
  	geom\Location.obj \
  	geom\MultiLineString.obj \
  	geom\MultiPoint.obj \
@@ -88,15 +101,7 @@
  	geom\util\LinearComponentExtracter.obj \
  	geom\util\PointExtracter.obj \
  	geom\util\PolygonExtracter.obj \
-	geomgraph\index\MonotoneChain.obj \
-	geomgraph\index\MonotoneChainEdge.obj \
-	geomgraph\index\MonotoneChainIndexer.obj \
-	geomgraph\index\SegmentIntersector.obj \
-	geomgraph\index\SimpleEdgeSetIntersector.obj \
-	geomgraph\index\SimpleMCSweepLineIntersector.obj \
-	geomgraph\index\SimpleSweepLineIntersector.obj \
-	geomgraph\index\SweepLineEvent.obj \
-	geomgraph\index\SweepLineSegment.obj \
+	geom\util\ShortCircuitedGeometryVisitor.obj \
  	geomgraph\Depth.obj \
  	geomgraph\DirectedEdge.obj \
  	geomgraph\DirectedEdgeStar.obj \
@@ -110,6 +115,14 @@
  	geomgraph\EdgeRing.obj \
  	geomgraph\GeometryGraph.obj \
  	geomgraph\GraphComponent.obj \
+	geomgraph\index\MonotoneChainEdge.obj \
+	geomgraph\index\MonotoneChainIndexer.obj \
+	geomgraph\index\SegmentIntersector.obj \
+	geomgraph\index\SimpleEdgeSetIntersector.obj \
+	geomgraph\index\SimpleMCSweepLineIntersector.obj \
+	geomgraph\index\SimpleSweepLineIntersector.obj \
+	geomgraph\index\SweepLineEvent.obj \
+	geomgraph\index\SweepLineSegment.obj \
  	geomgraph\Label.obj \
  	geomgraph\Node.obj \
  	geomgraph\NodeFactory.obj \
@@ -118,32 +131,32 @@
  	geomgraph\Position.obj \
  	geomgraph\Quadrant.obj \
  	geomgraph\TopologyLocation.obj \
+	index\bintree\Bintree.obj \
  	index\bintree\BinTreeInterval.obj \
  	index\bintree\BinTreeNode.obj \
-	index\bintree\Bintree.obj \
  	index\bintree\Key.obj \
  	index\bintree\NodeBase.obj \
  	index\bintree\Root.obj \
+	index\chain\indexMonotoneChain.obj \
  	index\chain\MonotoneChainBuilder.obj \
  	index\chain\MonotoneChainOverlapAction.obj \
  	index\chain\MonotoneChainSelectAction.obj \
-	index\chain\indexMonotoneChain.obj \
  	index\quadtree\DoubleBits.obj \
  	index\quadtree\IntervalSize.obj \
+	index\quadtree\Quadtree.obj \
  	index\quadtree\QuadTreeKey.obj \
  	index\quadtree\QuadTreeNode.obj \
  	index\quadtree\QuadTreeNodeBase.obj \
  	index\quadtree\QuadTreeRoot.obj \
-	index\quadtree\Quadtree.obj \
  	index\strtree\AbstractNode.obj \
  	index\strtree\AbstractSTRtree.obj \
  	index\strtree\Interval.obj \
  	index\strtree\ItemBoundable.obj \
  	index\strtree\SIRtree.obj \
  	index\strtree\STRtree.obj \
+	index\sweepline\indexSweepLineEvent.obj \
  	index\sweepline\SweepLineIndex.obj \
  	index\sweepline\SweepLineInterval.obj \
-	index\sweepline\indexSweepLineEvent.obj \
  	io\ByteOrderValues.obj \
  	io\ParseException.obj \
  	io\StringTokenizer.obj \
@@ -153,25 +166,25 @@
  	io\WKTReader.obj \
  	io\WKTWriter.obj \
  	io\Writer.obj \
-	io\markup\MarkupSTL.obj \
-	noding\snapround\SegmentSnapper.obj \
-	noding\snapround\SimpleSegmentStringsSnapper.obj \
-	noding\snapround\SnapRounder.obj \
+	noding\IntersectionAdder.obj \
+	noding\IntersectionFinderAdder.obj \
  	noding\IteratedNoder.obj \
-	noding\MCQuadtreeNoder.obj \
-	noding\Noder.obj \
+	noding\MCIndexNoder.obj \
  	noding\NodingValidator.obj \
+	noding\Octant.obj \
+	noding\ScaledNoder.obj \
  	noding\SegmentNode.obj \
  	noding\SegmentNodeList.obj \
  	noding\SegmentString.obj \
  	noding\SimpleNoder.obj \
-	noding\nodingSegmentIntersector.obj \
-	operation\GeometryGraphOperation.obj \
-	operation\IsSimpleOp.obj \
-	operation\buffer\DepthSegment.obj \
+	noding\snapround\HotPixel.obj \
+	noding\snapround\MCIndexPointSnapper.obj \
+	noding\snapround\MCIndexSnapRounder.obj \
+	noding\snapround\SimpleSnapRounder.obj \
  	operation\buffer\BufferBuilder.obj \
  	operation\buffer\BufferOp.obj \
  	operation\buffer\BufferSubgraph.obj \
+	operation\buffer\DepthSegment.obj \
  	operation\buffer\OffsetCurveBuilder.obj \
  	operation\buffer\OffsetCurveSetBuilder.obj \
  	operation\buffer\RightmostEdgeFinder.obj \
@@ -180,11 +193,14 @@
  	operation\distance\ConnectedElementPointFilter.obj \
  	operation\distance\DistanceOp.obj \
  	operation\distance\GeometryLocation.obj \
+	operation\GeometryGraphOperation.obj \
+	operation\IsSimpleOp.obj \
  	operation\linemerge\EdgeString.obj \
  	operation\linemerge\LineMergeDirectedEdge.obj \
  	operation\linemerge\LineMergeEdge.obj \
  	operation\linemerge\LineMergeGraph.obj \
  	operation\linemerge\LineMerger.obj \
+	operation\linemerge\LineSequencer.obj \
  	operation\overlay\EdgeSetNoder.obj \
  	operation\overlay\ElevationMatrix.obj \
  	operation\overlay\ElevationMatrixCell.obj \
@@ -198,9 +214,12 @@
  	operation\overlay\PolygonBuilder.obj \
  	operation\polygonize\PolygonizeDirectedEdge.obj \
  	operation\polygonize\PolygonizeEdge.obj \
+	operation\polygonize\polygonizeEdgeRing.obj \
  	operation\polygonize\PolygonizeGraph.obj \
  	operation\polygonize\Polygonizer.obj \
-	operation\polygonize\polygonizeEdgeRing.obj \
+	operation\predicate\RectangleContains.obj \
+	operation\predicate\RectangleIntersects.obj \
+	operation\predicate\SegmentIntersectionTester.obj \
  	operation\relate\EdgeEndBuilder.obj \
  	operation\relate\EdgeEndBundle.obj \
  	operation\relate\EdgeEndBundleStar.obj \
@@ -217,6 +236,7 @@
  	operation\valid\SimpleNestedRingTester.obj \
  	operation\valid\SweeplineNestedRingTester.obj \
  	operation\valid\TopologyValidationError.obj \
+	planargraph\algorithm\ConnectedSubgraphFinder.obj \
  	planargraph\planarDirectedEdge.obj \
  	planargraph\planarDirectedEdgeStar.obj \
  	planargraph\planarEdge.obj \
@@ -224,6 +244,7 @@
  	planargraph\planarNode.obj \
  	planargraph\planarNodeMap.obj \
  	planargraph\planarPlanarGraph.obj \
+	planargraph\planarSubgraph.obj \
  	precision\CommonBits.obj \
  	precision\CommonBitsOp.obj \
  	precision\CommonBitsRemover.obj \
@@ -232,17 +253,17 @@
  	util\Assert.obj \
  	util\AssertionFailedException.obj \
  	util\CoordinateArrayFiter.obj \
-	util\GEOSException.obj \
  	util\GeometricShapeFactory.obj \
+	util\GEOSException.obj \
  	util\IllegalArgumentException.obj \
  	util\Profiler.obj \
  	util\UniqueCoordinateArrayFilter.obj \
  	util\UnsupportedOperationException.obj \
-	capi\geos_c.obj
+	..\capi\geos_c.obj

  TEST_EXE =	TestSweepLineSpeed.exe

-default:	$(LIBNAME) $(DLLNAME) $(TEST_EXE)
+default:	$(LIBNAME) $(DLLNAME)

  $(LIBNAME):	headers/geos/platform.h $(OBJ)
  	if exist $(LIBNAME) del $(LIBNAME)
@@ -261,13 +282,17 @@
  	$(CC) $(CFLAGS) /c $*.c /Fo$@

  clean:
-	del $(OBJ)
  	del $(LIBNAME)
  	del $(SLIBNAME)
  	del $(DLLNAME)
-	del bigtest\*.obj
-	del capi\*.obj
+	del ..\capi\*.obj
  	del *.exe
+	del *.exp
+	del *.ilk
+	del *.pdb
+	for %d in ( $(GEOS_DIRLIST) ) do \
+		del %d\*.obj
+	

  TestSweepLineSpeed.exe:	$(LIBNAME) \
  		bigtest\GeometryTestFactory.obj \


-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Fri Feb 24 07:28:37 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] [PATH] dirlist.mak file included by makefile.vc
 according latest patch
Message-ID: <43FEFBF5.7070005@loskot.net>

# $Id$
#
# List of directories use by makefile.vc
#

GEOS_DIRLIST =  algorithm \
		examples \
		geom \
		geom\util \
		geomgraph \
		geomgraph\index \
		headers \
		headers\geos \
		index \
		index\bintree \
		index\chain \
		index\quadtree \
		index\strtree \
		index\sweepline \
		io \
		noding \
		noding\snapround \
		operation \
		operation\buffer \
		operation\distance \
		operation\linemerge \
		operation\overlay \
		operation\polygonize \
		operation\predicate \
		operation\relate \
		operation\valid \
		planargraph \
		planargraph\algorithm \
		precision \
		util


-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Fri Feb 24 09:23:06 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Is this symmetric rounding algorithm?
Message-ID: <43FF16CA.7000903@loskot.net>

Hi,
As strk suggested, I tried to google for a while and learn about 
(a)symmetric rounding algos.
Here I put round_vc functionwhich is a changed version of rint_vc 
function. IMHO round_vc does symmetring rounding, but I'd like someone 
to check :-)

/*
Symmetric Rounding Algorithm
*/
double round_vc(double val)
{
	double n;
	double f = fabs(modf(val, &n));
	if (val >= 0) {
		if (f < 0.5) {
			return floor(val);
		} else if (f > 0.5) {
			return ceil(val);
		} else {
			return (n + 1.0);
		}
	} else {
		if (f < 0.5) {
			return ceil(val);
		} else if (f > 0.5) {
			return floor(val);
		} else {
			return (n - 1.0);
		}
	}
}

/////////////////////////////////////////////////////
// TEST
#include <math.h>
#include <stdio.h>
int main()
{
	double x = 5.5;
	double x1 = -5.5;
	double y = 6.5;
	double y1 = -6.5;

	printf("x:   %f \n", x);
	printf("x1: %f \n", x1);
	printf("y:   %f \n", y);
	printf("y1: %f \n", y1);

	printf("--- rint -------------------\n");
	printf("x:   %f \n", rint_vc(x));
	printf("x1: %f \n", rint_vc(x1));
	printf("y:   %f \n", rint_vc(y));
	printf("y1: %f \n", rint_vc(y1));

	printf("--- round ------------------\n");
	printf("x:   %f \n", round_vc(x));
	printf("x1: %f \n", round_vc(x1));
	printf("y:   %f \n", round_vc(y));
	printf("y1: %f \n", round_vc(y1));

}

-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Fri Feb 24 09:26:29 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Is this symmetric rounding algorithm?
In-Reply-To: <43FF16CA.7000903@loskot.net>
References: <43FF16CA.7000903@loskot.net>
Message-ID: <43FF1795.6060501@loskot.net>

Mateusz ?oskot wrote:
> 
>     printf("--- rint -------------------\n");
>     printf("x:   %f \n", rint_vc(x));
>     printf("x1: %f \n", rint_vc(x1));
>     printf("y:   %f \n", rint_vc(y));
>     printf("y1: %f \n", rint_vc(y1));

rint_vc is taken from geom\PrecisionModel.cpp file.

What I call symmetric rounding is:

Positive values +5.5 and +6.5 round up to +6 and +7.
So, negative equivalents of -5.5 and -6.5 should round (down) to -6 and -7.


Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Fri Feb 24 14:49:00 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] [PATCH] Update to makefile.vc for building on Win32
	with VC++
In-Reply-To: <43FEFBB4.8030704@loskot.net>
References: <43FEFBB4.8030704@loskot.net>
Message-ID: <43FF632C.1090305@loskot.net>

Hi,

Is this possible to include this patch to makefile.vc?
strk tried to do it but he got some strange errors - the patch was 
rejected. Honestly, it's quite strange for me and I have no idea what is 
  wrong with this patch.

It was generated using

cvs diff -Nua

I tried to apply it the original makefile.vc in my sandbox and 
everything went fine.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From sgillies at frii.com  Mon Feb 27 12:42:35 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Petition for a 2.2.2 release
Message-ID: <2BB776E4-D87A-4D2A-B36E-C8AEDB1AA65C@frii.com>

I'd really like to see a GEOS 2.2.2 release that adds GEOSArea and  
GEOSGeomType to the C API and also incorporates some recent work  
Howard Butler has done to enabling linking the GEOS DLL with MSVC 6.  
I'm willing to help out as much as I can. I could do some of the  
boring stuff like running the tests, updating docs, writing a release  
note. I am also willing to step up and help out with support of the  
old 2.2 branch. How does that sound?

One more question: how far out is 3.0?

cheers,
Sean

---
Sean Gillies
sgillies at frii dot com
http://zcologia.com/news




From strk at refractions.net  Mon Feb 27 13:11:54 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Petition for a 2.2.2 release
In-Reply-To: <2BB776E4-D87A-4D2A-B36E-C8AEDB1AA65C@frii.com>
References: <2BB776E4-D87A-4D2A-B36E-C8AEDB1AA65C@frii.com>
Message-ID: <20060227181154.GA545@keybit.net>

On Mon, Feb 27, 2006 at 10:42:35AM -0700, Sean Gillies wrote:
> I'd really like to see a GEOS 2.2.2 release that adds GEOSArea and  
> GEOSGeomType to the C API and also incorporates some recent work  
> Howard Butler has done to enabling linking the GEOS DLL with MSVC 6.  
> I'm willing to help out as much as I can. I could do some of the  
> boring stuff like running the tests, updating docs, writing a release  
> note. I am also willing to step up and help out with support of the  
> old 2.2 branch. How does that sound?

Sounds good to me.

> One more question: how far out is 3.0?

Far enough to make 2.2.2 a good idea :)

--strk;

From strk at refractions.net  Mon Feb 27 13:23:50 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Is this symmetric rounding algorithm?
In-Reply-To: <43FF1795.6060501@loskot.net>
References: <43FF16CA.7000903@loskot.net> <43FF1795.6060501@loskot.net>
Message-ID: <20060227182350.GB545@keybit.net>

For archive's sake: I've added your functions to util/math.cpp
renamed to sym_round in 'util' namespace.

--strk;

 State-collected Geographic Data is public property !
 European citizens, reject the INSPIRE directive.
 Sign the petition: http://petition.publicgeodata.org

On Fri, Feb 24, 2006 at 03:26:29PM +0100, Mateusz ??oskot wrote:
> Mateusz ??oskot wrote:
> >
> >    printf("--- rint -------------------\n");
> >    printf("x:   %f \n", rint_vc(x));
> >    printf("x1: %f \n", rint_vc(x1));
> >    printf("y:   %f \n", rint_vc(y));
> >    printf("y1: %f \n", rint_vc(y1));
> 
> rint_vc is taken from geom\PrecisionModel.cpp file.
> 
> What I call symmetric rounding is:
> 
> Positive values +5.5 and +6.5 round up to +6 and +7.
> So, negative equivalents of -5.5 and -6.5 should round (down) to -6 and -7.
> 
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net


From sgillies at frii.com  Tue Feb 28 00:37:42 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Petition for a 2.2.2 release
In-Reply-To: <20060227181154.GA545@keybit.net>
References: <2BB776E4-D87A-4D2A-B36E-C8AEDB1AA65C@frii.com>
	<20060227181154.GA545@keybit.net>
Message-ID: <D4AF574B-8B7D-4B8D-A0E1-31CC211205CE@frii.com>


On Feb 27, 2006, at 11:11 AM, strk@refractions.net wrote:

> On Mon, Feb 27, 2006 at 10:42:35AM -0700, Sean Gillies wrote:
>> I'd really like to see a GEOS 2.2.2 release that adds GEOSArea and
>> GEOSGeomType to the C API and also incorporates some recent work
>> Howard Butler has done to enabling linking the GEOS DLL with MSVC 6.
>> I'm willing to help out as much as I can. I could do some of the
>> boring stuff like running the tests, updating docs, writing a release
>> note. I am also willing to step up and help out with support of the
>> old 2.2 branch. How does that sound?
>
> Sounds good to me.
>
>> One more question: how far out is 3.0?
>
> Far enough to make 2.2.2 a good idea :)
>
> --strk;

Great! Howard and I committed changes to geos_c.cpp, geos_c.h.in, and  
also an nmake file into branch-2-2. I also incremented the revision  
in configure.in so that the C API is 1.0.2, same as the CVS HEAD.

Call on me when it is time to release.

Sean

---
Sean Gillies
sgillies@frii.com
http://zcologia.com




From mateusz at loskot.net  Tue Feb 28 04:59:48 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Today small bug reports
Message-ID: <44041F14.3020106@loskot.net>

Hi,

This post is only to inform developers about two small bug reports I 
submitted today.

Bug #30
http://postgis.refractions.net/bugs/bug.php?op=show&bugid=30&pos=1

Bug #31
http://postgis.refractions.net/bugs/bug.php?op=show&bugid=31&pos=0


p.s. strk please give your opinion if ButTrack is a good place
to report small bugs + submit patches

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Tue Feb 28 06:11:38 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Today small bug reports
In-Reply-To: <44041F14.3020106@loskot.net>
References: <44041F14.3020106@loskot.net>
Message-ID: <20060228111138.GD8892@keybit.net>

On Tue, Feb 28, 2006 at 10:59:48AM +0100, Mateusz ??oskot wrote:
> Hi,
> 
> This post is only to inform developers about two small bug reports I 
> submitted today.
> 
> Bug #30
> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=30&pos=1
> 
> Bug #31
> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=31&pos=0
> 
> 
> p.s. strk please give your opinion if ButTrack is a good place
> to report small bugs + submit patches

Yes, that's the place to go.  Thanks.

--strk;

From strk at refractions.net  Tue Feb 28 10:57:31 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Petition for a 2.2.2 release
In-Reply-To: <D4AF574B-8B7D-4B8D-A0E1-31CC211205CE@frii.com>
References: <2BB776E4-D87A-4D2A-B36E-C8AEDB1AA65C@frii.com>
	<20060227181154.GA545@keybit.net>
	<D4AF574B-8B7D-4B8D-A0E1-31CC211205CE@frii.com>
Message-ID: <20060228155731.GA12685@keybit.net>

On Mon, Feb 27, 2006 at 10:37:42PM -0700, Sean Gillies wrote:
> 
> On Feb 27, 2006, at 11:11 AM, strk@refractions.net wrote:
> 
> >On Mon, Feb 27, 2006 at 10:42:35AM -0700, Sean Gillies wrote:
> >>I'd really like to see a GEOS 2.2.2 release that adds GEOSArea and
> >>GEOSGeomType to the C API and also incorporates some recent work
> >>Howard Butler has done to enabling linking the GEOS DLL with MSVC 6.
> >>I'm willing to help out as much as I can. I could do some of the
> >>boring stuff like running the tests, updating docs, writing a release
> >>note. I am also willing to step up and help out with support of the
> >>old 2.2 branch. How does that sound?
> >
> >Sounds good to me.
> >
> >>One more question: how far out is 3.0?
> >
> >Far enough to make 2.2.2 a good idea :)
> >
> >--strk;
> 
> Great! Howard and I committed changes to geos_c.cpp, geos_c.h.in, and  
> also an nmake file into branch-2-2. I also incremented the revision  
> in configure.in so that the C API is 1.0.2, same as the CVS HEAD.
> 
> Call on me when it is time to release.

Please take a look at the HOW_TO_RELEASE file in HEAD.
It contains information on the process. It's a pretty
new file, so let me know if you have any question you'd
like to discuss.

Note that it has been written w/out thinking about a 2.2.2 release,
so I'm not sure about implications of the 2.2.2 release.

In particular, in HEAD we decided to name C++ library after release,
with every release breaking ABI with previous (libgeos-2.2.2.so).

The 2.2. branch shouldn't have this big change, so we should make it
binary-compatible with the previous, thus only incrementing MICRO
version (libgeos.so.2.2.2). We should check if everything goes as
expected still followin the same release process.

--strk;

From mateusz at loskot.net  Tue Feb 28 19:13:04 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Unit Tests port
Message-ID: <4404E710.5070407@loskot.net>

Hi,

I started to think about porting JTS Unit Tests to C++ for GEOS.
During dynamic development Unit Tests can be very helpful, they save 
much time and help to track bugs/fixes lifetime, and many many more.

So, first, I think it's important to choose appropriate
tool - Unit-Testing Framework (UTF).
There are many UTFs so I'm a bit confused which would be best ;-)
I'm going to make some short research in this field but I'd like to ask 
on the list if anyone has some prefered/recommended UTF and could 
present its pros/cons to make some comparison.

My favourites are:
1 - CxxTest - I have not used it, but it gots max votes in the
article below
http://cxxtest.sourceforge.net/

2 - Boost.Test - quite complex but powerful
http://www.boost.org/libs/test/doc/

3 - TUT - very light and simple UTF
http://tut-framework.sourceforge.net

Here is interesting article exploring available UTFs
(NOTE: this article is 2 years old):
http://www.gamesfromwithin.com/articles/0412/000061.html

Thanks for your comments!
Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Tue Feb 28 21:14:57 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Unit Tests port
In-Reply-To: <4404E710.5070407@loskot.net>
References: <4404E710.5070407@loskot.net>
Message-ID: <440503A1.5000407@interserv.com>

Hi Mateusz,

Good luck with this - I think it is a great idea.  Did you see the 
follow up article that Noel wrote a couple months back?

http://www.gamesfromwithin.com/articles/0512/000103.html

He points out another framework, based loosely on cppunitlite

http://cnicholson.net/content.php?id=52

I've never used any of these frameworks, so don't have any recommendations.

For a completely different approach, you could use Python or Ruby to 
test GEOS via the SWIG bindings.  If you look in CVS, I have ported the 
C++ example to Ruby and turned it into a bunch of unit tests.  Note that 
GDAL takes this approach, it has a whole test suite written in Python.  
The advantage is that its really fast to develop tests and you have full 
access to the C++ api.  The disadvantage is there is an extra level of 
wrapping going on - which shouldn't matter for testing functionality but 
comes into play when managing memory.

Thanks,

Charlie

Mateusz ?oskot wrote:
> Hi,
>
> I started to think about porting JTS Unit Tests to C++ for GEOS.
> During dynamic development Unit Tests can be very helpful, they save 
> much time and help to track bugs/fixes lifetime, and many many more.
>
> So, first, I think it's important to choose appropriate
> tool - Unit-Testing Framework (UTF).
> There are many UTFs so I'm a bit confused which would be best ;-)
> I'm going to make some short research in this field but I'd like to 
> ask on the list if anyone has some prefered/recommended UTF and could 
> present its pros/cons to make some comparison.
>
> My favourites are:
> 1 - CxxTest - I have not used it, but it gots max votes in the
> article below
> http://cxxtest.sourceforge.net/
>
> 2 - Boost.Test - quite complex but powerful
> http://www.boost.org/libs/test/doc/
>
> 3 - TUT - very light and simple UTF
> http://tut-framework.sourceforge.net
>
> Here is interesting article exploring available UTFs
> (NOTE: this article is 2 years old):
> http://www.gamesfromwithin.com/articles/0412/000061.html
>
> Thanks for your comments!
> Cheers
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060228/b6f4bf1a/smime.bin
From alexbodn at 012.net.il  Tue Feb 28 21:26:06 2006
From: alexbodn at 012.net.il (alex bodnaru)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Unit Tests port
In-Reply-To: <4404E710.5070407@loskot.net>
References: <4404E710.5070407@loskot.net>
Message-ID: <4405063E.6060407@alex3>

hi,

i have heard today of a very flexible utf written in python.
see http://www.testoob.org.

alex

Mateusz ?oskot wrote:
> Hi,
> 
> I started to think about porting JTS Unit Tests to C++ for GEOS.
> During dynamic development Unit Tests can be very helpful, they save
> much time and help to track bugs/fixes lifetime, and many many more.
> 
> So, first, I think it's important to choose appropriate
> tool - Unit-Testing Framework (UTF).
> There are many UTFs so I'm a bit confused which would be best ;-)
> I'm going to make some short research in this field but I'd like to ask
> on the list if anyone has some prefered/recommended UTF and could
> present its pros/cons to make some comparison.
> 
> My favourites are:
> 1 - CxxTest - I have not used it, but it gots max votes in the
> article below
> http://cxxtest.sourceforge.net/
> 
> 2 - Boost.Test - quite complex but powerful
> http://www.boost.org/libs/test/doc/
> 
> 3 - TUT - very light and simple UTF
> http://tut-framework.sourceforge.net
> 
> Here is interesting article exploring available UTFs
> (NOTE: this article is 2 years old):
> http://www.gamesfromwithin.com/articles/0412/000061.html
> 
> Thanks for your comments!
> Cheers

From pramsey at refractions.net  Tue Feb 28 22:19:39 2006
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:58 2007
Subject: [geos-devel] Unit Tests port
In-Reply-To: <4405063E.6060407@alex3>
References: <4404E710.5070407@loskot.net> <4405063E.6060407@alex3>
Message-ID: <40856B85-0C2F-4352-8EBE-6E1915DBA9F6@refractions.net>

My sense of cleanliness says that the unit testing framework should  
be in the language being tested and not add build dependencies, but  
He Who Commits to the Effort has the most say.

P

On Feb 28, 2006, at 6:26 PM, alex bodnaru wrote:

> hi,
>
> i have heard today of a very flexible utf written in python.
> see http://www.testoob.org.
>
> alex
>
> Mateusz ?oskot wrote:
>> Hi,
>>
>> I started to think about porting JTS Unit Tests to C++ for GEOS.
>> During dynamic development Unit Tests can be very helpful, they save
>> much time and help to track bugs/fixes lifetime, and many many more.
>>
>> So, first, I think it's important to choose appropriate
>> tool - Unit-Testing Framework (UTF).
>> There are many UTFs so I'm a bit confused which would be best ;-)
>> I'm going to make some short research in this field but I'd like  
>> to ask
>> on the list if anyone has some prefered/recommended UTF and could
>> present its pros/cons to make some comparison.
>>
>> My favourites are:
>> 1 - CxxTest - I have not used it, but it gots max votes in the
>> article below
>> http://cxxtest.sourceforge.net/
>>
>> 2 - Boost.Test - quite complex but powerful
>> http://www.boost.org/libs/test/doc/
>>
>> 3 - TUT - very light and simple UTF
>> http://tut-framework.sourceforge.net
>>
>> Here is interesting article exploring available UTFs
>> (NOTE: this article is 2 years old):
>> http://www.gamesfromwithin.com/articles/0412/000061.html
>>
>> Thanks for your comments!
>> Cheers
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


