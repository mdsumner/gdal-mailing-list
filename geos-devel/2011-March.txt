From geos-trac at osgeo.org  Tue Mar  1 11:26:07 2011
From: geos-trac at osgeo.org (GEOS)
Date: Tue Mar  1 11:26:09 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors with -O0
 (was: Conditional jump or move depends on uninitialised value(s))
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.9b4a29e388b26a08d6d68c0342dde5e0@osgeo.org>

#397: Valgrind reported errors with -O0
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
Changes (by strk):

  * version:  3.0.3 => svn-trunk


Comment:

 Seems to only happen when building with -O0.
 The previous report was on a 64bit system, on a 32bit (with -O0) it's even
 worst:
 {{{

 ==21569== Invalid read of size 4
 ==21569==    at 0x41544F6:
 geos::algorithm::LineIntersector::intersection(geos::geom::Coordinate
 const&, geos::geom::Coordinate const&, geos::geom::Coordinate const&,
 geos::geom::Coordinate const&, geos::geom::Coordinate&) const (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x4153831:
 geos::algorithm::LineIntersector::computeIntersect(geos::geom::Coordinate
 const&, geos::geom::Coordinate const&, geos::geom::Coordinate const&,
 geos::geom::Coordinate const&) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41526F6:
 geos::algorithm::LineIntersector::computeIntersection(geos::geom::Coordinate
 const&, geos::geom::Coordinate const&, geos::geom::Coordinate const&,
 geos::geom::Coordinate const&) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41A7FA8:
 geos::geomgraph::index::SegmentIntersector::addIntersections(geos::geomgraph::Edge*,
 int, geos::geomgraph::Edge*, int) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41AC9B6:
 geos::geomgraph::index::MonotoneChainEdge::computeIntersectsForChain(int,
 int, geos::geomgraph::index::MonotoneChainEdge const&, int, int,
 geos::geomgraph::index::SegmentIntersector&) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41ACB4C:
 geos::geomgraph::index::MonotoneChainEdge::computeIntersectsForChain(int,
 int, geos::geomgraph::index::MonotoneChainEdge const&, int, int,
 geos::geomgraph::index::SegmentIntersector&) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41ACB4C:
 geos::geomgraph::index::MonotoneChainEdge::computeIntersectsForChain(int,
 int, geos::geomgraph::index::MonotoneChainEdge const&, int, int,
 geos::geomgraph::index::SegmentIntersector&) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41AC94E:
 geos::geomgraph::index::MonotoneChainEdge::computeIntersectsForChain(int,
 geos::geomgraph::index::MonotoneChainEdge const&, int,
 geos::geomgraph::index::SegmentIntersector&) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41ABD88:
 geos::geomgraph::index::MonotoneChain::computeIntersections(geos::geomgraph::index::MonotoneChain*,
 geos::geomgraph::index::SegmentIntersector*) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41ABB7B:
 geos::geomgraph::index::SimpleMCSweepLineIntersector::processOverlaps(int,
 int, geos::geomgraph::index::SweepLineEvent*,
 geos::geomgraph::index::SegmentIntersector*) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41ABAC7:
 geos::geomgraph::index::SimpleMCSweepLineIntersector::computeIntersections(geos::geomgraph::index::SegmentIntersector*)
 (in /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==    by 0x41AB6C9:
 geos::geomgraph::index::SimpleMCSweepLineIntersector::computeIntersections(std::vector<geos::geomgraph::Edge*,
 std::allocator<geos::geomgraph::Edge*> >*,
 std::vector<geos::geomgraph::Edge*, std::allocator<geos::geomgraph::Edge*>
 >*, geos::geomgraph::index::SegmentIntersector*) (in
 /usr/src/geos/build-O0/src/.libs/libgeos-3.3.0.so)
 ==21569==  Address 0xbec49f68 is just below the stack ptr.  To suppress,
 use: --workaround-gcc296-bugs=yes
 ==21569==
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Tue Mar  1 11:28:58 2011
From: geos-trac at osgeo.org (GEOS)
Date: Tue Mar  1 11:29:00 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors with -O0
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.8935cf26b20d7f34f9d99ba90f2ff5f1@osgeo.org>

#397: Valgrind reported errors with -O0
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Passing --workaround-gcc296-bugs=yes to valgrind 3.6.0.SVN-Debian on the
 32bit system suppressed them all.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Tue Mar  1 11:49:47 2011
From: geos-trac at osgeo.org (GEOS)
Date: Tue Mar  1 11:49:49 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors with -O0
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.9e53d95ae3aa300ee21deaa8edd2eb0a@osgeo.org>

#397: Valgrind reported errors with -O0
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by mloskot):

 Sandro, this report is incomplete and does not say what version of GCC you
 are using, so the use of gcc296 workaround is confusing.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Tue Mar  1 11:57:25 2011
From: geos-trac at osgeo.org (GEOS)
Date: Tue Mar  1 11:57:28 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors with -O0
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.086e596c55e7349c2b226f97cd9c4e2e@osgeo.org>

#397: Valgrind reported errors with -O0
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Yeah, sorry. The 32bit system is using gcc (Ubuntu 4.4.3-4ubuntu5) 4.4.3

 The 64bit is currently off, will update on next boot

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:4>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Wed Mar  2 04:41:26 2011
From: geos-trac at osgeo.org (GEOS)
Date: Wed Mar  2 04:41:28 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors with -O0
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.63d4637316b5b5d96617eca628e7a3a1@osgeo.org>

#397: Valgrind reported errors with -O0
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Ok, the 64bit system has the same compiler version:
 {{{
   gcc (Ubuntu 4.4.3-4ubuntu5) 4.4.3
 }}}

 And the same valgrind version too:
 {{{
   valgrind-3.6.0.SVN-Debian
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:5>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Wed Mar  2 04:47:38 2011
From: geos-trac at osgeo.org (GEOS)
Date: Wed Mar  2 04:47:40 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors (was:
 Valgrind reported errors with -O0)
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.a564ca227489528cdfdd6a24ba721a9f@osgeo.org>

#397: Valgrind reported errors
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 So, on the 64bit I have "Conditional jump" when building with -O0 and
 "Invalid read of size 8" when building with -O2, so is _affected_ by
 optimization but not caused by a single optimization value :/

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:6>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Wed Mar  2 05:11:30 2011
From: geos-trac at osgeo.org (GEOS)
Date: Wed Mar  2 05:11:32 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.8809ac9636ff41817707a94a4af024bf@osgeo.org>

#397: Valgrind reported errors
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by darkblueb):

 Linux xps-420 2.6.35-22-generic #35-Ubuntu SMP Sat Oct 16 20:45:36 UTC
 2010 x86_64 GNU/Linux
 dbb@xps-420:/home/shared/srcs_xps/strk_test$ gcc --version
 gcc (Ubuntu/Linaro 4.4.4-14ubuntu5) 4.4.5
 Copyright (C) 2010 Free Software Foundation, Inc.
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
 PURPOSE.

 dbb@xps-420:/home/shared/srcs_xps/strk_test$ valgrind --version
 valgrind-3.6.0.SVN-Debian
 ============================
 dbb@xps-420:/home/shared/srcs_xps/strk_test$ libtool --mode=execute
 valgrind ../geos_trunk/tests/xmltester/XMLTester bug397.xml
 ==7815== Memcheck, a memory error detector
 ==7815== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
 ==7815== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for
 copyright info
 ==7815== Command: /home/shared/srcs_xps/geos_trunk/tests/xmltester/.libs
 /lt-XMLTester bug397.xml
 ==7815==
 Files: 1
 Tests: 1
 Failed: 0
 Succeeded: 1
 ==7815==
 ==7815== HEAP SUMMARY:
 ==7815==     in use at exit: 0 bytes in 0 blocks
 ==7815==   total heap usage: 25,343 allocs, 25,343 frees, 1,213,252 bytes
 allocated
 ==7815==
 ==7815== All heap blocks were freed -- no leaks are possible
 ==7815==
 ==7815== For counts of detected and suppressed errors, rerun with: -v
 ==7815== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:7>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Wed Mar  2 05:49:55 2011
From: geos-trac at osgeo.org (GEOS)
Date: Wed Mar  2 05:49:57 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.5cddea0d5f9d4b2c7623506277338941@osgeo.org>

#397: Valgrind reported errors
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 --workaround-gcc296-bugs=yes on the 64bit system has no effect

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:8>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Wed Mar  2 06:08:29 2011
From: geos-trac at osgeo.org (GEOS)
Date: Wed Mar  2 06:08:31 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.6de2558d2cf63cda4ffe00c69e672a8b@osgeo.org>

#397: Valgrind reported errors
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Same Invalid read of size 8 on the 64bit system with
 g++-4.3 (Ubuntu 4.3.4-10ubuntu1) 4.3.4
 this is as of r3256

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:9>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Wed Mar  2 07:37:52 2011
From: geos-trac at osgeo.org (GEOS)
Date: Wed Mar  2 07:37:55 2011
Subject: [geos-devel] [GEOS] #398: PolygonBuilder::findShell assertion
 'shellcount <= 1' failed
Message-ID: <044.5a6844bdf3075828c4ab99d38b6c22ea@osgeo.org>

#398: PolygonBuilder::findShell assertion 'shellcount <= 1' failed
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:                            
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 See:

 http://lists.osgeo.org/pipermail/geos-devel/2011-February/005099.html

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/398>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From strk at keybit.net  Wed Mar  2 07:38:56 2011
From: strk at keybit.net (Sandro Santilli)
Date: Wed Mar  2 07:39:07 2011
Subject: [geos-devel] Re: PolygonBuilder::findShell assertion 'shellcount
	<= 1' failed
In-Reply-To: <AANLkTinE7RvSRLgGaM5GKSNr0JxCrYDa7jt9Mmq3mMi0@mail.gmail.com>
References: <AANLkTi=_nHd7nihwpqNrzr6hkwSxgHkk4Ac0J3_+G22r@mail.gmail.com>
	<AANLkTinE7RvSRLgGaM5GKSNr0JxCrYDa7jt9Mmq3mMi0@mail.gmail.com>
Message-ID: <20110302123856.GL73454@keybit.net>

On Wed, Feb 02, 2011 at 08:52:21PM -0600, kyle cronan wrote:

> I posted the message below back in august, but have only recently had
> a chance to look into this further.  

I filed a ticket for this:
http://trac.osgeo.org/geos/ticket/398
Thanks

--strk;

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
From jiajianying at tigerknows.com  Wed Mar  2 20:19:14 2011
From: jiajianying at tigerknows.com (jiajianying)
Date: Wed Mar  2 20:23:32 2011
Subject: [geos-devel] Calling MinimumDiameter from C API
Message-ID: <4D6EEC92.7010109@tigerknows.com>

Hello,

I'm currently using the C api of GEOS as recommended. How can I access 
the MinimumDiameter algorithm from C api? Is there anyone having met 
this problem before?

Thanks

Justin
From jiajianying at tigerknows.com  Wed Mar  2 22:52:26 2011
From: jiajianying at tigerknows.com (jiajianying)
Date: Wed Mar  2 22:52:37 2011
Subject: [geos-devel] Calling MinimumDiameter from C API
In-Reply-To: <4D6EEC92.7010109@tigerknows.com>
References: <4D6EEC92.7010109@tigerknows.com>
Message-ID: <4D6F107A.2020308@tigerknows.com>

I find

extern  int  GEOS_DLL GEOSLength(const  GEOSGeometry* g1,double  *length);


actually calculates the minimum diameter. However, what is the 
complexity of this computation in GEOS?

Thanks

Justin


On 2011?03?03? 09:19, jiajianying wrote:
> Hello,
>
> I'm currently using the C api of GEOS as recommended. How can I access 
> the MinimumDiameter algorithm from C api? Is there anyone having met 
> this problem before?
>
> Thanks
>
> Justin
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
From strk at keybit.net  Thu Mar  3 02:48:56 2011
From: strk at keybit.net (Sandro Santilli)
Date: Thu Mar  3 02:49:09 2011
Subject: [geos-devel] Calling MinimumDiameter from C API
In-Reply-To: <4D6F107A.2020308@tigerknows.com>
References: <4D6EEC92.7010109@tigerknows.com> <4D6F107A.2020308@tigerknows.com>
Message-ID: <20110303074856.GB99751@keybit.net>

On Thu, Mar 03, 2011 at 11:52:26AM +0800, jiajianying wrote:
> I find
> 
> extern  int  GEOS_DLL GEOSLength(const  GEOSGeometry* g1,double  *length);
> 
> actually calculates the minimum diameter. However, what is the 
> complexity of this computation in GEOS?

GEOSLength returns length for linear geometries, and perimeter for areal
geometries. Minimum diameter isn't exposed in the C API.
Patches are welcome.

--strk;

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
From jiajianying at tigerknows.com  Thu Mar  3 03:15:50 2011
From: jiajianying at tigerknows.com (jiajianying)
Date: Thu Mar  3 03:16:05 2011
Subject: [geos-devel] Calling MinimumDiameter from C API
In-Reply-To: <20110303074856.GB99751@keybit.net>
References: <4D6EEC92.7010109@tigerknows.com> <4D6F107A.2020308@tigerknows.com>
	<20110303074856.GB99751@keybit.net>
Message-ID: <4D6F4E36.50007@tigerknows.com>

On 2011?03?03? 15:48, Sandro Santilli wrote:
> On Thu, Mar 03, 2011 at 11:52:26AM +0800, jiajianying wrote:
>> I find
>>
>> extern  int  GEOS_DLL GEOSLength(const  GEOSGeometry* g1,double  *length);
>>
>> actually calculates the minimum diameter. However, what is the
>> complexity of this computation in GEOS?
> GEOSLength returns length for linear geometries, and perimeter for areal
> geometries. Minimum diameter isn't exposed in the C API.
> Patches are welcome.
>
> --strk;
>
>    ()   Free GIS&  Flash consultant/developer
>    /\   http://strk.keybit.net/services.html
>
>

I'm hesitating to use C++ api or extend C api. Not just minimum 
diameter, I will use other algorithms in future. C api seems too 
limited. But I'm also afraid of the maintenance problem in the future. 
Can you give me some advice?

Thanks

Justin

From jiajianying at tigerknows.com  Fri Mar  4 01:13:41 2011
From: jiajianying at tigerknows.com (jiajianying)
Date: Fri Mar  4 01:13:53 2011
Subject: [geos-devel] Calling MinimumDiameter from C API
In-Reply-To: <20110303122955.GF99751@keybit.net>
References: <4D6EEC92.7010109@tigerknows.com> <4D6F107A.2020308@tigerknows.com>
	<20110303074856.GB99751@keybit.net>
	<4D6F4BA2.6090406@tigerknows.com>
	<20110303082240.GE99751@keybit.net>
	<4D6F5119.8040501@tigerknows.com>
	<20110303122955.GF99751@keybit.net>
Message-ID: <4D708315.7060104@tigerknows.com>

On 2011?03?03? 20:29, Sandro Santilli wrote:
> On Thu, Mar 03, 2011 at 04:28:09PM +0800, jiajianying wrote:
>> How to extend C api? Edit the source file and submit to trunk? Is there
>> any developer's guide?
> Here's the guide:
> 1. Open geos_ts_c.cpp
> 2. Copy an existin function that "looks like" the one you're goin to make
> 3. Adapt to your case
> 4. Write a wrapper in geos_c.cpp (same thing: copy an existing one)
> 5. Write signature in geos_c.h.in
> 6. Send patch
>
> Finally: use the mailing list for any further communications :)
>
> --strk;
>
>    ()   Free GIS&  Flash consultant/developer
>    /\   http://strk.keybit.net/services.html
>
>
How long will the update be part of GEOS package(release/trunk)? In 
other words, I don't want to copy source files and rebuild GEOS when my 
application is installed on other machines.

By the way, patches are sent with the trac system?

Justin

From strk at keybit.net  Fri Mar  4 02:51:24 2011
From: strk at keybit.net (Sandro Santilli)
Date: Fri Mar  4 02:51:35 2011
Subject: [geos-devel] Calling MinimumDiameter from C API
In-Reply-To: <4D708315.7060104@tigerknows.com>
References: <4D6EEC92.7010109@tigerknows.com> <4D6F107A.2020308@tigerknows.com>
	<20110303074856.GB99751@keybit.net>
	<4D6F4BA2.6090406@tigerknows.com>
	<20110303082240.GE99751@keybit.net>
	<4D6F5119.8040501@tigerknows.com>
	<20110303122955.GF99751@keybit.net>
	<4D708315.7060104@tigerknows.com>
Message-ID: <20110304075124.GP7451@keybit.net>

On Fri, Mar 04, 2011 at 02:13:41PM +0800, jiajianying wrote:
> On 2011???03???03??? 20:29, Sandro Santilli wrote:
> >On Thu, Mar 03, 2011 at 04:28:09PM +0800, jiajianying wrote:
> >>How to extend C api? Edit the source file and submit to trunk? Is there
> >>any developer's guide?
> >Here's the guide:
> >1. Open geos_ts_c.cpp
> >2. Copy an existin function that "looks like" the one you're goin to make
> >3. Adapt to your case
> >4. Write a wrapper in geos_c.cpp (same thing: copy an existing one)
> >5. Write signature in geos_c.h.in
> >6. Send patch
> >
> >Finally: use the mailing list for any further communications :)

> How long will the update be part of GEOS package(release/trunk)?

If you're in time, your change will be included in GEOS-3.3.0 to be
shipped most likely before summer.

> By the way, patches are sent with the trac system?

Yes.

--strk;

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
From geos-trac at osgeo.org  Fri Mar  4 04:45:57 2011
From: geos-trac at osgeo.org (GEOS)
Date: Fri Mar  4 04:45:58 2011
Subject: [geos-devel] Re: [GEOS] #397: Valgrind reported errors
In-Reply-To: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
References: <044.d7c6bbf951f682d8419ef17b79d282d3@osgeo.org>
Message-ID: <053.4c1037f3e5f6f4967a08e7ca6534566a@osgeo.org>

#397: Valgrind reported errors
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Found that the errors are NOT output, on the 64bit system, unless
 --enable-glibcxx-debug configure switch is given.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/397#comment:10>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Fri Mar  4 10:04:59 2011
From: geos-trac at osgeo.org (GEOS)
Date: Fri Mar  4 10:05:00 2011
Subject: [geos-devel] [GEOS] #399: Expose Relate boundary node rule to C-API
Message-ID: <044.1f221635c1140a76622295a3fdd42698@osgeo.org>

#399: Expose Relate boundary node rule to C-API
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 Let C-API users specify a boundary node rule for GEOSRelate

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/399>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From pramsey at cleverelephant.ca  Mon Mar  7 17:42:20 2011
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon Mar  7 17:42:30 2011
Subject: [geos-devel] Fwd: [PATCH] Several fixes for building GEOS on
	Solaris with GCC
References: <tqgbp1mhawm.fsf@impactweather.com>
Message-ID: <1C9EF8CC-1294-47AC-BBE1-6EA204213E85@cleverelephant.ca>



Begin forwarded message:

> From: Art Haas <ahaas@impactweather.com>
> Date: March 7, 2011 1:35:05 PM PST
> To: <geos-devel-owner@lists.osgeo.org>
> Subject: [PATCH] Several fixes for building GEOS on Solaris with GCC
> 
> 
> Hi.
> 
> My initial mail to <geos-devel@lists.osgeo.org> was rejected
> with a message to send to this address, so here's my second
> attempt in submitting these changes ...
> 
> The patches below fix several build problems I encountered
> while trying to build GEOS on Solaris 10 (x86) with my
> GCC-4.6 buids and 'cmake' for configuration:
> 
> platform.h.cmake - add definitions for ISNAN(x) and FINITE(x)
> platform.h.in - untested but similar patches
> TaggedLineString.h - prefix several 'size_t' uses with 'std::'
> valid/SimpleNestedRingTester.h - include <cstring> for 'NULL'
> 
> These patches allow the build to get about 20% complete before the
> build fails with this error:
> 
> /export/home/arth/src/geos/src/operation/overlay/OverlayNodeFactory.cpp:31:33: error: uninitialized const 'geos::operation::overlay::onf' [-fpermissive]
> /export/home/arth/src/geos/include/geos/operation/overlay/OverlayNodeFactory.h:47:16: note: 'const class geos::operation::overlay::OverlayNodeFactory' has no user-provided default constructor
> make[2]: *** [src/CMakeFiles/geos.dir/operation/overlay/OverlayNodeFactory.cpp.o] Error 1
> make[1]: *** [src/CMakeFiles/geos.dir/all] Error 2
> make: *** [all] Error 2
> 
> Building GEOS on a current Fedora 14 system and GCC-4.6 results
> in a similar error message; a build with the system GCC-4.5 compiler
> completes without problem and passes 'make check'.
> 
> I'll work on the constructor problem as time permits; possibly others
> could try to install GCC-4.6 development builds and see what other
> changes the new compiler will require.
> 
> Thanks for your work on GEOS.
> 
> Art Haas
> 
> Index: include/geos/platform.h.cmake
> ===================================================================
> --- include/geos/platform.h.cmake	(revision 3266)
> +++ include/geos/platform.h.cmake	(working copy)
> @@ -130,6 +130,8 @@
> # define ISNAN(x) __inline_isnand(static_cast<double>(x))
> #elif defined(HAVE_ISNAND_XCODE)
> # define ISNAN(x) __isnand(static_cast<double>(x))
> +#elif defined(__GNUC__) && (__GNUC__ > 3)
> +# define ISNAN(x) (__builtin_isnan(x))
> #elif defined(HAVE_ISNAN)
> # if defined(_MSC_VER)
> #  define ISNAN(x) _isnan(static_cast<double>(x))
> @@ -146,6 +148,8 @@
> # define FINITE(x) isfinite(x)
> #elif defined(HAVE_FINITE)
> # define FINITE(x) _finite(static_cast<double>(x))
> +#elif defined(__GNUC__) && (__GNUC__ > 3)
> +# define FINITE(x) (__builtin_isfinite(x))
> #else
> # error "Could not find finite or isfinite function or macro!"
> #endif
> Index: include/geos/platform.h.in
> ===================================================================
> --- include/geos/platform.h.in	(revision 3266)
> +++ include/geos/platform.h.in	(working copy)
> @@ -78,6 +78,8 @@
> #else
> # if defined(_MSC_VER)
> #  define FINITE(x) _finite(static_cast<double>(x))    
> +# elif defined(__GNUC__) && (__GNUC__ > 3)
> +#  define FINITE(x) (__builtin_isfinite(x))
> # else
> #  define FINITE(x) (isfinite(x))
> # endif
> @@ -95,6 +97,8 @@
>    // Hack for OS/X <cmath> incorrectly re-defining isnan() into oblivion.
>    // It does leave a version in std.
> #  define ISNAN(x) (std::isnan(x))
> +# elif defined(__GNUC__) && (__GNUC__ > 3)
> +#  define ISNAN(x) (__builtin_isnan(x))
> # endif
> #endif
> 
> Index: include/geos/simplify/TaggedLineString.h
> ===================================================================
> --- include/geos/simplify/TaggedLineString.h	(revision 3266)
> +++ include/geos/simplify/TaggedLineString.h	(working copy)
> @@ -71,11 +71,11 @@
> 	typedef std::auto_ptr<geom::CoordinateSequence> CoordSeqPtr;
> 
> 	TaggedLineString(const geom::LineString* nParentLine,
> -			size_t minimumSize=2);
> +                         std::size_t minimumSize=2);
> 
> 	~TaggedLineString();
> 
> -	size_t getMinimumSize() const;
> +        std::size_t getMinimumSize() const;
> 
> 	const geom::LineString* getParent() const;
> 
> @@ -83,7 +83,7 @@
> 
> 	CoordSeqPtr getResultCoordinates() const;
> 
> -	size_t getResultSize() const;
> +        std::size_t getResultSize() const;
> 
> 	TaggedLineSegment* getSegment(std::size_t);
> 
> @@ -109,7 +109,7 @@
> 	// TaggedLineSegments owned by this object
> 	std::vector<TaggedLineSegment*> resultSegs;
> 
> -	size_t minimumSize;
> +        std::size_t minimumSize;
> 
> 	void init();
> 
> Index: include/geos/operation/valid/SimpleNestedRingTester.h
> ===================================================================
> --- include/geos/operation/valid/SimpleNestedRingTester.h	(revision 3266)
> +++ include/geos/operation/valid/SimpleNestedRingTester.h	(working copy)
> @@ -22,7 +22,7 @@
> #define GEOS_OP_SIMPLENESTEDRINGTESTER_H
> 
> #include <geos/export.h>
> -
> +#include <cstring>
> #include <vector>
> 
> #ifdef _MSC_VER

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20110307/f1345429/attachment.html
From geos-trac at osgeo.org  Fri Mar 11 09:25:21 2011
From: geos-trac at osgeo.org (GEOS)
Date: Fri Mar 11 09:25:23 2011
Subject: [geos-devel] Re: [GEOS] #398: PolygonBuilder::findShell assertion
 'shellcount <=
 1' failed [JTS works!] (was: PolygonBuilder::findShell assertion
 'shellcount <= 1' failed)
In-Reply-To: <044.5a6844bdf3075828c4ab99d38b6c22ea@osgeo.org>
References: <044.5a6844bdf3075828c4ab99d38b6c22ea@osgeo.org>
Message-ID: <053.170f2110bdca11d0803ed44205c370ef@osgeo.org>

#398: PolygonBuilder::findShell assertion 'shellcount <= 1' failed [JTS works!]
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:                            
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 r3269 adds an XML version of this test.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/398#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Fri Mar 11 09:41:39 2011
From: geos-trac at osgeo.org (GEOS)
Date: Fri Mar 11 09:41:42 2011
Subject: [geos-devel] Re: [GEOS] #350: TopologyException on operations on
 valid
 geometries [JTS works!] (was: TopologyException on operations on
 valid geometries)
In-Reply-To: <044.e263e78fce00b2617dfa712edd8ee2db@osgeo.org>
References: <044.e263e78fce00b2617dfa712edd8ee2db@osgeo.org>
Message-ID: <053.04d750f185c7b757c7717489f1f9d4b6@osgeo.org>

#350: TopologyException on operations on valid geometries [JTS works!]
------------------------+---------------------------------------------------
 Reporter:  yabo        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Confirmed. XML test added in r3270. JTS works.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/350#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Fri Mar 11 10:15:24 2011
From: geos-trac at osgeo.org (GEOS)
Date: Fri Mar 11 10:15:25 2011
Subject: [geos-devel] Re: [GEOS] #350: TopologyException on operations on
 valid geometries [JTS works!]
In-Reply-To: <044.e263e78fce00b2617dfa712edd8ee2db@osgeo.org>
References: <044.e263e78fce00b2617dfa712edd8ee2db@osgeo.org>
Message-ID: <053.a8e2575e217ed9657b43c686a1a83bba@osgeo.org>

#350: TopologyException on operations on valid geometries [JTS works!]
------------------------+---------------------------------------------------
 Reporter:  yabo        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 JTS, like GEOS, fails before engaging snaprounding:
 found non-noded intersection between LINESTRING ( -322378.6881546058
 830.7344192302965, -336712.0 -2708.0 ) and LINESTRING (
 -334393.81924198254 841.2944606413985, -332495.8798798799
 -1667.0870870870874 ) [ (-332495.8798798799, -1667.0870870870874, NaN) ]

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/350#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From mweiguo at gmail.com  Mon Mar 14 04:14:25 2011
From: mweiguo at gmail.com (mweiguo)
Date: Mon Mar 14 04:15:53 2011
Subject: [geos-devel] cross compile error
Message-ID: <4D7DCE61.9060205@gmail.com>

hi all:

i want to compile 32bit build on a 64bit system,
so i set enviroment CXXFLAGS to -m32
then
./configure
make

at linking stage, error message as follow.

make[1]: Entering directory `/home/wgmao/tmp/geos-3.1.0/source'
/bin/sh ../libtool --tag=CXX --mode=link g++ -m32 -DGEOS_INLINE -o
libgeos.la -rpath /home/wgmao/tmp/new/lib -release 3.\
1.0 -no-undefined inlines.lo algorithm/libalgorithm.la geom/libgeom.la
geomgraph/libgeomgraph.la index/libindex.la io/libio.\
la noding/libnoding.la operation/liboperation.la
planargraph/libplanargraph.la precision/libprecision.la simplify/libsimplif\
y.la util/libutil.la
g++ -shared -nostdlib
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/../../../../lib64/crti.o
/usr/lib/gcc/x86_64-redhat-linux/3.4.6\
/crtbeginS.o .libs/inlines.o -Wl,--whole-archive
algorithm/.libs/libalgorithm.a geom/.libs/libgeom.a geomgraph/.libs/libgeo\
mgraph.a index/.libs/libindex.a io/.libs/libio.a
noding/.libs/libnoding.a operation/.libs/liboperation.a planargraph/.libs/l\
ibplanargraph.a precision/.libs/libprecision.a
simplify/.libs/libsimplify.a util/.libs/libutil.a -Wl,--no-whole-archive
-L/\
usr/lib/gcc/x86_64-redhat-linux/3.4.6
-L/usr/lib/gcc/x86_64-redhat-linux/3.4.6/../../../../lib64
-L/usr/lib/gcc/x86_64-redha\
t-linux/3.4.6/../../.. -L/lib/../lib64 -L/usr/lib/../lib64 -lstdc++ -lm
-lc -lgcc_s /usr/lib/gcc/x86_64-redhat-linux/3.4.6/c\
rtendS.o /usr/lib/gcc/x86_64-redhat-linux/3.4.6/../../../../lib64/crtn.o
-m32 -Wl,-soname -Wl,libgeos-3.1.0.so -o .libs/lib\
geos-3.1.0.so
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/libstdc++_nonshared.a when
searching for -lstdc++_\
nonshared
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/libstdc++_shared.so when
searching for -lstdc++_sh\
ared
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/../../../../lib64/libm.so when
searching for -lm
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/../../../../lib64/libm.a when
searching for -lm
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/../../../../lib64/libc.so when
searching for -lc
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/../../../../lib64/libc.a when
searching for -lc
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/libgcc_s.so when searching for
-lgcc_s
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/libgcc_s.so when searching for
-lgcc_s
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-redhat-linux/3.4.6/libgcc_s.so when searching for
-lgcc_s
/usr/bin/ld: cannot find -lgcc_s
collect2: ld returned 1 exit status
make[1]: *** [libgeos.la] Error 1
make[1]: Leaving directory `/home/wgmao/tmp/geos-3.1.0/source'
make: *** [all-recursive] Error 1


thanks
From dbardhan at gmail.com  Tue Mar 15 07:16:25 2011
From: dbardhan at gmail.com (Debabrata Bardhan)
Date: Tue Mar 15 07:16:27 2011
Subject: [geos-devel] good to have visitor design pattern support
Message-ID: <AANLkTin_ZDWRdzBMdOx303m_pqA93HfCK5tphdAiYukk@mail.gmail.com>

I have found some future scope of enhancement of the library . Those are
like

1. It dosn't support Visitor design pattern

     All the classes like Polygon, Point, LineString etc all are derived
from Geometry class. If I need same operation based on different class then
I need to maintain switch cases based on GeometryTypeId.
     As per example: I want to implement a routine which will determine a
given point is moving toward or backward to those classes the my
Implementation will be

calcPosition(Geometry *g){

     switch (g->GeometryTypeId){

     Case  GEOS_POINT:
               funcForPoint(  point);          //point can be data member of
class
    Case  GEOS_LINESTRING:
               funcForPoint( point);
    Case  GEOS_POLYGON:
               funcForPoint(point);
     }
}


The implementation is c-style and poor in maintenance since if I need one
more class to include then the switch case will be required to adjust.

If there is support of visitor in the OM then the implementation would be


calcPosition( Geometry *g,){
       g->accept(myVisitor);
          //accept will be provided from OM. It should be implemented in
every class of OM
                                                          //implementation
of accept:  accept( VisitorBase &v){ v.visit(this)}
}

class myVisitor :: VisitorBase                 //VisitorBase will be provide
from OM
{

private:
          Point point;
public:

         visit (Polygon &p)
        {
          //point is also available;
        }
         visit (Point &p)
        {
          //point is also available;
        }
         visit (LineString &p)
        {
          //point is also available;
        }
};



2.  Derive class CoordinateArraySequence can not be used directly every time
the base class CoordinateSequence has to be used in the current situation.
Need the interface to use the derive class also.


Thanks & Regards,
Debabrata Bardhan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20110315/5782f6fb/attachment.html
From strk at keybit.net  Tue Mar 15 09:12:45 2011
From: strk at keybit.net (Sandro Santilli)
Date: Tue Mar 15 09:12:58 2011
Subject: [geos-devel] good to have visitor design pattern support
In-Reply-To: <AANLkTin_ZDWRdzBMdOx303m_pqA93HfCK5tphdAiYukk@mail.gmail.com>
References: <AANLkTin_ZDWRdzBMdOx303m_pqA93HfCK5tphdAiYukk@mail.gmail.com>
Message-ID: <20110315131245.GK25733@keybit.net>

On Tue, Mar 15, 2011 at 04:46:25PM +0530, Debabrata Bardhan wrote:
> I have found some future scope of enhancement of the library . 

Great. Feel free to send a patch to the tracker:
http://trac.osgeo.org/geos

Thanks.

--strk; 

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
From dbardhan at gmail.com  Thu Mar 17 07:49:18 2011
From: dbardhan at gmail.com (Debabrata Bardhan)
Date: Thu Mar 17 07:49:20 2011
Subject: [geos-devel] =?windows-1252?q?cannot_convert_=91geos=3A=3Ageom?=
	=?windows-1252?q?=3A=3ALineString*=92_to_=91geos=3A=3Ageom=3A=3AGe?=
	=?windows-1252?q?ometry*=92_in_assignment?=
Message-ID: <AANLkTi=n=oS+4EPB-Ja0BqSFPHF-55F8BpyaoRxQYo5=@mail.gmail.com>

Hello,

I have a class as  following . As i have notice Class LineString is derived
from Geometry Class but when I am trying assing LineSegment  object
reference to a Geometry pointer , I am getting an error like

*cannot convert ?geos::geom::LineString*? to ?geos::geom::Geometry*? in
assignment*

Can you please help me in this regard.

class Position : public SimplePointInAreaLocator  //SimplePointInAreaLocator
is class in algorithm/locator
{
private:
    Geometry *_geom;
public:

    Position(Geometry *g):SimplePointInAreaLocator(g),_geom(g)
    {}

    Position(LineSegment ls):SimplePointInAreaLocator(NULL),_geom(NULL){
        GeometryFactory *_factory;
        CoordinateSequence *cl = new CoordinateArraySequence();
        cl->add(ls.p0);
        cl->add(ls.p1);
        _geom = _factory->createLineString(cl);  //AT THIS LINE I AM GETTING
ERROR


    }
    void setGeometry(Geometry *g){_geom = g;}

    bool calculate(const Coordinate &p){
        return locate(p,_geom);
    }


};



Thanks & Regards,
Debabrata Bardhan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20110317/a306d2cd/attachment.html
From dbardhan at gmail.com  Mon Mar 21 03:14:30 2011
From: dbardhan at gmail.com (Debabrata Bardhan)
Date: Mon Mar 21 03:14:33 2011
Subject: [geos-devel] good to have visitor design pattern support
In-Reply-To: <20110315131245.GK25733@keybit.net>
References: <AANLkTin_ZDWRdzBMdOx303m_pqA93HfCK5tphdAiYukk@mail.gmail.com>
	<20110315131245.GK25733@keybit.net>
Message-ID: <AANLkTi=MPgw7SgGfYrfiKJwuY2wDQsHPut_C7=KoqDeU@mail.gmail.com>

Hi Sandro ,
how can i have any such pictorial diagram of complete GEOS class hierarchy
from which i can have clear view of the class hierarchy?

Regards
Debu

On Tue, Mar 15, 2011 at 6:42 PM, Sandro Santilli <strk@keybit.net> wrote:

> On Tue, Mar 15, 2011 at 04:46:25PM +0530, Debabrata Bardhan wrote:
> > I have found some future scope of enhancement of the library .
>
> Great. Feel free to send a patch to the tracker:
> http://trac.osgeo.org/geos
>
> Thanks.
>
> --strk;
>
>  ()   Free GIS & Flash consultant/developer
>  /\   http://strk.keybit.net/services.html
>



-- 

Thanks & Regards,
Debabrata Bardhan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20110321/58a2fa0e/attachment.html
From strk at keybit.net  Mon Mar 21 03:48:43 2011
From: strk at keybit.net (Sandro Santilli)
Date: Mon Mar 21 03:48:50 2011
Subject: [geos-devel] good to have visitor design pattern support
In-Reply-To: <AANLkTi=MPgw7SgGfYrfiKJwuY2wDQsHPut_C7=KoqDeU@mail.gmail.com>
References: <AANLkTin_ZDWRdzBMdOx303m_pqA93HfCK5tphdAiYukk@mail.gmail.com>
	<20110315131245.GK25733@keybit.net>
	<AANLkTi=MPgw7SgGfYrfiKJwuY2wDQsHPut_C7=KoqDeU@mail.gmail.com>
Message-ID: <20110321074843.GB47498@keybit.net>

On Mon, Mar 21, 2011 at 12:44:30PM +0530, Debabrata Bardhan wrote:
> Hi Sandro ,
> how can i have any such pictorial diagram of complete GEOS class hierarchy
> from which i can have clear view of the class hierarchy?

GEOS is a port of JTS, and tries to track it as close as possible.
Diagrams are in the doxygen-generated document (or should be).

$ make -C doc apidoc && links doc/doxygen_docs/html/index.html

Also search online for the JTS dox, as the design follows upstream.
BTW, JTS itself uses the visitor pattern for some ops (*Filter classes).

--strk; 

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
From strk at keybit.net  Mon Mar 21 03:50:17 2011
From: strk at keybit.net (Sandro Santilli)
Date: Mon Mar 21 03:50:24 2011
Subject: [geos-devel] cannot =?iso-8859-1?Q?con?=
	=?iso-8859-1?B?dmVydCCRZ2Vvczo6Z2VvbTo6TGluZVN0cmluZyqSIHRvIJFnZW9zOjpn?=
	=?iso-8859-1?B?ZW9tOjpHZW9tZXRyeSqS?= in assignment
In-Reply-To: <AANLkTi=n=oS+4EPB-Ja0BqSFPHF-55F8BpyaoRxQYo5=@mail.gmail.com>
References: <AANLkTi=n=oS+4EPB-Ja0BqSFPHF-55F8BpyaoRxQYo5=@mail.gmail.com>
Message-ID: <20110321075017.GC47498@keybit.net>

On Thu, Mar 17, 2011 at 05:19:18PM +0530, Debabrata Bardhan wrote:
> Hello,
> 
> I have a class as  following . As i have notice Class LineString is derived
> from Geometry Class but when I am trying assing LineSegment  object
> reference to a Geometry pointer , I am getting an error like
> 
> *cannot convert ?geos::geom::LineString*? to ?geos::geom::Geometry*? in
> assignment*
> 
> Can you please help me in this regard.

#include <geos/geom/LineString.h>

--strk; 

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
From dbardhan at gmail.com  Mon Mar 21 04:18:45 2011
From: dbardhan at gmail.com (Debabrata Bardhan)
Date: Mon Mar 21 04:18:47 2011
Subject: =?windows-1252?B?UmU6IFtnZW9zLWRldmVsXSBjYW5ub3QgY29udmVydCCRZ2Vvczo6Z2VvbTo6TGluZVM=?=
	=?windows-1252?B?dHJpbmcqkiB0byCRZ2Vvczo6Z2VvbTo6R2VvbWV0cnkqkiBpbiBhc3NpZ25tZW50?=
In-Reply-To: <20110321075017.GC47498@keybit.net>
References: <AANLkTi=n=oS+4EPB-Ja0BqSFPHF-55F8BpyaoRxQYo5=@mail.gmail.com>
	<20110321075017.GC47498@keybit.net>
Message-ID: <AANLkTimAs7-V74Zt1C5rrtSdTZQ7YWL7yHjfvNi-z+wO@mail.gmail.com>

Thanks I had a silly mistake.
On Mon, Mar 21, 2011 at 1:20 PM, Sandro Santilli <strk@keybit.net> wrote:

> On Thu, Mar 17, 2011 at 05:19:18PM +0530, Debabrata Bardhan wrote:
> > Hello,
> >
> > I have a class as  following . As i have notice Class LineString is
> derived
> > from Geometry Class but when I am trying assing LineSegment  object
> > reference to a Geometry pointer , I am getting an error like
> >
> > *cannot convert ?geos::geom::LineString*? to ?geos::geom::Geometry*? in
> > assignment*
> >
> > Can you please help me in this regard.
>
> #include <geos/geom/LineString.h>
>
> --strk;
>
>  ()   Free GIS & Flash consultant/developer
>  /\   http://strk.keybit.net/services.html
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>



-- 

Thanks & Regards,
Debabrata Bardhan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20110321/e0fcc173/attachment.html
From dbardhan at gmail.com  Mon Mar 21 08:48:38 2011
From: dbardhan at gmail.com (Debabrata Bardhan)
Date: Mon Mar 21 08:48:40 2011
Subject: [geos-devel] good to have visitor design pattern support
In-Reply-To: <20110321074843.GB47498@keybit.net>
References: <AANLkTin_ZDWRdzBMdOx303m_pqA93HfCK5tphdAiYukk@mail.gmail.com>
	<20110315131245.GK25733@keybit.net>
	<AANLkTi=MPgw7SgGfYrfiKJwuY2wDQsHPut_C7=KoqDeU@mail.gmail.com>
	<20110321074843.GB47498@keybit.net>
Message-ID: <AANLkTi=NBnM2z_Ekuymq27AVV0YobO+iY5MZKOrjZvCw@mail.gmail.com>

Thank for your input Sandro .  I have found some broken class diagram but i
cudnt find and such complete  class hierarchy diagram. Probably this task
should be go in todo list.


 On Mon, Mar 21, 2011 at 1:18 PM, Sandro Santilli <strk@keybit.net> wrote:

> On Mon, Mar 21, 2011 at 12:44:30PM +0530, Debabrata Bardhan wrote:
> > Hi Sandro ,
> > how can i have any such pictorial diagram of complete GEOS class
> hierarchy
> > from which i can have clear view of the class hierarchy?
>
> GEOS is a port of JTS, and tries to track it as close as possible.
> Diagrams are in the doxygen-generated document (or should be).
>
> $ make -C doc apidoc && links doc/doxygen_docs/html/index.html
>
> Also search online for the JTS dox, as the design follows upstream.
> BTW, JTS itself uses the visitor pattern for some ops (*Filter classes).
>
> --strk;
>
>  ()   Free GIS & Flash consultant/developer
>  /\   http://strk.keybit.net/services.html
>



-- 

Thanks & Regards,
Debabrata Bardhan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20110321/5fa14fd7/attachment.html
From geos-trac at osgeo.org  Mon Mar 21 10:59:11 2011
From: geos-trac at osgeo.org (GEOS)
Date: Mon Mar 21 10:59:14 2011
Subject: [geos-devel] [GEOS] #401: LineMerger fails to extract linework from
	collection
Message-ID: <044.e63b6340736a8360cc8a146c9615157f@osgeo.org>

#401: LineMerger fails to extract linework from collection
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 This input:
 {{{
 GEOMETRYCOLLECTION(
    MULTILINESTRING(
     (1656318.45 4833344.45,1656321.79 4833339.62,1656312.54 4833333.49),
     (1656312.54 4833333.49,1656309.68 4833337.07)
    ),
    LINESTRING(1656309.68 4833337.07,1656318.45 4833344.45)
 )
 }}}

 Fed to LineMerger, result in only the last linestring being present in
 output.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/401>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From strk at keybit.net  Mon Mar 21 11:41:08 2011
From: strk at keybit.net (Sandro Santilli)
Date: Mon Mar 21 11:41:11 2011
Subject: [geos-devel] good to have visitor design pattern support
In-Reply-To: <AANLkTi=NBnM2z_Ekuymq27AVV0YobO+iY5MZKOrjZvCw@mail.gmail.com>
References: <AANLkTin_ZDWRdzBMdOx303m_pqA93HfCK5tphdAiYukk@mail.gmail.com>
	<20110315131245.GK25733@keybit.net>
	<AANLkTi=MPgw7SgGfYrfiKJwuY2wDQsHPut_C7=KoqDeU@mail.gmail.com>
	<20110321074843.GB47498@keybit.net>
	<AANLkTi=NBnM2z_Ekuymq27AVV0YobO+iY5MZKOrjZvCw@mail.gmail.com>
Message-ID: <20110321154108.GE55299@keybit.net>

On Mon, Mar 21, 2011 at 06:18:38PM +0530, Debabrata Bardhan wrote:
> Thank for your input Sandro .  I have found some broken class diagram but i
> cudnt find and such complete  class hierarchy diagram. Probably this task
> should be go in todo list.

Patches to fix doxygen warnings are welcome too.
See stderr of 'make apidoc' to find some.

--strk;

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
From mabrand at mabrand.nl  Sat Mar 26 08:54:40 2011
From: mabrand at mabrand.nl (mabrand@mabrand.nl)
Date: Sat Mar 26 08:54:47 2011
Subject: [geos-devel] [PATCH 1/3] fix uninitialized const caused by missing
	constructor
Message-ID: <1301144082-15610-1-git-send-email-mabrand@mabrand.nl>

From: Mark Brand <mabrand@mabrand.nl>

---
 .../geos/operation/overlay/OverlayNodeFactory.h    |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/include/geos/operation/overlay/OverlayNodeFactory.h b/include/geos/operation/overlay/OverlayNodeFactory.h
index 508863b..12c6bca 100644
--- a/include/geos/operation/overlay/OverlayNodeFactory.h
+++ b/include/geos/operation/overlay/OverlayNodeFactory.h
@@ -46,6 +46,7 @@ namespace overlay { // geos::operation::overlay
  */
 class GEOS_DLL OverlayNodeFactory: public geomgraph::NodeFactory {
 public:
+	OverlayNodeFactory():geomgraph::NodeFactory() {}
 	geomgraph::Node* createNode(const geom::Coordinate &coord) const;
 	static const geomgraph::NodeFactory &instance();
 };
-- 
1.7.4.1

From mabrand at mabrand.nl  Sat Mar 26 08:54:41 2011
From: mabrand at mabrand.nl (mabrand@mabrand.nl)
Date: Sat Mar 26 08:54:48 2011
Subject: [geos-devel] [PATCH 2/3] fixed missing NULL with gcc 4.6
In-Reply-To: <1301144082-15610-1-git-send-email-mabrand@mabrand.nl>
References: <1301144082-15610-1-git-send-email-mabrand@mabrand.nl>
Message-ID: <1301144082-15610-2-git-send-email-mabrand@mabrand.nl>

From: Mark Brand <mabrand@mabrand.nl>

---
 include/geos/index/chain/MonotoneChainBuilder.h    |    1 +
 .../geos/operation/valid/SimpleNestedRingTester.h  |    1 +
 src/index/bintree/Bintree.cpp                      |    1 +
 src/index/bintree/Node.cpp                         |    1 +
 src/index/bintree/Root.cpp                         |    1 +
 src/index/strtree/AbstractNode.cpp                 |    1 +
 6 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/include/geos/index/chain/MonotoneChainBuilder.h b/include/geos/index/chain/MonotoneChainBuilder.h
index ce1af3e..1b8e6ed 100644
--- a/include/geos/index/chain/MonotoneChainBuilder.h
+++ b/include/geos/index/chain/MonotoneChainBuilder.h
@@ -22,6 +22,7 @@
 
 #include <geos/export.h>
 #include <vector>
+#include <cstddef>
 
 // Forward declarations
 namespace geos {
diff --git a/include/geos/operation/valid/SimpleNestedRingTester.h b/include/geos/operation/valid/SimpleNestedRingTester.h
index 986f840..3f5dd5f 100644
--- a/include/geos/operation/valid/SimpleNestedRingTester.h
+++ b/include/geos/operation/valid/SimpleNestedRingTester.h
@@ -23,6 +23,7 @@
 
 #include <geos/export.h>
 
+#include <cstddef>
 #include <vector>
 
 #ifdef _MSC_VER
diff --git a/src/index/bintree/Bintree.cpp b/src/index/bintree/Bintree.cpp
index 5689c23..e9462d6 100644
--- a/src/index/bintree/Bintree.cpp
+++ b/src/index/bintree/Bintree.cpp
@@ -14,6 +14,7 @@
  *
  **********************************************************************/
 
+#include <cstddef>
 #include <geos/index/bintree/Bintree.h>
 #include <geos/index/bintree/Root.h>
 #include <geos/index/bintree/Interval.h>
diff --git a/src/index/bintree/Node.cpp b/src/index/bintree/Node.cpp
index 55102ff..031df0b 100644
--- a/src/index/bintree/Node.cpp
+++ b/src/index/bintree/Node.cpp
@@ -14,6 +14,7 @@
  *
  **********************************************************************/
 
+#include <cstddef>
 #include <cassert>
 
 #include <geos/index/bintree/Node.h>
diff --git a/src/index/bintree/Root.cpp b/src/index/bintree/Root.cpp
index 11a9443..4f21a51 100644
--- a/src/index/bintree/Root.cpp
+++ b/src/index/bintree/Root.cpp
@@ -19,6 +19,7 @@
 #include <geos/index/bintree/Interval.h>
 #include <geos/index/quadtree/IntervalSize.h>
 
+#include <cstddef>
 #include <cassert>
 
 namespace geos {
diff --git a/src/index/strtree/AbstractNode.cpp b/src/index/strtree/AbstractNode.cpp
index 96ff1ff..a50fa0a 100644
--- a/src/index/strtree/AbstractNode.cpp
+++ b/src/index/strtree/AbstractNode.cpp
@@ -17,6 +17,7 @@
 #include <geos/index/strtree/AbstractNode.h>
 
 #include <vector>
+#include <cstddef>
 #include <cassert>
 
 using namespace std;
-- 
1.7.4.1

From mabrand at mabrand.nl  Sat Mar 26 08:54:42 2011
From: mabrand at mabrand.nl (mabrand@mabrand.nl)
Date: Sat Mar 26 08:54:50 2011
Subject: [geos-devel] [PATCH 3/3] fix missing size_t with gcc 4.6
In-Reply-To: <1301144082-15610-1-git-send-email-mabrand@mabrand.nl>
References: <1301144082-15610-1-git-send-email-mabrand@mabrand.nl>
Message-ID: <1301144082-15610-3-git-send-email-mabrand@mabrand.nl>

From: Mark Brand <mabrand@mabrand.nl>

---
 include/geos/simplify/TaggedLineString.h      |   12 ++++----
 src/index/chain/MonotoneChainBuilder.cpp      |   26 +++++++++---------
 src/simplify/DouglasPeuckerLineSimplifier.cpp |   12 ++++----
 src/simplify/TaggedLineString.cpp             |   18 ++++++------
 src/simplify/TaggedLineStringSimplifier.cpp   |   34 ++++++++++++------------
 5 files changed, 51 insertions(+), 51 deletions(-)

diff --git a/include/geos/simplify/TaggedLineString.h b/include/geos/simplify/TaggedLineString.h
index 41f7de7..451119a 100644
--- a/include/geos/simplify/TaggedLineString.h
+++ b/include/geos/simplify/TaggedLineString.h
@@ -71,11 +71,11 @@ public:
 	typedef std::auto_ptr<geom::CoordinateSequence> CoordSeqPtr;
 
 	TaggedLineString(const geom::LineString* nParentLine,
-			size_t minimumSize=2);
+			std::size_t minimumSize=2);
 
 	~TaggedLineString();
 
-	size_t getMinimumSize() const;
+	std::size_t getMinimumSize() const;
 
 	const geom::LineString* getParent() const;
 
@@ -83,11 +83,11 @@ public:
 
 	CoordSeqPtr getResultCoordinates() const;
 
-	size_t getResultSize() const;
+	std::size_t getResultSize() const;
 
-	TaggedLineSegment* getSegment(std::size_t);
+	TaggedLineSegment* getSegment(std::size_t i);
 
-	const TaggedLineSegment* getSegment(std::size_t) const;
+	const TaggedLineSegment* getSegment(std::size_t i) const;
 
 	std::vector<TaggedLineSegment*>& getSegments();
 
@@ -109,7 +109,7 @@ private:
 	// TaggedLineSegments owned by this object
 	std::vector<TaggedLineSegment*> resultSegs;
 
-	size_t minimumSize;
+	std::size_t minimumSize;
 
 	void init();
 
diff --git a/src/index/chain/MonotoneChainBuilder.cpp b/src/index/chain/MonotoneChainBuilder.cpp
index 599ff70..cd2d34c 100644
--- a/src/index/chain/MonotoneChainBuilder.cpp
+++ b/src/index/chain/MonotoneChainBuilder.cpp
@@ -56,13 +56,13 @@ void
 MonotoneChainBuilder::getChains(const CoordinateSequence* pts, void* context,
                                 vector<MonotoneChain*>& mcList)
 {
-	vector<size_t> startIndex;
+	vector<std::size_t> startIndex;
 	getChainStartIndices(*pts, startIndex);
-	size_t nindexes = startIndex.size();
+	std::size_t nindexes = startIndex.size();
 	if (nindexes > 0)
 	{
-		size_t n = nindexes - 1;
-		for(size_t i = 0; i < n; i++)
+		std::size_t n = nindexes - 1;
+		for(std::size_t i = 0; i < n; i++)
 		{
 			MonotoneChain* mc = new MonotoneChain(*pts, startIndex[i], startIndex[i+1], context);
 			mcList.push_back(mc);
@@ -73,16 +73,16 @@ MonotoneChainBuilder::getChains(const CoordinateSequence* pts, void* context,
 /* static public */
 void
 MonotoneChainBuilder::getChainStartIndices(const CoordinateSequence& pts,
-                                           vector<size_t>& startIndexList)
+                                           vector<std::size_t>& startIndexList)
 {
 	// find the startpoint (and endpoints) of all monotone chains
 	// in this edge
-	size_t start = 0;
+	std::size_t start = 0;
 	startIndexList.push_back(start);
-	const size_t n = pts.getSize() - 1;
+	const std::size_t n = pts.getSize() - 1;
 	do
 	{
-		size_t last = findChainEnd(pts, start);
+		std::size_t last = findChainEnd(pts, start);
 		startIndexList.push_back(last);
 		start = last;
 	} while (start < n);
@@ -90,17 +90,17 @@ MonotoneChainBuilder::getChainStartIndices(const CoordinateSequence& pts,
 }
 
 /* private static */
-size_t
-MonotoneChainBuilder::findChainEnd(const CoordinateSequence& pts, size_t start)
+std::size_t
+MonotoneChainBuilder::findChainEnd(const CoordinateSequence& pts, std::size_t start)
 {
 
-	const size_t npts = pts.getSize(); // cache
+	const std::size_t npts = pts.getSize(); // cache
 
 	assert(start < npts);
 	assert(npts); // should be implied by the assertion above,
 	              // 'start' being unsigned
 
-	size_t safeStart = start;
+	std::size_t safeStart = start;
 
         // skip any zero-length segments at the start of the sequence
         // (since they cannot be used to establish a quadrant)
@@ -119,7 +119,7 @@ MonotoneChainBuilder::findChainEnd(const CoordinateSequence& pts, size_t start)
 	// (which is the starting quadrant)
 	int chainQuad = Quadrant::quadrant(pts[safeStart],
 	                                   pts[safeStart + 1]);
-	size_t last = start + 1;
+	std::size_t last = start + 1;
 	while (last < npts)
 	{
 		// skip zero-length segments, but include them in the chain
diff --git a/src/simplify/DouglasPeuckerLineSimplifier.cpp b/src/simplify/DouglasPeuckerLineSimplifier.cpp
index fa1469e..7c51dda 100644
--- a/src/simplify/DouglasPeuckerLineSimplifier.cpp
+++ b/src/simplify/DouglasPeuckerLineSimplifier.cpp
@@ -68,7 +68,7 @@ DouglasPeuckerLineSimplifier::simplify()
 	usePt = BoolVectAutoPtr(new BoolVect(pts.size(), true));
 	simplifySection(0, pts.size() - 1);
 
-	for (size_t i=0, n=pts.size(); i<n; ++i)
+	for (std::size_t i=0, n=pts.size(); i<n; ++i)
 	{
 		if ( usePt->operator[](i) )
 		{
@@ -84,17 +84,17 @@ DouglasPeuckerLineSimplifier::simplify()
 /*private*/
 void
 DouglasPeuckerLineSimplifier::simplifySection(
-		size_t i,
-		size_t j)
+		std::size_t i,
+		std::size_t j)
 {
 	if ( (i+1) == j ) return;
 
 	geos::geom::LineSegment seg(pts[i], pts[j]);
 	double maxDistance = -1.0;
 
-	size_t maxIndex = i;
+	std::size_t maxIndex = i;
 
-	for (size_t k=i+1; k<j; k++)
+	for (std::size_t k=i+1; k<j; k++)
 	{
 		double distance = seg.distance(pts[k]);
 		if (distance > maxDistance) {
@@ -103,7 +103,7 @@ DouglasPeuckerLineSimplifier::simplifySection(
 		}
 	}
 	if (maxDistance <= distanceTolerance) {
-		for(size_t k =i+1; k<j; k++)
+		for(std::size_t k =i+1; k<j; k++)
 		{
 			usePt->operator[](k) = false;
 		}
diff --git a/src/simplify/TaggedLineString.cpp b/src/simplify/TaggedLineString.cpp
index 4ee7dc5..98e07b8 100644
--- a/src/simplify/TaggedLineString.cpp
+++ b/src/simplify/TaggedLineString.cpp
@@ -44,7 +44,7 @@ namespace simplify { // geos::simplify
 
 /*public*/
 TaggedLineString::TaggedLineString(const geom::LineString* nParentLine,
-			size_t nMinimumSize)
+			std::size_t nMinimumSize)
 	:
 	parentLine(nParentLine),
 	minimumSize(nMinimumSize)
@@ -60,10 +60,10 @@ TaggedLineString::~TaggedLineString()
 	     << endl;
 #endif
 
-	for (size_t i=0, n=segs.size(); i<n; i++)
+	for (std::size_t i=0, n=segs.size(); i<n; i++)
 		delete segs[i];
 
-	for (size_t i=0, n=resultSegs.size(); i<n; i++)
+	for (std::size_t i=0, n=resultSegs.size(); i<n; i++)
 		delete resultSegs[i];
 }
 
@@ -81,7 +81,7 @@ TaggedLineString::init()
 
 	segs.reserve(pts->size()-1);
 
-	for (size_t i=0, n=pts->size()-1; i<n; i++)
+	for (std::size_t i=0, n=pts->size()-1; i<n; i++)
 	{
 		TaggedLineSegment* seg = new TaggedLineSegment(
 				pts->getAt(i),
@@ -100,7 +100,7 @@ TaggedLineString::init()
 }
 
 /*public*/
-size_t
+std::size_t
 TaggedLineString::getMinimumSize() const
 {
 	return minimumSize;
@@ -155,7 +155,7 @@ TaggedLineString::extractCoordinates(
 	cerr << __FUNCTION__ << " segs.size: " << segs.size() << endl;
 #endif
 
-	size_t i=0, size=segs.size();
+	std::size_t i=0, size=segs.size();
 
 	assert(size);
 
@@ -173,7 +173,7 @@ TaggedLineString::extractCoordinates(
 }
 
 /*public*/
-size_t
+std::size_t
 TaggedLineString::getResultSize() const
 {
 	unsigned resultSegsSize = resultSegs.size();
@@ -182,14 +182,14 @@ TaggedLineString::getResultSize() const
 
 /*public*/
 TaggedLineSegment*
-TaggedLineString::getSegment(size_t i) 
+TaggedLineString::getSegment(std::size_t i) 
 {
 	return segs[i];
 }
 
 /*public*/
 const TaggedLineSegment*
-TaggedLineString::getSegment(size_t i) const
+TaggedLineString::getSegment(std::size_t i) const
 {
 	return segs[i];
 }
diff --git a/src/simplify/TaggedLineStringSimplifier.cpp b/src/simplify/TaggedLineStringSimplifier.cpp
index 904bbd1..1b4b977 100644
--- a/src/simplify/TaggedLineStringSimplifier.cpp
+++ b/src/simplify/TaggedLineStringSimplifier.cpp
@@ -83,8 +83,8 @@ TaggedLineStringSimplifier::simplify(TaggedLineString* nLine)
 
 /*private*/
 void
-TaggedLineStringSimplifier::simplifySection(size_t i,
-		size_t j, size_t depth)
+TaggedLineStringSimplifier::simplifySection(std::size_t i,
+		std::size_t j, std::size_t depth)
 {
 	depth += 1;
 
@@ -94,7 +94,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
 	          << std::endl;
 #endif
 
-	vector<size_t> sectionIndex(2);
+	vector<std::size_t> sectionIndex(2);
 
 	if((i+1) == j)
 	{
@@ -124,7 +124,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
 	 */
 	if (line->getResultSize() < line->getMinimumSize())
 	{
-		size_t worstCaseSize = depth + 1;
+		std::size_t worstCaseSize = depth + 1;
 		if (worstCaseSize < line->getMinimumSize())
 			isValidToSimplify = false;
 	}
@@ -132,7 +132,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
 	double distance;
 
 	// pass distance by ref
-	size_t furthestPtIndex = findFurthestPoint(linePts, i, j, distance);
+	std::size_t furthestPtIndex = findFurthestPoint(linePts, i, j, distance);
 
 #if GEOS_DEBUG
 	std::cerr << "furthest point " << furthestPtIndex 
@@ -176,7 +176,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
 
 /*private*/
 auto_ptr<TaggedLineSegment>
-TaggedLineStringSimplifier::flatten(size_t start, size_t end)
+TaggedLineStringSimplifier::flatten(std::size_t start, std::size_t end)
 {
 	// make a new segment for the simplified geometry
 	const Coordinate& p0 = linePts->getAt(start);
@@ -192,7 +192,7 @@ TaggedLineStringSimplifier::flatten(size_t start, size_t end)
 bool
 TaggedLineStringSimplifier::hasBadIntersection(
 		const TaggedLineString* parentLine,
-		const vector<size_t>& sectionIndex,
+		const vector<std::size_t>& sectionIndex,
 		const LineSegment& candidateSeg)
 {
 	if (hasBadOutputIntersection(candidateSeg))
@@ -242,7 +242,7 @@ TaggedLineStringSimplifier::hasInteriorIntersection(
 bool
 TaggedLineStringSimplifier::hasBadInputIntersection(
 		const TaggedLineString* parentLine,
-		const vector<size_t>& sectionIndex,
+		const vector<std::size_t>& sectionIndex,
 		const LineSegment& candidateSeg)
 {
 	auto_ptr< vector<LineSegment*> > querySegs =
@@ -278,14 +278,14 @@ TaggedLineStringSimplifier::hasBadInputIntersection(
 bool
 TaggedLineStringSimplifier::isInLineSection(
 		const TaggedLineString* line,
-		const vector<size_t>& sectionIndex,
+		const vector<std::size_t>& sectionIndex,
 		const TaggedLineSegment* seg)
 {
 	// not in this line
 	if (seg->getParent() != line->getParent())
 		return false;
 
-	size_t segIndex = seg->getIndex();
+	std::size_t segIndex = seg->getIndex();
 	if (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1])
 		return true;
 
@@ -295,13 +295,13 @@ TaggedLineStringSimplifier::isInLineSection(
 /*private*/
 void
 TaggedLineStringSimplifier::remove(const TaggedLineString* line,
-		size_t start,
-		size_t end)
+		std::size_t start,
+		std::size_t end)
 {
 	assert(end <= line->getSegments().size() );
 	assert(start < end); // I'm not sure this should always be true
 
-	for (size_t i = start; i < end; i++)
+	for (std::size_t i = start; i < end; i++)
 	{
 		const TaggedLineSegment* seg = line->getSegment(i);
 		inputIndex->remove(seg);
@@ -309,10 +309,10 @@ TaggedLineStringSimplifier::remove(const TaggedLineString* line,
 }
 
 /*private static*/
-size_t
+std::size_t
 TaggedLineStringSimplifier::findFurthestPoint(
 		const geom::CoordinateSequence* pts,
-		size_t i, size_t j,
+		std::size_t i, std::size_t j,
 		double& maxDistance)
 {
 	LineSegment seg(pts->getAt(i), pts->getAt(j));
@@ -321,8 +321,8 @@ TaggedLineStringSimplifier::findFurthestPoint(
 	          << std::endl;
 #endif
 	double maxDist = -1.0;
-	size_t maxIndex = i;
-	for (size_t k = i + 1; k < j; k++)
+	std::size_t maxIndex = i;
+	for (std::size_t k = i + 1; k < j; k++)
 	{
 		const Coordinate& midPt = pts->getAt(k);
 		double distance = seg.distance(midPt);
-- 
1.7.4.1

From strk at keybit.net  Sat Mar 26 10:29:21 2011
From: strk at keybit.net (Sandro Santilli)
Date: Sat Mar 26 10:29:32 2011
Subject: [geos-devel] [PATCH 3/3] fix missing size_t with gcc 4.6
In-Reply-To: <1301144082-15610-3-git-send-email-mabrand@mabrand.nl>
References: <1301144082-15610-1-git-send-email-mabrand@mabrand.nl>
	<1301144082-15610-3-git-send-email-mabrand@mabrand.nl>
Message-ID: <20110326142920.GK20088@keybit.net>

Commited all of them.
Extremely easy with git-am.
Too bad I felt soo comfortable that I pushed before
committing to svn, which forced me to re-import from
scratch on github :/

--strk;

On Sat, Mar 26, 2011 at 01:54:42PM +0100, mabrand@mabrand.nl wrote:
> From: Mark Brand <mabrand@mabrand.nl>
> 
> ---
>  include/geos/simplify/TaggedLineString.h      |   12 ++++----
>  src/index/chain/MonotoneChainBuilder.cpp      |   26 +++++++++---------
>  src/simplify/DouglasPeuckerLineSimplifier.cpp |   12 ++++----
>  src/simplify/TaggedLineString.cpp             |   18 ++++++------
>  src/simplify/TaggedLineStringSimplifier.cpp   |   34 ++++++++++++------------
>  5 files changed, 51 insertions(+), 51 deletions(-)
> 
> diff --git a/include/geos/simplify/TaggedLineString.h b/include/geos/simplify/TaggedLineString.h
> index 41f7de7..451119a 100644
> --- a/include/geos/simplify/TaggedLineString.h
> +++ b/include/geos/simplify/TaggedLineString.h
> @@ -71,11 +71,11 @@ public:
>  	typedef std::auto_ptr<geom::CoordinateSequence> CoordSeqPtr;
>  
>  	TaggedLineString(const geom::LineString* nParentLine,
> -			size_t minimumSize=2);
> +			std::size_t minimumSize=2);
>  
>  	~TaggedLineString();
>  
> -	size_t getMinimumSize() const;
> +	std::size_t getMinimumSize() const;
>  
>  	const geom::LineString* getParent() const;
>  
> @@ -83,11 +83,11 @@ public:
>  
>  	CoordSeqPtr getResultCoordinates() const;
>  
> -	size_t getResultSize() const;
> +	std::size_t getResultSize() const;
>  
> -	TaggedLineSegment* getSegment(std::size_t);
> +	TaggedLineSegment* getSegment(std::size_t i);
>  
> -	const TaggedLineSegment* getSegment(std::size_t) const;
> +	const TaggedLineSegment* getSegment(std::size_t i) const;
>  
>  	std::vector<TaggedLineSegment*>& getSegments();
>  
> @@ -109,7 +109,7 @@ private:
>  	// TaggedLineSegments owned by this object
>  	std::vector<TaggedLineSegment*> resultSegs;
>  
> -	size_t minimumSize;
> +	std::size_t minimumSize;
>  
>  	void init();
>  
> diff --git a/src/index/chain/MonotoneChainBuilder.cpp b/src/index/chain/MonotoneChainBuilder.cpp
> index 599ff70..cd2d34c 100644
> --- a/src/index/chain/MonotoneChainBuilder.cpp
> +++ b/src/index/chain/MonotoneChainBuilder.cpp
> @@ -56,13 +56,13 @@ void
>  MonotoneChainBuilder::getChains(const CoordinateSequence* pts, void* context,
>                                  vector<MonotoneChain*>& mcList)
>  {
> -	vector<size_t> startIndex;
> +	vector<std::size_t> startIndex;
>  	getChainStartIndices(*pts, startIndex);
> -	size_t nindexes = startIndex.size();
> +	std::size_t nindexes = startIndex.size();
>  	if (nindexes > 0)
>  	{
> -		size_t n = nindexes - 1;
> -		for(size_t i = 0; i < n; i++)
> +		std::size_t n = nindexes - 1;
> +		for(std::size_t i = 0; i < n; i++)
>  		{
>  			MonotoneChain* mc = new MonotoneChain(*pts, startIndex[i], startIndex[i+1], context);
>  			mcList.push_back(mc);
> @@ -73,16 +73,16 @@ MonotoneChainBuilder::getChains(const CoordinateSequence* pts, void* context,
>  /* static public */
>  void
>  MonotoneChainBuilder::getChainStartIndices(const CoordinateSequence& pts,
> -                                           vector<size_t>& startIndexList)
> +                                           vector<std::size_t>& startIndexList)
>  {
>  	// find the startpoint (and endpoints) of all monotone chains
>  	// in this edge
> -	size_t start = 0;
> +	std::size_t start = 0;
>  	startIndexList.push_back(start);
> -	const size_t n = pts.getSize() - 1;
> +	const std::size_t n = pts.getSize() - 1;
>  	do
>  	{
> -		size_t last = findChainEnd(pts, start);
> +		std::size_t last = findChainEnd(pts, start);
>  		startIndexList.push_back(last);
>  		start = last;
>  	} while (start < n);
> @@ -90,17 +90,17 @@ MonotoneChainBuilder::getChainStartIndices(const CoordinateSequence& pts,
>  }
>  
>  /* private static */
> -size_t
> -MonotoneChainBuilder::findChainEnd(const CoordinateSequence& pts, size_t start)
> +std::size_t
> +MonotoneChainBuilder::findChainEnd(const CoordinateSequence& pts, std::size_t start)
>  {
>  
> -	const size_t npts = pts.getSize(); // cache
> +	const std::size_t npts = pts.getSize(); // cache
>  
>  	assert(start < npts);
>  	assert(npts); // should be implied by the assertion above,
>  	              // 'start' being unsigned
>  
> -	size_t safeStart = start;
> +	std::size_t safeStart = start;
>  
>          // skip any zero-length segments at the start of the sequence
>          // (since they cannot be used to establish a quadrant)
> @@ -119,7 +119,7 @@ MonotoneChainBuilder::findChainEnd(const CoordinateSequence& pts, size_t start)
>  	// (which is the starting quadrant)
>  	int chainQuad = Quadrant::quadrant(pts[safeStart],
>  	                                   pts[safeStart + 1]);
> -	size_t last = start + 1;
> +	std::size_t last = start + 1;
>  	while (last < npts)
>  	{
>  		// skip zero-length segments, but include them in the chain
> diff --git a/src/simplify/DouglasPeuckerLineSimplifier.cpp b/src/simplify/DouglasPeuckerLineSimplifier.cpp
> index fa1469e..7c51dda 100644
> --- a/src/simplify/DouglasPeuckerLineSimplifier.cpp
> +++ b/src/simplify/DouglasPeuckerLineSimplifier.cpp
> @@ -68,7 +68,7 @@ DouglasPeuckerLineSimplifier::simplify()
>  	usePt = BoolVectAutoPtr(new BoolVect(pts.size(), true));
>  	simplifySection(0, pts.size() - 1);
>  
> -	for (size_t i=0, n=pts.size(); i<n; ++i)
> +	for (std::size_t i=0, n=pts.size(); i<n; ++i)
>  	{
>  		if ( usePt->operator[](i) )
>  		{
> @@ -84,17 +84,17 @@ DouglasPeuckerLineSimplifier::simplify()
>  /*private*/
>  void
>  DouglasPeuckerLineSimplifier::simplifySection(
> -		size_t i,
> -		size_t j)
> +		std::size_t i,
> +		std::size_t j)
>  {
>  	if ( (i+1) == j ) return;
>  
>  	geos::geom::LineSegment seg(pts[i], pts[j]);
>  	double maxDistance = -1.0;
>  
> -	size_t maxIndex = i;
> +	std::size_t maxIndex = i;
>  
> -	for (size_t k=i+1; k<j; k++)
> +	for (std::size_t k=i+1; k<j; k++)
>  	{
>  		double distance = seg.distance(pts[k]);
>  		if (distance > maxDistance) {
> @@ -103,7 +103,7 @@ DouglasPeuckerLineSimplifier::simplifySection(
>  		}
>  	}
>  	if (maxDistance <= distanceTolerance) {
> -		for(size_t k =i+1; k<j; k++)
> +		for(std::size_t k =i+1; k<j; k++)
>  		{
>  			usePt->operator[](k) = false;
>  		}
> diff --git a/src/simplify/TaggedLineString.cpp b/src/simplify/TaggedLineString.cpp
> index 4ee7dc5..98e07b8 100644
> --- a/src/simplify/TaggedLineString.cpp
> +++ b/src/simplify/TaggedLineString.cpp
> @@ -44,7 +44,7 @@ namespace simplify { // geos::simplify
>  
>  /*public*/
>  TaggedLineString::TaggedLineString(const geom::LineString* nParentLine,
> -			size_t nMinimumSize)
> +			std::size_t nMinimumSize)
>  	:
>  	parentLine(nParentLine),
>  	minimumSize(nMinimumSize)
> @@ -60,10 +60,10 @@ TaggedLineString::~TaggedLineString()
>  	     << endl;
>  #endif
>  
> -	for (size_t i=0, n=segs.size(); i<n; i++)
> +	for (std::size_t i=0, n=segs.size(); i<n; i++)
>  		delete segs[i];
>  
> -	for (size_t i=0, n=resultSegs.size(); i<n; i++)
> +	for (std::size_t i=0, n=resultSegs.size(); i<n; i++)
>  		delete resultSegs[i];
>  }
>  
> @@ -81,7 +81,7 @@ TaggedLineString::init()
>  
>  	segs.reserve(pts->size()-1);
>  
> -	for (size_t i=0, n=pts->size()-1; i<n; i++)
> +	for (std::size_t i=0, n=pts->size()-1; i<n; i++)
>  	{
>  		TaggedLineSegment* seg = new TaggedLineSegment(
>  				pts->getAt(i),
> @@ -100,7 +100,7 @@ TaggedLineString::init()
>  }
>  
>  /*public*/
> -size_t
> +std::size_t
>  TaggedLineString::getMinimumSize() const
>  {
>  	return minimumSize;
> @@ -155,7 +155,7 @@ TaggedLineString::extractCoordinates(
>  	cerr << __FUNCTION__ << " segs.size: " << segs.size() << endl;
>  #endif
>  
> -	size_t i=0, size=segs.size();
> +	std::size_t i=0, size=segs.size();
>  
>  	assert(size);
>  
> @@ -173,7 +173,7 @@ TaggedLineString::extractCoordinates(
>  }
>  
>  /*public*/
> -size_t
> +std::size_t
>  TaggedLineString::getResultSize() const
>  {
>  	unsigned resultSegsSize = resultSegs.size();
> @@ -182,14 +182,14 @@ TaggedLineString::getResultSize() const
>  
>  /*public*/
>  TaggedLineSegment*
> -TaggedLineString::getSegment(size_t i) 
> +TaggedLineString::getSegment(std::size_t i) 
>  {
>  	return segs[i];
>  }
>  
>  /*public*/
>  const TaggedLineSegment*
> -TaggedLineString::getSegment(size_t i) const
> +TaggedLineString::getSegment(std::size_t i) const
>  {
>  	return segs[i];
>  }
> diff --git a/src/simplify/TaggedLineStringSimplifier.cpp b/src/simplify/TaggedLineStringSimplifier.cpp
> index 904bbd1..1b4b977 100644
> --- a/src/simplify/TaggedLineStringSimplifier.cpp
> +++ b/src/simplify/TaggedLineStringSimplifier.cpp
> @@ -83,8 +83,8 @@ TaggedLineStringSimplifier::simplify(TaggedLineString* nLine)
>  
>  /*private*/
>  void
> -TaggedLineStringSimplifier::simplifySection(size_t i,
> -		size_t j, size_t depth)
> +TaggedLineStringSimplifier::simplifySection(std::size_t i,
> +		std::size_t j, std::size_t depth)
>  {
>  	depth += 1;
>  
> @@ -94,7 +94,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
>  	          << std::endl;
>  #endif
>  
> -	vector<size_t> sectionIndex(2);
> +	vector<std::size_t> sectionIndex(2);
>  
>  	if((i+1) == j)
>  	{
> @@ -124,7 +124,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
>  	 */
>  	if (line->getResultSize() < line->getMinimumSize())
>  	{
> -		size_t worstCaseSize = depth + 1;
> +		std::size_t worstCaseSize = depth + 1;
>  		if (worstCaseSize < line->getMinimumSize())
>  			isValidToSimplify = false;
>  	}
> @@ -132,7 +132,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
>  	double distance;
>  
>  	// pass distance by ref
> -	size_t furthestPtIndex = findFurthestPoint(linePts, i, j, distance);
> +	std::size_t furthestPtIndex = findFurthestPoint(linePts, i, j, distance);
>  
>  #if GEOS_DEBUG
>  	std::cerr << "furthest point " << furthestPtIndex 
> @@ -176,7 +176,7 @@ TaggedLineStringSimplifier::simplifySection(size_t i,
>  
>  /*private*/
>  auto_ptr<TaggedLineSegment>
> -TaggedLineStringSimplifier::flatten(size_t start, size_t end)
> +TaggedLineStringSimplifier::flatten(std::size_t start, std::size_t end)
>  {
>  	// make a new segment for the simplified geometry
>  	const Coordinate& p0 = linePts->getAt(start);
> @@ -192,7 +192,7 @@ TaggedLineStringSimplifier::flatten(size_t start, size_t end)
>  bool
>  TaggedLineStringSimplifier::hasBadIntersection(
>  		const TaggedLineString* parentLine,
> -		const vector<size_t>& sectionIndex,
> +		const vector<std::size_t>& sectionIndex,
>  		const LineSegment& candidateSeg)
>  {
>  	if (hasBadOutputIntersection(candidateSeg))
> @@ -242,7 +242,7 @@ TaggedLineStringSimplifier::hasInteriorIntersection(
>  bool
>  TaggedLineStringSimplifier::hasBadInputIntersection(
>  		const TaggedLineString* parentLine,
> -		const vector<size_t>& sectionIndex,
> +		const vector<std::size_t>& sectionIndex,
>  		const LineSegment& candidateSeg)
>  {
>  	auto_ptr< vector<LineSegment*> > querySegs =
> @@ -278,14 +278,14 @@ TaggedLineStringSimplifier::hasBadInputIntersection(
>  bool
>  TaggedLineStringSimplifier::isInLineSection(
>  		const TaggedLineString* line,
> -		const vector<size_t>& sectionIndex,
> +		const vector<std::size_t>& sectionIndex,
>  		const TaggedLineSegment* seg)
>  {
>  	// not in this line
>  	if (seg->getParent() != line->getParent())
>  		return false;
>  
> -	size_t segIndex = seg->getIndex();
> +	std::size_t segIndex = seg->getIndex();
>  	if (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1])
>  		return true;
>  
> @@ -295,13 +295,13 @@ TaggedLineStringSimplifier::isInLineSection(
>  /*private*/
>  void
>  TaggedLineStringSimplifier::remove(const TaggedLineString* line,
> -		size_t start,
> -		size_t end)
> +		std::size_t start,
> +		std::size_t end)
>  {
>  	assert(end <= line->getSegments().size() );
>  	assert(start < end); // I'm not sure this should always be true
>  
> -	for (size_t i = start; i < end; i++)
> +	for (std::size_t i = start; i < end; i++)
>  	{
>  		const TaggedLineSegment* seg = line->getSegment(i);
>  		inputIndex->remove(seg);
> @@ -309,10 +309,10 @@ TaggedLineStringSimplifier::remove(const TaggedLineString* line,
>  }
>  
>  /*private static*/
> -size_t
> +std::size_t
>  TaggedLineStringSimplifier::findFurthestPoint(
>  		const geom::CoordinateSequence* pts,
> -		size_t i, size_t j,
> +		std::size_t i, std::size_t j,
>  		double& maxDistance)
>  {
>  	LineSegment seg(pts->getAt(i), pts->getAt(j));
> @@ -321,8 +321,8 @@ TaggedLineStringSimplifier::findFurthestPoint(
>  	          << std::endl;
>  #endif
>  	double maxDist = -1.0;
> -	size_t maxIndex = i;
> -	for (size_t k = i + 1; k < j; k++)
> +	std::size_t maxIndex = i;
> +	for (std::size_t k = i + 1; k < j; k++)
>  	{
>  		const Coordinate& midPt = pts->getAt(k);
>  		double distance = seg.distance(midPt);
> -- 
> 1.7.4.1
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-- 

  ()   Free GIS & Flash consultant/developer
  /\   http://strk.keybit.net/services.html
