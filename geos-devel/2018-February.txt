From furstenheim at gmail.com  Thu Feb  8 06:50:46 2018
From: furstenheim at gmail.com (Gabriel Furstenheim Milerud)
Date: Thu, 8 Feb 2018 15:50:46 +0100
Subject: [geos-devel] GEOSGeomFromWKT returning null
Message-ID: <CAJN3DWp0Eq6aY_dkM-f3Far-mC4=g1ujt2o4gzpWE_y=03rZhA@mail.gmail.com>

Hello,
I'm trying to use geos_c but I'm getting null geometry.

I installed the dependency from libgeos-dev.

I've been following
https://github.com/OSGeo/geos/blob/master/tests/geostest/geostest.c

>
> #include <stdio.h>
> #include <stdlib.h>
> #include "geos_c.h"
> #define MAXWKTLEN 1047551
>



> static char wkt[MAXWKTLEN];

  // In a.wkt the same example as the test

> input = fopen("./a.wkt", "r");
> if ( ! input ) { perror("fopen"); exit(1); }
> size = fread(wkt, 1, MAXWKTLEN-1, input);
> fclose(input);
> if ( ! size ) { perror("fread"); exit(1); }
> if ( size == MAXWKTLEN-1 ) { perror("WKT input too big!"); exit(1); }
> wkt[size] = '\0'; /* ensure it is null terminated */
> g1 = GEOSGeomFromWKT(wkt);
> printf("g1 generated\n");
> ptr = GEOSGeomToWKT(g1);
> printf("Origin (WKT): %s.\n", wkt2);
> if (!g1) printf("Pointer is null\n");
> printf("Input (WKT): %s.\n", ptr);


Both g1 and ptr are null.What might I be doing incorrectly?


Thanks a lot.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20180208/dece081a/attachment.html>

From furstenheim at gmail.com  Thu Feb  8 07:13:56 2018
From: furstenheim at gmail.com (Gabriel Furstenheim Milerud)
Date: Thu, 8 Feb 2018 16:13:56 +0100
Subject: [geos-devel] GEOSGeomFromWKT returning null
In-Reply-To: <CAJN3DWp0Eq6aY_dkM-f3Far-mC4=g1ujt2o4gzpWE_y=03rZhA@mail.gmail.com>
References: <CAJN3DWp0Eq6aY_dkM-f3Far-mC4=g1ujt2o4gzpWE_y=03rZhA@mail.gmail.com>
Message-ID: <CAJN3DWqLQOcsigpk=t0tmc44J0bkYBe=qjOoxRg0Vr_Ldm2p=A@mail.gmail.com>

Ok, I found the error. I wasn't doing initGEOS

On 8 February 2018 at 15:50, Gabriel Furstenheim Milerud <
furstenheim at gmail.com> wrote:

> Hello,
> I'm trying to use geos_c but I'm getting null geometry.
>
> I installed the dependency from libgeos-dev.
>
> I've been following https://github.com/OSGeo/geos/
> blob/master/tests/geostest/geostest.c
>
>>
>> #include <stdio.h>
>> #include <stdlib.h>
>> #include "geos_c.h"
>> #define MAXWKTLEN 1047551
>>
>
>
>
>> static char wkt[MAXWKTLEN];
>
>   // In a.wkt the same example as the test
>
>> input = fopen("./a.wkt", "r");
>> if ( ! input ) { perror("fopen"); exit(1); }
>> size = fread(wkt, 1, MAXWKTLEN-1, input);
>> fclose(input);
>> if ( ! size ) { perror("fread"); exit(1); }
>> if ( size == MAXWKTLEN-1 ) { perror("WKT input too big!"); exit(1); }
>> wkt[size] = '\0'; /* ensure it is null terminated */
>> g1 = GEOSGeomFromWKT(wkt);
>> printf("g1 generated\n");
>> ptr = GEOSGeomToWKT(g1);
>> printf("Origin (WKT): %s.\n", wkt2);
>> if (!g1) printf("Pointer is null\n");
>> printf("Input (WKT): %s.\n", ptr);
>
>
> Both g1 and ptr are null.What might I be doing incorrectly?
>
>
> Thanks a lot.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20180208/d93e13c9/attachment.html>

From geos-trac at osgeo.org  Tue Feb 27 14:47:47 2018
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 27 Feb 2018 22:47:47 -0000
Subject: [geos-devel] [GEOS] #858: LinIntersector sanitizer failure
Message-ID: <045.b5770e9464c01d6d0de67195e3d583a5@osgeo.org>

#858: LinIntersector sanitizer failure
------------------------+--------------------------
 Reporter:  goatbar     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.6.3
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Fails with both ASAN and MSAN with geos synced to aprox October (and older
 versions too)

 {{{
 ==4928==WARNING: MemorySanitizer: use-of-uninitialized-value
     #0 0x7fc9ed11edbf in
 geos::geomgraph::index::SimpleMCSweepLineIntersector::~SimpleMCSweepLineIntersector()
 geos/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp:42:7
     #1 0x7fc9ed11ee0c in
 geos::geomgraph::index::SimpleMCSweepLineIntersector::~SimpleMCSweepLineIntersector()
 geos/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp:38:1
     #2 0x7fc9ed100444 in
 std::unique_ptr<geos::geomgraph::index::EdgeSetIntersector,
 std::default_delete<geos::geomgraph::index::EdgeSetIntersector>
 >::~unique_ptr()
 crosstool/v18/stable/toolchain/bin/../lib/gcc/x86_64-grtev4-linux-
 gnu/4.9.x-google/../../../../x86_64-grtev4-linux-
 gnu/include/c++/4.9.x-google/bits/unique_ptr.h:236:4
     #3 0x7fc9ed0fdfa4 in
 geos::geomgraph::GeometryGraph::computeSelfNodes(geos::algorithm::LineIntersector&,
 bool, bool, geos::geom::Envelope const*)
 geos/src/geomgraph/GeometryGraph.cpp:401:1
     #4 0x7fc9ed0fd9f2 in
 geos::geomgraph::GeometryGraph::computeSelfNodes(geos::algorithm::LineIntersector&,
 bool, geos::geom::Envelope const*)
 geos/src/geomgraph/GeometryGraph.cpp:366:9
     #5 0x7fc9ed1a0937 in
 geos::operation::IsSimpleOp::isSimpleLinearGeometry(geos::geom::Geometry
 const*) geos/src/operation/IsSimpleOp.cpp:174:48
     #6 0x7fc9ed1a06ba in geos::operation::IsSimpleOp::isSimple()
 geos/src/operation/IsSimpleOp.cpp
     #7 0x7fc9ed095ffb in geos::geom::Geometry::isSimple() const
 geos/src/geom/Geometry.cpp:866:12
     #8 0x7fc9ed022fd2 in GEOSisSimple_r geos/capi/geos_ts_c.cpp:1722:20
     #9 0x7fc9edeb15dd in OGRGeometry::IsSimple() const
 gdal/ogr/ogrgeometry.cpp:2200:19
     #10 0x562532e2db54 in (anonymous
 namespace)::OgrGemeometryFactoryWkb_b69202526_Test::TestBody()
 gdal/autotest2/cpp/ogr/ogrgeometryfactory_test.cc:389:3
     #11 0x7fc9e8b770e9 in testing::Test::Run() gtest/src/gtest.cc:2478:5
     #12 0x7fc9e8b77f6a in testing::TestInfo::Run()
 gtest/src/gtest.cc:2654:11
     #13 0x7fc9e8b78922 in testing::TestCase::Run()
 gtest/src/gtest.cc:2772:28
     #14 0x7fc9e8b840ba in testing::internal::UnitTestImpl::RunAllTests()
 gtest/src/gtest.cc:4690:43
     #15 0x7fc9e8b83aa4 in testing::UnitTest::Run()
 gtest/src/gtest.cc:4309:10
     #16 0x562532e30733 in main gdal/autotest2/cpp/util/gunit_main.cc:19:10

 SUMMARY: MemorySanitizer: use-of-uninitialized-value
 geos/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp:42:7 in
 geos::geomgraph::index::SimpleMCSweepLineIntersector::~SimpleMCSweepLineIntersector()
 }}}

 Reproduces with this gunit based test.  Be warned that this data is
 generated by a fuzzer, so it's likely pretty crazy.

 {{{#!c++
 TEST(OgrGemeometryFactoryWkb, b69202526) {
   constexpr char kData[] =
 "\x00\x00\x00\x00\x02\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00"
 "\x00\x00\x00\x00\x00\x00\x00\x00\x24\x04\x24\x24\x24\x24\x24\x24\x24"
 "\x24\x24\x24\x24\x28\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x3b"
 "\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x40\x00\x01\x08\x00"
 "\x00\x00\x03\x00\x00\x00\x3b\x01\x98\x00\x00\x00\x00\x00\x00\x00\x00"
 "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x29\x00"
 "\x00\x00\x00\x00\x01\x00\x00\x00\x00\x49\x00\x01\xf3\x4e\x53\x74\x37"
 "\x6c\x6f\x63\x61\x6c\x65\x35\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
 "\x28\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
 "\xfb\x00\x00\x00\x00\x00\x01\x07\x00\x00\x00\x00\x00\x3a\x00\x00\x00"
 "\xf1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf6\x00\x00\x00\x00\x00"
 "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
 "\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00"
 "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00";

   OGRGeometry *geomptr = nullptr;

   size_t size = ARRAYSIZE(kData);
   LOG(INFO) << "size: " << size;
   auto variant = wkbVariantOldOgc;
   int bytes_consumed = 0;
   auto data = reinterpret_cast<const unsigned char *>(kData);
   OGRGeometryFactory::createFromWkb(data, nullptr, &geomptr, size,
 variant,
                                     bytes_consumed);
   ASSERT_EQ(233, bytes_consumed);
   ASSERT_NE(nullptr, geomptr);
   EXPECT_TRUE(geomptr->IsSimple());  // <-- Sanitizers fail here
 }
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/858>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Feb 27 23:58:45 2018
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 28 Feb 2018 07:58:45 -0000
Subject: [geos-devel] [GEOS] #859: Voronoi issue
Message-ID: <045.eb68cecd0b7332a162029ded2e367592@osgeo.org>

#859: Voronoi issue
------------------------+--------------------------
 Reporter:  jjgreen     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.5.2
Component:  Default     |    Version:  3.5.1
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 OSGEO Voronoi issue

 Further to a posting on the PostGIS mailing list
 in February 2018, this directory contains scripts
 to generate data for the bug report for OSGEO.
 The scripts generating the data can only be used
 against a copy of the seadb DB which is not open
 source, but the `reproduce.sh` script can be used
 (with minimal modifications) to reproduce the issue
 with the CSV file output from the DB.

 For my setup, which is Ubuntu Xenial with PostGIS
 from apt-postgresql.org and

 - POSTGIS="2.3.3 r15473"
 - GEOS="3.5.0-CAPI-1.9.0 r4084"
 - PROJ="Rel. 4.9.2, 08 September 2015"
 - GDAL="GDAL 1.11.3, released 2015/09/16"
 - LIBXML="2.9.3"
 - LIBJSON="0.11.99" RASTER

 the `reproduce.sh` script reports

     CREATE TABLE
     COPY 1322
     CREATE INDEX
     ERROR:  GEOSVoronoiDiagram: TopologyException: Input
         geom 1 is invalid: Self-intersection at or near point
         444332.38647522771 8548816.0569835864 at
         444332.38647522771 8548816.0569835864

 As discussed in the PostGIS forum thread mentioned above, we
 find that `ST_SnapToGrid` with dyadic grid step fixes the
 issue.

 The original data for these points was the EuroROSE project,
 an EU-funded experiment on the feasibility of the use of
 HF-radar for measuring ocean waves, currents and so on. The
 experiment took place at Fedje, Norway in early 2000. More
 details can be found at

     http://wera.cen.uni-hamburg.de/EuroROSE/EuroROSE_Intro.shtml

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/859>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Feb 27 23:59:55 2018
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 28 Feb 2018 07:59:55 -0000
Subject: [geos-devel] [GEOS] #859: Voronoi issue
In-Reply-To: <045.eb68cecd0b7332a162029ded2e367592@osgeo.org>
References: <045.eb68cecd0b7332a162029ded2e367592@osgeo.org>
Message-ID: <060.8408c880af3a313d8326b160d307a773@osgeo.org>

#859: Voronoi issue
------------------------+---------------------------
 Reporter:  jjgreen     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.5.2
Component:  Default     |     Version:  3.5.1
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by jjgreen):

 * Attachment "fedje.csv" added.

 data points

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/859>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Feb 28 00:00:35 2018
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 28 Feb 2018 08:00:35 -0000
Subject: [geos-devel] [GEOS] #859: Voronoi issue
In-Reply-To: <045.eb68cecd0b7332a162029ded2e367592@osgeo.org>
References: <045.eb68cecd0b7332a162029ded2e367592@osgeo.org>
Message-ID: <060.95391501fa96706cdc1f3b9c5d925ac8@osgeo.org>

#859: Voronoi issue
------------------------+---------------------------
 Reporter:  jjgreen     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.5.2
Component:  Default     |     Version:  3.5.1
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by jjgreen):

 * Attachment "reproduce.sh" added.

 script which reproduces the issue

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/859>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Feb 28 06:29:45 2018
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 28 Feb 2018 14:29:45 -0000
Subject: [geos-devel] [GEOS] #860: Prefer empty to size of zero
Message-ID: <045.6fa25a248e0bd47052567127a6be9539@osgeo.org>

#860: Prefer empty to size of zero
------------------------+--------------------------
 Reporter:  goatbar     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.6.3
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 {{{#!c++
 double
 ElevationMatrixCell::getAvg() const
 {
         return  zvals.size() ?
                 ztot / static_cast<double>(zvals.size()) :
                 DoubleNotANumber;
 }
 }}}

 Should become:

 {{{#!c++
 double
 ElevationMatrixCell::getAvg() const
 {
     return !zvals.empty() ? ztot / static_cast<double>(zvals.size())
                         : DoubleNotANumber;
 }
 }}}

 or better yet, drop the not (!) in the test.

 {{{#!c++
 double
 ElevationMatrixCell::getAvg() const
 {
     return zvals.empty()
         ? DoubleNotANumber
         : ztot / static_cast<double>(zvals.size()) ;
 }
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/860>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

