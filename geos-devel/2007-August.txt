From mathieu.leserre at camptocamp.com  Thu Aug  2 10:33:52 2007
From: mathieu.leserre at camptocamp.com (Mathieu Le Serre)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] IsValid() for a new geometry
Message-ID: <46B1EB50.2010606@camptocamp.com>

Hello,
I'm a new PostGIS&GEOS user.
I'm trying to implement new kind of geometries in PostGIS(TIN &
POLYHEDRON) and I would like to make the function IsValid() for these
two types.For the moment, this operator works just with POINT,
LINESTRING, POLYGON, and the correspondant MULTIGEOMETRIES.I already
added the GEOS_TYPES in the file Geometry.h and modified the files
IsValidOp.h/.cpp. I also modified the file lwgeom_geos_c  in PostGIS  to
make the GEOS-PostGIS correspondance.Compilation is OK but when I tried
to use the isvalid() operator I still get this message:
"NOTICE:  Unsupported type request for PostGIS2GEOS_collection".

Thank  you for helping me.

From mbdavis at refractions.net  Thu Aug  9 12:53:16 2007
From: mbdavis at refractions.net (Martin Davis)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Binary Predicate Bug - Even Worse!
In-Reply-To: <46A8EB10.1050308@caris.com>
References: <466F0D54.7040009@refractions.net>
	<46A8B0F1.5040601@caris.com>	<46A8D825.8040000@refractions.net>
	<46A8EB10.1050308@caris.com>
Message-ID: <46BB467C.7000309@refractions.net>

I don't really see the problem with expressing Equals in terms of the 
DE-9IM.  To my mind, this just adds some value to this predicate by 
putting it under the same theoretical framework as the rest of the 
"standard" predicates.  If you don't like it, just ignore that definition. 

I don't see the reason to be concerned about whether Contains and Equals 
"have the same standing" or "will be adopted".  The functionality is 
there, is well-defined and clearly documented.  Use it or don't use it - 
your choice.

Your original question was concerning the behaviour of contains and 
within on two topologically equal polygons.  According to my analysis, 
the observed behaviour is consistent with the definition of contains and 
within in both GEOS/JTS and OGC-SFS.  If you don't like this behaviour, 
you'd better take it up with the OGC.

You wrote "How can 2 simple geometries be equal *and* contained *and* 
within?".  The reason is simple.  Think of contains as >= and within as 
<=.    If A = B, then obviously A <= B and A >= B - there's no 
contradiction here.

Martin

Todd Jellett wrote:
> Hi Chris,
>
> By "true predicate" I am just referring to the set of five mutually 
> exclusive, complete predicates that the SFS is based on and yes, there 
> is probably a better term that 'true'. Original?
> Contains and Intersects are explicitly defined as "for user 
> convenience predicates" on page 2-19 of the SFS but Equals is just 
> listed as a method. Is changing Equals to be based on the DE-9IM and 
> promoting it to the same standing as the true/basic/core predicates 
> part of the SFS, or is this an extension to the SFS? Will it be 
> adopted? Equals is not built on true/basic/core predicates the way 
> Contains/Intersects is.
>
> By "violating the mutual exclusivity of the predicates" I am just 
> saying that Contains and Equals are not members of the set of mutually 
> exclusive, complete predicates (so therefore, there is no problem with 
> mutual exclusivity) and I previously thought they were. In my original 
> question, I excluded Intersects but included Equals and Contains in 
> the group that I thought were mutually exclusive.
>
> Todd
>
> Chris Hodgson wrote:
>> Excellent research Todd, good to have it here to help others with any 
>> similar confusion.
>>
>> I'd just like to add that the only thing special about Disjoint, 
>> Touches, Crosses, Within, and Overlaps is that they are both mutually 
>> exclusive and complete as a set of predicates and thus good for using 
>> as logical building blocks to more complicated operations. It doesn't 
>> mean that contains/intersects/equals aren't also perfectly valid and 
>> useful logical predicates. They are also based on the DE-9IM. Your 
>> idea of "true" predicates might better be described as "basic" or 
>> "core" ... "true" implies that other predicates are somehow "false" 
>> when perhaps composite or complex would be a better term.
>>
>> Talking about "violating the mutual exclusivity of the predicates" 
>> doesn't make much sense when you're talking about predicates that 
>> aren't part of the small set which is proved to be mutually exclusive.
>>
>> Anyways, good to have all the references put together.
>>
>> Chris
>>
>> Todd Jellett wrote:
>>> Martin Davis wrote:
>>>> I agree with Chris and Paul. The predicates are clearly not 
>>>> intended to be mutually disjoint. They are probably intended to 
>>>> capture the most common use cases in single functions (which allows 
>>>> for some aggressive optimization - some day 8^).
>>>>
>>>> Refractions: 3, Jellet: 1 - we win! 8^)
>>>>
>>> This is not quite the answer I was looking for.
>>>
>>> What I expected was something more along the lines of:
>>>
>>> Yes, the named spatial relationship predicates based on the DE-9IM 
>>> (Disjoint, Touches, Crosses, Within, and Overlaps) are indeed 
>>> mutually exclusive. For a complete proof that these predicates are 
>>> mutually exclusive see the reference:
>>>
>>> Clementini Eliseo, Di Felice P., van Oostrom p., A Small Set of 
>>> Formal Topological Relationships Suitable for End-User Interaction, 
>>> in D. Abel and B. C. Ooi (Ed.), Advances in Spatial Databases, Third 
>>> International Symposium. SSD ?93. LNCS 692. Pp. 277-295. 
>>> Springer-Verlag. Singapore (1993).
>>>
>>> Here is an quoted excerpt from section 4.3 of this paper
>>>
>>> "In this section, we will prove that the five relationships are 
>>> mutually exclusive, that is, it cannot be the case that two 
>>> different relationships hold between two features; furthermore, we 
>>> will prove that they make a full covering of all possible 
>>> topological situations, that is, given two features, the 
>>> relationship between them must be one of the five."
>>>
>>> You (Todd) are probably being confused by the fact that Contains and 
>>> Equals are not true predicates. If you look at page 2-15 of the SFS, 
>>> in the second paragraph, you will see the five unique predicates 
>>> listed. On page 2-19, the SFS defines for user convenience, the 
>>> predicates Contains and Intersects. Note that these two, are not 
>>> defined uniquely but instead are defined in terms of one of the five 
>>> unique and mutually exclusive predicates. ( a.Contains(b) <=> 
>>> b.Within(a) and a.Intersects(b) <=> !a.Disjoint(b) )
>>>
>>> Equals is not even listed as a predicate in SFS. It is just listed 
>>> as a method. In ISO 19107, it can be seen that Equals comes from the 
>>> transfiniteSet class along with the other set theoretical operations 
>>> like intersection, union and difference. In 19107, the GM_Object 
>>> class is derived from transfiniteSet. The SFS chose to optimize away 
>>> the transfiniteSet class so the Equals method ended up in the 
>>> Geometry base class (corresponds to GM_Object in ISO 19107) with all 
>>> the other set theoretical methods.
>>>
>>> So in conclusion, having Within, Contains, and Equals all come back 
>>> true for two given geometries does not violate the mutual 
>>> exclusivity of the predicates because Within is the only true 
>>> predicate.
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel@geos.refractions.net
>>> http://geos.refractions.net/mailman/listinfo/geos-devel
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@geos.refractions.net
>> http://geos.refractions.net/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022


From mateusz at loskot.net  Wed Aug 15 13:37:34 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
In-Reply-To: <7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>
References: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>
	<7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>
Message-ID: <46C339DE.1040403@loskot.net>

abhay menon wrote:
> 
> Has anyone tried this hack for building GEOS in msvc71.
> 
> I want to know that if this version of  the GEOS library is working
> correctly or if some one has been able to compile in a similar fashion.

What's the exact problem?

I did build GEOS using Visual C++ 7.1.
Currently, I use Visual C++ 8.0.
Both versions work well.

The only known version that is not supported is Visual C++ 6.0.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From abhay.menon at gmail.com  Wed Aug 15 13:44:30 2007
From: abhay.menon at gmail.com (abhay menon)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
In-Reply-To: <46C339DE.1040403@loskot.net>
References: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>
	<7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>
	<46C339DE.1040403@loskot.net>
Message-ID: <7a30cd70708151044l68139ad6oce708d2afadcc223@mail.gmail.com>

On 8/15/07, Mateusz Loskot <mateusz@loskot.net> wrote:
>
> abhay menon wrote:
> >
> > Has anyone tried this hack for building GEOS in msvc71.
> >
> > I want to know that if this version of  the GEOS library is working
> > correctly or if some one has been able to compile in a similar fashion.
>
> What's the exact problem?
>
> I did build GEOS using Visual C++ 7.1.
> Currently, I use Visual C++ 8.0.
> Both versions work well.
>
> The only known version that is not supported is Visual C++ 6.0.
>
> Cheers
> --
> Mateusz Loskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>

Hi Mateusz,

Have you tried the sln msvc71 that I had provided. Did it give a correct
output in the Release build or was there any error msg will building that.

-- 
Best Regards

Abhay Menon
http://abhaymenon.info
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20070815/4f3a55a4/attachment.html
From abhay.menon at gmail.com  Wed Aug 15 13:51:26 2007
From: abhay.menon at gmail.com (abhay menon)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
In-Reply-To: <7a30cd70708151044l68139ad6oce708d2afadcc223@mail.gmail.com>
References: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>
	<7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>
	<46C339DE.1040403@loskot.net>
	<7a30cd70708151044l68139ad6oce708d2afadcc223@mail.gmail.com>
Message-ID: <7a30cd70708151051u11089e84k23e33fd7f19acf99@mail.gmail.com>

On 8/15/07, abhay menon <abhay.menon@gmail.com> wrote:
>
>
>
> On 8/15/07, Mateusz Loskot <mateusz@loskot.net> wrote:
> >
> > abhay menon wrote:
> > >
> > > Has anyone tried this hack for building GEOS in msvc71.
> > >
> > > I want to know that if this version of  the GEOS library is working
> > > correctly or if some one has been able to compile in a similar
> > fashion.
> >
> > What's the exact problem?
> >
> > I did build GEOS using Visual C++ 7.1.
> > Currently, I use Visual C++ 8.0.
> > Both versions work well.
> >
> > The only known version that is not supported is Visual C++ 6.0.
> >
> > Cheers
> > --
> > Mateusz Loskot
> > http://mateusz.loskot.net
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> >
>
> Hi Mateusz,
>
> Have you tried the sln msvc71 that I had provided. Did it give a correct
> output in the Release build or was there any error msg will building that.
>
> --
> Best Regards
>
> Abhay Menon
> http://abhaymenon.info
>

I want to use the same in VC++ 6.0 binded with GDAL. So had create a sln for
VC7.1 as that  was the permissible framework environment that I could use.
If you still have the working VC7.1 build sln + project file similar to your
msvc80 build could please mail it to me.

-- 
Best Regards

Abhay Menon
http://abhaymenon.info
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20070815/d2e63405/attachment.html
From mateusz at loskot.net  Wed Aug 15 13:59:40 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
In-Reply-To: <7a30cd70708151044l68139ad6oce708d2afadcc223@mail.gmail.com>
References: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>	<7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>	<46C339DE.1040403@loskot.net>
	<7a30cd70708151044l68139ad6oce708d2afadcc223@mail.gmail.com>
Message-ID: <46C33F0C.3000703@loskot.net>

abhay menon wrote:
> On 8/15/07, Mateusz Loskot <mateusz@loskot.net> wrote:
>> abhay menon wrote:
>>> Has anyone tried this hack for building GEOS in msvc71.
>>>
>>> I want to know that if this version of  the GEOS library is working
>>> correctly or if some one has been able to compile in a similar fashion.
>> What's the exact problem?
>>
>> I did build GEOS using Visual C++ 7.1.
>> Currently, I use Visual C++ 8.0.
>> Both versions work well.
>>
>> The only known version that is not supported is Visual C++ 6.0.
> 
> Hi Mateusz,
> 
> Have you tried the sln msvc71 that I had provided. Did it give a correct
> output in the Release build or was there any error msg will building that.

Hi,

No, I have not becasue I don't have msvc71 license anymore.
I have only access to msvc80.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From mateusz at loskot.net  Wed Aug 15 14:02:52 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
In-Reply-To: <7a30cd70708151051u11089e84k23e33fd7f19acf99@mail.gmail.com>
References: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>	<7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>	<46C339DE.1040403@loskot.net>	<7a30cd70708151044l68139ad6oce708d2afadcc223@mail.gmail.com>
	<7a30cd70708151051u11089e84k23e33fd7f19acf99@mail.gmail.com>
Message-ID: <46C33FCC.2020104@loskot.net>

abhay menon wrote:
> I want to use the same in VC++ 6.0 binded with GDAL. So had create a sln for
> VC7.1 as that  was the permissible framework environment that I could use.
> If you still have the working VC7.1 build sln + project file similar to your
> msvc80 build could please mail it to me.

It seems my explanation was imprecise.
Yes, I did use msvc71 to build GEOS but only using makefile.vc files
provided in the GEOS source code.
I didn't use solution/project to build GEOS with msvc71.

After I switched to msvc80 I created solution/project and
submitted it to the GEOS SVN (trunk/geos/build/msvc80).

I hope it's clear now.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From abhay.menon at gmail.com  Wed Aug 15 14:16:22 2007
From: abhay.menon at gmail.com (abhay menon)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
In-Reply-To: <46C33FCC.2020104@loskot.net>
References: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>
	<7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>
	<46C339DE.1040403@loskot.net>
	<7a30cd70708151044l68139ad6oce708d2afadcc223@mail.gmail.com>
	<7a30cd70708151051u11089e84k23e33fd7f19acf99@mail.gmail.com>
	<46C33FCC.2020104@loskot.net>
Message-ID: <7a30cd70708151116l3ab81768sc907e9fd3127e516@mail.gmail.com>

Hi Mateusz,

On 8/15/07, Mateusz Loskot <mateusz@loskot.net> wrote:
>
> abhay menon wrote:
> > I want to use the same in VC++ 6.0 binded with GDAL. So had create a sln
> for
> > VC7.1 as that  was the permissible framework environment that I could
> use.
> > If you still have the working VC7.1 build sln + project file similar to
> your
> > msvc80 build could please mail it to me.
>
> It seems my explanation was imprecise.
> Yes, I did use msvc71 to build GEOS but only using makefile.vc files
> provided in the GEOS source code.
> I didn't use solution/project to build GEOS with msvc71.


Ok .for some reason I was not able to get the GEOS compiled using
makefile.vc in VC7.1.

After I switched to msvc80 I created solution/project and
> submitted it to the GEOS SVN (trunk/geos/build/msvc80).


yeap that where I found the solution and project in MS VC 8.0.

I hope it's clear now.


It crystal clear to me .

Cheers
> --
> Mateusz Loskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>

Since I have the access to all the version of VS. I made the
solution/project in MS VC 7.1 changing certain param in solution and project
of MS VC 8.0 that you had submitted in svn.

I shall try to make use the makefile.vc in VS7.1 again and post back if the
problem still persist.

-- 
Best Regards

Abhay Menon
http://abhaymenon.info
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20070815/b65d8672/attachment.html
From Tom.Kralidis at ec.gc.ca  Tue Aug 21 10:06:06 2007
From: Tom.Kralidis at ec.gc.ca (Kralidis,Tom [Burlington])
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] status of 3.0.0
In-Reply-To: <20070703145209.GF29206@intevation.de>
Message-ID: <2DC5CCA14756424BBBEE8B4B2E4A682F278051@ecburexch1.ontario.int.ec.gc.ca>


Hi,

Is there a status / date on the final release of 3.0.0?
http://geos.refractions.net/ says rc4 has been out since February 2007.

..Tom

From mateusz at loskot.net  Wed Aug 22 21:22:16 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Note about GEOS 3.0.0 release
Message-ID: <46CCE148.70703@loskot.net>

Folks,

Recently a few users have been asking about when new
release 3.0.0 is planned. There is no date fixed yet.

I can tell the GEOS 3.0.0rc4 can be safely considered as stable.
technically releasing GEOS 3.0.0 could be as easy as renaming the
package, but publishing new release involves more steps than preparing a
package. At the moment, there is rush around FOSS4G 2007 preparation, so
it sounds reasonable IMO if GEOS will be released officially after the
event. For now, please consider use of 3.0.0rc4 as GEOS stable.

Thank you for understanding.

Best regards
-- 
Mateusz Loskot
http://mateusz.loskot.net

From robert.coup at onetrackmind.co.nz  Thu Aug 23 02:09:13 2007
From: robert.coup at onetrackmind.co.nz (Robert Coup)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Memory leaks in buffer module
Message-ID: <c5097ac40708222309r90f61e2od878bd2d85bb07f0@mail.gmail.com>

Hi Folks,

Spent a few hours today tracking down a few memory leaks in the geos
buffer code. Two of the leaks are visible by running valgrind against
docs/example.cpp.

I've attached a patch against HEAD that fixes it.

Regards,

Robert Coup
-- 
One Track Mind Ltd.
PO Box 1604, Shortland St, Auckland, New Zealand
Phone +64-9-966 0433 Fax +64-9-969 0045
Web http://www.onetrackmind.co.nz
-------------- next part --------------
A non-text attachment was scrubbed...
Name: geos_buffer_memleak.patch
Type: text/x-diff
Size: 2713 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070823/684db971/geos_buffer_memleak.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 23 03:04:00 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Note about GEOS 3.0.0 release
In-Reply-To: <46CCE148.70703@loskot.net>
References: <46CCE148.70703@loskot.net>
Message-ID: <1187852640.5624.2.camel@mca-desktop>

On Thu, 2007-08-23 at 03:22 +0200, Mateusz Loskot wrote:
> Folks,
> 
> Recently a few users have been asking about when new
> release 3.0.0 is planned. There is no date fixed yet.
> 
> I can tell the GEOS 3.0.0rc4 can be safely considered as stable.
> technically releasing GEOS 3.0.0 could be as easy as renaming the
> package, but publishing new release involves more steps than preparing a
> package. At the moment, there is rush around FOSS4G 2007 preparation, so
> it sounds reasonable IMO if GEOS will be released officially after the
> event. For now, please consider use of 3.0.0rc4 as GEOS stable.
> 
> Thank you for understanding.
> 
> Best regards


Hi Mateusz,

While 3.0.0rc4 seems reasonably usable, there may have been a new bug
introduce in the latest SVN - see these posts here for more info:

http://postgis.refractions.net/pipermail/postgis-devel/2007-August/002717.html
http://postgis.refractions.net/pipermail/postgis-devel/2007-August/002729.html
http://postgis.refractions.net/pipermail/postgis-devel/2007-August/002733.html


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From pramsey at refractions.net  Thu Aug 23 16:40:54 2007
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Memory leaks in buffer module
In-Reply-To: <c5097ac40708222309r90f61e2od878bd2d85bb07f0@mail.gmail.com>
References: <c5097ac40708222309r90f61e2od878bd2d85bb07f0@mail.gmail.com>
Message-ID: <46CDF0D6.7030506@refractions.net>

Thanks Robert, those are in r1998 on trunk now.

P

Robert Coup wrote:
> Hi Folks,
> 
> Spent a few hours today tracking down a few memory leaks in the geos
> buffer code. Two of the leaks are visible by running valgrind against
> docs/example.cpp.
> 
> I've attached a patch against HEAD that fixes it.
> 
> Regards,
> 
> Robert Coup


-- 

   Paul Ramsey
   Refractions Research
   http://www.refractions.net
   pramsey@refractions.net
   Phone: 250-383-3022
   Cell: 250-885-0632

From cfis at savagexi.com  Tue Aug 28 02:23:09 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Msys Sed error
In-Reply-To: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>
References: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>
Message-ID: <46D3BF4D.7060305@savagexi.com>

On msys:

./configure

....
configure: creating ./config.status
config.status: creating Makefile
sed: file ./confstat1288-14634/subs-3.sed line 14: Unterminated `s' command
config.status: creating capi/Makefile

And hundreds of more lines like that.

Thoughts?

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070828/b09476d6/smime.bin
From cfis at savagexi.com  Tue Aug 28 02:33:43 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Assertion Failure with VC++ and STRtree:yComparator
Message-ID: <46D3C1C7.7060606@savagexi.com>

There appears to be a fairly serious issue with the trunk version of 
GEOS with STRtree:yComparator(Boundable *a, Boundable *b).

There are various comments from mloskot and strk about how the 
comparison should work.  Choices seem to be:

	return STRtree::centreY(aEnv) < STRtree::centreY(bEnv);

Or

return std::fabs( STRtree::centreY(aEnv) - STRtree::centreY(bEnv) ) < 1e-30


Currently, the second option is used.  But on Windows, using a debug 
VC++ build, that is almost guaranteed to cause an assertion failure. 
VC++ has code in xutility that checks the comparison in both directions:

template<class _Pr, class _Ty1, class _Ty2> inline
	bool __CLRCALL_OR_CDECL _Debug_lt_pred(_Pr _Pred, _Ty1& _Left, _Ty2& 
_Right,
		const wchar_t *_Where, unsigned int _Line)
	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering
	if (!_Pred(_Left, _Right))
		return (false);
	else if (_Pred(_Right, _Left))
		_DEBUG_ERROR2("invalid operator<", _Where, _Line);
	return (true);
	}

Assume the centers of the two envelopes are equivalent - that will 
trigger the 2nd part of the if statement causing an assertion failure.

Can this be fixed so that the comparison works as expected?  The first 
version does the trick, but strk wrote some scary comments that it 
corrupts memory in some cases (although with a quick glance I don't see 
how).

Thanks,

Charlie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070828/4947ddd8/smime.bin
From tasbbon at gmail.com  Tue Aug 28 04:31:12 2007
From: tasbbon at gmail.com (james YU)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] About X64 Porting
Message-ID: <316042760708280131q4309807fh9625c3317830c77f@mail.gmail.com>

Hi,
      Could anyone please inform me whether the X64 version of GEOS is on
schedule or not?
Thanks,
James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20070828/703fb0b5/attachment.html
From frank.koormann at intevation.de  Tue Aug 28 07:00:01 2007
From: frank.koormann at intevation.de (Frank Koormann)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] About X64 Porting
In-Reply-To: <316042760708280131q4309807fh9625c3317830c77f@mail.gmail.com>
References: <316042760708280131q4309807fh9625c3317830c77f@mail.gmail.com>
Message-ID: <20070828110001.GR29780@intevation.de>

* james YU <tasbbon@gmail.com> [070828 10:31]:
>    Hi,
>          Could anyone please inform me whether the X64 version of GEOS is on
>    schedule or not?
 
Geos compiles fine on AMD/EMT 64 platforms, a client of us is using
geos3.0.0.rc4 in productive environment (SLES 9).

Regards,

        Frank

-- 
Frank Koormann  |  ++49-541-335 08 30  |  http://www.intevation.de/
Intevation GmbH, Georgstr. 4, 49074 Osnabr?ck, DE | AG Osnabr?ck, HR B 18998
Gesch?ftsf?hrer: Frank Koormann, Bernhard Reiter, Dr. Jan-Oliver Wagner

From mateusz at loskot.net  Tue Aug 28 18:36:56 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] About X64 Porting
In-Reply-To: <316042760708280131q4309807fh9625c3317830c77f@mail.gmail.com>
References: <316042760708280131q4309807fh9625c3317830c77f@mail.gmail.com>
Message-ID: <46D4A388.3040104@loskot.net>

james YU wrote:
> Hi, Could anyone please inform me whether the X64 version of GEOS is
> on schedule or not?

James,

There is no reason why GEOS would not compile on x64.
My suggestion is to grab latest sources, try to build and run unit test
package (make check).
See if these steps for you and report problems here,
if you'll encounter any.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From mateusz at loskot.net  Tue Aug 28 18:57:16 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Msys Sed error
In-Reply-To: <46D3BF4D.7060305@savagexi.com>
References: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>
	<46D3BF4D.7060305@savagexi.com>
Message-ID: <46D4A84C.9080005@loskot.net>

Charlie Savage wrote:
> On msys:
> 
> ./configure
> 
> .... configure: creating ./config.status config.status: creating
> Makefile sed: file ./confstat1288-14634/subs-3.sed line 14:
> Unterminated `s' command config.status: creating capi/Makefile
> 
> And hundreds of more lines like that.

Charlie,

This error about unterminated s probably means that a sed command is
unquoted or quoted incorrectly.

Perhaps, there is a bug in MSys and sed is misused in one of autotools
macro or something similar.

I checked the
svn log configure.in
and there have not been any changes applied recently,
so I'm inclined to say there is no bug related in the GEOS build scripts.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From cfis at savagexi.com  Tue Aug 28 19:01:18 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Msys Sed error
In-Reply-To: <46D4A84C.9080005@loskot.net>
References: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>	<46D3BF4D.7060305@savagexi.com>
	<46D4A84C.9080005@loskot.net>
Message-ID: <46D4A93E.4060505@savagexi.com>

> This error about unterminated s probably means that a sed command is
> unquoted or quoted incorrectly.

Right.

> Perhaps, there is a bug in MSys and sed is misused in one of autotools
> macro or something similar.

Could be.  I tried using a newer version of sed (4.1.5) but that didn't 
help.  Something in the back of my mind tells me we've seen this before 
on this mailing list, or maybe it was the postgresql list.  But I 
couldn't find any reference to it. 	

> I checked the
> svn log configure.in
> and there have not been any changes applied recently,
> so I'm inclined to say there is no bug related in the GEOS build scripts.

Um, well.  That means you give up compiling GEOS with mingw/msys.  Maybe 
not a great loss, but still probably worth doing.  I did a quick look at 
where sed is used, but all the autoconf stuff is fairly hard to wade 
through (at least for me).  Any sed experts in the house using msys?

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070828/e0336677/smime.bin
From cfis at savagexi.com  Tue Aug 28 19:08:53 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Updated SWIG bindings
Message-ID: <46D4AB05.4010202@savagexi.com>

Just a quick note...

I exposed a couple more methods in the SWIG bindings and regenerated 
them using SWIG 1.3.31.  I also renamed a large number of the methods in 
the Ruby bindings to be more "ruby" like - so Geometry::equals becomes 
Geometry::eql?, etc.

I also added a geos_ruby project to Mateusz VC++ solution (and fixed a 
minor #include bug when building the C API with VC++).  Its a bit grungy 
in that I hard coded the path to my Ruby compiler, but it should be good 
enough to get someone started.  Also note it creates a file called 
geos.dll which of course can be quite confusing but is required by the 
way Ruby loads libraries.  Thus the built DLL is kept under 
msvc/geos_ruby/debug instead of msvc/debug to avoid any confusion.

If there is interest I can do the same for python.  But I'm not sure how 
much those bindings are used versus the hand-crafted ones from Sean and 
Hobu (kind of silly having 2 sets of bindings if you ask me, but alas).

I also updated the tests a bit, but I'm a bit confused by what is what 
these days.  I see Mateusz added a bunch of unit tests (great) - but how 
do those relate to the older xml tests?  The nice thing about the xml 
tests is that the Ruby code could read them in, run the tests, and 
verify the results.  Obviously that duplicates the C code testing 
itself, but I think its still a good test of the bindings and memory 
management through the c api.

Last - when using the bindings from Ruby (or Python) the lack of a 
Coordinate object is fairly annoying - particularly when dealing with 
points. Any chance it can be exposed via the c api?

Thanks,

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070828/51b3c209/smime.bin
From hobu.inc at gmail.com  Tue Aug 28 19:30:52 2007
From: hobu.inc at gmail.com (Howard Butler)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Updated SWIG bindings
In-Reply-To: <46D4AB05.4010202@savagexi.com>
References: <46D4AB05.4010202@savagexi.com>
Message-ID: <3014F028-9E66-4BF2-BF1D-A10A594A6E6B@gmail.com>


On Aug 28, 2007, at 6:08 PM, Charlie Savage wrote:

> If there is interest I can do the same for python.  But I'm not  
> sure how much those bindings are used versus the hand-crafted ones  
> from Sean and Hobu (kind of silly having 2 sets of bindings if you  
> ask me, but alas).

Two?  More like five... shapely, PCL, GeoDjango, GDAL, and GEOS' :)

Howard

From mateusz at loskot.net  Tue Aug 28 19:51:31 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Msys Sed error
In-Reply-To: <46D4A93E.4060505@savagexi.com>
References: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>	<46D3BF4D.7060305@savagexi.com>	<46D4A84C.9080005@loskot.net>
	<46D4A93E.4060505@savagexi.com>
Message-ID: <46D4B503.30309@loskot.net>

Charlie Savage wrote:
>> I checked the svn log configure.in and there have not been any 
>> changes applied recently, so I'm inclined to say there is no bug 
>> related in the GEOS build scripts.
> 
> Um, well.  That means you give up compiling GEOS with mingw/msys. 
> Maybe not a great loss, but still probably worth doing.

Charlie,

Honestly, don't give up, rather I never used mingw/msys myself (yet),
so I'm not an expert of this tool chain.

Regardless of my personal experiences, I agree it's still worth to
support it.

> I did a quick look at where sed is used, but all the autoconf stuff 
> is fairly hard to wade through (at least for me).  Any sed experts in
>  the house using msys?

I did a fast scan with vim/grep through the configure.in and didn't
found anything suspicious, though the file is big and there are also a
few macros in geos/m4.

I just did a short test on Linux:
- generate configure
- run ./configure
and no warning or error came out, so I'm pretty sure this is something
MSys specific.

Here I've found something interesting:
http://svn.navi.cx/misc/abandoned/opencombat/README.MINGW32
check "Troubleshooting" section at the botton and 3rd Q&A.
Charlie, could you check if this workaround will shoot the problem?

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From mateusz at loskot.net  Tue Aug 28 19:54:09 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Msys Sed error
In-Reply-To: <46D4B503.30309@loskot.net>
References: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>	<46D3BF4D.7060305@savagexi.com>	<46D4A84C.9080005@loskot.net>	<46D4A93E.4060505@savagexi.com>
	<46D4B503.30309@loskot.net>
Message-ID: <46D4B5A1.1020706@loskot.net>

Mateusz Loskot wrote:
> Here I've found something interesting:
> http://svn.navi.cx/misc/abandoned/opencombat/README.MINGW32
> check "Troubleshooting" section at the botton and 3rd Q&A.
> Charlie, could you check if this workaround will shoot the problem?

Another possible problem related to EOL characters is there
may be an empty line somewhere in configure.in or related scripts
and this empty line includes EOL character not well supported by msys.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From mateusz at loskot.net  Tue Aug 28 20:03:15 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Updated SWIG bindings
In-Reply-To: <46D4AB05.4010202@savagexi.com>
References: <46D4AB05.4010202@savagexi.com>
Message-ID: <46D4B7C3.70103@loskot.net>

Charlie Savage wrote:
> I also added a geos_ruby project to Mateusz VC++ solution (and fixed
> a minor #include bug when building the C API with VC++).

Charlie,

Great job, thanks!

> Its a bit grungy in that I hard coded the path to my Ruby compiler,
> but it should be good enough to get someone started. Also note it
> creates a file called geos.dll which of course can be quite confusing
> but is required by the way Ruby loads libraries.  Thus the built DLL
> is kept under msvc/geos_ruby/debug instead of msvc/debug to avoid any
> confusion.

OK

> If there is interest I can do the same for python.  But I'm not sure
> how much those bindings are used versus the hand-crafted ones from
> Sean and Hobu (kind of silly having 2 sets of bindings if you ask me,
> but alas).

I don't know too.

> I also updated the tests a bit, but I'm a bit confused by what is
> what these days.  I see Mateusz added a bunch of unit tests (great) -
> but how do those relate to the older xml tests?

Unit tests and XML tests complement each other.
The idea is to develop unit tests (based on JTS tests) as the first fire
wall shooting potential problems.
XML tests are mostly used to test performance and very specific test
cases, modifiable on purpose.

That's my understanding :-)

> The nice thing about the xml tests is that the Ruby code could read
> them in, run the tests, and verify the results.  Obviously that
> duplicates the C code testing itself, but I think its still a good
> test of the bindings and memory management through the c api.

I believe there is no problem with that.
Unit tests mostly cover C++ API so far, so if bindings will test GEPS by
calling C API, that's wonderful.

> Last - when using the bindings from Ruby (or Python) the lack of a 
> Coordinate object is fairly annoying - particularly when dealing with
>  points. Any chance it can be exposed via the c api?

Could you draw some requirements necessary to fulfill by an object
exposed to ruby?
I believe there should be no problem, if it won't break simplicity and
C-nature of the GEOS C API.

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From hobu.inc at gmail.com  Tue Aug 28 20:39:44 2007
From: hobu.inc at gmail.com (Howard Butler)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Updated SWIG bindings
In-Reply-To: <3014F028-9E66-4BF2-BF1D-A10A594A6E6B@gmail.com>
References: <46D4AB05.4010202@savagexi.com>
	<3014F028-9E66-4BF2-BF1D-A10A594A6E6B@gmail.com>
Message-ID: <DF31CB4A-F7F3-4306-BD82-EBAC4174B2FC@gmail.com>


On Aug 28, 2007, at 6:30 PM, Howard Butler wrote:

>
> On Aug 28, 2007, at 6:08 PM, Charlie Savage wrote:
>
>> If there is interest I can do the same for python.  But I'm not  
>> sure how much those bindings are used versus the hand-crafted ones  
>> from Sean and Hobu (kind of silly having 2 sets of bindings if you  
>> ask me, but alas).
>
> Two?  More like five... shapely, PCL, GeoDjango, GDAL, and GEOS' :)

Oops, forgot MapScript.  Make that six :)

From cfis at savagexi.com  Tue Aug 28 21:44:42 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Updated SWIG bindings
In-Reply-To: <DF31CB4A-F7F3-4306-BD82-EBAC4174B2FC@gmail.com>
References: <46D4AB05.4010202@savagexi.com>	<3014F028-9E66-4BF2-BF1D-A10A594A6E6B@gmail.com>
	<DF31CB4A-F7F3-4306-BD82-EBAC4174B2FC@gmail.com>
Message-ID: <46D4CF8A.3080001@savagexi.com>

>> Two?  More like five... shapely, PCL, GeoDjango, GDAL, and GEOS' :)
> 
> Oops, forgot MapScript.  Make that six :)

Now the GEOS Python bindings have their own VC++ project though :)

Let me know if you ever want to merge your bindings with the GEOS SWIG 
bindings.  I know SWIG is a bit of a pain, but having both Ruby and 
Python using the same code would be a good thing from a testing 
standpoint.  I made the bindings model the GEOS object hierarchy, so 
they should be fairly natural to use (versus procedural API calls).

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070828/a50848c1/smime.bin
From cfis at savagexi.com  Wed Aug 29 15:00:52 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Proposal to add Coordinate class to c api
In-Reply-To: <46D4B7C3.70103@loskot.net>
References: <46D4AB05.4010202@savagexi.com> <46D4B7C3.70103@loskot.net>
Message-ID: <46D5C264.40309@savagexi.com>

> Could you draw some requirements necessary to fulfill by an object
> exposed to ruby?
> I believe there should be no problem, if it won't break simplicity and
> C-nature of the GEOS C API.

First, expose the coordinate class (I've removed extern and GEOS_DLL for 
readability):

  GEOSCoordinate  *GEOSCoordinate_create(double x, double y, double z);
  GEOSCoordinate  *GEOSCoordinate_clone(const GEOSCoordinate* s);
  void  GEOSCoordinate_destroy(GEOSCoordinate* s);

  char  GEOSCoordinate_equals(GEOSCoordinate* s);

  int  GEOSCoordinate_setX(GEOSCoordinate* s, double val);
  int  GEOSCoordinate_setY(GEOSCoordinate* s, double val);
  int  GEOSCoordinate_setZ(GEOSCoordinate* s, double val);

  int  GEOSCoordinate_getX(const GEOSCoordinate* s, double *val);
  int  GEOSCoordinate_getY(const GEOSCoordinate* s, double *val);
  int  GEOSCoordinate_getZ(const GEOSCoordinate* s, double *val);


Next, update coordinate sequence so that you can:

* Add a coordinate to a coordinate sequence.  Right now there is no way 
to expand a coordinate sequence in the c api which is an extreme limitation.

* Add a getter to coordinate sequence "getCoordinate(size_t index)" that 
returns a coordiante

* Add a getter to point ("getCoordinate()") that returns its coordinate

* Add a method that lets you create a coordinate sequence from a 
coordinate (see next bullet).

* I'd like to change GEOSGeom_createPoint to take a coordinate, not a 
coordinate sequence.  But that would break backward compatibility - so 
maybe a new API?  Or maybe the constructor to create a coordinate 
sequence from a coordinate is good enough.

That should do the trick.

And while on the subject - exposing the envelope class would be helpful 
for working with boundings boxes.  I find it nicer to work with than a 
polygon acting as a bounding box.  Envelope provides niceties like minX, 
minY, expandBy, expandToInclude, etc.

Thanks,

Charlie


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070829/3eb9601a/smime.bin
From cfis at savagexi.com  Thu Aug 30 01:27:28 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Msys Sed error
In-Reply-To: <46D4B503.30309@loskot.net>
References: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>	<46D3BF4D.7060305@savagexi.com>	<46D4A84C.9080005@loskot.net>	<46D4A93E.4060505@savagexi.com>
	<46D4B503.30309@loskot.net>
Message-ID: <46D65540.6040000@savagexi.com>

Ok got it.

> Here I've found something interesting:
> http://svn.navi.cx/misc/abandoned/opencombat/README.MINGW32
> check "Troubleshooting" section at the botton and 3rd Q&A.
> Charlie, could you check if this workaround will shoot the problem?

It wasn't this - but that gave me an idea.

The problem happened when running:

./configure --enable-swig

I tracked it down to geos/macros/ac_pkg_swig.m4, line 76:

                         else
                                 AC_MSG_NOTICE([SWIG executable is '$SWIG'])
                                 SWIG_LIB=`$SWIG -swiglib`
                                 AC_MSG_NOTICE([SWIG library directory 
is '$SWIG_LIB'])


$ swig -swiglib
C:\Development\msys\local\bin\Lib
C:/Development/msys/local/share/swig/1.3.31

Which makes sed unhappy. For comparison on Linux:

On linux:

[cfis@orthoceras ~]$ swig -swiglib
/usr/share/swig/1.3.31


I didn't see much use for including this information in the config 
output, so I simply deleted the offending code and the problem went 
aways.  Phew.

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070829/40ad3b8f/smime.bin
From cfis at savagexi.com  Thu Aug 30 01:30:44 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
Message-ID: <46D65604.30109@savagexi.com>

This patch from Mark does not work as intended:

http://lists.refractions.net/pipermail/geos-devel/2007-February/002816.html

If you have Python, then --enable-python will *always* be considered 
true, even if you say --disable-python.  Thus ./configure will always go 
out and query the python executable for path info and such.  And I 
assume build the bindings also, although I haven't verified that.

So this is a better situation that what the patch is trying to fix 
(python is run even if you don't have python), but is hardly ideal.

I'm not an autoconf expert, so I leave it to someone else to fix.

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070829/d76a2164/smime.bin
From cfis at savagexi.com  Thu Aug 30 02:23:15 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Another Python/Makefile issue
Message-ID: <46D66253.6030300@savagexi.com>

I'm seeing this bug in python support:

  > swig/python/Makefile.am:16: `pkgpyexec_LTLIBRARIES' is used but
`pkgpyexecdir' is undefined
  > swig/python/Makefile.am:16:
  > swig/python/Makefile.am:16: The usual way to define `pkgpyexecdir' is
to add `AM_PATH_PYTHON'
  > swig/python/Makefile.am:16: to `configure.in' and run `aclocal' and
`autoconf' again.
  > swig/python/Makefile.am:15: `pkgpython_PYTHON' is used but
`pkgpythondir' is undefined


Strk - you previously mentioned you fixed this:

http://geos.refractions.net/pipermail/geos-devel/2007-January/002779.html

Except its still happening, at least on msys.  Thoughts?

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/ae6c6753/smime.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 30 02:46:51 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <46D65604.30109@savagexi.com>
References: <46D65604.30109@savagexi.com>
Message-ID: <1188456411.5615.18.camel@mca-desktop>

On Wed, 2007-08-29 at 23:30 -0600, Charlie Savage wrote:
> This patch from Mark does not work as intended:
> 
> http://lists.refractions.net/pipermail/geos-devel/2007-February/002816.html
> 
> If you have Python, then --enable-python will *always* be considered 
> true, even if you say --disable-python.  Thus ./configure will always go 
> out and query the python executable for path info and such.  And I 
> assume build the bindings also, although I haven't verified that.
> 
> So this is a better situation that what the patch is trying to fix 
> (python is run even if you don't have python), but is hardly ideal.
> 
> I'm not an autoconf expert, so I leave it to someone else to fix.
> 
> Charlie


Hi Charlie,

Ah I see... it wasn't that the patch didn't work as intended, it was
that the actual python test macro was run regardless of whatever
command-line option was specified due to its position in the script.
Duh.

Looking at the logic in the configure.in file, the logic looks strange
anyway since even if swig is not found, it still continues to check for
Python & Ruby. My thoughts are to reformat whats already there and
replace it with new logic that should go something like this:


	(SWIG check enabled by default)
	If SWIG is found then
		If Python enabled then
			Check for Python
			If Python is found then
				use_python = true
			Else
				use_python = false
			End If
		Else
			use_python = false
		End If

		If Ruby enabled then
			Check for Ruby
			If Ruby is found then
				use_ruby = true
			Else
				use_ruby = false
			End If
		Else
			use_ruby = false
		End If
	End If


If you're happy with this, let me know, and I'll post something later
today as it should only take a few mins to fix.

BTW I've seen some of your other PostGIS related postings, but am
currently extremely busy - they look interesting and I hope to review
them soon.


ATB,

Mark. 

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From cfis at savagexi.com  Thu Aug 30 02:55:52 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <1188456411.5615.18.camel@mca-desktop>
References: <46D65604.30109@savagexi.com>
	<1188456411.5615.18.camel@mca-desktop>
Message-ID: <46D669F8.7080206@savagexi.com>

Hi Mark,
> 	(SWIG check enabled by default)
> 	If SWIG is found then
> 		If Python enabled then
> 			Check for Python
> 			If Python is found then
> 				use_python = true
> 			Else
> 				use_python = false
> 			End If
> 		Else
> 			use_python = false
> 		End If
> 
> 		If Ruby enabled then
> 			Check for Ruby
> 			If Ruby is found then
> 				use_ruby = true
> 			Else
> 				use_ruby = false
> 			End If
> 		Else
> 			use_ruby = false
> 		End If
> 	End If
> 

> If you're happy with this, let me know, and I'll post something later
> today as it should only take a few mins to fix.

That would be great - thanks for looking.  If you have the 
time/inclination to look at the other Python automake error I'm seeing 
(see other email) I would be grateful.

> BTW I've seen some of your other PostGIS related postings, but am
> currently extremely busy - they look interesting and I hope to review
> them soon.

No problem, I'll be around...

Charlie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/4bcb53a6/smime.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 30 03:21:55 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <46D669F8.7080206@savagexi.com>
References: <46D65604.30109@savagexi.com>
	<1188456411.5615.18.camel@mca-desktop> <46D669F8.7080206@savagexi.com>
Message-ID: <1188458515.5615.26.camel@mca-desktop>

On Thu, 2007-08-30 at 00:55 -0600, Charlie Savage wrote:

> That would be great - thanks for looking.  If you have the 
> time/inclination to look at the other Python automake error I'm seeing 
> (see other email) I would be grateful.

Actually... am I right in thinking that SWIG is only needed if
--enable-python or --enable-ruby is specified? In which case perhaps the
following would be better:


If Python Or Ruby Enabled Then
	If Detect SWIG Then
		If Python Enabled Then
			Check For Python
			If Python is found Then
				use_python = true
			Else
				use_python = false
			End If
		Else
			use_python = false
		End If

		If Ruby Enabled Then
			Check For Ruby
			If Ruby is found Then
				use_ruby = true
			Else
				use_ruby = false
			End If
		Else
			use_ruby = false
		End If
	Else
		use_python = false
		use_ruby = false
	End If
Else
	use_python = false
	use_ruby = false
End If


And then we could just ignore the --enable/disable-swig switch
completely. This strikes me as being a much better solution since the
SWIG detection is handled automatically.


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From cfis at savagexi.com  Thu Aug 30 04:20:19 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <1188458515.5615.26.camel@mca-desktop>
References: <46D65604.30109@savagexi.com>	<1188456411.5615.18.camel@mca-desktop>
	<46D669F8.7080206@savagexi.com>
	<1188458515.5615.26.camel@mca-desktop>
Message-ID: <46D67DC3.1010101@savagexi.com>

> Actually... am I right in thinking that SWIG is only needed if
> --enable-python or --enable-ruby is specified? 

Good point.

Yes and no.  Remember that we check the SWIG wrapper files into SVN so 
that users don't have to recreate them (it also avoids supporting 
different versions of SWIG which I think is non-tenable).

So in theory (but this doesn't work in reality) its valid to say:

--disable-swig --enable-ruby --enable-python

And generate the bindings using the checked-in wrappers.  And in fact, 
this should be the default

Obviously that's not very clear.  So what I would prefer is:

* Keep --enable-ruby and --enable-python
* Get rid of --enable-swig/-disable-swig
* Add a new parameter called --regenerate-swig-wrappers

So the logic is:

If Python Or Ruby Enabled Then
	If regenerate wrappers
            If detect SWIG
               regenerate-swig-wrappers = true
            else
               regenerate-swig-wrappers = false
            end
         end

         If Python Enabled Then
		Check For Python
		If Python is found Then
			use_python = true
		Else
			use_python = false
		End If
	Else
		use_python = false
	End If

	If Ruby Enabled Then
		Check For Ruby
		If Ruby is found Then
			use_ruby = true
		Else
			use_ruby = false
		End If
	Else
		use_ruby = false
	End If
Else
	use_python = false
	use_ruby = false
End If

Does that make sense?

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/d1888b28/smime.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 30 13:11:02 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <46D67DC3.1010101@savagexi.com>
References: <46D65604.30109@savagexi.com>
	<1188456411.5615.18.camel@mca-desktop> <46D669F8.7080206@savagexi.com>
	<1188458515.5615.26.camel@mca-desktop> <46D67DC3.1010101@savagexi.com>
Message-ID: <1188493862.5754.7.camel@mca-desktop>

On Thu, 2007-08-30 at 02:20 -0600, Charlie Savage wrote:
> > Actually... am I right in thinking that SWIG is only needed if
> > --enable-python or --enable-ruby is specified? 
> 
> Good point.
> 
> Yes and no.  Remember that we check the SWIG wrapper files into SVN so 
> that users don't have to recreate them (it also avoids supporting 
> different versions of SWIG which I think is non-tenable).
> 
> So in theory (but this doesn't work in reality) its valid to say:
> 
> --disable-swig --enable-ruby --enable-python
> 
> And generate the bindings using the checked-in wrappers.  And in fact, 
> this should be the default
> 
> Obviously that's not very clear.  So what I would prefer is:
> 
> * Keep --enable-ruby and --enable-python
> * Get rid of --enable-swig/-disable-swig
> * Add a new parameter called --regenerate-swig-wrappers
> 
> So the logic is:
> 
> If Python Or Ruby Enabled Then
> 	If regenerate wrappers
>             If detect SWIG
>                regenerate-swig-wrappers = true
>             else
>                regenerate-swig-wrappers = false
>             end
>          end
> 
>          If Python Enabled Then
> 		Check For Python
> 		If Python is found Then
> 			use_python = true
> 		Else
> 			use_python = false
> 		End If
> 	Else
> 		use_python = false
> 	End If
> 
> 	If Ruby Enabled Then
> 		Check For Ruby
> 		If Ruby is found Then
> 			use_ruby = true
> 		Else
> 			use_ruby = false
> 		End If
> 	Else
> 		use_ruby = false
> 	End If
> Else
> 	use_python = false
> 	use_ruby = false
> End If
> 
> Does that make sense?
> 
> Charlie


Hi Charlie,

I think so - however I'm still confused as to why you need the
--regenerate-swig-wrappers option? Can this not be handled as a standard
make target, i.e. regeneration becomes dependent upon the timestamp of
geos.i / geos.i.in?


Kind regards,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From cfis at savagexi.com  Thu Aug 30 13:23:59 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <1188493862.5754.7.camel@mca-desktop>
References: <46D65604.30109@savagexi.com>	<1188456411.5615.18.camel@mca-desktop>
	<46D669F8.7080206@savagexi.com>	<1188458515.5615.26.camel@mca-desktop>
	<46D67DC3.1010101@savagexi.com>
	<1188493862.5754.7.camel@mca-desktop>
Message-ID: <46D6FD2F.6040109@savagexi.com>

> Hi Charlie,
> 
> I think so - however I'm still confused as to why you need the
> --regenerate-swig-wrappers option? Can this not be handled as a standard
> make target, i.e. regeneration becomes dependent upon the timestamp of
> geos.i / geos.i.in?

Hi Mark,

The reason we check in the SWIG generated wrappers is:

* To avoid the user having to install SWIG
* For the MSVC++ build - if you don't include the wrappers then users 
have to install SWIG and manually create the wrappers themselves from 
the command line
* You have to use SWIG 1.3.28 or higher, which when we did this a year 
and a half ago was not the version shipped with most Linux distros. 
That has probably changed by now.

Probably the strongest argument is to include the wrappers is MSVC++.

So the logic would be:

If swig installed swig version >= 1.3.28
   Regenerate the wrappers
Else
   Use pre-generated wrappers
End

Then you'd need to set some flag so that the makefiles in swig/ruby and 
swig/python know whether to run SWIG or not.  Currently that is done via 
--enable-swig.  I was thinking --regenerate-swig-wrappers might be more 
clear, but perhaps not.

But in the end, --enable-ruby --enable-python should build the bindings 
whether SWIG is installed or not.

Is that more clear?

Charlie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/129672dc/smime.bin
From cfis at savagexi.com  Thu Aug 30 13:55:04 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] timeval.h simplification
Message-ID: <46D70478.3040507@savagexi.com>

Getting MingW/Msys to work requires changing profile.h and timeval.h.  A 
couple of years ago we added timeval.h since MingW did not include the 
gettimeofday function.  However, this function was added to MingW last 
summer so now the build blows up.

This comes into play in profiler.h, which has this rather obscure logic:

#ifndef _MSC_VER
#  include <sys/time.h>
#endif
#include <geos/timeval.h>

And then geos/timeval.h checks again for _MSC_VER, and if it is not set 
  then sys/time.h is included.

I simplified this to:

#ifdef _MSC_VER
#include <geos/timeval.h>
#else
#include <sys/time.h>
#endif

And removed the extra checking in geos/timeval.h.

So the rule is:

* If using MSCV++ include geos/timval.h
* If not, include sys/time.h

I have verified this works on MSYS and MSVC++ and am planning to check 
the change in unless someone objects.

Thanks,

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/e0e53d1f/smime.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 30 16:07:08 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] timeval.h simplification
In-Reply-To: <46D70478.3040507@savagexi.com>
References: <46D70478.3040507@savagexi.com>
Message-ID: <1188504428.5754.10.camel@mca-desktop>

On Thu, 2007-08-30 at 11:55 -0600, Charlie Savage wrote:
> Getting MingW/Msys to work requires changing profile.h and timeval.h.  A 
> couple of years ago we added timeval.h since MingW did not include the 
> gettimeofday function.  However, this function was added to MingW last 
> summer so now the build blows up.
> 
> This comes into play in profiler.h, which has this rather obscure logic:
> 
> #ifndef _MSC_VER
> #  include <sys/time.h>
> #endif
> #include <geos/timeval.h>
> 
> And then geos/timeval.h checks again for _MSC_VER, and if it is not set 
>   then sys/time.h is included.
> 
> I simplified this to:
> 
> #ifdef _MSC_VER
> #include <geos/timeval.h>
> #else
> #include <sys/time.h>
> #endif
> 
> And removed the extra checking in geos/timeval.h.
> 
> So the rule is:
> 
> * If using MSCV++ include geos/timval.h
> * If not, include sys/time.h
> 
> I have verified this works on MSYS and MSVC++ and am planning to check 
> the change in unless someone objects.

Ah. My MingW build system is built on version 4 which doesn't have the
functions built in :(  Perhaps there needs to be an autoconf test for
this?


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From cfis at savagexi.com  Thu Aug 30 16:16:36 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] timeval.h simplification
In-Reply-To: <1188504428.5754.10.camel@mca-desktop>
References: <46D70478.3040507@savagexi.com>
	<1188504428.5754.10.camel@mca-desktop>
Message-ID: <46D725A4.6020801@savagexi.com>

> Ah. My MingW build system is built on version 4 which doesn't have the
> functions built in :(  Perhaps there needs to be an autoconf test for
> this?

Hi Mark,

Gah - I just checked in those changes so I broke your build.  Sorry 
about that.  Want to upgrade mingw :)

Seems like an autoconf test is the way to go then.

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/b09340c4/smime.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 30 17:31:43 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <46D6FD2F.6040109@savagexi.com>
References: <46D65604.30109@savagexi.com>
	<1188456411.5615.18.camel@mca-desktop> <46D669F8.7080206@savagexi.com>
	<1188458515.5615.26.camel@mca-desktop> <46D67DC3.1010101@savagexi.com>
	<1188493862.5754.7.camel@mca-desktop> <46D6FD2F.6040109@savagexi.com>
Message-ID: <1188509503.5754.19.camel@mca-desktop>

On Thu, 2007-08-30 at 11:23 -0600, Charlie Savage wrote:

> But in the end, --enable-ruby --enable-python should build the bindings 
> whether SWIG is installed or not.
> 
> Is that more clear?
> 
> Charlie

I think so. Here's a patch for you to play with - make sure you have a
relatively recent version of autotools installed and run the autogen.sh
script.

By default, configure will not attempt to build the python or ruby
wrappers unless they are specifically enabled with --enable-python or
--enable-ruby. I have left the Makefiles in swig/python and swig/ruby as
they were so standard make rules should apply - so if geos_wrap.cxx
already exists and the timestamp is later than geos.i then the existing
(checked in) wrappers should be used. Otherwise updating geos.i should
cause the corresponding wrappers to be rebuilt upon the next make,
although I'm having trouble testing this as I only have an old version
of SWIG :(

One more thing - I also tweaked the Ruby macro so that the build fails
if the Ruby executable isn't found. Since the user is explicitly trying
to build with --enable-ruby, it seems silly to push on regardless if the
ruby interpreter isn't found.


HTH,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk

-------------- next part --------------
A non-text attachment was scrubbed...
Name: geos-autoconf.patch
Type: text/x-patch
Size: 3776 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/b94d6369/geos-autoconf.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 30 17:41:50 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Another Python/Makefile issue
In-Reply-To: <46D66253.6030300@savagexi.com>
References: <46D66253.6030300@savagexi.com>
Message-ID: <1188510110.5754.24.camel@mca-desktop>

On Thu, 2007-08-30 at 00:23 -0600, Charlie Savage wrote:
> I'm seeing this bug in python support:
> 
>   > swig/python/Makefile.am:16: `pkgpyexec_LTLIBRARIES' is used but
> `pkgpyexecdir' is undefined
>   > swig/python/Makefile.am:16:
>   > swig/python/Makefile.am:16: The usual way to define `pkgpyexecdir' is
> to add `AM_PATH_PYTHON'
>   > swig/python/Makefile.am:16: to `configure.in' and run `aclocal' and
> `autoconf' again.
>   > swig/python/Makefile.am:15: `pkgpython_PYTHON' is used but
> `pkgpythondir' is undefined
> 
> 
> Strk - you previously mentioned you fixed this:
> 
> http://geos.refractions.net/pipermail/geos-devel/2007-January/002779.html
> 
> Except its still happening, at least on msys.  Thoughts?
> 
> Charlie

One more thing - the versions of autotools that come with msys are so
old that it isn't worth even bothering to debug this without upgrading
them to the latest versions first. Doing this solved most of my GEOS
problems in one go.

If you don't feel like rolling your own autotoools in msys (but have a
reasonably modern Linux box around), tar/gzip your latest source onto
the linux box, extract and run autogen.sh. Then rebuild the tar.gz and
copy back into msys and run it there.


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From cfis at savagexi.com  Thu Aug 30 17:47:28 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Another Python/Makefile issue
In-Reply-To: <1188510110.5754.24.camel@mca-desktop>
References: <46D66253.6030300@savagexi.com>
	<1188510110.5754.24.camel@mca-desktop>
Message-ID: <46D73AF0.8040605@savagexi.com>



Mark Cave-Ayland wrote:
> On Thu, 2007-08-30 at 00:23 -0600, Charlie Savage wrote:
>> I'm seeing this bug in python support:
>>
>>   > swig/python/Makefile.am:16: `pkgpyexec_LTLIBRARIES' is used but
>> `pkgpyexecdir' is undefined
>>   > swig/python/Makefile.am:16:
>>   > swig/python/Makefile.am:16: The usual way to define `pkgpyexecdir' is
>> to add `AM_PATH_PYTHON'
>>   > swig/python/Makefile.am:16: to `configure.in' and run `aclocal' and
>> `autoconf' again.
>>   > swig/python/Makefile.am:15: `pkgpython_PYTHON' is used but
>> `pkgpythondir' is undefined
>>

> One more thing - the versions of autotools that come with msys are so
> old that it isn't worth even bothering to debug this without upgrading
> them to the latest versions first. Doing this solved most of my GEOS
> problems in one go.

Yes, I played that game last year and got everything up to date.  But in 
the end I nuked my setup and started from scratch since it started 
acting in very strange ways.  Currently I'm using what comes with msys 
and it seems to be working, minus this one issue with the python macros.

Anyway, I assume you mean update the whole suite?  libtool, autoconf, 
automake?  Are the versions under mingwPort good enough 
(http://sourceforge.net/project/showfiles.php?group_id=2435)?

autoconf-2.59-mingwPORT.tar.bz2
automake-1.9.5-mingwPORT.tar.bz2 			libtool-1.5.22-mingwPORT.tar.bz2

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070830/bab437a0/smime.bin
From mark.cave-ayland at ilande.co.uk  Thu Aug 30 17:56:53 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Another Python/Makefile issue
In-Reply-To: <46D73AF0.8040605@savagexi.com>
References: <46D66253.6030300@savagexi.com>
	<1188510110.5754.24.camel@mca-desktop> <46D73AF0.8040605@savagexi.com>
Message-ID: <1188511013.5754.26.camel@mca-desktop>

On Thu, 2007-08-30 at 15:47 -0600, Charlie Savage wrote:

> Anyway, I assume you mean update the whole suite?  libtool, autoconf, 
> automake?  Are the versions under mingwPort good enough 
> (http://sourceforge.net/project/showfiles.php?group_id=2435)?
> 
> autoconf-2.59-mingwPORT.tar.bz2
> automake-1.9.5-mingwPORT.tar.bz2 			libtool-1.5.22-mingwPORT.tar.bz2

Yup that looks fairly reasonable - give them a try and see what
happens :)


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From mark.cave-ayland at ilande.co.uk  Fri Aug 31 02:53:22 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] timeval.h simplification
In-Reply-To: <46D725A4.6020801@savagexi.com>
References: <46D70478.3040507@savagexi.com>
	<1188504428.5754.10.camel@mca-desktop> <46D725A4.6020801@savagexi.com>
Message-ID: <1188543202.5711.3.camel@mca-desktop>

On Thu, 2007-08-30 at 14:16 -0600, Charlie Savage wrote:

> Hi Mark,
> 
> Gah - I just checked in those changes so I broke your build.  Sorry 
> about that.  Want to upgrade mingw :)
> 
> Seems like an autoconf test is the way to go then.
> 
> Charlie


Hi Charlie,

Here's an experimental patch for this. It seems to work for me under
Linux when gettimeofday() is present, but I haven't had a chance to
check in a proper MingW environment. Hopefully this should not affect
your MingW build when applied - as before you'll need to re-run
autogen.sh.


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk

-------------- next part --------------
A non-text attachment was scrubbed...
Name: geos-gettimeofday.patch
Type: text/x-patch
Size: 1152 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070831/57eff7ab/geos-gettimeofday.bin
From cfis at savagexi.com  Fri Aug 31 16:08:11 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] timeval.h simplification
In-Reply-To: <1188543202.5711.3.camel@mca-desktop>
References: <46D70478.3040507@savagexi.com>	<1188504428.5754.10.camel@mca-desktop>
	<46D725A4.6020801@savagexi.com>
	<1188543202.5711.3.camel@mca-desktop>
Message-ID: <46D8752B.2080305@savagexi.com>


> On Thu, 2007-08-30 at 14:16 -0600, Charlie Savage wrote:
> Here's an experimental patch for this. It seems to work for me under
> Linux when gettimeofday() is present, but I haven't had a chance to
> check in a proper MingW environment. Hopefully this should not affect
> your MingW build when applied - as before you'll need to re-run
> autogen.sh.

Mark,

This looks good - it works for me on both msys and msvc++.  I assume 
you'll apply?

Thanks for fixing this.

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070831/3b1f10b9/smime.bin
From cfis at savagexi.com  Fri Aug 31 16:43:00 2007
From: cfis at savagexi.com (Charlie Savage)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <1188509503.5754.19.camel@mca-desktop>
References: <46D65604.30109@savagexi.com>	<1188456411.5615.18.camel@mca-desktop>
	<46D669F8.7080206@savagexi.com>	<1188458515.5615.26.camel@mca-desktop>
	<46D67DC3.1010101@savagexi.com>	<1188493862.5754.7.camel@mca-desktop>
	<46D6FD2F.6040109@savagexi.com>
	<1188509503.5754.19.camel@mca-desktop>
Message-ID: <46D87D54.4010602@savagexi.com>

Mark,

I think there is a mistake in the patch - it *always* disables SWIG. 
 From the patch:

use_swig=false
if test x"$use_python" = xtrue || test x"$use_ruby" = xtrue; then
	AC_PROG_SWIG(1.3.28)
	if test x"$SWIG" = x; then
		use_swig=false
	fi
fi

if test x"$use_swig" = xtrue; then
     SWIG_ENABLE_CXX
     AC_SUBST(SWIG)	
fi
AM_CONDITIONAL(ENABLE_SWIG, [ test x"$use_swig" = xtrue ])



I think the issue is the test against $SWIG.  I changed it to this:

	if test -n x"$SWIG"x; then
		use_swig=true
	fi


And that seemed to do the trick....note my autoconf/bash knowledge is 
next to non-existent so please verify.

> By default, configure will not attempt to build the python or ruby
> wrappers unless they are specifically enabled with --enable-python or
> --enable-ruby. I have left the Makefiles in swig/python and swig/ruby as
> they were so standard make rules should apply - so if geos_wrap.cxx
> already exists and the timestamp is later than geos.i then the existing
> (checked in) wrappers should be used. 

That's a great idea (and blindingly obvious - not sure why it didn't 
occur to me) - except if SWIG was disabled it didn't work.  Before:

if ENABLE_SWIG

geos_wrap.cxx: ../geos.i ruby.i
	$(SWIG) -c++ -ruby -autorename -o $@ $<

else # !ENABLE_SWIG

geos_wrap.cxx:
	@echo "SWIG is disabled, can't build geos_wrap.cxx"
	false

endif # ENABLE_SWIG

Notice the dependency isn't setup correctly if !ENABLE_SWIG. So the 
build would continue on its merry way.  It seems to me if you've 
modified the *.i files and you don't have SWIG, then the build should 
blow up with an appropriate error message.  So I have fixed both the 
python and ruby automake files and checked them in.

> One more thing - I also tweaked the Ruby macro so that the build fails
> if the Ruby executable isn't found. Since the user is explicitly trying
> to build with --enable-ruby, it seems silly to push on regardless if the
> ruby interpreter isn't found.

Sounds good to me.

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070831/46bdc441/smime.bin
From mark.cave-ayland at ilande.co.uk  Fri Aug 31 21:13:50 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] Python/Swig/Configure Bug
In-Reply-To: <46D87D54.4010602@savagexi.com>
References: <46D65604.30109@savagexi.com>
	<1188456411.5615.18.camel@mca-desktop> <46D669F8.7080206@savagexi.com>
	<1188458515.5615.26.camel@mca-desktop> <46D67DC3.1010101@savagexi.com>
	<1188493862.5754.7.camel@mca-desktop> <46D6FD2F.6040109@savagexi.com>
	<1188509503.5754.19.camel@mca-desktop> <46D87D54.4010602@savagexi.com>
Message-ID: <1188609230.20053.3.camel@mca-desktop>

On Fri, 2007-08-31 at 14:43 -0600, Charlie Savage wrote:

> I think the issue is the test against $SWIG.  I changed it to this:
> 
> 	if test -n x"$SWIG"x; then
> 		use_swig=true
> 	fi
> 
> 
> And that seemed to do the trick....note my autoconf/bash knowledge is 
> next to non-existent so please verify.

Yes, you're right there. My version of SWIG was too old to run through
the entire process so this didn't show up in my test builds :(

> > By default, configure will not attempt to build the python or ruby
> > wrappers unless they are specifically enabled with --enable-python or
> > --enable-ruby. I have left the Makefiles in swig/python and swig/ruby as
> > they were so standard make rules should apply - so if geos_wrap.cxx
> > already exists and the timestamp is later than geos.i then the existing
> > (checked in) wrappers should be used. 
> 
> That's a great idea (and blindingly obvious - not sure why it didn't 
> occur to me) - except if SWIG was disabled it didn't work.  Before:
> 
> if ENABLE_SWIG
> 
> geos_wrap.cxx: ../geos.i ruby.i
> 	$(SWIG) -c++ -ruby -autorename -o $@ $<
> 
> else # !ENABLE_SWIG
> 
> geos_wrap.cxx:
> 	@echo "SWIG is disabled, can't build geos_wrap.cxx"
> 	false
> 
> endif # ENABLE_SWIG
> 
> Notice the dependency isn't setup correctly if !ENABLE_SWIG. So the 
> build would continue on its merry way.  It seems to me if you've 
> modified the *.i files and you don't have SWIG, then the build should 
> blow up with an appropriate error message.  So I have fixed both the 
> python and ruby automake files and checked them in.

Looks good from here.


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



From mark.cave-ayland at ilande.co.uk  Fri Aug 31 21:15:29 2007
From: mark.cave-ayland at ilande.co.uk (Mark Cave-Ayland)
Date: Fri Nov  2 20:53:43 2007
Subject: [geos-devel] timeval.h simplification
In-Reply-To: <46D8752B.2080305@savagexi.com>
References: <46D70478.3040507@savagexi.com>
	<1188504428.5754.10.camel@mca-desktop> <46D725A4.6020801@savagexi.com>
	<1188543202.5711.3.camel@mca-desktop> <46D8752B.2080305@savagexi.com>
Message-ID: <1188609329.20053.5.camel@mca-desktop>

On Fri, 2007-08-31 at 14:08 -0600, Charlie Savage wrote:

> Mark,
> 
> This looks good - it works for me on both msys and msvc++.  I assume 
> you'll apply?
> 
> Thanks for fixing this.
> 
> Charlie

Well I don't have GEOS commit privileges, but since it works for you
then I'll test on my older MingW tomorrow. If this works then I'd say go
ahead and commit.


ATB,

Mark.

-- 
ILande - Open Source Consultancy
http://www.ilande.co.uk



