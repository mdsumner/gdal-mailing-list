From ramercer at gmail.com  Sat Mar  1 19:49:52 2008
From: ramercer at gmail.com (Adam Mercer)
Date: Sat Mar  1 19:49:54 2008
Subject: [geos-devel] Having geos 3.0.0 and 2.2.3 installed side by side
Message-ID: <799406d60803011649r4c92c549ked076e773ccd036f@mail.gmail.com>

Hi

I'm trying to install both geos 3.0.0 and 2.2.3 side by side but am
running into problems. I need to keep 2.2.3 as it is needed by the
matplotlib basemap toolkit - it doesn't work with 3.0.0.

Does anyone know of a way to have both versions of geos installed at
the same time, without having to heavily patch the source code?

Cheers

Adam
From mateusz at loskot.net  Sat Mar  1 20:45:22 2008
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sat Mar  1 20:45:31 2008
Subject: [geos-devel] Having geos 3.0.0 and 2.2.3 installed side by side
In-Reply-To: <799406d60803011649r4c92c549ked076e773ccd036f@mail.gmail.com>
References: <799406d60803011649r4c92c549ked076e773ccd036f@mail.gmail.com>
Message-ID: <47CA06B2.5090809@loskot.net>

Adam Mercer wrote:
> Hi
> 
> I'm trying to install both geos 3.0.0 and 2.2.3 side by side but am
> running into problems. I need to keep 2.2.3 as it is needed by the
> matplotlib basemap toolkit - it doesn't work with 3.0.0.
> 
> Does anyone know of a way to have both versions of geos installed at
> the same time, without having to heavily patch the source code?

Adam,

You can install them under different prefix locations
and appropriately configure environment variables (PATH, 
LD_LIBRARY_PATH,etc.) for different client software.

Greetings
-- 
Mateusz Loskot
http://mateusz.loskot.net
From russell at strong.id.au  Mon Mar  3 04:43:36 2008
From: russell at strong.id.au (Russell Strong)
Date: Mon Mar  3 04:41:57 2008
Subject: [geos-devel] bad input data or robustness issue?
Message-ID: <47CBC848.4040206@strong.id.au>

Hi all,

I'm trying to dissect up a bunch of nearly round overlapping polygons, 
ie.. trying to find areas of overlapping radar coverage given a set of 
radar locations and ranges.

However, trying this with a few polygons, testing each case I can think 
of works very well.  Add a few more and I get all sorts of errors including:
* side location conflict
* stuck in endless loop ( due to intersect and difference operations 
that produce the same  polygons as we started with )
* non-noded intersection
* no outgoing dirEdge found

I've included some test code that shows all of these,  ( uncomment 
various tests in main ).  If anyone has some time to run these and 
comment I'd appreciate it.  I've spent 5 solid days on it and I'm out of 
ideas.

it basically works like this:

I keep a link list of "areas" which contain a geometry.  I then compare 
each geometry against each other ( except for self ).  If it intersects, 
I add the intersection and the 2 differences to the list (if they exist) 
and remove the source areas.  I keep going until I've compared every 
area against every other area and found no non-empty intersections.

One other thing that I found was the Overlaps can return true but the 
intersection of the two polygons returns true for isEmpty?!?!?  (I was 
using overlaps instead of intersects in the split_areas comparison)

Thanks,
Russell
-------------- next part --------------
A non-text attachment was scrubbed...
Name: geos-test.tar.bz2
Type: application/x-bzip
Size: 4680 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20080303/3bb57d65/geos-test.tar.bin
From mbdavis at refractions.net  Mon Mar  3 16:16:51 2008
From: mbdavis at refractions.net (Martin Davis)
Date: Mon Mar  3 16:21:51 2008
Subject: [geos-devel] bad input data or robustness issue?
In-Reply-To: <47CBC848.4040206@strong.id.au>
References: <47CBC848.4040206@strong.id.au>
Message-ID: <47CC6AC3.3020100@refractions.net>

As you've noticed, the predicates are not necessarily consistent with 
the overlay operations.  This is because the predicates are exact, 
whereas the overlay operations are approximate (which is unavoidable, 
since they operated in a finite-precision model).

So, don't rely on this in your code. If you determine that two polygons 
overlap, you still have to check for an empty intersection and handle it 
appropriately.  This should only happen when the area of overlap is so 
small as to be negligible, in any case.

Also, try using a limited-precision model.  Round of the numbers in your 
input, and use an explicit PrecisionModel to control the precision of 
the computed output.  This should increase stability.

It might also help if you checked the area of intersections and 
differences and eliminated ones with very small areas (since these 
should be below the accuracy of your input data in any case).

HTH - Martin

Russell Strong wrote:
> Hi all,
>
> I'm trying to dissect up a bunch of nearly round overlapping polygons, 
> ie.. trying to find areas of overlapping radar coverage given a set of 
> radar locations and ranges.
>
> However, trying this with a few polygons, testing each case I can 
> think of works very well.  Add a few more and I get all sorts of 
> errors including:
> * side location conflict
> * stuck in endless loop ( due to intersect and difference operations 
> that produce the same  polygons as we started with )
> * non-noded intersection
> * no outgoing dirEdge found
>
> I've included some test code that shows all of these,  ( uncomment 
> various tests in main ).  If anyone has some time to run these and 
> comment I'd appreciate it.  I've spent 5 solid days on it and I'm out 
> of ideas.
>
> it basically works like this:
>
> I keep a link list of "areas" which contain a geometry.  I then 
> compare each geometry against each other ( except for self ).  If it 
> intersects, I add the intersection and the 2 differences to the list 
> (if they exist) and remove the source areas.  I keep going until I've 
> compared every area against every other area and found no non-empty 
> intersections.
>
> One other thing that I found was the Overlaps can return true but the 
> intersection of the two polygons returns true for isEmpty?!?!?  (I was 
> using overlaps instead of intersects in the split_areas comparison)
>
> Thanks,
> Russell
> ------------------------------------------------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From russell at strong.id.au  Wed Mar  5 04:08:02 2008
From: russell at strong.id.au (Russell Strong)
Date: Wed Mar  5 04:06:19 2008
Subject: [geos-devel] bad input data or robustness issue?
In-Reply-To: <47CC6AC3.3020100@refractions.net>
References: <47CBC848.4040206@strong.id.au> <47CC6AC3.3020100@refractions.net>
Message-ID: <47CE62F2.4090300@strong.id.au>

I've had a look through the c api and it would appear that access to 
precision models is not exposed, unless it's disguised in a way I have 
not recognized.  Am I correct?  Is there some code that someone knows 
about which could give me some *pointers.

Martin Davis wrote:
> As you've noticed, the predicates are not necessarily consistent with 
> the overlay operations.  This is because the predicates are exact, 
> whereas the overlay operations are approximate (which is unavoidable, 
> since they operated in a finite-precision model).
>
> So, don't rely on this in your code. If you determine that two 
> polygons overlap, you still have to check for an empty intersection 
> and handle it appropriately.  This should only happen when the area of 
> overlap is so small as to be negligible, in any case.
>
> Also, try using a limited-precision model.  Round of the numbers in 
> your input, and use an explicit PrecisionModel to control the 
> precision of the computed output.  This should increase stability.
>
> It might also help if you checked the area of intersections and 
> differences and eliminated ones with very small areas (since these 
> should be below the accuracy of your input data in any case).
>
> HTH - Martin
>
> Russell Strong wrote:
>> Hi all,
>>
>> I'm trying to dissect up a bunch of nearly round overlapping 
>> polygons, ie.. trying to find areas of overlapping radar coverage 
>> given a set of radar locations and ranges.
>>
>> However, trying this with a few polygons, testing each case I can 
>> think of works very well.  Add a few more and I get all sorts of 
>> errors including:
>> * side location conflict
>> * stuck in endless loop ( due to intersect and difference operations 
>> that produce the same  polygons as we started with )
>> * non-noded intersection
>> * no outgoing dirEdge found
>>
>> I've included some test code that shows all of these,  ( uncomment 
>> various tests in main ).  If anyone has some time to run these and 
>> comment I'd appreciate it.  I've spent 5 solid days on it and I'm out 
>> of ideas.
>>
>> it basically works like this:
>>
>> I keep a link list of "areas" which contain a geometry.  I then 
>> compare each geometry against each other ( except for self ).  If it 
>> intersects, I add the intersection and the 2 differences to the list 
>> (if they exist) and remove the source areas.  I keep going until I've 
>> compared every area against every other area and found no non-empty 
>> intersections.
>>
>> One other thing that I found was the Overlaps can return true but the 
>> intersection of the two polygons returns true for isEmpty?!?!?  (I 
>> was using overlaps instead of intersects in the split_areas comparison)
>>
>> Thanks,
>> Russell
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>

From mbdavis at refractions.net  Wed Mar  5 11:46:21 2008
From: mbdavis at refractions.net (Martin Davis)
Date: Wed Mar  5 11:42:49 2008
Subject: [geos-devel] bad input data or robustness issue?
In-Reply-To: <47CE62F2.4090300@strong.id.au>
References: <47CBC848.4040206@strong.id.au> <47CC6AC3.3020100@refractions.net>
	<47CE62F2.4090300@strong.id.au>
Message-ID: <47CECE5D.1070103@refractions.net>

Er, well, perhaps not.  Can you use the C++ API instead?  Or else this 
is a project for some GEOS developer...

Russell Strong wrote:
> I've had a look through the c api and it would appear that access to 
> precision models is not exposed, unless it's disguised in a way I have 
> not recognized.  Am I correct?  Is there some code that someone knows 
> about which could give me some *pointers.
>
> Martin Davis wrote:
>> As you've noticed, the predicates are not necessarily consistent with 
>> the overlay operations.  This is because the predicates are exact, 
>> whereas the overlay operations are approximate (which is unavoidable, 
>> since they operated in a finite-precision model).
>>
>> So, don't rely on this in your code. If you determine that two 
>> polygons overlap, you still have to check for an empty intersection 
>> and handle it appropriately.  This should only happen when the area 
>> of overlap is so small as to be negligible, in any case.
>>
>> Also, try using a limited-precision model.  Round of the numbers in 
>> your input, and use an explicit PrecisionModel to control the 
>> precision of the computed output.  This should increase stability.
>>
>> It might also help if you checked the area of intersections and 
>> differences and eliminated ones with very small areas (since these 
>> should be below the accuracy of your input data in any case).
>>
>> HTH - Martin
>>
>> Russell Strong wrote:
>>> Hi all,
>>>
>>> I'm trying to dissect up a bunch of nearly round overlapping 
>>> polygons, ie.. trying to find areas of overlapping radar coverage 
>>> given a set of radar locations and ranges.
>>>
>>> However, trying this with a few polygons, testing each case I can 
>>> think of works very well.  Add a few more and I get all sorts of 
>>> errors including:
>>> * side location conflict
>>> * stuck in endless loop ( due to intersect and difference operations 
>>> that produce the same  polygons as we started with )
>>> * non-noded intersection
>>> * no outgoing dirEdge found
>>>
>>> I've included some test code that shows all of these,  ( uncomment 
>>> various tests in main ).  If anyone has some time to run these and 
>>> comment I'd appreciate it.  I've spent 5 solid days on it and I'm 
>>> out of ideas.
>>>
>>> it basically works like this:
>>>
>>> I keep a link list of "areas" which contain a geometry.  I then 
>>> compare each geometry against each other ( except for self ).  If it 
>>> intersects, I add the intersection and the 2 differences to the list 
>>> (if they exist) and remove the source areas.  I keep going until 
>>> I've compared every area against every other area and found no 
>>> non-empty intersections.
>>>
>>> One other thing that I found was the Overlaps can return true but 
>>> the intersection of the two polygons returns true for isEmpty?!?!?  
>>> (I was using overlaps instead of intersects in the split_areas 
>>> comparison)
>>>
>>> Thanks,
>>> Russell
>>> ------------------------------------------------------------------------ 
>>>
>>>
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel@lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From woodbri at swoodbridge.com  Wed Mar  5 11:51:30 2008
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Wed Mar  5 11:51:00 2008
Subject: [geos-devel] bad input data or robustness issue?
In-Reply-To: <47CECE5D.1070103@refractions.net>
References: <47CBC848.4040206@strong.id.au>
	<47CC6AC3.3020100@refractions.net>	<47CE62F2.4090300@strong.id.au>
	<47CECE5D.1070103@refractions.net>
Message-ID: <47CECF92.6050302@swoodbridge.com>

Would this make a good Google SoC project? I seems like it would be a 
good thing to have in the c-api.

-Steve

Martin Davis wrote:
> Er, well, perhaps not.  Can you use the C++ API instead?  Or else this 
> is a project for some GEOS developer...
> 
> Russell Strong wrote:
>> I've had a look through the c api and it would appear that access to 
>> precision models is not exposed, unless it's disguised in a way I have 
>> not recognized.  Am I correct?  Is there some code that someone knows 
>> about which could give me some *pointers.
>>
>> Martin Davis wrote:
>>> As you've noticed, the predicates are not necessarily consistent with 
>>> the overlay operations.  This is because the predicates are exact, 
>>> whereas the overlay operations are approximate (which is unavoidable, 
>>> since they operated in a finite-precision model).
>>>
>>> So, don't rely on this in your code. If you determine that two 
>>> polygons overlap, you still have to check for an empty intersection 
>>> and handle it appropriately.  This should only happen when the area 
>>> of overlap is so small as to be negligible, in any case.
>>>
>>> Also, try using a limited-precision model.  Round of the numbers in 
>>> your input, and use an explicit PrecisionModel to control the 
>>> precision of the computed output.  This should increase stability.
>>>
>>> It might also help if you checked the area of intersections and 
>>> differences and eliminated ones with very small areas (since these 
>>> should be below the accuracy of your input data in any case).
>>>
>>> HTH - Martin
>>>
>>> Russell Strong wrote:
>>>> Hi all,
>>>>
>>>> I'm trying to dissect up a bunch of nearly round overlapping 
>>>> polygons, ie.. trying to find areas of overlapping radar coverage 
>>>> given a set of radar locations and ranges.
>>>>
>>>> However, trying this with a few polygons, testing each case I can 
>>>> think of works very well.  Add a few more and I get all sorts of 
>>>> errors including:
>>>> * side location conflict
>>>> * stuck in endless loop ( due to intersect and difference operations 
>>>> that produce the same  polygons as we started with )
>>>> * non-noded intersection
>>>> * no outgoing dirEdge found
>>>>
>>>> I've included some test code that shows all of these,  ( uncomment 
>>>> various tests in main ).  If anyone has some time to run these and 
>>>> comment I'd appreciate it.  I've spent 5 solid days on it and I'm 
>>>> out of ideas.
>>>>
>>>> it basically works like this:
>>>>
>>>> I keep a link list of "areas" which contain a geometry.  I then 
>>>> compare each geometry against each other ( except for self ).  If it 
>>>> intersects, I add the intersection and the 2 differences to the list 
>>>> (if they exist) and remove the source areas.  I keep going until 
>>>> I've compared every area against every other area and found no 
>>>> non-empty intersections.
>>>>
>>>> One other thing that I found was the Overlaps can return true but 
>>>> the intersection of the two polygons returns true for isEmpty?!?!?  
>>>> (I was using overlaps instead of intersects in the split_areas 
>>>> comparison)
>>>>
>>>> Thanks,
>>>> Russell
>>>> ------------------------------------------------------------------------ 
>>>>
>>>>
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel@lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
> 

From russell at strong.id.au  Thu Mar  6 05:17:10 2008
From: russell at strong.id.au (Russell Strong)
Date: Thu Mar  6 05:15:30 2008
Subject: [geos-devel] bad input data or robustness issue?
In-Reply-To: <47CECE5D.1070103@refractions.net>
References: <47CBC848.4040206@strong.id.au>
	<47CC6AC3.3020100@refractions.net>	<47CE62F2.4090300@strong.id.au>
	<47CECE5D.1070103@refractions.net>
Message-ID: <47CFC4A6.6050405@strong.id.au>

I've done lots of C and python, never done any C++ programming before, 
looks like I'll be doing some learning.  Can't be too hard, right...

Martin Davis wrote:
> Er, well, perhaps not.  Can you use the C++ API instead?  Or else this 
> is a project for some GEOS developer...
>
> Russell Strong wrote:
>> I've had a look through the c api and it would appear that access to 
>> precision models is not exposed, unless it's disguised in a way I 
>> have not recognized.  Am I correct?  Is there some code that someone 
>> knows about which could give me some *pointers.
>>
>> Martin Davis wrote:
>>> As you've noticed, the predicates are not necessarily consistent 
>>> with the overlay operations.  This is because the predicates are 
>>> exact, whereas the overlay operations are approximate (which is 
>>> unavoidable, since they operated in a finite-precision model).
>>>
>>> So, don't rely on this in your code. If you determine that two 
>>> polygons overlap, you still have to check for an empty intersection 
>>> and handle it appropriately.  This should only happen when the area 
>>> of overlap is so small as to be negligible, in any case.
>>>
>>> Also, try using a limited-precision model.  Round of the numbers in 
>>> your input, and use an explicit PrecisionModel to control the 
>>> precision of the computed output.  This should increase stability.
>>>
>>> It might also help if you checked the area of intersections and 
>>> differences and eliminated ones with very small areas (since these 
>>> should be below the accuracy of your input data in any case).
>>>
>>> HTH - Martin
>>>
>>> Russell Strong wrote:
>>>> Hi all,
>>>>
>>>> I'm trying to dissect up a bunch of nearly round overlapping 
>>>> polygons, ie.. trying to find areas of overlapping radar coverage 
>>>> given a set of radar locations and ranges.
>>>>
>>>> However, trying this with a few polygons, testing each case I can 
>>>> think of works very well.  Add a few more and I get all sorts of 
>>>> errors including:
>>>> * side location conflict
>>>> * stuck in endless loop ( due to intersect and difference 
>>>> operations that produce the same  polygons as we started with )
>>>> * non-noded intersection
>>>> * no outgoing dirEdge found
>>>>
>>>> I've included some test code that shows all of these,  ( uncomment 
>>>> various tests in main ).  If anyone has some time to run these and 
>>>> comment I'd appreciate it.  I've spent 5 solid days on it and I'm 
>>>> out of ideas.
>>>>
>>>> it basically works like this:
>>>>
>>>> I keep a link list of "areas" which contain a geometry.  I then 
>>>> compare each geometry against each other ( except for self ).  If 
>>>> it intersects, I add the intersection and the 2 differences to the 
>>>> list (if they exist) and remove the source areas.  I keep going 
>>>> until I've compared every area against every other area and found 
>>>> no non-empty intersections.
>>>>
>>>> One other thing that I found was the Overlaps can return true but 
>>>> the intersection of the two polygons returns true for isEmpty?!?!?  
>>>> (I was using overlaps instead of intersects in the split_areas 
>>>> comparison)
>>>>
>>>> Thanks,
>>>> Russell
>>>> ------------------------------------------------------------------------ 
>>>>
>>>>
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel@lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>

From warmerdam at pobox.com  Fri Mar 14 13:48:26 2008
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Mar 14 13:48:53 2008
Subject: [geos-devel] Incubation Progress
Message-ID: <47DABA6A.9060003@pobox.com>

Folks,

I've just realized that I am in fact the OSGeo appointed incubation
mentor for the GEOS project.  I have been meaning to prompt for some progress
for a while, but this seems like a good time.

I see two main things that need to be done:

1) Setup project governance.  This will presumably amount to setting up a
Project Steering Committee responsible for approving commiters, approving
major technical changes - perhaps via an RFC process, and making other
major project decisions.  I would be willing to draft an "RFC 1" outlining
this, modelled on the one used by MapServer or GDAL if that would be helpful
(let me know).

One key issue is establishing the initial PSC.  As major stakeholders it
may be desirable to have Safe Software, Autodesk and Ingres represented.
I also assume that Paul will be on it (perhaps chairing?).  There are also
several other contributors that might be reasonable - mostly obviously Ben
Jubb who has done the recent work at Refractions.

2) Provenance Review.  This process is described at:

   http://www.osgeo.org/incubator/process/codereview.html

For GEOS I anticipate this mostly just being a bit tedious because of the
number of files to review, but likely not very hard since there have been
a limited number of contributors, and little use of outside code.  Is there
anyone willing to volunteer for this work?  I would be happy to provide
guideance and support.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org

From mchapman at texelinc.com  Tue Mar 18 16:08:03 2008
From: mchapman at texelinc.com (Martin Chapman)
Date: Tue Mar 18 16:15:05 2008
Subject: [geos-devel] GEOS comment
Message-ID: <000e01c88933$c6404fa0$52c0eee0$@com>

GEOS developers,

 

I just thought I would let you guys/girls know that I have been using geos
from visual c++ on windows xp for a few months and I think your library
totally fricking rocks.  It has been really easy to use, very stable and has
a lot of great functionality.  Keep up the good work.

 

Best regards,

Martin

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20080318/025279e5/attachment.html
From pramsey at cleverelephant.ca  Tue Mar 18 16:49:11 2008
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue Mar 18 16:49:16 2008
Subject: [geos-devel] GEOS comment
In-Reply-To: <000e01c88933$c6404fa0$52c0eee0$@com>
References: <000e01c88933$c6404fa0$52c0eee0$@com>
Message-ID: <30fe546d0803181349t680c029er5fb0035fc0f672f4@mail.gmail.com>

Thanks for that Martin, since most of the feedback is (understandably)
various failure cases, it can seem like the library is fragile
garbage, so hearing from the Silent Majority is a helpful tonic :)

P

On 3/18/08, Martin Chapman <mchapman@texelinc.com> wrote:
>
> I just thought I would let you guys/girls know that I have been using geos
> from visual c++ on windows xp for a few months and I think your library
> totally fricking rocks.  It has been really easy to use, very stable and has
> a lot of great functionality.  Keep up the good work.
>
>
>
> Best regards,
>
> Martin
>
>
> _______________________________________________
>  geos-devel mailing list
>  geos-devel@lists.osgeo.org
>  http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From mchapman at texelinc.com  Tue Mar 18 16:53:22 2008
From: mchapman at texelinc.com (Martin Chapman)
Date: Tue Mar 18 16:53:44 2008
Subject: [geos-devel] GEOS comment
In-Reply-To: <30fe546d0803181349t680c029er5fb0035fc0f672f4@mail.gmail.com>
References: <000e01c88933$c6404fa0$52c0eee0$@com>
	<30fe546d0803181349t680c029er5fb0035fc0f672f4@mail.gmail.com>
Message-ID: <002201c8893a$1b462730$51d27590$@com>

Paul,

GEOS is anything but garbage.  I have used many open source packages and
geos is one of the few I have chosen to depend on.  I understand the bug fix
world and that is exactly why I wanted you guys to know that your work is
really good. :)

Best regards,
Martin

-----Original Message-----
From: geos-devel-bounces@lists.osgeo.org
[mailto:geos-devel-bounces@lists.osgeo.org] On Behalf Of Paul Ramsey
Sent: Tuesday, March 18, 2008 2:49 PM
To: GEOS Development List
Subject: Re: [geos-devel] GEOS comment

Thanks for that Martin, since most of the feedback is (understandably)
various failure cases, it can seem like the library is fragile
garbage, so hearing from the Silent Majority is a helpful tonic :)

P

On 3/18/08, Martin Chapman <mchapman@texelinc.com> wrote:
>
> I just thought I would let you guys/girls know that I have been using geos
> from visual c++ on windows xp for a few months and I think your library
> totally fricking rocks.  It has been really easy to use, very stable and
has
> a lot of great functionality.  Keep up the good work.
>
>
>
> Best regards,
>
> Martin
>
>
> _______________________________________________
>  geos-devel mailing list
>  geos-devel@lists.osgeo.org
>  http://lists.osgeo.org/mailman/listinfo/geos-devel
>
_______________________________________________
geos-devel mailing list
geos-devel@lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/geos-devel

From mbdavis at refractions.net  Tue Mar 18 17:02:15 2008
From: mbdavis at refractions.net (Martin Davis)
Date: Tue Mar 18 17:32:06 2008
Subject: [geos-devel] GEOS comment
In-Reply-To: <000e01c88933$c6404fa0$52c0eee0$@com>
References: <000e01c88933$c6404fa0$52c0eee0$@com>
Message-ID: <47E02DD7.1030300@refractions.net>

Great to hear this positive feedback, Martin.  Inspiration to keep GEOS 
well-polished and up-to-date!

Martin (the JTS guy)

Martin Chapman wrote:
>
> GEOS developers,
>
>  
>
> I just thought I would let you guys/girls know that I have been using 
> geos from visual c++ on windows xp for a few months and I think your 
> library totally fricking rocks.  It has been really easy to use, very 
> stable and has a lot of great functionality.  Keep up the good work.
>
>  
>
> Best regards,
>
> Martin
>
>  
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From geos at billz.fastmail.fm  Wed Mar 19 14:05:27 2008
From: geos at billz.fastmail.fm (Bill Zissimopoulos)
Date: Wed Mar 19 14:11:18 2008
Subject: [geos-devel] Simplifying adjacent polygons
Message-ID: <1205949927.10691.1243299453@webmail.messagingengine.com>

Hello, list:

I am looking for a method to correctly simplify adjacent polygons
without leaving gaps between them or having them intersect after the
simplification. Currently my simple algorithm iterates over my
geometries and feeds them to GEOSTopologyPreserveSimplify separately;
obviously this is inadequate.

Is it possible to correctly simplify adjacent polygons in GEOS? One
technique I have been thinking about is to construct a multi-geometry
with all the geometries in my dataset and pass this multi-geometry to
GEOSTopologySimplify. Even if this worked, I would have to identify the
individual geometries in the resulting multi-geometry since they
represent different features in the original dataset. For example, a
lake polygon and a land polygon next to it would have to be identified
again after simplification so they can be properly rendered.

The solution here might be to abuse slightly the z coordinate to store
tagging information about individual polygons. But I wanted to hear any
comments from the experts on the list before I attempt this.

Your comments will be very much appreciated.

Bill
From chodgson at refractions.net  Wed Mar 19 14:27:13 2008
From: chodgson at refractions.net (Chris Hodgson)
Date: Wed Mar 19 14:29:16 2008
Subject: [geos-devel] Simplifying adjacent polygons
In-Reply-To: <1205949927.10691.1243299453@webmail.messagingengine.com>
References: <1205949927.10691.1243299453@webmail.messagingengine.com>
Message-ID: <47E15B01.6090600@refractions.net>

I think to do this correctly you need to have the concept of a coverage, 
and the simplification algorithm needs to work on the coverage. As it 
simplifies each edge in the coverage, it would need to be aware that the 
edge is part of two faces, and check that it has to maintain the 
validity of both polygons as it simplifies. I think this would be a 
pretty significant development task.

If your polygons aren't too tricky, you might be able to take a simpler 
approach - intersect every polygon with it's neighbors and create a new 
dataset of every line, with 2 additional attributes specifying the IDs 
of the two polygons (faces) that shared that line (edge). Then simplify 
each of these edge lines, and then rebuild your polygons from the 
simplified edge lines. The problem being, there is no guarantee that 
your polygon's topologies haven't been broken by the simplification.

I don't think your multi-geometry approach will work because I don't 
believe that GEOS will treat the geometries inside the multi-geometry 
any differently than if they were simplified separately - as you are 
already doing. I haven't tried it or read the docs so I may be wrong.

HTH.

Chris

Bill Zissimopoulos wrote:
> Hello, list:
> 
> I am looking for a method to correctly simplify adjacent polygons
> without leaving gaps between them or having them intersect after the
> simplification. Currently my simple algorithm iterates over my
> geometries and feeds them to GEOSTopologyPreserveSimplify separately;
> obviously this is inadequate.
> 
> Is it possible to correctly simplify adjacent polygons in GEOS? One
> technique I have been thinking about is to construct a multi-geometry
> with all the geometries in my dataset and pass this multi-geometry to
> GEOSTopologySimplify. Even if this worked, I would have to identify the
> individual geometries in the resulting multi-geometry since they
> represent different features in the original dataset. For example, a
> lake polygon and a land polygon next to it would have to be identified
> again after simplification so they can be properly rendered.
> 
> The solution here might be to abuse slightly the z coordinate to store
> tagging information about individual polygons. But I wanted to hear any
> comments from the experts on the list before I attempt this.
> 
> Your comments will be very much appreciated.
> 
> Bill
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From hugh at photosat.ca  Wed Mar 19 17:21:36 2008
From: hugh at photosat.ca (Hugh Jennings)
Date: Wed Mar 19 16:44:23 2008
Subject: [geos-devel] Apology
Message-ID: <47E183E0.4000705@photosat.ca>

Sorry I did not mean that last email to the list :(

From hugh at photosat.ca  Wed Mar 19 17:20:11 2008
From: hugh at photosat.ca (Hugh Jennings)
Date: Wed Mar 19 18:04:06 2008
Subject: [geos-devel] Broken links on our current website
Message-ID: <47E1838B.10705@photosat.ca>

Helen/Gerry,

I know we are updating the website a friend of mine noted we have 2 
broken links in the business articles section of the site. I checkde and 
the 2003 IT Business and the 1999 IMaging notes links no lnger work.

I will remove the broken links from the current site.

Do we need to find functional links for the new site?

Hugh

From mbdavis at refractions.net  Wed Mar 19 18:21:47 2008
From: mbdavis at refractions.net (Martin Davis)
Date: Wed Mar 19 18:22:20 2008
Subject: [geos-devel] Simplifying adjacent polygons
In-Reply-To: <47E15B01.6090600@refractions.net>
References: <1205949927.10691.1243299453@webmail.messagingengine.com>
	<47E15B01.6090600@refractions.net>
Message-ID: <47E191FB.8020309@refractions.net>

Chris has got it - the GEOS simplify won't do what you want, since it 
only simplies a single feature.  In order to do this, you would need to 
build a single-line coverage, simplify the edges of it, and then rebuild 
your polygons.

Chris Hodgson wrote:
> I think to do this correctly you need to have the concept of a 
> coverage, and the simplification algorithm needs to work on the 
> coverage. As it simplifies each edge in the coverage, it would need to 
> be aware that the edge is part of two faces, and check that it has to 
> maintain the validity of both polygons as it simplifies. I think this 
> would be a pretty significant development task.
>
> If your polygons aren't too tricky, you might be able to take a 
> simpler approach - intersect every polygon with it's neighbors and 
> create a new dataset of every line, with 2 additional attributes 
> specifying the IDs of the two polygons (faces) that shared that line 
> (edge). Then simplify each of these edge lines, and then rebuild your 
> polygons from the simplified edge lines. The problem being, there is 
> no guarantee that your polygon's topologies haven't been broken by the 
> simplification.
>
> I don't think your multi-geometry approach will work because I don't 
> believe that GEOS will treat the geometries inside the multi-geometry 
> any differently than if they were simplified separately - as you are 
> already doing. I haven't tried it or read the docs so I may be wrong.
>
> HTH.
>
> Chris
>
> Bill Zissimopoulos wrote:
>> Hello, list:
>>
>> I am looking for a method to correctly simplify adjacent polygons
>> without leaving gaps between them or having them intersect after the
>> simplification. Currently my simple algorithm iterates over my
>> geometries and feeds them to GEOSTopologyPreserveSimplify separately;
>> obviously this is inadequate.
>>
>> Is it possible to correctly simplify adjacent polygons in GEOS? One
>> technique I have been thinking about is to construct a multi-geometry
>> with all the geometries in my dataset and pass this multi-geometry to
>> GEOSTopologySimplify. Even if this worked, I would have to identify the
>> individual geometries in the resulting multi-geometry since they
>> represent different features in the original dataset. For example, a
>> lake polygon and a land polygon next to it would have to be identified
>> again after simplification so they can be properly rendered.
>>
>> The solution here might be to abuse slightly the z coordinate to store
>> tagging information about individual polygons. But I wanted to hear any
>> comments from the experts on the list before I attempt this.
>>
>> Your comments will be very much appreciated.
>>
>> Bill
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From geos at billz.fastmail.fm  Thu Mar 20 13:03:39 2008
From: geos at billz.fastmail.fm (Bill Zissimopoulos)
Date: Thu Mar 20 13:03:49 2008
Subject: [geos-devel] Simplifying adjacent polygons
Message-ID: <6B4E1EDE-BB33-45A0-829D-5AEF676169BC@billz.fastmail.fm>

Thank you, Chris and Martin, for your answers.

It sounds this is more complicated than I thought. Currently I am  
solving the problem by specifying a smaller than needed  
simplification tolerance. While this is not optimal it (mostly) works.

It certainly would be nice if GEOS implemented such a feature: in  
many applications one wants to simplify multiple polygons that are  
related to each other rather than just individual ones. I may take a  
look at implementing it myself if I find the time in the future.

Bill

From mbdavis at refractions.net  Thu Mar 20 13:30:24 2008
From: mbdavis at refractions.net (Martin Davis)
Date: Thu Mar 20 13:36:39 2008
Subject: [geos-devel] Simplifying adjacent polygons
In-Reply-To: <6B4E1EDE-BB33-45A0-829D-5AEF676169BC@billz.fastmail.fm>
References: <6B4E1EDE-BB33-45A0-829D-5AEF676169BC@billz.fastmail.fm>
Message-ID: <47E29F30.8040204@refractions.net>

Great, have fun!  If you come up with some clever way of doing this, 
please let us know.

Martin

Bill Zissimopoulos wrote:
> Thank you, Chris and Martin, for your answers.
>
> It sounds this is more complicated than I thought. Currently I am 
> solving the problem by specifying a smaller than needed simplification 
> tolerance. While this is not optimal it (mostly) works.
>
> It certainly would be nice if GEOS implemented such a feature: in many 
> applications one wants to simplify multiple polygons that are related 
> to each other rather than just individual ones. I may take a look at 
> implementing it myself if I find the time in the future.
>
> Bill
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From jey at kottalam.net  Tue Mar 25 02:11:37 2008
From: jey at kottalam.net (Jey Kottalam)
Date: Tue Mar 25 02:11:45 2008
Subject: [geos-devel] patch to allow GEOS to build under GCC 4.3.0
Message-ID: <1d1379ca0803242311p386fcbc9u7ecff9d49c7a7911@mail.gmail.com>

Hi,

Attached is a patch to allow GEOS trunk r2123 to build under GCC
4.3.0. This works for me under Linux on i686.

-Jey Kottalam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: geos-r2123-gcc-4.3.0.patch
Type: application/octet-stream
Size: 6181 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20080324/ecc9261a/geos-r2123-gcc-4.3.0.obj
From pramsey at cleverelephant.ca  Tue Mar 25 15:24:03 2008
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue Mar 25 15:24:06 2008
Subject: [geos-devel] patch to allow GEOS to build under GCC 4.3.0
In-Reply-To: <1d1379ca0803242311p386fcbc9u7ecff9d49c7a7911@mail.gmail.com>
References: <1d1379ca0803242311p386fcbc9u7ecff9d49c7a7911@mail.gmail.com>
Message-ID: <30fe546d0803251224r2f6dddc2t4be2c3d97e3fc1e8@mail.gmail.com>

Thanks Jey, could you attach this to an issue in Trac?

Paul

On Mon, Mar 24, 2008 at 11:11 PM, Jey Kottalam <jey@kottalam.net> wrote:
> Hi,
>
>  Attached is a patch to allow GEOS trunk r2123 to build under GCC
>  4.3.0. This works for me under Linux on i686.
>
>  -Jey Kottalam
>
> _______________________________________________
>  geos-devel mailing list
>  geos-devel@lists.osgeo.org
>  http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From jey at kottalam.net  Tue Mar 25 16:45:41 2008
From: jey at kottalam.net (Jey Kottalam)
Date: Tue Mar 25 16:45:42 2008
Subject: [geos-devel] patch to allow GEOS to build under GCC 4.3.0
In-Reply-To: <30fe546d0803251224r2f6dddc2t4be2c3d97e3fc1e8@mail.gmail.com>
References: <1d1379ca0803242311p386fcbc9u7ecff9d49c7a7911@mail.gmail.com>
	<30fe546d0803251224r2f6dddc2t4be2c3d97e3fc1e8@mail.gmail.com>
Message-ID: <1d1379ca0803251345k1b610858v2d9d9073ae6bcbdc@mail.gmail.com>

Oops, done! http://trac.osgeo.org/geos/ticket/178

-Jey Kottalam

On Tue, Mar 25, 2008 at 12:24 PM, Paul Ramsey <pramsey@cleverelephant.ca> wrote:
> Thanks Jey, could you attach this to an issue in Trac?
>
>  Paul
>
>
>
>  On Mon, Mar 24, 2008 at 11:11 PM, Jey Kottalam <jey@kottalam.net> wrote:
>  > Hi,
>  >
>  >  Attached is a patch to allow GEOS trunk r2123 to build under GCC
>  >  4.3.0. This works for me under Linux on i686.
>  >
>  >  -Jey Kottalam
>  >
>  > _______________________________________________
>  >  geos-devel mailing list
>  >  geos-devel@lists.osgeo.org
>  >  http://lists.osgeo.org/mailman/listinfo/geos-devel
>  >
>  _______________________________________________
>  geos-devel mailing list
>  geos-devel@lists.osgeo.org
>  http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From swongu at gmail.com  Mon Mar 31 18:23:46 2008
From: swongu at gmail.com (Stephen Wong)
Date: Mon Mar 31 18:23:48 2008
Subject: [geos-devel] [Buffer] Assertion failure causes crash in
	RightmostEdgeFinder::findEdge()
Message-ID: <633230220803311523y42293a94yc617418d6d34fddd@mail.gmail.com>

Hello,

I have been using the geos library for buffer functions and found a crash
case.  When I stepped into the code, I found that
RightmostEdgeFinder::findEdge() crashes when no forward DirectedEdge is
input into the function.  The function crashes because of a null pointer
reference error (minDe=0x0) later in the code.  The assertion failure that
catches this is on line 77:

assert(checked>0);


Is this case supposed to be possible?  I also found that
BufferSubgraph::create()
calls findEdge(), and a comment in the code says that "We are assuming that
dirEdgeList contains *at least* ONE forward DirectedEdge".  Again, what
happens if the DirectedEdge list does not?  I don't think it should crash...

Thanks,

Stephen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20080331/8371c5d5/attachment.html
