From mwtoews at gmail.com  Tue Dec  1 01:47:31 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 1 Dec 2020 22:47:31 +1300
Subject: [geos-devel] MSVC Unit Failure
In-Reply-To: <858C14AA-0AB7-435D-9651-72632BBB1549@cleverelephant.ca>
References: <E6117FFE-F947-4CE1-ACA8-E0894DA9381E@cleverelephant.ca>
 <C9B2A46F-AA95-4F67-B13F-970927D7B555@cleverelephant.ca>
 <CAM2FmMpKWCnOUV-Qmy9CoNVLHgLtD5Qdnuy4PJyhgK+R4UOT+g@mail.gmail.com>
 <858C14AA-0AB7-435D-9651-72632BBB1549@cleverelephant.ca>
Message-ID: <CAM2FmMo1EF9cQ1tRSkropCg0UYAJQ9W0u766=GQKcrzJqtrQFQ@mail.gmail.com>

This issue is very tricky. Running the command from a local Windows build:
> test_geos_unit "geos::simplify::TopologyPreservingSimplifier"

will mostly fail (showing "tests summary: failures:1 ok:14"), but
occasionally pass (showing "tests summary: ok:15"), with a pass/fail
ratio close to 1:8. This type of random behaviour can only be
explained by a memory error, but is only an issue with Windows.
(Running the command on Linux with valgrind shows "All heap blocks
were freed -- no leaks are possible")

Looking at the AppVeyor history is slightly revealing:
https://ci.appveyor.com/project/dbaston/geos/history

The first captured instance of this issue was 4 months ago on the
overlay-sr branch:
https://ci.appveyor.com/project/dbaston/geos/builds/34227033/job/pq00xb0pirk5xpe9#L1032

It likely existed before this commit, up to (but not beyond) 6 months
ago, but was obscured by a different preceding error. Nevertheless, it
seems to have originated somewhere in the overlay-sr branch?

From geos-trac at osgeo.org  Tue Dec  1 08:36:46 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 01 Dec 2020 16:36:46 -0000
Subject: [geos-devel] [GEOS] #320: factory for std::vector
In-Reply-To: <046.9f3454cb20d73001852c91e7c45080bc@osgeo.org>
References: <046.9f3454cb20d73001852c91e7c45080bc@osgeo.org>
Message-ID: <061.83716425f0eda89103fdbd3562b46460@osgeo.org>

#320: factory for std::vector
------------------------+---------------------------
 Reporter:  12345678    |       Owner:  geos-devel@?
     Type:  task        |      Status:  closed
 Priority:  major       |   Milestone:  GEOS Fund Me
Component:  Default     |     Version:  3.2.0
 Severity:  Unassigned  |  Resolution:  duplicate
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => duplicate


Comment:

 See #1050

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/320#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From andrew.d.hershberger at gmail.com  Tue Dec  1 10:48:30 2020
From: andrew.d.hershberger at gmail.com (Andrew Hershberger)
Date: Tue, 1 Dec 2020 12:48:30 -0600
Subject: [geos-devel] 3.9.0beta + GEOSwift + Linux
In-Reply-To: <CACZW30PyL2jU7WTxJqr5XnOB9OaufHDjjGqmUOZmFCPQNLju4A@mail.gmail.com>
References: <CACZW30PS7SUpxbscn8AWFP70VF+251i8XdLgKQ6yJ1e9sFir9g@mail.gmail.com>
 <B253D9B9-DB88-4B6C-89E5-4347BD76E6B2@cleverelephant.ca>
 <CACZW30PWXTM-tjWAB3gnTVuyv_1OkrtPCFqHhqyjFg8RJa2z_A@mail.gmail.com>
 <CACZW30PyL2jU7WTxJqr5XnOB9OaufHDjjGqmUOZmFCPQNLju4A@mail.gmail.com>
Message-ID: <CACZW30PXvV+j2yOYufT7RFzHpq9Vp10P+n9cG=NfrcmFLNXX4Q@mail.gmail.com>

In case anyone is interested, here's the thread I started on the Swift
forums: https://forums.swift.org/t/confused-about-cxxlanguagestandard/42402

On Tue, Dec 1, 2020 at 12:13 AM Andrew Hershberger <
andrew.d.hershberger at gmail.com> wrote:

> Seems like the macOS builds are getting their <vector> from llvm's libc++
> but that the build in the Swift Docker container is using the GNU C++.
> LLVM's vector
> (Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/vector)
> imports algorithm. The GNU C++ version doesn't (at least not directly). I
> find this Swift Package Manager behavior on Linux strange because the
> GEOSwift/geos package definition specifically requests "cxx11" (as opposed
> to "gnucxx11"). I'll see whether someone from the Swift team can shed
> some light on what's going on here.
>
> On Mon, Nov 30, 2020 at 11:40 PM Andrew Hershberger <
> andrew.d.hershberger at gmail.com> wrote:
>
>> That works. I had to add it to KdTree.cpp as well. Agree that it's
>> strange.
>>
>> On Mon, Nov 30, 2020 at 9:17 PM Paul Ramsey <pramsey at cleverelephant.ca>
>> wrote:
>>
>>>
>>>
>>> > On Nov 30, 2020, at 7:15 PM, Andrew Hershberger <
>>> andrew.d.hershberger at gmail.com> wrote:
>>> >
>>> > Found another issue with the beta when testing GEOSwift on Linux
>>> (specifically, compiling in a Docker container using the Swift Docker
>>> image). Here's what I'm doing:
>>> >
>>> > $ sudo docker run -it --rm swift /bin/bash
>>> > # cd home
>>> > # git clone https://github.com/GEOSwift/GEOSwift.git
>>> > # cd GEOSwift
>>> > # git checkout geos-3.9.0-testing
>>> > # swift test --enable-test-discovery -v
>>> >
>>> > Among other things, this yields the following line for LineLimiter.cpp:
>>> >
>>> > /usr/bin/clang -target x86_64-unknown-linux-gnu -fPIC -g -O0
>>> -DSWIFT_PACKAGE=1 -DDEBUG=1 -fblocks -fmodules -fmodule-name=geos -I
>>> /home/GEOSwift/.build/checkouts/geos/Sources/geos/public
>>> -fmodules-cache-path=/home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/ModuleCache
>>> -DUSE_UNSTABLE_GEOS_CPP_API
>>> -I/home/GEOSwift/.build/checkouts/geos/Sources/geos/include -MD -MT
>>> dependencies -MF
>>> /home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/geos.build/src/operation/overlayng/LineLimiter.cpp.d
>>> -std=c++11 -c
>>> /home/GEOSwift/.build/checkouts/geos/Sources/geos/src/operation/overlayng/LineLimiter.cpp
>>> -o
>>> /home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/geos.build/src/operation/overlayng/LineLimiter.cpp.o
>>> >
>>> > And this corresponding error:
>>> >
>>> >
>>> /home/GEOSwift/.build/checkouts/geos/Sources/geos/src/operation/overlayng/LineLimiter.cpp:121:24:
>>> error: no member named 'unique' in namespace 'std'
>>> >     ptList->erase(std::unique(ptList->begin(), ptList->end()),
>>> ptList->end());
>>>
>>> Add #include <algorithm>
>>> to LineLimiter.cpp see if that helps?
>>>
>>> Not sure why only your version would have this problem. Maybe it's in
>>> different headers sometimes?
>>>
>>>
>>> >                   ~~~~~^
>>> >
>>> > Here's some clang version info:
>>> >
>>> > clang version 10.0.0 (git at github.com:apple/llvm-project.git
>>> 3093af41dd65ad466dcd5603e9289244edfee4f5)
>>> > Target: x86_64-unknown-linux-gnu
>>> > Thread model: posix
>>> > InstalledDir: /usr/bin
>>> >
>>> > Any idea what might be going on here?
>>> >
>>> > _______________________________________________
>>> > geos-devel mailing list
>>> > geos-devel at lists.osgeo.org
>>> > https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201201/980c6552/attachment-0001.html>

From geos-trac at osgeo.org  Tue Dec  1 15:05:00 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 01 Dec 2020 23:05:00 -0000
Subject: [geos-devel] [GEOS] #1081: TopologyPreservingSimplifier /
 GEOSTopologyPreserveSimplify on Windows
Message-ID: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>

#1081: TopologyPreservingSimplifier / GEOSTopologyPreserveSimplify on Windows
------------------------+--------------------------
 Reporter:  Mike Taves  |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  blocker     |  Milestone:  3.9.0
Component:  Unit Tests  |    Version:  master
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 As discussed on mail list: https://lists.osgeo.org/pipermail/geos-
 devel/2020-November/009856.html

 With GEOS 3.9.0beta1 for Windows, both C++ and C API versions of
 !TopologyPreservingSimplifier and GEOSTopologyPreserveSimplify,
 respectively, provide sometimes random incorrect results.

 In the test suite, this can be run using the command:
 {{{
 test_geos_unit "geos::simplify::TopologyPreservingSimplifier"
 }}}
 which will fail most of the time for test 14, but not always. Similar
 behavior can be found using a simple C or C++ program that uses `geos.dll`
 and `geos_c.dll`.

 With Shapely:
 {{{
 from shapely import wkt, geos

 print(geos.geos_version_string)
 g = wkt.loads('MULTILINESTRING((0 0, 50 0, 70 0, 80 0, 100 0), (0 0, 50 1,
 60 1, 100 0))')
 simplified = g.simplify(10.0, preserve_topology=True)
 print(simplified.wkt)
 }}}
 Using a stable GEOS build, this is the expected result:
 {{{
 3.8.0-CAPI-1.13.1
 MULTILINESTRING ((0 0, 100 0), (0 0, 50 1, 100 0))
 }}}
 while using `geos_c.dll`/`geos.dll` built from 3.9.0beta1 only shows the
 incorrect result:
 {{{
 3.9.0-CAPI-1.14.0
 MULTILINESTRING ((0 0, 100 0), (0 0, 100 0))
 }}}

 A PostGIS equivalent is be:
 {{{
 SELECT ST_AsText(ST_SimplifyPreserveTopology(
     'MULTILINESTRING((0 0, 50 0, 70 0, 80 0, 100 0), (0 0, 50 1, 60 1, 100
 0))', 10.0));
 }}}
 which returns mostly the incorrect result, but sometimes the correct
 result. Fun!

 ----
 This appears to be a Windows-only issue, which may have been introduced
 between 4 to 6 months ago. It is difficult to pin-down an exact commit
 from the !AppVeyor build history, as it was obscured by an unrelated
 preceding error in the CI workflow.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1081>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Dec  1 15:19:52 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 01 Dec 2020 23:19:52 -0000
Subject: [geos-devel] [GEOS] #1081: TopologyPreservingSimplifier /
 GEOSTopologyPreserveSimplify on Windows
In-Reply-To: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
References: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
Message-ID: <060.d062b73a7e00f0dae55b90b7ea239a16@osgeo.org>

#1081: TopologyPreservingSimplifier / GEOSTopologyPreserveSimplify on Windows
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.9.0
Component:  Unit Tests  |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by robe):

 FWIW My Mingw-w64 build Windows seems fine. So not all windows, assume
 just VC++ compiled and possibly specific versions.


 {{{
 POSTGIS="3.1.0alpha3 3.1.0alpha2-164-gd2d5c9f98" [EXTENSION] PGSQL="130"
 GEOS="3.9.0-CAPI-1.14.0" PROJ="7.1.1" LIBXML="2.9.9" LIBJSON="0.12"
 LIBPROTOBUF="1.2.1" WAGYU="0.5.0 (Internal)"
 }}}

 Using GEOS as of yesterday branch (also tested with one from a month ago).


 {{{
  SELECT ST_AsText(ST_SimplifyPreserveTopology(
      'MULTILINESTRING((0 0, 50 0, 70 0, 80 0, 100 0), (0 0, 50 1, 60 1,
 100  0))', 10.0));

 }}}

 yields consistently


 {{{
 MULTILINESTRING((0 0,100 0),(0 0,50 1,100 0))
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1081#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Dec  1 15:33:31 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 01 Dec 2020 23:33:31 -0000
Subject: [geos-devel] [GEOS] #1082: Different version info from autotools /
 CMake builds
Message-ID: <045.b42f3d22404c5e74fdd355440146da34@osgeo.org>

#1082: Different version info from autotools / CMake builds
-----------------------------------+--------------------------
 Reporter:  Mike Taves             |      Owner:  geos-devel@?
     Type:  defect                 |     Status:  new
 Priority:  major                  |  Milestone:  3.9.0
Component:  Build/Install (cmake)  |    Version:
 Severity:  Unassigned             |   Keywords:
-----------------------------------+--------------------------
 Building GEOS with both autotools and CMake yields different version info,
 contained in `geos_c.h`. Here is the `diff` output comparing autotools (<)
 and cmake (>):
 {{{
 $ diff geos-3.9.0beta1-autotools/include/geos_c.h
 geos-3.9.0beta1-cmake/include/geos_c.h
 61c61
 < #define GEOS_VERSION_PATCH 0beta1
 ---
 > #define GEOS_VERSION_PATCH 0
 64c64
 < #define GEOS_VERSION "3.9.0beta1"
 ---
 > #define GEOS_VERSION "3.9.0"
 71,73c71,73
 < #define GEOS_CAPI_VERSION_MINOR 15
 < #define GEOS_CAPI_VERSION_PATCH 1
 < #define GEOS_CAPI_VERSION "3.9.0beta1-CAPI-1.15.1"
 ---
 > #define GEOS_CAPI_VERSION_MINOR 14
 > #define GEOS_CAPI_VERSION_PATCH 0
 > #define GEOS_CAPI_VERSION "3.9.0-CAPI-1.14.0"
 }}}

 The output from `geos-config --version` is also different:
 {{{
 $ ./geos-3.9.0beta1-autotools/bin/geos-config --version
 3.9.0beta1
 $ ./geos-3.9.0beta1-cmake/bin/geos-config --version
 3.9.0
 }}}
 Same with `pkgconfig pkg-config geos --modversion`:
 {{{
 $ PKG_CONFIG_PATH=./geos-3.9.0beta1-autotools/lib/pkgconfig pkg-config
 geos --modversion
 3.9.0beta1
 $ PKG_CONFIG_PATH=./geos-3.9.0beta1-cmake/lib/pkgconfig pkg-config geos
 --modversion
 3.9.0
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1082>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Dec  1 18:13:08 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 02 Dec 2020 02:13:08 -0000
Subject: [geos-devel] [GEOS] #1082: Different version info from
 autotools / CMake builds
In-Reply-To: <045.b42f3d22404c5e74fdd355440146da34@osgeo.org>
References: <045.b42f3d22404c5e74fdd355440146da34@osgeo.org>
Message-ID: <060.e555785874471b05aebe4f1887320bd0@osgeo.org>

#1082: Different version info from autotools / CMake builds
-----------------------------------+-------------------------
 Reporter:  Mike Taves             |       Owner:  Mike Taves
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:  3.9.0
Component:  Build/Install (cmake)  |     Version:
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+-------------------------
Changes (by Mike Taves):

 * owner:  geos-devel@? => Mike Taves
 * priority:  major => minor


Comment:

 Apologies for the CAPI_VERSION differences, as this was comparing the main
 branch to the 3.9.0beta1 download. The correct `diff` for `geos_c.h`
 should now be:
 {{{
 $ diff geos-3.9.0beta1-autotools/include/geos_c.h
 geos-3.9.0beta1-cmake/include/geos_c.h
 61c61
 < #define GEOS_VERSION_PATCH 0beta1
 ---
 > #define GEOS_VERSION_PATCH 0
 64c64
 < #define GEOS_VERSION "3.9.0beta1"
 ---
 > #define GEOS_VERSION "3.9.0"
 73c73
 < #define GEOS_CAPI_VERSION "3.9.0beta1-CAPI-1.15.1"
 ---
 > #define GEOS_CAPI_VERSION "3.9.0-CAPI-1.15.1"
 }}}
 I should be able to assemble a PR for the CMake build to handle the patch
 word similar to autotools.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1082#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Wed Dec  2 09:23:47 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 2 Dec 2020 09:23:47 -0800
Subject: [geos-devel] MSVC Unit Failure
In-Reply-To: <CAM2FmMo1EF9cQ1tRSkropCg0UYAJQ9W0u766=GQKcrzJqtrQFQ@mail.gmail.com>
References: <E6117FFE-F947-4CE1-ACA8-E0894DA9381E@cleverelephant.ca>
 <C9B2A46F-AA95-4F67-B13F-970927D7B555@cleverelephant.ca>
 <CAM2FmMpKWCnOUV-Qmy9CoNVLHgLtD5Qdnuy4PJyhgK+R4UOT+g@mail.gmail.com>
 <858C14AA-0AB7-435D-9651-72632BBB1549@cleverelephant.ca>
 <CAM2FmMo1EF9cQ1tRSkropCg0UYAJQ9W0u766=GQKcrzJqtrQFQ@mail.gmail.com>
Message-ID: <A63AAFFC-F030-4975-90DB-8FFAB9798B6D@cleverelephant.ca>



> On Dec 1, 2020, at 1:47 AM, Mike Taves <mwtoews at gmail.com> wrote:
> 
> This issue is very tricky. Running the command from a local Windows build:
>> test_geos_unit "geos::simplify::TopologyPreservingSimplifier"
> 
> will mostly fail (showing "tests summary: failures:1 ok:14"), but
> occasionally pass (showing "tests summary: ok:15"), with a pass/fail
> ratio close to 1:8. This type of random behaviour can only be
> explained by a memory error, but is only an issue with Windows.
> (Running the command on Linux with valgrind shows "All heap blocks
> were freed -- no leaks are possible")
> 
> Looking at the AppVeyor history is slightly revealing:
> https://ci.appveyor.com/project/dbaston/geos/history
> 
> The first captured instance of this issue was 4 months ago on the
> overlay-sr branch:
> https://ci.appveyor.com/project/dbaston/geos/builds/34227033/job/pq00xb0pirk5xpe9#L1032
> 
> It likely existed before this commit, up to (but not beyond) 6 months
> ago, but was obscured by a different preceding error. Nevertheless, it
> seems to have originated somewhere in the overlay-sr branch?

Well, that time period is when most of overlayng was ported, so there's a great deal of activity on that branch (which was the main porting branch).
Even doing a bisect could be hard because there will be times when the branch doesn't build. I don't now how anything other than a bisect will track this down. Unless there's a windows equivalent to valgrind that might find the memory error directly.

P

> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From andrew.d.hershberger at gmail.com  Wed Dec  2 12:47:33 2020
From: andrew.d.hershberger at gmail.com (Andrew Hershberger)
Date: Wed, 2 Dec 2020 14:47:33 -0600
Subject: [geos-devel] 3.9.0beta + GEOSwift + Linux
In-Reply-To: <CACZW30PXvV+j2yOYufT7RFzHpq9Vp10P+n9cG=NfrcmFLNXX4Q@mail.gmail.com>
References: <CACZW30PS7SUpxbscn8AWFP70VF+251i8XdLgKQ6yJ1e9sFir9g@mail.gmail.com>
 <B253D9B9-DB88-4B6C-89E5-4347BD76E6B2@cleverelephant.ca>
 <CACZW30PWXTM-tjWAB3gnTVuyv_1OkrtPCFqHhqyjFg8RJa2z_A@mail.gmail.com>
 <CACZW30PyL2jU7WTxJqr5XnOB9OaufHDjjGqmUOZmFCPQNLju4A@mail.gmail.com>
 <CACZW30PXvV+j2yOYufT7RFzHpq9Vp10P+n9cG=NfrcmFLNXX4Q@mail.gmail.com>
Message-ID: <CACZW30N5AbTs8UsZgbBtUCWuGybBfxHS7fASHtypnrvXKRWteQ@mail.gmail.com>

The thread I started on the Swift forums has reached a conclusion (
https://forums.swift.org/t/confused-about-cxxlanguagestandard/42402). I'd
been conflating the C++ language standard (which is what I was specifying
via the Swift Package definition) and the C++ Standard Library (which isn't
exposed in a useful way to the Swift Package definition API at the moment).
Even if it were possible to require a specific C++ Standard Library, it
seems like it'd be more flexible to add the #import <algorithm> to the 2
files (LineLimiter.cpp and KdTree.cpp).

Andrew

On Tue, Dec 1, 2020 at 12:48 PM Andrew Hershberger <
andrew.d.hershberger at gmail.com> wrote:

> In case anyone is interested, here's the thread I started on the Swift
> forums:
> https://forums.swift.org/t/confused-about-cxxlanguagestandard/42402
>
> On Tue, Dec 1, 2020 at 12:13 AM Andrew Hershberger <
> andrew.d.hershberger at gmail.com> wrote:
>
>> Seems like the macOS builds are getting their <vector> from llvm's libc++
>> but that the build in the Swift Docker container is using the GNU C++.
>> LLVM's vector
>> (Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/vector)
>> imports algorithm. The GNU C++ version doesn't (at least not directly). I
>> find this Swift Package Manager behavior on Linux strange because the
>> GEOSwift/geos package definition specifically requests "cxx11" (as opposed
>> to "gnucxx11"). I'll see whether someone from the Swift team can shed
>> some light on what's going on here.
>>
>> On Mon, Nov 30, 2020 at 11:40 PM Andrew Hershberger <
>> andrew.d.hershberger at gmail.com> wrote:
>>
>>> That works. I had to add it to KdTree.cpp as well. Agree that it's
>>> strange.
>>>
>>> On Mon, Nov 30, 2020 at 9:17 PM Paul Ramsey <pramsey at cleverelephant.ca>
>>> wrote:
>>>
>>>>
>>>>
>>>> > On Nov 30, 2020, at 7:15 PM, Andrew Hershberger <
>>>> andrew.d.hershberger at gmail.com> wrote:
>>>> >
>>>> > Found another issue with the beta when testing GEOSwift on Linux
>>>> (specifically, compiling in a Docker container using the Swift Docker
>>>> image). Here's what I'm doing:
>>>> >
>>>> > $ sudo docker run -it --rm swift /bin/bash
>>>> > # cd home
>>>> > # git clone https://github.com/GEOSwift/GEOSwift.git
>>>> > # cd GEOSwift
>>>> > # git checkout geos-3.9.0-testing
>>>> > # swift test --enable-test-discovery -v
>>>> >
>>>> > Among other things, this yields the following line for
>>>> LineLimiter.cpp:
>>>> >
>>>> > /usr/bin/clang -target x86_64-unknown-linux-gnu -fPIC -g -O0
>>>> -DSWIFT_PACKAGE=1 -DDEBUG=1 -fblocks -fmodules -fmodule-name=geos -I
>>>> /home/GEOSwift/.build/checkouts/geos/Sources/geos/public
>>>> -fmodules-cache-path=/home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/ModuleCache
>>>> -DUSE_UNSTABLE_GEOS_CPP_API
>>>> -I/home/GEOSwift/.build/checkouts/geos/Sources/geos/include -MD -MT
>>>> dependencies -MF
>>>> /home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/geos.build/src/operation/overlayng/LineLimiter.cpp.d
>>>> -std=c++11 -c
>>>> /home/GEOSwift/.build/checkouts/geos/Sources/geos/src/operation/overlayng/LineLimiter.cpp
>>>> -o
>>>> /home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/geos.build/src/operation/overlayng/LineLimiter.cpp.o
>>>> >
>>>> > And this corresponding error:
>>>> >
>>>> >
>>>> /home/GEOSwift/.build/checkouts/geos/Sources/geos/src/operation/overlayng/LineLimiter.cpp:121:24:
>>>> error: no member named 'unique' in namespace 'std'
>>>> >     ptList->erase(std::unique(ptList->begin(), ptList->end()),
>>>> ptList->end());
>>>>
>>>> Add #include <algorithm>
>>>> to LineLimiter.cpp see if that helps?
>>>>
>>>> Not sure why only your version would have this problem. Maybe it's in
>>>> different headers sometimes?
>>>>
>>>>
>>>> >                   ~~~~~^
>>>> >
>>>> > Here's some clang version info:
>>>> >
>>>> > clang version 10.0.0 (git at github.com:apple/llvm-project.git
>>>> 3093af41dd65ad466dcd5603e9289244edfee4f5)
>>>> > Target: x86_64-unknown-linux-gnu
>>>> > Thread model: posix
>>>> > InstalledDir: /usr/bin
>>>> >
>>>> > Any idea what might be going on here?
>>>> >
>>>> > _______________________________________________
>>>> > geos-devel mailing list
>>>> > geos-devel at lists.osgeo.org
>>>> > https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>>
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201202/0def87d1/attachment.html>

From pramsey at cleverelephant.ca  Wed Dec  2 15:17:38 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 2 Dec 2020 15:17:38 -0800
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
Message-ID: <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>

without any further ado, here's a beta2 release for your testing pleasure

http://download.osgeo.org/geos/geos-3.9.0beta2.tar.bz2

> On Nov 27, 2020, at 7:57 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> OK, without any further ado, here's a beta release for your testing pleasure.
> 
> http://download.osgeo.org/geos/geos-3.9.0beta1.tar.bz2
> 
> P.


From pramsey at cleverelephant.ca  Wed Dec  2 15:17:59 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 2 Dec 2020 15:17:59 -0800
Subject: [geos-devel] 3.9.0beta + GEOSwift + Linux
In-Reply-To: <CACZW30N5AbTs8UsZgbBtUCWuGybBfxHS7fASHtypnrvXKRWteQ@mail.gmail.com>
References: <CACZW30PS7SUpxbscn8AWFP70VF+251i8XdLgKQ6yJ1e9sFir9g@mail.gmail.com>
 <B253D9B9-DB88-4B6C-89E5-4347BD76E6B2@cleverelephant.ca>
 <CACZW30PWXTM-tjWAB3gnTVuyv_1OkrtPCFqHhqyjFg8RJa2z_A@mail.gmail.com>
 <CACZW30PyL2jU7WTxJqr5XnOB9OaufHDjjGqmUOZmFCPQNLju4A@mail.gmail.com>
 <CACZW30PXvV+j2yOYufT7RFzHpq9Vp10P+n9cG=NfrcmFLNXX4Q@mail.gmail.com>
 <CACZW30N5AbTs8UsZgbBtUCWuGybBfxHS7fASHtypnrvXKRWteQ@mail.gmail.com>
Message-ID: <6173EA94-068F-45A0-81B7-C78F9A6477F2@cleverelephant.ca>

Done! :)

> On Dec 2, 2020, at 12:47 PM, Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> 
> The thread I started on the Swift forums has reached a conclusion (https://forums.swift.org/t/confused-about-cxxlanguagestandard/42402). I'd been conflating the C++ language standard (which is what I was specifying via the Swift Package definition) and the C++ Standard Library (which isn't exposed in a useful way to the Swift Package definition API at the moment). Even if it were possible to require a specific C++ Standard Library, it seems like it'd be more flexible to add the #import <algorithm> to the 2 files (LineLimiter.cpp and KdTree.cpp).
> 
> Andrew
> 
> On Tue, Dec 1, 2020 at 12:48 PM Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> In case anyone is interested, here's the thread I started on the Swift forums: https://forums.swift.org/t/confused-about-cxxlanguagestandard/42402
> 
> On Tue, Dec 1, 2020 at 12:13 AM Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> Seems like the macOS builds are getting their <vector> from llvm's libc++ but that the build in the Swift Docker container is using the GNU C++. LLVM's vector (Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/vector) imports algorithm. The GNU C++ version doesn't (at least not directly). I find this Swift Package Manager behavior on Linux strange because the GEOSwift/geos package definition specifically requests "cxx11" (as opposed to "gnucxx11"). I'll see whether someone from the Swift team can shed some light on what's going on here.
> 
> On Mon, Nov 30, 2020 at 11:40 PM Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> That works. I had to add it to KdTree.cpp as well. Agree that it's strange.
> 
> On Mon, Nov 30, 2020 at 9:17 PM Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> 
> > On Nov 30, 2020, at 7:15 PM, Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> > 
> > Found another issue with the beta when testing GEOSwift on Linux (specifically, compiling in a Docker container using the Swift Docker image). Here's what I'm doing:
> > 
> > $ sudo docker run -it --rm swift /bin/bash
> > # cd home
> > # git clone https://github.com/GEOSwift/GEOSwift.git
> > # cd GEOSwift
> > # git checkout geos-3.9.0-testing
> > # swift test --enable-test-discovery -v
> > 
> > Among other things, this yields the following line for LineLimiter.cpp:
> > 
> > /usr/bin/clang -target x86_64-unknown-linux-gnu -fPIC -g -O0 -DSWIFT_PACKAGE=1 -DDEBUG=1 -fblocks -fmodules -fmodule-name=geos -I /home/GEOSwift/.build/checkouts/geos/Sources/geos/public -fmodules-cache-path=/home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/ModuleCache -DUSE_UNSTABLE_GEOS_CPP_API -I/home/GEOSwift/.build/checkouts/geos/Sources/geos/include -MD -MT dependencies -MF /home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/geos.build/src/operation/overlayng/LineLimiter.cpp.d -std=c++11 -c /home/GEOSwift/.build/checkouts/geos/Sources/geos/src/operation/overlayng/LineLimiter.cpp -o /home/GEOSwift/.build/x86_64-unknown-linux-gnu/debug/geos.build/src/operation/overlayng/LineLimiter.cpp.o
> > 
> > And this corresponding error:
> > 
> > /home/GEOSwift/.build/checkouts/geos/Sources/geos/src/operation/overlayng/LineLimiter.cpp:121:24: error: no member named 'unique' in namespace 'std'
> >     ptList->erase(std::unique(ptList->begin(), ptList->end()), ptList->end());
> 
> Add #include <algorithm>
> to LineLimiter.cpp see if that helps?
> 
> Not sure why only your version would have this problem. Maybe it's in different headers sometimes?
> 
> 
> >                   ~~~~~^
> > 
> > Here's some clang version info:
> > 
> > clang version 10.0.0 (git at github.com:apple/llvm-project.git 3093af41dd65ad466dcd5603e9289244edfee4f5)
> > Target: x86_64-unknown-linux-gnu
> > Thread model: posix
> > InstalledDir: /usr/bin
> > 
> > Any idea what might be going on here?
> > 
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From mwtoews at gmail.com  Wed Dec  2 16:00:37 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 3 Dec 2020 13:00:37 +1300
Subject: [geos-devel] MSVC Unit Failure
In-Reply-To: <A63AAFFC-F030-4975-90DB-8FFAB9798B6D@cleverelephant.ca>
References: <E6117FFE-F947-4CE1-ACA8-E0894DA9381E@cleverelephant.ca>
 <C9B2A46F-AA95-4F67-B13F-970927D7B555@cleverelephant.ca>
 <CAM2FmMpKWCnOUV-Qmy9CoNVLHgLtD5Qdnuy4PJyhgK+R4UOT+g@mail.gmail.com>
 <858C14AA-0AB7-435D-9651-72632BBB1549@cleverelephant.ca>
 <CAM2FmMo1EF9cQ1tRSkropCg0UYAJQ9W0u766=GQKcrzJqtrQFQ@mail.gmail.com>
 <A63AAFFC-F030-4975-90DB-8FFAB9798B6D@cleverelephant.ca>
Message-ID: <CAM2FmMr2aiQ+dVvKxc_UiOwuRFTjLJ4bCg6dKpU9aL=CMGaKuw@mail.gmail.com>

This issue is getting stranger. I was wrong, it's old and not entirely
a Windows MSVC one either. It may have something to do with the order
of geometries passed to TaggedLineStringSimplifier.


Take re-ordered input:
MULTILINESTRING((0 0, 50 1, 60 1, 100 0), (0 0, 50 0, 70 0, 80 0, 100 0))

Should the expected topo-simplified output be re-ordered too? i.e.:
MULTILINESTRING ((0 0, 50 1, 100 0), (0 0, 100 0))

But it is always: MULTILINESTRING ((0 0, 100 0), (0 0, 100 0))
Is this unexpected? If so, then this fails.


I'm now able to get the "random" result behavior with Linux GCC with a
GEOS-3.7.3 build. Take the attached test_simplify.py script (based on
shapely) to run the tests, which call GEOSTopologyPreserveSimplify
1000 times on two input geometries, and count the number of times it
"equals" the expected geometry (which is order-agnostic), showing
True/False. E.g.

$ export LD_LIBRARY_PATH=/path/to/builds/geos-3.7.3/lib
$ python test_simplify.py
3.7.3-CAPI-1.11.3 f00e007
input: MULTILINESTRING((0 0, 50 0, 70 0, 80 0, 100 0), (0 0, 50 1, 60 1, 100 0))
Counter({False: 513, True: 487})
input: MULTILINESTRING((0 0, 50 1, 60 1, 100 0), (0 0, 50 0, 70 0, 80 0, 100 0))
Counter({False: 527, True: 473})

This shows a close 50%/50% pass/fail for either geometry input order.
Testing the same script with more recent GEOS versions:

$ export LD_LIBRARY_PATH=/path/to/builds/geos-3.8.1/lib
$ python test_simplify.py
3.8.1-CAPI-1.13.3
input: MULTILINESTRING((0 0, 50 0, 70 0, 80 0, 100 0), (0 0, 50 1, 60 1, 100 0))
Counter({True: 1000})
input: MULTILINESTRING((0 0, 50 1, 60 1, 100 0), (0 0, 50 0, 70 0, 80 0, 100 0))
Counter({False: 1000})

which has no randomness, with 100% pass for the first, and 100% fail
(if that's what we are calling it) for the second re-ordered geometry.
This is the same behaviour with GEOS-3.9.0beta1.


Enabling GEOS_DEBUG for TaggedLineStringSimplifier.cpp (in 3.9.0beta1
on MSVC) shows some details in a small C++ application.

Output using only input geometry with a good result:

input: MULTILINESTRING((0 0, 50 0, 70 0, 80 0, 100 0), (0 0, 50 1, 60 1, 100 0))
TaggedLineStringSimplifier[000002216BBD7920]
TaggedLineString[000002216BBDB950]  has 4 coords in input
TaggedLineStringSimplifier[000002216BBD7920]  simplifying section 0-3
geos::simplify::TaggedLineStringSimplifier::findFurthestPointsegment
LINESEGMENT(0 0,100 0)
dist to 50 1: 1
this is max
dist to 60 1: 1
furthest point 1 at distance 1
TaggedLineStringSimplifier[000002216BBD7920]  simplifying section 0-1
single segment, no flattening
TaggedLineStringSimplifier[000002216BBD7920]  simplifying section 1-3
geos::simplify::TaggedLineStringSimplifier::findFurthestPointsegment
LINESEGMENT(50 1,100 0)
dist to 60 1: 0.19996
this is max
furthest point 2 at distance 0.19996
isValidToSimplify, adding seg 50 1, 100 0 to
TaggedLineSegment[000002216BBDB950] result
TaggedLineStringSimplifier[000002216BBD7920]
TaggedLineString[000002216BBDB6C0]  has 5 coords in input
TaggedLineStringSimplifier[000002216BBD7920]  simplifying section 0-4
geos::simplify::TaggedLineStringSimplifier::findFurthestPointsegment
LINESEGMENT(0 0,100 0)
dist to 50 0: 0
this is max
dist to 70 0: 0
dist to 80 0: 0
furthest point 1 at distance 0
isValidToSimplify, adding seg 0 0, 100 0 to
TaggedLineSegment[000002216BBDB6C0] result
result: MULTILINESTRING ((0 0, 100 0), (0 0, 50 1, 100 0))

Output with a bad result:

input: MULTILINESTRING((0 0, 50 0, 70 0, 80 0, 100 0), (0 0, 50 1, 60 1, 100 0))
TaggedLineStringSimplifier[000001FA84EF6270]
TaggedLineString[000001FA84EE5B70]  has 5 coords in input
TaggedLineStringSimplifier[000001FA84EF6270]  simplifying section 0-4
geos::simplify::TaggedLineStringSimplifier::findFurthestPointsegment
LINESEGMENT(0 0,100 0)
dist to 50 0: 0
this is max
dist to 70 0: 0
dist to 80 0: 0
furthest point 1 at distance 0
isValidToSimplify, adding seg 0 0, 100 0 to
TaggedLineSegment[000001FA84EE5B70] result
TaggedLineStringSimplifier[000001FA84EF6270]
TaggedLineString[000001FA84EF9FC0]  has 4 coords in input
TaggedLineStringSimplifier[000001FA84EF6270]  simplifying section 0-3
geos::simplify::TaggedLineStringSimplifier::findFurthestPointsegment
LINESEGMENT(0 0,100 0)
dist to 50 1: 1
this is max
dist to 60 1: 1
furthest point 1 at distance 1
isValidToSimplify, adding seg 0 0, 100 0 to
TaggedLineSegment[000001FA84EF9FC0] result
result: MULTILINESTRING ((0 0, 100 0), (0 0, 100 0))

The main difference between the two outputs is the order of geometry
parts received by TaggedLineStringSimplifier.

I haven't looked at the underlying C++ containers, but it seems that
order is not guaranteed for MSVC, but it is for other compilers.

One fix would be to change this container to an ordered one. A better
fix would also return a 5-point geometry from the re-ordered geometry
input shown earlier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_simplify.py
Type: text/x-python
Size: 576 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201203/0a7aa9a5/attachment-0001.py>

From andrew.d.hershberger at gmail.com  Wed Dec  2 18:39:34 2020
From: andrew.d.hershberger at gmail.com (Andrew Hershberger)
Date: Wed, 2 Dec 2020 20:39:34 -0600
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
Message-ID: <CACZW30Ofdzux3C7ZMWCvC=oJJVXYmFuWmDnPGorqqoc8WQQK0w@mail.gmail.com>

GEOSwift builds and passes tests with beta2 on macOS & Ubuntu 18.04
https://travis-ci.com/github/GEOSwift/GEOSwift/builds/206115008

On Wed, Dec 2, 2020 at 5:17 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> without any further ado, here's a beta2 release for your testing pleasure
>
> http://download.osgeo.org/geos/geos-3.9.0beta2.tar.bz2
>
> > On Nov 27, 2020, at 7:57 PM, Paul Ramsey <pramsey at cleverelephant.ca>
> wrote:
> >
> > OK, without any further ado, here's a beta release for your testing
> pleasure.
> >
> > http://download.osgeo.org/geos/geos-3.9.0beta1.tar.bz2
> >
> > P.
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201202/e37d54e8/attachment.html>

From pramsey at cleverelephant.ca  Wed Dec  2 19:14:12 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 2 Dec 2020 19:14:12 -0800
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <CACZW30Ofdzux3C7ZMWCvC=oJJVXYmFuWmDnPGorqqoc8WQQK0w@mail.gmail.com>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <CACZW30Ofdzux3C7ZMWCvC=oJJVXYmFuWmDnPGorqqoc8WQQK0w@mail.gmail.com>
Message-ID: <59765772-7E91-43CE-AB1F-2A5CB65E7D77@cleverelephant.ca>

Marvelous!

> On Dec 2, 2020, at 6:39 PM, Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> 
> GEOSwift builds and passes tests with beta2 on macOS & Ubuntu 18.04 https://travis-ci.com/github/GEOSwift/GEOSwift/builds/206115008
> 
> On Wed, Dec 2, 2020 at 5:17 PM Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> without any further ado, here's a beta2 release for your testing pleasure
> 
> http://download.osgeo.org/geos/geos-3.9.0beta2.tar.bz2
> 
> > On Nov 27, 2020, at 7:57 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> > 
> > OK, without any further ado, here's a beta release for your testing pleasure.
> > 
> > http://download.osgeo.org/geos/geos-3.9.0beta1.tar.bz2
> > 
> > P.
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From sebastic at xs4all.nl  Wed Dec  2 22:09:37 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 3 Dec 2020 07:09:37 +0100
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
Message-ID: <52d11639-381e-760f-9db1-f62ed594a88d@xs4all.nl>

On 12/3/20 12:17 AM, Paul Ramsey wrote:
> without any further ado, here's a beta2 release for your testing pleasure

It decrements the SOVERSION from 1 to 0 for the C library, seemingly
caused by this change:

--- a/Version.txt
+++ b/Version.txt
@@ -5,7 +5,7 @@ GEOS_VERSION_MINOR=9
 GEOS_VERSION_PATCH=0

 # OPTIONS: "", "dev", "rc1" etc.
-GEOS_PATCH_WORD=beta1
+GEOS_PATCH_WORD=beta2

 # GEOS CAPI Versions
 #
@@ -14,7 +14,7 @@ GEOS_PATCH_WORD=beta1
 # added, removed or changed.
 # Increase the age value only if the changes made to the ABI
 # are backward compatible.
-CAPI_INTERFACE_CURRENT=16
+CAPI_INTERFACE_CURRENT=15
 CAPI_INTERFACE_REVISION=1
 CAPI_INTERFACE_AGE=15

The CAPI_INTERFACE_CURRENT value needs to be reverted back to 16:

 CURRENT - AGE = 16 - 15 = 1

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From mwtoews at gmail.com  Wed Dec  2 23:27:46 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 3 Dec 2020 20:27:46 +1300
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <52d11639-381e-760f-9db1-f62ed594a88d@xs4all.nl>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <52d11639-381e-760f-9db1-f62ed594a88d@xs4all.nl>
Message-ID: <CAM2FmMqN2DNnGr7bbNXO1QpVVH7_XYPCYF3ocq0xMCPytFj78g@mail.gmail.com>

On Thu, 3 Dec 2020 at 19:09, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> The CAPI_INTERFACE_CURRENT value needs to be reverted back to 16:

Thanks, I was about to mention this. Normally libgeos_c.so.1 is
expected, not libgeos_c.so.0.

Otherwise, beta2 looks good and Shapely tests run fine!

https://trac.osgeo.org/geos/ticket/1081 can wait, as it is a
relatively minor component of the library, and has probably been a bug
in one form or another for several releases without any user reports.

From rmrodriguez at carto.com  Thu Dec  3 02:40:17 2020
From: rmrodriguez at carto.com (rmrodriguez at carto.com)
Date: Thu, 3 Dec 2020 11:40:17 +0100
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <CAM2FmMqN2DNnGr7bbNXO1QpVVH7_XYPCYF3ocq0xMCPytFj78g@mail.gmail.com>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <52d11639-381e-760f-9db1-f62ed594a88d@xs4all.nl>
 <CAM2FmMqN2DNnGr7bbNXO1QpVVH7_XYPCYF3ocq0xMCPytFj78g@mail.gmail.com>
Message-ID: <CAM6_UM5bZY8_W6AbFD6C+d=dXJCvhSoZq3A2J1V_0_zzqdB9Nw@mail.gmail.com>

> Thanks, I was about to mention this. Normally libgeos_c.so.1 is
expected, not libgeos_c.so.0.

+1 to this issue. This forces a recompilation of PostGIS (and I guess
everything else) to test the new release, so unless the C API has
changed it's an unnecessary pain in the ass.

On Thu, Dec 3, 2020 at 8:28 AM Mike Taves <mwtoews at gmail.com> wrote:
>
> On Thu, 3 Dec 2020 at 19:09, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> > The CAPI_INTERFACE_CURRENT value needs to be reverted back to 16:
>
> Thanks, I was about to mention this. Normally libgeos_c.so.1 is
> expected, not libgeos_c.so.0.
>
> Otherwise, beta2 looks good and Shapely tests run fine!
>
> https://trac.osgeo.org/geos/ticket/1081 can wait, as it is a
> relatively minor component of the library, and has probably been a bug
> in one form or another for several releases without any user reports.
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel



-- 
Ra?l Mar?n Rodr?guez
carto.com

From sebastic at xs4all.nl  Thu Dec  3 03:19:39 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 3 Dec 2020 12:19:39 +0100
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <CAM6_UM5bZY8_W6AbFD6C+d=dXJCvhSoZq3A2J1V_0_zzqdB9Nw@mail.gmail.com>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <52d11639-381e-760f-9db1-f62ed594a88d@xs4all.nl>
 <CAM2FmMqN2DNnGr7bbNXO1QpVVH7_XYPCYF3ocq0xMCPytFj78g@mail.gmail.com>
 <CAM6_UM5bZY8_W6AbFD6C+d=dXJCvhSoZq3A2J1V_0_zzqdB9Nw@mail.gmail.com>
Message-ID: <3946203e-1452-2121-a99b-3f99d7e2a176@xs4all.nl>

On 12/3/20 11:40 AM, rmrodriguez at carto.com wrote:
>> Thanks, I was about to mention this. Normally libgeos_c.so.1 is
> expected, not libgeos_c.so.0.
> 
> +1 to this issue. This forces a recompilation of PostGIS (and I guess
> everything else) to test the new release, so unless the C API has
> changed it's an unnecessary pain in the ass.

If SONAME should change because of ABI incompatibility, it needs to be
incremented not decremented, that's always wrong.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From jmckenna at gatewaygeomatics.com  Thu Dec  3 11:50:44 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 3 Dec 2020 15:50:44 -0400
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
Message-ID: <0c68c788-b3d1-fbe7-92e6-9e5cc453e870@gatewaygeomatics.com>





On 2020-12-02 7:17 p.m., Paul Ramsey wrote:
> without any further ado, here's a beta2 release for your testing pleasure
> 
> http://download.osgeo.org/geos/geos-3.9.0beta2.tar.bz2
> 

+1

tested in the MS4W build environment, on Windows.

-jeff


-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/







From sebastic at xs4all.nl  Thu Dec  3 22:18:45 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 4 Dec 2020 07:18:45 +0100
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
Message-ID: <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>

On 12/3/20 12:17 AM, Paul Ramsey wrote:
> without any further ado, here's a beta2 release for your testing pleasure

testrunner fails on arm64, ppc64el, powerpc, ppc64, riscv64:

 https://buildd.debian.org/status/fetch.php?pkg=geos&arch=arm64&ver=3.9.0%7Ebeta2-1%7Eexp1&stamp=1607020427&raw=0

 https://buildd.debian.org/status/fetch.php?pkg=geos&arch=ppc64el&ver=3.9.0%7Ebeta2-1%7Eexp1&stamp=1607050174&raw=0

 https://buildd.debian.org/status/fetch.php?pkg=geos&arch=powerpc&ver=3.9.0%7Ebeta2-1%7Eexp1&stamp=1607025163&raw=0

 https://buildd.debian.org/status/fetch.php?pkg=geos&arch=ppc64&ver=3.9.0%7Ebeta2-1%7Eexp1&stamp=1607024070&raw=0

 https://buildd.debian.org/status/fetch.php?pkg=geos&arch=riscv64&ver=3.9.0%7Ebeta2-1%7Eexp1&stamp=1607029917&raw=0


geos_unit fails on mips64el, hppa:

 https://buildd.debian.org/status/fetch.php?pkg=geos&arch=mips64el&ver=3.9.0%7Ebeta2-1%7Eexp1&stamp=1607036205&raw=0

 https://buildd.debian.org/status/fetch.php?pkg=geos&arch=hppa&ver=3.9.0%7Ebeta2-1%7Eexp1&stamp=1607025668&raw=0


Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From pramsey at cleverelephant.ca  Fri Dec  4 13:10:44 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 4 Dec 2020 13:10:44 -0800
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>
Message-ID: <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>


> On Dec 3, 2020, at 10:18 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> On 12/3/20 12:17 AM, Paul Ramsey wrote:
>> without any further ado, here's a beta2 release for your testing pleasure
> 
> testrunner fails on arm64, ppc64el, powerpc, ppc64, riscv64:

Have we ever passed? Perhaps I made a big mistake removing ttmath. 

Anyways, here's what I've learned today, testing on an AWS ARM64 server.

* Still no obvious reason why these platforms shouldn't just work, if they implement IEEE conforming operations on double.
* There's something called FLT_EVAL_METHOD in <cfloat> which might indicate non-IEEE handling of double, but... my test server insists it is FLT_EVAL_METHOD == 0 "evaluate just to the range and precision of the type".

Wondering if there was a brutal hack-around, and noting that "long double" is increasingly a "thing", I took our DD class, and hacked out all the smarts and substituted long double implementations.

https://github.com/pramsey/geos/tree/dd-arm

Interestingly, this implementation passes all the geos::math::DD tests! The ARM64 long double appears to have a full 128bit implementation. Running the same thing on Intel x64 fails a number of tests. This is probably because the long double implementation on x64 has only 80 bits (according to the internet).

Does all this test passing mean that a direct use of long double will work on platforms that support it? Apparently not. The ARM build still fails on quite a few tests of varying sorts, just not on the DD tests.

	 90 - unit-capi-GEOSVoronoiDiagram (Failed)
	140 - unit-linearref-LengthIndexedLine (Failed)
	208 - general-TestCentroid (Failed)
	260 - issue-issue-geos-275 (Failed)
	267 - issue-issue-geos-398 (Failed)
	349 - robust-TestOverlay-pg-list (Failed)

Where does this leave us? With a long research project on ARM64 to track down why these tests fail and/or why the DD implementation fails.

Should we still release? I think so. While ARM and other niche platforms are coming down the pike, it doesn't make sense to delay. GEOS isn't "broken" on those platforms so much as "not perfect".

P.



From lr at pcorp.us  Fri Dec  4 14:06:03 2020
From: lr at pcorp.us (Regina Obe)
Date: Fri, 4 Dec 2020 17:06:03 -0500
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>
 <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>
Message-ID: <000501d6ca89$a93d1050$fbb730f0$@pcorp.us>

+1 for releasing.  As long as it can compile and still works we can sort out
the details in next release.

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Friday, December 4, 2020 4:11 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] 3.9.0beta2
> 
> 
> > On Dec 3, 2020, at 10:18 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl>
> wrote:
> >
> > On 12/3/20 12:17 AM, Paul Ramsey wrote:
> >> without any further ado, here's a beta2 release for your testing
pleasure
> >
> > testrunner fails on arm64, ppc64el, powerpc, ppc64, riscv64:
> 
> Have we ever passed? Perhaps I made a big mistake removing ttmath.
> 
> Anyways, here's what I've learned today, testing on an AWS ARM64 server.
> 
> * Still no obvious reason why these platforms shouldn't just work, if they
> implement IEEE conforming operations on double.
> * There's something called FLT_EVAL_METHOD in <cfloat> which might
> indicate non-IEEE handling of double, but... my test server insists it is
> FLT_EVAL_METHOD == 0 "evaluate just to the range and precision of the
> type".
> 
> Wondering if there was a brutal hack-around, and noting that "long double"
> is increasingly a "thing", I took our DD class, and hacked out all the
smarts and
> substituted long double implementations.
> 
> https://github.com/pramsey/geos/tree/dd-arm
> 
> Interestingly, this implementation passes all the geos::math::DD tests!
The
> ARM64 long double appears to have a full 128bit implementation. Running
> the same thing on Intel x64 fails a number of tests. This is probably
because
> the long double implementation on x64 has only 80 bits (according to the
> internet).
> 
> Does all this test passing mean that a direct use of long double will work
on
> platforms that support it? Apparently not. The ARM build still fails on
quite a
> few tests of varying sorts, just not on the DD tests.
> 
> 	 90 - unit-capi-GEOSVoronoiDiagram (Failed)
> 	140 - unit-linearref-LengthIndexedLine (Failed)
> 	208 - general-TestCentroid (Failed)
> 	260 - issue-issue-geos-275 (Failed)
> 	267 - issue-issue-geos-398 (Failed)
> 	349 - robust-TestOverlay-pg-list (Failed)
> 
> Where does this leave us? With a long research project on ARM64 to track
> down why these tests fail and/or why the DD implementation fails.
> 
> Should we still release? I think so. While ARM and other niche platforms
are
> coming down the pike, it doesn't make sense to delay. GEOS isn't "broken"
> on those platforms so much as "not perfect".
> 
> P.
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Fri Dec  4 16:08:00 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 4 Dec 2020 16:08:00 -0800
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>
 <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>
Message-ID: <26DC3570-7909-443F-9AB5-87C58112B887@cleverelephant.ca>



> On Dec 4, 2020, at 1:10 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> 
>> On Dec 3, 2020, at 10:18 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>> 
>> On 12/3/20 12:17 AM, Paul Ramsey wrote:
>>> without any further ado, here's a beta2 release for your testing pleasure
>> 
>> testrunner fails on arm64, ppc64el, powerpc, ppc64, riscv64:
> 
> Have we ever passed? Perhaps I made a big mistake removing ttmath. 
> 
> Anyways, here's what I've learned today, testing on an AWS ARM64 server.
> 
> * Still no obvious reason why these platforms shouldn't just work, if they implement IEEE conforming operations on double.
> * There's something called FLT_EVAL_METHOD in <cfloat> which might indicate non-IEEE handling of double, but... my test server insists it is FLT_EVAL_METHOD == 0 "evaluate just to the range and precision of the type".
> 
> Wondering if there was a brutal hack-around, and noting that "long double" is increasingly a "thing", I took our DD class, and hacked out all the smarts and substituted long double implementations.
> 
> https://github.com/pramsey/geos/tree/dd-arm
> 
> Interestingly, this implementation passes all the geos::math::DD tests! The ARM64 long double appears to have a full 128bit implementation. Running the same thing on Intel x64 fails a number of tests. This is probably because the long double implementation on x64 has only 80 bits (according to the internet).
> 
> Does all this test passing mean that a direct use of long double will work on platforms that support it? Apparently not. The ARM build still fails on quite a few tests of varying sorts, just not on the DD tests.
> 
> 	 90 - unit-capi-GEOSVoronoiDiagram (Failed)
> 	140 -unit-linearref-LengthIndexedLine (Failed)
> 	208 - general-TestCentroid (Failed)
> 	260 - issue-issue-geos-275 (Failed)
> 	267 - issue-issue-geos-398 (Failed)
> 	349 - robust-TestOverlay-pg-list (Failed)
> 
> Where does this leave us? With a long research project on ARM64 to track down why these tests fail and/or why the DD implementation fails.

Since this was a finite set of test failures and I was wondering if these failures were "real" or "tiny", I started going through them and the Voronoi failures seemed to fall into the "tiny" category. There was/is clearly a double precision equality test in the code that is returning true on one platform and false on another, because the answers are very very similar.

When I moved onto unit-linearref-LengthIndexedLine test, there wasn't any good printed debugging, so I broke out the debugger, and I had to rebuild in Debug mode. Guess what:

  100% tests passed, 0 tests failed out of 364

Yep, with the hardware long double for precision and in debug mode every test passes. So the problems on ARM64 are even *more* awful to figure out. Something about the optimized release build is different enough to matter.

P.


> Should we still release? I think so. While ARM and other niche platforms are coming down the pike, it doesn't make sense to delay. GEOS isn't "broken" on those platforms so much as "not perfect".
> 
> P.
> 
> 


From pramsey at cleverelephant.ca  Fri Dec  4 16:16:21 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 4 Dec 2020 16:16:21 -0800
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <26DC3570-7909-443F-9AB5-87C58112B887@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>
 <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>
 <26DC3570-7909-443F-9AB5-87C58112B887@cleverelephant.ca>
Message-ID: <500965BF-C47D-4AC3-B0DE-D856A18D05C0@cleverelephant.ca>



> On Dec 4, 2020, at 4:08 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> 
> 
>> On Dec 4, 2020, at 1:10 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>> 
>> 
>>> On Dec 3, 2020, at 10:18 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>>> 
>>> On 12/3/20 12:17 AM, Paul Ramsey wrote:
>>>> without any further ado, here's a beta2 release for your testing pleasure
>>> 
>>> testrunner fails on arm64, ppc64el, powerpc, ppc64, riscv64:
>> 
>> Have we ever passed? Perhaps I made a big mistake removing ttmath. 
>> 
>> Anyways, here's what I've learned today, testing on an AWS ARM64 server.
>> 
>> * Still no obvious reason why these platforms shouldn't just work, if they implement IEEE conforming operations on double.
>> * There's something called FLT_EVAL_METHOD in <cfloat> which might indicate non-IEEE handling of double, but... my test server insists it is FLT_EVAL_METHOD == 0 "evaluate just to the range and precision of the type".
>> 
>> Wondering if there was a brutal hack-around, and noting that "long double" is increasingly a "thing", I took our DD class, and hacked out all the smarts and substituted long double implementations.
>> 
>> https://github.com/pramsey/geos/tree/dd-arm
>> 
>> Interestingly, this implementation passes all the geos::math::DD tests! The ARM64 long double appears to have a full 128bit implementation. Running the same thing on Intel x64 fails a number of tests. This is probably because the long double implementation on x64 has only 80 bits (according to the internet).
>> 
>> Does all this test passing mean that a direct use of long double will work on platforms that support it? Apparently not. The ARM build still fails on quite a few tests of varying sorts, just not on the DD tests.
>> 
>> 	 90 - unit-capi-GEOSVoronoiDiagram (Failed)
>> 	140 -unit-linearref-LengthIndexedLine (Failed)
>> 	208 - general-TestCentroid (Failed)
>> 	260 - issue-issue-geos-275 (Failed)
>> 	267 - issue-issue-geos-398 (Failed)
>> 	349 - robust-TestOverlay-pg-list (Failed)
>> 
>> Where does this leave us? With a long research project on ARM64 to track down why these tests fail and/or why the DD implementation fails.
> 
> Since this was a finite set of test failures and I was wondering if these failures were "real" or "tiny", I started going through them and the Voronoi failures seemed to fall into the "tiny" category. There was/is clearly a double precision equality test in the code that is returning true on one platform and false on another, because the answers are very very similar.
> 
> When I moved onto unit-linearref-LengthIndexedLine test, there wasn't any good printed debugging, so I broke out the debugger, and I had to rebuild in Debug mode. Guess what:
> 
>  100% tests passed, 0 tests failed out of 364
> 
> Yep, with the hardware long double for precision and in debug mode every test passes. So the problems on ARM64 are even *more* awful to figure out. Something about the optimized release build is different enough to matter.

In fact, a debug build passes all tests straight off master, no replacement work on DD required. This perhaps explains my success testing GEOS on ARM earlier.

P


From pramsey at cleverelephant.ca  Fri Dec  4 16:44:49 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 4 Dec 2020 16:44:49 -0800
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <500965BF-C47D-4AC3-B0DE-D856A18D05C0@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>
 <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>
 <26DC3570-7909-443F-9AB5-87C58112B887@cleverelephant.ca>
 <500965BF-C47D-4AC3-B0DE-D856A18D05C0@cleverelephant.ca>
Message-ID: <B0038889-781C-4C51-B3D7-6D864DCE8B30@cleverelephant.ca>



> On Dec 4, 2020, at 4:16 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> 
> 
>> On Dec 4, 2020, at 4:08 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>> 
>> 
>> 
>>> On Dec 4, 2020, at 1:10 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>>> 
>>> 
>>>> On Dec 3, 2020, at 10:18 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>>>> 
>>>> On 12/3/20 12:17 AM, Paul Ramsey wrote:
>>>>> without any further ado, here's a beta2 release for your testing pleasure
>>>> 
>>>> testrunner fails on arm64, ppc64el, powerpc, ppc64, riscv64:
>>> 
>>> Have we ever passed? Perhaps I made a big mistake removing ttmath. 
>>> 
>>> Anyways, here's what I've learned today, testing on an AWS ARM64 server.
>>> 
>>> * Still no obvious reason why these platforms shouldn't just work, if they implement IEEE conforming operations on double.
>>> * There's something called FLT_EVAL_METHOD in <cfloat> which might indicate non-IEEE handling of double, but... my test server insists it is FLT_EVAL_METHOD == 0 "evaluate just to the range and precision of the type".
>>> 
>>> Wondering if there was a brutal hack-around, and noting that "long double" is increasingly a "thing", I took our DD class, and hacked out all the smarts and substituted long double implementations.
>>> 
>>> https://github.com/pramsey/geos/tree/dd-arm
>>> 
>>> Interestingly, this implementation passes all the geos::math::DD tests! The ARM64 long double appears to have a full 128bit implementation. Running the same thing on Intel x64 fails a number of tests. This is probably because the long double implementation on x64 has only 80 bits (according to the internet).
>>> 
>>> Does all this test passing mean that a direct use of long double will work on platforms that support it? Apparently not. The ARM build still fails on quite a few tests of varying sorts, just not on the DD tests.
>>> 
>>> 	 90 - unit-capi-GEOSVoronoiDiagram (Failed)
>>> 	140 -unit-linearref-LengthIndexedLine (Failed)
>>> 	208 - general-TestCentroid (Failed)
>>> 	260 - issue-issue-geos-275 (Failed)
>>> 	267 - issue-issue-geos-398 (Failed)
>>> 	349 - robust-TestOverlay-pg-list (Failed)
>>> 
>>> Where does this leave us? With a long research project on ARM64 to track down why these tests fail and/or why the DD implementation fails.
>> 
>> Since this was a finite set of test failures and I was wondering if these failures were "real" or "tiny", I started going through them and the Voronoi failures seemed to fall into the "tiny" category. There was/is clearly a double precision equality test in the code that is returning true on one platform and false on another, because the answers are very very similar.
>> 
>> When I moved onto unit-linearref-LengthIndexedLine test, there wasn't any good printed debugging, so I broke out the debugger, and I had to rebuild in Debug mode. Guess what:
>> 
>> 100% tests passed, 0 tests failed out of 364
>> 
>> Yep, with the hardware long double for precision and in debug mode every test passes. So the problems on ARM64 are even *more* awful to figure out. Something about the optimized release build is different enough to matter.
> 
> In fact, a debug build passes all tests straight off master, no replacement work on DD required. This perhaps explains my success testing GEOS on ARM earlier.

Narrowing the situation further: I can do a standard release build using CLANG and it passes all tests. This problem is only associated with GCC and the flags it uses for a release build. Not clear which ones are the problem though, they all look pretty anodyne.

P

From pramsey at cleverelephant.ca  Fri Dec  4 17:20:00 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 4 Dec 2020 17:20:00 -0800
Subject: [geos-devel] 3.9.0beta2
In-Reply-To: <B0038889-781C-4C51-B3D7-6D864DCE8B30@cleverelephant.ca>
References: <6ECA4D10-778E-4B0A-A243-F4920EC78260@cleverelephant.ca>
 <CDB12E6F-4550-4394-8ADF-625DCAE12ED2@cleverelephant.ca>
 <00ab74c3-0c54-9cbf-4efd-26a11b94e52b@xs4all.nl>
 <1FE4B8A5-902E-47F2-A353-169F2D6A005E@cleverelephant.ca>
 <26DC3570-7909-443F-9AB5-87C58112B887@cleverelephant.ca>
 <500965BF-C47D-4AC3-B0DE-D856A18D05C0@cleverelephant.ca>
 <B0038889-781C-4C51-B3D7-6D864DCE8B30@cleverelephant.ca>
Message-ID: <7FCF02AE-7555-459B-8423-D7128A61CB81@cleverelephant.ca>



> On Dec 4, 2020, at 4:44 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> 
> 
>> On Dec 4, 2020, at 4:16 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>> 
>> 
>> 
>>> On Dec 4, 2020, at 4:08 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>>> 
>>> 
>>> 
>>>> On Dec 4, 2020, at 1:10 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>>>> 
>>>> 
>>>>> On Dec 3, 2020, at 10:18 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>>>>> 
>>>>> On 12/3/20 12:17 AM, Paul Ramsey wrote:
>>>>>> without any further ado, here's a beta2 release for your testing pleasure
>>>>> 
>>>>> testrunner fails on arm64, ppc64el, powerpc, ppc64, riscv64:
>>>> 
>>>> Have we ever passed? Perhaps I made a big mistake removing ttmath. 
>>>> 
>>>> Anyways, here's what I've learned today, testing on an AWS ARM64 server.
>>>> 
>>>> * Still no obvious reason why these platforms shouldn't just work, if they implement IEEE conforming operations on double.
>>>> * There's something called FLT_EVAL_METHOD in <cfloat> which might indicate non-IEEE handling of double, but... my test server insists it is FLT_EVAL_METHOD == 0 "evaluate just to the range and precision of the type".
>>>> 
>>>> Wondering if there was a brutal hack-around, and noting that "long double" is increasingly a "thing", I took our DD class, and hacked out all the smarts and substituted long double implementations.
>>>> 
>>>> https://github.com/pramsey/geos/tree/dd-arm
>>>> 
>>>> Interestingly, this implementation passes all the geos::math::DD tests! The ARM64 long double appears to have a full 128bit implementation. Running the same thing on Intel x64 fails a number of tests. This is probably because the long double implementation on x64 has only 80 bits (according to the internet).
>>>> 
>>>> Does all this test passing mean that a direct use of long double will work on platforms that support it? Apparently not. The ARM build still fails on quite a few tests of varying sorts, just not on the DD tests.
>>>> 
>>>> 	 90 - unit-capi-GEOSVoronoiDiagram (Failed)
>>>> 	140 -unit-linearref-LengthIndexedLine (Failed)
>>>> 	208 - general-TestCentroid (Failed)
>>>> 	260 - issue-issue-geos-275 (Failed)
>>>> 	267 - issue-issue-geos-398 (Failed)
>>>> 	349 - robust-TestOverlay-pg-list (Failed)
>>>> 
>>>> Where does this leave us? With a long research project on ARM64 to track down why these tests fail and/or why the DD implementation fails.
>>> 
>>> Since this was a finite set of test failures and I was wondering if these failures were "real" or "tiny", I started going through them and the Voronoi failures seemed to fall into the "tiny" category. There was/is clearly a double precision equality test in the code that is returning true on one platform and false on another, because the answers are very very similar.
>>> 
>>> When I moved onto unit-linearref-LengthIndexedLine test, there wasn't any good printed debugging, so I broke out the debugger, and I had to rebuild in Debug mode. Guess what:
>>> 
>>> 100% tests passed, 0 tests failed out of 364
>>> 
>>> Yep, with the hardware long double for precision and in debug mode every test passes. So the problems on ARM64 are even *more* awful to figure out. Something about the optimized release build is different enough to matter.
>> 
>> In fact, a debug build passes all tests straight off master, no replacement work on DD required. This perhaps explains my success testing GEOS on ARM earlier.
> 
> Narrowing the situation further: I can do a standard release build using CLANG and it passes all tests. This problem is only associated with GCC and the flags it uses for a release build. Not clear which ones are the problem though, they all look pretty anodyne.

Calling it a night. I cannot figure out which option, if any, in the O2 release build GNU g++ is doing is causing failures. The "obvious" one, -fno-fast-math, makes no difference. Nor does adding -ffloat-store. I wonder if it's possible that this is a g++ bug? The manual seems pretty clear that no options that affect IEEE correctness get flipped until you go to -O3 or -Ofast.

P



From geos-trac at osgeo.org  Tue Dec  8 15:32:11 2020
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 08 Dec 2020 23:32:11 -0000
Subject: [geos-devel] [GEOS] #1081: TopologyPreservingSimplifier /
 GEOSTopologyPreserveSimplify on Windows
In-Reply-To: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
References: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
Message-ID: <060.f8eade69ad1d665b9e6cbbf2ff921f36@osgeo.org>

#1081: TopologyPreservingSimplifier / GEOSTopologyPreserveSimplify on Windows
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.10.0
Component:  Unit Tests  |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * milestone:  3.9.0 => 3.10.0


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1081#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Dec  8 16:02:52 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 00:02:52 -0000
Subject: [geos-devel] [GEOS] #1081: TopologyPreservingSimplifier /
 GEOSTopologyPreserveSimplify on Windows
In-Reply-To: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
References: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
Message-ID: <060.4f7af8436831c07f1d456909b3cc6a50@osgeo.org>

#1081: TopologyPreservingSimplifier / GEOSTopologyPreserveSimplify on Windows
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.10.0
Component:  Unit Tests  |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by Mike Taves):

 Agree to push milestone to later, but I suggest to skip this test for MSVC
 for now to get green lights for a few CI builds.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1081#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Dec  8 19:56:59 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 03:56:59 -0000
Subject: [geos-devel] [GEOS] #1081: TopologyPreservingSimplifier /
 GEOSTopologyPreserveSimplify on Windows
In-Reply-To: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
References: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
Message-ID: <060.f25b1236d697528281127773a67a7d5e@osgeo.org>

#1081: TopologyPreservingSimplifier / GEOSTopologyPreserveSimplify on Windows
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.10.0
Component:  Unit Tests  |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by Mike Taves):

 See https://git.osgeo.org/gitea/geos/geos/pulls/113 to disable a small
 component only for MSVC. This is intended to be a temporary measure until
 this issue is properly resolved.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1081#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Wed Dec  9 03:13:17 2020
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 9 Dec 2020 12:13:17 +0100
Subject: [geos-devel] MakeValid and empty collection component
Message-ID: <20201209111317.GA15484@cdb>

I found out that GEOSMakeValid will remove EMPTY components from
collections. The PostGIS implementation of it does not do this.

The rationale was that a collection with EMPTY component is NOT
invalid as per OGC specification, so why removing them ? Isn't
that a job for CollectionHomogenize or similar ?

--strk;

From even.rouault at spatialys.com  Wed Dec  9 05:39:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 09 Dec 2020 14:39:21 +0100
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <20201209111317.GA15484@cdb>
References: <20201209111317.GA15484@cdb>
Message-ID: <1954170.WkiKgDjTPD@even-i700>

Sandro,

> I found out that GEOSMakeValid will remove EMPTY components from
> collections. The PostGIS implementation of it does not do this.
> 
> The rationale was that a collection with EMPTY component is NOT
> invalid as per OGC specification, so why removing them ? Isn't
> that a job for CollectionHomogenize or similar ?

I don't remember having done anything particular regarding treatment of EMPTY 
components. Might be an accident during the porting or the PostGIS 
implementation has changed in between.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From me at komzpa.net  Wed Dec  9 06:52:28 2020
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Wed, 9 Dec 2020 17:52:28 +0300
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <20201209111317.GA15484@cdb>
References: <20201209111317.GA15484@cdb>
Message-ID: <CAC8Q8t+QjdBSKc+CDSABeccr5WPY6248W-2rvVBs_-mqDwq3_A@mail.gmail.com>

Hi,

I believe there are two modes functions can operate in: geometry-preserving
or structure-preserving.
MakeValid will try to recover the geometry, but makes no effort to preserve
structure, sometimes it is impossible.

If you're using MakeValid, you expect the structure (the number of
subgeometries, multi-nonmulti, dimensionality..) to change. I don't see how
in this circumstances an attempt to save the EMPTY component will help any
use case.

On Wed, Dec 9, 2020 at 2:13 PM Sandro Santilli <strk at kbt.io> wrote:

> I found out that GEOSMakeValid will remove EMPTY components from
> collections. The PostGIS implementation of it does not do this.
>
> The rationale was that a collection with EMPTY component is NOT
> invalid as per OGC specification, so why removing them ? Isn't
> that a job for CollectionHomogenize or similar ?
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>


-- 
Darafei "Kom?pa" Praliaskouski
OSM BY Team - http://openstreetmap.by/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201209/f5c67ff6/attachment.html>

From pramsey at cleverelephant.ca  Wed Dec  9 08:46:34 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 9 Dec 2020 08:46:34 -0800
Subject: [geos-devel] 3.9.0 Train Departing
Message-ID: <35A69A61-EE26-4D05-B853-B5372CA395CB@cleverelephant.ca>

I am going to package a release today, and unless someone lights their hair on fire in the intervening 24 hours release tomorrow morning.

P.

From lr at pcorp.us  Wed Dec  9 09:43:08 2020
From: lr at pcorp.us (Regina Obe)
Date: Wed, 9 Dec 2020 12:43:08 -0500
Subject: [geos-devel] 3.9.0 Train Departing
In-Reply-To: <35A69A61-EE26-4D05-B853-B5372CA395CB@cleverelephant.ca>
References: <35A69A61-EE26-4D05-B853-B5372CA395CB@cleverelephant.ca>
Message-ID: <000701d6ce52$c241a350$46c4e9f0$@pcorp.us>

Yeh +1

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Wednesday, December 9, 2020 11:47 AM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] 3.9.0 Train Departing
> 
> I am going to package a release today, and unless someone lights their
hair
> on fire in the intervening 24 hours release tomorrow morning.
> 
> P.
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From mtnclimb at gmail.com  Wed Dec  9 10:09:24 2020
From: mtnclimb at gmail.com (Martin Davis)
Date: Wed, 9 Dec 2020 10:09:24 -0800
Subject: [geos-devel] 3.9.0 Train Departing
In-Reply-To: <35A69A61-EE26-4D05-B853-B5372CA395CB@cleverelephant.ca>
References: <35A69A61-EE26-4D05-B853-B5372CA395CB@cleverelephant.ca>
Message-ID: <CAK2ens22brncZvFBSzt4pohMOSgsRB4g5-uhLdH02iN+Lw9CAw@mail.gmail.com>

+1

On Wed, Dec 9, 2020 at 8:46 AM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> I am going to package a release today, and unless someone lights their
> hair on fire in the intervening 24 hours release tomorrow morning.
>
> P.
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201209/ebd06909/attachment-0001.html>

From strk at kbt.io  Wed Dec  9 12:11:24 2020
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 9 Dec 2020 21:11:24 +0100
Subject: [geos-devel] 3.9.0 Train Departing
In-Reply-To: <35A69A61-EE26-4D05-B853-B5372CA395CB@cleverelephant.ca>
References: <35A69A61-EE26-4D05-B853-B5372CA395CB@cleverelephant.ca>
Message-ID: <20201209201124.GA12363@cdb>

On Wed, Dec 09, 2020 at 08:46:34AM -0800, Paul Ramsey wrote:
> I am going to package a release today, and unless someone lights their hair on fire in the intervening 24 hours release tomorrow morning.

Go for it, we'll all onboard!

--strk;

From geos-trac at osgeo.org  Wed Dec  9 12:52:56 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 20:52:56 -0000
Subject: [geos-devel] [GEOS] Batch modify: #1068, #833, #835, #910, #911,
 #922, #932, #962, ...
In-Reply-To: <221.192cb8d70cd0b811aa3b6ad1cb52e447@osgeo.org>
References: <221.192cb8d70cd0b811aa3b6ad1cb52e447@osgeo.org>
Message-ID: <236.e3900b0279af3168f1f3ff26595c767e@osgeo.org>

Batch modification to #1068, #833, #835, #910, #911, #922, #932, #962, #964, #968, #972, #995, #997, #1000, #1003, #1009, #1012, #1032, #1039, #1040, #1041, #1045, #1049, #1052, #1059, #1061, #1071, #1072, #1074, #1075, #771, #915, #935, #940, #946, #965, #989, #1004, #1025, #1031, #1077 by pramsey:
milestone to 3.10.0

-- 
Tickets URL: <https://trac.osgeo.org/geos/query?id=1068%2C833%2C835%2C910%2C911%2C922%2C932%2C962%2C964%2C968%2C972%2C995%2C997%2C1000%2C1003%2C1009%2C1012%2C1032%2C1039%2C1040%2C1041%2C1045%2C1049%2C1052%2C1059%2C1061%2C1071%2C1072%2C1074%2C1075%2C771%2C915%2C935%2C940%2C946%2C965%2C989%2C1004%2C1025%2C1031%2C1077>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 13:29:11 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 21:29:11 -0000
Subject: [geos-devel] [GEOS] #1049: Inconsistency with POINT(nan nan)
In-Reply-To: <045.e7e07a87f900c22683dade4e63e106b1@osgeo.org>
References: <045.e7e07a87f900c22683dade4e63e106b1@osgeo.org>
Message-ID: <060.8cf8933281d269e0f1d4390ed9720a28@osgeo.org>

#1049: Inconsistency with POINT(nan nan)
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@?
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.10.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by Paul Ramsey <pramsey@?>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"693c1aa855263198d42153da0d12f56b2b7a6991/git" 693c1aa/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="693c1aa855263198d42153da0d12f56b2b7a6991"
 Correctly return isEmpty for hand-built empty points, closes #1049
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1049#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 13:29:41 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 21:29:41 -0000
Subject: [geos-devel] [GEOS] #1003: MontoneChainBuilder Assertion Error
In-Reply-To: <046.e6e121c7d2b8649bb7d7a413240019b4@osgeo.org>
References: <046.e6e121c7d2b8649bb7d7a413240019b4@osgeo.org>
Message-ID: <061.8d7fc7f6568ede65a4b6f6cb8ddffbd1@osgeo.org>

#1003: MontoneChainBuilder Assertion Error
------------------------+---------------------------
 Reporter:  apjoseph    |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.8.2
Component:  Default     |     Version:  3.8.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * version:  master => 3.8.0
 * milestone:  3.10.0 => 3.8.2


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1003#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 13:30:18 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 21:30:18 -0000
Subject: [geos-devel] [GEOS] #1068: Fix CMake Windows install: keep
 geos-config.cmake
In-Reply-To: <045.4862fdd97e05f862c7442084dc10152b@osgeo.org>
References: <045.4862fdd97e05f862c7442084dc10152b@osgeo.org>
Message-ID: <060.210343ff0e5927489c4cdfed296a91da@osgeo.org>

#1068: Fix CMake Windows install: keep geos-config.cmake
-----------------------------------+---------------------------
 Reporter:  Mike Taves             |       Owner:  geos-devel@?
     Type:  defect                 |      Status:  closed
 Priority:  blocker                |   Milestone:  3.10.0
Component:  Build/Install (cmake)  |     Version:  master
 Severity:  Unassigned             |  Resolution:  fixed
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => fixed


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1068#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 13:33:34 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 21:33:34 -0000
Subject: [geos-devel] [GEOS] #910: Difference operation resulted with a
 wrong geometry as a result of a precision limitation
In-Reply-To: <048.36d5128ab639412bc87cd1a59a7cf4ed@osgeo.org>
References: <048.36d5128ab639412bc87cd1a59a7cf4ed@osgeo.org>
Message-ID: <063.10f76a3c4bd7a8dd45288310103a6c82@osgeo.org>

#910: Difference operation resulted with a wrong geometry as a result of a
precision limitation
-------------------------------------------------+-------------------------
 Reporter:  yanivnavon                           |       Owner:  geos-
                                                 |  devel@?
     Type:  defect                               |      Status:  closed
 Priority:  major                                |   Milestone:  3.10.0
Component:  Default                              |     Version:  3.6.2
 Severity:  Significant                          |  Resolution:  invalid
 Keywords:  polygon, geometry, geometries,       |
  difference, union, multipolygon                |
-------------------------------------------------+-------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => invalid


Comment:

 As of 3.9 you might find the snap-rounded operations (difference with a
 tolerance) provide more predictability in terms of holding to a
 particularly domain grid, assuming you can stand the initial round-off
 stop.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/910#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 13:57:16 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 21:57:16 -0000
Subject: [geos-devel] [GEOS] #1068: Fix CMake Windows install: keep
 geos-config.cmake
In-Reply-To: <045.4862fdd97e05f862c7442084dc10152b@osgeo.org>
References: <045.4862fdd97e05f862c7442084dc10152b@osgeo.org>
Message-ID: <060.da3237708ba87cd6f83cbd452b41365a@osgeo.org>

#1068: Fix CMake Windows install: keep geos-config.cmake
-----------------------------------+---------------------------
 Reporter:  Mike Taves             |       Owner:  geos-devel@?
     Type:  defect                 |      Status:  closed
 Priority:  blocker                |   Milestone:  3.9.0
Component:  Build/Install (cmake)  |     Version:  master
 Severity:  Unassigned             |  Resolution:  fixed
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by pramsey):

 * milestone:  3.10.0 => 3.9.0


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1068#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 15:19:11 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 23:19:11 -0000
Subject: [geos-devel] [GEOS] #1061: Cannot build GEOS on Windows 10
 under MinGW
In-Reply-To: <047.7e6fca943d9812956254e165f3f9ca71@osgeo.org>
References: <047.7e6fca943d9812956254e165f3f9ca71@osgeo.org>
Message-ID: <062.45d2400be1aaf0772856205f01481adc@osgeo.org>

#1061: Cannot build GEOS on Windows 10 under MinGW
-----------------------------+---------------------------
 Reporter:  twrackers        |       Owner:  geos-devel@?
     Type:  defect           |      Status:  new
 Priority:  major            |   Milestone:  3.8.2
Component:  Default          |     Version:  3.6.2
 Severity:  Unassigned       |  Resolution:
 Keywords:  MinGW geos make  |
-----------------------------+---------------------------
Changes (by pramsey):

 * milestone:  3.10.0 => 3.8.2


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1061#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 15:19:23 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 23:19:23 -0000
Subject: [geos-devel] [GEOS] #1059: Cannot build GEOS on Windows 10
 under MinGW
In-Reply-To: <047.65d740a306713594cb22add661480e8b@osgeo.org>
References: <047.65d740a306713594cb22add661480e8b@osgeo.org>
Message-ID: <062.0ad90c609c9ac9dfb137a5983203dc1c@osgeo.org>

#1059: Cannot build GEOS on Windows 10 under MinGW
------------------------+---------------------------
 Reporter:  twrackers   |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.8.2
Component:  Default     |     Version:  3.8.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * milestone:  3.10.0 => 3.8.2


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1059#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 15:38:43 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 09 Dec 2020 23:38:43 -0000
Subject: [geos-devel] [GEOS] #910: Difference operation resulted with a
 wrong geometry as a result of a precision limitation
In-Reply-To: <048.36d5128ab639412bc87cd1a59a7cf4ed@osgeo.org>
References: <048.36d5128ab639412bc87cd1a59a7cf4ed@osgeo.org>
Message-ID: <063.3c3b3695a20a79368ff19acb5d03afed@osgeo.org>

#910: Difference operation resulted with a wrong geometry as a result of a
precision limitation
-------------------------------------------------+-------------------------
 Reporter:  yanivnavon                           |       Owner:  geos-
                                                 |  devel@?
     Type:  defect                               |      Status:  closed
 Priority:  major                                |   Milestone:  3.10.0
Component:  Default                              |     Version:  3.6.2
 Severity:  Significant                          |  Resolution:  invalid
 Keywords:  polygon, geometry, geometries,       |
  difference, union, multipolygon                |
-------------------------------------------------+-------------------------

Comment (by mdavis):

 The snapping noding works well for this, and doesn't require rounding all
 the output coordinates.  Perhaps we should expose that capability as well
 as snap-rounding.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/910#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 16:31:34 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 10 Dec 2020 00:31:34 -0000
Subject: [geos-devel] [GEOS] #682: ST_OffsetCurve fails for some
 geometries
In-Reply-To: <045.5d5896ed518212390aa6fa9702c0e82a@osgeo.org>
References: <045.5d5896ed518212390aa6fa9702c0e82a@osgeo.org>
Message-ID: <060.d50c2878268f2cbc008a5aaf73b64f2a@osgeo.org>

#682: ST_OffsetCurve fails for some geometries
------------------------+---------------------------
 Reporter:  jventin     |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.6.4
Component:  Default     |     Version:  3.4.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by jengland):

 A cross-reference to what I think is another example of this error using
 `parallel_offset` on a LineString in Shapely.

 https://github.com/Toblerity/Shapely/issues/820

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/682#comment:8>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From even.rouault at spatialys.com  Wed Dec  9 16:35:17 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 10 Dec 2020 01:35:17 +0100
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <20201209111317.GA15484@cdb>
References: <20201209111317.GA15484@cdb>
Message-ID: <4960162.VVR47CNFak@even-i700>

On mercredi 9 d?cembre 2020 12:13:17 CET Sandro Santilli wrote:
> I found out that GEOSMakeValid will remove EMPTY components from
> collections. The PostGIS implementation of it does not do this.
> 
> The rationale was that a collection with EMPTY component is NOT
> invalid as per OGC specification, so why removing them ? Isn't
> that a job for CollectionHomogenize or similar ?

Actually the unit tests have checks for this.

See tests/xmltester/tests/misc/makevalid.xml

<case>
    <desc>makevalid/geometry_collection</desc>
  <a>GEOMETRYCOLLECTION(POINT EMPTY,LINESTRING EMPTY,POLYGON((0 0,0 1,1 1,1 
0,0 0),(0 0.5,0.5 0.1,1 0.5,0 0.5)))</a>
  <test>
    <op name="makevalid" arg1="a">
        GEOMETRYCOLLECTION (MULTIPOLYGON (((0.0 0.0, 0.0 0.5, 0.5 0.1, 1.0 
0.5, 1.0 0.0, 0.0 0.0)), ((0.0 0.5, 0.0 1.0, 1.0 1.0, 1.0 0.5, 0.0 
0.5))),LINESTRING EMPTY, POINT EMPTY)
    </op>
  </test>
</case>



-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From geos-trac at osgeo.org  Wed Dec  9 17:29:58 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 10 Dec 2020 01:29:58 -0000
Subject: [geos-devel] [GEOS] #1084: OffsetCurve -- TopologyException: found
 non-noded intersection between...
Message-ID: <046.badf162ad5eb03713257854383884fec@osgeo.org>

#1084: OffsetCurve -- TopologyException: found non-noded intersection between...
------------------------+--------------------------
 Reporter:  jengland    |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.9.1
Component:  Default     |    Version:  3.9.0
 Severity:  Unassigned  |   Keywords:  OffsetCurve
------------------------+--------------------------
 This is coming from shapely's `parallel_offset`. Here is an example:

 {{{
 from shapely import wkt, geos

 print(geos.geos_version_string)

 wkt.loads('LINESTRING (0 9, 21 30, 49 45, 61 70, 81
 90)').parallel_offset(3)
 }}}

 Has the following output

 {{{
 3.8.0-CAPI-1.13.1
 TopologyException: found non-noded intersection between LINESTRING
 (50.4167 -21.6444, 22.8077 -36.435) and LINESTRING (22.8077 -36.435,
 37.4683 -21.7743) at 22.807666014902189 -36.434974672217095
 <python traceback>
 }}}

 I can mine them with the attached script at a rate of about 5-10 per
 100,000 LineString s. The LineString s I'm trying are all simple
 (relatively straight on a 100x100 integer grid with 5 points each). And
 all the offsets are 0-9 ints.

 This seems to be different from #682, because there the error message is
 different (i.e. `TopologyException: assigned depths do not match at ...`)
 and I cannot easily mine for exception of that message.

 Hopefully it's acceptable to submit a `.py` example file. I can try to
 reproduce this using GEOS directly if necessary.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1084>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 17:32:03 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 10 Dec 2020 01:32:03 -0000
Subject: [geos-devel] [GEOS] #1084: OffsetCurve -- TopologyException:
 found non-noded intersection between...
In-Reply-To: <046.badf162ad5eb03713257854383884fec@osgeo.org>
References: <046.badf162ad5eb03713257854383884fec@osgeo.org>
Message-ID: <061.4db8d83b75bdedc5ad6b37ebbd4972f8@osgeo.org>

#1084: OffsetCurve -- TopologyException: found non-noded intersection between...
-------------------------+---------------------------
 Reporter:  jengland     |       Owner:  geos-devel@?
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.9.1
Component:  Default      |     Version:  3.9.0
 Severity:  Unassigned   |  Resolution:
 Keywords:  OffsetCurve  |
-------------------------+---------------------------
Changes (by jengland):

 * Attachment "mine_topology_exceptions.py" added.

 Python file using shapely to mine offset excpetions

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1084>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec  9 17:34:16 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 10 Dec 2020 01:34:16 -0000
Subject: [geos-devel] [GEOS] #1084: OffsetCurve -- TopologyException:
 found non-noded intersection between...
In-Reply-To: <046.badf162ad5eb03713257854383884fec@osgeo.org>
References: <046.badf162ad5eb03713257854383884fec@osgeo.org>
Message-ID: <061.6424891ce1e67eeca6093501a1748731@osgeo.org>

#1084: OffsetCurve -- TopologyException: found non-noded intersection between...
-------------------------+---------------------------
 Reporter:  jengland     |       Owner:  geos-devel@?
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.9.1
Component:  Default      |     Version:  3.8.0
 Severity:  Unassigned   |  Resolution:
 Keywords:  OffsetCurve  |
-------------------------+---------------------------
Changes (by jengland):

 * version:  3.9.0 => 3.8.0


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1084#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From Roger.Bivand at nhh.no  Thu Dec 10 00:38:01 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 10 Dec 2020 09:38:01 +0100
Subject: [geos-devel] beta2 still needs --enable-overlayng
Message-ID: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>

Hi,

Please confirm that the 3.9.0 release will as advertised enable OverlayNG 
by default. As lately as beta2 configure still seemed to need 
--enable-overlayng. Ad-hoc tests from late October to detect ring order 
fail without --enable-overlayng. I repeat that it is necessary to provide 
a clear way to interrogate the runtime to find out whether it supports 
OverlayNG.

Next question - why no RC, is it fair to just go from beta to release?

Best wishes,

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger.Bivand at nhh.no  Thu Dec 10 00:56:44 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 10 Dec 2020 09:56:44 +0100
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
Message-ID: <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>

Even with --enable-overlayng, the ring orders are different from those 
generated by OverlayNG in late October. At that stage we could 
differentiate by typical ring order patterns, now something else has 
changed and we cannot see whether OverlayNG is operative or not. Lots of 
tests in R packages built against GEOS have relied on operations returning 
ring-order identical polygons (or coord-order identical line segments) 
compared with stored expected values.

Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does it 
appear as the last line in ./configure output; all I can see is 
--disable-overlayng as a configure option. How can we test for the 
presence of OverlayNG in the runtime? Recall that any user compiling from 
source or any packager may use the configure argument.

Please do not simply rely on the version number, it is sufficiently 
robust.

Roger

On Thu, 10 Dec 2020, Roger Bivand wrote:

> Hi,
>
> Please confirm that the 3.9.0 release will as advertised enable OverlayNG by 
> default. As lately as beta2 configure still seemed to need 
> --enable-overlayng. Ad-hoc tests from late October to detect ring order fail 
> without --enable-overlayng. I repeat that it is necessary to provide a clear 
> way to interrogate the runtime to find out whether it supports OverlayNG.
>
> Next question - why no RC, is it fair to just go from beta to release?
>
> Best wishes,
>
> Roger
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From strk at kbt.io  Thu Dec 10 03:08:58 2020
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 10 Dec 2020 12:08:58 +0100
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <4960162.VVR47CNFak@even-i700>
References: <20201209111317.GA15484@cdb>
 <4960162.VVR47CNFak@even-i700>
Message-ID: <20201210110858.GB14372@cdb>

On Thu, Dec 10, 2020 at 01:35:17AM +0100, Even Rouault wrote:
> On mercredi 9 d?cembre 2020 12:13:17 CET Sandro Santilli wrote:
> > I found out that GEOSMakeValid will remove EMPTY components from
> > collections. The PostGIS implementation of it does not do this.
> > 
> > The rationale was that a collection with EMPTY component is NOT
> > invalid as per OGC specification, so why removing them ? Isn't
> > that a job for CollectionHomogenize or similar ?
> 
> Actually the unit tests have checks for this.
> 
> See tests/xmltester/tests/misc/makevalid.xml
> 
> <case>
>     <desc>makevalid/geometry_collection</desc>
>   <a>GEOMETRYCOLLECTION(POINT EMPTY,LINESTRING EMPTY,POLYGON((0 0,0 1,1 1,1 
> 0,0 0),(0 0.5,0.5 0.1,1 0.5,0 0.5)))</a>
>   <test>
>     <op name="makevalid" arg1="a">
>         GEOMETRYCOLLECTION (MULTIPOLYGON (((0.0 0.0, 0.0 0.5, 0.5 0.1, 1.0 
> 0.5, 1.0 0.0, 0.0 0.0)), ((0.0 0.5, 0.0 1.0, 1.0 1.0, 1.0 0.5, 0.0 
> 0.5))),LINESTRING EMPTY, POINT EMPTY)
>     </op>
>   </test>
> </case>

Odd, for a MULTIPOINT with empty components it seems to strip it.
But I cannot add the test because it looks like EMPTY is not accepted
in WKT:

    MULTIPOINT(EMPTY,1 1,EMPTY,0 0)
    ParseException: Expected number but encountered word: 'EMPTY')

--strk;

From strk at kbt.io  Thu Dec 10 03:16:40 2020
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 10 Dec 2020 12:16:40 +0100
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <20201210110858.GB14372@cdb>
References: <20201209111317.GA15484@cdb> <4960162.VVR47CNFak@even-i700>
 <20201210110858.GB14372@cdb>
Message-ID: <20201210111640.GD14372@cdb>

On Thu, Dec 10, 2020 at 12:08:58PM +0100, Sandro Santilli wrote:

> Odd, for a MULTIPOINT with empty components it seems to strip it.
> But I cannot add the test because it looks like EMPTY is not accepted
> in WKT:
> 
>     MULTIPOINT(EMPTY,1 1,EMPTY,0 0)
>     ParseException: Expected number but encountered word: 'EMPTY')

Ok, figured: it's just the PostGIS->GEOS->PostGIS roundtrip conversion
dropping those components !

  strk=# select ST_AsText(postgis_geos_noop('GEOMETRYCOLLECTION(POINT EMPTY, POINT(1 1))'));
             st_astext
  --------------------------------
   GEOMETRYCOLLECTION(POINT(1 1))
  (1 row)

So, not related to GEOSMakeValid per-se, just with the adapter...

--strk;

From geos-trac at osgeo.org  Thu Dec 10 06:31:40 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 10 Dec 2020 14:31:40 -0000
Subject: [geos-devel] [GEOS] #1085: RelateOp crashes on input with empty
 components
Message-ID: <042.42c37faefaa101ea858c1cfbbab4b95d@osgeo.org>

#1085: RelateOp crashes on input with empty components
------------------------+--------------------------
 Reporter:  strk        |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.6.4
Component:  Default     |    Version:  3.6.3
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 From https://trac.osgeo.org/postgis/ticket/4814#comment:4
 we observe a crash in RelateOp when inputs contain empty components.

 Inputs:
 {{{
 LINESTRING(10 0,0 10)
 MULTILINESTRING((10 -10,-10 10), EMPTY)
 }}}

 Valgrind report:

 {{{
 ==21144== Invalid read of size 8
 ==21144==    at 0x19D4F4C2: operator== (Coordinate.inl:123)
 ==21144==    by 0x19D4F4C2:
 geos::algorithm::PointLocator::locate(geos::geom::Coordinate const&,
 geos::geom::LineString const*) (PointLocator.cpp:133)
 ==21144==    by 0x19D4F870:
 geos::algorithm::PointLocator::computeLocation(geos::geom::Coordinate
 const&, geos::geom::Geometry const*) (PointLocator.cpp:82)
 ==21144==    by 0x19D4FA88:
 geos::algorithm::PointLocator::locate(geos::geom::Coordinate const&,
 geos::geom::Geometry const*) (PointLocator.cpp:55)
 ==21144==    by 0x19DDF78F:
 geos::operation::relate::RelateComputer::labelIsolatedNode(geos::geomgraph::Node*,
 int) (RelateComputer.cpp:509)
 ==21144==    by 0x19DDF847:
 geos::operation::relate::RelateComputer::labelIsolatedNodes()
 (RelateComputer.cpp:499)
 ==21144==    by 0x19DDFDCD:
 geos::operation::relate::RelateComputer::computeIM()
 (RelateComputer.cpp:162)
 ==21144==    by 0x19DE0774:
 geos::operation::relate::RelateOp::relate(geos::geom::Geometry const*,
 geos::geom::Geometry const*) (RelateOp.cpp:42)
 ==21144==    by 0x19D59710: relate (Geometry.cpp:456)
 ==21144==    by 0x19D59710:
 geos::geom::Geometry::intersects(geos::geom::Geometry const*) const
 (Geometry.cpp:344)
 ==21144==    by 0x194090E0: GEOSIntersects_r (geos_ts_c.cpp:500)
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1085>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Thu Dec 10 06:48:38 2020
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 10 Dec 2020 15:48:38 +0100
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <20201210111640.GD14372@cdb>
References: <20201209111317.GA15484@cdb> <4960162.VVR47CNFak@even-i700>
 <20201210110858.GB14372@cdb> <20201210111640.GD14372@cdb>
Message-ID: <20201210144838.GE14372@cdb>

On Thu, Dec 10, 2020 at 12:16:40PM +0100, Sandro Santilli wrote:
> On Thu, Dec 10, 2020 at 12:08:58PM +0100, Sandro Santilli wrote:
> 
> > Odd, for a MULTIPOINT with empty components it seems to strip it.
> > But I cannot add the test because it looks like EMPTY is not accepted
> > in WKT:
> > 
> >     MULTIPOINT(EMPTY,1 1,EMPTY,0 0)
> >     ParseException: Expected number but encountered word: 'EMPTY')
> 
> Ok, figured: it's just the PostGIS->GEOS->PostGIS roundtrip conversion
> dropping those components !
> 
>   strk=# select ST_AsText(postgis_geos_noop('GEOMETRYCOLLECTION(POINT EMPTY, POINT(1 1))'));
>              st_astext
>   --------------------------------
>    GEOMETRYCOLLECTION(POINT(1 1))
>   (1 row)
> 
> So, not related to GEOSMakeValid per-se, just with the adapter...

For the record, in case anyone wants to follow:
https://trac.osgeo.org/postgis/ticket/4814

To be noted that actually passing those empty components
to GEOS exposes crashes in GEOS (more on the ticket above)

--strk;

From geos-trac at osgeo.org  Thu Dec 10 06:48:59 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 10 Dec 2020 14:48:59 -0000
Subject: [geos-devel] [GEOS] #1085: RelateOp crashes on input with empty
 components
In-Reply-To: <042.42c37faefaa101ea858c1cfbbab4b95d@osgeo.org>
References: <042.42c37faefaa101ea858c1cfbbab4b95d@osgeo.org>
Message-ID: <057.47045f61bb6c897db865f24b43cc45cc@osgeo.org>

#1085: RelateOp crashes on input with empty components
------------------------+-----------------------
 Reporter:  strk        |       Owner:  strk
     Type:  defect      |      Status:  assigned
 Priority:  blocker     |   Milestone:  3.6.4
Component:  Default     |     Version:  3.6.3
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+-----------------------
Changes (by strk):

 * status:  new => assigned
 * priority:  major => blocker
 * owner:  geos-devel@? => strk


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1085#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Thu Dec 10 08:25:25 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 10 Dec 2020 08:25:25 -0800
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
Message-ID: <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>

I am loath to add a live run-time API end point to check for a "feature" that is actually the core engine. It's not like we're ever going to allow people to swap engines. The old engine is going to eventually be ripped out. The way you know you have NG is that you can run "make check" and it works, because if you run "make check" with the old engine, regression is going to fail. I can ensure there is configure-time output on the status, but that's really about as far as I'm willing to go.

P

> On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> Even with --enable-overlayng, the ring orders are different from those generated by OverlayNG in late October. At that stage we could differentiate by typical ring order patterns, now something else has changed and we cannot see whether OverlayNG is operative or not. Lots of tests in R packages built against GEOS have relied on operations returning ring-order identical polygons (or coord-order identical line segments) compared with stored expected values.
> 
> Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does it appear as the last line in ./configure output; all I can see is --disable-overlayng as a configure option. How can we test for the presence of OverlayNG in the runtime? Recall that any user compiling from source or any packager may use the configure argument.
> 
> Please do not simply rely on the version number, it is sufficiently robust.
> 
> Roger
> 
> On Thu, 10 Dec 2020, Roger Bivand wrote:
> 
>> Hi,
>> 
>> Please confirm that the 3.9.0 release will as advertised enable OverlayNG by default. As lately as beta2 configure still seemed to need --enable-overlayng. Ad-hoc tests from late October to detect ring order fail without --enable-overlayng. I repeat that it is necessary to provide a clear way to interrogate the runtime to find out whether it supports OverlayNG.
>> 
>> Next question - why no RC, is it fair to just go from beta to release?
>> 
>> Best wishes,
>> 
>> Roger
>> 
>> 
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From Roger.Bivand at nhh.no  Thu Dec 10 08:46:39 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 10 Dec 2020 17:46:39 +0100
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
 <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
Message-ID: <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>

Thanks for responding. The motivation is that users of R (and others) 
packages, using R packages interfacing GEOS will see changes in output 
geometries. We can agree that the new engine is preferable, but when their 
unit tests fail, they need to know why. They cannot run make check, and in 
the case of most they will not have a dll or dylib either, as the CRAN 
package binaries for Windows and MacOS are built static. The lack of a 
convienient and deterministic route to knowing that the reason for the 
different result is that GEOS is on OverlayNG is a problem, because we 
cannot give easy self-help (run sf or rgeos function x to tell you if 
OverlayNG is operating). All we can do is assume for all cases that 3.9.0 
is OverlayNG.

Roger

On Thu, 10 Dec 2020, Paul Ramsey wrote:

> I am loath to add a live run-time API end point to check for a "feature" 
> that is actually the core engine. It's not like we're ever going to 
> allow people to swap engines. The old engine is going to eventually be 
> ripped out. The way you know you have NG is that you can run "make 
> check" and it works, because if you run "make check" with the old 
> engine, regression is going to fail. I can ensure there is 
> configure-time output on the status, but that's really about as far as 
> I'm willing to go.
>
> P
>
>> On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> Even with --enable-overlayng, the ring orders are different from those generated by OverlayNG in late October. At that stage we could differentiate by typical ring order patterns, now something else has changed and we cannot see whether OverlayNG is operative or not. Lots of tests in R packages built against GEOS have relied on operations returning ring-order identical polygons (or coord-order identical line segments) compared with stored expected values.
>>
>> Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does it appear as the last line in ./configure output; all I can see is --disable-overlayng as a configure option. How can we test for the presence of OverlayNG in the runtime? Recall that any user compiling from source or any packager may use the configure argument.
>>
>> Please do not simply rely on the version number, it is sufficiently robust.
>>
>> Roger
>>
>> On Thu, 10 Dec 2020, Roger Bivand wrote:
>>
>>> Hi,
>>>
>>> Please confirm that the 3.9.0 release will as advertised enable OverlayNG by default. As lately as beta2 configure still seemed to need --enable-overlayng. Ad-hoc tests from late October to detect ring order fail without --enable-overlayng. I repeat that it is necessary to provide a clear way to interrogate the runtime to find out whether it supports OverlayNG.
>>>
>>> Next question - why no RC, is it fair to just go from beta to release?
>>>
>>> Best wishes,
>>>
>>> Roger
>>>
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Thu Dec 10 09:16:55 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 10 Dec 2020 09:16:55 -0800
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
 <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
 <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>
Message-ID: <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>

I can make it more deterministic by just removing the compile-time option altogether. That way, you build 3.9, you get NG, no question about it. I don't see any purpose in the compile-time switch anymore, it was convenient during development, but now that we've done all teh changes in regresion etc, both in GEOS and in PostGIS and so on (BTW, don't forget to aggressively add normalize to your tests) the utility of the compile-time switch is much lower, and we can just leave the #define in place and manually flip it if, for some reason, we want to test old behaviour.

Thoughts?

P

> On Dec 10, 2020, at 8:46 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> Thanks for responding. The motivation is that users of R (and others) packages, using R packages interfacing GEOS will see changes in output geometries. We can agree that the new engine is preferable, but when their unit tests fail, they need to know why. They cannot run make check, and in the case of most they will not have a dll or dylib either, as the CRAN package binaries for Windows and MacOS are built static. The lack of a convienient and deterministic route to knowing that the reason for the different result is that GEOS is on OverlayNG is a problem, because we cannot give easy self-help (run sf or rgeos function x to tell you if OverlayNG is operating). All we can do is assume for all cases that 3.9.0 is OverlayNG.
> 
> Roger
> 
> On Thu, 10 Dec 2020, Paul Ramsey wrote:
> 
>> I am loath to add a live run-time API end point to check for a "feature" that is actually the core engine. It's not like we're ever going to allow people to swap engines. The old engine is going to eventually be ripped out. The way you know you have NG is that you can run "make check" and it works, because if you run "make check" with the old engine, regression is going to fail. I can ensure there is configure-time output on the status, but that's really about as far as I'm willing to go.
>> 
>> P
>> 
>>> On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>> 
>>> Even with --enable-overlayng, the ring orders are different from those generated by OverlayNG in late October. At that stage we could differentiate by typical ring order patterns, now something else has changed and we cannot see whether OverlayNG is operative or not. Lots of tests in R packages built against GEOS have relied on operations returning ring-order identical polygons (or coord-order identical line segments) compared with stored expected values.
>>> 
>>> Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does it appear as the last line in ./configure output; all I can see is --disable-overlayng as a configure option. How can we test for the presence of OverlayNG in the runtime? Recall that any user compiling from source or any packager may use the configure argument.
>>> 
>>> Please do not simply rely on the version number, it is sufficiently robust.
>>> 
>>> Roger
>>> 
>>> On Thu, 10 Dec 2020, Roger Bivand wrote:
>>> 
>>>> Hi,
>>>> 
>>>> Please confirm that the 3.9.0 release will as advertised enable OverlayNG by default. As lately as beta2 configure still seemed to need --enable-overlayng. Ad-hoc tests from late October to detect ring order fail without --enable-overlayng. I repeat that it is necessary to provide a clear way to interrogate the runtime to find out whether it supports OverlayNG.
>>>> 
>>>> Next question - why no RC, is it fair to just go from beta to release?
>>>> 
>>>> Best wishes,
>>>> 
>>>> Roger
>>>> 
>>>> 
>>> 
>>> --
>>> Roger Bivand
>>> Department of Economics, Norwegian School of Economics,
>>> Helleveien 30, N-5045 Bergen, Norway.
>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>> https://orcid.org/0000-0003-2392-6140
>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>> 
>> 
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger.Bivand at nhh.no  Thu Dec 10 11:12:41 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 10 Dec 2020 20:12:41 +0100
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
 <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
 <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>
 <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>
Message-ID: <b1eb3342-7b86-6cc6-cd5f-9fe49ef3fb8a@reclus.nhh.no>

Again, from the point of view of communities like R, this would simplify 
things a lot. We could then say that unless the questioner (or the person 
the questioner is asking for) has intervened very actively in the source 
install, >= 3.9.0 is OverlayNG, < 3.9.0 is legacy. Then the vast majority 
of reproduction issues could be accounted for by reference to the version 
number.

Roger

On Thu, 10 Dec 2020, Paul Ramsey wrote:

> I can make it more deterministic by just removing the compile-time 
> option altogether. That way, you build 3.9, you get NG, no question 
> about it. I don't see any purpose in the compile-time switch anymore, it 
> was convenient during development, but now that we've done all teh 
> changes in regresion etc, both in GEOS and in PostGIS and so on (BTW, 
> don't forget to aggressively add normalize to your tests) the utility of 
> the compile-time switch is much lower, and we can just leave the #define 
> in place and manually flip it if, for some reason, we want to test old 
> behaviour.
>
> Thoughts?
>
> P
>
>> On Dec 10, 2020, at 8:46 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> Thanks for responding. The motivation is that users of R (and others) 
>> packages, using R packages interfacing GEOS will see changes in output 
>> geometries. We can agree that the new engine is preferable, but when 
>> their unit tests fail, they need to know why. They cannot run make 
>> check, and in the case of most they will not have a dll or dylib 
>> either, as the CRAN package binaries for Windows and MacOS are built 
>> static. The lack of a convienient and deterministic route to knowing 
>> that the reason for the different result is that GEOS is on OverlayNG 
>> is a problem, because we cannot give easy self-help (run sf or rgeos 
>> function x to tell you if OverlayNG is operating). All we can do is 
>> assume for all cases that 3.9.0 is OverlayNG.
>>
>> Roger
>>
>> On Thu, 10 Dec 2020, Paul Ramsey wrote:
>>
>>> I am loath to add a live run-time API end point to check for a 
>>> "feature" that is actually the core engine. It's not like we're ever 
>>> going to allow people to swap engines. The old engine is going to 
>>> eventually be ripped out. The way you know you have NG is that you can 
>>> run "make check" and it works, because if you run "make check" with 
>>> the old engine, regression is going to fail. I can ensure there is 
>>> configure-time output on the status, but that's really about as far as 
>>> I'm willing to go.
>>>
>>> P
>>>
>>>> On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>
>>>> Even with --enable-overlayng, the ring orders are different from those generated by OverlayNG in late October. At that stage we could differentiate by typical ring order patterns, now something else has changed and we cannot see whether OverlayNG is operative or not. Lots of tests in R packages built against GEOS have relied on operations returning ring-order identical polygons (or coord-order identical line segments) compared with stored expected values.
>>>>
>>>> Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does it appear as the last line in ./configure output; all I can see is --disable-overlayng as a configure option. How can we test for the presence of OverlayNG in the runtime? Recall that any user compiling from source or any packager may use the configure argument.
>>>>
>>>> Please do not simply rely on the version number, it is sufficiently robust.
>>>>
>>>> Roger
>>>>
>>>> On Thu, 10 Dec 2020, Roger Bivand wrote:
>>>>
>>>>> Hi,
>>>>>
>>>>> Please confirm that the 3.9.0 release will as advertised enable OverlayNG by default. As lately as beta2 configure still seemed to need --enable-overlayng. Ad-hoc tests from late October to detect ring order fail without --enable-overlayng. I repeat that it is necessary to provide a clear way to interrogate the runtime to find out whether it supports OverlayNG.
>>>>>
>>>>> Next question - why no RC, is it fair to just go from beta to release?
>>>>>
>>>>> Best wishes,
>>>>>
>>>>> Roger
>>>>>
>>>>>
>>>>
>>>> --
>>>> Roger Bivand
>>>> Department of Economics, Norwegian School of Economics,
>>>> Helleveien 30, N-5045 Bergen, Norway.
>>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>> https://orcid.org/0000-0003-2392-6140
>>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Thu Dec 10 11:13:39 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 10 Dec 2020 11:13:39 -0800
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <b1eb3342-7b86-6cc6-cd5f-9fe49ef3fb8a@reclus.nhh.no>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
 <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
 <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>
 <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>
 <b1eb3342-7b86-6cc6-cd5f-9fe49ef3fb8a@reclus.nhh.no>
Message-ID: <59F8A7B3-447E-49C7-9D1B-1CBF05F4A392@cleverelephant.ca>

This is done. There will be an rc1 shortly.
P

> On Dec 10, 2020, at 11:12 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> Again, from the point of view of communities like R, this would simplify things a lot. We could then say that unless the questioner (or the person the questioner is asking for) has intervened very actively in the source install, >= 3.9.0 is OverlayNG, < 3.9.0 is legacy. Then the vast majority of reproduction issues could be accounted for by reference to the version number.
> 
> Roger
> 
> On Thu, 10 Dec 2020, Paul Ramsey wrote:
> 
>> I can make it more deterministic by just removing the compile-time option altogether. That way, you build 3.9, you get NG, no question about it. I don't see any purpose in the compile-time switch anymore, it was convenient during development, but now that we've done all teh changes in regresion etc, both in GEOS and in PostGIS and so on (BTW, don't forget to aggressively add normalize to your tests) the utility of the compile-time switch is much lower, and we can just leave the #define in place and manually flip it if, for some reason, we want to test old behaviour.
>> 
>> Thoughts?
>> 
>> P
>> 
>>> On Dec 10, 2020, at 8:46 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>> 
>>> Thanks for responding. The motivation is that users of R (and others) packages, using R packages interfacing GEOS will see changes in output geometries. We can agree that the new engine is preferable, but when their unit tests fail, they need to know why. They cannot run make check, and in the case of most they will not have a dll or dylib either, as the CRAN package binaries for Windows and MacOS are built static. The lack of a convienient and deterministic route to knowing that the reason for the different result is that GEOS is on OverlayNG is a problem, because we cannot give easy self-help (run sf or rgeos function x to tell you if OverlayNG is operating). All we can do is assume for all cases that 3.9.0 is OverlayNG.
>>> 
>>> Roger
>>> 
>>> On Thu, 10 Dec 2020, Paul Ramsey wrote:
>>> 
>>>> I am loath to add a live run-time API end point to check for a "feature" that is actually the core engine. It's not like we're ever going to allow people to swap engines. The old engine is going to eventually be ripped out. The way you know you have NG is that you can run "make check" and it works, because if you run "make check" with the old engine, regression is going to fail. I can ensure there is configure-time output on the status, but that's really about as far as I'm willing to go.
>>>> 
>>>> P
>>>> 
>>>>> On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>> 
>>>>> Even with --enable-overlayng, the ring orders are different from those generated by OverlayNG in late October. At that stage we could differentiate by typical ring order patterns, now something else has changed and we cannot see whether OverlayNG is operative or not. Lots of tests in R packages built against GEOS have relied on operations returning ring-order identical polygons (or coord-order identical line segments) compared with stored expected values.
>>>>> 
>>>>> Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does it appear as the last line in ./configure output; all I can see is --disable-overlayng as a configure option. How can we test for the presence of OverlayNG in the runtime? Recall that any user compiling from source or any packager may use the configure argument.
>>>>> 
>>>>> Please do not simply rely on the version number, it is sufficiently robust.
>>>>> 
>>>>> Roger
>>>>> 
>>>>> On Thu, 10 Dec 2020, Roger Bivand wrote:
>>>>> 
>>>>>> Hi,
>>>>>> 
>>>>>> Please confirm that the 3.9.0 release will as advertised enable OverlayNG by default. As lately as beta2 configure still seemed to need --enable-overlayng. Ad-hoc tests from late October to detect ring order fail without --enable-overlayng. I repeat that it is necessary to provide a clear way to interrogate the runtime to find out whether it supports OverlayNG.
>>>>>> 
>>>>>> Next question - why no RC, is it fair to just go from beta to release?
>>>>>> 
>>>>>> Best wishes,
>>>>>> 
>>>>>> Roger
>>>>>> 
>>>>>> 
>>>>> 
>>>>> --
>>>>> Roger Bivand
>>>>> Department of Economics, Norwegian School of Economics,
>>>>> Helleveien 30, N-5045 Bergen, Norway.
>>>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>>> https://orcid.org/0000-0003-2392-6140
>>>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>>> _______________________________________________
>>>>> geos-devel mailing list
>>>>> geos-devel at lists.osgeo.org
>>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>> 
>>>> 
>>> 
>>> --
>>> Roger Bivand
>>> Department of Economics, Norwegian School of Economics,
>>> Helleveien 30, N-5045 Bergen, Norway.
>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>> https://orcid.org/0000-0003-2392-6140
>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>> 
>> 
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger.Bivand at nhh.no  Thu Dec 10 11:24:02 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 10 Dec 2020 20:24:02 +0100
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <59F8A7B3-447E-49C7-9D1B-1CBF05F4A392@cleverelephant.ca>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
 <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
 <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>
 <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>
 <b1eb3342-7b86-6cc6-cd5f-9fe49ef3fb8a@reclus.nhh.no>
 <59F8A7B3-447E-49C7-9D1B-1CBF05F4A392@cleverelephant.ca>
Message-ID: <19ff94c-2ae1-5562-d07d-69fbd1e10bf@reclus.nhh.no>

On Thu, 10 Dec 2020, Paul Ramsey wrote:

> This is done. There will be an rc1 shortly.

Good, thanks. In a day or so I'll run the reverse dependency checks for R 
packages interfacing GEOS (so across packages using packages interfacing 
GEOS) Not all of the 900+ R packages in the spatial cluster use GEOS 
directly, but many do indirectly, and have been very trustful in expecting 
output to equal canned results. I warned a number in late October 
following a first set of reverse dependency checks to comment out those 
tests (e.g. the R plotly interface as one), so I'll try to re-check 
development versions if I can locate them.

Roger

> P
>
>> On Dec 10, 2020, at 11:12 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> Again, from the point of view of communities like R, this would simplify things a lot. We could then say that unless the questioner (or the person the questioner is asking for) has intervened very actively in the source install, >= 3.9.0 is OverlayNG, < 3.9.0 is legacy. Then the vast majority of reproduction issues could be accounted for by reference to the version number.
>>
>> Roger
>>
>> On Thu, 10 Dec 2020, Paul Ramsey wrote:
>>
>>> I can make it more deterministic by just removing the compile-time option altogether. That way, you build 3.9, you get NG, no question about it. I don't see any purpose in the compile-time switch anymore, it was convenient during development, but now that we've done all teh changes in regresion etc, both in GEOS and in PostGIS and so on (BTW, don't forget to aggressively add normalize to your tests) the utility of the compile-time switch is much lower, and we can just leave the #define in place and manually flip it if, for some reason, we want to test old behaviour.
>>>
>>> Thoughts?
>>>
>>> P
>>>
>>>> On Dec 10, 2020, at 8:46 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>
>>>> Thanks for responding. The motivation is that users of R (and others) packages, using R packages interfacing GEOS will see changes in output geometries. We can agree that the new engine is preferable, but when their unit tests fail, they need to know why. They cannot run make check, and in the case of most they will not have a dll or dylib either, as the CRAN package binaries for Windows and MacOS are built static. The lack of a convienient and deterministic route to knowing that the reason for the different result is that GEOS is on OverlayNG is a problem, because we cannot give easy self-help (run sf or rgeos function x to tell you if OverlayNG is operating). All we can do is assume for all cases that 3.9.0 is OverlayNG.
>>>>
>>>> Roger
>>>>
>>>> On Thu, 10 Dec 2020, Paul Ramsey wrote:
>>>>
>>>>> I am loath to add a live run-time API end point to check for a "feature" that is actually the core engine. It's not like we're ever going to allow people to swap engines. The old engine is going to eventually be ripped out. The way you know you have NG is that you can run "make check" and it works, because if you run "make check" with the old engine, regression is going to fail. I can ensure there is configure-time output on the status, but that's really about as far as I'm willing to go.
>>>>>
>>>>> P
>>>>>
>>>>>> On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>>>
>>>>>> Even with --enable-overlayng, the ring orders are different from those generated by OverlayNG in late October. At that stage we could differentiate by typical ring order patterns, now something else has changed and we cannot see whether OverlayNG is operative or not. Lots of tests in R packages built against GEOS have relied on operations returning ring-order identical polygons (or coord-order identical line segments) compared with stored expected values.
>>>>>>
>>>>>> Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does it appear as the last line in ./configure output; all I can see is --disable-overlayng as a configure option. How can we test for the presence of OverlayNG in the runtime? Recall that any user compiling from source or any packager may use the configure argument.
>>>>>>
>>>>>> Please do not simply rely on the version number, it is sufficiently robust.
>>>>>>
>>>>>> Roger
>>>>>>
>>>>>> On Thu, 10 Dec 2020, Roger Bivand wrote:
>>>>>>
>>>>>>> Hi,
>>>>>>>
>>>>>>> Please confirm that the 3.9.0 release will as advertised enable OverlayNG by default. As lately as beta2 configure still seemed to need --enable-overlayng. Ad-hoc tests from late October to detect ring order fail without --enable-overlayng. I repeat that it is necessary to provide a clear way to interrogate the runtime to find out whether it supports OverlayNG.
>>>>>>>
>>>>>>> Next question - why no RC, is it fair to just go from beta to release?
>>>>>>>
>>>>>>> Best wishes,
>>>>>>>
>>>>>>> Roger
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> --
>>>>>> Roger Bivand
>>>>>> Department of Economics, Norwegian School of Economics,
>>>>>> Helleveien 30, N-5045 Bergen, Norway.
>>>>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>>>> https://orcid.org/0000-0003-2392-6140
>>>>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>>>> _______________________________________________
>>>>>> geos-devel mailing list
>>>>>> geos-devel at lists.osgeo.org
>>>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>>>
>>>>>
>>>>
>>>> --
>>>> Roger Bivand
>>>> Department of Economics, Norwegian School of Economics,
>>>> Helleveien 30, N-5045 Bergen, Norway.
>>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>> https://orcid.org/0000-0003-2392-6140
>>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>
>>>
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From lr at pcorp.us  Thu Dec 10 11:28:18 2020
From: lr at pcorp.us (Regina Obe)
Date: Thu, 10 Dec 2020 14:28:18 -0500
Subject: [geos-devel] beta2 still needs --enable-overlayng
In-Reply-To: <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
 <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
 <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>
 <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>
Message-ID: <003a01d6cf2a$9df56710$d9e03530$@pcorp.us>

+1 for getting rid of the compile time switch.

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Thursday, December 10, 2020 12:17 PM
> To: Roger.Bivand at nhh.no
> Cc: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] beta2 still needs --enable-overlayng
> 
> I can make it more deterministic by just removing the compile-time option
> altogether. That way, you build 3.9, you get NG, no question about it. I
don't
> see any purpose in the compile-time switch anymore, it was convenient
> during development, but now that we've done all teh changes in regresion
> etc, both in GEOS and in PostGIS and so on (BTW, don't forget to
aggressively
> add normalize to your tests) the utility of the compile-time switch is
much
> lower, and we can just leave the #define in place and manually flip it if,
for
> some reason, we want to test old behaviour.
> 
> Thoughts?
> 
> P
> 
> > On Dec 10, 2020, at 8:46 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> >
> > Thanks for responding. The motivation is that users of R (and others)
> packages, using R packages interfacing GEOS will see changes in output
> geometries. We can agree that the new engine is preferable, but when their
> unit tests fail, they need to know why. They cannot run make check, and in
> the case of most they will not have a dll or dylib either, as the CRAN
package
> binaries for Windows and MacOS are built static. The lack of a convienient
> and deterministic route to knowing that the reason for the different
result is
> that GEOS is on OverlayNG is a problem, because we cannot give easy self-
> help (run sf or rgeos function x to tell you if OverlayNG is operating).
All we
> can do is assume for all cases that 3.9.0 is OverlayNG.
> >
> > Roger
> >
> > On Thu, 10 Dec 2020, Paul Ramsey wrote:
> >
> >> I am loath to add a live run-time API end point to check for a
"feature"
> that is actually the core engine. It's not like we're ever going to allow
people
> to swap engines. The old engine is going to eventually be ripped out. The
> way you know you have NG is that you can run "make check" and it works,
> because if you run "make check" with the old engine, regression is going
to
> fail. I can ensure there is configure-time output on the status, but
that's
> really about as far as I'm willing to go.
> >>
> >> P
> >>
> >>> On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no>
> wrote:
> >>>
> >>> Even with --enable-overlayng, the ring orders are different from those
> generated by OverlayNG in late October. At that stage we could
differentiate
> by typical ring order patterns, now something else has changed and we
> cannot see whether OverlayNG is operative or not. Lots of tests in R
> packages built against GEOS have relied on operations returning ring-order
> identical polygons (or coord-order identical line segments) compared with
> stored expected values.
> >>>
> >>> Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does
it
> appear as the last line in ./configure output; all I can see is --disable-
> overlayng as a configure option. How can we test for the presence of
> OverlayNG in the runtime? Recall that any user compiling from source or
any
> packager may use the configure argument.
> >>>
> >>> Please do not simply rely on the version number, it is sufficiently
robust.
> >>>
> >>> Roger
> >>>
> >>> On Thu, 10 Dec 2020, Roger Bivand wrote:
> >>>
> >>>> Hi,
> >>>>
> >>>> Please confirm that the 3.9.0 release will as advertised enable
> OverlayNG by default. As lately as beta2 configure still seemed to need --
> enable-overlayng. Ad-hoc tests from late October to detect ring order fail
> without --enable-overlayng. I repeat that it is necessary to provide a
clear
> way to interrogate the runtime to find out whether it supports OverlayNG.
> >>>>
> >>>> Next question - why no RC, is it fair to just go from beta to
release?
> >>>>
> >>>> Best wishes,
> >>>>
> >>>> Roger
> >>>>
> >>>>
> >>>
> >>> --
> >>> Roger Bivand
> >>> Department of Economics, Norwegian School of Economics, Helleveien
> >>> 30, N-5045 Bergen, Norway.
> >>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> >>> https://orcid.org/0000-0003-2392-6140
> >>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> >>> _______________________________________________
> >>> geos-devel mailing list
> >>> geos-devel at lists.osgeo.org
> >>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> >>
> >>
> >
> > --
> > Roger Bivand
> > Department of Economics, Norwegian School of Economics, Helleveien 30,
> > N-5045 Bergen, Norway.
> > voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> > https://orcid.org/0000-0003-2392-6140
> > https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Thu Dec 10 11:56:53 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 10 Dec 2020 11:56:53 -0800
Subject: [geos-devel] 3.9.0rc1
Message-ID: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>

http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2

Last chance to dance. Download, build, check. I release final tomorrow.

P

From andrew.d.hershberger at gmail.com  Thu Dec 10 13:04:38 2020
From: andrew.d.hershberger at gmail.com (Andrew Hershberger)
Date: Thu, 10 Dec 2020 15:04:38 -0600
Subject: [geos-devel] 3.9.0rc1
In-Reply-To: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
References: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
Message-ID: <CACZW30M8h=orw=Xafbp9mM3meSMTPE=ssy43oxTG1roJ+uo4iQ@mail.gmail.com>

GEOSwift looks fine with RC1 on macOS (Intel), iOS, tvOS, and Ubuntu 18.04.
Will get results on an M1 Mac in the next 6?12 hrs.

On Thu, Dec 10, 2020 at 1:56 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2
>
> Last chance to dance. Download, build, check. I release final tomorrow.
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201210/b0712f14/attachment.html>

From pramsey at cleverelephant.ca  Thu Dec 10 13:06:08 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 10 Dec 2020 13:06:08 -0800
Subject: [geos-devel] 3.9.0rc1
In-Reply-To: <CACZW30M8h=orw=Xafbp9mM3meSMTPE=ssy43oxTG1roJ+uo4iQ@mail.gmail.com>
References: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
 <CACZW30M8h=orw=Xafbp9mM3meSMTPE=ssy43oxTG1roJ+uo4iQ@mail.gmail.com>
Message-ID: <EAB6CF52-9C69-4AD4-8291-0EAC056F1838@cleverelephant.ca>

Previous reports show build issues on the M1 still unresolved.
Any help you can provide when you have one under your fingers, much appreciated.
P

> On Dec 10, 2020, at 1:04 PM, Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> 
> GEOSwift looks fine with RC1 on macOS (Intel), iOS, tvOS, and Ubuntu 18.04. Will get results on an M1 Mac in the next 6?12 hrs.
> 
> On Thu, Dec 10, 2020 at 1:56 PM Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2
> 
> Last chance to dance. Download, build, check. I release final tomorrow.
> 
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Thu Dec 10 14:10:27 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 10 Dec 2020 14:10:27 -0800
Subject: [geos-devel] Noisy Patch => Master
Message-ID: <C18AEC95-541A-4685-9733-58F1A1CB9B8C@cleverelephant.ca>

Dan, et al, 

I've got a noisy branch I'm thinking of merging into master.

https://github.com/pramsey/geos/tree/namespace
https://trac.osgeo.org/geos/ticket/915

Do you want to dump your performance work in before I merge? It might not conflict, but it's a lot of lines.

P

From mwtoews at gmail.com  Thu Dec 10 15:06:18 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Fri, 11 Dec 2020 12:06:18 +1300
Subject: [geos-devel] 3.9.0rc1
In-Reply-To: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
References: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
Message-ID: <CAM2FmMpmpS49WjB4+O+T4HaqP-PHmVJp13y5pOmCPTbgcAOJCQ@mail.gmail.com>

On Fri, 11 Dec 2020 at 08:56, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>
> http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2

Looks fantastic! But two complaints:

1. Consider https://git.osgeo.org/gitea/geos/geos/pulls/113 for the
final release (and cherry-pick to master), so that MSVC tests pass,
particularly with various CI platforms (not just libgeos).

2. The linked .tar.bz2 file does not exist, as it seems a .tar.gz (the
first!) was uploaded instead. Not a big deal, but it helps automation
to assume a common archive format, so I'd expect the actual release to
be .tar.bz2

From strk at kbt.io  Thu Dec 10 15:14:16 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 00:14:16 +0100
Subject: [geos-devel] 3.9.0rc1
In-Reply-To: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
References: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
Message-ID: <20201210231416.GG12290@cdb>

On Thu, Dec 10, 2020 at 11:56:53AM -0800, Paul Ramsey wrote:
> http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2
> 
> Last chance to dance. Download, build, check. I release final tomorrow.

I see that 3.9.0 tag was already pushed to git,
could you please drop that and replace with rc1
until we're really final ?

--strk;

From dbaston at gmail.com  Thu Dec 10 15:20:29 2020
From: dbaston at gmail.com (Daniel Baston)
Date: Thu, 10 Dec 2020 18:20:29 -0500
Subject: [geos-devel] Noisy Patch => Master
In-Reply-To: <C18AEC95-541A-4685-9733-58F1A1CB9B8C@cleverelephant.ca>
References: <C18AEC95-541A-4685-9733-58F1A1CB9B8C@cleverelephant.ca>
Message-ID: <CA+K_q_rw7y4=AgO5V2yyNqyCT-C73pcd8BgTwbWq8MB8HYV39w@mail.gmail.com>

I merged in the work I'm comfortable with, so please go ahead with yours.
And thanks for taking that on!

Dan


On Thu, Dec 10, 2020 at 5:10 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Dan, et al,
>
> I've got a noisy branch I'm thinking of merging into master.
>
> https://github.com/pramsey/geos/tree/namespace
> https://trac.osgeo.org/geos/ticket/915
>
> Do you want to dump your performance work in before I merge? It might not
> conflict, but it's a lot of lines.
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201210/d190649c/attachment.html>

From geos-trac at osgeo.org  Thu Dec 10 15:46:14 2020
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 10 Dec 2020 23:46:14 -0000
Subject: [geos-devel] [GEOS] #1045: Buffer returns unexpected geometry
In-Reply-To: <045.55f1b5c679138ff7e7b655bc34eb4a27@osgeo.org>
References: <045.55f1b5c679138ff7e7b655bc34eb4a27@osgeo.org>
Message-ID: <060.9e55f1cfc95b962369f9dceb1655b550@osgeo.org>

#1045: Buffer returns unexpected geometry
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  Upstream
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * milestone:  3.10.0 => Upstream


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1045#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Thu Dec 10 16:00:14 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 10 Dec 2020 16:00:14 -0800
Subject: [geos-devel] 3.9.0rc1
In-Reply-To: <20201210231416.GG12290@cdb>
References: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
 <20201210231416.GG12290@cdb>
Message-ID: <2DF3455A-0CEE-46E6-9F29-ABA2E6009BD8@cleverelephant.ca>

Yeah, I was all ready to drop 3.9.0 when the ng config issue came down and now someone (you!) is yelling to sneak something in too. Anyways, should be all cleaned up and sitting at rc1 now. let's be really really final soon, because this is ridonculous.
P

> On Dec 10, 2020, at 3:14 PM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Thu, Dec 10, 2020 at 11:56:53AM -0800, Paul Ramsey wrote:
>> http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2
>> 
>> Last chance to dance. Download, build, check. I release final tomorrow.
> 
> I see that 3.9.0 tag was already pushed to git,
> could you please drop that and replace with rc1
> until we're really final ?
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From sebastic at xs4all.nl  Thu Dec 10 21:47:36 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 11 Dec 2020 06:47:36 +0100
Subject: [geos-devel] 3.9.0rc1
In-Reply-To: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
References: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
Message-ID: <bd2b837e-756c-db52-e0ab-be7aef576e50@xs4all.nl>

On 12/10/20 8:56 PM, Paul Ramsey wrote:
> http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2

So the geos-3.9.0.tar.bz2 that was there yesterday was a mistake (it's
gone now)?

> Last chance to dance. Download, build, check. I release final tomorrow.

3.9.0 is already in Debian unstable using yesterdays 3.9.0 tarball.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From Roger.Bivand at nhh.no  Fri Dec 11 01:48:38 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 11 Dec 2020 10:48:38 +0100
Subject: [geos-devel] 3.9.0rc1 [was: beta2 still needs
 --enable-overlayng]
In-Reply-To: <19ff94c-2ae1-5562-d07d-69fbd1e10bf@reclus.nhh.no>
References: <bd1f34e2-ed38-b785-852-e2d58c3f7717@reclus.nhh.no>
 <419d61f3-7f61-93a8-2f50-c76332b49ce9@reclus.nhh.no>
 <076F127B-D765-4D30-AB53-38458FF9E611@cleverelephant.ca>
 <a235ea3d-588a-fd68-c295-f38dc5a6cf1e@reclus.nhh.no>
 <B3677ADD-B1E5-4AEF-A156-2F9ECC283438@cleverelephant.ca>
 <b1eb3342-7b86-6cc6-cd5f-9fe49ef3fb8a@reclus.nhh.no>
 <59F8A7B3-447E-49C7-9D1B-1CBF05F4A392@cleverelephant.ca>
 <19ff94c-2ae1-5562-d07d-69fbd1e10bf@reclus.nhh.no>
Message-ID: <d823dc1c-ff14-5ceb-5151-5952148ccb2c@reclus.nhh.no>

Overnight checks on R packages show no new problems - package maintainers 
were warned of failing tests as soon as OverlayNG was available for 
testing.

Roger

On Thu, 10 Dec 2020, Roger Bivand wrote:

> On Thu, 10 Dec 2020, Paul Ramsey wrote:
>
>>  This is done. There will be an rc1 shortly.
>
> Good, thanks. In a day or so I'll run the reverse dependency checks for R 
> packages interfacing GEOS (so across packages using packages interfacing 
> GEOS) Not all of the 900+ R packages in the spatial cluster use GEOS 
> directly, but many do indirectly, and have been very trustful in expecting 
> output to equal canned results. I warned a number in late October following a 
> first set of reverse dependency checks to comment out those tests (e.g. the R 
> plotly interface as one), so I'll try to re-check development versions if I 
> can locate them.
>
> Roger
>
>>  P
>>
>>>  On Dec 10, 2020, at 11:12 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>
>>>  Again, from the point of view of communities like R, this would simplify
>>>  things a lot. We could then say that unless the questioner (or the person
>>>  the questioner is asking for) has intervened very actively in the source
>>>  install, >= 3.9.0 is OverlayNG, < 3.9.0 is legacy. Then the vast majority
>>>  of reproduction issues could be accounted for by reference to the version
>>>  number.
>>>
>>>  Roger
>>>
>>>  On Thu, 10 Dec 2020, Paul Ramsey wrote:
>>>
>>>>  I can make it more deterministic by just removing the compile-time
>>>>  option altogether. That way, you build 3.9, you get NG, no question
>>>>  about it. I don't see any purpose in the compile-time switch anymore, it
>>>>  was convenient during development, but now that we've done all teh
>>>>  changes in regresion etc, both in GEOS and in PostGIS and so on (BTW,
>>>>  don't forget to aggressively add normalize to your tests) the utility of
>>>>  the compile-time switch is much lower, and we can just leave the #define
>>>>  in place and manually flip it if, for some reason, we want to test old
>>>>  behaviour.
>>>>
>>>>  Thoughts?
>>>>
>>>>  P
>>>>
>>>>>  On Dec 10, 2020, at 8:46 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>>
>>>>>  Thanks for responding. The motivation is that users of R (and others)
>>>>>  packages, using R packages interfacing GEOS will see changes in output
>>>>>  geometries. We can agree that the new engine is preferable, but when
>>>>>  their unit tests fail, they need to know why. They cannot run make
>>>>>  check, and in the case of most they will not have a dll or dylib
>>>>>  either, as the CRAN package binaries for Windows and MacOS are built
>>>>>  static. The lack of a convienient and deterministic route to knowing
>>>>>  that the reason for the different result is that GEOS is on OverlayNG
>>>>>  is a problem, because we cannot give easy self-help (run sf or rgeos
>>>>>  function x to tell you if OverlayNG is operating). All we can do is
>>>>>  assume for all cases that 3.9.0 is OverlayNG.
>>>>>
>>>>>  Roger
>>>>>
>>>>>  On Thu, 10 Dec 2020, Paul Ramsey wrote:
>>>>>
>>>>>>  I am loath to add a live run-time API end point to check for a
>>>>>>  "feature" that is actually the core engine. It's not like we're ever
>>>>>>  going to allow people to swap engines. The old engine is going to
>>>>>>  eventually be ripped out. The way you know you have NG is that you can
>>>>>>  run "make check" and it works, because if you run "make check" with
>>>>>>  the old engine, regression is going to fail. I can ensure there is
>>>>>>  configure-time output on the status, but that's really about as far as
>>>>>>  I'm willing to go.
>>>>>>
>>>>>>  P
>>>>>>
>>>>>>>  On Dec 10, 2020, at 12:56 AM, Roger Bivand <Roger.Bivand at nhh.no>
>>>>>>>  wrote:
>>>>>>>
>>>>>>>  Even with --enable-overlayng, the ring orders are different from
>>>>>>>  those generated by OverlayNG in late October. At that stage we could
>>>>>>>  differentiate by typical ring order patterns, now something else has
>>>>>>>  changed and we cannot see whether OverlayNG is operative or not. Lots
>>>>>>>  of tests in R packages built against GEOS have relied on operations
>>>>>>>  returning ring-order identical polygons (or coord-order identical
>>>>>>>  line segments) compared with stored expected values.
>>>>>>>
>>>>>>>  Please clarify urgently: OverlayNG is not mentioned in NEWS, nor does
>>>>>>>  it appear as the last line in ./configure output; all I can see is
>>>>>>>  --disable-overlayng as a configure option. How can we test for the
>>>>>>>  presence of OverlayNG in the runtime? Recall that any user compiling
>>>>>>>  from source or any packager may use the configure argument.
>>>>>>>
>>>>>>>  Please do not simply rely on the version number, it is sufficiently
>>>>>>>  robust.
>>>>>>>
>>>>>>>  Roger
>>>>>>>
>>>>>>>  On Thu, 10 Dec 2020, Roger Bivand wrote:
>>>>>>>
>>>>>>>>  Hi,
>>>>>>>>
>>>>>>>>  Please confirm that the 3.9.0 release will as advertised enable
>>>>>>>>  OverlayNG by default. As lately as beta2 configure still seemed to
>>>>>>>>  need --enable-overlayng. Ad-hoc tests from late October to detect
>>>>>>>>  ring order fail without --enable-overlayng. I repeat that it is
>>>>>>>>  necessary to provide a clear way to interrogate the runtime to find
>>>>>>>>  out whether it supports OverlayNG.
>>>>>>>>
>>>>>>>>  Next question - why no RC, is it fair to just go from beta to
>>>>>>>>  release?
>>>>>>>>
>>>>>>>>  Best wishes,
>>>>>>>>
>>>>>>>>  Roger
>>>>>>>> 
>>>>>>>> 
>>>>>>>
>>>>>>>  --
>>>>>>>  Roger Bivand
>>>>>>>  Department of Economics, Norwegian School of Economics,
>>>>>>>  Helleveien 30, N-5045 Bergen, Norway.
>>>>>>>  voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>>>>>  https://orcid.org/0000-0003-2392-6140
>>>>>>>  https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>>>>>  _______________________________________________
>>>>>>>  geos-devel mailing list
>>>>>>>  geos-devel at lists.osgeo.org
>>>>>>>  https://lists.osgeo.org/mailman/listinfo/geos-devel
>>>>>> 
>>>>>> 
>>>>>
>>>>>  --
>>>>>  Roger Bivand
>>>>>  Department of Economics, Norwegian School of Economics,
>>>>>  Helleveien 30, N-5045 Bergen, Norway.
>>>>>  voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>>>  https://orcid.org/0000-0003-2392-6140
>>>>>  https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>> 
>>>> 
>>>
>>>  --
>>>  Roger Bivand
>>>  Department of Economics, Norwegian School of Economics,
>>>  Helleveien 30, N-5045 Bergen, Norway.
>>>  voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>  https://orcid.org/0000-0003-2392-6140
>>>  https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>> 
>> 
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From strk at kbt.io  Fri Dec 11 02:34:13 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 11:34:13 +0100
Subject: [geos-devel] Do you mind a GEOS-3.6.4 release ?
Message-ID: <20201211103413.GB17565@cdb>

Release 3.6.3 came out in August 2018. Since then we have these
fixes:

  Changes in 3.6.4

  - Bug fixes / improvements
    - Fix crash in GEOSUnaryUnion with empty LineString
      (#928, Sergey Fedoseev)
    - Fix incorrect error return values in GEOSLength and
      GEOSisValidDetail (#941, Dan Baston)
    - Envelope constructor use strtod (#875)
    - Polygon build failure in Overlay difference (#789 Paul Ramsey)
    - Invalid union result from valid polygon inputs (#838)
    - Static library does not contain C API (#878)
    - Prevent crash when querying empty STRtree (#730)
    - Overlay performance improvement (#986, Paul Ramsey)
    - Relate crash with empty components (#1085, Sandro Santilli)

Are you ok with me releasing 3.6.4 ?

--strk; 

From mtnclimb at gmail.com  Fri Dec 11 03:01:11 2020
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 11 Dec 2020 03:01:11 -0800
Subject: [geos-devel] Do you mind a GEOS-3.6.4 release ?
In-Reply-To: <20201211103413.GB17565@cdb>
References: <20201211103413.GB17565@cdb>
Message-ID: <CAK2ens27M6CtSm8U=8ObW4BLak_6UES2TkWtqWQ2rGHtAwhi2A@mail.gmail.com>

+1

On Fri., Dec. 11, 2020, 2:34 a.m. Sandro Santilli, <strk at kbt.io> wrote:

> Release 3.6.3 came out in August 2018. Since then we have these
> fixes:
>
>   Changes in 3.6.4
>
>   - Bug fixes / improvements
>     - Fix crash in GEOSUnaryUnion with empty LineString
>       (#928, Sergey Fedoseev)
>     - Fix incorrect error return values in GEOSLength and
>       GEOSisValidDetail (#941, Dan Baston)
>     - Envelope constructor use strtod (#875)
>     - Polygon build failure in Overlay difference (#789 Paul Ramsey)
>     - Invalid union result from valid polygon inputs (#838)
>     - Static library does not contain C API (#878)
>     - Prevent crash when querying empty STRtree (#730)
>     - Overlay performance improvement (#986, Paul Ramsey)
>     - Relate crash with empty components (#1085, Sandro Santilli)
>
> Are you ok with me releasing 3.6.4 ?
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201211/8cd181b4/attachment.html>

From strk at kbt.io  Fri Dec 11 03:44:58 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 12:44:58 +0100
Subject: [geos-devel] Do you mind a GEOS-3.6.4 release ?
In-Reply-To: <CAK2ens27M6CtSm8U=8ObW4BLak_6UES2TkWtqWQ2rGHtAwhi2A@mail.gmail.com>
References: <20201211103413.GB17565@cdb>
 <CAK2ens27M6CtSm8U=8ObW4BLak_6UES2TkWtqWQ2rGHtAwhi2A@mail.gmail.com>
Message-ID: <20201211114458.GC17565@cdb>

Oops, I found a pre-existing 3.6.4 tag:
https://git.osgeo.org/gitea/geos/geos/commits/tag/3.6.4

AND a download from OSGeo !
http://download.osgeo.org/geos/geos-3.6.4.tar.bz2

BUT such tag is NOT reachable from the "svn-3.6" branch,
which does NOT contain those commits.

Paul: I think this was taken care of by you, can you check
if you have those commits in a differently named branch ?

You can check in your local clone with:

  git branch --contains 3.6.4

It returns nothing here, while 3.6.3 is of course contained by
"svn-3.6" branch.


--strk;

From strk at kbt.io  Fri Dec 11 03:54:00 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 12:54:00 +0100
Subject: [geos-devel] Do you mind a GEOS-3.6.5 release ?
In-Reply-To: <20201211114458.GC17565@cdb>
References: <20201211103413.GB17565@cdb>
 <CAK2ens27M6CtSm8U=8ObW4BLak_6UES2TkWtqWQ2rGHtAwhi2A@mail.gmail.com>
 <20201211114458.GC17565@cdb>
Message-ID: <20201211115400.GD17565@cdb>

I've fixed this myself by merging the "3.6.4" tag into the
"svn-3.6" branch. I did keep the "merge commit" so to be still
able to reference the tagged commit. Now `git branch --contains 3.6.4`
will report "svn-3.6" as well.

The subject was updated to reflect that next release will be 3.6.5
then, with ONLY the crasher fix.

--strk;

From geos-trac at osgeo.org  Fri Dec 11 05:18:01 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 11 Dec 2020 13:18:01 -0000
Subject: [geos-devel] [GEOS] Batch modify: #810, #806, #805, #737, #861, #844,
 #864, #848, ...
In-Reply-To: <075.82d3fefa577011f95897f0cec2c98d62@osgeo.org>
References: <075.82d3fefa577011f95897f0cec2c98d62@osgeo.org>
Message-ID: <075.82d3fefa577011f95897f0cec2c98d62@osgeo.org>

Batch modification to #810, #806, #805, #737, #861, #844, #864, #848, #682, #859 by strk:
milestone to 3.6.6

Comment:
Ticket retargeted after milestone closed

-- 
Tickets URL: <https://trac.osgeo.org/geos/query?id=810%2C806%2C805%2C737%2C861%2C844%2C864%2C848%2C682%2C859>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Fri Dec 11 05:45:33 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 14:45:33 +0100
Subject: [geos-devel] GEOS 3.6.5 released
Message-ID: <20201211134533.GE17565@cdb>

With some road bumps, GEOS 3.6.5 is now out.
The only change since 3.6.4 is a crash in RelateOp
when passed collections with EMPTY components (#1085)

--strk;

  ()   Free GIS & Flash consultant/developer
  /\   https://strk.kbt.io/services.html

From strk at kbt.io  Fri Dec 11 05:50:55 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 14:50:55 +0100
Subject: [geos-devel] Tags out of branches (was: Do you mind a GEOS-3.6.5
 release ?)
Message-ID: <20201211135055.GF17565@cdb>

For the record: the same problem existed in 3.7 branch.
I've fixed that as well by also merging there the "3.7.3" tag,
latest tag in 3.7 branch

--strk;

On Fri, Dec 11, 2020 at 12:54:00PM +0100, Sandro Santilli wrote:
> I've fixed this myself by merging the "3.6.4" tag into the
> "svn-3.6" branch. I did keep the "merge commit" so to be still
> able to reference the tagged commit. Now `git branch --contains 3.6.4`
> will report "svn-3.6" as well.

From strk at kbt.io  Fri Dec 11 06:19:52 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 15:19:52 +0100
Subject: [geos-devel] C library versioning confusion
Message-ID: <20201211141952.GG17565@cdb>

I've noticed there's some confusion with versioning of the
C library. Hoping to do something useful I moved documentation
about how to set version directly in Version.txt

The confusion I see is with CAPI_INTERFACE_* values.

For 3.9.0, like for any other .0 release, the CAPI_INTERFACE_REVISION
should be set to 0, because we'll be adding interfaces (functions)
in such releases. From documentation:

   - Adding interfaces, bump CURRENT/AGE, set REVISION to 0.

Now, last 3.8 release (3.8.1) came out with these values:

    CAPI_INTERFACE_CURRENT=14
    CAPI_INTERFACE_REVISION=3
    CAPI_INTERFACE_AGE=13

This means 3.9.0 should be:

    CAPI_INTERFACE_CURRENT=15 <--- we added functions!
    CAPI_INTERFACE_REVISION=0 <-- first revision of this new interface
    CAPI_INTERFACE_AGE=14 <-- we're still compatible with
                              functions from interface n.1

Instead, in current 3.9 branch we have something which makes
no sense to me:

    CAPI_INTERFACE_CURRENT=17
    CAPI_INTERFACE_REVISION=2
    CAPI_INTERFACE_AGE=16

I guess this was done because for some reason the documentation
for version was changed at some point to be inaccurate (ie: "always
increment revision"). I've now committed the correct documentation
back directly into Version.txt, and would like to use the correct
versioning for 3.9.0 final, unless there's some specific reason why
we're "giving numbers".

Note also the 3.8 branch has some issues with CAPI_INTERFACE_REVISION
as it seemed to start at 1 for 3.8.0 so there's now a mismatch from
patch level and REVISION (there should usually not be)

--strk;

From pramsey at cleverelephant.ca  Fri Dec 11 07:47:19 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 11 Dec 2020 07:47:19 -0800
Subject: [geos-devel] C library versioning confusion
In-Reply-To: <20201211141952.GG17565@cdb>
References: <20201211141952.GG17565@cdb>
Message-ID: <E1333A03-B7B0-4B3B-8A1B-777306F59E83@cleverelephant.ca>

Please change the version in the branch and master ASAP.

> On Dec 11, 2020, at 6:19 AM, Sandro Santilli <strk at kbt.io> wrote:
> 
> I guess this was done because for some reason the documentation
> for version was changed at some point to be inaccurate (ie: "always
> increment revision"). I've now committed the correct documentation
> back directly into Version.txt, and would like to use the correct
> versioning for 3.9.0 final, unless there's some specific reason why
> we're "giving numbers".


From pramsey at cleverelephant.ca  Fri Dec 11 07:47:43 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 11 Dec 2020 07:47:43 -0800
Subject: [geos-devel] 3.9.0rc1
In-Reply-To: <bd2b837e-756c-db52-e0ab-be7aef576e50@xs4all.nl>
References: <04663A68-6DDF-4CD7-A8A0-9491371B5D58@cleverelephant.ca>
 <bd2b837e-756c-db52-e0ab-be7aef576e50@xs4all.nl>
Message-ID: <928807F0-FDF1-4546-9C79-6620CAF8F668@cleverelephant.ca>



> On Dec 10, 2020, at 9:47 PM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> On 12/10/20 8:56 PM, Paul Ramsey wrote:
>> http://download.osgeo.org/geos/geos-3.9.0rc1.tar.bz2
> 
> So the geos-3.9.0.tar.bz2 that was there yesterday was a mistake (it's
> gone now)?

Yes, it was a mistake.

P

> 
>> Last chance to dance. Download, build, check. I release final tomorrow.
> 
> 3.9.0 is already in Debian unstable using yesterdays 3.9.0 tarball.
> 
> Kind Regards,
> 
> Bas
> 
> -- 
> GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Fri Dec 11 08:10:23 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 17:10:23 +0100
Subject: [geos-devel] C library versioning confusion
In-Reply-To: <E1333A03-B7B0-4B3B-8A1B-777306F59E83@cleverelephant.ca>
References: <20201211141952.GG17565@cdb>
 <E1333A03-B7B0-4B3B-8A1B-777306F59E83@cleverelephant.ca>
Message-ID: <20201211161023.GB5260@cdb>

On Fri, Dec 11, 2020 at 07:47:19AM -0800, Paul Ramsey wrote:
> Please change the version in the branch and master ASAP.

Done:

    15/0/14 for 3.9
    16/0/15 for master

Whoever installed 3.9.0beta2 will have to do manual cleanups.

--strk;

From pramsey at cleverelephant.ca  Fri Dec 11 08:13:42 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 11 Dec 2020 08:13:42 -0800
Subject: [geos-devel] C library versioning confusion
In-Reply-To: <20201211161023.GB5260@cdb>
References: <20201211141952.GG17565@cdb>
 <E1333A03-B7B0-4B3B-8A1B-777306F59E83@cleverelephant.ca>
 <20201211161023.GB5260@cdb>
Message-ID: <7D265148-2D55-4EE9-9F1C-3E8681F93882@cleverelephant.ca>



> On Dec 11, 2020, at 8:10 AM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Fri, Dec 11, 2020 at 07:47:19AM -0800, Paul Ramsey wrote:
>> Please change the version in the branch and master ASAP.
> 
> Done:
> 

Can you please also fix the step 1) directions in HOWTO_RELEASE
Also please look at steps 1 and 9 in that document, which taken together are incrementing the numbers twice per release. The exact dance of increment, bundle, commit, release needs to be documented or it will continue to be inconsistent, particularly for those of us that do this only every 18 months.

P

>    15/0/14 for 3.9
>    16/0/15 for master
> 
> Whoever installed 3.9.0beta2 will have to do manual cleanups.
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Fri Dec 11 08:29:39 2020
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 11 Dec 2020 17:29:39 +0100
Subject: [geos-devel] C library versioning confusion
In-Reply-To: <7D265148-2D55-4EE9-9F1C-3E8681F93882@cleverelephant.ca>
References: <20201211141952.GG17565@cdb>
 <E1333A03-B7B0-4B3B-8A1B-777306F59E83@cleverelephant.ca>
 <20201211161023.GB5260@cdb>
 <7D265148-2D55-4EE9-9F1C-3E8681F93882@cleverelephant.ca>
Message-ID: <20201211162939.GC5260@cdb>

On Fri, Dec 11, 2020 at 08:13:42AM -0800, Paul Ramsey wrote:
> 
> 
> > On Dec 11, 2020, at 8:10 AM, Sandro Santilli <strk at kbt.io> wrote:
> > 
> > On Fri, Dec 11, 2020 at 07:47:19AM -0800, Paul Ramsey wrote:
> >> Please change the version in the branch and master ASAP.
> > 
> > Done:
> 
> Can you please also fix the step 1) directions in HOWTO_RELEASE

Step (1) says "verify", not increment.
Anyway I've pushed a change in current master, see if it's clearer now ?

I think the idea is that, at release time you:

  1) Drop the "dev" suffix and find everything else already good
  2) Commit & tag & publish
  3) Prepare the branches for next release (incrementing and re-adding "dev")

> Also please look at steps 1 and 9 in that document, which taken together are incrementing the numbers twice per release. The exact dance of increment, bundle, commit, release needs to be documented or it will continue to be inconsistent, particularly for those of us that do this only every 18 months.

Don't tell me, I did my last one in 2016...

--strk;

From geos-trac at osgeo.org  Sun Dec 13 20:27:50 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 14 Dec 2020 04:27:50 -0000
Subject: [geos-devel] [GEOS] #973: Polygon clipping and validation over
 integer coordinates
In-Reply-To: <048.3bf392d768882dadb8c69a26ad9ba8ef@osgeo.org>
References: <048.3bf392d768882dadb8c69a26ad9ba8ef@osgeo.org>
Message-ID: <063.bf3f22a4ab667a0a1c58db5dfcae12fe@osgeo.org>

#973: Polygon clipping and validation over integer coordinates
-----------------------------+---------------------------
 Reporter:  Algunenano       |       Owner:  geos-devel@?
     Type:  enhancement      |      Status:  new
 Priority:  minor            |   Milestone:  GEOS Fund Me
Component:  Default          |     Version:  master
 Severity:  Feature Request  |  Resolution:
 Keywords:                   |
-----------------------------+---------------------------

Comment (by mdavis):

 Time for an update on this?

 Last I think I heard was that OverlayNG works, but is still slower than
 wagyu.  If that is the case, it's unlikely there will be a significant
 improvement any time soon.  In which case perhaps waygu is still required.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/973#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Mon Dec 14 09:10:19 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 14 Dec 2020 09:10:19 -0800
Subject: [geos-devel] GEOS 3.9.0 Released
Message-ID: <0DEFF15F-F9D8-44BC-90F8-32467B0B9D08@cleverelephant.ca>

The GEOS community is pleased to announce the 3.9 release of the GEOS
computational geometry library. 

http://download.osgeo.org/geos/geos-3.9.0.tar.bz2

The headline feature of 3.9 is the new overlay engine, which is also new 
to JTS. Intersection, union, difference and symdifference all use this
new engine, which provides more robust results than the old engine. 
This should dramatically reduce and hopefully eliminate topology exceptions
when used with valid inputs.

We have continued to work on performance at the C++ implementation
level, and in general hope to demonstrate faster operation for most 
uses.

- New things:
  - OverlayNG engine from JTS, now the default (Martin Davis, Paul Ramsey)
  - MaximumInscribedCircle and LargestEmptyCircle (JTS-530, Paul Ramsey)
  - CAPI: Fixed precision overlay operations (Sandro Santilli)
  - CAPI: GEOSPreparedNearestPoints (#1007, Sandro Santilli)
  - CAPI: GEOSPreparedDistance (#1066, Sandro Santilli)
  - CAPI: GEOSGeom_setPrecision uses OverlayNG (Paul Ramsey)
  - SimpleSTRTree spatial index implementation (Paul Ramsey)
  - Add support for pkg-config for GEOS C API (#1073, Mike Taves)

- Improvements:
  - Stack allocate segments in OverlapUnion (Paul Ramsey)
  - Improve performance of GEOSisValid (Dan Baston)
  - Update geos-config tool for consistency
    and escape paths (https://git.osgeo.org/gitea/geos/geos/pulls/99)
    changes mostly affect CMake MSVC builds (#1015, Mike Taves)
  - Testing on Rasberry Pi 32-bit (berrie) (#1017, Bruce Rindahl, Regina Obe)
  - Replace ttmath with JTS DD double-double implementation (Paul Ramsey)
  - Fix bug in DistanceOp for geometries with empty components (#1026, Paul Ramsey)
  - Remove undefined behaviour in CAPI (#1021, Greg Troxel)
  - Fix buffering issue (#1022, JTS-525, Paul Ramsey)
  - MinimumBoundingCircle.getMaximumDiameter fix (JTS-533, Paul Ramsey)

- Changes:
  - Drop SWIG bindings, including for Ruby and Python (#1076, Mike Taves)



From gdt at lexort.com  Mon Dec 14 11:36:42 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 14 Dec 2020 14:36:42 -0500
Subject: [geos-devel] GEOS 3.9.0 Released
In-Reply-To: <0DEFF15F-F9D8-44BC-90F8-32467B0B9D08@cleverelephant.ca> (Paul
 Ramsey's message of "Mon, 14 Dec 2020 09:10:19 -0800")
References: <0DEFF15F-F9D8-44BC-90F8-32467B0B9D08@cleverelephant.ca>
Message-ID: <rmio8iwxjqt.fsf@s1.lexort.com>


(I am late in trying this, for no good reason.)

I am doing a trial update of pkgsrc/geography/geos to 3.9.0 from 3.8.1.
I am seeing a lot of header file withdrawals, and it is not clear to me
that they are explained by "new overlay engine" (but also not clear that
they are not explained by this).  Hence I am posting my diff of
installed files and would appreciate someone taking a quick scan and
pronouncing "those changes are expected" vs "we have a problem".

Given the new engine, I am guessing I should not update pkgsrc today
since we are going into freeze within days for 12/31 quarterly stable
release.  Instead, I'd hold off until just after freeze.  Please also
let me know if you think that's confused.

    Thanks,
    Greg


diff -u -p -r1.16 PLIST
--- PLIST	11 Mar 2020 12:52:06 -0000	1.16
+++ PLIST	14 Dec 2020 19:35:01 -0000
@@ -26,6 +26,8 @@ include/geos/algorithm/PointLocator.h
 include/geos/algorithm/RayCrossingCounter.h
 include/geos/algorithm/RayCrossingCounterDD.h
 include/geos/algorithm/RobustDeterminant.h
+include/geos/algorithm/construct/LargestEmptyCircle.h
+include/geos/algorithm/construct/MaximumInscribedCircle.h
 include/geos/algorithm/distance/DiscreteFrechetDistance.h
 include/geos/algorithm/distance/DiscreteHausdorffDistance.h
 include/geos/algorithm/distance/DistanceToPoint.h
@@ -33,24 +35,13 @@ include/geos/algorithm/distance/PointPai
 include/geos/algorithm/locate/IndexedPointInAreaLocator.h
 include/geos/algorithm/locate/PointOnGeometryLocator.h
 include/geos/algorithm/locate/SimplePointInAreaLocator.h
-include/geos/algorithm/ttmath/ttmath.h
-include/geos/algorithm/ttmath/ttmathbig.h
-include/geos/algorithm/ttmath/ttmathdec.h
-include/geos/algorithm/ttmath/ttmathint.h
-include/geos/algorithm/ttmath/ttmathmisc.h
-include/geos/algorithm/ttmath/ttmathobjects.h
-include/geos/algorithm/ttmath/ttmathparser.h
-include/geos/algorithm/ttmath/ttmaththreads.h
-include/geos/algorithm/ttmath/ttmathtypes.h
-include/geos/algorithm/ttmath/ttmathuint.h
-include/geos/algorithm/ttmath/ttmathuint_noasm.h
-include/geos/algorithm/ttmath/ttmathuint_x86.h
-include/geos/algorithm/ttmath/ttmathuint_x86_64.h
-include/geos/algorithm/ttmath/ttmathuint_x86_64_msvc.asm
 include/geos/constants.h
+include/geos/edgegraph/EdgeGraph.h
+include/geos/edgegraph/EdgeGraphBuilder.h
+include/geos/edgegraph/HalfEdge.h
+include/geos/edgegraph/MarkHalfEdge.h
 include/geos/export.h
 include/geos/geom.h
-include/geos/geom/BinaryOp.h
 include/geos/geom/Coordinate.h
 include/geos/geom/Coordinate.inl
 include/geos/geom/CoordinateArraySequence.h
@@ -73,6 +64,7 @@ include/geos/geom/GeometryComponentFilte
 include/geos/geom/GeometryFactory.h
 include/geos/geom/GeometryFactory.inl
 include/geos/geom/GeometryFilter.h
+include/geos/geom/HeuristicOverlay.h
 include/geos/geom/IntersectionMatrix.h
 include/geos/geom/LineSegment.h
 include/geos/geom/LineSegment.inl
@@ -86,20 +78,26 @@ include/geos/geom/MultiPolygon.h
 include/geos/geom/MultiPolygon.inl
 include/geos/geom/Point.h
 include/geos/geom/Polygon.h
+include/geos/geom/Position.h
 include/geos/geom/PrecisionModel.h
 include/geos/geom/PrecisionModel.inl
+include/geos/geom/Quadrant.h
+include/geos/geom/Quadrant.inl
 include/geos/geom/Triangle.h
 include/geos/geom/prep/AbstractPreparedPolygonContains.h
 include/geos/geom/prep/BasicPreparedGeometry.h
 include/geos/geom/prep/PreparedGeometry.h
 include/geos/geom/prep/PreparedGeometryFactory.h
 include/geos/geom/prep/PreparedLineString.h
+include/geos/geom/prep/PreparedLineStringDistance.h
 include/geos/geom/prep/PreparedLineStringIntersects.h
+include/geos/geom/prep/PreparedLineStringNearestPoints.h
 include/geos/geom/prep/PreparedPoint.h
 include/geos/geom/prep/PreparedPolygon.h
 include/geos/geom/prep/PreparedPolygonContains.h
 include/geos/geom/prep/PreparedPolygonContainsProperly.h
 include/geos/geom/prep/PreparedPolygonCovers.h
+include/geos/geom/prep/PreparedPolygonDistance.h
 include/geos/geom/prep/PreparedPolygonIntersects.h
 include/geos/geom/prep/PreparedPolygonPredicate.h
 include/geos/geom/util/ComponentCoordinateExtracter.h
@@ -115,8 +113,6 @@ include/geos/geom/util/PointExtracter.h
 include/geos/geom/util/PolygonExtracter.h
 include/geos/geom/util/ShortCircuitedGeometryVisitor.h
 include/geos/geom/util/SineStarFactory.h
-include/geos/geomUtil.h
-include/geos/geomgraph.h
 include/geos/geomgraph/Depth.h
 include/geos/geomgraph/Depth.inl
 include/geos/geomgraph/DirectedEdge.h
@@ -139,9 +135,6 @@ include/geos/geomgraph/Node.h
 include/geos/geomgraph/NodeFactory.h
 include/geos/geomgraph/NodeMap.h
 include/geos/geomgraph/PlanarGraph.h
-include/geos/geomgraph/Position.h
-include/geos/geomgraph/Quadrant.h
-include/geos/geomgraph/Quadrant.inl
 include/geos/geomgraph/TopologyLocation.h
 include/geos/geomgraph/TopologyLocation.inl
 include/geos/geomgraph/index/EdgeSetIntersector.h
@@ -156,8 +149,6 @@ include/geos/geomgraph/index/SimpleSweep
 include/geos/geomgraph/index/SweepLineEvent.h
 include/geos/geomgraph/index/SweepLineEventObj.h
 include/geos/geomgraph/index/SweepLineSegment.h
-include/geos/geomgraphindex.h
-include/geos/geosAlgorithm.h
 include/geos/index/ItemVisitor.h
 include/geos/index/SpatialIndex.h
 include/geos/index/bintree/Bintree.h
@@ -174,7 +165,9 @@ include/geos/index/intervalrtree/Interva
 include/geos/index/intervalrtree/IntervalRTreeLeafNode.h
 include/geos/index/intervalrtree/IntervalRTreeNode.h
 include/geos/index/intervalrtree/SortedPackedIntervalRTree.h
-include/geos/index/quadtree/DoubleBits.h
+include/geos/index/kdtree/KdNode.h
+include/geos/index/kdtree/KdNodeVisitor.h
+include/geos/index/kdtree/KdTree.h
 include/geos/index/quadtree/IntervalSize.h
 include/geos/index/quadtree/Key.h
 include/geos/index/quadtree/Node.h
@@ -192,17 +185,14 @@ include/geos/index/strtree/ItemBoundable
 include/geos/index/strtree/ItemDistance.h
 include/geos/index/strtree/SIRtree.h
 include/geos/index/strtree/STRtree.h
+include/geos/index/strtree/SimpleSTRdistance.h
+include/geos/index/strtree/SimpleSTRnode.h
+include/geos/index/strtree/SimpleSTRtree.h
 include/geos/index/sweepline/SweepLineEvent.h
 include/geos/index/sweepline/SweepLineIndex.h
 include/geos/index/sweepline/SweepLineInterval.h
 include/geos/index/sweepline/SweepLineOverlapAction.h
-include/geos/indexBintree.h
-include/geos/indexChain.h
-include/geos/indexQuadtree.h
-include/geos/indexStrtree.h
-include/geos/indexSweepline.h
 include/geos/inline.h
-include/geos/io.h
 include/geos/io/ByteOrderDataInStream.h
 include/geos/io/ByteOrderDataInStream.inl
 include/geos/io/ByteOrderValues.h
@@ -226,7 +216,8 @@ include/geos/linearref/LinearLocation.h
 include/geos/linearref/LocationIndexOfLine.h
 include/geos/linearref/LocationIndexOfPoint.h
 include/geos/linearref/LocationIndexedLine.h
-include/geos/noding.h
+include/geos/math/DD.h
+include/geos/namespaces.h
 include/geos/noding/BasicSegmentString.h
 include/geos/noding/BasicSegmentString.inl
 include/geos/noding/FastNodingValidator.h
@@ -256,21 +247,17 @@ include/geos/noding/SegmentString.h
 include/geos/noding/SegmentStringUtil.h
 include/geos/noding/SimpleNoder.h
 include/geos/noding/SinglePassNoder.h
+include/geos/noding/ValidatingNoder.h
+include/geos/noding/snap/SnappingIntersectionAdder.h
+include/geos/noding/snap/SnappingNoder.h
+include/geos/noding/snap/SnappingPointIndex.h
 include/geos/noding/snapround/HotPixel.h
 include/geos/noding/snapround/HotPixel.inl
+include/geos/noding/snapround/HotPixelIndex.h
 include/geos/noding/snapround/MCIndexPointSnapper.h
 include/geos/noding/snapround/MCIndexSnapRounder.h
-include/geos/noding/snapround/SimpleSnapRounder.h
-include/geos/nodingSnapround.h
-include/geos/opBuffer.h
-include/geos/opDistance.h
-include/geos/opLinemerge.h
-include/geos/opOverlay.h
-include/geos/opPolygonize.h
-include/geos/opPredicate.h
-include/geos/opRelate.h
-include/geos/opValid.h
-include/geos/operation.h
+include/geos/noding/snapround/SnapRoundingIntersectionAdder.h
+include/geos/noding/snapround/SnapRoundingNoder.h
 include/geos/operation/GeometryGraphOperation.h
 include/geos/operation/IsSimpleOp.h
 include/geos/operation/buffer/BufferBuilder.h
@@ -318,6 +305,34 @@ include/geos/operation/overlay/snap/Geom
 include/geos/operation/overlay/snap/LineStringSnapper.h
 include/geos/operation/overlay/snap/SnapIfNeededOverlayOp.h
 include/geos/operation/overlay/snap/SnapOverlayOp.h
+include/geos/operation/overlayng/Edge.h
+include/geos/operation/overlayng/EdgeKey.h
+include/geos/operation/overlayng/EdgeMerger.h
+include/geos/operation/overlayng/EdgeNodingBuilder.h
+include/geos/operation/overlayng/EdgeSourceInfo.h
+include/geos/operation/overlayng/ElevationModel.h
+include/geos/operation/overlayng/IndexedPointOnLineLocator.h
+include/geos/operation/overlayng/InputGeometry.h
+include/geos/operation/overlayng/IntersectionPointBuilder.h
+include/geos/operation/overlayng/LineBuilder.h
+include/geos/operation/overlayng/LineLimiter.h
+include/geos/operation/overlayng/MaximalEdgeRing.h
+include/geos/operation/overlayng/OverlayEdge.h
+include/geos/operation/overlayng/OverlayEdgeRing.h
+include/geos/operation/overlayng/OverlayGraph.h
+include/geos/operation/overlayng/OverlayLabel.h
+include/geos/operation/overlayng/OverlayLabeller.h
+include/geos/operation/overlayng/OverlayMixedPoints.h
+include/geos/operation/overlayng/OverlayNG.h
+include/geos/operation/overlayng/OverlayNGRobust.h
+include/geos/operation/overlayng/OverlayPoints.h
+include/geos/operation/overlayng/OverlayUtil.h
+include/geos/operation/overlayng/PolygonBuilder.h
+include/geos/operation/overlayng/PrecisionReducer.h
+include/geos/operation/overlayng/PrecisionUtil.h
+include/geos/operation/overlayng/RingClipper.h
+include/geos/operation/overlayng/RobustClipEnvelopeComputer.h
+include/geos/operation/overlayng/UnaryUnionNG.h
 include/geos/operation/polygonize/BuildArea.h
 include/geos/operation/polygonize/EdgeRing.h
 include/geos/operation/polygonize/HoleAssigner.h
@@ -344,8 +359,10 @@ include/geos/operation/union/GeometryLis
 include/geos/operation/union/OverlapUnion.h
 include/geos/operation/union/PointGeometryUnion.h
 include/geos/operation/union/UnaryUnionOp.h
+include/geos/operation/union/UnionStrategy.h
 include/geos/operation/valid/ConnectedInteriorTester.h
 include/geos/operation/valid/ConsistentAreaTester.h
+include/geos/operation/valid/IndexedNestedShellTester.h
 include/geos/operation/valid/IsValidOp.h
 include/geos/operation/valid/MakeValid.h
 include/geos/operation/valid/QuadtreeNestedRingTester.h
@@ -354,7 +371,6 @@ include/geos/operation/valid/RepeatedPoi
 include/geos/operation/valid/SimpleNestedRingTester.h
 include/geos/operation/valid/SweeplineNestedRingTester.h
 include/geos/operation/valid/TopologyValidationError.h
-include/geos/planargraph.h
 include/geos/planargraph/DirectedEdge.h
 include/geos/planargraph/DirectedEdgeStar.h
 include/geos/planargraph/Edge.h
@@ -364,7 +380,6 @@ include/geos/planargraph/NodeMap.h
 include/geos/planargraph/PlanarGraph.h
 include/geos/planargraph/Subgraph.h
 include/geos/planargraph/algorithm/ConnectedSubgraphFinder.h
-include/geos/precision.h
 include/geos/precision/CommonBits.h
 include/geos/precision/CommonBitsOp.h
 include/geos/precision/CommonBitsRemover.h
@@ -374,6 +389,9 @@ include/geos/precision/MinimumClearance.
 include/geos/precision/PrecisionReducerCoordinateOperation.h
 include/geos/precision/SimpleGeometryPrecisionReducer.h
 include/geos/profiler.h
+include/geos/shape/fractal/HilbertCode.h
+include/geos/shape/fractal/HilbertEncoder.h
+include/geos/shape/fractal/MortonCode.h
 include/geos/simplify/DouglasPeuckerLineSimplifier.h
 include/geos/simplify/DouglasPeuckerSimplifier.h
 include/geos/simplify/LineSegmentIndex.h
@@ -382,7 +400,6 @@ include/geos/simplify/TaggedLineString.h
 include/geos/simplify/TaggedLineStringSimplifier.h
 include/geos/simplify/TaggedLinesSimplifier.h
 include/geos/simplify/TopologyPreservingSimplifier.h
-include/geos/spatialIndex.h
 include/geos/triangulate/DelaunayTriangulationBuilder.h
 include/geos/triangulate/IncrementalDelaunayTriangulator.h
 include/geos/triangulate/VoronoiDiagramBuilder.h
@@ -390,6 +407,7 @@ include/geos/triangulate/quadedge/LastFo
 include/geos/triangulate/quadedge/LocateFailureException.h
 include/geos/triangulate/quadedge/QuadEdge.h
 include/geos/triangulate/quadedge/QuadEdgeLocator.h
+include/geos/triangulate/quadedge/QuadEdgeQuartet.h
 include/geos/triangulate/quadedge/QuadEdgeSubdivision.h
 include/geos/triangulate/quadedge/TrianglePredicate.h
 include/geos/triangulate/quadedge/TriangleVisitor.h
@@ -413,3 +431,4 @@ include/geos/version.h
 include/geos_c.h
 lib/libgeos.la
 lib/libgeos_c.la
+lib/pkgconfig/geos.pc
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201214/7106ebe8/attachment.sig>

From gdt at lexort.com  Mon Dec 14 11:37:20 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 14 Dec 2020 14:37:20 -0500
Subject: [geos-devel] GEOS 3.9.0 Released
In-Reply-To: <rmio8iwxjqt.fsf@s1.lexort.com> (Greg Troxel's message of "Mon,
 14 Dec 2020 14:36:42 -0500")
References: <0DEFF15F-F9D8-44BC-90F8-32467B0B9D08@cleverelephant.ca>
 <rmio8iwxjqt.fsf@s1.lexort.com>
Message-ID: <rmik0tkxjpr.fsf@s1.lexort.com>


I should add that 3.9.0 when built on NetBSD 9 amd64 with gcc 7.4.0
builds fine and passes make check.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201214/66845ac7/attachment.sig>

From pramsey at cleverelephant.ca  Mon Dec 14 11:43:36 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 14 Dec 2020 11:43:36 -0800
Subject: [geos-devel] GEOS 3.9.0 Released
In-Reply-To: <rmio8iwxjqt.fsf@s1.lexort.com>
References: <0DEFF15F-F9D8-44BC-90F8-32467B0B9D08@cleverelephant.ca>
 <rmio8iwxjqt.fsf@s1.lexort.com>
Message-ID: <113DC9DC-D275-4718-83CD-83BE2F5E2715@cleverelephant.ca>



> On Dec 14, 2020, at 11:36 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> Hence I am posting my diff of
> installed files and would appreciate someone taking a quick scan and
> pronouncing "those changes are expected" vs "we have a problem".

Some of the removals (ttmath) are expected larger net removals. The rest appear to be balanced out by additions elsewhere (ie, they were just directory moves) and there were a handful of classes removed or headers-not-used-anywhere that were deleted. It looks fine to me at first glance.

From strk at kbt.io  Mon Dec 14 12:21:26 2020
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 14 Dec 2020 21:21:26 +0100
Subject: [geos-devel] GEOS 3.9.0 Released
In-Reply-To: <113DC9DC-D275-4718-83CD-83BE2F5E2715@cleverelephant.ca>
References: <0DEFF15F-F9D8-44BC-90F8-32467B0B9D08@cleverelephant.ca>
 <rmio8iwxjqt.fsf@s1.lexort.com>
 <113DC9DC-D275-4718-83CD-83BE2F5E2715@cleverelephant.ca>
Message-ID: <20201214202126.GC14323@cdb>

On Mon, Dec 14, 2020 at 11:43:36AM -0800, Paul Ramsey wrote:
> 
> 
> > On Dec 14, 2020, at 11:36 AM, Greg Troxel <gdt at lexort.com> wrote:
> > 
> > Hence I am posting my diff of
> > installed files and would appreciate someone taking a quick scan and
> > pronouncing "those changes are expected" vs "we have a problem".
> 
> Some of the removals (ttmath) are expected larger net removals. The rest appear to be balanced out by additions elsewhere (ie, they were just directory moves) and there were a handful of classes removed or headers-not-used-anywhere that were deleted. It looks fine to me at first glance.

Some headers I see were installed as a facility for C++ library users.
Nowadays we discourage those users so I don't see any big problem with
them being removed (like opBuffer.h and io.h)

--strk;

From dbaston at gmail.com  Mon Dec 14 13:40:52 2020
From: dbaston at gmail.com (Daniel Baston)
Date: Mon, 14 Dec 2020 16:40:52 -0500
Subject: [geos-devel] GEOS 3.9.0 Released
In-Reply-To: <20201214202126.GC14323@cdb>
References: <0DEFF15F-F9D8-44BC-90F8-32467B0B9D08@cleverelephant.ca>
 <rmio8iwxjqt.fsf@s1.lexort.com>
 <113DC9DC-D275-4718-83CD-83BE2F5E2715@cleverelephant.ca>
 <20201214202126.GC14323@cdb>
Message-ID: <CA+K_q_q7DxaR+qrvt7rT6q1q=uJ0sUwhfckwWneypVDixPdqtA@mail.gmail.com>

>
> Some headers I see were installed as a facility for C++ library users.
> Nowadays we discourage those users so I don't see any big problem with
> them being removed (like opBuffer.h and io.h)
>

I think this comment is about https://trac.osgeo.org/geos/ticket/999. That
probably should have been in the NEWS if it was not.

Because listserv chatter sometimes becomes a source of documentation for
users, I think it's important to point out that the GEOS project ("we") has
no policy of discouraging use by C++ library users.

Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201214/eda20a9f/attachment.html>

From symphoni.bush at noaa.gov  Tue Dec 15 11:38:08 2020
From: symphoni.bush at noaa.gov (Symphoni Bush - NOAA Affiliate)
Date: Tue, 15 Dec 2020 14:38:08 -0500
Subject: [geos-devel] GEOS EOL?
Message-ID: <CAA5fwB5Ag3z2_muN=eJma0qX_eiv1j8oY-e60HqsjARgYigUrA@mail.gmail.com>

I am trying to figure out if there are any versions of GEOS that are EOL,
and if so, when do these versions become EOL? Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201215/d668c2a6/attachment.html>

From geos-trac at osgeo.org  Sun Dec 20 20:10:27 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 21 Dec 2020 04:10:27 -0000
Subject: [geos-devel] [GEOS] #737: TopologyException for Valid geoemtries
In-Reply-To: <052.fa7d997ed8bb4b3b3ed759cc9cc5ef85@osgeo.org>
References: <052.fa7d997ed8bb4b3b3ed759cc9cc5ef85@osgeo.org>
Message-ID: <067.7c712e915c9ad7d4d6d5294a492b7119@osgeo.org>

#737: TopologyException for Valid geoemtries
----------------------------+---------------------------
 Reporter:  bladeoflight16  |       Owner:  geos-devel@?
     Type:  defect          |      Status:  closed
 Priority:  major           |   Milestone:  3.6.6
Component:  Default         |     Version:  3.4.2
 Severity:  Unassigned      |  Resolution:  fixed
 Keywords:                  |
----------------------------+---------------------------
Changes (by mdavis):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 This is fixed in 3.9 by OverlayNG

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/737#comment:10>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From me at komzpa.net  Sun Dec 20 23:18:53 2020
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Mon, 21 Dec 2020 10:18:53 +0300
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <20201210144838.GE14372@cdb>
References: <20201209111317.GA15484@cdb> <4960162.VVR47CNFak@even-i700>
 <20201210110858.GB14372@cdb> <20201210111640.GD14372@cdb>
 <20201210144838.GE14372@cdb>
Message-ID: <CAC8Q8tL0y1QB7sob1bVpODQvGxZR+tF=MGGgHM2cyV3DD_2-vw@mail.gmail.com>

Hi,

ST_MakeValid('MULTIPOLYGON EMPTY') crashes (any) GEOS in PostGIS 3.1.0
after the removal of EMPTY was dropped.

In PostGIS input functions and for Wagyu clipping library there's a set of
fuzzers that make sure the function never crashes.
MakeValid in GEOS may be a good candidate for such a thing - it needs to
output a Valid something and not crash on any input to be useful.


On Thu, Dec 10, 2020 at 5:48 PM Sandro Santilli <strk at kbt.io> wrote:

> On Thu, Dec 10, 2020 at 12:16:40PM +0100, Sandro Santilli wrote:
> > On Thu, Dec 10, 2020 at 12:08:58PM +0100, Sandro Santilli wrote:
> >
> > > Odd, for a MULTIPOINT with empty components it seems to strip it.
> > > But I cannot add the test because it looks like EMPTY is not accepted
> > > in WKT:
> > >
> > >     MULTIPOINT(EMPTY,1 1,EMPTY,0 0)
> > >     ParseException: Expected number but encountered word: 'EMPTY')
> >
> > Ok, figured: it's just the PostGIS->GEOS->PostGIS roundtrip conversion
> > dropping those components !
> >
> >   strk=# select ST_AsText(postgis_geos_noop('GEOMETRYCOLLECTION(POINT
> EMPTY, POINT(1 1))'));
> >              st_astext
> >   --------------------------------
> >    GEOMETRYCOLLECTION(POINT(1 1))
> >   (1 row)
> >
> > So, not related to GEOSMakeValid per-se, just with the adapter...
>
> For the record, in case anyone wants to follow:
> https://trac.osgeo.org/postgis/ticket/4814
>
> To be noted that actually passing those empty components
> to GEOS exposes crashes in GEOS (more on the ticket above)
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>


-- 
Darafei "Kom?pa" Praliaskouski
OSM BY Team - http://openstreetmap.by/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201221/f1f56486/attachment.html>

From strk at kbt.io  Mon Dec 21 03:51:44 2020
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 21 Dec 2020 12:51:44 +0100
Subject: [geos-devel] MakeValid and empty collection component
In-Reply-To: <CAC8Q8tL0y1QB7sob1bVpODQvGxZR+tF=MGGgHM2cyV3DD_2-vw@mail.gmail.com>
References: <20201209111317.GA15484@cdb> <4960162.VVR47CNFak@even-i700>
 <20201210110858.GB14372@cdb> <20201210111640.GD14372@cdb>
 <20201210144838.GE14372@cdb>
 <CAC8Q8tL0y1QB7sob1bVpODQvGxZR+tF=MGGgHM2cyV3DD_2-vw@mail.gmail.com>
Message-ID: <20201221115144.GA29541@cdb>

On Mon, Dec 21, 2020 at 10:18:53AM +0300, Darafei "Kom?pa" Praliaskouski wrote:
> Hi,
> 
> ST_MakeValid('MULTIPOLYGON EMPTY') crashes (any) GEOS in PostGIS 3.1.0
> after the removal of EMPTY was dropped.

Please check both 3.1 and master branches now. I pushed a fix for this
crash (fully inside PostGIS).

> In PostGIS input functions and for Wagyu clipping library there's a set of
> fuzzers that make sure the function never crashes.
> MakeValid in GEOS may be a good candidate for such a thing - it needs to
> output a Valid something and not crash on any input to be useful.

A `fuzz` target for Makefile would help developers play with this.
Like we have 'make garden'.

--strk;

From andrew.bell.ia at gmail.com  Wed Dec 23 12:07:03 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 23 Dec 2020 15:07:03 -0500
Subject: [geos-devel] 3D Intersections
Message-ID: <CACJ51z2RCSVO5R+rJ9cnyB9fd6bFCuizw+cvoxN1titUuTLJPQ@mail.gmail.com>

Hi,

Can anyone tell me how GEOS operates WRT intersections when geometries have
a Z dimension? Are the intersections done in 2D instead of 3D? Does it
depend on the geometry type? Is there any good documentation that explains
this in detail?

Thanks,

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20201223/e8b46023/attachment.html>

From pramsey at cleverelephant.ca  Wed Dec 23 14:34:04 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 23 Dec 2020 14:34:04 -0800
Subject: [geos-devel] 3D Intersections
In-Reply-To: <CACJ51z2RCSVO5R+rJ9cnyB9fd6bFCuizw+cvoxN1titUuTLJPQ@mail.gmail.com>
References: <CACJ51z2RCSVO5R+rJ9cnyB9fd6bFCuizw+cvoxN1titUuTLJPQ@mail.gmail.com>
Message-ID: <B1970657-A1DD-4766-9F22-67534B06A8BC@cleverelephant.ca>

We could maybe have a blog post or wiki page on it... Martin just implemented the new one, so now's a good time to explain the logic.
In general it's all 2D, but the 3D values are "filled in" on a best-effort basis for the derived geometry.
P

> On Dec 23, 2020, at 12:07 PM, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
> 
> Hi,
> 
> Can anyone tell me how GEOS operates WRT intersections when geometries have a Z dimension? Are the intersections done in 2D instead of 3D? Does it depend on the geometry type? Is there any good documentation that explains this in detail?
> 
> Thanks,
> 
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From geos-trac at osgeo.org  Wed Dec 23 14:36:52 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 23 Dec 2020 22:36:52 -0000
Subject: [geos-devel] [GEOS] #1004: Simplify method provides wrong result
In-Reply-To: <044.b710fdc1615fbea305f948e78402126b@osgeo.org>
References: <044.b710fdc1615fbea305f948e78402126b@osgeo.org>
Message-ID: <059.4b207ef6d3950267a2aeddda735969e4@osgeo.org>

#1004: Simplify method provides wrong result
------------------------+---------------------------
 Reporter:  kamad3      |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  minor       |   Milestone:  3.10.0
Component:  Default     |     Version:  3.8.0
 Severity:  Unassigned  |  Resolution:
 Keywords:  simplify    |
------------------------+---------------------------

Comment (by mdavis):

 Fixed in JTS by https://github.com/locationtech/jts/pull/655

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1004#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec 23 14:54:31 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 23 Dec 2020 22:54:31 -0000
Subject: [geos-devel] [GEOS] #732: BufferOp(0.0) makes the attached
 polygon "miss"!
In-Reply-To: <049.f34d3fbf88eed6d823085d6ab7a170f4@osgeo.org>
References: <049.f34d3fbf88eed6d823085d6ab7a170f4@osgeo.org>
Message-ID: <064.89f7e54918689366263ad2694bd5bc7d@osgeo.org>

#732: BufferOp(0.0) makes the attached polygon "miss"!
-------------------------+---------------------------
 Reporter:  jiangdaidai  |       Owner:  geos-devel@?
     Type:  defect       |      Status:  reopened
 Priority:  major        |   Milestone:  3.9.1
Component:  Default      |     Version:  3.4.2
 Severity:  Significant  |  Resolution:
 Keywords:  BufferOp     |
-------------------------+---------------------------
Changes (by mdavis):

 * status:  closed => reopened
 * resolution:  wontfix =>
 * severity:  Critical => Significant
 * milestone:  3.6.3 => 3.9.1


Comment:

 This is the classic bow-tie buffer(0) failure.
 Fixed in JTS by https://github.com/locationtech/jts/pull/655

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/732#comment:9>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Tue Dec 29 11:49:41 2020
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 29 Dec 2020 20:49:41 +0100
Subject: [geos-devel] ssh access to git repository
Message-ID: <20201229194941.GB16797@cdb>

FYI: we've enabled SSH support in Gitea.
The steps to use it are:

  1. Enter any public SSH key you want to be accepted
     in LDAP: https://id.osgeo.org/ldap/edit

  2. (Re)Login into gitea at least once, everytime
     you modify your keys set, so they are synchronized

  3. Update your git remote url. Assuming it is called "origin":
     git config remote.origin.url git at git.osgeo.org:geos/geos.git

In case of troubles, report them to trac:

  https://trac.osgeo.org/osgeo

--strk;

  ()   Free GIS & Flash consultant/developer
  /\   https://strk.kbt.io/services.html

From geos-trac at osgeo.org  Wed Dec 30 15:12:56 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 30 Dec 2020 23:12:56 -0000
Subject: [geos-devel] [GEOS] #732: BufferOp(0.0) makes the attached
 polygon "miss"!
In-Reply-To: <049.f34d3fbf88eed6d823085d6ab7a170f4@osgeo.org>
References: <049.f34d3fbf88eed6d823085d6ab7a170f4@osgeo.org>
Message-ID: <064.ec5761bf11974071b92eaf7bf520a19b@osgeo.org>

#732: BufferOp(0.0) makes the attached polygon "miss"!
-------------------------+---------------------------
 Reporter:  jiangdaidai  |       Owner:  geos-devel@?
     Type:  defect       |      Status:  closed
 Priority:  major        |   Milestone:  3.9.1
Component:  Default      |     Version:  3.4.2
 Severity:  Significant  |  Resolution:  fixed
 Keywords:  BufferOp     |
-------------------------+---------------------------
Changes (by Paul Ramsey <pramsey@?>):

 * status:  reopened => closed
 * resolution:   => fixed


Comment:

 In [changeset:"efe09d6e53ad5e6a7a43747af24f28c6876c6c72/git" efe09d6/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="efe09d6e53ad5e6a7a43747af24f28c6876c6c72"
 Port https://github.com/locationtech/jts/pull/655, Fix buffer to use
 largest enclosed area for invalid rings
 Closes #732
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/732#comment:10>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

