From paul.wittle at dorsetcouncil.gov.uk  Thu Dec  2 07:11:52 2021
From: paul.wittle at dorsetcouncil.gov.uk (Paul Wittle)
Date: Thu, 2 Dec 2021 15:11:52 +0000
Subject: [QGIS-Developer] Long term release
Message-ID: <LO2P265MB323139FE520927EB30EFB10AC1699@LO2P265MB3231.GBRP265.PROD.OUTLOOK.COM>

Hi,

Notice from the previous conversations that the long term release has been causing a few issues and debates but would it be possible for someone to clarify where we stand?

The blog posts last week said to revert to 3.16.11 or upgrade to 3.16.14 after it's release. My understanding is that it has been released and I've been deploying a version that claims to be 3.16.14 but the blog posts have not updated to reflect the release.

I've also now discovered a bug which means that if I open a project with a Microsoft SQL Server layer the application crashes. I'm not sure if that one has been picked up but I'm assuming from the previous discussion that there are still issues with Windows.

Which version is currently being recommended? 3.16.11 or 3.16.14 and could the blog post when QGIS opens be updated to reflect whatever the answer is?

It is possible this has already been done as the current message says to go for 3.16.13 but it looks like the blog post that was up before the one about going to 3.16.14 so it is unclear what the advise is to me.

Thanks,
Paul
This e-mail and any files transmitted with it are intended solely for the use of the individual or entity to whom they are addressed. It may contain unclassified but sensitive or protectively marked material and should be handled accordingly. Unless you are the named addressee (or authorised to receive it for the addressee) you may not copy or use it, or disclose it to anyone else. If you have received this transmission in error please notify the sender immediately. All traffic may be subject to recording and/or monitoring in accordance with relevant legislation. Any views expressed in this message are those of the individual sender, except where the sender specifies and with authority, states them to be the views of Dorset Council. Dorset Council does not accept service of documents by fax or other electronic means. Virus checking: Whilst all reasonable steps have been taken to ensure that this electronic communication and its attachments whether encoded, encrypted or otherwise supplied are free from computer viruses, Dorset Council accepts no liability in respect of any loss, cost, damage or expense suffered as a result of accessing this message or any of its attachments. For information on how Dorset Council processes your information, please see www.dorsetcouncil.gov.uk/data-protection
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211202/e7b6705a/attachment.html>

From cavallini at faunalia.it  Sat Dec  4 02:35:06 2021
From: cavallini at faunalia.it (Paolo Cavallini)
Date: Sat, 4 Dec 2021 11:35:06 +0100
Subject: [QGIS-Developer] Segfault while installing qgis-providers
Message-ID: <16636d3a-2d84-5d90-4c1d-c02a9ad4e496@faunalia.it>

Hi all,
while installing on debian unstable I get a segfault:

Configurazione di qgis-providers (3.16.14+dfsg-1)...
Segmentation fault
dpkg: errore nell'elaborare il pacchetto qgis-providers (--configure):
 il sottoprocesso installato pacchetto qgis-providers script
post-installation ha restituito lo stato di errore 139

anyone can confirm?
All the best.
-- 
Paolo Cavallini
www.faunalia.eu - QGIS.org
training, support, development on QGIS, PostGIS and more

From nicolas.godet at outlook.fr  Sat Dec  4 04:52:44 2021
From: nicolas.godet at outlook.fr (Nicolas Godet)
Date: Sat, 4 Dec 2021 12:52:44 +0000
Subject: [QGIS-Developer] QgsTriangle.angles() return wrong values ?
Message-ID: <PA4P190MB11665DEECE547DE4FF0343508F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>

Dear devs,

I have issues with the return of QgsTriangle.angles().
https://qgis.org/pyqgis/master/core/QgsTriangle.html?highlight=qgstriangle#qgis.core.QgsTriangle.angles

Here is an example:

>>> triangle = QgsTriangle()
>>> triangle.setExteriorRing(QgsLineString([QgsPoint(78598.328125, 330538.375, 0), QgsPoint(78606.3203125, 330544, 0), QgsPoint(78601.46875, 330550.90625, 0), QgsPoint(78598.328125, 330538.375, 0)]))
>>> triangle.angles()
[0.7119509950830287, 0.0008857138004074727, 0.85795961791146]
>>> [math.degrees(a) for a in triangle.angles()]
[40.79178723839677, 0.05074766261984076, 49.157465098983366]

If we display this triangle, none of the angles have such a low angle.
[cid:e23c990e-fd85-40e1-b5dc-158e5b175048]
https://prnt.sc/21p9ju6


We should have a near-90? angle, which we don't...

https://www.triangle-calculator.com/?what=vc&a=78598.328125&a1=330538.375&3dd=3D&a2=&b=78606.3203125&b1=330544&b2=&c=78601.46875&c1=330550.90625&c2=&submit=Solve&3d=0

Am I doing this wrong ?

Regards,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211204/0330e92c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 3057 bytes
Desc: image.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211204/0330e92c/attachment.png>

From andreaerdna at libero.it  Sat Dec  4 10:45:20 2021
From: andreaerdna at libero.it (Andrea Giudiceandrea)
Date: Sat, 4 Dec 2021 19:45:20 +0100
Subject: [QGIS-Developer] QgsTriangle.angles() return wrong values ?
In-Reply-To: <PA4P190MB11665DEECE547DE4FF0343508F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
References: <PA4P190MB11665DEECE547DE4FF0343508F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
Message-ID: <6cdea4ec-2504-d87e-133f-8424e25746c6@libero.it>

Il 04/12/2021 13:52, Nicolas Godet ha scritto:
> >>> triangle.angles()
> [0.7119509950830287, 0.0008857138004074727, 0.85795961791146]
> >>> [math.degrees(a) for a in triangle.angles()]
> [40.79178723839677, 0.05074766261984076, 49.157465098983366]
>
> We should have a near-90? angle, which we don't...

Hi Nicolas,
it seems the QgsTriangle::angles() fails to correctly return the value 
of angles greater than 90? deg. (Pi/2 rad.).

Actually the function code strangely subtract 90 to such angles:

https://github.com/qgis/QGIS/blob/dd0cd13a00998bc153c0b6519ea75038b57a6df5/src/core/geometry/qgstriangle.cpp#L397-L403
 ? angles.append( ( a1 > M_PI_2 ? a1 - M_PI_2 : a1 ) );
 ? angles.append( ( a2 > M_PI_2 ? a2 - M_PI_2 : a2 ) );
 ? angles.append( ( a3 > M_PI_2 ? a3 - M_PI_2 : a3 ) );

In fact, the correct value of the angle is 90.05074766261984076 deg. and 
not 0.05074766261984076.

Regards.

Andrea
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211204/4e8eb718/attachment.html>

From nicolas.godet at outlook.fr  Sat Dec  4 10:51:49 2021
From: nicolas.godet at outlook.fr (Nicolas Godet)
Date: Sat, 4 Dec 2021 18:51:49 +0000
Subject: [QGIS-Developer] QgsTriangle.angles() return wrong values ?
In-Reply-To: <6cdea4ec-2504-d87e-133f-8424e25746c6@libero.it>
References: <PA4P190MB11665DEECE547DE4FF0343508F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
 <6cdea4ec-2504-d87e-133f-8424e25746c6@libero.it>
Message-ID: <PA4P190MB1166E1648629DBDBF0E78E348F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>

Seems an issue more than a feature to me.
At least, the doc should reflect this behavior.

Should I open a issue on GH ?

Le 4 d?c. 2021 ? 19:45, Andrea Giudiceandrea <andreaerdna at libero.it> a ?crit :

? Il 04/12/2021 13:52, Nicolas Godet ha scritto:
>>> triangle.angles()
[0.7119509950830287, 0.0008857138004074727, 0.85795961791146]
>>> [math.degrees(a) for a in triangle.angles()]
[40.79178723839677, 0.05074766261984076, 49.157465098983366]

We should have a near-90? angle, which we don't...

Hi Nicolas,
it seems the QgsTriangle::angles() fails to correctly return the value of angles greater than 90? deg. (Pi/2 rad.).

Actually the function code strangely subtract 90 to such angles:

https://github.com/qgis/QGIS/blob/dd0cd13a00998bc153c0b6519ea75038b57a6df5/src/core/geometry/qgstriangle.cpp#L397-L403
  angles.append( ( a1 > M_PI_2 ? a1 - M_PI_2 : a1 ) );
  angles.append( ( a2 > M_PI_2 ? a2 - M_PI_2 : a2 ) );
  angles.append( ( a3 > M_PI_2 ? a3 - M_PI_2 : a3 ) );

In fact, the correct value of the angle is 90.05074766261984076 deg. and not 0.05074766261984076.

Regards.

Andrea
_______________________________________________
QGIS-Developer mailing list
QGIS-Developer at lists.osgeo.org
List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211204/f73ab3d2/attachment-0001.html>

From nicolas.godet at outlook.fr  Sat Dec  4 11:32:47 2021
From: nicolas.godet at outlook.fr (Nicolas Godet)
Date: Sat, 4 Dec 2021 19:32:47 +0000
Subject: [QGIS-Developer] QgsTriangle.angles() return wrong values ?
In-Reply-To: <PA4P190MB1166E1648629DBDBF0E78E348F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
References: <PA4P190MB11665DEECE547DE4FF0343508F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
 <6cdea4ec-2504-d87e-133f-8424e25746c6@libero.it>
 <PA4P190MB1166E1648629DBDBF0E78E348F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
Message-ID: <PA4P190MB1166BBB2E3B4D2221BEB8CBB8F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>

A workaround would be to add 90? to the lowest value if the sum is lower than 180?.
https://github.com/Artelia/Mesh_tools/commit/5d40a8807f1c8264ccff51b365ce8d58ac333011

That?s not ideal, especially in case of very flat triangle?


Le 4 d?c. 2021 ? 19:52, Nicolas Godet <nicolas.godet at outlook.fr> a ?crit :

?
Seems an issue more than a feature to me.
At least, the doc should reflect this behavior.

Should I open a issue on GH ?

Le 4 d?c. 2021 ? 19:45, Andrea Giudiceandrea <andreaerdna at libero.it> a ?crit :

? Il 04/12/2021 13:52, Nicolas Godet ha scritto:
>>> triangle.angles()
[0.7119509950830287, 0.0008857138004074727, 0.85795961791146]
>>> [math.degrees(a) for a in triangle.angles()]
[40.79178723839677, 0.05074766261984076, 49.157465098983366]

We should have a near-90? angle, which we don't...

Hi Nicolas,
it seems the QgsTriangle::angles() fails to correctly return the value of angles greater than 90? deg. (Pi/2 rad.).

Actually the function code strangely subtract 90 to such angles:

https://github.com/qgis/QGIS/blob/dd0cd13a00998bc153c0b6519ea75038b57a6df5/src/core/geometry/qgstriangle.cpp#L397-L403
  angles.append( ( a1 > M_PI_2 ? a1 - M_PI_2 : a1 ) );
  angles.append( ( a2 > M_PI_2 ? a2 - M_PI_2 : a2 ) );
  angles.append( ( a3 > M_PI_2 ? a3 - M_PI_2 : a3 ) );

In fact, the correct value of the angle is 90.05074766261984076 deg. and not 0.05074766261984076.

Regards.

Andrea
_______________________________________________
QGIS-Developer mailing list
QGIS-Developer at lists.osgeo.org
List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211204/16c15fef/attachment.html>

From lbartoletti at tuxfamily.org  Sun Dec  5 02:34:35 2021
From: lbartoletti at tuxfamily.org (=?UTF-8?Q?Lo=c3=afc_Bartoletti?=)
Date: Sun, 5 Dec 2021 11:34:35 +0100
Subject: [QGIS-Developer] QgsTriangle.angles() return wrong values ?
In-Reply-To: <PA4P190MB1166BBB2E3B4D2221BEB8CBB8F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
References: <PA4P190MB11665DEECE547DE4FF0343508F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
 <6cdea4ec-2504-d87e-133f-8424e25746c6@libero.it>
 <PA4P190MB1166E1648629DBDBF0E78E348F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
 <PA4P190MB1166BBB2E3B4D2221BEB8CBB8F6B9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
Message-ID: <d446f6f6-69d4-dbb0-a86a-0ab436cb5d7a@tuxfamily.org>

Salut Nicolas,

I think I added this very strange hack when I ported my old python code 
(with other geometry functions that were not or slightly different from 
QgsGeometryUtils). However, I have no memory of why.

You can open an issue and assign it to me, I will try to find that old 
code and fix it. We can discuss this later this week.

Lo?c

Le 04/12/2021 ? 20:32, Nicolas Godet a ?crit?:
> A workaround would be to add 90? to the lowest value if the sum is 
> lower than 180?.
> https://github.com/Artelia/Mesh_tools/commit/5d40a8807f1c8264ccff51b365ce8d58ac333011
>
> That?s not ideal, especially in case of very flat triangle?
>
>
>> Le 4 d?c. 2021 ? 19:52, Nicolas Godet <nicolas.godet at outlook.fr> a 
>> ?crit?:
>>
>> ?
>> Seems an issue more than a feature to me.
>> At least, the doc should reflect this behavior.
>>
>> Should I open a issue on GH ?
>>
>>> Le 4 d?c. 2021 ? 19:45, Andrea Giudiceandrea <andreaerdna at libero.it> 
>>> a ?crit?:
>>>
>>> ? Il 04/12/2021 13:52, Nicolas Godet ha scritto:
>>>> >>> triangle.angles()
>>>> [0.7119509950830287, 0.0008857138004074727, 0.85795961791146]
>>>> >>> [math.degrees(a) for a in triangle.angles()]
>>>> [40.79178723839677, 0.05074766261984076, 49.157465098983366]
>>>>
>>>> We should have a near-90? angle, which we don't...
>>>
>>> Hi Nicolas,
>>> it seems the QgsTriangle::angles() fails to correctly return the 
>>> value of angles greater than 90? deg. (Pi/2 rad.).
>>>
>>> Actually the function code strangely subtract 90 to such angles:
>>>
>>> https://github.com/qgis/QGIS/blob/dd0cd13a00998bc153c0b6519ea75038b57a6df5/src/core/geometry/qgstriangle.cpp#L397-L403
>>> ? angles.append( ( a1 > M_PI_2 ? a1 - M_PI_2 : a1 ) );
>>> ? angles.append( ( a2 > M_PI_2 ? a2 - M_PI_2 : a2 ) );
>>> ? angles.append( ( a3 > M_PI_2 ? a3 - M_PI_2 : a3 ) );
>>>
>>> In fact, the correct value of the angle is 90.05074766261984076 deg. 
>>> and not 0.05074766261984076.
>>>
>>> Regards.
>>>
>>> Andrea
>>> _______________________________________________
>>> QGIS-Developer mailing list
>>> QGIS-Developer at lists.osgeo.org
>>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info:https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe:https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211205/e1658ebb/attachment.html>

From matthewtpickering at gmail.com  Tue Dec  7 04:23:48 2021
From: matthewtpickering at gmail.com (Matthew Pickering)
Date: Tue, 7 Dec 2021 12:23:48 +0000
Subject: [QGIS-Developer] Meaning of GRASS_PREFIX(7)
In-Reply-To: <CALuQ0m8DwfDJqOYezc9Gdq5iPnyMkV8uwUZoG_boOrMOnd4RrA@mail.gmail.com>
References: <CALuQ0m8DwfDJqOYezc9Gdq5iPnyMkV8uwUZoG_boOrMOnd4RrA@mail.gmail.com>
Message-ID: <CALuQ0m9qf_aTCP8rL0MZbUP0kWEyL7TJkR5XmTQYM9-sQvtGkw@mail.gmail.com>

I am attempting to package QGIS for NixOS and I am struggling to
understand what GRASS_PREFIX is specified to do.

When building I pass the `GRASS_PREFIX=...` flag to cmake but the
resulting build does not
propagate the GRASS_PREFIX and I still need to make the grass
executables available on my path.

If I then make the grass binaries available at runtime on my path,
then processing can find the grass tools and the commands work.

Therefore

1. Do I need to pass GRASS_PREFIX at all if QGIS looks for the grass
binary at runtime on my path unconditionally?
2. Is there a way to bake into QGIS the location of the grass binary
at build-time so that I don't also need to provision grass on my PATH
at runtime?
3. What relationship is there between the GRASS plugin and the
processing support for GRASS?

Cheers,

Matt

From koraykoca34 at gmail.com  Tue Dec  7 07:13:06 2021
From: koraykoca34 at gmail.com (Koray Koca)
Date: Tue, 7 Dec 2021 16:13:06 +0100
Subject: [QGIS-Developer] Adding an Offline Map to QT GUI using QGIS Library, C++
Message-ID: <CANnRLKCFCL3-1yLdy=r3rsuhgG7=NiixoP_AE3sjKsFs43K8DQ@mail.gmail.com>

Hi Developer Team,

I want to integrate my own map (my own GIS data) to GUI in QT creator using
QGIS Library in C++. However, I found examples from 12 years ago and when I
want to implement them, they give several errors which I cannot fix. There
are examples online only for Python.

Do you use only Python for it and not support C++ anymore?
Do you have updated examples for C++ implementations?
How can I integrate my own GIS data to GUI in Qt Creator using QGIS library
or do you suggest another way for me?

Thank you and have a nice day.

*Kind regards / Mit freundlichen Gr??en*
*Koray Koca | +49 157 392 41150 | LinkedIn
<https://www.linkedin.com/in/koray-koca-372a8196/>*

*_________________________________________________________________*
*Please consider the environment before printing this e-mail or its
attachments.*

*Bitte denken Sie an die Umwelt bevor Sie diese E-Mail oder ihre Anh?nge
drucken.*

*_________________________________________________________________*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211207/bd838db8/attachment.html>

From pergler at gmail.com  Tue Dec  7 10:29:38 2021
From: pergler at gmail.com (pergler at gmail.com)
Date: Tue, 7 Dec 2021 13:29:38 -0500
Subject: [QGIS-Developer] Heads up: no osgeo4w qgis-dev nightly since Nov 20
Message-ID: <004e01d7eb98$65567440$30035cc0$@gmail.com>

Just a heads up that the osgeo4w nightly qgis-dev build hasn't been updated
since Nov 20. 

No worries, but it does mean recent commits to master are getting less than
the usual dev-channel userbase testing, at least under Windows. 

 

A ticket has been filed: https://trac.osgeo.org/osgeo4w/ticket/707

 

---

Martin Pergler

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211207/c9474d93/attachment.html>

From andreaerdna at libero.it  Wed Dec  8 12:01:47 2021
From: andreaerdna at libero.it (Andrea Giudiceandrea)
Date: Wed, 8 Dec 2021 21:01:47 +0100
Subject: [QGIS-Developer] Heads up: no osgeo4w qgis-dev nightly since Nov 20
In-Reply-To: <004e01d7eb98$65567440$30035cc0$@gmail.com>
References: <004e01d7eb98$65567440$30035cc0$@gmail.com>
Message-ID: <167ad5f0-fc5f-ecae-cbff-aca880787c1f@libero.it>

> pergler 
> <https://www.mail-archive.com/search?l=qgis-developer at lists.osgeo.org&q=from:%22pergler%22>Tue, 
> 07 Dec 2021 10:29:48 -0800 
> <https://www.mail-archive.com/search?l=qgis-developer at lists.osgeo.org&q=date:20211207>
>
> Just a heads up that the osgeo4w nightly qgis-dev build hasn't been updated
> since Nov 20.
> No worries, but it does mean recent commits to master are getting less than
> the usual dev-channel userbase testing, at least under Windows.
>
> A ticket has been filed:https://trac.osgeo.org/osgeo4w/ticket/707

The build issue has been fixed with PR 
https://github.com/qgis/QGIS/pull/46375 .

A new qgis-dev-3.23.0-132-54b385f6d6-1 (2021-Dec-07 22:03) package is 
now available.

Regards.

Andrea Giudiceandrea
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211208/1b3e7f24/attachment.html>

From olivier.dalang at gmail.com  Thu Dec  9 06:29:20 2021
From: olivier.dalang at gmail.com (Olivier Dalang)
Date: Thu, 9 Dec 2021 15:29:20 +0100
Subject: [QGIS-Developer] Issue with future 3.22 LTR ? (a.k.a missing
 backports to 3.22)
Message-ID: <CAExk7p3_w45m=1DVU2iF7fS0L6seAAtRv6M+rtz8+7cz7PZVfQ@mail.gmail.com>

Hi all !

There's something I don't completely understand with the current
branches/releases process and which to me looks like a major issue (came
across it while checking the status of a recently merged bugfix PR#45521
<https://github.com/qgis/QGIS/pull/45521>).

That fix was merged to master with the `backport queued_ltr_backports`
label, but without `backport release-3_22`.

As far as I understand, this means it will be available in 3.24 (master)
and in 3.16 (after some quarantine), but not in 3.22. Still if I understand
correctly, 3.22 is our future LTR, meaning that LTR users will at some
point upgrade from 3.16 to 3.22. Does that mean that the bug they have seen
fixed in 3.16 will be reintroduced in 3.22 ?

The following filter shows many other PRs backported to 3.16 but not 3.22 :
is:pr label:"backport queued_ltr_backports" -label:"backport release-3_22"
<https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22>
(same
search should also be done with label `backport release-3_16`)

Shouldn't backporting to 3.16 always imply backporting to 3.22 ? Or am I
missing something ?

Cheers !

Olivier
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211209/94cd1a47/attachment.html>

From delazj at gmail.com  Thu Dec  9 06:53:49 2021
From: delazj at gmail.com (DelazJ)
Date: Thu, 9 Dec 2021 15:53:49 +0100
Subject: [QGIS-Developer] Issue with future 3.22 LTR ? (a.k.a missing
 backports to 3.22)
In-Reply-To: <CAExk7p3_w45m=1DVU2iF7fS0L6seAAtRv6M+rtz8+7cz7PZVfQ@mail.gmail.com>
References: <CAExk7p3_w45m=1DVU2iF7fS0L6seAAtRv6M+rtz8+7cz7PZVfQ@mail.gmail.com>
Message-ID: <CAECJsSrKHDLhJonV8im71x--CVYroTzUK-Cb2yW+hdxvmt3egA@mail.gmail.com>

Hi Olivier,

Yes, backporting to 3.16 implies backport to 3.22. And I think the PR you
point here is more about forgetting. The PR itself is opened during 3.22.0
dev cycle and merged few days after release, so easier to forget to add the
label.
And the list of missing PRs should actually be
https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22+merged%3A%3E2021-10-21
since anything merged before 22/10/2021 is automatically in 3.22. Finally,
there's no that much leftover PRs, so I think everybody is OK with your
logic.

Regards,
Harrissou

Le jeu. 9 d?c. 2021 ? 15:29, Olivier Dalang <olivier.dalang at gmail.com> a
?crit :

> Hi all !
>
> There's something I don't completely understand with the current
> branches/releases process and which to me looks like a major issue (came
> across it while checking the status of a recently merged bugfix PR#45521
> <https://github.com/qgis/QGIS/pull/45521>).
>
> That fix was merged to master with the `backport queued_ltr_backports`
> label, but without `backport release-3_22`.
>
> As far as I understand, this means it will be available in 3.24 (master)
> and in 3.16 (after some quarantine), but not in 3.22. Still if I understand
> correctly, 3.22 is our future LTR, meaning that LTR users will at some
> point upgrade from 3.16 to 3.22. Does that mean that the bug they have seen
> fixed in 3.16 will be reintroduced in 3.22 ?
>
> The following filter shows many other PRs backported to 3.16 but not 3.22 :
> is:pr label:"backport queued_ltr_backports" -label:"backport release-3_22"
> <https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22> (same
> search should also be done with label `backport release-3_16`)
>
> Shouldn't backporting to 3.16 always imply backporting to 3.22 ? Or am I
> missing something ?
>
> Cheers !
>
> Olivier
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211209/51db86c1/attachment.html>

From claudemuhlemann at yahoo.com  Thu Dec  9 11:23:38 2021
From: claudemuhlemann at yahoo.com (claude Muhlemann)
Date: Thu, 9 Dec 2021 19:23:38 +0000 (UTC)
Subject: [QGIS-Developer] Claude
References: <413694909.227963.1639077818355.ref@mail.yahoo.com>
Message-ID: <413694909.227963.1639077818355@mail.yahoo.com>

Hello,I found the website of QGIS and there a plug-in called Go2streetview? from Enrico Ferreguti.According to the discription: Go2streetview allows to get a window with Google Street View or Bing Bird's Eye clicking and dragging the cursor on map to set location and direction of the desired view. Features: Automatic SRS conversion, Transparent proxying, View position on map, Take Snapshots of current view, Dockable Dialog Windows, Overlay info layer support, Map follows Streetview, Streetview service coverage
it might be something I look for.
My name is Alain. I work at M3D http://www.m3d.fyi. As you can see on our website, we develop 3D views. Such made with photogrammetry (Drone basaed) and ground based 3D cameras (Matterport). With other words, we produce Map Views and Street Views. What we look for is, to be able to make just the same as it is possible in Google Maps and Earth, entering a Street View from a Map View and vice versa.
Have I understood the description from the go2streeview correctly? can you help me/us out somehow? What we could us. What is actually required so that this can be made possible etc. and what would be costs. We have no idea, knowledge in this fild. 

Thanks a lot, best regards, good health and looking forward hearing.

Alain
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211209/e98e8d02/attachment-0001.html>

From julien.cabieces at oslandia.com  Thu Dec  9 23:44:53 2021
From: julien.cabieces at oslandia.com (Julien Cabieces)
Date: Fri, 10 Dec 2021 08:44:53 +0100
Subject: [QGIS-Developer] Issue with future 3.22 LTR ? (a.k.a missing
 backports to 3.22)
In-Reply-To: <CAECJsSrKHDLhJonV8im71x--CVYroTzUK-Cb2yW+hdxvmt3egA@mail.gmail.com>
References: <CAExk7p3_w45m=1DVU2iF7fS0L6seAAtRv6M+rtz8+7cz7PZVfQ@mail.gmail.com>
 <CAECJsSrKHDLhJonV8im71x--CVYroTzUK-Cb2yW+hdxvmt3egA@mail.gmail.com>
Message-ID: <87v8zw29ai.fsf@julien-laptop.home>


Hi,

I confirm it's completely about forgetting. When I backported in 3.16
(queued ltr backports), I believed the backport in 3.22 was already done which
was not the case. Thank you for fixing this.

Kind regards,
Julien

> Hi Olivier,
>
> Yes, backporting to 3.16 implies backport to 3.22. And I think the PR you
> point here is more about forgetting. The PR itself is opened during 3.22.0
> dev cycle and merged few days after release, so easier to forget to add the
> label.
> And the list of missing PRs should actually be
> https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22+merged%3A%3E2021-10-21
> since anything merged before 22/10/2021 is automatically in 3.22. Finally,
> there's no that much leftover PRs, so I think everybody is OK with your
> logic.
>
> Regards,
> Harrissou
>
> Le jeu. 9 d?c. 2021 ? 15:29, Olivier Dalang <olivier.dalang at gmail.com> a
> ?crit :
>
>> Hi all !
>>
>> There's something I don't completely understand with the current
>> branches/releases process and which to me looks like a major issue (came
>> across it while checking the status of a recently merged bugfix PR#45521
>> <https://github.com/qgis/QGIS/pull/45521>).
>>
>> That fix was merged to master with the `backport queued_ltr_backports`
>> label, but without `backport release-3_22`.
>>
>> As far as I understand, this means it will be available in 3.24 (master)
>> and in 3.16 (after some quarantine), but not in 3.22. Still if I understand
>> correctly, 3.22 is our future LTR, meaning that LTR users will at some
>> point upgrade from 3.16 to 3.22. Does that mean that the bug they have seen
>> fixed in 3.16 will be reintroduced in 3.22 ?
>>
>> The following filter shows many other PRs backported to 3.16 but not 3.22 :
>> is:pr label:"backport queued_ltr_backports" -label:"backport release-3_22"
>> <https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22> (same
>> search should also be done with label `backport release-3_16`)
>>
>> Shouldn't backporting to 3.16 always imply backporting to 3.22 ? Or am I
>> missing something ?
>>
>> Cheers !
>>
>> Olivier
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer


From etienne.trimaille at gmail.com  Fri Dec 10 00:08:51 2021
From: etienne.trimaille at gmail.com (Etienne Trimaille)
Date: Fri, 10 Dec 2021 09:08:51 +0100
Subject: [QGIS-Developer] Issue with future 3.22 LTR ? (a.k.a missing
 backports to 3.22)
In-Reply-To: <CAECJsSrKHDLhJonV8im71x--CVYroTzUK-Cb2yW+hdxvmt3egA@mail.gmail.com>
References: <CAExk7p3_w45m=1DVU2iF7fS0L6seAAtRv6M+rtz8+7cz7PZVfQ@mail.gmail.com>
 <CAECJsSrKHDLhJonV8im71x--CVYroTzUK-Cb2yW+hdxvmt3egA@mail.gmail.com>
Message-ID: <CAMtDFL+rGyh+g9_D8KskQnD4Yv3uKw7cu2vb4cw=_wEkw=TFZQ@mail.gmail.com>

As Harissou said, the PR was created before the 3.22 branch, so the label
"backport release-3_32" was not created at that time.

Le jeu. 9 d?c. 2021 ? 15:54, DelazJ <delazj at gmail.com> a ?crit :

> Hi Olivier,
>
> Yes, backporting to 3.16 implies backport to 3.22. And I think the PR you
> point here is more about forgetting. The PR itself is opened during 3.22.0
> dev cycle and merged few days after release, so easier to forget to add the
> label.
> And the list of missing PRs should actually be
> https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22+merged%3A%3E2021-10-21
> since anything merged before 22/10/2021 is automatically in 3.22. Finally,
> there's no that much leftover PRs, so I think everybody is OK with your
> logic.
>
> Regards,
> Harrissou
>
> Le jeu. 9 d?c. 2021 ? 15:29, Olivier Dalang <olivier.dalang at gmail.com> a
> ?crit :
>
>> Hi all !
>>
>> There's something I don't completely understand with the current
>> branches/releases process and which to me looks like a major issue (came
>> across it while checking the status of a recently merged bugfix PR#45521
>> <https://github.com/qgis/QGIS/pull/45521>).
>>
>> That fix was merged to master with the `backport queued_ltr_backports`
>> label, but without `backport release-3_22`.
>>
>> As far as I understand, this means it will be available in 3.24 (master)
>> and in 3.16 (after some quarantine), but not in 3.22. Still if I understand
>> correctly, 3.22 is our future LTR, meaning that LTR users will at some
>> point upgrade from 3.16 to 3.22. Does that mean that the bug they have seen
>> fixed in 3.16 will be reintroduced in 3.22 ?
>>
>> The following filter shows many other PRs backported to 3.16 but not 3.22
>> :
>> is:pr label:"backport queued_ltr_backports" -label:"backport release-3_22"
>> <https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22> (same
>> search should also be done with label `backport release-3_16`)
>>
>> Shouldn't backporting to 3.16 always imply backporting to 3.22 ? Or am I
>> missing something ?
>>
>> Cheers !
>>
>> Olivier
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211210/efd7fc5b/attachment.html>

From eriktpol at gmail.com  Sat Dec 11 05:25:08 2021
From: eriktpol at gmail.com (Erik Polzin)
Date: Sat, 11 Dec 2021 15:25:08 +0200
Subject: [QGIS-Developer] pyqgis getFeatures(<FilterExpression>) doesn't
 always fetch modified geometry
Message-ID: <CADP_rvuXXuFHBB08QEgLgkY+KKQUwki8CcB37-eOSBM_5gDCpg@mail.gmail.com>

Hi all,

Noticed some strange behaviour in QGIS' Python API the other day.
I needed to get a subset of points from a memory layer of point features,
and had previously done so by calling getFeatures(), and then filtering
this iterable in Python. I thought I could speed it up by using a filter
expression directly to let c++ do the filtering instead, but was surprised
to see that now the geometry wasn't up to date with the memory layer's edit
buffer.

I've replicated the behaviour it in a small script here:

from qgis.core import QgsVectorLayer, QgsField, QgsGeometry, QgsPointXY,
QgsFeature
from PyQt5.QtCore import QVariant

layer = QgsVectorLayer("Point", "test", "memory")
pr = layer.dataProvider()
pr.addAttributes([QgsField("name", QVariant.String)])
layer.updateFields()

initialGeom = QgsGeometry.fromPointXY(QgsPointXY(0, 0))
f = QgsFeature()
f.setGeometry(initialGeom)
f.setAttributes(["Tom"])
added, (f,) = layer.dataProvider().addFeatures([f])

layer.startEditing()
editedGeom = QgsGeometry.fromPointXY(QgsPointXY(1, 1))
layer.changeGeometry(f.id(), editedGeom)
layer.changeAttributeValues(f.id(), {0: "Harry"})

for f in layer.getFeatures():
    print(f.id(), f.attributes(), f.geometry())

for f in layer.getFeatures("name = 'Harry'"):
    print(f.id(), f.attributes(), f.geometry())

# >>> Prints different results!

This only seems to happen with both calls to changeGeometry and
changeAttributeValues.
Is there some way of getting around this? Would it be classified as a bug
in the API?

Cheers,
Erik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211211/faa0084b/attachment.html>

From ujaval at spatialthoughts.com  Sat Dec 11 23:07:11 2021
From: ujaval at spatialthoughts.com (Ujaval Gandhi)
Date: Sun, 12 Dec 2021 12:37:11 +0530
Subject: [QGIS-Developer] pyqgis getFeatures(<FilterExpression>) doesn't
 always fetch modified geometry
In-Reply-To: <CADP_rvuXXuFHBB08QEgLgkY+KKQUwki8CcB37-eOSBM_5gDCpg@mail.gmail.com>
References: <CADP_rvuXXuFHBB08QEgLgkY+KKQUwki8CcB37-eOSBM_5gDCpg@mail.gmail.com>
Message-ID: <CALymcQAkS1FegH+TsqZT1aaRwQyYP2uBRjSf-O8pf7f93NOG1A@mail.gmail.com>

Try calling layer.commitChanges() after changing the geometry.
[image: Logo] <https://spatialthoughts.com/>
Ujaval Gandhi
Spatial Thoughts
mobile: +91-8095684687
email: ujaval at spatialthoughts.com
[image: LinkedIn icon] <https://www.linkedin.com/in/spatialthoughts/>  [image:
Twitter icon] <https://twitter.com/spatialthoughts>



On Sat, Dec 11, 2021 at 6:55 PM Erik Polzin <eriktpol at gmail.com> wrote:

> Hi all,
>
> Noticed some strange behaviour in QGIS' Python API the other day.
> I needed to get a subset of points from a memory layer of point features,
> and had previously done so by calling getFeatures(), and then filtering
> this iterable in Python. I thought I could speed it up by using a filter
> expression directly to let c++ do the filtering instead, but was surprised
> to see that now the geometry wasn't up to date with the memory layer's edit
> buffer.
>
> I've replicated the behaviour it in a small script here:
>
> from qgis.core import QgsVectorLayer, QgsField, QgsGeometry, QgsPointXY,
> QgsFeature
> from PyQt5.QtCore import QVariant
>
> layer = QgsVectorLayer("Point", "test", "memory")
> pr = layer.dataProvider()
> pr.addAttributes([QgsField("name", QVariant.String)])
> layer.updateFields()
>
> initialGeom = QgsGeometry.fromPointXY(QgsPointXY(0, 0))
> f = QgsFeature()
> f.setGeometry(initialGeom)
> f.setAttributes(["Tom"])
> added, (f,) = layer.dataProvider().addFeatures([f])
>
> layer.startEditing()
> editedGeom = QgsGeometry.fromPointXY(QgsPointXY(1, 1))
> layer.changeGeometry(f.id(), editedGeom)
> layer.changeAttributeValues(f.id(), {0: "Harry"})
>
> for f in layer.getFeatures():
>     print(f.id(), f.attributes(), f.geometry())
>
> for f in layer.getFeatures("name = 'Harry'"):
>     print(f.id(), f.attributes(), f.geometry())
>
> # >>> Prints different results!
>
> This only seems to happen with both calls to changeGeometry and
> changeAttributeValues.
> Is there some way of getting around this? Would it be classified as a bug
> in the API?
>
> Cheers,
> Erik
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211212/72789831/attachment.html>

From matthias at opengis.ch  Sat Dec 11 23:23:51 2021
From: matthias at opengis.ch (Matthias Kuhn)
Date: Sun, 12 Dec 2021 08:23:51 +0100
Subject: [QGIS-Developer] pyqgis getFeatures(<FilterExpression>) doesn't
 always fetch modified geometry
In-Reply-To: <CALymcQAkS1FegH+TsqZT1aaRwQyYP2uBRjSf-O8pf7f93NOG1A@mail.gmail.com>
References: <CADP_rvuXXuFHBB08QEgLgkY+KKQUwki8CcB37-eOSBM_5gDCpg@mail.gmail.com>
 <CALymcQAkS1FegH+TsqZT1aaRwQyYP2uBRjSf-O8pf7f93NOG1A@mail.gmail.com>
Message-ID: <CAC7zN94GT37ZdEj=1b63hUAYgQT2x_ryB28Q_ZpDT8j2AeH7PQ@mail.gmail.com>

Hi

I could replicate it here and can confirm it is a bug and commitChanges() a
functional band aid for scripts.

Can you open an issue on github including this testcase?

Thanks
Matthias

On Sun, Dec 12, 2021 at 8:07 AM Ujaval Gandhi <ujaval at spatialthoughts.com>
wrote:

> Try calling layer.commitChanges() after changing the geometry.
> [image: Logo] <https://spatialthoughts.com/>
> Ujaval Gandhi
> Spatial Thoughts
> mobile: +91-8095684687
> email: ujaval at spatialthoughts.com
> [image: LinkedIn icon] <https://www.linkedin.com/in/spatialthoughts/>  [image:
> Twitter icon] <https://twitter.com/spatialthoughts>
>
>
>
> On Sat, Dec 11, 2021 at 6:55 PM Erik Polzin <eriktpol at gmail.com> wrote:
>
>> Hi all,
>>
>> Noticed some strange behaviour in QGIS' Python API the other day.
>> I needed to get a subset of points from a memory layer of point features,
>> and had previously done so by calling getFeatures(), and then filtering
>> this iterable in Python. I thought I could speed it up by using a filter
>> expression directly to let c++ do the filtering instead, but was surprised
>> to see that now the geometry wasn't up to date with the memory layer's edit
>> buffer.
>>
>> I've replicated the behaviour it in a small script here:
>>
>> from qgis.core import QgsVectorLayer, QgsField, QgsGeometry, QgsPointXY,
>> QgsFeature
>> from PyQt5.QtCore import QVariant
>>
>> layer = QgsVectorLayer("Point", "test", "memory")
>> pr = layer.dataProvider()
>> pr.addAttributes([QgsField("name", QVariant.String)])
>> layer.updateFields()
>>
>> initialGeom = QgsGeometry.fromPointXY(QgsPointXY(0, 0))
>> f = QgsFeature()
>> f.setGeometry(initialGeom)
>> f.setAttributes(["Tom"])
>> added, (f,) = layer.dataProvider().addFeatures([f])
>>
>> layer.startEditing()
>> editedGeom = QgsGeometry.fromPointXY(QgsPointXY(1, 1))
>> layer.changeGeometry(f.id(), editedGeom)
>> layer.changeAttributeValues(f.id(), {0: "Harry"})
>>
>> for f in layer.getFeatures():
>>     print(f.id(), f.attributes(), f.geometry())
>>
>> for f in layer.getFeatures("name = 'Harry'"):
>>     print(f.id(), f.attributes(), f.geometry())
>>
>> # >>> Prints different results!
>>
>> This only seems to happen with both calls to changeGeometry and
>> changeAttributeValues.
>> Is there some way of getting around this? Would it be classified as a bug
>> in the API?
>>
>> Cheers,
>> Erik
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211212/4a3a0244/attachment.html>

From nyall.dawson at gmail.com  Sun Dec 12 14:33:24 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 13 Dec 2021 08:33:24 +1000
Subject: [QGIS-Developer] pyqgis getFeatures(<FilterExpression>) doesn't
 always fetch modified geometry
In-Reply-To: <CADP_rvuXXuFHBB08QEgLgkY+KKQUwki8CcB37-eOSBM_5gDCpg@mail.gmail.com>
References: <CADP_rvuXXuFHBB08QEgLgkY+KKQUwki8CcB37-eOSBM_5gDCpg@mail.gmail.com>
Message-ID: <CAB28AsiOJxgeh6yJs3G-iv8CV+X-JyW34ooF=syUNbi7SFp2mg@mail.gmail.com>

On Sat, 11 Dec 2021 at 23:25, Erik Polzin <eriktpol at gmail.com> wrote:
>
> Hi all,
>
> Noticed some strange behaviour in QGIS' Python API the other day.
> I needed to get a subset of points from a memory layer of point features, and had previously done so by calling getFeatures(), and then filtering this iterable in Python. I thought I could speed it up by using a filter expression directly to let c++ do the filtering instead, but was surprised to see that now the geometry wasn't up to date with the memory layer's edit buffer.
>
> I've replicated the behaviour it in a small script here:
>
> from qgis.core import QgsVectorLayer, QgsField, QgsGeometry, QgsPointXY, QgsFeature
> from PyQt5.QtCore import QVariant
>
> layer = QgsVectorLayer("Point", "test", "memory")
> pr = layer.dataProvider()
> pr.addAttributes([QgsField("name", QVariant.String)])
> layer.updateFields()
>
> initialGeom = QgsGeometry.fromPointXY(QgsPointXY(0, 0))
> f = QgsFeature()
> f.setGeometry(initialGeom)
> f.setAttributes(["Tom"])
> added, (f,) = layer.dataProvider().addFeatures([f])
>
> layer.startEditing()
> editedGeom = QgsGeometry.fromPointXY(QgsPointXY(1, 1))
> layer.changeGeometry(f.id(), editedGeom)
> layer.changeAttributeValues(f.id(), {0: "Harry"})
>
> for f in layer.getFeatures():
>     print(f.id(), f.attributes(), f.geometry())
>
> for f in layer.getFeatures("name = 'Harry'"):
>     print(f.id(), f.attributes(), f.geometry())
>
> # >>> Prints different results!
>
> This only seems to happen with both calls to changeGeometry and changeAttributeValues.
> Is there some way of getting around this? Would it be classified as a bug in the API?

Thanks for the detailed write up! A fix has been submitted here:
https://github.com/qgis/QGIS/pull/46449

Nyall

From rnathreddy at sanasw.com  Sun Dec 12 17:31:21 2021
From: rnathreddy at sanasw.com (rnathreddy at sanasw.com)
Date: Mon, 13 Dec 2021 07:01:21 +0530
Subject: [QGIS-Developer] QGIS (release-3_22) compilation
Message-ID: <001301d7efc1$246b7e30$6d427a90$@sanasw.com>

Hi,

 

Trying to compile the qgis (release-3_22 branch) with MSVC 2015 on Windows
10 (64 bit version). 

 

When I run the configonly.bat file I am getting the following errors:

 

E:\QGIS\ms-windows\osgeo4w\build-qgis-test-x86_64\CMakeFiles\CMakeTmp\src.cx
x(1): error C2065: '__deprecated__': undeclared identifier
[E:\QGIS\ms-windows\osgeo4w\build-qgis-test-x86_64\CMakeFiles\CMakeTmp\cmTC_
7bce4.vcxproj]

E:\QGIS\ms-windows\osgeo4w\build-qgis-test-x86_64\CMakeFiles\CMakeTmp\src.cx
x(1): error C4430: missing type specifier - int assumed. Note: C++ does not
support default-int
[E:\QGIS\ms-windows\osgeo4w\build-qgis-test-x86_64\CMakeFiles\CMakeTmp\cmTC_
7bce4.vcxproj]

E:\QGIS\ms-windows\osgeo4w\build-qgis-test-x86_64\CMakeFiles\CMakeTmp\src.cx
x(1): error C2448: '__attribute__': function-style initializer appears to be
a function definition
[E:\QGIS\ms-windows\osgeo4w\build-qgis-test-x86_64\CMakeFiles\CMakeTmp\cmTC_
7bce4.vcxproj]

Done Building Project
"E:\QGIS\ms-windows\osgeo4w\build-qgis-test-x86_64\CMakeFiles\CMakeTmp\cmTC_
7bce4.vcxproj" (default targets) -- FAILED.

 

The CMake error log is also attached.

 

Can anyone help me in this regard?

 

Regards

Raghunath

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211213/3376f0de/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: CMakeError.log
Type: application/octet-stream
Size: 7435 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211213/3376f0de/attachment.obj>

From rnathreddy at sanasw.com  Tue Dec 14 03:03:36 2021
From: rnathreddy at sanasw.com (rnathreddy at sanasw.com)
Date: Tue, 14 Dec 2021 16:33:36 +0530
Subject: [QGIS-Developer] Rendering simple 3D lines
In-Reply-To: <e70857d55515a8219578d6d725d0fd13@sanasw.com>
References: <390fa0841eb072f36d0917a261fe2efd@sanasw.com>
 <CAB28AsiPmETKhfhG2b3CwzLUsAm3c5pq594846pVwRphfcz79g@mail.gmail.com>
 <e70857d55515a8219578d6d725d0fd13@sanasw.com>
Message-ID: <000101d7f0da$400bc950$c0235bf0$@sanasw.com>

Dear Nyall,

Hope you are doing well. 

We could not see the symbols in 3D View when we symbolize (3D View) the
point layer in QGIS 3.16 version.

The following properties for the point layer are given:

     3D View => Single Symbol
		Shape => Sphere
		Radius => 50.0
		Amplitude clamping => Absolute

The same is working fine in QGIS 3.20 and 3.22.    

Can you please help us in this regard?

Regards
Raghunath

-----Original Message-----
From: rnathreddy at sanasw.com [mailto:rnathreddy at sanasw.com] 
Sent: 08 September 2021 09:39
To: Nyall Dawson
Cc: qgis-developer
Subject: Re: [QGIS-Developer] Rendering simple 3D lines

Dear Nyall,

Thank you very much for your help. I was struggling from the past couple of
days to resolve this issue.

As you said I missed out calling Qgs3D::Initialize () and
Qgs3DAppUtils::initialize()  at the startup.

Now it is working.

Regards
Raghunath

On 2021-09-07 20:41, Nyall Dawson wrote:
> On Wed, 8 Sept 2021 at 13:27, <rnathreddy at sanasw.com> wrote:
>> 
>> Hi,
>> 
>> We are developing a simple 3D viewer to display the DEM and overlay a 
>> trajectory (vector layer) as a simple 3d lines. It is working fine 
>> and vector file is draped on to the terrain. We want to display the 
>> vector file as simple 3d lines.
>> 
>> We could see the same in QGIS application by setting the Vector Layer 
>> properties 3D View => Render as simple 3D lines.
>> 
>> Trying to set same programmatically, but getting the following error.
>> 
>>     " ..\..\..\src\3d\qgsvectorlayerchunkloader_p.cpp(57) :
>>       (QgsVectorLayerChunkLoader::QgsVectorLayerChunkLoader) 
>> [15960ms] Unknown
>>           3D symbol type for vector layer: line  "
> 
> Possibly you are missing a call to Qgs3D::initialize() somewhere in 
> your application startup.
> 
> Nyall
> 
>> 
>> The following code snippet used:
>> 
>> if (pcLyr != nullptr) {
>> 
>>    std::unique_ptr< QgsLine3DSymbol > sym = qgis::make_unique< 
>> QgsLine3DSymbol >();
>>    std::unique_ptr< QgsPhongMaterialSettings > mCurrentSettings;
>> 
>>    mCurrentSettings = qgis::make_unique< QgsPhongMaterialSettings 
>> >();
>> 
>>    sym->setWidth (1);
>>    sym->setHeight (0);
>>    sym->setExtrusionHeight(0);
>>    sym->setAltitudeClamping(Qgs3DTypes::AltClampAbsolute);
>>    sym->setAltitudeBinding(Qgs3DTypes::AltBindVertex);
>>    sym->setRenderAsSimpleLines(true);
>>    sym->setMaterial(mCurrentSettings->clone());
>> 
>>    QgsVectorLayer3DRenderer *pcR = new QgsVectorLayer3DRenderer 
>> (sym->clone());
>>    pcLyr->setRenderer3D(pcR);
>> }
>> 
>> 
>> Can any one help us in this regard?
>> 
>> Regards
>> Raghunath
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer


From olivier.dalang at gmail.com  Tue Dec 14 05:48:46 2021
From: olivier.dalang at gmail.com (Olivier Dalang)
Date: Tue, 14 Dec 2021 14:48:46 +0100
Subject: [QGIS-Developer] Issue with future 3.22 LTR ? (a.k.a missing
 backports to 3.22)
In-Reply-To: <CAMtDFL+rGyh+g9_D8KskQnD4Yv3uKw7cu2vb4cw=_wEkw=TFZQ@mail.gmail.com>
References: <CAExk7p3_w45m=1DVU2iF7fS0L6seAAtRv6M+rtz8+7cz7PZVfQ@mail.gmail.com>
 <CAECJsSrKHDLhJonV8im71x--CVYroTzUK-Cb2yW+hdxvmt3egA@mail.gmail.com>
 <CAMtDFL+rGyh+g9_D8KskQnD4Yv3uKw7cu2vb4cw=_wEkw=TFZQ@mail.gmail.com>
Message-ID: <CAExk7p2BKkm7vv13NEOnX0WBfEjumEMn52U71WY+uuRzoB5HHg@mail.gmail.com>

Ok, well that's reassuring :-)

Thanks for the clarifications !

Cheers,

Olivier

Le ven. 10 d?c. 2021 ? 09:09, Etienne Trimaille <etienne.trimaille at gmail.com>
a ?crit :

> As Harissou said, the PR was created before the 3.22 branch, so the label
> "backport release-3_32" was not created at that time.
>
> Le jeu. 9 d?c. 2021 ? 15:54, DelazJ <delazj at gmail.com> a ?crit :
>
>> Hi Olivier,
>>
>> Yes, backporting to 3.16 implies backport to 3.22. And I think the PR you
>> point here is more about forgetting. The PR itself is opened during 3.22.0
>> dev cycle and merged few days after release, so easier to forget to add the
>> label.
>> And the list of missing PRs should actually be
>> https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22+merged%3A%3E2021-10-21
>> since anything merged before 22/10/2021 is automatically in 3.22. Finally,
>> there's no that much leftover PRs, so I think everybody is OK with your
>> logic.
>>
>> Regards,
>> Harrissou
>>
>> Le jeu. 9 d?c. 2021 ? 15:29, Olivier Dalang <olivier.dalang at gmail.com> a
>> ?crit :
>>
>>> Hi all !
>>>
>>> There's something I don't completely understand with the current
>>> branches/releases process and which to me looks like a major issue (came
>>> across it while checking the status of a recently merged bugfix PR#45521
>>> <https://github.com/qgis/QGIS/pull/45521>).
>>>
>>> That fix was merged to master with the `backport queued_ltr_backports`
>>> label, but without `backport release-3_22`.
>>>
>>> As far as I understand, this means it will be available in 3.24 (master)
>>> and in 3.16 (after some quarantine), but not in 3.22. Still if I understand
>>> correctly, 3.22 is our future LTR, meaning that LTR users will at some
>>> point upgrade from 3.16 to 3.22. Does that mean that the bug they have seen
>>> fixed in 3.16 will be reintroduced in 3.22 ?
>>>
>>> The following filter shows many other PRs backported to 3.16 but not
>>> 3.22 :
>>> is:pr label:"backport queued_ltr_backports" -label:"backport
>>> release-3_22"
>>> <https://github.com/qgis/QGIS/pulls?q=is%3Apr+label%3A%22backport+queued_ltr_backports%22+-label%3A%22backport+release-3_22%22> (same
>>> search should also be done with label `backport release-3_16`)
>>>
>>> Shouldn't backporting to 3.16 always imply backporting to 3.22 ? Or am I
>>> missing something ?
>>>
>>> Cheers !
>>>
>>> Olivier
>>> _______________________________________________
>>> QGIS-Developer mailing list
>>> QGIS-Developer at lists.osgeo.org
>>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>>
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211214/edaa1638/attachment.html>

From djes1975 at gmail.com  Fri Dec 17 05:43:42 2021
From: djes1975 at gmail.com (=?UTF-8?Q?J=C3=A9sahel_Benoist?=)
Date: Fri, 17 Dec 2021 14:43:42 +0100
Subject: [QGIS-Developer] Quick note about listStylesInDatabase(),
 default style and primary key
Message-ID: <CAOSu6ZGWn7kHkQc7KkybpToK9B750ai91Lo=ZchoeE+inSgLjw@mail.gmail.com>

Hi,

First, configuration :
QGIS 3.16.4 on Windows 10
Database : SQL Server 11

For a long time I have had problems with Python and retrieving default
style in the database.

I digged around and found that our layer style definition in the
[layer_styles] table was:
---
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[layer_styles](
    [qgs_fid] [int] IDENTITY(1,1) NOT NULL,
    [id] [int] NULL,
    [f_table_catalog] [nvarchar](max) NULL,
    [f_table_schema] [nvarchar](max) NULL,
    [f_table_name] [nvarchar](max) NULL,
    [f_geometry_column] [nvarchar](max) NULL,
    [styleName] [nvarchar](max) NULL,
    [styleQML] [nvarchar](max) NULL,
    [styleSLD] [nvarchar](max) NULL,
    [useAsDefault] [int] NULL,
    [description] [nvarchar](max) NULL,
    [owner] [nvarchar](max) NULL,
    [ui] [nvarchar](max) NULL,
    [update_time] [datetime] NULL,
 CONSTRAINT [PK_layer_styles] PRIMARY KEY CLUSTERED
(
    [qgs_fid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
---

As you can see, the primary key is [qgis_fid].

I've looked in QGIS source code and listStylesInDatabase() and
other functions need the primary key to be [id]... I have no idea where
this [qgis_fid] is coming from, maybe some past import/export.

This issue creates several problems :
- Saving default style creates a new record each time instead of replacing
the default one.
- listStylesInDatabase() returns a list without any clue about the default
style (the first being not the good one as all id == null ). And there
isn't a way to know what is the default style (this function lacks a
default list).

So instead of hanging around in python with the table, I prefered to modify
the table so that the primary key be [id]. I hope there won't be glitches
coming from this but it seems to work.

If it could help,

J?sahel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211217/14bc37c1/attachment.html>

From phidrho at gmail.com  Tue Dec 21 23:34:53 2021
From: phidrho at gmail.com (=?UTF-8?Q?Vedran_Stojnovi=C4=87?=)
Date: Wed, 22 Dec 2021 08:34:53 +0100
Subject: [QGIS-Developer] Empty "Vector toolbar" on default profile after
 installing QGIS and some other UI proposals
In-Reply-To: <CAL9iSMGjgcVvtRLwBJM71nMKHoL2u=9jjv=DRdrOzSMe02R5Rw@mail.gmail.com>
References: <CAL9iSMGjgcVvtRLwBJM71nMKHoL2u=9jjv=DRdrOzSMe02R5Rw@mail.gmail.com>
Message-ID: <CAL9iSMGPnqGB=fUOGkVHJAeAXrh_b=GFzbxs3YYNaMz2+DBR7Q@mail.gmail.com>

Hi,

it's been for several versions, maybe until the 3.0 release, after
installing QGIS we get an empty "Vector toolbar" enabled by default.
I think it's not good for user experience, especially for new users.
Vector toolbar is used by two core plugins that come with QGIS
installation: "Topology Checker" and "GPS Tools" and both of them are
disabled by default resulting empty toolbar.

There are a few possible fixes to this situation:
1) disable vector toolbar in the default profile (simplest quick fix)
2) enable one or both core plugins in the default profile which use the
toolbar
3) create two new toolbars (Topology toolbar and GPS toolbar) for those two
core plugins, each of them having more tools exposed (currently either of
them has only one tool on vector toolbar) and delete "vector toolbar" or
maybe better: assign (move them from digitizing toolbar) modifying/editing
tools (the ones that don't create features) to "vector toolbar" for
example: move feature, copy and move feature, rotate feature, simplify
feature...

I would also suggest splitting up the Edit menu into two different menus:
Edit and Create/Digitize. The reason for this is that currently, the edit
menu is a very big list of options. I have an older laptop (with a 1600x900
screen) and it fills the entire screen from top to bottom, so I think it
would be a nice solution to split it into two menus. The "Create" or
"Digitize" menu could implement tools for the creation of features and the
"Edit" menu can keep modifying tools.

One more thing that's on my mind - it would be really nice if a list of
Panels and Toolbars (on right-click - screenshot below) is ordered
alphabetically for the whole list, and it also could be a drop-down menu so
it's easier to look for a specific option.
[image: qgis_menu.jpg]

I think that these changes would improve the user experience.

--
Kind regards,
Vedran Stojnovi?.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211222/a1453400/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: qgis_menu.jpg
Type: image/jpeg
Size: 55777 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211222/a1453400/attachment-0001.jpg>

From alroyliz0 at gmail.com  Thu Dec 23 10:20:10 2021
From: alroyliz0 at gmail.com (Alexis R.L.)
Date: Thu, 23 Dec 2021 13:20:10 -0500
Subject: [QGIS-Developer] Solving GCC error Qunused-arguments
Message-ID: <CAOM0XWDu-9GjDu=9UEeC7kkgm7peaJjivVHoXVvdue=Ph6twSg@mail.gmail.com>

Greetings Everyone,

I would like to know if anyone had the following error:
gcc: error: unrecognized command line option '-Qunused-arguments'
And how to solve it.

I'm using QtCreator 4.14 in a fresh Lubuntu install to Impish.

I noticed that hose flags should be defined in the cmakefile but somehow
this error occurs when dealing with the NMEA files.

I am unsure about the inner working of the cmakefiles and the compiling
step, I tried using gcc and clang as my c and c++ compilers and with clang
13 for the two but that didn't solve it.

Is it just a matter of reordering the steps, modifying the name files or
doing something else to sort this out?

Thanks and have nice holidays/saturnalia.

Alex
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211223/4cd33d31/attachment.html>

From ajokerst at UFCIC.COM  Thu Dec 23 12:44:07 2021
From: ajokerst at UFCIC.COM (Alex Jokerst)
Date: Thu, 23 Dec 2021 20:44:07 +0000
Subject: [QGIS-Developer] Possible Bug? Error
Message-ID: <SN4PR22MB32377B8CBD7D882E6AEC9B37D07E9@SN4PR22MB3237.namprd22.prod.outlook.com>

Hi there,

I am unable to access Arcgis layer due to error 499 on connection. This seems to indicate that there is a token problem but I did use the correct token. Any ideas?

--Alex J


The Information contained in this message is privileged and confidential. It is intended only to be read by the individual or entity to whom it is addressed or their designee. Unless you are the named addressee or an authorized designee, you may not copy or use it, or disclose it to anyone else. If the reader of this message is not the intended recipient, you are on notice that any distribution of this message, in any form, is strictly prohibited. If you receive this message in error, please immediately notify the sender, and delete or destroy any copy of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211223/c00f0847/attachment.html>

From delazj at gmail.com  Mon Dec 27 21:41:35 2021
From: delazj at gmail.com (Delaz J)
Date: Tue, 28 Dec 2021 06:41:35 +0100
Subject: [QGIS-Developer] Call for pull requests review in documentation
Message-ID: <06d4b92d-7624-df28-3141-72eb77a1a922@gmail.com>

Hi QGIS contributors,

May I request your review for a number of pull requests in the 
documentation repository?
Most of them are almost ready; they "simply" have a couple of 
sentences/options that I am not able to fully confirm their 
correctness/goals (and don't want the docs mislead people). For 
convenience, the questions are added in the PR as a comment. You'll find 
the pull requests at
https://github.com/qgis/QGIS-Documentation/pulls?q=is%3Apr+is%3Aopen+label%3Areview_requested 
<https://github.com/qgis/QGIS-Documentation/pulls?q=is%3Apr+is%3Aopen+label%3Areview_requested> 


They cover categories like Processing, GPS, mesh, tile vector, server, 
temporal, pyqgis, security... so I hope you will find something your 
review would be welcome at.

The above PRs are imho priorities/blocked ones (getting stale) but if 
you feel like doing more, there are many other PRs you can help move 
forward. Having your help would help us close a good number of issues 
and initiate the 3.22 release process in a better shape.

Thanks in advance for your contributions.

Harrissou Sant-anna


From prem.netgis at gmail.com  Thu Dec 30 05:46:41 2021
From: prem.netgis at gmail.com (Prem Kumar)
Date: Thu, 30 Dec 2021 19:16:41 +0530
Subject: [QGIS-Developer] Reusing network graph
Message-ID: <CAP2_p600CpiF=eJfRsCKby7yB1siX4vW7faWbCKSrROtB9cLUg@mail.gmail.com>

Hi Team,

I have been trying to get the shortest path for a lot of pairs of start and
end points for a given road layer. Although I'm able to achieve this by
creating the *QgsVectorLayerDirector *and Graph object for every pair of
start and end points.

However, I could not reuse the graph object or director object for all the
pairs of start and end points, eventually the code is as slow as executing
the* 'native:shortestpathpointtopoint'* processing tool
programmatically for each pair of start and end points.

Essentially, I'm trying to improve the performance by reusing the graph
objects. Can someone help me whether there is a possibility to reuse the
graph object for large sets of pairs? Here is the code snippet I have used.

vectorLayer = QgsVectorLayer('testdata/network.gpkg|layername=network_lines',
'lines')director = QgsVectorLayerDirector(vectorLayer, -1, '', '', '',
QgsVectorLayerDirector.DirectionBoth)strategy =
QgsNetworkDistanceStrategy()director.addStrategy(strategy)builder =
QgsGraphBuilder(vectorLayer.sourceCrs())startPoint =
QgsPointXY(1179661.925139,5419188.074362)endPoint =
QgsPointXY(1180942.970617,5420040.097560)tiedPoints =
director.makeGraph(builder, [startPoint, endPoint])tStart, tStop =
tiedPointsgraph = builder.graph()idxStart =
graph.findVertex(tStart)idxEnd = graph.findVertex(tStop)(tree, costs)
= QgsGraphAnalyzer.dijkstra(graph, idxStart, 0)

-Prem
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211230/acf709c0/attachment.html>

From felix.vons at gmail.com  Fri Dec 31 05:45:12 2021
From: felix.vons at gmail.com (flatoram)
Date: Fri, 31 Dec 2021 14:45:12 +0100
Subject: [QGIS-Developer] Reusing network graph
In-Reply-To: <mailman.35.1640894402.21945.qgis-developer@lists.osgeo.org>
References: <mailman.35.1640894402.21945.qgis-developer@lists.osgeo.org>
Message-ID: <CAEs0QJYUGnBvgPJ3ssFFWmBsYpdZQ4qaDkeZDwA806ZsVuNmxQ@mail.gmail.com>

Hi Prem,

I experienced those performance issues too.
When i process a lot of routing operations between points I will define an
routing area first on the source network layer (e.g. osm_lines).
I create a tempory layer sometimes in this way with pyqgis:

# define bounding box and make it a big larger (just an example)
rectangle = QgsRectangle(point_0, point_1)
rectangle = rectangle.scaled(2)   # depends on your use case

# build request
request = QgsFeatureRequest().setFilterRect(rectangle)
# request = request.setNoAttributes()  # when you do not need any attributes
# request = request.setSubsetOfAttributes(["speed"], layer.fields())  # use
only some fields
# add conditions to request to use only features you need, e.g. ignore
specific street types
new_layer = layer.materialize(request)  # create a memory copy of source
layer

In my use cases the new_layer is definitive smaller and more perfomant than
the main layer for those operations. Use the new layer for routing. But
maybe you have not the full available path in your new layer, when your
bbox was to small.

An other possibility for path finding is QgsTracer class, but it is
different to classic dijsktra/shortestpath when dealing with vertices or
line intersections

# use qgis tracer, but it is a bit different from classic dijkstra
tracer = QgsTracer()
tracer.setLayers([network_layer])
# maybe you have to define the destinationCrs
poly_line = tracer.findShortestPath(start_point, end_point)[0]


Depends on the use cases I saved a lot of calculation time.

- Felix

Am Do., 30. Dez. 2021 um 21:01 Uhr schrieb <
qgis-developer-request at lists.osgeo.org>:

> Send QGIS-Developer mailing list submissions to
>         qgis-developer at lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         https://lists.osgeo.org/mailman/listinfo/qgis-developer
> or, via email, send a message with subject or body 'help' to
>         qgis-developer-request at lists.osgeo.org
>
> You can reach the person managing the list at
>         qgis-developer-owner at lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of QGIS-Developer digest..."
>
>
> Today's Topics:
>
>    1. Reusing network graph (Prem Kumar)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Thu, 30 Dec 2021 19:16:41 +0530
> From: Prem Kumar <prem.netgis at gmail.com>
> To: qgis-developer <qgis-developer at lists.osgeo.org>
> Subject: [QGIS-Developer] Reusing network graph
> Message-ID:
>         <CAP2_p600CpiF=
> eJfRsCKby7yB1siX4vW7faWbCKSrROtB9cLUg at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> Hi Team,
>
> I have been trying to get the shortest path for a lot of pairs of start and
> end points for a given road layer. Although I'm able to achieve this by
> creating the *QgsVectorLayerDirector *and Graph object for every pair of
> start and end points.
>
> However, I could not reuse the graph object or director object for all the
> pairs of start and end points, eventually the code is as slow as executing
> the* 'native:shortestpathpointtopoint'* processing tool
> programmatically for each pair of start and end points.
>
> Essentially, I'm trying to improve the performance by reusing the graph
> objects. Can someone help me whether there is a possibility to reuse the
> graph object for large sets of pairs? Here is the code snippet I have used.
>
> vectorLayer =
> QgsVectorLayer('testdata/network.gpkg|layername=network_lines',
> 'lines')director = QgsVectorLayerDirector(vectorLayer, -1, '', '', '',
> QgsVectorLayerDirector.DirectionBoth)strategy =
> QgsNetworkDistanceStrategy()director.addStrategy(strategy)builder =
> QgsGraphBuilder(vectorLayer.sourceCrs())startPoint =
> QgsPointXY(1179661.925139,5419188.074362)endPoint =
> QgsPointXY(1180942.970617,5420040.097560)tiedPoints =
> director.makeGraph(builder, [startPoint, endPoint])tStart, tStop =
> tiedPointsgraph = builder.graph()idxStart =
> graph.findVertex(tStart)idxEnd = graph.findVertex(tStop)(tree, costs)
> = QgsGraphAnalyzer.dijkstra(graph, idxStart, 0)
>
> -Prem
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: <
> http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211230/acf709c0/attachment-0001.html
> >
>
> ------------------------------
>
> Subject: Digest Footer
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
>
> ------------------------------
>
> End of QGIS-Developer Digest, Vol 194, Issue 18
> ***********************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20211231/749136ee/attachment.html>

