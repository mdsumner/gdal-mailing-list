From nicolas.godet at outlook.fr  Wed Sep  1 03:40:20 2021
From: nicolas.godet at outlook.fr (Nicolas Godet)
Date: Wed, 1 Sep 2021 10:40:20 +0000
Subject: [QGIS-Developer] Seeking for a plugin approval
Message-ID: <PA4P190MB1166D3EE45FA2BBA2D38DE858FCD9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>

Dear devs,

Could someone from the approval team could take a look at https://plugins.qgis.org/plugins/profiletool/ ?

It fix a major issue for those who still are on < Qt 5.12 (like old windows installer).
Latest PyQtGraph (> 0.12.x) update is no more compatible with < Qt 5.12.

Great regards,
Nicolas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210901/99eba85c/attachment.html>

From nicolas.godet at outlook.fr  Wed Sep  1 03:59:55 2021
From: nicolas.godet at outlook.fr (Nicolas Godet)
Date: Wed, 1 Sep 2021 10:59:55 +0000
Subject: [QGIS-Developer] Seeking for a plugin approval
In-Reply-To: <PA4P190MB1166D3EE45FA2BBA2D38DE858FCD9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
References: <PA4P190MB1166D3EE45FA2BBA2D38DE858FCD9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>
Message-ID: <PA4P190MB1166C5BE54283DD53FAD4AAB8FCD9@PA4P190MB1166.EURP190.PROD.OUTLOOK.COM>

Thank you Gustry.

Le 1 sept. 2021 ? 12:40, Nicolas Godet <nicolas.godet at outlook.fr> a ?crit :

? Dear devs,

Could someone from the approval team could take a look at https://plugins.qgis.org/plugins/profiletool/ ?

It fix a major issue for those who still are on < Qt 5.12 (like old windows installer).
Latest PyQtGraph (> 0.12.x) update is no more compatible with < Qt 5.12.

Great regards,
Nicolas
_______________________________________________
QGIS-Developer mailing list
QGIS-Developer at lists.osgeo.org
List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210901/aa4dc364/attachment.html>

From nyall.dawson at gmail.com  Thu Sep  2 15:46:21 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 3 Sep 2021 08:46:21 +1000
Subject: [QGIS-Developer] How to handle upstream Qt fixes
Message-ID: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>

Hi PSC, devs,

I'd like to kick start some discussion on how best to handle the
situation with upstream Qt and their (lack of) support for Qt 5. As a
quick summary of the situation:

- Qt Co effectively ended open source support of Qt 5 at the 5.15.2
release, and have moved all focus to Qt 6.
- While some preliminary work has been done, QGIS doesn't currently
support Qt 6 based builds, and likely won't be ready for this for some
time (even completely ignoring all the stable API questions a Qt 6
build raises entirely!)
- QGIS often depends on fixes and enhancements which need to be made
upstream in Qt, and can't be resolved or worked-around in QGIS alone
- KDE and other open source projects forked Qt 5.15 at
https://invent.kde.org/qt/qt/qtbase/-/commits/dev/, and are actively
backporting fixes from Qt6 to that branch. Fedora recently started
using the KDE branch for Qt 5 library builds, so users of that
platform once again are getting bug fixes deployed [1]. I'm unaware if
other distributions or builds of Qt are using this currently.
- Similarly, there's a KDE fork of Qt 3d at
https://invent.kde.org/qt/qt/qt3d/-/commits/kde/5.15/

Right now, there's a number of very frustrating issues that Qt 5.15.2
has which impact our users. An example is #44876, which results in
very large PDF exports from QGIS with broken hairline line rendering
[2]. In the past QGIS has contracted KDAB as part of the QGIS bug
fixing efforts to directly fix issues which affect QGIS users
upstream, with good results. Unfortunately, given that we are stuck on
Qt 5.15.2 and upstream won't release any more 5.15.x versions, we
can't just do that same approach again to get fixes into Qt.

So I'd like to raise discussions about the best way we can handle this
situation as a downstream project.

My thoughts/questions:

- Are we free to change the Windows builds to use the KDE backports
fork of 5.15 instead of the official 5.15.2 releases? (Or does that
change lots of osgeo4w packaging things?). Similarly, are we free to
move the MacOS builds to the KDE branch too?
- Could we also move the Windows/MacOS builds of Qt 3d to use the KDE fork?
- Does anyone know if Debian have plans to migrate to the KDE
backports fork? (Last I heard, the debian Qt maintainers stepped down
and the package is currently lacking a maintainer!)
- If we can get the majority of our users onto builds which use the
KDE backports branch (i.e. Windows/mac users), could we re-start the
relationship with KDAB and contract them for bug fixes again for 3.22?
(with the arrangement explicitly requiring them to backport fixes to
Qt 5 via KDE's fork).

Nyall

[1] https://src.fedoraproject.org/rpms/qt5-qtbase/c/400d49b3925dc2852218289310674abd3950b4e0?branch=rawhide
[2] https://github.com/qgis/QGIS/issues/44876

From gdt at lexort.com  Thu Sep  2 16:27:37 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 02 Sep 2021 19:27:37 -0400
Subject: [QGIS-Developer] How to handle upstream Qt fixes
In-Reply-To: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 (Nyall Dawson's message of "Fri, 3 Sep 2021 08:46:21 +1000")
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
Message-ID: <rmi7dfylfrq.fsf@s1.lexort.com>


Nyall Dawson <nyall.dawson at gmail.com> writes:

> - Qt Co effectively ended open source support of Qt 5 at the 5.15.2
> release, and have moved all focus to Qt 6.
> - While some preliminary work has been done, QGIS doesn't currently
> support Qt 6 based builds, and likely won't be ready for this for some
> time (even completely ignoring all the stable API questions a Qt 6
> build raises entirely!)
> - QGIS often depends on fixes and enhancements which need to be made
> upstream in Qt, and can't be resolved or worked-around in QGIS alone
> - KDE and other open source projects forked Qt 5.15 at
> https://invent.kde.org/qt/qt/qtbase/-/commits/dev/, and are actively
> backporting fixes from Qt6 to that branch. Fedora recently started
> using the KDE branch for Qt 5 library builds, so users of that
> platform once again are getting bug fixes deployed [1]. I'm unaware if
> other distributions or builds of Qt are using this currently.
> - Similarly, there's a KDE fork of Qt 3d at
> https://invent.kde.org/qt/qt/qt3d/-/commits/kde/5.15/

I'm speaking as the maintainer of the qgis package in pkgsrc, a multi-OS
multi-CPU packaging system.  Currently this is 3.16.x, and it is built
against 5.15.2 (only).

I think you have posed semi-separable questions and it's good to
semi-separate them:

  - 1. should qgis target the KDE fork of QT, or 5.15.2, or both, as the
    library that is expected to be used, and tested in CI?

  - 2. when qgis.org produces binary builds, should qt-kde or qt be used?

  - 3. should qgis.org attempt to engage with KDAB to work on a fork of a
    branch discontinued by the original maintainers?

  - 4. Given what I see as concerning behavior by Qt Co in placing Free
    Software users in a bad spot, what should be the future approach to
    Qt?  Perhaps, it should be KDE Qt 5.15, and not Qt 6.)

and I think this is informed in large part by understanding the degree
to which the various packaging systems (a term that I use to include
GNU/Linux distributions) switch the KDE fork.  In my view where Debian
lands, if at all, is very influential.

I will inquire within pkgsrc about the KDE fork and intent to have our
Qt 5 packages track them.  I am guessing that it's meant to be just a
continuation of maintenance, for now, and thus quite compatible.

I think that (1) is the current primary question.  Choice (2) mostly
flows from the answer to (1), in that it's reasonable to target
5.15.2(release) but also test with 5.15.2.kde.x, and use .kde for
binaries on the theory that it has bugfixes.  It's also reasonable -- if
enough packaging systems move or provide the KDE fork -- to just say
that testing is only against that -- but qgis seems to support older Qt
anyway, and it would seem radical to demand a particular rev of 5.15 at
this point.

If (1) is decided in favor of the fork, then (3) seems reasonable.

(4) is a hard discussion that I think should be deferred a bit until we
see how the Free Software world's approach to Qt settles out.  It
reamains to be seen how that's going to go between extremes of being
content about the withdrawal of support and just moving to 6, and
deciding that qt's model wasn't such a good idea after all and that it's
best to use a truly Free fork or start to get away from it entirely.
Pretty obviously neither extreme is likely, but I have little confidence
in guesses about where we'll land.

Greg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210902/04b92eb0/attachment.sig>

From johannes.kroeger at wheregroup.com  Fri Sep  3 00:14:14 2021
From: johannes.kroeger at wheregroup.com (=?UTF-8?Q?Johannes_Kr=c3=b6ger_=28WhereGroup=29?=)
Date: Fri, 3 Sep 2021 09:14:14 +0200
Subject: [QGIS-Developer] Disabling map context menu via PyQGIS
Message-ID: <ad85c1b5-eb80-8c16-2672-276bd90799f5@wheregroup.com>

Hi list!

In QGIS 3.16 a right-click context menu was added to the map canvas: 
https://www.qgis.org/en/site/forusers/visualchangelog316/index.html#add-context-menu-to-map-canvas

How can we disable that via PyQGIS?

https://qgis.org/pyqgis/master/gui/QgsMapCanvas.html lists a 
"contextMenuEvent" method but does not provide any documentation at all.

The environment is a QGIS based standalone application.

Cheers, Hannes

-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_0xBF7B268A77C202D5.asc
Type: application/pgp-keys
Size: 2471 bytes
Desc: OpenPGP public key
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/09a96b41/attachment.key>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_signature
Type: application/pgp-signature
Size: 665 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/09a96b41/attachment.sig>

From nyall.dawson at gmail.com  Fri Sep  3 00:23:15 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 3 Sep 2021 17:23:15 +1000
Subject: [QGIS-Developer] Disabling map context menu via PyQGIS
In-Reply-To: <ad85c1b5-eb80-8c16-2672-276bd90799f5@wheregroup.com>
References: <ad85c1b5-eb80-8c16-2672-276bd90799f5@wheregroup.com>
Message-ID: <CAB28AsiNw9LYepQOqJ1Lx4m-eq5R1Shyx=wPg3mLV_uUeP-9-w@mail.gmail.com>

On Fri, 3 Sept 2021 at 17:14, Johannes Kr?ger (WhereGroup)
<johannes.kroeger at wheregroup.com> wrote:
>
> Hi list!
>
> In QGIS 3.16 a right-click context menu was added to the map canvas:
> https://www.qgis.org/en/site/forusers/visualchangelog316/index.html#add-context-menu-to-map-canvas
>
> How can we disable that via PyQGIS?
>
> https://qgis.org/pyqgis/master/gui/QgsMapCanvas.html lists a
> "contextMenuEvent" method but does not provide any documentation at all.
>
> The environment is a QGIS based standalone application.

Make sure your map tool doesn't return the QgsMapTool::ShowContextMenu
flag.  (Or subclass the inbuilt tool you are using and override its
flags() implementation)

Nyall

>
> Cheers, Hannes
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From benjamin.jakimow at geo.hu-berlin.de  Fri Sep  3 00:31:06 2021
From: benjamin.jakimow at geo.hu-berlin.de (Benjamin Jakimow)
Date: Fri, 3 Sep 2021 09:31:06 +0200
Subject: [QGIS-Developer] Disabling map context menu via PyQGIS
In-Reply-To: <ad85c1b5-eb80-8c16-2672-276bd90799f5@wheregroup.com>
References: <ad85c1b5-eb80-8c16-2672-276bd90799f5@wheregroup.com>
Message-ID: <336bbbf2-b16e-4831-4dfb-4f82085406a5@geo.hu-berlin.de>

Hi Hannes,

in C++ you could override
void QgsMapCanvas::showContextMenu( QgsMapMouseEvent *event )

which creates and shows the context menu.

in Python showContextMenu is not available. There you could re-implement
void QgsMapCanvas::mousePressEvent( QMouseEvent *e ) to avoid any calls 
of showContextMenu()

If you just like to modify the context menu, you might add a slot for the
void contextMenuAboutToShow( QMenu *menu, QgsMapMouseEvent *event ) 
signal that manipulates the menu.

Greetings,

Benjamin


So you might either override it or

to disable the context menu you can override QgsMapCanvas::mousePressEvent


Am 03/09/2021 um 09:14 schrieb Johannes Kr?ger (WhereGroup):

> Hi list!
>
> In QGIS 3.16 a right-click context menu was added to the map canvas: 
> https://www.qgis.org/en/site/forusers/visualchangelog316/index.html#add-context-menu-to-map-canvas
>
> How can we disable that via PyQGIS?
>
> https://qgis.org/pyqgis/master/gui/QgsMapCanvas.html lists a 
> "contextMenuEvent" method but does not provide any documentation at all.
>
> The environment is a QGIS based standalone application.
>
> Cheers, Hannes
>
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

-- 
Benjamin Jakimow, Doctoral Researcher
Earth Observation Lab | Geography Department | Humboldt-Universit?t zu Berlin

e-mail: benjamin.jakimow at geo.hu-berlin.de

phone:  +49 (0) 30 2093 6846
mobile: +49 (0) 157 5656 8477
fax:    +49 (0) 30 2093 6848
mail:   Unter den Linden 6 | 10099 Berlin | Germany
room: 2'211
web:    https://hu-berlin.de/eo-lab

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/c1648556/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 5422 bytes
Desc: S/MIME Cryptographic Signature
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/c1648556/attachment-0001.bin>

From benoit.ducarouge at oslandia.com  Fri Sep  3 00:58:20 2021
From: benoit.ducarouge at oslandia.com (Benoit Ducarouge)
Date: Fri, 3 Sep 2021 09:58:20 +0200
Subject: [QGIS-Developer] Disabling map context menu via PyQGIS
In-Reply-To: <336bbbf2-b16e-4831-4dfb-4f82085406a5@geo.hu-berlin.de>
References: <ad85c1b5-eb80-8c16-2672-276bd90799f5@wheregroup.com>
 <336bbbf2-b16e-4831-4dfb-4f82085406a5@geo.hu-berlin.de>
Message-ID: <33d66d8b-7965-af1e-9e7d-737fba5e1c97@oslandia.com>

Hi,

if you just want to hide the menu, you can clear it on the 
contextMenuAboutToShow event :

def clearMenu(menu, event):
 ??? menu.clear()
iface.mapCanvas().contextMenuAboutToShow.connect(clearMenu)

Benoit.

Le 03/09/2021 ? 09:31, Benjamin Jakimow a ?crit?:
>
> Hi Hannes,
>
> in C++ you could override
> void QgsMapCanvas::showContextMenu( QgsMapMouseEvent *event )
>
> which creates and shows the context menu.
>
> in Python showContextMenu is not available. There you could re-implement
> void QgsMapCanvas::mousePressEvent( QMouseEvent *e ) to avoid any 
> calls of showContextMenu()
>
> If you just like to modify the context menu, you might add a slot for the
> void contextMenuAboutToShow( QMenu *menu, QgsMapMouseEvent *event ) 
> signal that manipulates the menu.
>
> Greetings,
>
> Benjamin
>
>
> So you might either override it or
>
> to disable the context menu you can override QgsMapCanvas::mousePressEvent
>
>
> Am 03/09/2021 um 09:14 schrieb Johannes Kr?ger (WhereGroup):
>
>> Hi list!
>>
>> In QGIS 3.16 a right-click context menu was added to the map canvas: 
>> https://www.qgis.org/en/site/forusers/visualchangelog316/index.html#add-context-menu-to-map-canvas
>>
>> How can we disable that via PyQGIS?
>>
>> https://qgis.org/pyqgis/master/gui/QgsMapCanvas.html lists a 
>> "contextMenuEvent" method but does not provide any documentation at all.
>>
>> The environment is a QGIS based standalone application.
>>
>> Cheers, Hannes
>>
>>
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info:https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe:https://lists.osgeo.org/mailman/listinfo/qgis-developer
> -- 
> Benjamin Jakimow, Doctoral Researcher
> Earth Observation Lab | Geography Department | Humboldt-Universit?t zu Berlin
>
> e-mail:benjamin.jakimow at geo.hu-berlin.de
>
> phone:  +49 (0) 30 2093 6846
> mobile: +49 (0) 157 5656 8477
> fax:    +49 (0) 30 2093 6848
> mail:   Unter den Linden 6 | 10099 Berlin | Germany
> room: 2'211
> web:https://hu-berlin.de/eo-lab
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/a91e7d86/attachment.html>

From a.neumann at carto.net  Fri Sep  3 02:16:37 2021
From: a.neumann at carto.net (Andreas Neumann)
Date: Fri, 03 Sep 2021 11:16:37 +0200
Subject: [QGIS-Developer] How to handle upstream Qt fixes
In-Reply-To: <rmi7dfylfrq.fsf@s1.lexort.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <rmi7dfylfrq.fsf@s1.lexort.com>
Message-ID: <d3c5b848a823ded41caf28c5aa2c0fb4@carto.net>

Hi all,

Thank you Nyall for raising these questions - and Greg for joining the 
discussion.

Obviously, the questions are not easy and straight-foward to answer. 
They also depend on what the other OS projects will do about this 
situation in general.

Perhaps we can also ask the KDAB folks what they think about this 
situation and if they would recommend to continuously work on extending 
the life span of qt5x.

I can mainly comment on the financial aspects: if, after thorough 
discussion, we think that staying longer with qt5 is the way the project 
should follow, we can of course continue to invest a bit upstream to fix 
issues through KDAB. However, the risk is now higher with potential 
forks and disconnects from the official qt.

About the other questions around OSGEO4W I hope that J?rgen can give a 
useful reply - him being probably the "most technical" person on the 
QGIS PSC - and also the OSGEO4W main packager.

Thanks and greetings,

Andreas

On 2021-09-03 01:27, Greg Troxel wrote:

> Nyall Dawson <nyall.dawson at gmail.com> writes:
> 
>> - Qt Co effectively ended open source support of Qt 5 at the 5.15.2
>> release, and have moved all focus to Qt 6.
>> - While some preliminary work has been done, QGIS doesn't currently
>> support Qt 6 based builds, and likely won't be ready for this for some
>> time (even completely ignoring all the stable API questions a Qt 6
>> build raises entirely!)
>> - QGIS often depends on fixes and enhancements which need to be made
>> upstream in Qt, and can't be resolved or worked-around in QGIS alone
>> - KDE and other open source projects forked Qt 5.15 at
>> https://invent.kde.org/qt/qt/qtbase/-/commits/dev/, and are actively
>> backporting fixes from Qt6 to that branch. Fedora recently started
>> using the KDE branch for Qt 5 library builds, so users of that
>> platform once again are getting bug fixes deployed [1]. I'm unaware if
>> other distributions or builds of Qt are using this currently.
>> - Similarly, there's a KDE fork of Qt 3d at
>> https://invent.kde.org/qt/qt/qt3d/-/commits/kde/5.15/
> 
> I'm speaking as the maintainer of the qgis package in pkgsrc, a 
> multi-OS
> multi-CPU packaging system.  Currently this is 3.16.x, and it is built
> against 5.15.2 (only).
> 
> I think you have posed semi-separable questions and it's good to
> semi-separate them:
> 
> - 1. should qgis target the KDE fork of QT, or 5.15.2, or both, as the
> library that is expected to be used, and tested in CI?
> 
> - 2. when qgis.org produces binary builds, should qt-kde or qt be used?
> 
> - 3. should qgis.org attempt to engage with KDAB to work on a fork of a
> branch discontinued by the original maintainers?
> 
> - 4. Given what I see as concerning behavior by Qt Co in placing Free
> Software users in a bad spot, what should be the future approach to
> Qt?  Perhaps, it should be KDE Qt 5.15, and not Qt 6.)
> 
> and I think this is informed in large part by understanding the degree
> to which the various packaging systems (a term that I use to include
> GNU/Linux distributions) switch the KDE fork.  In my view where Debian
> lands, if at all, is very influential.
> 
> I will inquire within pkgsrc about the KDE fork and intent to have our
> Qt 5 packages track them.  I am guessing that it's meant to be just a
> continuation of maintenance, for now, and thus quite compatible.
> 
> I think that (1) is the current primary question.  Choice (2) mostly
> flows from the answer to (1), in that it's reasonable to target
> 5.15.2(release) but also test with 5.15.2.kde.x, and use .kde for
> binaries on the theory that it has bugfixes.  It's also reasonable -- 
> if
> enough packaging systems move or provide the KDE fork -- to just say
> that testing is only against that -- but qgis seems to support older Qt
> anyway, and it would seem radical to demand a particular rev of 5.15 at
> this point.
> 
> If (1) is decided in favor of the fork, then (3) seems reasonable.
> 
> (4) is a hard discussion that I think should be deferred a bit until we
> see how the Free Software world's approach to Qt settles out.  It
> reamains to be seen how that's going to go between extremes of being
> content about the withdrawal of support and just moving to 6, and
> deciding that qt's model wasn't such a good idea after all and that 
> it's
> best to use a truly Free fork or start to get away from it entirely.
> Pretty obviously neither extreme is likely, but I have little 
> confidence
> in guesses about where we'll land.
> 
> Greg
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/2881d819/attachment.html>

From johannes.kroeger at wheregroup.com  Fri Sep  3 02:25:53 2021
From: johannes.kroeger at wheregroup.com (=?UTF-8?Q?Johannes_Kr=c3=b6ger_=28WhereGroup=29?=)
Date: Fri, 3 Sep 2021 11:25:53 +0200
Subject: [QGIS-Developer] Disabling map context menu via PyQGIS
In-Reply-To: <33d66d8b-7965-af1e-9e7d-737fba5e1c97@oslandia.com>
References: <ad85c1b5-eb80-8c16-2672-276bd90799f5@wheregroup.com>
 <336bbbf2-b16e-4831-4dfb-4f82085406a5@geo.hu-berlin.de>
 <33d66d8b-7965-af1e-9e7d-737fba5e1c97@oslandia.com>
Message-ID: <a8bde983-c385-d00c-1769-9aedd98fd472@wheregroup.com>

Thank you guys so much for your great suggestions!

Since I am not already overriding QgsMapCanvas or using a custom MapTool 
at all times, I went for Benoit's solution (which Benjamin hinted at) 
and it works great.

A hundred internet points to you! :)

Cheers, Hannes

Am 03.09.21 um 09:58 schrieb Benoit Ducarouge:
> Hi,
>
> if you just want to hide the menu, you can clear it on the 
> contextMenuAboutToShow event :
>
> def clearMenu(menu, event):
> ??? menu.clear()
> iface.mapCanvas().contextMenuAboutToShow.connect(clearMenu)
>
> Benoit.
>
> Le 03/09/2021 ? 09:31, Benjamin Jakimow a ?crit?:
>>
>> Hi Hannes,
>>
>> in C++ you could override
>> void QgsMapCanvas::showContextMenu( QgsMapMouseEvent *event )
>>
>> which creates and shows the context menu.
>>
>> in Python showContextMenu is not available. There you could re-implement
>> void QgsMapCanvas::mousePressEvent( QMouseEvent *e ) to avoid any 
>> calls of showContextMenu()
>>
>> If you just like to modify the context menu, you might add a slot for 
>> the
>> void contextMenuAboutToShow( QMenu *menu, QgsMapMouseEvent *event ) 
>> signal that manipulates the menu.
>>
>> Greetings,
>>
>> Benjamin
>>
>>
>> So you might either override it or
>>
>> to disable the context menu you can override 
>> QgsMapCanvas::mousePressEvent
>>

From a.neumann at carto.net  Fri Sep  3 06:30:01 2021
From: a.neumann at carto.net (Andreas Neumann)
Date: Fri, 03 Sep 2021 15:30:01 +0200
Subject: [QGIS-Developer] Trouble compiling QGIS
Message-ID: <6154ac5b7424495d27cc5fe906bb1969@carto.net>

Hi,

I have troubles compiling QGIS on my Linux Ubuntu 20.04 machine.

I use a self-compiled GEOS and GDAL.

The build always hangs at "crssync" - here is the ninja build output I 
get. Do you have any idea what might be wrong or what I could do in 
order to fix this problem?

Thank you for your hints,

Andreas

------------------------

[0/1] Re-running CMake...
-- QGIS version: 3.21.0 Master (32100)
-- Found OpenCL C++ headers: /usr/include
-- ccache found
-- Found Proj: /usr/local/lib/libproj.so version 8 (8.1.0)
-- Found GEOS: /usr/local/lib/libgeos_c.so (3.9.1)
-- Found GDAL: /usr/local/lib/libgdal.so (3.3.1)
-- Found Expat: /usr/lib/x86_64-linux-gnu/libexpat.so
-- Found Spatialindex: /usr/lib/x86_64-linux-gnu/libspatialindex.so
-- Found Qwt: /usr/lib/libqwt-qt5.so (6.1.4)
-- Found libzip: /usr/lib/x86_64-linux-gnu/libzip.so
-- Found Sqlite3: /usr/lib/x86_64-linux-gnu/libsqlite3.so
-- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-pthread
-- Found zlib: /usr/lib/x86_64-linux-gnu/libz.so
-- Found exiv2: /usr/lib/x86_64-linux-gnu/libexiv2.so
-- Found PostgreSQL: /usr/local/pgsql/lib/libpq.so
-- Found SpatiaLite: /usr/local/lib/libspatialite.so
-- Qt WebKit support enabled
-- Found ZSTD: /usr/lib/x86_64-linux-gnu/libzstd.so
-- Found laz-perf: /usr/local/include
-- Found PDAL: 
/usr/local/lib/libpdalcpp.so;/usr/local/lib/libpdal_util.so (2.0.1)
-- Found Qt version: 5.12.8
-- Found QScintilla2: /usr/lib/libqscintilla2_qt5.so (2.11.2)
-- Found QtKeychain: /usr/lib/x86_64-linux-gnu/libqt5keychain.so
-- Found QCA: /usr/lib/x86_64-linux-gnu/libqca-qt5.so (2.2.1)
-- Found QCA OpenSSL plugin
-- Pedantic compiler settings enabled
-- Found GSL: -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
-- Found Python executable: /usr/bin/python3.8 (version 3.8.10)
-- Python library: /usr/lib/x86_64-linux-gnu/libpython3.8.so
-- Python site-packages: /usr/lib/python3/dist-packages
-- Found PyQt5 version: 5.14.1
-- Found SIP version: 4.19.21
-- Found QScintilla2 PyQt module: 2.11.2
-- Could NOT find HDF5 (missing: HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
(found version "")
-- Could NOT find NetCDF (missing: NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
-- Using PROJ >= 6 srs database.
-- Ctest Binary Directory set to: 
/home/bjsvwneu/dev/QGIS/build/output/bin
-- Configuring done
-- Generating done
-- Build files have been written to: /home/bjsvwneu/dev/QGIS/build
[1/6072] Generating qgsversion.h, qgsversion.inc
Files "/home/bjsvwneu/dev/QGIS/build/qgsversion.h.temp" to 
"/home/bjsvwneu/dev/QGIS/build/qgsversion.h" are different.
[3/6072] Generating qgsexpression_texts.cpp
Files 
"/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp.temp" to 
"/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp" are 
different.
[2905/6072] Generating gui/sip_guipart0.cpp, gui/sip_guipart1.cpp, 
gui/sip_guipart2.cpp, gui/sip_guipart3.cpp, gui/sip_guipart4.cpp, 
g...i/sip_guipart10.cpp, gui/sip_guipart11.cpp, gui/sip_guipart12.cpp, 
gui/sip_guipart13.cpp, gui/sip_guipart14.cpp, gui/sip_guipart15.cpp

[4061/6072] Building CXX object 
src/providers/mdal/CMakeFiles/provider_mdal.dir/__/__/__/external/mdal/mdal_utils.cpp.o
../external/mdal/mdal_utils.cpp: In function 'int MDAL::toInt(size_t)':
../external/mdal/mdal_utils.cpp:143:14: warning: comparison of integer 
expressions of different signedness: 'const size_t' {aka 'const long 
unsigned int'} and 'int' [-Wsign-compare]
  143 |   if ( value > std::numeric_limits<int>::max() )
      |        ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[4172/6072] Running crssync
FAILED: src/crssync/CMakeFiles/synccrsdb
cd /home/bjsvwneu/dev/QGIS/build/src/crssync && 
/home/bjsvwneu/dev/QGIS/build/output/bin/crssync
free(): invalid pointer
Aborted (core dumped)
[4173/6072] Building CXX object 
src/plugins/topology/CMakeFiles/topolplugin.dir/topolplugin_autogen/mocs_compilation.cpp.o
ninja: build stopped: subcommand failed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/a39430ac/attachment.html>

From even.rouault at spatialys.com  Fri Sep  3 06:42:18 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 3 Sep 2021 15:42:18 +0200
Subject: [QGIS-Developer] Trouble compiling QGIS
In-Reply-To: <6154ac5b7424495d27cc5fe906bb1969@carto.net>
References: <6154ac5b7424495d27cc5fe906bb1969@carto.net>
Message-ID: <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>

Andreas

Several things to check:

- Is your GDAL build a clean one ? That is is it from a fresh build 
directory, or are you rebuilding in a directory where a previous build 
was done. If the later, make sure to "make clean" before rebuilding

- Is your GDAL build using your custom GEOS one ? Otherwise QGIS might 
link directly to the custom one and indirectly to the system one through 
GDAL. Check the output of "ldd output/bin/qgis | grep geos"

- try "valgrind output/bin/crssync". Emitted stack traces can give 
interesting hints

Even

Le 03/09/2021 ? 15:30, Andreas Neumann a ?crit?:
>
> Hi,
>
> I have troubles compiling QGIS on my Linux Ubuntu 20.04 machine.
>
> I use a self-compiled GEOS and GDAL.
>
> The build always hangs at "crssync" - here is the ninja build output I 
> get. Do you have any idea what might be wrong or what I could do in 
> order to fix this problem?
>
> Thank you for your hints,
>
> Andreas
>
> ------------------------
>
> [0/1] Re-running CMake...
> -- QGIS version: 3.21.0 Master (32100)
> -- Found OpenCL C++ headers: /usr/include
> -- ccache found
> -- Found Proj: /usr/local/lib/libproj.so version 8 (8.1.0)
> -- Found GEOS: /usr/local/lib/libgeos_c.so (3.9.1)
> -- Found GDAL: /usr/local/lib/libgdal.so (3.3.1)
> -- Found Expat: /usr/lib/x86_64-linux-gnu/libexpat.so
> -- Found Spatialindex: /usr/lib/x86_64-linux-gnu/libspatialindex.so
> -- Found Qwt: /usr/lib/libqwt-qt5.so (6.1.4)
> -- Found libzip: /usr/lib/x86_64-linux-gnu/libzip.so
> -- Found Sqlite3: /usr/lib/x86_64-linux-gnu/libsqlite3.so
> -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-pthread
> -- Found zlib: /usr/lib/x86_64-linux-gnu/libz.so
> -- Found exiv2: /usr/lib/x86_64-linux-gnu/libexiv2.so
> -- Found PostgreSQL: /usr/local/pgsql/lib/libpq.so
> -- Found SpatiaLite: /usr/local/lib/libspatialite.so
> -- Qt WebKit support enabled
> -- Found ZSTD: /usr/lib/x86_64-linux-gnu/libzstd.so
> -- Found laz-perf: /usr/local/include
> -- Found PDAL: 
> /usr/local/lib/libpdalcpp.so;/usr/local/lib/libpdal_util.so (2.0.1)
> -- Found Qt version: 5.12.8
> -- Found QScintilla2: /usr/lib/libqscintilla2_qt5.so (2.11.2)
> -- Found QtKeychain: /usr/lib/x86_64-linux-gnu/libqt5keychain.so
> -- Found QCA: /usr/lib/x86_64-linux-gnu/libqca-qt5.so (2.2.1)
> -- Found QCA OpenSSL plugin
> -- Pedantic compiler settings enabled
> -- Found GSL: -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
> -- Found Python executable: /usr/bin/python3.8 (version 3.8.10)
> -- Python library: /usr/lib/x86_64-linux-gnu/libpython3.8.so
> -- Python site-packages: /usr/lib/python3/dist-packages
> -- Found PyQt5 version: 5.14.1
> -- Found SIP version: 4.19.21
> -- Found QScintilla2 PyQt module: 2.11.2
> -- Could NOT find HDF5 (missing: HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
> (found version "")
> -- Could NOT find NetCDF (missing: NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
> -- Using PROJ >= 6 srs database.
> -- Ctest Binary Directory set to: 
> /home/bjsvwneu/dev/QGIS/build/output/bin
> -- Configuring done
> -- Generating done
> -- Build files have been written to: /home/bjsvwneu/dev/QGIS/build
> [1/6072] Generating qgsversion.h, qgsversion.inc
> Files "/home/bjsvwneu/dev/QGIS/build/qgsversion.h.temp" to 
> "/home/bjsvwneu/dev/QGIS/build/qgsversion.h" are different.
> [3/6072] Generating qgsexpression_texts.cpp
> Files 
> "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp.temp" 
> to "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp" 
> are different.
> [2905/6072] Generating gui/sip_guipart0.cpp, gui/sip_guipart1.cpp, 
> gui/sip_guipart2.cpp, gui/sip_guipart3.cpp, gui/sip_guipart4.cpp, 
> g...i/sip_guipart10.cpp, gui/sip_guipart11.cpp, gui/sip_guipart12.cpp, 
> gui/sip_guipart13.cpp, gui/sip_guipart14.cpp, gui/sip_guipart15.cpp
>
> [4061/6072] Building CXX object 
> src/providers/mdal/CMakeFiles/provider_mdal.dir/__/__/__/external/mdal/mdal_utils.cpp.o 
>
> ../external/mdal/mdal_utils.cpp: In function ?int MDAL::toInt(size_t)?:
> ../external/mdal/mdal_utils.cpp:143:14: warning: comparison of integer 
> expressions of different signedness: ?const size_t? {aka ?const long 
> unsigned int?} and ?int? [-Wsign-compare]
> ?143 | ??if ( value > std::numeric_limits<int>::max() )
> ?????| ???????~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> [4172/6072] Running crssync
> FAILED: src/crssync/CMakeFiles/synccrsdb
> cd /home/bjsvwneu/dev/QGIS/build/src/crssync && 
> /home/bjsvwneu/dev/QGIS/build/output/bin/crssync
> free(): invalid pointer
> Aborted (core dumped)
> [4173/6072] Building CXX object 
> src/plugins/topology/CMakeFiles/topolplugin.dir/topolplugin_autogen/mocs_compilation.cpp.o 
>
> ninja: build stopped: subcommand failed.
>
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/62ed7326/attachment.html>

From a.neumann at carto.net  Fri Sep  3 07:49:48 2021
From: a.neumann at carto.net (Andreas Neumann)
Date: Fri, 03 Sep 2021 16:49:48 +0200
Subject: [QGIS-Developer] Trouble compiling QGIS
In-Reply-To: <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>
References: <6154ac5b7424495d27cc5fe906bb1969@carto.net>
 <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>
Message-ID: <04ed3548b8c80e3bd0677188a5a93c2e@carto.net>

Hi Even,

With "valgrind output/bin/crssync" I can see that two different 
"libproj"-versions are involved with crssync:

/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1

and

/usr/local/lib/libproj.so.22.1.0

I guess I will have to find out which library is still referencing the 
old libproj version - perhaps that libspatialite culprit again ...

Thanks for your hints,

Andreas

On 2021-09-03 15:42, Even Rouault wrote:

> Andreas
> 
> Several things to check:
> 
> - Is your GDAL build a clean one ? That is is it from a fresh build 
> directory, or are you rebuilding in a directory where a previous build 
> was done. If the later, make sure to "make clean" before rebuilding
> 
> - Is your GDAL build using your custom GEOS one ? Otherwise QGIS might 
> link directly to the custom one and indirectly to the system one 
> through GDAL. Check the output of "ldd output/bin/qgis | grep geos"
> 
> - try "valgrind output/bin/crssync". Emitted stack traces can give 
> interesting hints
> 
> Even
> 
> Le 03/09/2021 ? 15:30, Andreas Neumann a ?crit :
> 
>> Hi,
>> 
>> I have troubles compiling QGIS on my Linux Ubuntu 20.04 machine.
>> 
>> I use a self-compiled GEOS and GDAL.
>> 
>> The build always hangs at "crssync" - here is the ninja build output I 
>> get. Do you have any idea what might be wrong or what I could do in 
>> order to fix this problem?
>> 
>> Thank you for your hints,
>> 
>> Andreas
>> 
>> ------------------------
>> 
>> [0/1] Re-running CMake...
>> -- QGIS version: 3.21.0 Master (32100)
>> -- Found OpenCL C++ headers: /usr/include
>> -- ccache found
>> -- Found Proj: /usr/local/lib/libproj.so version 8 (8.1.0)
>> -- Found GEOS: /usr/local/lib/libgeos_c.so (3.9.1)
>> -- Found GDAL: /usr/local/lib/libgdal.so (3.3.1)
>> -- Found Expat: /usr/lib/x86_64-linux-gnu/libexpat.so
>> -- Found Spatialindex: /usr/lib/x86_64-linux-gnu/libspatialindex.so
>> -- Found Qwt: /usr/lib/libqwt-qt5.so (6.1.4)
>> -- Found libzip: /usr/lib/x86_64-linux-gnu/libzip.so
>> -- Found Sqlite3: /usr/lib/x86_64-linux-gnu/libsqlite3.so
>> -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-pthread
>> -- Found zlib: /usr/lib/x86_64-linux-gnu/libz.so
>> -- Found exiv2: /usr/lib/x86_64-linux-gnu/libexiv2.so
>> -- Found PostgreSQL: /usr/local/pgsql/lib/libpq.so
>> -- Found SpatiaLite: /usr/local/lib/libspatialite.so
>> -- Qt WebKit support enabled
>> -- Found ZSTD: /usr/lib/x86_64-linux-gnu/libzstd.so
>> -- Found laz-perf: /usr/local/include
>> -- Found PDAL: 
>> /usr/local/lib/libpdalcpp.so;/usr/local/lib/libpdal_util.so (2.0.1)
>> -- Found Qt version: 5.12.8
>> -- Found QScintilla2: /usr/lib/libqscintilla2_qt5.so (2.11.2)
>> -- Found QtKeychain: /usr/lib/x86_64-linux-gnu/libqt5keychain.so
>> -- Found QCA: /usr/lib/x86_64-linux-gnu/libqca-qt5.so (2.2.1)
>> -- Found QCA OpenSSL plugin
>> -- Pedantic compiler settings enabled
>> -- Found GSL: -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
>> -- Found Python executable: /usr/bin/python3.8 (version 3.8.10)
>> -- Python library: /usr/lib/x86_64-linux-gnu/libpython3.8.so
>> -- Python site-packages: /usr/lib/python3/dist-packages
>> -- Found PyQt5 version: 5.14.1
>> -- Found SIP version: 4.19.21
>> -- Found QScintilla2 PyQt module: 2.11.2
>> -- Could NOT find HDF5 (missing: HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
>> (found version "")
>> -- Could NOT find NetCDF (missing: NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
>> -- Using PROJ >= 6 srs database.
>> -- Ctest Binary Directory set to: 
>> /home/bjsvwneu/dev/QGIS/build/output/bin
>> -- Configuring done
>> -- Generating done
>> -- Build files have been written to: /home/bjsvwneu/dev/QGIS/build
>> [1/6072] Generating qgsversion.h, qgsversion.inc
>> Files "/home/bjsvwneu/dev/QGIS/build/qgsversion.h.temp" to 
>> "/home/bjsvwneu/dev/QGIS/build/qgsversion.h" are different.
>> [3/6072] Generating qgsexpression_texts.cpp
>> Files 
>> "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp.temp" 
>> to "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp" 
>> are different.
>> [2905/6072] Generating gui/sip_guipart0.cpp, gui/sip_guipart1.cpp, 
>> gui/sip_guipart2.cpp, gui/sip_guipart3.cpp, gui/sip_guipart4.cpp, 
>> g...i/sip_guipart10.cpp, gui/sip_guipart11.cpp, gui/sip_guipart12.cpp, 
>> gui/sip_guipart13.cpp, gui/sip_guipart14.cpp, gui/sip_guipart15.cpp
>> 
>> [4061/6072] Building CXX object 
>> src/providers/mdal/CMakeFiles/provider_mdal.dir/__/__/__/external/mdal/mdal_utils.cpp.o
>> ../external/mdal/mdal_utils.cpp: In function 'int 
>> MDAL::toInt(size_t)':
>> ../external/mdal/mdal_utils.cpp:143:14: warning: comparison of integer 
>> expressions of different signedness: 'const size_t' {aka 'const long 
>> unsigned int'} and 'int' [-Wsign-compare]
>> 143 |   if ( value > std::numeric_limits<int>::max() )
>> |        ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>> [4172/6072] Running crssync
>> FAILED: src/crssync/CMakeFiles/synccrsdb
>> cd /home/bjsvwneu/dev/QGIS/build/src/crssync && 
>> /home/bjsvwneu/dev/QGIS/build/output/bin/crssync
>> free(): invalid pointer
>> Aborted (core dumped)
>> [4173/6072] Building CXX object 
>> src/plugins/topology/CMakeFiles/topolplugin.dir/topolplugin_autogen/mocs_compilation.cpp.o
>> ninja: build stopped: subcommand failed.
>> 
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/05e7792f/attachment-0001.html>

From jef at norbit.de  Fri Sep  3 14:03:30 2021
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Fri, 3 Sep 2021 23:03:30 +0200
Subject: [QGIS-Developer] How to handle upstream Qt fixes
In-Reply-To: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
Message-ID: <20210903210330.3d6y7z3dygvfryyr@norbit.de>

Hi Nyall,

On Fri, 03. Sep 2021 at 08:46:21 +1000, Nyall Dawson wrote:
> - KDE and other open source projects forked Qt 5.15 at
> https://invent.kde.org/qt/qt/qtbase/-/commits/dev/, and are actively
> backporting fixes from Qt6 to that branch. Fedora recently started
> using the KDE branch for Qt 5 library builds, so users of that
> platform once again are getting bug fixes deployed [1]. I'm unaware if
> other distributions or builds of Qt are using this currently.
> - Similarly, there's a KDE fork of Qt 3d at
>   https://invent.kde.org/qt/qt/qt3d/-/commits/kde/5.15/

I asked on #debian-qt-kde on OFTC and they are apparently not planning to apply
the patch collection blindly, but probably would apply individual patches (of
the currently 222 qtbase and 33 in qt3d patches) that we need.

> Right now, there's a number of very frustrating issues that Qt 5.15.2
> has which impact our users. An example is #44876, which results in
> very large PDF exports from QGIS with broken hairline line rendering
> [2].

Do you know whether the PDF issue is already addressed in the patch collection?


> - Are we free to change the Windows builds to use the KDE backports
> fork of 5.15 instead of the official 5.15.2 releases? (Or does that
> change lots of osgeo4w packaging things?). Similarly, are we free to
> move the MacOS builds to the KDE branch too?
> - Could we also move the Windows/MacOS builds of Qt 3d to use the KDE fork?

I suppose so - I would probably just apply them all in OSGeo4W and hope for the
best ;)


> - Does anyone know if Debian have plans to migrate to the KDE
>   backports fork? (Last I heard, the debian Qt maintainers stepped down
>   and the package is currently lacking a maintainer!)

see above.


> - If we can get the majority of our users onto builds which use the
>   KDE backports branch (i.e. Windows/mac users)

Do we know that there are significantly more users on Mac than on free
platforms?


>  , could we re-start the relationship with KDAB and contract them for bug
>  fixes again for 3.22?  (with the arrangement explicitly requiring them to
>  backport fixes to Qt 5 via KDE's fork).

I'd say yes.


J?rgen

-- 
J?rgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
Dipl.-Inf. (FH)             Rheinstra?e 13          Fax. +49-4931-918175-50
Software Engineer           D-26506 Norden            https://www.norbit.de
QGIS release manager (PSC)  Germany                 IRC: jef on Libera|OFTC
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/8ee2695f/attachment.sig>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Pflichtangaben
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/8ee2695f/attachment.ksh>

From rdmailings at duif.net  Sat Sep  4 00:56:39 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Sat, 4 Sep 2021 09:56:39 +0200
Subject: [QGIS-Developer] [Qgis-psc] How to handle upstream Qt fixes
In-Reply-To: <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
Message-ID: <464d449c-1c97-b2e6-ac4f-65f37a0b97d8@duif.net>

On 9/4/21 8:45 AM, Ludovic Hirlimann wrote:
> On 9/3/21 00:46, Nyall Dawson wrote:
>> Hi PSC, devs,
>>
>> I'd like to kick start some discussion on how best to handle the
>> situation with upstream Qt and their (lack of) support for Qt 5. As a
>> quick summary of the situation:
>>
>> - Qt Co effectively ended open source support of Qt 5 at the 5.15.2
>> release, and have moved all focus to Qt 6.
>> - While some preliminary work has been done, QGIS doesn't currently
>> support Qt 6 based builds, and likely won't be ready for this for some
>> time (even completely ignoring all the stable API questions a Qt 6
>> build raises entirely!)
> 
> Wouldn't it be wiser to devote resources to moving to QT6 and do that faster than
> 
> wait on potential unsuported 5x fixes ?

That was also my thought, though no clue about the amount of work for it.

But my argument against deciding to use a patched/forked qt5 would be that (UNLESS all our development platforms could more or less easily/package/use it), it could potentially break our (little?) "I'm not a core dev, but I compile QGIS myself" group. 

My experience (with Linux users at least), is that with some guidance the average Debian/Ubuntu user is able to compile/run QGIS itself, IF all dependencies are taken care of by the distro's.
When people have to fiddle with LD_LIBRARY paths, my guess is they will break...
Off course that is 'my bubble', and I'm not even sure about the size of the group, and if they/we are helpful at all etc etc.

Maybe it's time for another 'big gap' in QGIS releases? As in: after 3.22 (LTR) there will be a probably not so stable 4.0 which will have a thorough api cleanup (first), while maybe partially trying to do some pre-work for Qt6? And so hopefully we will have Qt6 packaged more easily at that time?

Mmm, checking Qt6 availability on Debian (testing; so also upcoming Ubuntu?).... it does not seem to be available easily yet (as in 'packaged' for my distro, though as 'maintainers' I see " Debian Qt/KDE Maintainers" [0] ). So my argument just vanished, at least on short term.

What is the Qt6 status in Fedora or Suse?

Glad to see Riverbank at least has PyQt6 already.. (and yes I'm aware Qt now also has bindings itself :-) )

Anyway, thanks Nyall for this forward thinking, but ... hard decisions to make. ...

May the QGIS Force be with us...,

Richard Duivenvoorde

[0] https://tracker.debian.org/pkg/qtbase-opensource-src

From nyall.dawson at gmail.com  Sun Sep  5 15:22:31 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 6 Sep 2021 08:22:31 +1000
Subject: [QGIS-Developer] How to handle upstream Qt fixes
In-Reply-To: <d3c5b848a823ded41caf28c5aa2c0fb4@carto.net>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <rmi7dfylfrq.fsf@s1.lexort.com> <d3c5b848a823ded41caf28c5aa2c0fb4@carto.net>
Message-ID: <CAB28AshsewWWjEyMQ4MSEKMsZoZuenQgpJ_fgNQRHOL7qtJqTw@mail.gmail.com>

On Fri, 3 Sept 2021 at 19:16, Andreas Neumann <a.neumann at carto.net> wrote:
>
> Hi all,
>
> Thank you Nyall for raising these questions - and Greg for joining the discussion.
>
> Obviously, the questions are not easy and straight-foward to answer. They also depend on what the other OS projects will do about this situation in general.
>
> Perhaps we can also ask the KDAB folks what they think about this situation and if they would recommend to continuously work on extending the life span of qt5x.
>
> I can mainly comment on the financial aspects: if, after thorough discussion, we think that staying longer with qt5 is the way the project should follow, we can of course continue to invest a bit upstream to fix issues through KDAB. However, the risk is now higher with potential forks and disconnects from the official qt.

Just to clarify -- I'd make sure we require that all fixes land in qt6
first, to ensure that the work isn't a dead-end.

Nyall

From nyall.dawson at gmail.com  Sun Sep  5 15:30:03 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 6 Sep 2021 08:30:03 +1000
Subject: [QGIS-Developer] How to handle upstream Qt fixes
In-Reply-To: <20210903210330.3d6y7z3dygvfryyr@norbit.de>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <20210903210330.3d6y7z3dygvfryyr@norbit.de>
Message-ID: <CAB28AsikXPZyh-A-2nR4fR1frs10vRgbZG=-eYTy2DZCy6rHkw@mail.gmail.com>

On Sat, 4 Sept 2021 at 07:03, J?rgen E. Fischer <jef at norbit.de> wrote:
>
> Hi Nyall,
>
> On Fri, 03. Sep 2021 at 08:46:21 +1000, Nyall Dawson wrote:
> > - KDE and other open source projects forked Qt 5.15 at
> > https://invent.kde.org/qt/qt/qtbase/-/commits/dev/, and are actively
> > backporting fixes from Qt6 to that branch. Fedora recently started
> > using the KDE branch for Qt 5 library builds, so users of that
> > platform once again are getting bug fixes deployed [1]. I'm unaware if
> > other distributions or builds of Qt are using this currently.
> > - Similarly, there's a KDE fork of Qt 3d at
> >   https://invent.kde.org/qt/qt/qt3d/-/commits/kde/5.15/
>
> I asked on #debian-qt-kde on OFTC and they are apparently not planning to apply
> the patch collection blindly, but probably would apply individual patches (of
> the currently 222 qtbase and 33 in qt3d patches) that we need.

Ok, thanks for the insights. FWIW it looks like Fedora is taking the
opposite direction and will be migrating ALL Qt packages to the
community forks. See
https://bugzilla.redhat.com/show_bug.cgi?id=2000789#c1

>
> > Right now, there's a number of very frustrating issues that Qt 5.15.2
> > has which impact our users. An example is #44876, which results in
> > very large PDF exports from QGIS with broken hairline line rendering
> > [2].
>
> Do you know whether the PDF issue is already addressed in the patch collection?

No, it's still open upstream:
https://bugreports.qt.io/browse/QTBUG-86094 . (So even if we moved to
qt6 today it'd still be an issue).

> > - Are we free to change the Windows builds to use the KDE backports
> > fork of 5.15 instead of the official 5.15.2 releases? (Or does that
> > change lots of osgeo4w packaging things?). Similarly, are we free to
> > move the MacOS builds to the KDE branch too?
> > - Could we also move the Windows/MacOS builds of Qt 3d to use the KDE fork?
>
> I suppose so - I would probably just apply them all in OSGeo4W and hope for the
> best ;)

I honestly don't think there'd be any higher risk in trusting the
community fork vs the official Qt releases. We all know how often
those regress *eye roll*. Maybe a community maintained fork is EXACTLY
what Qt needs to get back on track.

> > - If we can get the majority of our users onto builds which use the
> >   KDE backports branch (i.e. Windows/mac users)
>
> Do we know that there are significantly more users on Mac than on free
> platforms?

Nope. I'm mostly referring to Windows there!

Nyall

> >  , could we re-start the relationship with KDAB and contract them for bug
> >  fixes again for 3.22?  (with the arrangement explicitly requiring them to
> >  backport fixes to Qt 5 via KDE's fork).
>
> I'd say yes.
>
>
> J?rgen
>
> --
> J?rgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
> Dipl.-Inf. (FH)             Rheinstra?e 13          Fax. +49-4931-918175-50
> Software Engineer           D-26506 Norden            https://www.norbit.de
> QGIS release manager (PSC)  Germany                 IRC: jef on Libera|OFTC

From nyall.dawson at gmail.com  Sun Sep  5 15:49:44 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 6 Sep 2021 08:49:44 +1000
Subject: [QGIS-Developer] [Qgis-psc] How to handle upstream Qt fixes
In-Reply-To: <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
Message-ID: <CAB28AsizJgrndqLnwgFahRfpA=+M2pBffRF4TezG9mpH=GrLKA@mail.gmail.com>

On Sat, 4 Sept 2021 at 16:45, Ludovic Hirlimann <lhirlimann at 3liz.com> wrote:
>
> On 9/3/21 00:46, Nyall Dawson wrote:
> > Hi PSC, devs,
> >
> > I'd like to kick start some discussion on how best to handle the
> > situation with upstream Qt and their (lack of) support for Qt 5. As a
> > quick summary of the situation:
> >
> > - Qt Co effectively ended open source support of Qt 5 at the 5.15.2
> > release, and have moved all focus to Qt 6.
> > - While some preliminary work has been done, QGIS doesn't currently
> > support Qt 6 based builds, and likely won't be ready for this for some
> > time (even completely ignoring all the stable API questions a Qt 6
> > build raises entirely!)
>
> Wouldn't it be wiser to devote resources to moving to QT6 and do that
> faster than
> wait on potential unsuported 5x fixes ?

Well, getting QGIS to **build** on Qt 6 is at least another 3-4 weeks
work in my estimates (assuming someone worked full time on this.
Currently it's all done on volunteer time, so I'd estimate it's
another 6 months away at the current pace). And that's just getting it
to build. On the bits that have been ported so far (core + analysis)
we're seeing around 30% of tests failing. There's a LOT of work left
before QGIS will be usable on Qt 6.

Even if we got QGIS working nicely under Qt 6 there's still going to
be many users who are stuck on Qt 5 for the foreseeable future (e.g.
Debian/Ubuntu users), so we do need **some** plans on how to ensure
these users don't get left behind.

Nyall


>
>
> Ludovic
>
> --
> Administrateur Syst?me Chez 3liz
> https://3liz.com solutions libre de Cartographie
> Syst?me d'information G?ographique // Developement QGIS
> Editeur de lizmap -> https://lizmap.com
>

From nyall.dawson at gmail.com  Sun Sep  5 16:06:39 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 6 Sep 2021 09:06:39 +1000
Subject: [QGIS-Developer] [Qgis-psc] How to handle upstream Qt fixes
In-Reply-To: <464d449c-1c97-b2e6-ac4f-65f37a0b97d8@duif.net>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
 <464d449c-1c97-b2e6-ac4f-65f37a0b97d8@duif.net>
Message-ID: <CAB28Asi1YT-Nu9-yhUxF3YR2+X-HjtgLBG_FqC4wkBL-KP3ASQ@mail.gmail.com>

On Sat, 4 Sept 2021 at 17:56, Richard Duivenvoorde <rdmailings at duif.net> wrote:
>
> On 9/4/21 8:45 AM, Ludovic Hirlimann wrote:
> > On 9/3/21 00:46, Nyall Dawson wrote:
> >> Hi PSC, devs,
> >>
> >> I'd like to kick start some discussion on how best to handle the
> >> situation with upstream Qt and their (lack of) support for Qt 5. As a
> >> quick summary of the situation:
> >>
> >> - Qt Co effectively ended open source support of Qt 5 at the 5.15.2
> >> release, and have moved all focus to Qt 6.
> >> - While some preliminary work has been done, QGIS doesn't currently
> >> support Qt 6 based builds, and likely won't be ready for this for some
> >> time (even completely ignoring all the stable API questions a Qt 6
> >> build raises entirely!)
> >
> > Wouldn't it be wiser to devote resources to moving to QT6 and do that faster than
> >
> > wait on potential unsuported 5x fixes ?
>
> That was also my thought, though no clue about the amount of work for it.
>
> But my argument against deciding to use a patched/forked qt5 would be that (UNLESS all our development platforms could more or less easily/package/use it), it could potentially break our (little?) "I'm not a core dev, but I compile QGIS myself" group.
>
> My experience (with Linux users at least), is that with some guidance the average Debian/Ubuntu user is able to compile/run QGIS itself, IF all dependencies are taken care of by the distro's.
> When people have to fiddle with LD_LIBRARY paths, my guess is they will break...
> Off course that is 'my bubble', and I'm not even sure about the size of the group, and if they/we are helpful at all etc etc.

I'd never make the KDE fork a requirement for a bulid -- we'd always
have to ensure that users can build using the official releases.
They'd just potentially suffer from upstream Qt bugs which have since
been fixed in the community fork. (And if we do nothing, they'd be in
exactly the same situation!!)

> Maybe it's time for another 'big gap' in QGIS releases? As in: after 3.22 (LTR) there will be a probably not so stable 4.0 which will have a thorough api cleanup (first), while maybe partially trying to do some pre-work for Qt6? And so hopefully we will have Qt6 packaged more easily at that time?

See https://github.com/qgis/QGIS-Enhancement-Proposals/issues/198 for
my proposal on how we handle this. I'd suggest that (when we're ready)
we do a "soft break" and support Qt 6 builds of QGIS 3.x, with the
intention of moving the Windows and Mac builds to Qt 6. We don't allow
ANY api breaks which aren't directly related to making QGIS qt6
compatible, so that plugins will only have to make very minimal
changes (if any)

> What is the Qt6 status in Fedora or Suse?

Fedora has qt 6.1 packages from Fedora 34 (we use these on the CI to
test builds of the core/analysis library on Qt 6). Not sure about SUSE
personally.

Nyall


>
> Glad to see Riverbank at least has PyQt6 already.. (and yes I'm aware Qt now also has bindings itself :-) )
>
> Anyway, thanks Nyall for this forward thinking, but ... hard decisions to make. ...
>
> May the QGIS Force be with us...,
>
> Richard Duivenvoorde
>
> [0] https://tracker.debian.org/pkg/qtbase-opensource-src

From peter.petrik at lutraconsulting.co.uk  Sun Sep  5 23:47:15 2021
From: peter.petrik at lutraconsulting.co.uk (Peter Petrik)
Date: Mon, 6 Sep 2021 08:47:15 +0200
Subject: [QGIS-Developer] [Qgis-psc] How to handle upstream Qt fixes
In-Reply-To: <CAB28Asi1YT-Nu9-yhUxF3YR2+X-HjtgLBG_FqC4wkBL-KP3ASQ@mail.gmail.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
 <464d449c-1c97-b2e6-ac4f-65f37a0b97d8@duif.net>
 <CAB28Asi1YT-Nu9-yhUxF3YR2+X-HjtgLBG_FqC4wkBL-KP3ASQ@mail.gmail.com>
Message-ID: <CA+T_MsJQS2EL6AyZM6mO9NU6rJ9kcu3E-kGa_+Je6qRY4apStQ@mail.gmail.com>

Hi,

as for macOS at the moment, I install pre-build Qt binaries and use them. I
suppose I can build and use whichever version from whichever fork if we
decide to do so, but I have never needed to use my custom Qt build so it
would take some time to compile.

as for Qt and their (lack of) open-source support for 5.15, I am wondering
if they want to force open-source projects to use a commercial Qt package
for distribution?

P.

On Mon, Sep 6, 2021 at 1:06 AM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> On Sat, 4 Sept 2021 at 17:56, Richard Duivenvoorde <rdmailings at duif.net>
> wrote:
> >
> > On 9/4/21 8:45 AM, Ludovic Hirlimann wrote:
> > > On 9/3/21 00:46, Nyall Dawson wrote:
> > >> Hi PSC, devs,
> > >>
> > >> I'd like to kick start some discussion on how best to handle the
> > >> situation with upstream Qt and their (lack of) support for Qt 5. As a
> > >> quick summary of the situation:
> > >>
> > >> - Qt Co effectively ended open source support of Qt 5 at the 5.15.2
> > >> release, and have moved all focus to Qt 6.
> > >> - While some preliminary work has been done, QGIS doesn't currently
> > >> support Qt 6 based builds, and likely won't be ready for this for some
> > >> time (even completely ignoring all the stable API questions a Qt 6
> > >> build raises entirely!)
> > >
> > > Wouldn't it be wiser to devote resources to moving to QT6 and do that
> faster than
> > >
> > > wait on potential unsuported 5x fixes ?
> >
> > That was also my thought, though no clue about the amount of work for it.
> >
> > But my argument against deciding to use a patched/forked qt5 would be
> that (UNLESS all our development platforms could more or less
> easily/package/use it), it could potentially break our (little?) "I'm not a
> core dev, but I compile QGIS myself" group.
> >
> > My experience (with Linux users at least), is that with some guidance
> the average Debian/Ubuntu user is able to compile/run QGIS itself, IF all
> dependencies are taken care of by the distro's.
> > When people have to fiddle with LD_LIBRARY paths, my guess is they will
> break...
> > Off course that is 'my bubble', and I'm not even sure about the size of
> the group, and if they/we are helpful at all etc etc.
>
> I'd never make the KDE fork a requirement for a bulid -- we'd always
> have to ensure that users can build using the official releases.
> They'd just potentially suffer from upstream Qt bugs which have since
> been fixed in the community fork. (And if we do nothing, they'd be in
> exactly the same situation!!)
>
> > Maybe it's time for another 'big gap' in QGIS releases? As in: after
> 3.22 (LTR) there will be a probably not so stable 4.0 which will have a
> thorough api cleanup (first), while maybe partially trying to do some
> pre-work for Qt6? And so hopefully we will have Qt6 packaged more easily at
> that time?
>
> See https://github.com/qgis/QGIS-Enhancement-Proposals/issues/198 for
> my proposal on how we handle this. I'd suggest that (when we're ready)
> we do a "soft break" and support Qt 6 builds of QGIS 3.x, with the
> intention of moving the Windows and Mac builds to Qt 6. We don't allow
> ANY api breaks which aren't directly related to making QGIS qt6
> compatible, so that plugins will only have to make very minimal
> changes (if any)
>
> > What is the Qt6 status in Fedora or Suse?
>
> Fedora has qt 6.1 packages from Fedora 34 (we use these on the CI to
> test builds of the core/analysis library on Qt 6). Not sure about SUSE
> personally.
>
> Nyall
>
>
> >
> > Glad to see Riverbank at least has PyQt6 already.. (and yes I'm aware Qt
> now also has bindings itself :-) )
> >
> > Anyway, thanks Nyall for this forward thinking, but ... hard decisions
> to make. ...
> >
> > May the QGIS Force be with us...,
> >
> > Richard Duivenvoorde
> >
> > [0] https://tracker.debian.org/pkg/qtbase-opensource-src
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210906/797d193a/attachment-0001.html>

From rnathreddy at sanasw.com  Tue Sep  7 20:18:23 2021
From: rnathreddy at sanasw.com (rnathreddy at sanasw.com)
Date: Tue, 07 Sep 2021 20:18:23 -0700
Subject: [QGIS-Developer] Rendering simple 3D lines
Message-ID: <390fa0841eb072f36d0917a261fe2efd@sanasw.com>

Hi,

We are developing a simple 3D viewer to display the DEM and overlay a 
trajectory (vector layer) as a simple 3d lines. It is working fine and 
vector file is draped on to the terrain. We want to display the vector 
file as simple 3d lines.

We could see the same in QGIS application by setting the Vector Layer 
properties 3D View => Render as simple 3D lines.

Trying to set same programmatically, but getting the following error.

    " ..\..\..\src\3d\qgsvectorlayerchunkloader_p.cpp(57) :
      (QgsVectorLayerChunkLoader::QgsVectorLayerChunkLoader) [15960ms] 
Unknown
          3D symbol type for vector layer: line  "

The following code snippet used:

if (pcLyr != nullptr) {

   std::unique_ptr< QgsLine3DSymbol > sym = qgis::make_unique< 
QgsLine3DSymbol >();
   std::unique_ptr< QgsPhongMaterialSettings > mCurrentSettings;

   mCurrentSettings = qgis::make_unique< QgsPhongMaterialSettings >();

   sym->setWidth (1);
   sym->setHeight (0);
   sym->setExtrusionHeight(0);
   sym->setAltitudeClamping(Qgs3DTypes::AltClampAbsolute);
   sym->setAltitudeBinding(Qgs3DTypes::AltBindVertex);
   sym->setRenderAsSimpleLines(true);
   sym->setMaterial(mCurrentSettings->clone());

   QgsVectorLayer3DRenderer *pcR = new QgsVectorLayer3DRenderer  
(sym->clone());
   pcLyr->setRenderer3D(pcR);
}


Can any one help us in this regard?

Regards
Raghunath

From nyall.dawson at gmail.com  Tue Sep  7 20:41:25 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 8 Sep 2021 13:41:25 +1000
Subject: [QGIS-Developer] Rendering simple 3D lines
In-Reply-To: <390fa0841eb072f36d0917a261fe2efd@sanasw.com>
References: <390fa0841eb072f36d0917a261fe2efd@sanasw.com>
Message-ID: <CAB28AsiPmETKhfhG2b3CwzLUsAm3c5pq594846pVwRphfcz79g@mail.gmail.com>

On Wed, 8 Sept 2021 at 13:27, <rnathreddy at sanasw.com> wrote:
>
> Hi,
>
> We are developing a simple 3D viewer to display the DEM and overlay a
> trajectory (vector layer) as a simple 3d lines. It is working fine and
> vector file is draped on to the terrain. We want to display the vector
> file as simple 3d lines.
>
> We could see the same in QGIS application by setting the Vector Layer
> properties 3D View => Render as simple 3D lines.
>
> Trying to set same programmatically, but getting the following error.
>
>     " ..\..\..\src\3d\qgsvectorlayerchunkloader_p.cpp(57) :
>       (QgsVectorLayerChunkLoader::QgsVectorLayerChunkLoader) [15960ms]
> Unknown
>           3D symbol type for vector layer: line  "

Possibly you are missing a call to Qgs3D::initialize() somewhere in
your application startup.

Nyall

>
> The following code snippet used:
>
> if (pcLyr != nullptr) {
>
>    std::unique_ptr< QgsLine3DSymbol > sym = qgis::make_unique<
> QgsLine3DSymbol >();
>    std::unique_ptr< QgsPhongMaterialSettings > mCurrentSettings;
>
>    mCurrentSettings = qgis::make_unique< QgsPhongMaterialSettings >();
>
>    sym->setWidth (1);
>    sym->setHeight (0);
>    sym->setExtrusionHeight(0);
>    sym->setAltitudeClamping(Qgs3DTypes::AltClampAbsolute);
>    sym->setAltitudeBinding(Qgs3DTypes::AltBindVertex);
>    sym->setRenderAsSimpleLines(true);
>    sym->setMaterial(mCurrentSettings->clone());
>
>    QgsVectorLayer3DRenderer *pcR = new QgsVectorLayer3DRenderer
> (sym->clone());
>    pcLyr->setRenderer3D(pcR);
> }
>
>
> Can any one help us in this regard?
>
> Regards
> Raghunath
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From rnathreddy at sanasw.com  Tue Sep  7 21:08:44 2021
From: rnathreddy at sanasw.com (rnathreddy at sanasw.com)
Date: Tue, 07 Sep 2021 21:08:44 -0700
Subject: [QGIS-Developer] Rendering simple 3D lines
In-Reply-To: <CAB28AsiPmETKhfhG2b3CwzLUsAm3c5pq594846pVwRphfcz79g@mail.gmail.com>
References: <390fa0841eb072f36d0917a261fe2efd@sanasw.com>
 <CAB28AsiPmETKhfhG2b3CwzLUsAm3c5pq594846pVwRphfcz79g@mail.gmail.com>
Message-ID: <e70857d55515a8219578d6d725d0fd13@sanasw.com>

Dear Nyall,

Thank you very much for your help. I was struggling from the past couple 
of days to resolve this issue.

As you said I missed out calling Qgs3D::Initialize () and 
Qgs3DAppUtils::initialize()  at the startup.

Now it is working.

Regards
Raghunath

On 2021-09-07 20:41, Nyall Dawson wrote:
> On Wed, 8 Sept 2021 at 13:27, <rnathreddy at sanasw.com> wrote:
>> 
>> Hi,
>> 
>> We are developing a simple 3D viewer to display the DEM and overlay a
>> trajectory (vector layer) as a simple 3d lines. It is working fine and
>> vector file is draped on to the terrain. We want to display the vector
>> file as simple 3d lines.
>> 
>> We could see the same in QGIS application by setting the Vector Layer
>> properties 3D View => Render as simple 3D lines.
>> 
>> Trying to set same programmatically, but getting the following error.
>> 
>>     " ..\..\..\src\3d\qgsvectorlayerchunkloader_p.cpp(57) :
>>       (QgsVectorLayerChunkLoader::QgsVectorLayerChunkLoader) [15960ms]
>> Unknown
>>           3D symbol type for vector layer: line  "
> 
> Possibly you are missing a call to Qgs3D::initialize() somewhere in
> your application startup.
> 
> Nyall
> 
>> 
>> The following code snippet used:
>> 
>> if (pcLyr != nullptr) {
>> 
>>    std::unique_ptr< QgsLine3DSymbol > sym = qgis::make_unique<
>> QgsLine3DSymbol >();
>>    std::unique_ptr< QgsPhongMaterialSettings > mCurrentSettings;
>> 
>>    mCurrentSettings = qgis::make_unique< QgsPhongMaterialSettings >();
>> 
>>    sym->setWidth (1);
>>    sym->setHeight (0);
>>    sym->setExtrusionHeight(0);
>>    sym->setAltitudeClamping(Qgs3DTypes::AltClampAbsolute);
>>    sym->setAltitudeBinding(Qgs3DTypes::AltBindVertex);
>>    sym->setRenderAsSimpleLines(true);
>>    sym->setMaterial(mCurrentSettings->clone());
>> 
>>    QgsVectorLayer3DRenderer *pcR = new QgsVectorLayer3DRenderer
>> (sym->clone());
>>    pcLyr->setRenderer3D(pcR);
>> }
>> 
>> 
>> Can any one help us in this regard?
>> 
>> Regards
>> Raghunath
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From gdt at lexort.com  Wed Sep  8 17:33:47 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 08 Sep 2021 20:33:47 -0400
Subject: [QGIS-Developer] [Qgis-psc] How to handle upstream Qt fixes
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
 <464d449c-1c97-b2e6-ac4f-65f37a0b97d8@duif.net>
 <CAB28Asi1YT-Nu9-yhUxF3YR2+X-HjtgLBG_FqC4wkBL-KP3ASQ@mail.gmail.com>
Message-ID: <rmiczpir3is.fsf@s1.lexort.com>


Nyall Dawson <nyall.dawson at gmail.com> writes:

> I'd never make the KDE fork a requirement for a bulid -- we'd always
> have to ensure that users can build using the official releases.
> They'd just potentially suffer from upstream Qt bugs which have since
> been fixed in the community fork. (And if we do nothing, they'd be in
> exactly the same situation!!)

I guess then I'm not sure what the question is.  It seems clear:

  qgis source code should build against qt 5.15.2 and also against qtx
  5.15.next (or whatever it's called), and perhaps against some earlier
  qt 5.x

  if something goes wrong that's a qt bug, then probably some reasonable
  effort might be made to accomodate it, but if it's fixed in qtx and
  not in qt-frozen, then perhaps not so much

  maybe qgis would declare that the fork is the preferred source of qt5.

  people who build binaries will choose what they choose.  Maybe there
  would be some sort of "the standard approach is [version-x] for qt"
  guidance statement, and maybe there wouldn't be.

  project-built binaries need to choose

So I'm still not entirely clear what question is on the table

>> Maybe it's time for another 'big gap' in QGIS releases? As in: after
>> 3.22 (LTR) there will be a probably not so stable 4.0 which will
>> have a thorough api cleanup (first), while maybe partially trying to
>> do some pre-work for Qt6? And so hopefully we will have Qt6 packaged
>> more easily at that time?
>
> See https://github.com/qgis/QGIS-Enhancement-Proposals/issues/198 for
> my proposal on how we handle this. I'd suggest that (when we're ready)
> we do a "soft break" and support Qt 6 builds of QGIS 3.x, with the
> intention of moving the Windows and Mac builds to Qt 6. We don't allow
> ANY api breaks which aren't directly related to making QGIS qt6
> compatible, so that plugins will only have to make very minimal
> changes (if any)

comments on QEP198

  I do not follow how qt 5.15.2 won't work on Apple aarch64.  Presumably
  it can be built on Linux/BSD aarch64, and the apple interfaces at the
  source level remain.  Maybe that's out of date, maybe I'm confused.
  Maybe it is fixed in the fork.

  I don't really see how cleaning up deprecation warnings in 5.15, while
  keeping the codebase entirely ok when built with 5.15, is a break,
  other than from older qt5.  If that's what you mean, that's fine  -
  but if you mean something else, I did not follow.

  It's almost a year later, so I wonder how the build w/o deprecation
  warnings is going.  I think you said there's about 4 FTE-weeks more
  work.

  It would be really nice if the next LTR was dual 5.15/6.  (Sorry, I
  have no spare ponys for you.)

>> What is the Qt6 status in Fedora or Suse?
>
> Fedora has qt 6.1 packages from Fedora 34 (we use these on the CI to
> test builds of the core/analysis library on Qt 6). Not sure about SUSE
> personally.

pkgsrc has qt5 5.15.2 currently, and has qt6 packages in our separate
draft repository.  I am not hearing a lot about imminently moving them
to pkgsrc proper.  Overall I get the sense that qt6 has not fully
arrived.  I realize it's been a while formal release of 6.0, but it
seems like enough of a departure that it's difficult.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210908/6da7d5c0/attachment.sig>

From nyall.dawson at gmail.com  Wed Sep  8 18:01:58 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 9 Sep 2021 11:01:58 +1000
Subject: [QGIS-Developer] [Qgis-psc] How to handle upstream Qt fixes
In-Reply-To: <rmiczpir3is.fsf@s1.lexort.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <7b6fc034-d689-f882-1dbf-6a8894eaf511@3liz.com>
 <464d449c-1c97-b2e6-ac4f-65f37a0b97d8@duif.net>
 <CAB28Asi1YT-Nu9-yhUxF3YR2+X-HjtgLBG_FqC4wkBL-KP3ASQ@mail.gmail.com>
 <rmiczpir3is.fsf@s1.lexort.com>
Message-ID: <CAB28AshRqjkKL_9GJrVSVA+YFy=tdAGZ4XT9x+fTauquMEb-0w@mail.gmail.com>

On Thu, 9 Sept 2021 at 10:33, Greg Troxel <gdt at lexort.com> wrote:
>
>
> Nyall Dawson <nyall.dawson at gmail.com> writes:
>
> > I'd never make the KDE fork a requirement for a bulid -- we'd always
> > have to ensure that users can build using the official releases.
> > They'd just potentially suffer from upstream Qt bugs which have since
> > been fixed in the community fork. (And if we do nothing, they'd be in
> > exactly the same situation!!)
>
> I guess then I'm not sure what the question is.  It seems clear:
>
>   qgis source code should build against qt 5.15.2 and also against qtx
>   5.15.next (or whatever it's called), and perhaps against some earlier
>   qt 5.x
>
>   if something goes wrong that's a qt bug, then probably some reasonable
>   effort might be made to accomodate it, but if it's fixed in qtx and
>   not in qt-frozen, then perhaps not so much
>
>   maybe qgis would declare that the fork is the preferred source of qt5.
>
>   people who build binaries will choose what they choose.  Maybe there
>   would be some sort of "the standard approach is [version-x] for qt"
>   guidance statement, and maybe there wouldn't be.
>
>   project-built binaries need to choose
>
> So I'm still not entirely clear what question is on the table

Whether QGIS will get its money worth from contracting KDAB to fix Qt
issues in the 5.15.next fork, or whether we "give up" on Qt upstream
fixes until we can move wholesale to Qt 6.

>
> >> Maybe it's time for another 'big gap' in QGIS releases? As in: after
> >> 3.22 (LTR) there will be a probably not so stable 4.0 which will
> >> have a thorough api cleanup (first), while maybe partially trying to
> >> do some pre-work for Qt6? And so hopefully we will have Qt6 packaged
> >> more easily at that time?
> >
> > See https://github.com/qgis/QGIS-Enhancement-Proposals/issues/198 for
> > my proposal on how we handle this. I'd suggest that (when we're ready)
> > we do a "soft break" and support Qt 6 builds of QGIS 3.x, with the
> > intention of moving the Windows and Mac builds to Qt 6. We don't allow
> > ANY api breaks which aren't directly related to making QGIS qt6
> > compatible, so that plugins will only have to make very minimal
> > changes (if any)
>
> comments on QEP198
>
>   I do not follow how qt 5.15.2 won't work on Apple aarch64.  Presumably
>   it can be built on Linux/BSD aarch64, and the apple interfaces at the
>   source level remain.  Maybe that's out of date, maybe I'm confused.
>   Maybe it is fixed in the fork.

Upstream has stated multiple times that M1 isn't supported on Qt 5.15,
and that there's known issues which won't be fixed. The new
architecture requires Qt 6 for proper support. I can't comment on the
severity of those known issues, but suffice to say if Qt 5 works on M1
then it's more of a happy accident then anything stable...!

>
>   I don't really see how cleaning up deprecation warnings in 5.15, while
>   keeping the codebase entirely ok when built with 5.15, is a break,
>   other than from older qt5.  If that's what you mean, that's fine  -
>   but if you mean something else, I did not follow.

I'm referring to QGIS specific deprecated methods, not Qt ones.
There's lots of deprecated methods throughout the QGIS api which have
been left in place for plugins only, and I'm proposing that we
**don't** touch these.

>
>   It's almost a year later, so I wonder how the build w/o deprecation
>   warnings is going.  I think you said there's about 4 FTE-weeks more
>   work.

We can build without any deprecation warnings, there's no issue there.
But Qt upstream was lying (misguided?) when they claimed that code
which builds without warning on Qt 5.15 would "just work" on Qt 6.

Nyall

>
>   It would be really nice if the next LTR was dual 5.15/6.  (Sorry, I
>   have no spare ponys for you.)
>
> >> What is the Qt6 status in Fedora or Suse?
> >
> > Fedora has qt 6.1 packages from Fedora 34 (we use these on the CI to
> > test builds of the core/analysis library on Qt 6). Not sure about SUSE
> > personally.
>
> pkgsrc has qt5 5.15.2 currently, and has qt6 packages in our separate
> draft repository.  I am not hearing a lot about imminently moving them
> to pkgsrc proper.  Overall I get the sense that qt6 has not fully
> arrived.  I realize it's been a while formal release of 6.0, but it
> seems like enough of a departure that it's difficult.

From johannes.kroeger at wheregroup.com  Thu Sep  9 01:06:46 2021
From: johannes.kroeger at wheregroup.com (=?UTF-8?Q?Johannes_Kr=c3=b6ger_=28WhereGroup=29?=)
Date: Thu, 9 Sep 2021 10:06:46 +0200
Subject: [QGIS-Developer] Rendering (simple) labels before background raster
 layer finishes?
Message-ID: <3f126958-1f7a-3740-614c-b7fc6ffdc0d8@wheregroup.com>

Hey list,

I have a fast vector layer in the foreground and a slow raster tile 
layer in the background. The vector layer has some simple labels. 
Neither layer uses any blending modes to my knowledge.

For rendering the labels QGIS waits until the layers have finished 
rendering which takes a while.
Our users can use the labels to orient themselves and to decide where to 
pan and zoom.
They could work faster if the labels would appear early on, before the 
slow raster layer finished rendering.

So I would like to have the labels render earlier, before the raster 
layer finishes loading, and then "just" composite(?) the scene for the 
final canvas image when done. Is there a reasonable way in PyQGIS to 
achieve that?

When I manually disable the raster layer, move the map, let it finish 
rendering (so the vector data and labels are visible) and then re-enable 
the raster layer, it plops up in the background without the labels being 
visibly re-rendered themselves so it seems technically possible.

As a hacky approach I tried disabling the raster layer right when the 
https://qgis.org/pyqgis/master/gui/QgsMapCanvas.html#qgis.gui.QgsMapCanvas.renderStarting 
signal, then re-enabling it when the render is done but of course that 
introduces "white flashes" from the background vanishing, then 
reappearing. Maybe it would be possible to tell QGIS to not request any 
new data/render for the raster layer for a while but use the cached 
render it currently has until the labels are done, then fetch and render 
for the updated extents?

Cheers, Hannes

-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_0xBF7B268A77C202D5.asc
Type: application/pgp-keys
Size: 2471 bytes
Desc: OpenPGP public key
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210909/8b5f13b8/attachment.key>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_signature
Type: application/pgp-signature
Size: 665 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210909/8b5f13b8/attachment.sig>

From andrea.antonello at gmail.com  Thu Sep  9 04:39:13 2021
From: andrea.antonello at gmail.com (andrea antonello)
Date: Thu, 9 Sep 2021 13:39:13 +0200
Subject: [QGIS-Developer] Project definition specifics
Message-ID: <CACck5jMPNTW2ZVh5-_9Nrq-qNxKBmmzrisnJRcRWb3JXv1DSrg@mail.gmail.com>

Hello developers,
I would like to investigate the possibility of adding support to load a
qgis project into our field mapping application [1]. Could someone please
point me to documentation or specs about the project format? Ideally it
would contain a description of the xml schema.

Thanks for any support,
Andrea


[1] https://www.geopaparazzi.org/smash/index.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210909/8d95e5c6/attachment.html>

From andrea.antonello at gmail.com  Thu Sep  9 04:53:04 2021
From: andrea.antonello at gmail.com (andrea antonello)
Date: Thu, 9 Sep 2021 13:53:04 +0200
Subject: [QGIS-Developer] Interaction API?
Message-ID: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>

Hi developers,
I assume I know the answer already, but it won't hurt to ask. :-)

Is there any kind of API to interact with QGIS from an external software?
I teach geographic scripting with a generic non-GIS tool, and always
wondered if there is for example a way to load a file into a QGIS project
by calling some kind of API.

Thanks,
Andrea
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210909/0ec4d177/attachment-0001.html>

From giovanni.allegri at gmail.com  Thu Sep  9 06:33:30 2021
From: giovanni.allegri at gmail.com (G. Allegri)
Date: Thu, 9 Sep 2021 15:33:30 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
Message-ID: <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>

Hi Andrea,

I guess you mean QGIS Desktop, right? AFAIK the only option is to use its
Python API, which requires all the PyQGIS
<https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>
and binary libs to be available inside the environment.

Giovanni


Il giorno gio 9 set 2021 alle ore 13:53 andrea antonello <
andrea.antonello at gmail.com> ha scritto:

> Hi developers,
> I assume I know the answer already, but it won't hurt to ask. :-)
>
> Is there any kind of API to interact with QGIS from an external software?
> I teach geographic scripting with a generic non-GIS tool, and always
> wondered if there is for example a way to load a file into a QGIS project
> by calling some kind of API.
>
> Thanks,
> Andrea
>
>
>
>
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210909/7398ef1d/attachment.html>

From adenaculture at gmail.com  Thu Sep  9 06:35:19 2021
From: adenaculture at gmail.com (C Hamilton)
Date: Thu, 9 Sep 2021 09:35:19 -0400
Subject: [QGIS-Developer] Why is the processing method outputWkbType()
 called by QGIS outside of the algorithm
Message-ID: <CABPxTTorq2QRzgd91CCiaEqfMqO2xV=sbRoyzFzfS83xqkgR2A@mail.gmail.com>

I updated a number of my Shape Tools plugin routines to
QgsProcessingFeatureBasedAlgorithm. One of the methods is outputWkbType
which returns the WKB type. For my algorithm that type is determined by
parameters selected when the user runs the algorithm. The variable used to
determine the output type was initialized when the user runs the algorithm.
This worked fine with the LTR release, but I found that when the user
clicks in the Locator service text area in QGIS 3.20, QGIS is querying all
of the outputWkbType() processing methods and was causing an exception
because I had not initialized the variable yet.

I don't know what the output wkb type is going to be until the user runs
the algorithm, so why is QGIS spuriously calling all the processing
algorithm outputWkbType() methods in QGIS 3.20. Apparently, it also happens
when "edit in place" is active. If this is truly how you intend this to
operate, then it would be good to include a note in the API documentation
that this method can be called by QGIS and to make sure it can return a
valid entry by initializing any variables in initParameters(). If this
behavior is a bug, let me know and I will put in a ticket.

Thanks,

Calvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210909/46fa7758/attachment.html>

From rdmailings at duif.net  Thu Sep  9 12:57:49 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Thu, 9 Sep 2021 21:57:49 +0200
Subject: [QGIS-Developer] gpkgext_relations table in gpkg?
Message-ID: <19daaff2-46bc-c829-c539-a17343245227@duif.net>

Hi Devs,

via: 
https://gis.stackexchange.com/questions/338640/foreign-keys-in-geopackage
I found:
http://docs.opengeospatial.org/is/18-000/18-000.html#_gpkgext_relations
which was new to me...
BUT for QGIS seems pretty helpfull in finding foreign key relations for domain/lookup tables/widgets?

Anybody experience/examples with this?

Regards,

Richard Duivenvoorde

From nyall.dawson at gmail.com  Thu Sep  9 16:12:21 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 10 Sep 2021 09:12:21 +1000
Subject: [QGIS-Developer] gpkgext_relations table in gpkg?
In-Reply-To: <19daaff2-46bc-c829-c539-a17343245227@duif.net>
References: <19daaff2-46bc-c829-c539-a17343245227@duif.net>
Message-ID: <CAB28Asi6MXw_j7BQAJW7ROSoB2PdrDxhkPnwzP8AW+z+6cUTCQ@mail.gmail.com>

On Fri, 10 Sept 2021 at 05:58, Richard Duivenvoorde <rdmailings at duif.net> wrote:
>
> Hi Devs,
>
> via:
> https://gis.stackexchange.com/questions/338640/foreign-keys-in-geopackage
> I found:
> http://docs.opengeospatial.org/is/18-000/18-000.html#_gpkgext_relations
> which was new to me...
> BUT for QGIS seems pretty helpfull in finding foreign key relations for domain/lookup tables/widgets?
>
> Anybody experience/examples with this?

It's not supported by GDAL yet -- see
https://gdal.org/drivers/vector/gpkg.html#level-of-support-of-geopackage-extensions
. We'd first need generic API in GDAL for getting/setting
relationships, and then to implement this in the GeoPackage GDAL
driver. Then QGIS would need to use the generic GDAL api to
automatically read and setup the corresponding relationships on
datasets.

It's high on my wishlist too, but we need to make sure it's done
correctly (i.e. upstream in GDAL) and don't hack it in on the QGIS
side alone. There's other formats which store relationship information
(e.g. File/Personal Geodatabases) and we don't want all this
format-specific logic inside QGIS.

(FWIW I've been trying to find a sponsor for this for a while now,
please let me know if you know of any interested parties!)

Nyall

From nyall.dawson at gmail.com  Thu Sep  9 16:14:39 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 10 Sep 2021 09:14:39 +1000
Subject: [QGIS-Developer] Why is the processing method outputWkbType()
 called by QGIS outside of the algorithm
In-Reply-To: <CABPxTTorq2QRzgd91CCiaEqfMqO2xV=sbRoyzFzfS83xqkgR2A@mail.gmail.com>
References: <CABPxTTorq2QRzgd91CCiaEqfMqO2xV=sbRoyzFzfS83xqkgR2A@mail.gmail.com>
Message-ID: <CAB28AshadLdvMSvpPB0+7+bMTBi2JdOLG0PUGO+=7P182QqyDQ@mail.gmail.com>

On Thu, 9 Sept 2021 at 23:35, C Hamilton <adenaculture at gmail.com> wrote:
>
> I updated a number of my Shape Tools plugin routines to QgsProcessingFeatureBasedAlgorithm. One of the methods is outputWkbType which returns the WKB type. For my algorithm that type is determined by parameters selected when the user runs the algorithm. The variable used to determine the output type was initialized when the user runs the algorithm. This worked fine with the LTR release, but I found that when the user clicks in the Locator service text area in QGIS 3.20, QGIS is querying all of the outputWkbType() processing methods and was causing an exception because I had not initialized the variable yet.
>
> I don't know what the output wkb type is going to be until the user runs the algorithm, so why is QGIS spuriously calling all the processing algorithm outputWkbType() methods in QGIS 3.20. Apparently, it also happens when "edit in place" is active. If this is truly how you intend this to operate, then it would be good to include a note in the API documentation that this method can be called by QGIS and to make sure it can return a valid entry by initializing any variables in initParameters(). If this behavior is a bug, let me know and I will put in a ticket.

It's used by the default implementation of
QgsProcessingFeatureBasedAlgorithm.supportInPlaceEdits() to determine
if the algorithm changes the geometry type of a layer (making it
incompatible with in place editing modes). If you re-implement
supportInPlaceEdits() for your algorithm subclasses then you can avoid
this unwanted call.

Nyall

From nyall.dawson at gmail.com  Thu Sep  9 16:16:40 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 10 Sep 2021 09:16:40 +1000
Subject: [QGIS-Developer] Project definition specifics
In-Reply-To: <CACck5jMPNTW2ZVh5-_9Nrq-qNxKBmmzrisnJRcRWb3JXv1DSrg@mail.gmail.com>
References: <CACck5jMPNTW2ZVh5-_9Nrq-qNxKBmmzrisnJRcRWb3JXv1DSrg@mail.gmail.com>
Message-ID: <CAB28AshmEF+w9iCzdsuAxpd7UMcBkJ34mc6czJsOJGSfJp=sfg@mail.gmail.com>

On Thu, 9 Sept 2021 at 21:39, andrea antonello
<andrea.antonello at gmail.com> wrote:
>
> Hello developers,
> I would like to investigate the possibility of adding support to load a qgis project into our field mapping application [1]. Could someone please point me to documentation or specs about the project format? Ideally it would contain a description of the xml schema.

Short answer is: formal schema specs don't exist.

Long answer: the only way to determine the XML structure is via the
QGIS source code, but even then it's spread **everywhere** throughout
QGIS. And it changes version by version without any notice, with no
guarantee of backward compatibility. The official project advice is
not to try to read/write the XML directly, but to instead use the QGIS
API to handle this.

Hope that helps!
Nyall




>
> Thanks for any support,
> Andrea
>
>
> [1] https://www.geopaparazzi.org/smash/index.html
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From nyall.dawson at gmail.com  Thu Sep  9 16:21:06 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 10 Sep 2021 09:21:06 +1000
Subject: [QGIS-Developer] Rendering (simple) labels before background
 raster layer finishes?
In-Reply-To: <3f126958-1f7a-3740-614c-b7fc6ffdc0d8@wheregroup.com>
References: <3f126958-1f7a-3740-614c-b7fc6ffdc0d8@wheregroup.com>
Message-ID: <CAB28Ash+eDrPOdWgPYqM65CZ-=Ltg-ktEL4buTHUyEEg_k09fQ@mail.gmail.com>

On Thu, 9 Sept 2021 at 18:07, Johannes Kr?ger (WhereGroup)
<johannes.kroeger at wheregroup.com> wrote:
>
> Hey list,
>
> I have a fast vector layer in the foreground and a slow raster tile
> layer in the background. The vector layer has some simple labels.
> Neither layer uses any blending modes to my knowledge.
>
> For rendering the labels QGIS waits until the layers have finished
> rendering which takes a while.
> Our users can use the labels to orient themselves and to decide where to
> pan and zoom.
> They could work faster if the labels would appear early on, before the
> slow raster layer finished rendering.

Yep, Mathieu (@nirvn) and I have previously discussed this, and it's
an artificial constraint which should definitely be removed. There's
no reason we can't start rendering labels as soon as all the layers
which are participating in the label results are rendered, and then
continue rendering other slow layers (rasters, point clouds, mesh,
non-labeled vectors) in the background while the labeling calculates
and renders.

It's not a trivial change unfortunately, which is the only reason it's
still acting like it is and neither Mathieu or I have just fixed it
ourselves out of our own personal frustration! I'd estimate 3-4 days
developer effort to implement in the QGIS code and refactor all the
necessary pathways to allow this optimisation. (Mail me off-list if
you'd like to discuss sponsoring this change!)

Nyall



>
> So I would like to have the labels render earlier, before the raster
> layer finishes loading, and then "just" composite(?) the scene for the
> final canvas image when done. Is there a reasonable way in PyQGIS to
> achieve that?
>
> When I manually disable the raster layer, move the map, let it finish
> rendering (so the vector data and labels are visible) and then re-enable
> the raster layer, it plops up in the background without the labels being
> visibly re-rendered themselves so it seems technically possible.
>
> As a hacky approach I tried disabling the raster layer right when the
> https://qgis.org/pyqgis/master/gui/QgsMapCanvas.html#qgis.gui.QgsMapCanvas.renderStarting
> signal, then re-enabling it when the render is done but of course that
> introduces "white flashes" from the background vanishing, then
> reappearing. Maybe it would be possible to tell QGIS to not request any
> new data/render for the raster layer for a while but use the cached
> render it currently has until the labels are done, then fetch and render
> for the updated extents?
>
> Cheers, Hannes
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From andrea.antonello at gmail.com  Thu Sep  9 23:31:00 2021
From: andrea.antonello at gmail.com (andrea antonello)
Date: Fri, 10 Sep 2021 08:31:00 +0200
Subject: [QGIS-Developer] Project definition specifics
In-Reply-To: <CAB28AshmEF+w9iCzdsuAxpd7UMcBkJ34mc6czJsOJGSfJp=sfg@mail.gmail.com>
References: <CACck5jMPNTW2ZVh5-_9Nrq-qNxKBmmzrisnJRcRWb3JXv1DSrg@mail.gmail.com>
 <CAB28AshmEF+w9iCzdsuAxpd7UMcBkJ34mc6czJsOJGSfJp=sfg@mail.gmail.com>
Message-ID: <CACck5jO_N95-jJoYWF528xDOBRjSHTC6wiyVzLTtg6sDN-ncjA@mail.gmail.com>

Dear Nyall,
thanks a ton for your reply.

Short answer is: formal schema specs don't exist.
>
> Long answer: the only way to determine the XML structure is via the
> QGIS source code, but even then it's spread **everywhere** throughout
> QGIS. And it changes version by version without any notice, with no
> guarantee of backward compatibility. The official project advice is
> not to try to read/write the XML directly, but to instead use the QGIS
> API to handle this.


> Hope that helps!
>

That did indeed help a lot, even if not in the direction I hoped for.
I don't have the luxury to access the QGIS API. The mobile app is written
in flutter and that is the language I will have to use, so reading xml
would be a must.
That said, I assume I have 2 possibilities:
1. forget about it
2. start supporting bits and pieces of the project file and try to maintain
it for specific versions, but that sounds like a little nightmare.

Thanks again,
Andrea






> Nyall
>
>
>
>
> >
> > Thanks for any support,
> > Andrea
> >
> >
> > [1] https://www.geopaparazzi.org/smash/index.html
> > _______________________________________________
> > QGIS-Developer mailing list
> > QGIS-Developer at lists.osgeo.org
> > List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> > Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/21d50659/attachment.html>

From jochen.schwarze at live.unigis.net  Fri Sep 10 02:25:38 2021
From: jochen.schwarze at live.unigis.net (Jochen Schwarze)
Date: Fri, 10 Sep 2021 09:25:38 +0000
Subject: [QGIS-Developer] Pay for Bugfixes?
Message-ID: <DM6PR01MB5530854513D99C6672CC0B71B4D69@DM6PR01MB5530.prod.exchangelabs.com>

Dear developer community,

On behalf of the German QGIS Usergroup (QGIS-DE e.V.), I am addressing this developer list to inquire whether it is possible to find developers in this way who can do bug fixes (or work on feature requests rsp.) for a fee. Possibly a forum can be established in this way to award such and similar contracts.

As a kind of test, we think of eliminating the bugs in the context of the legend panel / symbol size (https://github.com/qgis/QGIS/issues/39681, related: https://github.com/qgis/QGIS/issues/33755, https://github.com/qgis/QGIS/pull/39777, https://github.com/qgis/QGIS/issues/36037, https://github.com/qgis/QGIS/issues/29119 as well as https://github.com/qgis/QGIS/issues/27182). In the case of such an order coming out, all this would have to be more specifically described in a proposal.

Are there resources for such an approach and is this list the right place for our concerns at all? If not, what could be a more suitable platform?

Thank you in advance, best regards,

Jochen Schwarze
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/92cd9b87/attachment-0001.html>

From apasotti at gmail.com  Fri Sep 10 02:39:09 2021
From: apasotti at gmail.com (Alessandro Pasotti)
Date: Fri, 10 Sep 2021 11:39:09 +0200
Subject: [QGIS-Developer] Pay for Bugfixes?
In-Reply-To: <DM6PR01MB5530854513D99C6672CC0B71B4D69@DM6PR01MB5530.prod.exchangelabs.com>
References: <DM6PR01MB5530854513D99C6672CC0B71B4D69@DM6PR01MB5530.prod.exchangelabs.com>
Message-ID: <CAL5Q670ZJR3fywafn7bVB2dAGjPisGpeQ0muW+zB4dds4MpChQ@mail.gmail.com>

Hi Jochen,

you can find a list of QGIS professionals here:
https://www.qgis.org/en/site/forusers/commercial_support.html#core-contributors

The core contributors section lists companies/consultants which have done
QGIS development in the past and are known active QGIS community members.

If you want to know who have been the most active developers in the last
(say) 5 years you can have a look to
https://github.com/qgis/QGIS/graphs/contributors?from=2016-12-18&to=2021-09-10&type=c

You can adjust the time range of course.

The best approach is probably to contact the individual developers or
companies but also dropping an email here can work.

Kind regards.


On Fri, Sep 10, 2021 at 11:25 AM Jochen Schwarze <
jochen.schwarze at live.unigis.net> wrote:

> Dear developer community,
>
> On behalf of the German QGIS Usergroup (QGIS-DE e.V.), I am addressing
> this developer list to inquire whether it is possible to find developers in
> this way who can do bug fixes (or work on feature requests rsp.) for a fee.
> Possibly a forum can be established in this way to award such and similar
> contracts.
>
> As a kind of test, we think of eliminating the bugs in the context of the
> legend panel / symbol size (https://github.com/qgis/QGIS/issues/39681,
> related: https://github.com/qgis/QGIS/issues/33755,
> https://github.com/qgis/QGIS/pull/39777,
> https://github.com/qgis/QGIS/issues/36037,
> https://github.com/qgis/QGIS/issues/29119 as well as
> https://github.com/qgis/QGIS/issues/27182). In the case of such an order
> coming out, all this would have to be more specifically described in a
> proposal.
>
> Are there resources for such an approach and is this list the right place
> for our concerns at all? If not, what could be a more suitable platform?
>
> Thank you in advance, best regards,
>
> Jochen Schwarze
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>


-- 
Alessandro Pasotti
QCooperative:  www.qcooperative.net
ItOpen:   www.itopen.it
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/9b31cab5/attachment.html>

From rldhont at gmail.com  Fri Sep 10 02:51:00 2021
From: rldhont at gmail.com (=?UTF-8?Q?Ren=c3=a9-Luc_Dhont?=)
Date: Fri, 10 Sep 2021 11:51:00 +0200
Subject: [QGIS-Developer] Test failed because the version.qgis.org
 certificat expired on the september 10 2021
Message-ID: <d034c747-fe2a-6a02-1eba-3bf778aff3b5@gmail.com>

Hi PSC and Devs,

The TestQgsProcessingAlgs::fileDownloader() failed because the 
version.qgis.org certificat expired on the september 10 2021.

So PR merging is blocked.

Regards,
Ren?-Luc
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/5e834ee9/attachment.html>

From rdmailings at duif.net  Fri Sep 10 02:55:04 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Fri, 10 Sep 2021 11:55:04 +0200
Subject: [QGIS-Developer] Test failed because the version.qgis.org
 certificat expired on the september 10 2021
In-Reply-To: <d034c747-fe2a-6a02-1eba-3bf778aff3b5@gmail.com>
References: <d034c747-fe2a-6a02-1eba-3bf778aff3b5@gmail.com>
Message-ID: <5420fc5b-bb88-40da-a62a-075bbc5e3f03@duif.net>



Sorry sorry, me bad...

This is the old qgis2, I have to update it by hand every 3 months

Fixed now

Regards,

Richard Duivenvoorde

On 9/10/21 11:51 AM, Ren?-Luc Dhont wrote:
> Hi PSC and Devs,
> 
> The TestQgsProcessingAlgs::fileDownloader() failed because the version.qgis.org certificat expired on the september 10 2021.
> 
> So PR merging is blocked.
> 
> Regards,
> Ren?-Luc
> 
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 


From tobias.wendorff at tu-dortmund.de  Fri Sep 10 02:53:30 2021
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Fri, 10 Sep 2021 11:53:30 +0200
Subject: [QGIS-Developer] Test failed because the version.qgis.org
 certificat expired on the september 10 2021
In-Reply-To: <d034c747-fe2a-6a02-1eba-3bf778aff3b5@gmail.com>
References: <d034c747-fe2a-6a02-1eba-3bf778aff3b5@gmail.com>
Message-ID: <81464573-116f-b677-a4a6-5670cb369cef@tu-dortmund.de>

Am 10.09.2021 um 11:51 schrieb Ren?-Luc Dhont:
 >
> The TestQgsProcessingAlgs::fileDownloader() failed because the 
> version.qgis.org certificat expired on the september 10 2021.
> 
> So PR merging is blocked.

Also affected:

nocache.qgis.org
stripe.qgis.org
ubuntu.qgis.org
version.qgis.org

From andrea.antonello at gmail.com  Fri Sep 10 05:09:39 2021
From: andrea.antonello at gmail.com (andrea antonello)
Date: Fri, 10 Sep 2021 14:09:39 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
Message-ID: <CACck5jO1GWkv3wN-_Ck85BWnEnuNY=uLNe+-Z__e90oRVQ-Dtg@mail.gmail.com>

Hi Gio,


> I guess you mean QGIS Desktop, right? AFAIK the only option is to use its
> Python API, which requires all the PyQGIS
> <https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>
> and binary libs to be available inside the environment.
>

I thought so. Thanks for confirming.

Cheers,
Andrea



>
> Giovanni
>
>
> Il giorno gio 9 set 2021 alle ore 13:53 andrea antonello <
> andrea.antonello at gmail.com> ha scritto:
>
>> Hi developers,
>> I assume I know the answer already, but it won't hurt to ask. :-)
>>
>> Is there any kind of API to interact with QGIS from an external software?
>> I teach geographic scripting with a generic non-GIS tool, and always
>> wondered if there is for example a way to load a file into a QGIS project
>> by calling some kind of API.
>>
>> Thanks,
>> Andrea
>>
>>
>>
>>
>>
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/285958b4/attachment.html>

From rdmailings at duif.net  Fri Sep 10 05:15:47 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Fri, 10 Sep 2021 14:15:47 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
Message-ID: <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>

On 9/9/21 3:33 PM, G. Allegri wrote:
> Hi Andrea,
> 
> I guess you mean QGIS Desktop, right? AFAIK the only option is to use its Python API, which requires all the PyQGIS <https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html> and binary libs to be available inside the environment.

Just curious: but would it be possible to 'attach' your script to a running/visible instance of QGIS?

From: https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications

So: I start QGIS, and then from some python console (NOT the internal one), I can try to load (and show!) a shapefile in current mapcanvas? Or pan/zoom? That would be cool for demonstrations...

Regards,

Richard Duivenvoorde



From rdmailings at duif.net  Fri Sep 10 05:26:19 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Fri, 10 Sep 2021 14:26:19 +0200
Subject: [QGIS-Developer] WFS/QGIS/GML issue
Message-ID: <6bac2003-b497-516e-6672-0d96d89a3ed0@duif.net>

I hit a nice QGIS WFS issue recently, which (I think) bit a lot of users..

Created a very reproducible issue:

https://github.com/qgis/QGIS/issues/45017

Please let me know if more info is needed or you have an immediate clue.

Regards,

Richard Duivenvoorde


From giovanni.allegri at gmail.com  Fri Sep 10 05:30:35 2021
From: giovanni.allegri at gmail.com (G. Allegri)
Date: Fri, 10 Sep 2021 14:30:35 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
 <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
Message-ID: <CAB4g1=wDXqn3q_afU-yOHopxkVAA5u2WNjJJ8d58-aF1ZPs-1A@mail.gmail.com>

Of course you can use PyQGIS to run standalone scripts, not only for
plugins, and that's what I was assuming from Andrea's request.
We have been using this approach in several contexts, even headless (server
applications).

Another option could be run a "micro server" inside a pyqgis plugin and
serve an ad-hoc API from it :)

Giovanni

Il giorno ven 10 set 2021 alle ore 14:15 Richard Duivenvoorde <
rdmailings at duif.net> ha scritto:

> On 9/9/21 3:33 PM, G. Allegri wrote:
> > Hi Andrea,
> >
> > I guess you mean QGIS Desktop, right? AFAIK the only option is to use
> its Python API, which requires all the PyQGIS <
> https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>
> and binary libs to be available inside the environment.
>
> Just curious: but would it be possible to 'attach' your script to a
> running/visible instance of QGIS?
>
> From:
> https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications
>
> So: I start QGIS, and then from some python console (NOT the internal
> one), I can try to load (and show!) a shapefile in current mapcanvas? Or
> pan/zoom? That would be cool for demonstrations...
>
> Regards,
>
> Richard Duivenvoorde
>
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/575b5c24/attachment.html>

From andrea.antonello at gmail.com  Fri Sep 10 05:38:33 2021
From: andrea.antonello at gmail.com (andrea antonello)
Date: Fri, 10 Sep 2021 14:38:33 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
 <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
Message-ID: <CACck5jNJkFz5Vn62YL9GYu1ZY9ODSZNGxR86PGPdKrhiw-5UsQ@mail.gmail.com>

Hi Richard,

> I guess you mean QGIS Desktop, right? AFAIK the only option is to use its
> Python API, which requires all the PyQGIS <
> https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>
> and binary libs to be available inside the environment.
>
> Just curious: but would it be possible to 'attach' your script to a
> running/visible instance of QGIS?
>
> From:
> https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications
>
> So: I start QGIS, and then from some python console (NOT the internal
> one), I can try to load (and show!) a shapefile in current mapcanvas? Or
> pan/zoom? That would be cool for demonstrations...
>

I have to apologize and give a little context. I teach geographic scripting
at a local university. Students come from the previous geomatics course
with Arc.
Since I have no intention to teach Arc scripting, I have been doing it for
several years now happily using a scripting environment based on Geoscript
Groovy [1].
So we are talking about a completely different programming language.
In the last year I have been able to pull some of them over to QGIS, but
the traction is low. So I was hoping to be able to attach to some APi to
load results into a running QGIS instance. That would be really cool,
surely convince them and I would have been able to develop the geoscript
part necessary to my environment.

In the meanwhile I read Gio's comment: "Another option could be run a
"micro server" inside a pyqgis plugin and serve an ad-hoc API from it :)"

Yes, that would have been my dream :-)

Thanks for your comments.

Andrea


[1] https://jericks.github.io/geoscript-groovy-cookbook


>
> Regards,
>
> Richard Duivenvoorde
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/85ec1d9f/attachment.html>

From johannes.kroeger at wheregroup.com  Fri Sep 10 07:21:35 2021
From: johannes.kroeger at wheregroup.com (=?UTF-8?Q?Johannes_Kr=c3=b6ger_=28WhereGroup=29?=)
Date: Fri, 10 Sep 2021 16:21:35 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <CACck5jNJkFz5Vn62YL9GYu1ZY9ODSZNGxR86PGPdKrhiw-5UsQ@mail.gmail.com>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
 <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
 <CACck5jNJkFz5Vn62YL9GYu1ZY9ODSZNGxR86PGPdKrhiw-5UsQ@mail.gmail.com>
Message-ID: <26658832-5692-22c8-a909-763a8e57b0e0@wheregroup.com>

Hi Andrea,

could you make the groovy part write a file or to a database that you 
have your students load as layer in QGIS and which will refresh from its 
source automatically on map canvas interaction? That might be a hacky 
but sufficient solution if I understand your goal correctly. If you 
write to a WKT file for example and load that in QGIS in watch mode, 
QGIS will automatically notice chances and refresh it without any 
interaction necessary (at least on Linux)!

Otherwise it is very well be possible to implement a "pipe" into QGIS / 
API for QGIS using various techniques (maybe even expose iface and some 
nasty "exec"ing :D ). E. g. check out 
https://github.com/gem/oq-irmt-qgis/tree/qgis3-socketserver which uses 
websockets.

Cheers, Hannes


Am 10.09.21 um 14:38 schrieb andrea antonello:
> Hi Richard,
>
>     > I guess you mean QGIS Desktop, right? AFAIK the only option is
>     to use its Python API, which requires all the PyQGIS
>     <https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html
>     <https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>>
>     and binary libs to be available inside the environment.
>
>     Just curious: but would it be possible to 'attach' your script to
>     a running/visible instance of QGIS?
>
>     From:
>     https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications
>     <https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications>
>
>     So: I start QGIS, and then from some python console (NOT the
>     internal one), I can try to load (and show!) a shapefile in
>     current mapcanvas? Or pan/zoom? That would be cool for
>     demonstrations...
>
>
> I have to apologize and give a little context. I teach geographic 
> scripting at a local university. Students come from the previous 
> geomatics course with Arc.
> Since I have no intention to teach Arc scripting, I have been doing it 
> for several years now happily using a scripting environment based on 
> Geoscript Groovy [1].
> So we are talking about a completely different programming language.
> In the last year I have been able to pull some of them over to QGIS, 
> but the traction is low. So I was hoping to be able to attach to some 
> APi to load results into a running QGIS instance. That would be really 
> cool, surely convince?them and I would have been able to develop the 
> geoscript part necessary to?my?environment.
>
> In the meanwhile I read Gio's comment: "Another option could be run?a 
> "micro server" inside a pyqgis plugin and serve an ad-hoc API from it :)"
>
> Yes, that would have been my dream :-)
>
> Thanks for your comments.
>
> Andrea
>
>
> [1] https://jericks.github.io/geoscript-groovy-cookbook 
> <https://jericks.github.io/geoscript-groovy-cookbook>
>
>
>     Regards,
>
>     Richard Duivenvoorde
>
>
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

-- 
Johannes Kr?ger / GIS-Entwickler/-Berater
WhereGroup GmbH
Eifelstra?e 7
53119 Bonn
Germany

Fon: +49 (0)228 / 90 90 38 - 36
Fax: +49 (0)228 / 90 90 38 - 11

johannes.kroeger at wheregroup.com
www.wheregroup.com
Gesch?ftsf?hrer:
Olaf Knopp, Peter Stamm
Amtsgericht Bonn, HRB 9885
-------------------------------

---------------------------------------------
  Aufwind durch Wissen!
  Jetzt neu: Web-Seminare und Online-Schulungen
  bei der www.foss-academy.com
---------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/d65bfd08/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_0xBF7B268A77C202D5.asc
Type: application/pgp-keys
Size: 2471 bytes
Desc: OpenPGP public key
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/d65bfd08/attachment-0001.key>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_signature
Type: application/pgp-signature
Size: 665 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/d65bfd08/attachment-0001.sig>

From johannes.kroeger at wheregroup.com  Fri Sep 10 07:24:44 2021
From: johannes.kroeger at wheregroup.com (=?UTF-8?Q?Johannes_Kr=c3=b6ger_=28WhereGroup=29?=)
Date: Fri, 10 Sep 2021 16:24:44 +0200
Subject: [QGIS-Developer] Rendering (simple) labels before background
 raster layer finishes?
In-Reply-To: <CAB28Ash+eDrPOdWgPYqM65CZ-=Ltg-ktEL4buTHUyEEg_k09fQ@mail.gmail.com>
References: <3f126958-1f7a-3740-614c-b7fc6ffdc0d8@wheregroup.com>
 <CAB28Ash+eDrPOdWgPYqM65CZ-=Ltg-ktEL4buTHUyEEg_k09fQ@mail.gmail.com>
Message-ID: <b595d1fd-d6b3-995c-7422-361664c8fc25@wheregroup.com>

Oh I can imagine how many changes this might require... :\

I'll try to lobby for funding, maybe we are lucky!

Thank you,
Hannes

> Yep, Mathieu (@nirvn) and I have previously discussed this, and it's
> an artificial constraint which should definitely be removed. There's
> no reason we can't start rendering labels as soon as all the layers
> which are participating in the label results are rendered, and then
> continue rendering other slow layers (rasters, point clouds, mesh,
> non-labeled vectors) in the background while the labeling calculates
> and renders.
>
> It's not a trivial change unfortunately, which is the only reason it's
> still acting like it is and neither Mathieu or I have just fixed it
> ourselves out of our own personal frustration! I'd estimate 3-4 days
> developer effort to implement in the QGIS code and refactor all the
> necessary pathways to allow this optimisation. (Mail me off-list if
> you'd like to discuss sponsoring this change!)
>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_0xBF7B268A77C202D5.asc
Type: application/pgp-keys
Size: 2471 bytes
Desc: OpenPGP public key
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/a5e51818/attachment.key>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_signature
Type: application/pgp-signature
Size: 665 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/a5e51818/attachment.sig>

From giovanni.allegri at gmail.com  Fri Sep 10 08:38:58 2021
From: giovanni.allegri at gmail.com (G. Allegri)
Date: Fri, 10 Sep 2021 17:38:58 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <26658832-5692-22c8-a909-763a8e57b0e0@wheregroup.com>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
 <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
 <CACck5jNJkFz5Vn62YL9GYu1ZY9ODSZNGxR86PGPdKrhiw-5UsQ@mail.gmail.com>
 <26658832-5692-22c8-a909-763a8e57b0e0@wheregroup.com>
Message-ID: <CAB4g1=wLRHLkfGAae=ks+LEGjw04BcvA4AOJdoa+pBUAK_QcMQ@mail.gmail.com>

>
> Otherwise it is very well be possible to implement a "pipe" into QGIS /
> API for QGIS using various techniques (maybe even expose iface and some
> nasty "exec"ing :D ). E. g. check out
> https://github.com/gem/oq-irmt-qgis/tree/qgis3-socketserver which uses
> websockets.


A socket server is exactly what I was thinking of. I did it a couple of
times in the past (both a simple udp socket and an http server in another
case)
By the way I'm not sure it is worth it. Other solutions (through DB, files,
whatever) might suffice.

Giovanni


> Cheers, Hannes
>
>
> Am 10.09.21 um 14:38 schrieb andrea antonello:
>
> Hi Richard,
>
> > I guess you mean QGIS Desktop, right? AFAIK the only option is to use
>> its Python API, which requires all the PyQGIS <
>> https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>
>> and binary libs to be available inside the environment.
>>
>> Just curious: but would it be possible to 'attach' your script to a
>> running/visible instance of QGIS?
>>
>> From:
>> https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications
>>
>> So: I start QGIS, and then from some python console (NOT the internal
>> one), I can try to load (and show!) a shapefile in current mapcanvas? Or
>> pan/zoom? That would be cool for demonstrations...
>>
>
> I have to apologize and give a little context. I teach geographic
> scripting at a local university. Students come from the previous geomatics
> course with Arc.
> Since I have no intention to teach Arc scripting, I have been doing it for
> several years now happily using a scripting environment based on Geoscript
> Groovy [1].
> So we are talking about a completely different programming language.
> In the last year I have been able to pull some of them over to QGIS, but
> the traction is low. So I was hoping to be able to attach to some APi to
> load results into a running QGIS instance. That would be really cool,
> surely convince them and I would have been able to develop the geoscript
> part necessary to my environment.
>
> In the meanwhile I read Gio's comment: "Another option could be run a
> "micro server" inside a pyqgis plugin and serve an ad-hoc API from it :)"
>
> Yes, that would have been my dream :-)
>
> Thanks for your comments.
>
> Andrea
>
>
> [1] https://jericks.github.io/geoscript-groovy-cookbook
>
>
>>
>> Regards,
>>
>> Richard Duivenvoorde
>>
>>
>>
> _______________________________________________
> QGIS-Developer mailing listQGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
> --
> Johannes Kr?ger / GIS-Entwickler/-Berater
> WhereGroup GmbH
> Eifelstra?e 7
> 53119 Bonn
> Germany
>
> Fon: +49 (0)228 / 90 90 38 - 36
> Fax: +49 (0)228 / 90 90 38 - 11
> johannes.kroeger at wheregroup.comwww.wheregroup.com
> Gesch?ftsf?hrer:
> Olaf Knopp, Peter Stamm
> Amtsgericht Bonn, HRB 9885
> -------------------------------
>
> ---------------------------------------------
>  Aufwind durch Wissen!
>  Jetzt neu: Web-Seminare und Online-Schulungen
>  bei der www.foss-academy.com
> ---------------------------------------------
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/ccdf2f60/attachment.html>

From andrea.antonello at gmail.com  Fri Sep 10 08:45:19 2021
From: andrea.antonello at gmail.com (andrea antonello)
Date: Fri, 10 Sep 2021 17:45:19 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <26658832-5692-22c8-a909-763a8e57b0e0@wheregroup.com>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
 <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
 <CACck5jNJkFz5Vn62YL9GYu1ZY9ODSZNGxR86PGPdKrhiw-5UsQ@mail.gmail.com>
 <26658832-5692-22c8-a909-763a8e57b0e0@wheregroup.com>
Message-ID: <CACck5jMTjGVtLpa2wVOW5OMQOq2M2hXE6zxp42mDcNVSP10wVA@mail.gmail.com>

Hi Hannes,

> could you make the groovy part write a file or to a database that you have
> your students load as layer in QGIS and which will refresh from its source
> automatically on map canvas interaction? That might be a hacky but
> sufficient solution if I understand your goal correctly. If you write to a
> WKT file for example and load that in QGIS in watch mode, QGIS will
> automatically notice chances and refresh it without any interaction
> necessary (at least on Linux)!
>
that is actually something I have not thought of. Nice idea, I will
investigate it.



> Otherwise it is very well be possible to implement a "pipe" into QGIS /
> API for QGIS using various techniques (maybe even expose iface and some
> nasty "exec"ing :D ). E. g. check out
> https://github.com/gem/oq-irmt-qgis/tree/qgis3-socketserver which uses
> websockets.
>

That is actually very cool. But I have no QGIS plugin development skills,
so that won't probably be an option for me.

Thanks a lot,
Andrea



> Cheers, Hannes
>
>
> Am 10.09.21 um 14:38 schrieb andrea antonello:
>
> Hi Richard,
>
> > I guess you mean QGIS Desktop, right? AFAIK the only option is to use
>> its Python API, which requires all the PyQGIS <
>> https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>
>> and binary libs to be available inside the environment.
>>
>> Just curious: but would it be possible to 'attach' your script to a
>> running/visible instance of QGIS?
>>
>> From:
>> https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications
>>
>> So: I start QGIS, and then from some python console (NOT the internal
>> one), I can try to load (and show!) a shapefile in current mapcanvas? Or
>> pan/zoom? That would be cool for demonstrations...
>>
>
> I have to apologize and give a little context. I teach geographic
> scripting at a local university. Students come from the previous geomatics
> course with Arc.
> Since I have no intention to teach Arc scripting, I have been doing it for
> several years now happily using a scripting environment based on Geoscript
> Groovy [1].
> So we are talking about a completely different programming language.
> In the last year I have been able to pull some of them over to QGIS, but
> the traction is low. So I was hoping to be able to attach to some APi to
> load results into a running QGIS instance. That would be really cool,
> surely convince them and I would have been able to develop the geoscript
> part necessary to my environment.
>
> In the meanwhile I read Gio's comment: "Another option could be run a
> "micro server" inside a pyqgis plugin and serve an ad-hoc API from it :)"
>
> Yes, that would have been my dream :-)
>
> Thanks for your comments.
>
> Andrea
>
>
> [1] https://jericks.github.io/geoscript-groovy-cookbook
>
>
>>
>> Regards,
>>
>> Richard Duivenvoorde
>>
>>
>>
> _______________________________________________
> QGIS-Developer mailing listQGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
> --
> Johannes Kr?ger / GIS-Entwickler/-Berater
> WhereGroup GmbH
> Eifelstra?e 7
> 53119 Bonn
> Germany
>
> Fon: +49 (0)228 / 90 90 38 - 36
> Fax: +49 (0)228 / 90 90 38 - 11
> johannes.kroeger at wheregroup.comwww.wheregroup.com
> Gesch?ftsf?hrer:
> Olaf Knopp, Peter Stamm
> Amtsgericht Bonn, HRB 9885
> -------------------------------
>
> ---------------------------------------------
>  Aufwind durch Wissen!
>  Jetzt neu: Web-Seminare und Online-Schulungen
>  bei der www.foss-academy.com
> ---------------------------------------------
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/e8f9e7c1/attachment-0001.html>

From andrea.antonello at gmail.com  Fri Sep 10 08:51:09 2021
From: andrea.antonello at gmail.com (andrea antonello)
Date: Fri, 10 Sep 2021 17:51:09 +0200
Subject: [QGIS-Developer] Interaction API?
In-Reply-To: <CAB4g1=wLRHLkfGAae=ks+LEGjw04BcvA4AOJdoa+pBUAK_QcMQ@mail.gmail.com>
References: <CACck5jNOoasQ=atBmT6HwRCb5t9vLgCXu1AnYrzLjgV7CvLcww@mail.gmail.com>
 <CAB4g1=y5iLhz5qn4vfaPd5jnG-hqHk8igxfTa3cdiOJnucyRig@mail.gmail.com>
 <3160ce19-b871-1ef0-6ee7-d1471b9187bd@duif.net>
 <CACck5jNJkFz5Vn62YL9GYu1ZY9ODSZNGxR86PGPdKrhiw-5UsQ@mail.gmail.com>
 <26658832-5692-22c8-a909-763a8e57b0e0@wheregroup.com>
 <CAB4g1=wLRHLkfGAae=ks+LEGjw04BcvA4AOJdoa+pBUAK_QcMQ@mail.gmail.com>
Message-ID: <CACck5jM_v8r4-znT+jq5UnwXyu4fHs55VWu8sq8Lc2H4XMCtag@mail.gmail.com>

Otherwise it is very well be possible to implement a "pipe" into QGIS / API
>> for QGIS using various techniques (maybe even expose iface and some nasty
>> "exec"ing :D ). E. g. check out
>> https://github.com/gem/oq-irmt-qgis/tree/qgis3-socketserver which uses
>> websockets.
>
>
> A socket server is exactly what I was thinking of. I did it a couple of
> times in the past (both a simple udp socket and an http server in another
> case)
> By the way I'm not sure it is worth it. Other solutions (through DB,
> files, whatever) might suffice.
>

Well, to be honest, for people in my line of work, who do
advanced environmental modelling outside QGIS, but then use QGIS to do the
GIS work, that would be something quite handy. But it is something that no
one would ever fund :-) So it boils down to what you say.

Cheers,
Andrea


>
> Giovanni
>
>
>> Cheers, Hannes
>>
>>
>> Am 10.09.21 um 14:38 schrieb andrea antonello:
>>
>> Hi Richard,
>>
>> > I guess you mean QGIS Desktop, right? AFAIK the only option is to use
>>> its Python API, which requires all the PyQGIS <
>>> https://docs.qgis.org/3.16/en/docs/pyqgis_developer_cookbook/index.html>
>>> and binary libs to be available inside the environment.
>>>
>>> Just curious: but would it be possible to 'attach' your script to a
>>> running/visible instance of QGIS?
>>>
>>> From:
>>> https://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html#python-applications
>>>
>>> So: I start QGIS, and then from some python console (NOT the internal
>>> one), I can try to load (and show!) a shapefile in current mapcanvas? Or
>>> pan/zoom? That would be cool for demonstrations...
>>>
>>
>> I have to apologize and give a little context. I teach geographic
>> scripting at a local university. Students come from the previous geomatics
>> course with Arc.
>> Since I have no intention to teach Arc scripting, I have been doing it
>> for several years now happily using a scripting environment based on
>> Geoscript Groovy [1].
>> So we are talking about a completely different programming language.
>> In the last year I have been able to pull some of them over to QGIS, but
>> the traction is low. So I was hoping to be able to attach to some APi to
>> load results into a running QGIS instance. That would be really cool,
>> surely convince them and I would have been able to develop the geoscript
>> part necessary to my environment.
>>
>> In the meanwhile I read Gio's comment: "Another option could be run a
>> "micro server" inside a pyqgis plugin and serve an ad-hoc API from it :)"
>>
>> Yes, that would have been my dream :-)
>>
>> Thanks for your comments.
>>
>> Andrea
>>
>>
>> [1] https://jericks.github.io/geoscript-groovy-cookbook
>>
>>
>>>
>>> Regards,
>>>
>>> Richard Duivenvoorde
>>>
>>>
>>>
>> _______________________________________________
>> QGIS-Developer mailing listQGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
>> --
>> Johannes Kr?ger / GIS-Entwickler/-Berater
>> WhereGroup GmbH
>> Eifelstra?e 7
>> 53119 Bonn
>> Germany
>>
>> Fon: +49 (0)228 / 90 90 38 - 36
>> Fax: +49 (0)228 / 90 90 38 - 11
>> johannes.kroeger at wheregroup.comwww.wheregroup.com
>> Gesch?ftsf?hrer:
>> Olaf Knopp, Peter Stamm
>> Amtsgericht Bonn, HRB 9885
>> -------------------------------
>>
>> ---------------------------------------------
>>  Aufwind durch Wissen!
>>  Jetzt neu: Web-Seminare und Online-Schulungen
>>  bei der www.foss-academy.com
>> ---------------------------------------------
>>
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210910/623c0307/attachment.html>

From rnathreddy at sanasw.com  Fri Sep 10 21:23:25 2021
From: rnathreddy at sanasw.com (rnathreddy at sanasw.com)
Date: Fri, 10 Sep 2021 21:23:25 -0700
Subject: [QGIS-Developer] load Dynamic Properties - QgsProviderGuiRegistry
Message-ID: <e7b831db6379a4dd76c3fed3e8dda597@sanasw.com>

Hi!,


With Mr. Nyall's support, I was able to overlay the vector file 
(Trajectory) onto a DEM file in the 3D View window.


Now trying to configure (Terrain properties) using the "Configure" 
command from 3D View window. But when we click the Configure command the 
appliation is crashing after throwing the following error:

   "..\..\..\src\gui\qgsproviderguiregistry.cpp(106) : 
(QgsProviderGuiRegistry::loadDynamicProviders) [41836ms] No dynamic QGIS 
GUI provider plugins found in:"


Can any one help me to resolve the issue?

Regards
Raghunath

From luis3176 at yahoo.com  Sun Sep 12 08:36:26 2021
From: luis3176 at yahoo.com (Luis Eduardo)
Date: Sun, 12 Sep 2021 15:36:26 +0000 (UTC)
Subject: [QGIS-Developer] How can I save a global or project variable that
 is a reference to an object?
References: <1512195244.4140996.1631460986478.ref@mail.yahoo.com>
Message-ID: <1512195244.4140996.1631460986478@mail.yahoo.com>

HiI am working on an expression that creates an object,?I need the reference to the object to be visible by other expressions.

I can create a global, project, variable with:
param='hello'param = QgsExpressionContextUtils.globalScope().variable('param')
But it only allows me to store text or numbers.
How can I store a reference to an object?
Oh how else can I achieve what I am looking for?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210912/67375563/attachment.html>

From apasotti at gmail.com  Tue Sep 14 09:19:23 2021
From: apasotti at gmail.com (Alessandro Pasotti)
Date: Tue, 14 Sep 2021 18:19:23 +0200
Subject: [QGIS-Developer] How to handle upstream Qt fixes
In-Reply-To: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
Message-ID: <CAL5Q671cny41KcjyBvZSevYTpHrGzUxFR90xMd_zUt8HQBub4w@mail.gmail.com>

Hi Nyall,

We discussed this topic in today's PSC meeting and we have an answer about
the question if we can invest money for KDAB help in fixing Qt 5 bugs.

The answer is yes, even if the patches are against an officially
unsupported Qt 5 version, if you want to contact them please go ahead.

For windows we can apply the patches ourselves, for debian & friends there
is a good chance the KDE patches + any other patch that fixes critical bugs
will be applied anyway.

Kind regards.


On Fri, Sep 3, 2021 at 12:46 AM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> Hi PSC, devs,
>
> I'd like to kick start some discussion on how best to handle the
> situation with upstream Qt and their (lack of) support for Qt 5. As a
> quick summary of the situation:
>
> - Qt Co effectively ended open source support of Qt 5 at the 5.15.2
> release, and have moved all focus to Qt 6.
> - While some preliminary work has been done, QGIS doesn't currently
> support Qt 6 based builds, and likely won't be ready for this for some
> time (even completely ignoring all the stable API questions a Qt 6
> build raises entirely!)
> - QGIS often depends on fixes and enhancements which need to be made
> upstream in Qt, and can't be resolved or worked-around in QGIS alone
> - KDE and other open source projects forked Qt 5.15 at
> https://invent.kde.org/qt/qt/qtbase/-/commits/dev/, and are actively
> backporting fixes from Qt6 to that branch. Fedora recently started
> using the KDE branch for Qt 5 library builds, so users of that
> platform once again are getting bug fixes deployed [1]. I'm unaware if
> other distributions or builds of Qt are using this currently.
> - Similarly, there's a KDE fork of Qt 3d at
> https://invent.kde.org/qt/qt/qt3d/-/commits/kde/5.15/
>
> Right now, there's a number of very frustrating issues that Qt 5.15.2
> has which impact our users. An example is #44876, which results in
> very large PDF exports from QGIS with broken hairline line rendering
> [2]. In the past QGIS has contracted KDAB as part of the QGIS bug
> fixing efforts to directly fix issues which affect QGIS users
> upstream, with good results. Unfortunately, given that we are stuck on
> Qt 5.15.2 and upstream won't release any more 5.15.x versions, we
> can't just do that same approach again to get fixes into Qt.
>
> So I'd like to raise discussions about the best way we can handle this
> situation as a downstream project.
>
> My thoughts/questions:
>
> - Are we free to change the Windows builds to use the KDE backports
> fork of 5.15 instead of the official 5.15.2 releases? (Or does that
> change lots of osgeo4w packaging things?). Similarly, are we free to
> move the MacOS builds to the KDE branch too?
> - Could we also move the Windows/MacOS builds of Qt 3d to use the KDE fork?
> - Does anyone know if Debian have plans to migrate to the KDE
> backports fork? (Last I heard, the debian Qt maintainers stepped down
> and the package is currently lacking a maintainer!)
> - If we can get the majority of our users onto builds which use the
> KDE backports branch (i.e. Windows/mac users), could we re-start the
> relationship with KDAB and contract them for bug fixes again for 3.22?
> (with the arrangement explicitly requiring them to backport fixes to
> Qt 5 via KDE's fork).
>
> Nyall
>
> [1]
> https://src.fedoraproject.org/rpms/qt5-qtbase/c/400d49b3925dc2852218289310674abd3950b4e0?branch=rawhide
> [2] https://github.com/qgis/QGIS/issues/44876
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>


-- 
Alessandro Pasotti
QCooperative:  www.qcooperative.net
ItOpen:   www.itopen.it
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210914/71f8ad34/attachment.html>

From tomkralidis at gmail.com  Tue Sep 14 13:02:16 2021
From: tomkralidis at gmail.com (Tom Kralidis)
Date: Tue, 14 Sep 2021 16:02:16 -0400
Subject: [QGIS-Developer] MetaSearch Pull Request update
Message-ID: <CAFWXLWV6p6kJposfq7P9agRLEV7s84cN0-TD53ezWaDAzNw6Tw@mail.gmail.com>

Hi devs: hope everything is well with everyone.  Gentle callout for
review/approval
of [1], which enhances MetaSearch to support the evolving OGC API - Records
catalogue standard.  As noted in the PR, I will update the documentation
accordingly
once this PR merged (or, if it's preferred, the docs PR can be
developed/issued in
parallel).

Happy to cover any issues on the PR.

Thanks

..Tom

[1] https://github.com/qgis/QGIS/issues/44812
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210914/110c47c8/attachment.html>

From nyall.dawson at gmail.com  Tue Sep 14 22:08:01 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 15 Sep 2021 15:08:01 +1000
Subject: [QGIS-Developer] How to handle upstream Qt fixes
In-Reply-To: <CAL5Q671cny41KcjyBvZSevYTpHrGzUxFR90xMd_zUt8HQBub4w@mail.gmail.com>
References: <CAB28AsgmpZXYnvbpD3LcFNabRHdiWcgZx3gSw4z4oH44DtXW7w@mail.gmail.com>
 <CAL5Q671cny41KcjyBvZSevYTpHrGzUxFR90xMd_zUt8HQBub4w@mail.gmail.com>
Message-ID: <CAB28AsjBehVxhSruWrNxAWN7WE7L=Z6EMW_qnoQqtoK7bnn_2A@mail.gmail.com>

On Wed, 15 Sept 2021 at 02:19, Alessandro Pasotti <apasotti at gmail.com> wrote:
>
>
> Hi Nyall,
>
> We discussed this topic in today's PSC meeting and we have an answer about the question if we can invest money for KDAB help in fixing Qt 5 bugs.
>
> The answer is yes, even if the patches are against an officially unsupported Qt 5 version, if you want to contact them please go ahead.
>
> For windows we can apply the patches ourselves, for debian & friends there is a good chance the KDE patches + any other patch that fixes critical bugs will be applied anyway.

Great, thanks for the update Alessandro!

I've emailed KDAB to see if they are able to undertake this work. I'll
report back here with developments.

Nyall

From adenaculture at gmail.com  Wed Sep 15 05:47:22 2021
From: adenaculture at gmail.com (C Hamilton)
Date: Wed, 15 Sep 2021 08:47:22 -0400
Subject: [QGIS-Developer] Plugin Developers Who Don't Want to Add
 Capabilities - Go2NextFeature
Message-ID: <CABPxTTqYqjNMjq=wYPajNaZgpwW=uiOQ-FMWNJ79EKJ4hFn-vA@mail.gmail.com>

I am faced with somewhat of a delima. This QGIS plugin is used by some of
our analysts.

https://plugins.qgis.org/plugins/Go2NextFeature3/

Those analysts would like some additional features including automatic
snapshoting of the canvas and saving it as an image for each feature.
Something like this has been asked for by other users of the plugin over 2
years ago. See the issues.

https://gitlab.com/albertodeluca/go2nextfeature/-/analytics/issues_analytics

In the comments of "Future of Plugin" the developers have made it clear
that they want to keep the plugin simple. Probably because of this policy I
see that someone else created a Go2NextFeaturePlus geared for OSM work and
it is labeled as experimental.

I don't like replicating capability, but given that a plugin developer is
unwilling to make any significant changes, how do you feel about another
similar plugin be developed that has the additional capability that we
need. I am not sure how to handle this situation. I don't think it would
take much time to create a new plugin to do this with the expanded
capabilities.

Thanks for your thoughts.

Calvin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210915/7a6b5b5f/attachment.html>

From rdmailings at duif.net  Wed Sep 15 05:59:03 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Wed, 15 Sep 2021 14:59:03 +0200
Subject: [QGIS-Developer] qgis.utils module not available in pyqgis docs ?
Message-ID: <5a223dc8-84e6-c547-94cd-0da47e417c71@duif.net>

Hi Devs,

Searching for a way to programmatically find out which version of a plugin is installed and if there was some interface for it, I used

dir(qgis.utils)

in the Python Console.

And seeing 'metadataParser', I thought to look for it in our pyqgis docs:
https://qgis.org/pyqgis/master/

But... cannot find any qgis.utils methods or module?

Any (obvious) reason for this? 
Or did we forgot to include it in the building machinery?

Thanks for any info.

Ah...
https://gis.stackexchange.com/questions/203842/seeking-documentation-for-qgis-utils-module

so  help(qgis.utils.pluginMetadata) shows me enough to find out:

qgis.utils.pluginMetadata('myplugin', 'version')
('myplugin' string found via qgis.utils.plugins)


Regards,

Richard Duivenvoorde

PS didn't I already ask this earlier??????

From rdmailings at duif.net  Wed Sep 15 07:34:13 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Wed, 15 Sep 2021 16:34:13 +0200
Subject: [QGIS-Developer] Boundless (docs) & Central provisioning of QGIS
 plugins...
Message-ID: <b0406948-f12e-75eb-afe0-7436495c4f21@duif.net>

Hi,

Got a question from a GIS person from a small company, asking me the easiest way to 'provision my QGIS users with some base plugins, so they all start with the same set of plugins'...

Please correct me if I'm wrong, but I'm not aware that we provide some 'startup dir to be copied to...' or so. 

BUT I found these (old?) Boundless docs (with QGIS2 code):
https://boundless-desktop.readthedocs.io/en/latest/system_admins/init_scripts.html
and
https://boundless-desktop.readthedocs.io/en/latest/system_admins/globalsettings.html

Found that:
- QGIS_INIT_SCRIPTS_DIRECTORY is not found in any QGIS source (anymore?)..
- but PYQGIS_STARTUP is [0]
- that is working
- using: qgis.utils.pluginMetadata('myplugin', 'version') I find the plugin version
- so updating the Boundless scripts should work?

Question:
- anybody better idea's?
- anybody knows WHO is 'holder' of the "Copyright ? 2017 Boundless Spatial, Inc."
Because it would be very valuable to the community if we could incorporate this information/code in our Documentation.

Else we can of course try to write some docs ourselves?

Regards,

Richard Duivenvoorde

[0] https://github.com/qgis/QGIS/commit/4c1b95ba9ee0d5f0e4c9664bd293003ef280ba31#diff-4238a332dc3ec110fd3231fdd8f8dc1be626a8b1a3be7bb43b514c2682fab9ce


From qgis-dev at stripfamily.net  Wed Sep 15 08:16:06 2021
From: qgis-dev at stripfamily.net (David Strip)
Date: Wed, 15 Sep 2021 09:16:06 -0600
Subject: [QGIS-Developer] Boundless (docs) & Central provisioning of
 QGIS plugins...
In-Reply-To: <b0406948-f12e-75eb-afe0-7436495c4f21@duif.net>
References: <b0406948-f12e-75eb-afe0-7436495c4f21@duif.net>
Message-ID: <66e1b438-d0e9-2f6d-493c-9a52c1c24371@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210915/8db62067/attachment.html>

From andrea.aime at geo-solutions.it  Wed Sep 15 08:39:04 2021
From: andrea.aime at geo-solutions.it (Andrea Aime)
Date: Wed, 15 Sep 2021 17:39:04 +0200
Subject: [QGIS-Developer] Boundless (docs) & Central provisioning of
 QGIS plugins...
In-Reply-To: <66e1b438-d0e9-2f6d-493c-9a52c1c24371@stripfamily.net>
References: <b0406948-f12e-75eb-afe0-7436495c4f21@duif.net>
 <66e1b438-d0e9-2f6d-493c-9a52c1c24371@stripfamily.net>
Message-ID: <CALHQADX0LsVjUSFNx9ixcOy_o3K4DzRmJu2Uox+MHg84OFSyeg@mail.gmail.com>

On Wed, Sep 15, 2021 at 5:21 PM David Strip <qgis-dev at stripfamily.net>
wrote:

> according to Crunchbase
> <https://www.crunchbase.com/acquisition/planet-labs-acquires-boundlessgeo--320fb5e0>,
> Boundless Spatial was acquired by Planet in 2018. Planet
> <https://www.planet.com/>still exists - I think it used to be called
> Planet Labs. It operates a constellation of small earth imaging satellites.
> I would guess that Boundless Spatial was absorbed into the mapping team
> <https://www.planet.com/markets/mapping/>.  But that's in
> information-free guess.
>

It actually became a new division, "Planet Federal":
https://www.planet.com/pulse/planet-to-acquire-boundless/

Cheers
Andrea
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210915/6f86f28a/attachment.html>

From cavallini at faunalia.it  Wed Sep 15 09:59:58 2021
From: cavallini at faunalia.it (Paolo Cavallini)
Date: Wed, 15 Sep 2021 18:59:58 +0200
Subject: [QGIS-Developer] Plugin Developers Who Don't Want to Add
 Capabilities - Go2NextFeature
In-Reply-To: <CABPxTTqYqjNMjq=wYPajNaZgpwW=uiOQ-FMWNJ79EKJ4hFn-vA@mail.gmail.com>
References: <CABPxTTqYqjNMjq=wYPajNaZgpwW=uiOQ-FMWNJ79EKJ4hFn-vA@mail.gmail.com>
Message-ID: <f27fa77d-9988-9248-aacf-b4c35b285203@faunalia.it>

Hi Calvin,
thanks for submtting this. I'm fully with you: duplicating work is
wasteful for devs and confusing for users, boring for maintainers so bad
for everybody. In my experience, insisting for merging works is
sometimes successful, and if so the advantages are quite evident. Please
let us know if you feel core team could help.
Cheers.

Il 15/09/21 14:47, C Hamilton ha scritto:
> I am faced with somewhat of a delima. This QGIS plugin is used by some
> of our analysts.
> 
> https://plugins.qgis.org/plugins/Go2NextFeature3/
> <https://plugins.qgis.org/plugins/Go2NextFeature3/>
> 
> Those analysts would like some additional features including automatic
> snapshoting of the canvas and saving it as an image for each feature.
> Something like this has been asked?for by other users of the plugin
> over?2 years ago. See the issues.
> 
> https://gitlab.com/albertodeluca/go2nextfeature/-/analytics/issues_analytics
> <https://gitlab.com/albertodeluca/go2nextfeature/-/analytics/issues_analytics>
> 
> In the comments of "Future of Plugin" the developers have made it clear
> that they want to keep the plugin simple. Probably because of this
> policy I see that someone else created a Go2NextFeaturePlus geared for
> OSM work and it is labeled as experimental.
> 
> I don't like replicating capability, but given that a plugin developer
> is unwilling to make any significant changes, how do you feel about
> another similar plugin be developed that has the additional capability
> that we need. I am not sure how to handle this situation. I don't think
> it would take much time to create a new plugin to do this with the
> expanded capabilities.
> 
> Thanks for your thoughts.
> 
> Calvin
> 
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 

-- 
Paolo Cavallini
www.faunalia.eu - QGIS.org
training, support, development on QGIS, PostGIS and more

From gdt at lexort.com  Wed Sep 15 10:21:35 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 15 Sep 2021 13:21:35 -0400
Subject: [QGIS-Developer] expected ccache hit ratio on new micro release?
Message-ID: <rmisfy5pxeo.fsf@s1.lexort.com>


(If people feel this query belongs on -user, please feel free to tell
me that.)

I maintain the qgis entry in pkgsrc, a multi-OS multi-CPU packaging
system, and use qgis 3.16.x on NetBSD.  So I am talkiing below about
NetBSD 9 amd64.

I use ccache, to save compilation time, since in doing packaging I am
often rebuilding X that depends on updated Y, but most of X's
compilations are the same headers and sources.  And, I often rebuild a
package after I just built it, to verify I didn't break something, after
making a minor change to the packaging files.

On September 5, I updated the package to 3.16.10 (was behind for no good
reason).  I always build, make a package, install it, and then run qgis
from the installed package before pushing the update to the rest of
pkgsrc.  So far, it's been smooth, and qgis seems not to have any
NetBSD-specific issues.

Just now I changed the version in the control file to 3.16.11 and am
building.  I zeroed stats before and have done only a tiny bit of other
building.  So far, ccache reports:

  cache directory                     /home/gdt/.ccache
  primary config                      /home/gdt/.ccache/ccache.conf
  secondary config      (readonly)    /usr/pkg/etc/ccache.conf
  stats updated                       Wed Sep 15 13:16:01 2021
  stats zeroed                        Wed Sep 15 09:17:16 2021
  cache hit (direct)                    13
  cache hit (preprocessed)              80
  cache miss                          4056
  cache hit rate                      2.24 %
  called for link                       94
  called for preprocessing            2101
  compile failed                        14
  preprocessor error                    26
  autoconf compile/link                106
  no input file                         24
  cleanups performed                     4
  files in cache                    206471
  cache size                           9.0 GB
  max cache size                      10.0 GB

This means qgis will take about 8h to build, on a machine that was
fairly high end in 2014, with 1 core in use (for heat), and plenty of
RAM.  This matches my memory of previous updates.

It surprises me that a bug fix release would have almost hits, but
perhaps there is a version number in a header that every program reads,
and thus every file misses.  But I am not arguing that it is a bug, of
course.

I am curious if anyone else uses ccache, and if this is what they see as
well.

Thanks,
Greg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210915/2eec5aa8/attachment.sig>

From senhor.neto at gmail.com  Wed Sep 15 10:55:06 2021
From: senhor.neto at gmail.com (Alexandre Neto)
Date: Wed, 15 Sep 2021 18:55:06 +0100
Subject: [QGIS-Developer] Boundless (docs) & Central provisioning of
 QGIS plugins...
In-Reply-To: <CALHQADX0LsVjUSFNx9ixcOy_o3K4DzRmJu2Uox+MHg84OFSyeg@mail.gmail.com>
References: <b0406948-f12e-75eb-afe0-7436495c4f21@duif.net>
 <66e1b438-d0e9-2f6d-493c-9a52c1c24371@stripfamily.net>
 <CALHQADX0LsVjUSFNx9ixcOy_o3K4DzRmJu2Uox+MHg84OFSyeg@mail.gmail.com>
Message-ID: <CA+H0G_EwRiFhprA5AJEZZJ-K3MifqD2yBptcexEhyGFmZscVrg@mail.gmail.com>

Hi Richard,

Several core commiters were working at BoundlessGeo back in those days,
some are still there, in Planet Federal.

I was there too, and I was responsible for the documentation. Moving part
of this documentation to QGIS Docs has been in my to do list for a while,
but it never reached the top :-(

Sometime ago, I asked Alessandro Pasoti if those two settings were still
valid, and he said that "AFAIK they were valid", but I abandoned the task
before even trying it.

I still have the original rst files. In case anyone wants to jump on that
task and try it out, I can share it.

Best regards,

Alexandre Neto

A quarta, 15/09/2021, 16:39, Andrea Aime <andrea.aime at geo-solutions.it>
escreveu:

> On Wed, Sep 15, 2021 at 5:21 PM David Strip <qgis-dev at stripfamily.net>
> wrote:
>
>> according to Crunchbase
>> <https://www.crunchbase.com/acquisition/planet-labs-acquires-boundlessgeo--320fb5e0>,
>> Boundless Spatial was acquired by Planet in 2018. Planet
>> <https://www.planet.com/>still exists - I think it used to be called
>> Planet Labs. It operates a constellation of small earth imaging satellites.
>> I would guess that Boundless Spatial was absorbed into the mapping team
>> <https://www.planet.com/markets/mapping/>.  But that's in
>> information-free guess.
>>
>
> It actually became a new division, "Planet Federal":
> https://www.planet.com/pulse/planet-to-acquire-boundless/
>
> Cheers
> Andrea
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210915/902ee028/attachment.html>

From johannes.kroeger at wheregroup.com  Thu Sep 16 00:32:47 2021
From: johannes.kroeger at wheregroup.com (=?UTF-8?Q?Johannes_Kr=c3=b6ger?=)
Date: Thu, 16 Sep 2021 09:32:47 +0200
Subject: [QGIS-Developer] Plugin Developers Who Don't Want to Add
 Capabilities - Go2NextFeature
In-Reply-To: <CABPxTTqYqjNMjq=wYPajNaZgpwW=uiOQ-FMWNJ79EKJ4hFn-vA@mail.gmail.com>
References: <CABPxTTqYqjNMjq=wYPajNaZgpwW=uiOQ-FMWNJ79EKJ4hFn-vA@mail.gmail.com>
Message-ID: <742699de-bad4-eefa-23ca-418943e5d6f8@wheregroup.com>

Hi Calvin,

Looking at the list of issues I do not see any behaviour from the 
maintainer that shows a necessity for a fork. And there is just one user 
who asked for a snapshop feature, in two separate issues, one not even 
with a title.

Have you tried making a full description of the new feature and how it 
will integrate nicely and why the feature fits the scope of the project, 
followed by a well tested pull request with the new feature?

There are some unanswered merge requests but no visible repeated 
attempts to get the maintainer's attention. I'd try that first.

Making snapshops of the canvas sounds like a feature that has little to 
do with iterating through features. Maybe you are best served with 
another tiny plugin that does just that?

Cheers, Hannes

Am 15.09.21 um 14:47 schrieb C Hamilton:
> I am faced with somewhat of a delima. This QGIS plugin is used by some 
> of our analysts.
>
> https://plugins.qgis.org/plugins/Go2NextFeature3/ 
> <https://plugins.qgis.org/plugins/Go2NextFeature3/>
>
> Those analysts would like some additional features including automatic 
> snapshoting of the canvas and saving it as an image for each feature. 
> Something like this has been asked?for by other users of the plugin 
> over?2 years ago. See the issues.
>
> https://gitlab.com/albertodeluca/go2nextfeature/-/analytics/issues_analytics 
> <https://gitlab.com/albertodeluca/go2nextfeature/-/analytics/issues_analytics>
>
> In the comments of "Future of Plugin" the developers have made it 
> clear that they want to keep the plugin simple. Probably because of 
> this policy I see that someone else created a Go2NextFeaturePlus 
> geared for OSM work and it is labeled as experimental.
>
> I don't like replicating capability, but given that a plugin developer 
> is unwilling to make any significant changes, how do you feel about 
> another similar plugin be developed that has the additional capability 
> that we need. I am not sure how to handle this situation. I don't 
> think it would take much time to create a new plugin to do this with 
> the expanded capabilities.
>
> Thanks for your thoughts.
>
> Calvin
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info:https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe:https://lists.osgeo.org/mailman/listinfo/qgis-developer

-- 
Johannes Kr?ger / GIS-Entwickler/-Berater
WhereGroup GmbH
Eifelstra?e 7
53119 Bonn
Germany

Fon: +49 (0)228 / 90 90 38 - 36
Fax: +49 (0)228 / 90 90 38 - 11

johannes.kroeger at wheregroup.com
www.wheregroup.com
Gesch?ftsf?hrer:
Olaf Knopp, Peter Stamm
Amtsgericht Bonn, HRB 9885
-------------------------------

---------------------------------------------
Schon gewusst?
In unserem Blog geben wir Tipps & Tricks zu
Open-Source-GIS-Software und berichten aus unserem Experten-Alltag:
https://wheregroup.com/blog/
---------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/df0a892e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_0xBF7B268A77C202D5.asc
Type: application/pgp-keys
Size: 2471 bytes
Desc: OpenPGP public key
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/df0a892e/attachment.key>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_signature
Type: application/pgp-signature
Size: 665 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/df0a892e/attachment.sig>

From r.nijssen at terglobo.nl  Thu Sep 16 00:46:49 2021
From: r.nijssen at terglobo.nl (Raymond Nijssen)
Date: Thu, 16 Sep 2021 09:46:49 +0200
Subject: [QGIS-Developer] Plugin Developers Who Don't Want to Add
 Capabilities - Go2NextFeature
In-Reply-To: <742699de-bad4-eefa-23ca-418943e5d6f8@wheregroup.com>
References: <CABPxTTqYqjNMjq=wYPajNaZgpwW=uiOQ-FMWNJ79EKJ4hFn-vA@mail.gmail.com>
 <742699de-bad4-eefa-23ca-418943e5d6f8@wheregroup.com>
Message-ID: <7b266c82-b753-f44d-8541-3b53314e98f4@terglobo.nl>

What about adding just 1 line to the plugin, for firing a signal that 
you can catch in another plugin/tool that will take the snapshot? They 
might agree on that, cause nobody will notice it.

Raymond


On 16-09-2021 09:32, Johannes Kr?ger wrote:
> Hi Calvin,
> 
> Looking at the list of issues I do not see any behaviour from the 
> maintainer that shows a necessity for a fork. And there is just one user 
> who asked for a snapshop feature, in two separate issues, one not even 
> with a title.
> 
> Have you tried making a full description of the new feature and how it 
> will integrate nicely and why the feature fits the scope of the project, 
> followed by a well tested pull request with the new feature?
> 
> There are some unanswered merge requests but no visible repeated 
> attempts to get the maintainer's attention. I'd try that first.
> 
> Making snapshops of the canvas sounds like a feature that has little to 
> do with iterating through features. Maybe you are best served with 
> another tiny plugin that does just that?
> 
> Cheers, Hannes
> 
> Am 15.09.21 um 14:47 schrieb C Hamilton:
>> I am faced with somewhat of a delima. This QGIS plugin is used by some 
>> of our analysts.
>>
>> https://plugins.qgis.org/plugins/Go2NextFeature3/ 
>> <https://plugins.qgis.org/plugins/Go2NextFeature3/>
>>
>> Those analysts would like some additional features including automatic 
>> snapshoting of the canvas and saving it as an image for each feature. 
>> Something like this has been asked?for by other users of the plugin 
>> over?2 years ago. See the issues.
>>
>> https://gitlab.com/albertodeluca/go2nextfeature/-/analytics/issues_analytics 
>> <https://gitlab.com/albertodeluca/go2nextfeature/-/analytics/issues_analytics>
>>
>> In the comments of "Future of Plugin" the developers have made it 
>> clear that they want to keep the plugin simple. Probably because of 
>> this policy I see that someone else created a Go2NextFeaturePlus 
>> geared for OSM work and it is labeled as experimental.
>>
>> I don't like replicating capability, but given that a plugin developer 
>> is unwilling to make any significant changes, how do you feel about 
>> another similar plugin be developed that has the additional capability 
>> that we need. I am not sure how to handle this situation. I don't 
>> think it would take much time to create a new plugin to do this with 
>> the expanded capabilities.
>>
>> Thanks for your thoughts.
>>
>> Calvin
>>
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info:https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe:https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 
> -- 
> Johannes Kr?ger / GIS-Entwickler/-Berater
> WhereGroup GmbH
> Eifelstra?e 7
> 53119 Bonn
> Germany
> 
> Fon: +49 (0)228 / 90 90 38 - 36
> Fax: +49 (0)228 / 90 90 38 - 11
> 
> johannes.kroeger at wheregroup.com
> www.wheregroup.com
> Gesch?ftsf?hrer:
> Olaf Knopp, Peter Stamm
> Amtsgericht Bonn, HRB 9885
> -------------------------------
> 
> ---------------------------------------------
> Schon gewusst?
> In unserem Blog geben wir Tipps & Tricks zu
> Open-Source-GIS-Software und berichten aus unserem Experten-Alltag:
> https://wheregroup.com/blog/
> ---------------------------------------------
> 
> 
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 

From nilsnolde at gmail.com  Thu Sep 16 05:48:48 2021
From: nilsnolde at gmail.com (Nils Nolde)
Date: Thu, 16 Sep 2021 14:48:48 +0200
Subject: [QGIS-Developer] network analyst in qgis
Message-ID: <ad6b5def-f33b-2e20-d59b-55f5146a05ef@gmail.com>

Hi devs,

I'd have sort of an early announcement, but also a related question:

we're currently developing a proper network analyst toolkit as a plugin. 
We feel it's another important step to make ArcMap/Pro more redundant 
haha one can dream:)? In any case, the plan is to provide highly 
performant network analysis, such as complex VRP solvers, 
location/allocation, regular routing/isochrones/matrix etc, and all 
LOCAL, no remote API, no HTTP (though optionally we provide HTTP 
capabilities for the routing engines). We really do aim to replace 
ESRI's network analyst in QGIS mid-term, though location/allocation 
features will be fairly slow for now as that is currently implemented in 
python (which we'll release as a PyPI packages as well). If there's 
enough traction we'd contract someone for proper c++ metaheuristic 
solvers, that's above our heads. For everything we need a performant 
routing engine, so we have to include several third-party FOSS projects 
for routing & solving, those dependencies are unfortunately all binary. 
So after the (hopefully encouraging) announcement, my question:

I know it's strongly discouraged to submit binary components to the 
official plugin store. Also that wouldn't make much sense, some of those 
dependencies weigh like 30 MB or more (per platform). Can someone point 
us to a plugin that has a similar logic of pulling binary libs? I'd like 
to avoid to leave it to the user to install those dependencies, rather 
have it done automatically.

Are there other recommendations to handle this situation? I guess at the 
very least the user should agree to download those binaries. Since we 
have to download 4 different libraries, do you think the user should 
consent to each one individually (the routing engines are crucial, but 
location/allocation & VRP not really)?

Really, really excited to see how this turns out!!:) ETA is end of 2021 
(so really early/mid-2022 probably;)).

All the best
Nils


From gdt at lexort.com  Thu Sep 16 05:59:42 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 16 Sep 2021 08:59:42 -0400
Subject: [QGIS-Developer] network analyst in qgis
In-Reply-To: <ad6b5def-f33b-2e20-d59b-55f5146a05ef@gmail.com> (Nils Nolde's
 message of "Thu, 16 Sep 2021 14:48:48 +0200")
References: <ad6b5def-f33b-2e20-d59b-55f5146a05ef@gmail.com>
Message-ID: <rmifsu4llq9.fsf@s1.lexort.com>


Nils Nolde <nilsnolde at gmail.com> writes:

That all sounds like great progress.

Speaking as a packager for systems that are somewhat unusual:

> solvers, that's above our heads. For everything we need a performant
> routing engine, so we have to include several third-party FOSS
> projects for routing & solving, those dependencies are unfortunately
> all binary. So after the (hopefully encouraging) announcement, my
> question:

I do not understand how depending on Free Software projects maintained
by others leads to "binary dependencies".  Can these really not be built
from source?  Do you just mean "on the system that uses the plugin, a
bunch of other packages (and presumably their python bindings?) must be
installed?  Is this just about making a self-contained plugin for
Windows where expecting qgis users to manage other code is wishful
thinking?

> I know it's strongly discouraged to submit binary components to the
> official plugin store. Also that wouldn't make much sense, some of
> those dependencies weigh like 30 MB or more (per platform). Can
> someone point us to a plugin that has a similar logic of pulling
> binary libs? I'd like to avoid to leave it to the user to install
> those dependencies, rather have it done automatically.

And 'per platform' is going to support only a handful of platforms,
compared to all the places where one can build qgis.

> Are there other recommendations to handle this situation? I guess at
> the very least the user should agree to download those binaries. Since
> we have to download 4 different libraries, do you think the user
> should consent to each one individually (the routing engines are
> crucial, but location/allocation & VRP not really)?

Is the consent about license, about trusting the code with one's data
(since it runs in user context), about the space, or something else?

It could be that I'm asking questions about the broader plugin
architecture and portability, more than your situation.

Greg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/e2675f7d/attachment.sig>

From nilsnolde at gmail.com  Thu Sep 16 06:18:13 2021
From: nilsnolde at gmail.com (Nils Nolde)
Date: Thu, 16 Sep 2021 15:18:13 +0200
Subject: [QGIS-Developer] network analyst in qgis
In-Reply-To: <rmifsu4llq9.fsf@s1.lexort.com>
References: <ad6b5def-f33b-2e20-d59b-55f5146a05ef@gmail.com>
 <rmifsu4llq9.fsf@s1.lexort.com>
Message-ID: <e336654a-900f-9638-6298-ec2b2c55f788@gmail.com>


On 16.09.21 14:59, Greg Troxel wrote:
> Nils Nolde <nilsnolde at gmail.com> writes:
>
> That all sounds like great progress.
Thanks Greg:)
>
> Speaking as a packager for systems that are somewhat unusual:
>
>> solvers, that's above our heads. For everything we need a performant
>> routing engine, so we have to include several third-party FOSS
>> projects for routing & solving, those dependencies are unfortunately
>> all binary. So after the (hopefully encouraging) announcement, my
>> question:
> I do not understand how depending on Free Software projects maintained
> by others leads to "binary dependencies".  Can these really not be built
> from source?  Do you just mean "on the system that uses the plugin, a
> bunch of other packages (and presumably their python bindings?) must be
> installed?  Is this just about making a self-contained plugin for
> Windows where expecting qgis users to manage other code is wishful
> thinking?
It's mostly about making a self-contained plugin really. It's definitely 
not an option to have users install that stuff from source, there's 
thing like boost, protobuf etc involved and the very latest on Windows 
people will (rightfully) never even try. The Python bindings are 
pre-packaged as wheels, so installation becomes trivial. In that sense 
users could do it themselves potentially, but code can as well and I'd 
like that for UX. And my feeling is that the extra effort for automating 
that process is probably dwarfed compared to the tickets we'd get from 
users who don't manage to install things into OSGeo4W python.
>> I know it's strongly discouraged to submit binary components to the
>> official plugin store. Also that wouldn't make much sense, some of
>> those dependencies weigh like 30 MB or more (per platform). Can
>> someone point us to a plugin that has a similar logic of pulling
>> binary libs? I'd like to avoid to leave it to the user to install
>> those dependencies, rather have it done automatically.
> And 'per platform' is going to support only a handful of platforms,
> compared to all the places where one can build qgis.
Haha true! At least it's a manylinux distribution for linuxes with glibc 
 > 2.24 (didn't wanna go down the rabbit hole of earlier versions with 
that many dependencies). 3 distros (mac 10.9, win amd64, manylinux) 
would amount to well over 300 MB, of which only a third is relevant to a 
single platform.
>
>> Are there other recommendations to handle this situation? I guess at
>> the very least the user should agree to download those binaries. Since
>> we have to download 4 different libraries, do you think the user
>> should consent to each one individually (the routing engines are
>> crucial, but location/allocation & VRP not really)?
> Is the consent about license, about trusting the code with one's data
> (since it runs in user context), about the space, or something else?
>
> It could be that I'm asking questions about the broader plugin
> architecture and portability, more than your situation.
I guess the consent is to trust binaries being executed on a user's 
machine (I figured that's the reason QGIS doesn't want it). To a lesser 
extent maybe size. Licenses will be mostly GPL, maybe some closed (only 
for the bindings and packaging, the underlying engine is FOSS), still an 
ongoing discussion.
>
> Greg

From gdt at lexort.com  Thu Sep 16 06:25:39 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 16 Sep 2021 09:25:39 -0400
Subject: [QGIS-Developer] network analyst in qgis
In-Reply-To: <e336654a-900f-9638-6298-ec2b2c55f788@gmail.com> (Nils Nolde's
 message of "Thu, 16 Sep 2021 15:18:13 +0200")
References: <ad6b5def-f33b-2e20-d59b-55f5146a05ef@gmail.com>
 <rmifsu4llq9.fsf@s1.lexort.com>
 <e336654a-900f-9638-6298-ec2b2c55f788@gmail.com>
Message-ID: <rmiilz0k5yk.fsf@s1.lexort.com>


Nils Nolde <nilsnolde at gmail.com> writes:

> It's mostly about making a self-contained plugin really. It's
> definitely not an option to have users install that stuff from source,
> there's thing like boost, protobuf etc involved and the very latest on
> Windows people will (rightfully) never even try. The Python bindings
> are pre-packaged as wheels, so installation becomes trivial. In that
> sense users could do it themselves potentially, but code can as well
> and I'd like that for UX. And my feeling is that the extra effort for
> automating that process is probably dwarfed compared to the tickets
> we'd get from users who don't manage to install things into OSGeo4W
> python.

Thanks, that is understandable, although I disagree about
"rightfully"....

>>> I know it's strongly discouraged to submit binary components to the
>>> official plugin store. Also that wouldn't make much sense, some of
>>> those dependencies weigh like 30 MB or more (per platform). Can
>>> someone point us to a plugin that has a similar logic of pulling
>>> binary libs? I'd like to avoid to leave it to the user to install
>>> those dependencies, rather have it done automatically.
>> And 'per platform' is going to support only a handful of platforms,
>> compared to all the places where one can build qgis.

> Haha true! At least it's a manylinux distribution for linuxes with
> glibc 2.24 (didn't wanna go down the rabbit hole of earlier versions
> with that many dependencies). 3 distros (mac 10.9, win amd64,
> manylinux) would amount to well over 300 MB, of which only a third is
> relevant to a single platform.

And then there are other operating systems, including ones that
mainsteram qgis culture hasn't heard of -- so there really needs to be a
"you must first install X, Y and Z", even if there is pre-built versions
for popular systems.

>> It could be that I'm asking questions about the broader plugin
>> architecture and portability, more than your situation.

> I guess the consent is to trust binaries being executed on a user's
> machine (I figured that's the reason QGIS doesn't want it). To a

That would be my concern, but I'm on the paranoid side.

> lesser extent maybe size. Licenses will be mostly GPL, maybe some
> closed (only for the bindings and packaging, the underlying engine is
> FOSS), still an ongoing discussion.

I am surprised it is considered ok to have non-free software as part of
a plugin.  Usually in Free Software plugins are considered derived works
of the project, so them including code not compatible with GPL2 seems
problematic.  I wasn't clear on the project's stance, but it seems to be
exactly this typical norm:

  https://blog.qgis.org/2016/05/29/licensing-requirements-for-qgis-plugins/
  
(I'm just a random user and packager, not speaking with any official
hats.)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/9fa14ba9/attachment.sig>

From nilsnolde at gmail.com  Thu Sep 16 06:49:40 2021
From: nilsnolde at gmail.com (Nils Nolde)
Date: Thu, 16 Sep 2021 15:49:40 +0200
Subject: [QGIS-Developer] network analyst in qgis
In-Reply-To: <rmiilz0k5yk.fsf@s1.lexort.com>
References: <ad6b5def-f33b-2e20-d59b-55f5146a05ef@gmail.com>
 <rmifsu4llq9.fsf@s1.lexort.com>
 <e336654a-900f-9638-6298-ec2b2c55f788@gmail.com>
 <rmiilz0k5yk.fsf@s1.lexort.com>
Message-ID: <52dfd9db-c5cf-2d56-0c2c-166970b9697b@gmail.com>


On 16.09.21 15:25, Greg Troxel wrote:
> I am surprised it is considered ok to have non-free software as part of
> a plugin.  Usually in Free Software plugins are considered derived works
> of the project, so them including code not compatible with GPL2 seems
> problematic.  I wasn't clear on the project's stance, but it seems to be
> exactly this typical norm:
>
>    https://blog.qgis.org/2016/05/29/licensing-requirements-for-qgis-plugins/
>    
> (I'm just a random user and packager, not speaking with any official
> hats.)
The plugin is obviously FOSS & GPL, the routing engines & solvers and so 
on are BSD-2 and MIT. I'm not a lawyer, but I don't really see a problem 
_potentially_ having the bindings of the BSD-2 & MIT projects closed 
with attribution and include those as dependencies of a GPL software 
(plugin/QGIS). AFAIU GPL is important for consumer apps/libs, not the 
other way around. Happy to be proven wrong though, like I said the 
discussion is not settled yet.

From apasotti at gmail.com  Thu Sep 16 08:22:51 2021
From: apasotti at gmail.com (Alessandro Pasotti)
Date: Thu, 16 Sep 2021 17:22:51 +0200
Subject: [QGIS-Developer] Nomination of Julien Cabieces for core committer
 status.
Message-ID: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>

Hi PSC & QGIS devs,

I'd like to formally nominate Julien Cabieces (@troopa81) for core
committer status to QGIS.

Julien has been doing excellent work in several areas of QGIS. His code is
consistently of excellent quality and his knowledge in various aspects of
QGIS are an extremely valuable asset to the project.

His history of contributions also demonstrates a clear understanding of not
only QGIS code practices, but also modern best-practice c++ and Qt
development.

I think it would be valuable to give Julien core commit rights and allow
him with this also to enforce the pull request review team.

Thanks for this consideration!

Alessandro

-- 
Alessandro Pasotti
QCooperative:  www.qcooperative.net
ItOpen:   www.itopen.it
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/8f4e237a/attachment.html>

From regis.haubourg at gmail.com  Thu Sep 16 09:02:03 2021
From: regis.haubourg at gmail.com (=?UTF-8?Q?R=C3=A9gis_Haubourg?=)
Date: Thu, 16 Sep 2021 18:02:03 +0200
Subject: [QGIS-Developer] [Qgis-psc] Nomination of Julien Cabieces for
 core committer status.
In-Reply-To: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
References: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
Message-ID: <CABgOYCczXyVEJta1Y09A9vp_TOyv7UA66pM_04KBfKgKZk0Fbw@mail.gmail.com>

I also would give a huge +1 after those years working alongside with
Julien!
Julien is deeply committed in the project and will bring a nice Toulouse
accent in the upcoming hackfests ?

R?gis


Le jeu. 16 sept. 2021 ? 17:23, Alessandro Pasotti <apasotti at gmail.com> a
?crit :

> Hi PSC & QGIS devs,
>
> I'd like to formally nominate Julien Cabieces (@troopa81) for core
> committer status to QGIS.
>
> Julien has been doing excellent work in several areas of QGIS. His code is
> consistently of excellent quality and his knowledge in various aspects of
> QGIS are an extremely valuable asset to the project.
>
> His history of contributions also demonstrates a clear understanding of
> not only QGIS code practices, but also modern best-practice c++ and Qt
> development.
>
> I think it would be valuable to give Julien core commit rights and allow
> him with this also to enforce the pull request review team.
>
> Thanks for this consideration!
>
> Alessandro
>
> --
> Alessandro Pasotti
> QCooperative:  www.qcooperative.net
> ItOpen:   www.itopen.it
> _______________________________________________
> Qgis-psc mailing list
> Qgis-psc at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/qgis-psc
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/9c557578/attachment-0001.html>

From saber.razmjooei at lutraconsulting.co.uk  Thu Sep 16 09:05:04 2021
From: saber.razmjooei at lutraconsulting.co.uk (Saber Razmjooei)
Date: Thu, 16 Sep 2021 18:05:04 +0200
Subject: [QGIS-Developer] Nomination of Julien Cabieces for core
 committer status.
In-Reply-To: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
References: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
Message-ID: <CAH=WbRB1UHasS7q2ftdOGNeHq1LWtsvUhmJRd6Jt1Xyhjy4o4Q@mail.gmail.com>

Hi Alessandro,

Apologies for hijacking the thread. Vincent Cloarec was nominated a while
back but the decision was never finalised (despite several positive votes
from other Devs).

>From what I understood the PSC was going to look into the nomination and
acceptance process. But the procedure was never finalised.

Kind regards
Saber

On Thu, 16 Sep 2021, 17:23 Alessandro Pasotti, <apasotti at gmail.com> wrote:

> Hi PSC & QGIS devs,
>
> I'd like to formally nominate Julien Cabieces (@troopa81) for core
> committer status to QGIS.
>
> Julien has been doing excellent work in several areas of QGIS. His code is
> consistently of excellent quality and his knowledge in various aspects of
> QGIS are an extremely valuable asset to the project.
>
> His history of contributions also demonstrates a clear understanding of
> not only QGIS code practices, but also modern best-practice c++ and Qt
> development.
>
> I think it would be valuable to give Julien core commit rights and allow
> him with this also to enforce the pull request review team.
>
> Thanks for this consideration!
>
> Alessandro
>
> --
> Alessandro Pasotti
> QCooperative:  www.qcooperative.net
> ItOpen:   www.itopen.it
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210916/a56655d4/attachment.html>

From rdmailings at duif.net  Thu Sep 16 22:17:51 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Fri, 17 Sep 2021 07:17:51 +0200
Subject: [QGIS-Developer] Guidance on moving gui stuff to gui in QGIS
Message-ID: <f846aaab-a637-67d7-e2e1-c67d33959cee@duif.net>

Hi Devs,

Do we have some guiding docs about the preferred/ideal (future) project/code structure of QGIS?

To be able to move some ui/gui components out of src/core to src/gui I got stuck because of my lack of C++ CMakeLists.txt knowledge [0]

But while moving around the ui and gui files I wondered if there was some shared idea of the project tree structure (espcially if this was documented somewhere).

Thinking about some docs answering questions like:
- should the code/dir/tree structure of the ui part of providers ideally mimick the providers tree? Like providers/foo/faa have it's ui stuff in gui/foo/faa
- should ui files be separated from it's accompanying gui h/cpp buddies? If not, again: should the tree structure mimic the src structure?
- remembering some discussion's about moving to a core and a gui lib, maybe move the ui part into gui?
- what would be the benefit of splitting up in core/gui?

I know these things are: never ideal, not easy to do, both practically and with dev's all have a different opinion about a 'proper project structure', but.... just asking :-)

Regards,

Richard Duivenvoorde

[0] https://github.com/qgis/QGIS/pull/44879#issuecomment-910988820


From julien.cabieces at oslandia.com  Fri Sep 17 08:26:44 2021
From: julien.cabieces at oslandia.com (Julien Cabieces)
Date: Fri, 17 Sep 2021 17:26:44 +0200
Subject: [QGIS-Developer] [Qgis-psc] Nomination of Julien Cabieces for
 core committer status.
In-Reply-To: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
References: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
Message-ID: <87wnnfz0i3.fsf@julien-laptop.home>


Hi PSC & QGIS devs,

Thank you Alessandro for nominating me, and thank you to all the people
who helped me onboard on the project.

It's a real pleasure to contribute to QGIS on a regular basis.

Kind regards,
Julien


> Hi PSC & QGIS devs,
>
> I'd like to formally nominate Julien Cabieces (@troopa81) for core
> committer status to QGIS.
>
> Julien has been doing excellent work in several areas of QGIS. His code is
> consistently of excellent quality and his knowledge in various aspects of
> QGIS are an extremely valuable asset to the project.
>
> His history of contributions also demonstrates a clear understanding of not
> only QGIS code practices, but also modern best-practice c++ and Qt
> development.
>
> I think it would be valuable to give Julien core commit rights and allow
> him with this also to enforce the pull request review team.
>
> Thanks for this consideration!
>
> Alessandro


From nyall.dawson at gmail.com  Sun Sep 19 23:19:37 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 20 Sep 2021 16:19:37 +1000
Subject: [QGIS-Developer] [Qgis-psc] Nomination of Julien Cabieces for
 core committer status.
In-Reply-To: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
References: <CAL5Q673K=THePaye-j6UBgpp8P4C-eeD5aSHVGg-tu0nWomDPA@mail.gmail.com>
Message-ID: <CAB28Asju4yaKsa=+rs465jPHk2w-Kn=tMQgYKxSCjC3ZWbe9SA@mail.gmail.com>

On Fri, 17 Sept 2021 at 01:23, Alessandro Pasotti <apasotti at gmail.com> wrote:
>
> Hi PSC & QGIS devs,
>
> I'd like to formally nominate Julien Cabieces (@troopa81) for core committer status to QGIS.
>
> Julien has been doing excellent work in several areas of QGIS. His code is consistently of excellent quality and his knowledge in various aspects of QGIS are an extremely valuable asset to the project.
>
> His history of contributions also demonstrates a clear understanding of not only QGIS code practices, but also modern best-practice c++ and Qt development.
>
> I think it would be valuable to give Julien core commit rights and allow him with this also to enforce the pull request review team.

I'd like to second this nomination -- I think it's well overdue, and
Julien's contributions speak for themselves!

Nyall



>
> Thanks for this consideration!
>
> Alessandro
>
> --
> Alessandro Pasotti
> QCooperative:  www.qcooperative.net
> ItOpen:   www.itopen.it
> _______________________________________________
> Qgis-psc mailing list
> Qgis-psc at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/qgis-psc

From nyall.dawson at gmail.com  Sun Sep 19 23:24:57 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 20 Sep 2021 16:24:57 +1000
Subject: [QGIS-Developer] =?utf-8?q?Nomination_of_Lo=C3=AFc_Bartoletti_?=
	=?utf-8?q?=28=40lbartoletti=29_for_core_committer_status?=
Message-ID: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>

Following on from the recent discussion on core committers, I would
like to nominate Lo?c Bartoletti (https://github.com/lbartoletti) for
core committer status to QGIS.

Lo?c has a very rich history of contributions to QGIS, especially in
the important areas of digitizing tools and the QGIS CAD framework. He
has a very high work standard, is responsive to review comments, and
is not afraid of soaking code in unit tests. In short, he's
demonstrated time and again the attributes we desire in core QGIS
committers!

I'd love to see Lo?c's position within QGIS formalised to recognise
these efforts

Nyall

From nyall.dawson at gmail.com  Sun Sep 19 23:35:57 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 20 Sep 2021 16:35:57 +1000
Subject: [QGIS-Developer] Developer support channels
Message-ID: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>

Hi PSC, QGIS dev list members!

I would like to kick-start some discussion on possible channels that
we could use to (hopefully temporarily!!) replace our in-person
contributor meetups.

Kartoza have been doing a brilliant job at connecting with our user
base through their QGIS Open Day initiative. While I've personally
found this to be a good replacement for user conference type events, I
feel like there's a need for a focused QGIS contributors virtual
meetup.

I think one of the reasons the QGIS contributor community has
historically had such a welcoming and friendly feel could be directly
attributed to the in-person hackfest events. I'm sure I'm not the only
one who is feeling the absence of these! (I would seriously love to be
back in Nodebo, hanging out with you all in the woodcutters bar and
trying to hammer a nail into a stump of wood :P )

While it wouldn't be a replacement for these in-person meetups, I'd
love to see a semi-regular "Friday night drinks" style video chat for
QGIS contributors. The intention would be that this is
social/relationship focused, rather than a "QGIS Planning session"
meetup.

Would anyone else be interested in this?

On this note, I would also love to see some form of
contributor-focused text chat room for QGIS contributors. While
there's plenty of chat rooms around for QGIS users, these tend to
attract toward "how do I do this in QGIS" questions. For this reason I
personally avoid them, as I'm looking more for a "random social chat
with other QGIS contributors" channel where I'm not feeling like I'm
there to help users out. Would others be interested in this too?

Thanks for your thoughts!
Nyall

From apasotti at gmail.com  Mon Sep 20 00:28:15 2021
From: apasotti at gmail.com (Alessandro Pasotti)
Date: Mon, 20 Sep 2021 09:28:15 +0200
Subject: [QGIS-Developer] Developer support channels
In-Reply-To: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
Message-ID: <CAL5Q672nMVfZpr+NQzpJvw1EFuDqR+49WA1ec0GtC9VAh=O8XA@mail.gmail.com>

Hi Nyall,

Thank you for the proposals, I like them both a lot, needless to say how I
also miss the QGIS hackfests too.

As a side note, during the last PSC meeting we started talking about the
possibility of having in-person meetings again in the near future: stay
tuned!!!



On Mon, Sep 20, 2021 at 8:36 AM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> Hi PSC, QGIS dev list members!
>
> I would like to kick-start some discussion on possible channels that
> we could use to (hopefully temporarily!!) replace our in-person
> contributor meetups.
>
> Kartoza have been doing a brilliant job at connecting with our user
> base through their QGIS Open Day initiative. While I've personally
> found this to be a good replacement for user conference type events, I
> feel like there's a need for a focused QGIS contributors virtual
> meetup.
>
> I think one of the reasons the QGIS contributor community has
> historically had such a welcoming and friendly feel could be directly
> attributed to the in-person hackfest events. I'm sure I'm not the only
> one who is feeling the absence of these! (I would seriously love to be
> back in Nodebo, hanging out with you all in the woodcutters bar and
> trying to hammer a nail into a stump of wood :P )
>
> While it wouldn't be a replacement for these in-person meetups, I'd
> love to see a semi-regular "Friday night drinks" style video chat for
> QGIS contributors. The intention would be that this is
> social/relationship focused, rather than a "QGIS Planning session"
> meetup.
>
> Would anyone else be interested in this?
>
> On this note, I would also love to see some form of
> contributor-focused text chat room for QGIS contributors. While
> there's plenty of chat rooms around for QGIS users, these tend to
> attract toward "how do I do this in QGIS" questions. For this reason I
> personally avoid them, as I'm looking more for a "random social chat
> with other QGIS contributors" channel where I'm not feeling like I'm
> there to help users out. Would others be interested in this too?
>
> Thanks for your thoughts!
> Nyall
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>


-- 
Alessandro Pasotti
QCooperative:  www.qcooperative.net
ItOpen:   www.itopen.it
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/ca1bf183/attachment.html>

From apasotti at gmail.com  Mon Sep 20 00:30:24 2021
From: apasotti at gmail.com (Alessandro Pasotti)
Date: Mon, 20 Sep 2021 09:30:24 +0200
Subject: [QGIS-Developer] 
	=?utf-8?q?Nomination_of_Lo=C3=AFc_Bartoletti_?=
	=?utf-8?q?=28=40lbartoletti=29_for_core_committer_status?=
In-Reply-To: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
References: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
Message-ID: <CAL5Q6715puMT2mH_RAHiULaOb=zQWycoQ7HrnQSbuuXgZe=JFA@mail.gmail.com>

On Mon, Sep 20, 2021 at 8:25 AM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> Following on from the recent discussion on core committers, I would
> like to nominate Lo?c Bartoletti (https://github.com/lbartoletti) for
> core committer status to QGIS.
>
> Lo?c has a very rich history of contributions to QGIS, especially in
> the important areas of digitizing tools and the QGIS CAD framework. He
> has a very high work standard, is responsive to review comments, and
> is not afraid of soaking code in unit tests. In short, he's
> demonstrated time and again the attributes we desire in core QGIS
> committers!
>
> I'd love to see Lo?c's position within QGIS formalised to recognise
> these efforts
>
> Nyall



Enthusiastic +1 from me!

Lo?c has made a whole lot of valuable contributions to QGIS and he totally
deserves this.

Kind regards.

-- 
Alessandro Pasotti
QCooperative:  www.qcooperative.net
ItOpen:   www.itopen.it
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/cbdce716/attachment.html>

From matthias at opengis.ch  Mon Sep 20 00:33:46 2021
From: matthias at opengis.ch (Matthias Kuhn)
Date: Mon, 20 Sep 2021 09:33:46 +0200
Subject: [QGIS-Developer] 
	=?utf-8?q?Nomination_of_Lo=C3=AFc_Bartoletti_?=
	=?utf-8?q?=28=40lbartoletti=29_for_core_committer_status?=
In-Reply-To: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
References: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
Message-ID: <CAC7zN95603aVCXoPY8GgXjxTJ9=ZFqPnskqQGo75ryur-Q_R8Q@mail.gmail.com>

Hi,

Thank you for this nomination, I had the pleasure to work with Lo?c in the
past and very much appreciated his structured way to tackle tasks and
responsiveness in discussions.
+1

Matthias

On Mon, Sep 20, 2021 at 8:25 AM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> Following on from the recent discussion on core committers, I would
> like to nominate Lo?c Bartoletti (https://github.com/lbartoletti) for
> core committer status to QGIS.
>
> Lo?c has a very rich history of contributions to QGIS, especially in
> the important areas of digitizing tools and the QGIS CAD framework. He
> has a very high work standard, is responsive to review comments, and
> is not afraid of soaking code in unit tests. In short, he's
> demonstrated time and again the attributes we desire in core QGIS
> committers!
>
> I'd love to see Lo?c's position within QGIS formalised to recognise
> these efforts
>
> Nyall
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/27f78007/attachment-0001.html>

From werner.macho at gmail.com  Mon Sep 20 00:43:03 2021
From: werner.macho at gmail.com (Werner Macho)
Date: Mon, 20 Sep 2021 09:43:03 +0200
Subject: [QGIS-Developer] Developer support channels
In-Reply-To: <CAL5Q672nMVfZpr+NQzpJvw1EFuDqR+49WA1ec0GtC9VAh=O8XA@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <CAL5Q672nMVfZpr+NQzpJvw1EFuDqR+49WA1ec0GtC9VAh=O8XA@mail.gmail.com>
Message-ID: <CA+3oMjsfVjaHU7YgAbmiaEnwmF82H9haOTZbVEjUS8zpwC3UvQ@mail.gmail.com>

Hi all,
Unless it is again possible to meet in person I really like the idea of the
"social chat" .
I'm also looking forward to a next "in person" meeting (my last one was
Gran Canaria IIRC :( )..
So it would be really nice to see you all for a virtual coffee somewhere
online - and hopefully in the near future again in person.
thanks Nyall for this nice idea

regards
Werner

On Mon, Sep 20, 2021 at 9:29 AM Alessandro Pasotti <apasotti at gmail.com>
wrote:

> Hi Nyall,
>
> Thank you for the proposals, I like them both a lot, needless to say how I
> also miss the QGIS hackfests too.
>
> As a side note, during the last PSC meeting we started talking about the
> possibility of having in-person meetings again in the near future: stay
> tuned!!!
>
>
>
> On Mon, Sep 20, 2021 at 8:36 AM Nyall Dawson <nyall.dawson at gmail.com>
> wrote:
>
>> Hi PSC, QGIS dev list members!
>>
>> I would like to kick-start some discussion on possible channels that
>> we could use to (hopefully temporarily!!) replace our in-person
>> contributor meetups.
>>
>> Kartoza have been doing a brilliant job at connecting with our user
>> base through their QGIS Open Day initiative. While I've personally
>> found this to be a good replacement for user conference type events, I
>> feel like there's a need for a focused QGIS contributors virtual
>> meetup.
>>
>> I think one of the reasons the QGIS contributor community has
>> historically had such a welcoming and friendly feel could be directly
>> attributed to the in-person hackfest events. I'm sure I'm not the only
>> one who is feeling the absence of these! (I would seriously love to be
>> back in Nodebo, hanging out with you all in the woodcutters bar and
>> trying to hammer a nail into a stump of wood :P )
>>
>> While it wouldn't be a replacement for these in-person meetups, I'd
>> love to see a semi-regular "Friday night drinks" style video chat for
>> QGIS contributors. The intention would be that this is
>> social/relationship focused, rather than a "QGIS Planning session"
>> meetup.
>>
>> Would anyone else be interested in this?
>>
>> On this note, I would also love to see some form of
>> contributor-focused text chat room for QGIS contributors. While
>> there's plenty of chat rooms around for QGIS users, these tend to
>> attract toward "how do I do this in QGIS" questions. For this reason I
>> personally avoid them, as I'm looking more for a "random social chat
>> with other QGIS contributors" channel where I'm not feeling like I'm
>> there to help users out. Would others be interested in this too?
>>
>> Thanks for your thoughts!
>> Nyall
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>>
>
>
> --
> Alessandro Pasotti
> QCooperative:  www.qcooperative.net
> ItOpen:   www.itopen.it
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/a90c91f8/attachment.html>

From jef at norbit.de  Mon Sep 20 00:55:09 2021
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Mon, 20 Sep 2021 09:55:09 +0200
Subject: [QGIS-Developer] 
 =?utf-8?q?Nomination_of_Lo=C3=AFc_Bartoletti_?=
 =?utf-8?q?=28=40lbartoletti=29_for_core_committer_status?=
In-Reply-To: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
References: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
Message-ID: <20210920075509.jwjtwap2ijk553kk@norbit.de>

Hi Nyall,

On Mon, 20. Sep 2021 at 16:24:57 +1000, Nyall Dawson wrote:
> I'd love to see Lo?c's position within QGIS formalised to recognise
> these efforts

+1


J?rgen

-- 
J?rgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
Dipl.-Inf. (FH)             Rheinstra?e 13          Fax. +49-4931-918175-50
Software Engineer           D-26506 Norden            https://www.norbit.de
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/eb5ff493/attachment.sig>

From jef at norbit.de  Mon Sep 20 01:41:45 2021
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Mon, 20 Sep 2021 10:41:45 +0200
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
Message-ID: <20210920084145.usfosv6mm2rkigkj@norbit.de>

Hi Nyall,

On Mon, 20. Sep 2021 at 16:35:57 +1000, Nyall Dawson wrote:
> On this note, I would also love to see some form of contributor-focused text
> chat room for QGIS contributors. While there's plenty of chat rooms around
> for QGIS users, these tend to attract toward "how do I do this in QGIS"
> questions.

The IRC channel #qgis still exists.  It used to be that.  Before it was
"replaced" by several "better" alternatives - none of which ever really took
off, but it fragmented and destroyed #qgis.  Not much life left there -
although it looks full of people (most gated from Matrix).


J?rgen

-- 
J?rgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
Dipl.-Inf. (FH)             Rheinstra?e 13          Fax. +49-4931-918175-50
Software Engineer           D-26506 Norden            https://www.norbit.de
QGIS release manager (PSC)  Germany                 IRC: jef on Libera|OFTC
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/c5995a02/attachment.sig>

From nyall.dawson at gmail.com  Mon Sep 20 01:45:02 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 20 Sep 2021 18:45:02 +1000
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <20210920084145.usfosv6mm2rkigkj@norbit.de>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
Message-ID: <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>

On Mon, 20 Sept 2021 at 18:42, J?rgen E. Fischer <jef at norbit.de> wrote:
>
> Hi Nyall,
>
> On Mon, 20. Sep 2021 at 16:35:57 +1000, Nyall Dawson wrote:
> > On this note, I would also love to see some form of contributor-focused text
> > chat room for QGIS contributors. While there's plenty of chat rooms around
> > for QGIS users, these tend to attract toward "how do I do this in QGIS"
> > questions.
>
> The IRC channel #qgis still exists.  It used to be that.  Before it was
> "replaced" by several "better" alternatives - none of which ever really took
> off, but it fragmented and destroyed #qgis.  Not much life left there -
> although it looks full of people (most gated from Matrix).

That's a good point. I'd honestly prefer some channel which is
somewhat gated however, just to weed out the end-user support
questions. From my experience the irc channel (and matrix and its
linked channels) did get quite of lot of these "can anyone help me
with my data?... hello?.... anyone?.... *disconnects*" activity :P


Nyall


>
>
> J?rgen
>
> --
> J?rgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
> Dipl.-Inf. (FH)             Rheinstra?e 13          Fax. +49-4931-918175-50
> Software Engineer           D-26506 Norden            https://www.norbit.de
> QGIS release manager (PSC)  Germany                 IRC: jef on Libera|OFTC
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From jef at norbit.de  Mon Sep 20 01:54:08 2021
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Mon, 20 Sep 2021 10:54:08 +0200
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
Message-ID: <20210920085408.wczb35mifpqvl4zz@norbit.de>

Hi Nyall,

On Mon, 20. Sep 2021 at 18:45:02 +1000, Nyall Dawson wrote:
> >
> > The IRC channel #qgis still exists.  It used to be that.  Before it was
> > "replaced" by several "better" alternatives - none of which ever really took
> > off, but it fragmented and destroyed #qgis.  Not much life left there -
> > although it looks full of people (most gated from Matrix).
 
> That's a good point. I'd honestly prefer some channel which is
> somewhat gated however, just to weed out the end-user support
> questions. From my experience the irc channel (and matrix and its
> linked channels) did get quite of lot of these "can anyone help me
> with my data?... hello?.... anyone?.... *disconnects*" activity :P

Like I said - not much life left - the gating didn't bring that back.  But it
used to be different.  Many contributors were actually there.


J?rgen

-- 
J?rgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
Dipl.-Inf. (FH)             Rheinstra?e 13          Fax. +49-4931-918175-50
Software Engineer           D-26506 Norden            https://www.norbit.de
QGIS release manager (PSC)  Germany                 IRC: jef on Libera|OFTC
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/ddebc7ef/attachment-0001.sig>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Pflichtangaben
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/ddebc7ef/attachment-0001.ksh>

From sylvain.pierre at alsace.eu  Mon Sep 20 02:44:05 2021
From: sylvain.pierre at alsace.eu (PIERRE Sylvain)
Date: Mon, 20 Sep 2021 09:44:05 +0000
Subject: [QGIS-Developer] QGIS connections to MSSQL generate multiple (000s)
 processes on database server
Message-ID: <PR1P264MB2046C7434FC5882C88F7AB329CA09@PR1P264MB2046.FRAP264.PROD.OUTLOOK.COM>

Hi ,

In want to connect with QGIS to a MSSQL geodabase. But when connecting to this DB it generates multiple (000s) processes on database server.
DB contains 10 schemas with several huundred tables

Realy similar to this issue https://github.com/qgis/QGIS/issues/31101#<https://github.com/qgis/QGIS/issues/31101>

Is there any workaround for this ?

Thanks


[cid:image001.jpg at 01D7AE14.CFD37640]
Sylvain PIERRE
Chef de projet syst?me d'information
Direction des Syst?mes d'Information et du D?veloppement Num?rique
Service Projets et Ing?nierie Num?rique
Collectivit? europ?enne d'Alsace
T?l : 03 88 76 68 88
sylvain.pierre at alsace.eu<mailto:sylvain.pierre at alsace.eu>
www.alsace.eu<http://www.alsace.eu>
[facebook]<http://www.facebook.com/toutelalsace> [twitter] <http://www.twitter.com/toutelalsace>  [insta] <http://www.instagram.com/toutelalsace>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/66f3c35d/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.jpg
Type: image/jpeg
Size: 8099 bytes
Desc: image001.jpg
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/66f3c35d/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 827 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/66f3c35d/attachment-0003.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 853 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/66f3c35d/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 1038 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210920/66f3c35d/attachment-0005.png>

From pathmapper at posteo.de  Mon Sep 20 03:10:59 2021
From: pathmapper at posteo.de (pathmapper)
Date: Mon, 20 Sep 2021 10:10:59 +0000
Subject: [QGIS-Developer] =?utf-8?q?QGIS_Server_WFS_1=2E1=2E0_response_XM?=
 =?utf-8?q?L_-_properties_with_xsi=3Anil=3D=22true=22?=
Message-ID: <da793c7175083896a8fd2b272e979282@posteo.de>

Hi,

for a property with NULL value, QGIS Server WFS 1.1.0 includes this 
property with xsi:nil="true" in the response XML.

I noticed this, because other WFS server software is omitting these 
properties with NULL values.

Having a dataset with lots of features and properties with NULL values, 
the data size of the XML response document increases significantly 
(loading and processing times !) with these xsi:nil="true" properties 
compared to omitting and not including them in the XML response.

After digging a lot trough OGC specs, mailing lists, and gh issues I 
still didn?t find an answer to the questions

a) if QGIS Server is complying to the WFS 1.1.0 spec doing so
and
b) why QGIS Server is doing this?

According to [1] omitting the properties ?is by design, as it's a WFS 
specification?. Unfortunately the mentioned link to a thread on an OGC 
mailing list isn?t working anymore (nabble.com shut down).

Would be great if someone can give an insight.

Cheers,
Bjoern

[1] https://stackoverflow.com/a/25507256


From strk at kbt.io  Mon Sep 20 03:41:46 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 20 Sep 2021 12:41:46 +0200
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
Message-ID: <20210920104146.GA3138@c19>

On Mon, Sep 20, 2021 at 06:45:02PM +1000, Nyall Dawson wrote:
> On Mon, 20 Sept 2021 at 18:42, J?rgen E. Fischer <jef at norbit.de> wrote:
> >
> > Hi Nyall,
> >
> > On Mon, 20. Sep 2021 at 16:35:57 +1000, Nyall Dawson wrote:
> > > On this note, I would also love to see some form of contributor-focused text
> > > chat room for QGIS contributors. While there's plenty of chat rooms around
> > > for QGIS users, these tend to attract toward "how do I do this in QGIS"
> > > questions.
> >
> > The IRC channel #qgis still exists.  It used to be that.  Before it was
> > "replaced" by several "better" alternatives - none of which ever really took
> > off, but it fragmented and destroyed #qgis.  Not much life left there -
> > although it looks full of people (most gated from Matrix).
> 
> That's a good point. I'd honestly prefer some channel which is
> somewhat gated however, just to weed out the end-user support
> questions. From my experience the irc channel (and matrix and its
> linked channels) did get quite of lot of these "can anyone help me
> with my data?... hello?.... anyone?.... *disconnects*" activity :P

The Matrix support should make the *disconnects* issue lighter, in
that the disconnected user should get the backlog kept by her Matrix
homeserver, so could read answers upon re-connecting.

--strk;

From lbartoletti at tuxfamily.org  Mon Sep 20 05:00:25 2021
From: lbartoletti at tuxfamily.org (=?UTF-8?Q?Lo=c3=afc_Bartoletti?=)
Date: Mon, 20 Sep 2021 14:00:25 +0200
Subject: [QGIS-Developer] 
 =?utf-8?q?Nomination_of_Lo=C3=AFc_Bartoletti_?=
 =?utf-8?q?=28=40lbartoletti=29_for_core_committer_status?=
In-Reply-To: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
References: <CAB28AsjdfB78LqW22TuJpnSF6FaysEF4fHbhK5EEZU3EOkJYzQ@mail.gmail.com>
Message-ID: <08fec03e-71c8-db80-77b3-e59afebd4810@tuxfamily.org>

Hi,

Thank you so much Nyall for nominating me, and thanks to the others for 
your messages!

It is always a pleasure to contribute to qgis with you.

Hope to see you soon at a hackfest or conference.

Regards,

Lo?c

Le 20/09/2021 ? 08:24, Nyall Dawson a ?crit?:
> Following on from the recent discussion on core committers, I would
> like to nominate Lo?c Bartoletti (https://github.com/lbartoletti) for
> core committer status to QGIS.
>
> Lo?c has a very rich history of contributions to QGIS, especially in
> the important areas of digitizing tools and the QGIS CAD framework. He
> has a very high work standard, is responsive to review comments, and
> is not afraid of soaking code in unit tests. In short, he's
> demonstrated time and again the attributes we desire in core QGIS
> committers!
>
> I'd love to see Lo?c's position within QGIS formalised to recognise
> these efforts
>
> Nyall
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From rdmailings at duif.net  Mon Sep 20 22:55:55 2021
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Tue, 21 Sep 2021 07:55:55 +0200
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
Message-ID: <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net>

On 9/20/21 10:45 AM, Nyall Dawson wrote:
> On Mon, 20 Sept 2021 at 18:42, J?rgen E. Fischer <jef at norbit.de> wrote:
>>
>> Hi Nyall,
>>
>> On Mon, 20. Sep 2021 at 16:35:57 +1000, Nyall Dawson wrote:
>>> On this note, I would also love to see some form of contributor-focused text
>>> chat room for QGIS contributors. While there's plenty of chat rooms around
>>> for QGIS users, these tend to attract toward "how do I do this in QGIS"
>>> questions.
>>
>> The IRC channel #qgis still exists.  It used to be that.  Before it was
>> "replaced" by several "better" alternatives - none of which ever really took
>> off, but it fragmented and destroyed #qgis.  Not much life left there -
>> although it looks full of people (most gated from Matrix).
> 
> That's a good point. I'd honestly prefer some channel which is
> somewhat gated however, just to weed out the end-user support
> questions. From my experience the irc channel (and matrix and its
> linked channels) did get quite of lot of these "can anyone help me
> with my data?... hello?.... anyone?.... *disconnects*" activity :P

I would be ok with both IRC, but I think a #qgis-dev channel on either matrix.org or matrix.osgeo.org would do.

There are proper matrix clients for web and phones ( even for Linux phones ;-) ).

And we could create a invite only group, setting the bar to say 1 accepted Pull (whatever qgis repo) Request or so?
Then we could invite recent github committers, and also tell everybody via the dev list to apply for the invite (and show a link to an accepted PR)? This makes it not a 'friends'-only list, but a little more objective?

Groet,

Richard

From bo.victor.thomsen at gmail.com  Tue Sep 21 00:03:55 2021
From: bo.victor.thomsen at gmail.com (Bo Victor Thomsen)
Date: Tue, 21 Sep 2021 09:03:55 +0200
Subject: [QGIS-Developer] QGIS connections to MSSQL generate multiple
 (000s) processes on database server
In-Reply-To: <PR1P264MB2046C7434FC5882C88F7AB329CA09@PR1P264MB2046.FRAP264.PROD.OUTLOOK.COM>
References: <PR1P264MB2046C7434FC5882C88F7AB329CA09@PR1P264MB2046.FRAP264.PROD.OUTLOOK.COM>
Message-ID: <65786393-d77b-eb9f-7139-9687ab468797@gmail.com>

 From the bug report:

"QGIS is operating a 'full table scan' for MSSQL connections *where no 
geometry_columns table exists*." which triggers the situation. That's 
not smart and should be fixed.

However until that happens, an obvious work-around would be to create 
and populate a geometry_columns table. So if you don't have a 
geometry_columns table in the database, create one and populate it with 
the information about your spatial tables*. *This can be done 
automatically with a stored procedure outside the scope of QGIS.

I /think/ I have such procedure lurking somewhere in my dungeon of a 
backup system. Send me a mail if you're interested.

Med venlig hilsen / Kind regards

Bo Victor Thomsen

Den 20-09-2021 kl. 11:44 skrev PIERRE Sylvain:
>
> Hi ,
>
> In want to connect with QGIS to a MSSQL geodabase. But when connecting 
> to this DB it generates multiple (000s) processes on database server.
>
> DB contains 10 schemas with several huundred tables
>
> Realy similar to this issue https://github.com/qgis/QGIS/issues/31101# 
> <https://github.com/qgis/QGIS/issues/31101>
>
> Is there any workaround for this??
>
> Thanks
>
> **
>
> 	
>
> Sylvain PIERRE**
>
> Chef de projet syst?me d?information
>
> Direction des Syst?mes d?Information et du D?veloppement Num?rique
>
> Service Projets et Ing?nierie Num?rique
>
> *Collectivit? europ?enne d?Alsace*
>
> T?l :?03 88 76 68 88
>
> sylvain.pierre at alsace.eu <mailto:sylvain.pierre at alsace.eu>
>
> www.alsace.eu <http://www.alsace.eu>
>
> facebook <http://www.facebook.com/toutelalsace>twitter 
> <http://www.twitter.com/toutelalsace>insta 
> <http://www.instagram.com/toutelalsace>
>
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/72556acd/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.jpg
Type: image/jpeg
Size: 8099 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/72556acd/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/72556acd/attachment-0003.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 853 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/72556acd/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 1038 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/72556acd/attachment-0005.png>

From sylvain.pierre at alsace.eu  Tue Sep 21 04:50:10 2021
From: sylvain.pierre at alsace.eu (PIERRE Sylvain)
Date: Tue, 21 Sep 2021 11:50:10 +0000
Subject: [QGIS-Developer] QGIS connections to MSSQL generate multiple
 (000s) processes on database server
In-Reply-To: <65786393-d77b-eb9f-7139-9687ab468797@gmail.com>
References: <PR1P264MB2046C7434FC5882C88F7AB329CA09@PR1P264MB2046.FRAP264.PROD.OUTLOOK.COM>
 <65786393-d77b-eb9f-7139-9687ab468797@gmail.com>
Message-ID: <PR1P264MB204680F5C54E844E563364929CA19@PR1P264MB2046.FRAP264.PROD.OUTLOOK.COM>

Thanks Bo ,
It seems to be a valid workaround for us.
I'm interesting in such procedure.

Thanks for your help

[cid:image001.jpg at 01D7AEEF.96D57FB0]
Sylvain PIERRE
Chef de projet syst?me d'information
Direction des Syst?mes d'Information et du D?veloppement Num?rique
Service Projets et Ing?nierie Num?rique
Collectivit? europ?enne d'Alsace
T?l : 03 88 76 68 88
sylvain.pierre at alsace.eu<mailto:sylvain.pierre at alsace.eu>
www.alsace.eu<http://www.alsace.eu>
[facebook]<http://www.facebook.com/toutelalsace> [twitter] <http://www.twitter.com/toutelalsace>  [insta] <http://www.instagram.com/toutelalsace>

De : QGIS-Developer <qgis-developer-bounces at lists.osgeo.org> De la part de Bo Victor Thomsen
Envoy? : mardi 21 septembre 2021 09:04
? : qgis-developer at lists.osgeo.org
Objet : Re: [QGIS-Developer] QGIS connections to MSSQL generate multiple (000s) processes on database server


>From the bug report:

"QGIS is operating a 'full table scan' for MSSQL connections where no geometry_columns table exists." which triggers the situation. That's not smart and should be fixed.

However until that happens, an obvious work-around would be to create and populate a geometry_columns table. So if you don't have a geometry_columns table in the database, create one and populate it with the information about your spatial tables. This can be done automatically with a stored procedure outside the scope of QGIS.

I think I have such procedure lurking somewhere in my dungeon of a backup system. Send me a mail if you're interested.

Med venlig hilsen / Kind regards



Bo Victor Thomsen
Den 20-09-2021 kl. 11:44 skrev PIERRE Sylvain:
Hi ,

In want to connect with QGIS to a MSSQL geodabase. But when connecting to this DB it generates multiple (000s) processes on database server.
DB contains 10 schemas with several huundred tables

Realy similar to this issue https://github.com/qgis/QGIS/issues/31101#<https://github.com/qgis/QGIS/issues/31101>

Is there any workaround for this ?

Thanks


[cid:image005.jpg at 01D7AEEF.96D57FB0]
Sylvain PIERRE
Chef de projet syst?me d'information
Direction des Syst?mes d'Information et du D?veloppement Num?rique
Service Projets et Ing?nierie Num?rique
Collectivit? europ?enne d'Alsace
T?l : 03 88 76 68 88
sylvain.pierre at alsace.eu<mailto:sylvain.pierre at alsace.eu>
www.alsace.eu<http://www.alsace.eu>
[facebook]<http://www.facebook.com/toutelalsace> [twitter] <http://www.twitter.com/toutelalsace>  [insta] <http://www.instagram.com/toutelalsace>




_______________________________________________

QGIS-Developer mailing list

QGIS-Developer at lists.osgeo.org<mailto:QGIS-Developer at lists.osgeo.org>

List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer

Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.jpg
Type: image/jpeg
Size: 8103 bytes
Desc: image001.jpg
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 827 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 853 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 1038 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.jpg
Type: image/jpeg
Size: 8024 bytes
Desc: image005.jpg
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0003.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 895 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.png
Type: image/png
Size: 851 bytes
Desc: image007.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.png
Type: image/png
Size: 1039 bytes
Desc: image008.png
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/3ae297e3/attachment-0011.png>

From gdt at lexort.com  Tue Sep 21 06:32:16 2021
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 21 Sep 2021 09:32:16 -0400
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net> (Richard
 Duivenvoorde's message of "Tue, 21 Sep 2021 07:55:55 +0200")
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net>
Message-ID: <rmiilyurr4v.fsf@s1.lexort.com>


It seems implicit in the discussion that you are only considering open
protocols for which there is first-class open source software, client
and server.  Maybe I missed that earlier, but I wanted to say it
explicitly.

I've been using matrix for similar purposes in other communities, and
it's been reasonable.  Often bridged to IRC or (not-open) Telegram.

I don't really have an opinion on invite-only.  It does strike me as
unusual.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210921/e0642803/attachment.sig>

From strk at kbt.io  Wed Sep 22 09:27:35 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 22 Sep 2021 18:27:35 +0200
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net>
Message-ID: <20210922162735.GC1721@c19>

On Tue, Sep 21, 2021 at 07:55:55AM +0200, Richard Duivenvoorde wrote:
> On 9/20/21 10:45 AM, Nyall Dawson wrote:
> > On Mon, 20 Sept 2021 at 18:42, J?rgen E. Fischer <jef at norbit.de> wrote:
> >>
> >> Hi Nyall,
> >>
> >> On Mon, 20. Sep 2021 at 16:35:57 +1000, Nyall Dawson wrote:
> >>> On this note, I would also love to see some form of contributor-focused text
> >>> chat room for QGIS contributors. While there's plenty of chat rooms around
> >>> for QGIS users, these tend to attract toward "how do I do this in QGIS"
> >>> questions.
> >>
> >> The IRC channel #qgis still exists.  It used to be that.  Before it was
> >> "replaced" by several "better" alternatives - none of which ever really took
> >> off, but it fragmented and destroyed #qgis.  Not much life left there -
> >> although it looks full of people (most gated from Matrix).
> > 
> > That's a good point. I'd honestly prefer some channel which is
> > somewhat gated however, just to weed out the end-user support
> > questions. From my experience the irc channel (and matrix and its
> > linked channels) did get quite of lot of these "can anyone help me
> > with my data?... hello?.... anyone?.... *disconnects*" activity :P
> 
> I would be ok with both IRC, but I think a #qgis-dev channel on either matrix.org or matrix.osgeo.org would do.
> 
> There are proper matrix clients for web and phones ( even for Linux phones ;-) ).

I love Matrix but I've to say I still don't have a proper console
client (used to have a weechat plugin but it broke and was never able
to recover from it) so a bridge to IRC would still be great to me.

I'm starting to think that adding an IRC server to the OSGeo
infrastructure could be a good idea :)

> And we could create a invite only group, setting the bar to say 1 accepted Pull (whatever qgis repo) Request or so?
> Then we could invite recent github committers, and also tell everybody via the dev list to apply for the invite (and show a link to an accepted PR)? This makes it not a 'friends'-only list, but a little more objective?

Are you afraid of spam that you want the group to be private ?

--strk;

From r.nijssen at terglobo.nl  Thu Sep 23 02:26:11 2021
From: r.nijssen at terglobo.nl (Raymond Nijssen)
Date: Thu, 23 Sep 2021 11:26:11 +0200
Subject: [QGIS-Developer] SVG toolbar icons suddenly appearing in black
Message-ID: <09a65ff2-b3d1-d71e-f4e4-8c2cb2e119a2@terglobo.nl>

Hi devs!

The dark blue icons on my plugin toolbar buttons are black for some of 
my customers (on Windows). One of them mentioned that they turned black 
after a QGIS update. On my Linux system they are still blue. I guess it 
has to do with Qt.



Here's the content of the svg file:

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
   <defs>
     <style>
       .a {
         fill: #1b3d6e;
       }
     </style>
   </defs>
   <path class="a" 
d="M15.52,6.54a7.29,7.29,0,0,0-1.77,7.38l-9.9,9.9-.34,4.33,5.94-.6v-2.8h2.8V22h2.8l3.37-3.36a7.26,7.26,0,1,0-2.9-12Zm5.37,2.1a2,2,0,1,1,0,2.81A2,2,0,0,1,20.89,8.64Z"/>
</svg>



And here's how I make the buttons:

icon_fn = os.path.join(self.plugin_dir, 'img', 'icon_configuration.svg')
icon = QIcon(icon_fn)
action = QAction(icon, 'Configure', self.iface.mainWindow())
self.toolbar.addAction(action)




Hope anyone can clarify. The svg files were made by a designer, I guess 
in some Adobe application. Hope I don't need adjusting them.

Kind regards,
Raymond

-------------- next part --------------
A non-text attachment was scrubbed...
Name: icon_configuration.svg
Type: image/svg+xml
Size: 340 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210923/dd514771/attachment.svg>

From charles at kartoza.com  Thu Sep 23 03:29:13 2021
From: charles at kartoza.com (Charles Dixon-Paver)
Date: Thu, 23 Sep 2021 12:29:13 +0200
Subject: [QGIS-Developer] SVG toolbar icons suddenly appearing in black
In-Reply-To: <09a65ff2-b3d1-d71e-f4e4-8c2cb2e119a2@terglobo.nl>
References: <09a65ff2-b3d1-d71e-f4e4-8c2cb2e119a2@terglobo.nl>
Message-ID: <CAK2KqiegFqVG1XqWtcBuieZBWvkgH86qSbpp_k_d8RZwhawLgA@mail.gmail.com>

Hi Raymond,

I am on Windows with 3.20 and the icons are blue for me.

I opened the SVG in inkscape and saved an "optimized svg", which runs
scours against it, and all that changed is the <?xml version="1.0"
encoding="UTF-8"?> definition was added and version="1.1" was injected into
the svg tag.

One oddity though, is that when I changed the feature colour and saved it,
the "bright" svg version retained the <style>.a {fill: #1b3d6e;}</style>
data element, but the *path* tag got a fill="#00f" added into it. I imagine
QGIS is recognising the CSS (for me) but giving preference to the fill
attribute.

Still, all icons are blue for me...

[image: image.png]

It could also be a contrast issue on the users screens changing, where the
blue icon is simply appearing black, but I imagine most likely the system
is not recognizing that css style in the svg.

I hope that helps you.


On Thu, 23 Sept 2021 at 11:26, Raymond Nijssen <r.nijssen at terglobo.nl>
wrote:

> Hi devs!
>
> The dark blue icons on my plugin toolbar buttons are black for some of
> my customers (on Windows). One of them mentioned that they turned black
> after a QGIS update. On my Linux system they are still blue. I guess it
> has to do with Qt.
>
>
>
> Here's the content of the svg file:
>
> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
>    <defs>
>      <style>
>        .a {
>          fill: #1b3d6e;
>        }
>      </style>
>    </defs>
>    <path class="a"
>
> d="M15.52,6.54a7.29,7.29,0,0,0-1.77,7.38l-9.9,9.9-.34,4.33,5.94-.6v-2.8h2.8V22h2.8l3.37-3.36a7.26,7.26,0,1,0-2.9-12Zm5.37,2.1a2,2,0,1,1,0,2.81A2,2,0,0,1,20.89,8.64Z"/>
> </svg>
>
>
>
> And here's how I make the buttons:
>
> icon_fn = os.path.join(self.plugin_dir, 'img', 'icon_configuration.svg')
> icon = QIcon(icon_fn)
> action = QAction(icon, 'Configure', self.iface.mainWindow())
> self.toolbar.addAction(action)
>
>
>
>
> Hope anyone can clarify. The svg files were made by a designer, I guess
> in some Adobe application. Hope I don't need adjusting them.
>
> Kind regards,
> Raymond
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210923/72005ba1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 2621 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210923/72005ba1/attachment.png>

From Dorscheid.Dominique.Extern at swm.de  Thu Sep 23 07:52:49 2021
From: Dorscheid.Dominique.Extern at swm.de (Dorscheid.Dominique.Extern at swm.de)
Date: Thu, 23 Sep 2021 14:52:49 +0000
Subject: [QGIS-Developer] Loading Times of QGIS Relations in Attribute Table
 Form View
Message-ID: <0cd672d7b1d04869952f4cf6164583db@swm.de>

Greetings Dear QGIS Developer Community,

We have a problem with layer relations. In our project, we have many layers (>100) with a lot of relations (up to 10 per layer), all of them bidirectional. Bidirectional means, when layer A references B, layer B always references A, too. The layers are based on a PostGIS/Postgres database.
When we open the form view of the attribute table, the relations are all expanded in the GUI and loaded from database immediately. This means loading times are sometimes longer than a minute, while QGIS freezes. We were looking into possibilities to change the default behaviour, so the relations are initially collapsed (and loaded lazily) instead of extended, when the form in the attribute table opens.

However, we couldn't find any option to do this programmatically in PyQGIS or to manipulate the attribute table settings in the Qgis.ini. Alternatively, it would help if it would be possible to limit the recursion depth from Python. Meaning, a relation in a sub-form should not continue to load its respective relations and don't expand them neither.

Could you help us to find a solution to our problem? We would be grateful for any proposals!

Best Regards
Dominique Dorscheid

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210923/b0223dba/attachment.html>

From nyall.dawson at gmail.com  Thu Sep 23 19:25:55 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 24 Sep 2021 12:25:55 +1000
Subject: [QGIS-Developer] SVG toolbar icons suddenly appearing in black
In-Reply-To: <09a65ff2-b3d1-d71e-f4e4-8c2cb2e119a2@terglobo.nl>
References: <09a65ff2-b3d1-d71e-f4e4-8c2cb2e119a2@terglobo.nl>
Message-ID: <CAB28Asi-rJ2gX6c3nQtzpy=0RLtPUrcPEdqcGzBEm9KAW+SxRw@mail.gmail.com>

On Thu, 23 Sept 2021 at 19:26, Raymond Nijssen <r.nijssen at terglobo.nl> wrote:
>
> Hi devs!
>
> The dark blue icons on my plugin toolbar buttons are black for some of
> my customers (on Windows). One of them mentioned that they turned black
> after a QGIS update. On my Linux system they are still blue. I guess it
> has to do with Qt.

Hi Raymond,

I've seen this in the past. Seems that Qt on windows is more sensitive
to SVG structure vs other platforms! In the past I've had luck by
optimising the svg with https://jakearchibald.github.io/svgomg/  ,
which seems to make Qt happier... (Turn off "Round/rewrite numbers"
option though, cos that makes Qt LESS happy!)

Nyall


>
>
>
> Here's the content of the svg file:
>
> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
>    <defs>
>      <style>
>        .a {
>          fill: #1b3d6e;
>        }
>      </style>
>    </defs>
>    <path class="a"
> d="M15.52,6.54a7.29,7.29,0,0,0-1.77,7.38l-9.9,9.9-.34,4.33,5.94-.6v-2.8h2.8V22h2.8l3.37-3.36a7.26,7.26,0,1,0-2.9-12Zm5.37,2.1a2,2,0,1,1,0,2.81A2,2,0,0,1,20.89,8.64Z"/>
> </svg>
>
>
>
> And here's how I make the buttons:
>
> icon_fn = os.path.join(self.plugin_dir, 'img', 'icon_configuration.svg')
> icon = QIcon(icon_fn)
> action = QAction(icon, 'Configure', self.iface.mainWindow())
> self.toolbar.addAction(action)
>
>
>
>
> Hope anyone can clarify. The svg files were made by a designer, I guess
> in some Adobe application. Hope I don't need adjusting them.
>
> Kind regards,
> Raymond
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From matthias at opengis.ch  Thu Sep 23 23:31:42 2021
From: matthias at opengis.ch (Matthias Kuhn)
Date: Fri, 24 Sep 2021 08:31:42 +0200
Subject: [QGIS-Developer] SVG toolbar icons suddenly appearing in black
In-Reply-To: <CAB28Asi-rJ2gX6c3nQtzpy=0RLtPUrcPEdqcGzBEm9KAW+SxRw@mail.gmail.com>
References: <09a65ff2-b3d1-d71e-f4e4-8c2cb2e119a2@terglobo.nl>
 <CAB28Asi-rJ2gX6c3nQtzpy=0RLtPUrcPEdqcGzBEm9KAW+SxRw@mail.gmail.com>
Message-ID: <CAC7zN963V2M6TZkwqGwPka54YSf1LizARa40ofQhNkMrPK0D=Q@mail.gmail.com>

Hi Raymond,

There has been an issue in Qt, where it was very picky with the <style> tag
in the svg [1]

This is solved in newer Qt versions (and newer QGIS for Windows builds) but
is still present in the early QGIS 3.16 builds based on older Qt versions.

The quick hack is to replace the <style> tag with  <style type="text/css"> in
the svg.
Or upgrade to the latest QGIS version.

Cheers
Matthias

https://bugreports.qt.io/browse/QTBUG-58326?focusedCommentId=344465&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-344465

On Fri, Sep 24, 2021 at 4:26 AM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> On Thu, 23 Sept 2021 at 19:26, Raymond Nijssen <r.nijssen at terglobo.nl>
> wrote:
> >
> > Hi devs!
> >
> > The dark blue icons on my plugin toolbar buttons are black for some of
> > my customers (on Windows). One of them mentioned that they turned black
> > after a QGIS update. On my Linux system they are still blue. I guess it
> > has to do with Qt.
>
> Hi Raymond,
>
> I've seen this in the past. Seems that Qt on windows is more sensitive
> to SVG structure vs other platforms! In the past I've had luck by
> optimising the svg with https://jakearchibald.github.io/svgomg/  ,
> which seems to make Qt happier... (Turn off "Round/rewrite numbers"
> option though, cos that makes Qt LESS happy!)
>
> Nyall
>
>
> >
> >
> >
> > Here's the content of the svg file:
> >
> > <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
> >    <defs>
> >      <style>
> >        .a {
> >          fill: #1b3d6e;
> >        }
> >      </style>
> >    </defs>
> >    <path class="a"
> >
> d="M15.52,6.54a7.29,7.29,0,0,0-1.77,7.38l-9.9,9.9-.34,4.33,5.94-.6v-2.8h2.8V22h2.8l3.37-3.36a7.26,7.26,0,1,0-2.9-12Zm5.37,2.1a2,2,0,1,1,0,2.81A2,2,0,0,1,20.89,8.64Z"/>
> > </svg>
> >
> >
> >
> > And here's how I make the buttons:
> >
> > icon_fn = os.path.join(self.plugin_dir, 'img', 'icon_configuration.svg')
> > icon = QIcon(icon_fn)
> > action = QAction(icon, 'Configure', self.iface.mainWindow())
> > self.toolbar.addAction(action)
> >
> >
> >
> >
> > Hope anyone can clarify. The svg files were made by a designer, I guess
> > in some Adobe application. Hope I don't need adjusting them.
> >
> > Kind regards,
> > Raymond
> >
> > _______________________________________________
> > QGIS-Developer mailing list
> > QGIS-Developer at lists.osgeo.org
> > List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> > Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210924/de6be57a/attachment.html>

From r.nijssen at terglobo.nl  Fri Sep 24 00:06:15 2021
From: r.nijssen at terglobo.nl (Raymond Nijssen)
Date: Fri, 24 Sep 2021 09:06:15 +0200
Subject: [QGIS-Developer] SVG toolbar icons suddenly appearing in black
In-Reply-To: <CAC7zN963V2M6TZkwqGwPka54YSf1LizARa40ofQhNkMrPK0D=Q@mail.gmail.com>
References: <09a65ff2-b3d1-d71e-f4e4-8c2cb2e119a2@terglobo.nl>
 <CAB28Asi-rJ2gX6c3nQtzpy=0RLtPUrcPEdqcGzBEm9KAW+SxRw@mail.gmail.com>
 <CAC7zN963V2M6TZkwqGwPka54YSf1LizARa40ofQhNkMrPK0D=Q@mail.gmail.com>
Message-ID: <8006cf9a-4f80-f363-bf19-0f94267f1ed4@terglobo.nl>

Thank you all! Plenty workarounds for now. And I can also just wait for 
them to upgrade to a new 3.16.x or higher.

Raymond


On 24-09-2021 08:31, Matthias Kuhn wrote:
> Hi Raymond,
> 
> There has been an issue in Qt, where it was very picky with the 
> <style>?tag in the svg [1]
> 
> This is solved in newer Qt versions (and newer QGIS for Windows builds) 
> but is still present in the early QGIS 3.16 builds based on older Qt 
> versions.
> 
> The quick hack is to replace the <style>?tag with <style 
> type="text/css">?in the svg.
> Or upgrade to the latest QGIS version.
> 
> Cheers
> Matthias
> 
> https://bugreports.qt.io/browse/QTBUG-58326?focusedCommentId=344465&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-344465 
> <https://bugreports.qt.io/browse/QTBUG-58326?focusedCommentId=344465&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-344465>
> 
> On Fri, Sep 24, 2021 at 4:26 AM Nyall Dawson <nyall.dawson at gmail.com 
> <mailto:nyall.dawson at gmail.com>> wrote:
> 
>     On Thu, 23 Sept 2021 at 19:26, Raymond Nijssen
>     <r.nijssen at terglobo.nl <mailto:r.nijssen at terglobo.nl>> wrote:
>      >
>      > Hi devs!
>      >
>      > The dark blue icons on my plugin toolbar buttons are black for
>     some of
>      > my customers (on Windows). One of them mentioned that they turned
>     black
>      > after a QGIS update. On my Linux system they are still blue. I
>     guess it
>      > has to do with Qt.
> 
>     Hi Raymond,
> 
>     I've seen this in the past. Seems that Qt on windows is more sensitive
>     to SVG structure vs other platforms! In the past I've had luck by
>     optimising the svg with https://jakearchibald.github.io/svgomg/
>     <https://jakearchibald.github.io/svgomg/>? ,
>     which seems to make Qt happier... (Turn off "Round/rewrite numbers"
>     option though, cos that makes Qt LESS happy!)
> 
>     Nyall
> 
> 
>      >
>      >
>      >
>      > Here's the content of the svg file:
>      >
>      > <svg xmlns="http://www.w3.org/2000/svg
>     <http://www.w3.org/2000/svg>" viewBox="0 0 32 32">
>      >? ? <defs>
>      >? ? ? <style>
>      >? ? ? ? .a {
>      >? ? ? ? ? fill: #1b3d6e;
>      >? ? ? ? }
>      >? ? ? </style>
>      >? ? </defs>
>      >? ? <path class="a"
>      >
>     d="M15.52,6.54a7.29,7.29,0,0,0-1.77,7.38l-9.9,9.9-.34,4.33,5.94-.6v-2.8h2.8V22h2.8l3.37-3.36a7.26,7.26,0,1,0-2.9-12Zm5.37,2.1a2,2,0,1,1,0,2.81A2,2,0,0,1,20.89,8.64Z"/>
>      > </svg>
>      >
>      >
>      >
>      > And here's how I make the buttons:
>      >
>      > icon_fn = os.path.join(self.plugin_dir, 'img',
>     'icon_configuration.svg')
>      > icon = QIcon(icon_fn)
>      > action = QAction(icon, 'Configure', self.iface.mainWindow())
>      > self.toolbar.addAction(action)
>      >
>      >
>      >
>      >
>      > Hope anyone can clarify. The svg files were made by a designer, I
>     guess
>      > in some Adobe application. Hope I don't need adjusting them.
>      >
>      > Kind regards,
>      > Raymond
>      >
>      > _______________________________________________
>      > QGIS-Developer mailing list
>      > QGIS-Developer at lists.osgeo.org
>     <mailto:QGIS-Developer at lists.osgeo.org>
>      > List info:
>     https://lists.osgeo.org/mailman/listinfo/qgis-developer
>     <https://lists.osgeo.org/mailman/listinfo/qgis-developer>
>      > Unsubscribe:
>     https://lists.osgeo.org/mailman/listinfo/qgis-developer
>     <https://lists.osgeo.org/mailman/listinfo/qgis-developer>
>     _______________________________________________
>     QGIS-Developer mailing list
>     QGIS-Developer at lists.osgeo.org <mailto:QGIS-Developer at lists.osgeo.org>
>     List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>     <https://lists.osgeo.org/mailman/listinfo/qgis-developer>
>     Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>     <https://lists.osgeo.org/mailman/listinfo/qgis-developer>
> 

From michel.stuyts at edegem.be  Fri Sep 24 02:03:24 2021
From: michel.stuyts at edegem.be (Michel Stuyts)
Date: Fri, 24 Sep 2021 09:03:24 +0000
Subject: [QGIS-Developer] qgis.utils.plugin_times vs. Debugging/Development
 Tools
Message-ID: <14622326378745f8a3fbea0bee88ac40@edegem.be>

I am the creator of the "Plugin Load Times" plugin.  It's a simple plugin that shows the values of the QGIS Python variable qgis.utils.plugin_times in a gui window, to check which plugins take a long time to load at QGIS startup. I was comparing the values in the qgis.utils.plugin_times variable and the values in the "Debugging/Development Tools" panel - "Startup" - "Load plugins" and I noticed all values are different. So I was wondering why there is a difference? Is the qgis.utils.plugin_times variable still valid?  Is it possible to get the values from the "Debugging/Development Tools" panel in Python?

Michel Stuyts
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210924/67253eca/attachment-0001.html>

From pathmapper at posteo.de  Fri Sep 24 05:36:38 2021
From: pathmapper at posteo.de (pathmapper)
Date: Fri, 24 Sep 2021 12:36:38 +0000
Subject: [QGIS-Developer] 
 =?utf-8?q?QGIS_Server_WFS_1=2E1=2E0_response_XM?=
 =?utf-8?q?L_-_properties_with_xsi=3Anil=3D=22true=22?=
In-Reply-To: <da793c7175083896a8fd2b272e979282@posteo.de>
References: <da793c7175083896a8fd2b272e979282@posteo.de>
Message-ID: <6253a77047f7f7c05bb02fd19df6b5af@posteo.de>

-> https://github.com/qgis/QGIS/issues/45243

On 20.09.2021 12:10, pathmapper wrote:
> Hi,
> 
> for a property with NULL value, QGIS Server WFS 1.1.0 includes this
> property with xsi:nil="true" in the response XML.
> 
> I noticed this, because other WFS server software is omitting these
> properties with NULL values.
> 
> Having a dataset with lots of features and properties with NULL
> values, the data size of the XML response document increases
> significantly (loading and processing times !) with these
> xsi:nil="true" properties compared to omitting and not including them
> in the XML response.
> 
> After digging a lot trough OGC specs, mailing lists, and gh issues I
> still didn?t find an answer to the questions
> 
> a) if QGIS Server is complying to the WFS 1.1.0 spec doing so
> and
> b) why QGIS Server is doing this?
> 
> According to [1] omitting the properties ?is by design, as it's a WFS
> specification?. Unfortunately the mentioned link to a thread on an OGC
> mailing list isn?t working anymore (nabble.com shut down).
> 
> Would be great if someone can give an insight.
> 
> Cheers,
> Bjoern
> 
> [1] https://stackoverflow.com/a/25507256
> 
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From zsolt.gal at satelitnt.com  Fri Sep 24 23:04:57 2021
From: zsolt.gal at satelitnt.com (Gal Zsolt)
Date: Sat, 25 Sep 2021 09:04:57 +0300
Subject: [QGIS-Developer] Plugin for Layout
Message-ID: <1632549897741.6.100250@webmail-backend-production-59cddb7b6-ldtfl>

Hello List!

I like to write a plugin to add map corner coordinates as label to the layout.

I write a python script wich do this.

I make a plugin where I add a menu item to the Qgis main interface. Work. This solution is ugly: I select a menu item to make on action on other window (Layout designer window wiht may layout)!
Now I like to add a menu item to edit menu in the LayoutDesignerInterface?.

Reading the Python Api documentation and the Cookbook I don't understand how to make this.
Can someone help me where to find?additional documentation about this?
I Google it without success.


Thanks in advance for any help!
Zsolt


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210925/7d9b69f0/attachment.html>

From r.nijssen at terglobo.nl  Sat Sep 25 00:24:28 2021
From: r.nijssen at terglobo.nl (Raymond Nijssen)
Date: Sat, 25 Sep 2021 09:24:28 +0200
Subject: [QGIS-Developer] Plugin for Layout
In-Reply-To: <1632549897741.6.100250@webmail-backend-production-59cddb7b6-ldtfl>
References: <1632549897741.6.100250@webmail-backend-production-59cddb7b6-ldtfl>
Message-ID: <9467d71b-f1a8-3010-9e01-ea34679fbda9@terglobo.nl>

Hi Zsolt,

This code adds a button to the layout toolbar. I don't know of a way to 
add things to the layout menu as well.




def designer_opened(designer):
     tb = designer.actionsToolbar()
     action = QAction('Push me!', parent=designer)
     tb.addAction(action)

iface.layoutDesignerOpened.connect(designer_opened)




By the way, you can add a grid to your layout map item and show 
coordinates. There a quite many options. Have you looked into that?

Hope this helps,
Raymond



On 25-09-2021 08:04, Gal Zsolt wrote:
> Hello List!
> 
> I like to write a plugin to add map corner coordinates as label to the 
> layout.
> 
> I write a python script wich do this.
> I make a plugin where I? add a menu item to the Qgis main interface. 
> Work. This solution is ugly: I select a menu item to make on action on 
> other window (Layout designer window wiht may layout)!
> 
> Now I like to add a menu item to edit menu in the 
> *LayoutDesignerInterface?*.
> 
> Reading the Python Api documentation and the Cookbook I don't understand 
> how to make this.
> Can someone help me where to find?additional documentation about this?
> I Google it without success.
> 
> Thanks in advance for any help!
> 
> Zsolt
> 
> 
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 

From tim at kartoza.com  Sun Sep 26 02:51:11 2021
From: tim at kartoza.com (Tim Sutton)
Date: Sun, 26 Sep 2021 10:51:11 +0100
Subject: [QGIS-Developer] Changelog Time for 3.22
Message-ID: <CAES-DZS3a0=-apD+A=mUxAeOtjSm88Q9p1RHtMBkCUcm1VVwdQ@mail.gmail.com>

Hi All

Since we are in feature freeze now,  can I ask you all (especially
contributors of new features to) please clean up your entries in the
changelog - lots of them need tidy ups to be presentable for the changelog.

https://changelog.qgis.org/en/qgis/version/3.22/

Even if you didn't develop features, it would be great if you are able to
contribute improvements to make the changelog readable. If you need any
help, contact myself or Charles (charles at kartoza.com).

Thanks!

Regards

Tim

-- 
------------------------------------------------------------------------------------------

Tim Sutton
Visit http://kartoza.com to find out about open source:
 * Desktop GIS programming services
 * Geospatial web development
* GIS Training
* Consulting Services
Tim is a member of the QGIS Project Steering Committee
-------------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210926/3488433d/attachment.html>

From enzo.ccc at gmail.com  Sun Sep 26 03:28:38 2021
From: enzo.ccc at gmail.com (Enzo Cocca)
Date: Sun, 26 Sep 2021 12:28:38 +0200
Subject: [QGIS-Developer] Run python script whit QProcess and show into
 textEdit the result in realtime
Message-ID: <CAC_+zuoLtLjt9k-BiOq0iR9GZ8ksC+RFcNZbxR73OjztocWruQ@mail.gmail.com>

I wolud print the result during my script run via Qprocess but nothing
happen. I thinking I wrote wrong the args into process start but im not
sure. Some one has an idea? Below my code

class TotalopenstationDialog(QtWidgets.QDialog, FORM_CLASS):

    def __init__(self, parent=None):
        """Constructor."""
        super(TotalopenstationDialog, self).__init__(parent)
        self.setupUi(self)

    def dataReady(self):
        cursor = self.textEdit.textCursor()
        cursor.movePosition(cursor.End)
        cursor.insertText(str(self.process.readAll()))
        self.textEdit.ensureCursorVisible()

    def callProgram(self):
        # run the process
        # `start` takes the exec and a list of arguments
        python_path = sys.exec_prefix
        python_version = sys.version[:3]
        p = '{}\python'.format(python_path)
        b=QgsApplication.qgisSettingsDirPath().replace("/","\\")#this
one works for windows path
        cmd = os.path.join(os.sep, b, 'python', 'plugins',
'totalopenstationToQgis',
        'scripts', 'totalopenstation-cli-parser.py')
        self.process = QProcess(self)
        # QProcess emits `readyRead` when there is data to be read
        self.process.readyRead.connect(self.dataReady)
        self.process.start(p, [cmd,
'-i',str(self.lineEdit_input.text()),'-o',str(self.lineEdit_output.text()),'-f',self.comboBox_format.currentText(),'-t',self.comboBox_format2.currentText(),'--overwrite'])

    def on_pushButton_connect_pressed(self):
        self.callProgram()


-- 
Enzo Cocca PhD
in "Science and Technology for Archaeology and Cultural Heritage"

ISMEO
International Association of Mediterranean and Oriental Studies


mail: enzo.ccc at gmail.com
cell: +393495087014
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210926/ad5f3ba2/attachment.html>

From carrillo.german at gmail.com  Sun Sep 26 13:16:00 2021
From: carrillo.german at gmail.com (=?UTF-8?Q?Germ=C3=A1n_Carrillo?=)
Date: Sun, 26 Sep 2021 15:16:00 -0500
Subject: [QGIS-Developer] Run python script whit QProcess and show into
 textEdit the result in realtime
In-Reply-To: <CAC_+zuoLtLjt9k-BiOq0iR9GZ8ksC+RFcNZbxR73OjztocWruQ@mail.gmail.com>
References: <CAC_+zuoLtLjt9k-BiOq0iR9GZ8ksC+RFcNZbxR73OjztocWruQ@mail.gmail.com>
Message-ID: <CANaz7mzEGEBBs++V-zL5pLSjsK5uhBkHPvK+uFLFy6-34pRKdA@mail.gmail.com>

Hi,

it might be useful for you to have a look at how QgisModelBaker does it:

https://github.com/opengisch/QgisModelBaker/blob/master/QgisModelBaker/libili2db/iliexecutable.py#L139-L185

Regards,

Germ?n


El dom, 26 sept 2021 a las 5:28, Enzo Cocca (<enzo.ccc at gmail.com>) escribi?:

> I wolud print the result during my script run via Qprocess but nothing
> happen. I thinking I wrote wrong the args into process start but im not
> sure. Some one has an idea? Below my code
>
> class TotalopenstationDialog(QtWidgets.QDialog, FORM_CLASS):
>
>     def __init__(self, parent=None):
>         """Constructor."""
>         super(TotalopenstationDialog, self).__init__(parent)
>         self.setupUi(self)
>
>     def dataReady(self):
>         cursor = self.textEdit.textCursor()
>         cursor.movePosition(cursor.End)
>         cursor.insertText(str(self.process.readAll()))
>         self.textEdit.ensureCursorVisible()
>
>     def callProgram(self):
>         # run the process
>         # `start` takes the exec and a list of arguments
>         python_path = sys.exec_prefix
>         python_version = sys.version[:3]
>         p = '{}\python'.format(python_path)
>         b=QgsApplication.qgisSettingsDirPath().replace("/","\\")#this one works for windows path
>         cmd = os.path.join(os.sep, b, 'python', 'plugins', 'totalopenstationToQgis',
>         'scripts', 'totalopenstation-cli-parser.py')
>         self.process = QProcess(self)
>         # QProcess emits `readyRead` when there is data to be read
>         self.process.readyRead.connect(self.dataReady)
>         self.process.start(p, [cmd, '-i',str(self.lineEdit_input.text()),'-o',str(self.lineEdit_output.text()),'-f',self.comboBox_format.currentText(),'-t',self.comboBox_format2.currentText(),'--overwrite'])
>
>     def on_pushButton_connect_pressed(self):
>         self.callProgram()
>
>
> --
> Enzo Cocca PhD
> in "Science and Technology for Archaeology and Cultural Heritage"
>
> ISMEO
> International Association of Mediterranean and Oriental Studies
>
>
> mail: enzo.ccc at gmail.com
> cell: +393495087014
>
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>


-- 
-----------
  |\__
(:>__)(
   |/
Soluciones Geoinform?ticas Libres
http://geotux.tuxfamily.org/
https://twitter.com/GeoTux2 <http://twitter.com/GeoTux2>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210926/05c787e2/attachment.html>

From tim at kartoza.com  Mon Sep 27 01:57:08 2021
From: tim at kartoza.com (Tim Sutton)
Date: Mon, 27 Sep 2021 09:57:08 +0100
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <20210922162735.GC1721@c19>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net> <20210922162735.GC1721@c19>
Message-ID: <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>

Hi



On Wed, Sep 22, 2021 at 5:31 PM Sandro Santilli <strk at kbt.io> wrote:

> On Tue, Sep 21, 2021 at 07:55:55AM +0200, Richard Duivenvoorde wrote:
> > On 9/20/21 10:45 AM, Nyall Dawson wrote:
> > > On Mon, 20 Sept 2021 at 18:42, J?rgen E. Fischer <jef at norbit.de>
> wrote:
> > >>
> > >> Hi Nyall,
> > >>
> > >> On Mon, 20. Sep 2021 at 16:35:57 +1000, Nyall Dawson wrote:
> > >>> On this note, I would also love to see some form of
> contributor-focused text
> > >>> chat room for QGIS contributors. While there's plenty of chat rooms
> around
> > >>> for QGIS users, these tend to attract toward "how do I do this in
> QGIS"
> > >>> questions.
> > >>
> > >> The IRC channel #qgis still exists.  It used to be that.  Before it
> was
> > >> "replaced" by several "better" alternatives - none of which ever
> really took
> > >> off, but it fragmented and destroyed #qgis.


I'm not sure if that is true - we foster an active discussion in the
telegram group with around 1600 users in it which has daily chatter,
moderation, and provides a good resource to general QGIS users. I think
that is more than we ever had in IRC. I believe there is also a facebook
group which is host to 40000 users or something like that (word of mouth,
never been in there) and is well moderated. So while IRC was great in its
day it really has been replaced by things more relevant to today's user who
expects to be able to drag and drop images  into a chat, make emojis etc.

So the real loss here (as Nyall sparked the thread to point out) is a forum
for the contributor community to be able to chat without the noise of 'how
do I add a layer to my map' type questions.




> Not much life left there -
> > >> although it looks full of people (most gated from Matrix).
> > >
> > > That's a good point. I'd honestly prefer some channel which is
> > > somewhat gated however, just to weed out the end-user support
> > > questions. From my experience the irc channel (and matrix and its
> > > linked channels) did get quite of lot of these "can anyone help me
> > > with my data?... hello?.... anyone?.... *disconnects*" activity :P
> >
> > I would be ok with both IRC, but I think a #qgis-dev channel on either
> matrix.org or matrix.osgeo.org would do.
> >
> > There are proper matrix clients for web and phones ( even for Linux
> phones ;-) ).
>
> I love Matrix but I've to say I still don't have a proper console
> client (used to have a weechat plugin but it broke and was never able
> to recover from it) so a bridge to IRC would still be great to me.
>
> I'm starting to think that adding an IRC server to the OSGeo
> infrastructure could be a good idea :)
>

For me if we cannot paste screenshots and formatted code listings,
hyperlinks it would be a massive step back to the early 2000's so please,
let's use something more modern....



>
> > And we could create a invite only group, setting the bar to say 1
> accepted Pull (whatever qgis repo) Request or so?
> > Then we could invite recent github committers, and also tell everybody
> via the dev list to apply for the invite (and show a link to an accepted
> PR)? This makes it not a 'friends'-only list, but a little more objective?
>
> Are you afraid of spam that you want the group to be private ?
>

I think Nyall is less concerned with spam than with off topic noise. And
how about we make the group read for all but to write in it you have to be
able to demonstrate that you are a contributor rather than just a user? Is
that possible in matrix?

Regards

Tim




>
> --strk;
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>


-- 
------------------------------------------------------------------------------------------

Tim Sutton
Visit http://kartoza.com to find out about open source:
 * Desktop GIS programming services
 * Geospatial web development
* GIS Training
* Consulting Services
Tim is a member of the QGIS Project Steering Committee
-------------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210927/24029199/attachment-0001.html>

From strk at kbt.io  Mon Sep 27 05:05:55 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 27 Sep 2021 14:05:55 +0200
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net>
 <20210922162735.GC1721@c19>
 <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
Message-ID: <20210927120555.GA1782@c19>

On Mon, Sep 27, 2021 at 09:57:08AM +0100, Tim Sutton wrote:

> I think Nyall is less concerned with spam than with off topic noise. And
> how about we make the group read for all but to write in it you have to be
> able to demonstrate that you are a contributor rather than just a user? Is
> that possible in matrix?

Yes, matrix has a flexible "power levels" mechanism so that you can
define how much power is needed for the "Send messages" privilege
and assign that much power to group of users.

See https://matrix.org/docs/guides/moderation

The IRC comment I made was to still be able to attend such a new room
of QGIS w/out having a Matrix console client. Drag & drop with Matrix
is supported, and nicely converts to IRC links I can click to watch
what you pasted :)

--strk;

From tim at kartoza.com  Mon Sep 27 05:12:45 2021
From: tim at kartoza.com (Tim Sutton)
Date: Mon, 27 Sep 2021 13:12:45 +0100
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <20210927120555.GA1782@c19>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net> <20210922162735.GC1721@c19>
 <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
 <20210927120555.GA1782@c19>
Message-ID: <CAES-DZTCH3guDaNwFboCDrKpEo88yN3UF5wG2ecR++4Mjyb_NQ@mail.gmail.com>

Thanks Sandro!

Regards

Tim

On Mon, Sep 27, 2021 at 1:05 PM Sandro Santilli <strk at kbt.io> wrote:

> On Mon, Sep 27, 2021 at 09:57:08AM +0100, Tim Sutton wrote:
>
> > I think Nyall is less concerned with spam than with off topic noise. And
> > how about we make the group read for all but to write in it you have to
> be
> > able to demonstrate that you are a contributor rather than just a user?
> Is
> > that possible in matrix?
>
> Yes, matrix has a flexible "power levels" mechanism so that you can
> define how much power is needed for the "Send messages" privilege
> and assign that much power to group of users.
>
> See https://matrix.org/docs/guides/moderation
>
> The IRC comment I made was to still be able to attend such a new room
> of QGIS w/out having a Matrix console client. Drag & drop with Matrix
> is supported, and nicely converts to IRC links I can click to watch
> what you pasted :)
>
> --strk;
>


-- 
------------------------------------------------------------------------------------------
?

Tim Sutton
Visit http://kartoza.com to find out about open source:
 * Desktop GIS programming services
 * Geospatial web development
* GIS Training
* Consulting Services
Tim is a member of the QGIS Project Steering Committee
-------------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210927/c9003c94/attachment.html>

From nyall.dawson at gmail.com  Mon Sep 27 15:21:06 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 28 Sep 2021 08:21:06 +1000
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net> <20210922162735.GC1721@c19>
 <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
Message-ID: <CAB28Asjh-+Rbez+VpCDaFeDtZfnU0P-0sSQSDMrh_VoCcTqRcA@mail.gmail.com>

On Mon, 27 Sept 2021 at 18:57, Tim Sutton <tim at kartoza.com> wrote:
>>
>>
>> > And we could create a invite only group, setting the bar to say 1 accepted Pull (whatever qgis repo) Request or so?
>> > Then we could invite recent github committers, and also tell everybody via the dev list to apply for the invite (and show a link to an accepted PR)? This makes it not a 'friends'-only list, but a little more objective?
>>
>> Are you afraid of spam that you want the group to be private ?
>
>
> I think Nyall is less concerned with spam than with off topic noise. And how about we make the group read for all but to write in it you have to be able to demonstrate that you are a contributor rather than just a user? Is that possible in matrix?

My personal preference would be for a totally closed, invite only
group, with NO recorded chat logs/offline history. While my primary
intention is that this is a social channel for contributors, I'm also
hoping it could act partially as a bit of a "support group"
environment for this community. There's a lot of us who are working
alone from home (or from very small team environments) due to current
social situations, and I think there's a strong need for the group to
facilitate deeper/more personal conversations at times.

So I'd rather see us err toward exclusivity/private chat options vs
open/public ones.

Nyall



>
> Regards
>
> Tim
>
>
>
>>
>>
>> --strk;
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>
>
>
> --
> ------------------------------------------------------------------------------------------
>
> Tim Sutton
> Visit http://kartoza.com to find out about open source:
>  * Desktop GIS programming services
>  * Geospatial web development
> * GIS Training
> * Consulting Services
> Tim is a member of the QGIS Project Steering Committee
> -------------------------------------------------------------------------------------------
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From nyall.dawson at gmail.com  Mon Sep 27 15:21:53 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 28 Sep 2021 08:21:53 +1000
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAB28Asjh-+Rbez+VpCDaFeDtZfnU0P-0sSQSDMrh_VoCcTqRcA@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net> <20210922162735.GC1721@c19>
 <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
 <CAB28Asjh-+Rbez+VpCDaFeDtZfnU0P-0sSQSDMrh_VoCcTqRcA@mail.gmail.com>
Message-ID: <CAB28AshjRFy_61yHLHLb64ZSyoOq8_7p=CyZrn38p_6ruzxXvg@mail.gmail.com>

On Tue, 28 Sept 2021 at 08:21, Nyall Dawson <nyall.dawson at gmail.com> wrote:
 I'm also
> hoping it could act partially as a bit of a "support group"
> environment for this community.

Oops, that was supposed to be "mental health support group"

Nyall

From nyall.dawson at gmail.com  Mon Sep 27 16:07:17 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 28 Sep 2021 09:07:17 +1000
Subject: [QGIS-Developer] Plugin for Layout
In-Reply-To: <9467d71b-f1a8-3010-9e01-ea34679fbda9@terglobo.nl>
References: <1632549897741.6.100250@webmail-backend-production-59cddb7b6-ldtfl>
 <9467d71b-f1a8-3010-9e01-ea34679fbda9@terglobo.nl>
Message-ID: <CAB28Asg+agouEQ6tWtY_ZLO28JEPdvB6QvjU+qcOOz9mZzR3zA@mail.gmail.com>

On Sat, 25 Sept 2021 at 17:24, Raymond Nijssen <r.nijssen at terglobo.nl> wrote:
>
> Hi Zsolt,
>
> This code adds a button to the layout toolbar. I don't know of a way to
> add things to the layout menu as well.
>
>
>
>
> def designer_opened(designer):
>      tb = designer.actionsToolbar()
>      action = QAction('Push me!', parent=designer)
>      tb.addAction(action)
>
> iface.layoutDesignerOpened.connect(designer_opened)

Take a look at the code from the QGIS Cartography Tools plugin,
specifically around here:
https://github.com/north-road/qgis-cartography-tools/blob/master/cartography_tools/gui/layout_designer_hooks.py#L61

That plugin adds a bunch of hooks into different parts of the layout
designer and would be a good model to copy from.

Nyall

>
>
>
>
> By the way, you can add a grid to your layout map item and show
> coordinates. There a quite many options. Have you looked into that?
>
> Hope this helps,
> Raymond
>
>
>
> On 25-09-2021 08:04, Gal Zsolt wrote:
> > Hello List!
> >
> > I like to write a plugin to add map corner coordinates as label to the
> > layout.
> >
> > I write a python script wich do this.
> > I make a plugin where I  add a menu item to the Qgis main interface.
> > Work. This solution is ugly: I select a menu item to make on action on
> > other window (Layout designer window wiht may layout)!
> >
> > Now I like to add a menu item to edit menu in the
> > *LayoutDesignerInterface?*.
> >
> > Reading the Python Api documentation and the Cookbook I don't understand
> > how to make this.
> > Can someone help me where to find additional documentation about this?
> > I Google it without success.
> >
> > Thanks in advance for any help!
> >
> > Zsolt
> >
> >
> > _______________________________________________
> > QGIS-Developer mailing list
> > QGIS-Developer at lists.osgeo.org
> > List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> > Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> >
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From tim at kartoza.com  Mon Sep 27 16:10:58 2021
From: tim at kartoza.com (Tim Sutton)
Date: Tue, 28 Sep 2021 00:10:58 +0100
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAB28AshjRFy_61yHLHLb64ZSyoOq8_7p=CyZrn38p_6ruzxXvg@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net> <20210922162735.GC1721@c19>
 <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
 <CAB28Asjh-+Rbez+VpCDaFeDtZfnU0P-0sSQSDMrh_VoCcTqRcA@mail.gmail.com>
 <CAB28AshjRFy_61yHLHLb64ZSyoOq8_7p=CyZrn38p_6ruzxXvg@mail.gmail.com>
Message-ID: <CAES-DZRYDw2WdEyOCrkxUS3jeH3W-5sGr_-bgYg0t06+UhT_qA@mail.gmail.com>

Hi

Ah ok gotcha!

Regards

Tim

On Mon, Sep 27, 2021 at 11:22 PM Nyall Dawson <nyall.dawson at gmail.com>
wrote:

> On Tue, 28 Sept 2021 at 08:21, Nyall Dawson <nyall.dawson at gmail.com>
> wrote:
>  I'm also
> > hoping it could act partially as a bit of a "support group"
> > environment for this community.
>
> Oops, that was supposed to be "mental health support group"
>
> Nyall
>


-- 
------------------------------------------------------------------------------------------
?

Tim Sutton
Visit http://kartoza.com to find out about open source:
 * Desktop GIS programming services
 * Geospatial web development
* GIS Training
* Consulting Services
Tim is a member of the QGIS Project Steering Committee
-------------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210928/9e42281a/attachment.html>

From info at geoproc.com  Tue Sep 28 00:13:49 2021
From: info at geoproc.com (info)
Date: Tue, 28 Sep 2021 09:13:49 +0200
Subject: [QGIS-Developer] No Transforms Available: Useless message
Message-ID: <46b83722-cff2-1a93-9a64-d3a4029cc006@geoproc.com>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210928/62488829/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pahdfheildogkobm.jpg
Type: image/jpeg
Size: 30629 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210928/62488829/attachment-0001.jpg>

From techrules08041 at yahoo.com  Tue Sep 28 08:34:44 2021
From: techrules08041 at yahoo.com (Ethan Snyder)
Date: Tue, 28 Sep 2021 11:34:44 -0400
Subject: [QGIS-Developer] [Qgis-psc] Developer support channels
In-Reply-To: <CAES-DZRYDw2WdEyOCrkxUS3jeH3W-5sGr_-bgYg0t06+UhT_qA@mail.gmail.com>
References: <CAB28Asj8Vpd-aj0V6ewSGLutP2DgL1bP--f4WsUk+SabRdKsgg@mail.gmail.com>
 <20210920084145.usfosv6mm2rkigkj@norbit.de>
 <CAB28Asg6pRe18yMjbmzCgvpsJtsanro-_Zyx9oOBY+qvRRjMTg@mail.gmail.com>
 <460bfb56-1cbd-23c3-90c2-d9b8891d16c5@duif.net> <20210922162735.GC1721@c19>
 <CAES-DZR5=LRJfOmAjcDaMpaUYqLZhBJwWGvEFyE4BVcgrud8fQ@mail.gmail.com>
 <CAB28Asjh-+Rbez+VpCDaFeDtZfnU0P-0sSQSDMrh_VoCcTqRcA@mail.gmail.com>
 <CAB28AshjRFy_61yHLHLb64ZSyoOq8_7p=CyZrn38p_6ruzxXvg@mail.gmail.com>
 <CAES-DZRYDw2WdEyOCrkxUS3jeH3W-5sGr_-bgYg0t06+UhT_qA@mail.gmail.com>
Message-ID: <47de09f5-4c5d-451b-a8ff-3a26fbedb837@yahoo.com>

Hey Nyall:

I saw this thread and couldn't help but think of my QEP which discusses this topic.
https://github.com/qgis/QGIS-Enhancement-Proposals/issues/229

- Ethan Snyder

?Sent via Bluemail for Android

On Sep 27, 2021, 7:11 PM, at 7:11 PM, Tim Sutton <tim at kartoza.com> wrote:
>Hi
>
>Ah ok gotcha!
>
>Regards
>
>Tim
>
>On Mon, Sep 27, 2021 at 11:22 PM Nyall Dawson <nyall.dawson at gmail.com>
>wrote:
>
>> On Tue, 28 Sept 2021 at 08:21, Nyall Dawson <nyall.dawson at gmail.com>
>> wrote:
>>  I'm also
>> > hoping it could act partially as a bit of a "support group"
>> > environment for this community.
>>
>> Oops, that was supposed to be "mental health support group"
>>
>> Nyall
>>
>
>
>-- 
>------------------------------------------------------------------------------------------
>?
>
>Tim Sutton
>Visit http://kartoza.com to find out about open source:
> * Desktop GIS programming services
> * Geospatial web development
>* GIS Training
>* Consulting Services
>Tim is a member of the QGIS Project Steering Committee
>-------------------------------------------------------------------------------------------
>
>
>------------------------------------------------------------------------
>
>_______________________________________________
>QGIS-Developer mailing list
>QGIS-Developer at lists.osgeo.org
>List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210928/45b6cfe5/attachment.html>

From strk at kbt.io  Thu Sep 30 05:48:13 2021
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 30 Sep 2021 14:48:13 +0200
Subject: [QGIS-Developer] CI broken (MinGW64)
Message-ID: <20210930124813.GB3107@c19>

CI broke about 3 hours ago for some reason external to QGIS codebase:
https://github.com/qgis/QGIS/runs/3754353807#step:7:97

    Could not find PyQt5

Anyone with better knowledge of the CI Docker setup to deal with this ?

--strk; 

From manisandro at gmail.com  Thu Sep 30 05:56:53 2021
From: manisandro at gmail.com (Sandro Mani)
Date: Thu, 30 Sep 2021 14:56:53 +0200
Subject: [QGIS-Developer] CI broken (MinGW64)
In-Reply-To: <20210930124813.GB3107@c19>
References: <20210930124813.GB3107@c19>
Message-ID: <b5861533-c200-57da-0707-6ebe40e2c24e@gmail.com>

Will be fixed with this: https://github.com/qgis/QGIS/pull/45303

Sandro

On 30.09.21 14:48, Sandro Santilli wrote:
> CI broke about 3 hours ago for some reason external to QGIS codebase:
> https://github.com/qgis/QGIS/runs/3754353807#step:7:97
>
>      Could not find PyQt5
>
> Anyone with better knowledge of the CI Docker setup to deal with this ?
>
> --strk;
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer

From a.neumann at carto.net  Fri Sep  3 07:31:08 2021
From: a.neumann at carto.net (Andreas Neumann)
Date: Fri, 03 Sep 2021 14:31:08 -0000
Subject: [QGIS-Developer] Trouble compiling QGIS
In-Reply-To: <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>
References: <6154ac5b7424495d27cc5fe906bb1969@carto.net>
 <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>
Message-ID: <8ea7393b81cccb2768ca4ed153c7d957@carto.net>

Hi Even,

Thank you for your reply.

I checked with the ldd about gdal/geos/proj - and they all seem to link 
to the self-compiled versions in /usr/local/lib

gdal:

xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libgdal.so.29
        linux-vdso.so.1 (0x00007fffb930d000)
        libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
(0x00007f2509600000)
        libjson-c.so.4 => /lib/x86_64-linux-gnu/libjson-c.so.4 
(0x00007f25095ee000)
        libfreexl.so.1 => /lib/x86_64-linux-gnu/libfreexl.so.1 
(0x00007f25095e3000)
        libgeos_c.so.1 => /usr/local/lib/libgeos_c.so.1 
(0x00007f25095a5000)
        libexpat.so.1 => /lib/x86_64-linux-gnu/libexpat.so.1 
(0x00007f2509577000)
        libxerces-c-3.2.so => /lib/x86_64-linux-gnu/libxerces-c-3.2.so 
(0x00007f25091e4000)
        libpq.so.5 => /usr/local/pgsql/lib/libpq.so.5 
(0x00007f2509193000)
        libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 
(0x00007f25090ea000)
        libproj.so.22 => /usr/local/lib/libproj.so.22 
(0x00007f2508d40000)
        libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
(0x00007f2508c17000)
        libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 
(0x00007f2508b92000)
        libdeflate.so.0 => /lib/x86_64-linux-gnu/libdeflate.so.0 
(0x00007f2508b74000)
        libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f2508b56000)
        libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
(0x00007f2508b33000)
        libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 
(0x00007f2508b2d000)
        libpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 
(0x00007f2508aba000)
        libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 
(0x00007f2508a29000)
        libxml2.so.2 => /lib/x86_64-linux-gnu/libxml2.so.2 
(0x00007f250886f000)
        libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
(0x00007f250868b000)
        libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f250853c000)
        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f250834a000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f250afe7000)
        libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
(0x00007f250832f000)
        libgeos-3.9.1.so => /usr/local/lib/libgeos-3.9.1.so 
(0x00007f250811b000)
        libcurl-gnutls.so.4 => /lib/x86_64-linux-gnu/libcurl-gnutls.so.4 
(0x00007f250808c000)
        libicuuc.so.66 => /lib/x86_64-linux-gnu/libicuuc.so.66 
(0x00007f2507ea4000)
        libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
(0x00007f2507e11000)
        libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 
(0x00007f2507d90000)
        libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
(0x00007f2507d67000)
        libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 
(0x00007f2507d46000)
        librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 
(0x00007f2507d24000)
        libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 
(0x00007f2507cb6000)
        libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 
(0x00007f2507ca3000)
        libgssapi_krb5.so.2 => /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 
(0x00007f2507c56000)
        libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
(0x00007f2507c00000)
        liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
(0x00007f2507bef000)
        libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
(0x00007f2507bdf000)
        liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 
(0x00007f2507bb6000)
        libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
(0x00007f2507b7c000)
        libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
(0x00007f25079a6000)
        libicudata.so.66 => /lib/x86_64-linux-gnu/libicudata.so.66 
(0x00007f2505ee5000)
        libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 
(0x00007f2505e79000)
        libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 
(0x00007f2505c6b000)
        libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
(0x00007f2505ae9000)
        libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
(0x00007f2505ab2000)
        libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 
(0x00007f2505a2e000)
        libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 
(0x00007f250594f000)
        libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
(0x00007f250591e000)
        libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
(0x00007f2505917000)
        libkrb5support.so.0 => /lib/x86_64-linux-gnu/libkrb5support.so.0 
(0x00007f2505908000)
        libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
(0x00007f25058ec000)
        libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
(0x00007f25058cf000)
        libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
(0x00007f2505888000)
        libbrotlicommon.so.1 => 
/lib/x86_64-linux-gnu/libbrotlicommon.so.1 (0x00007f2505865000)
        libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
(0x00007f250572f000)
        libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
(0x00007f2505719000)
        libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
(0x00007f2505712000)
        libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
(0x00007f2505704000)
        libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
(0x00007f2505671000)
        libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 
(0x00007f25055ca000)
        libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
(0x00007f2505592000)
        libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
(0x00007f2505579000)
        libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 
(0x00007f250556d000)
        libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 
(0x00007f2505541000)
        libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
(0x00007f250552f000)
        libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
(0x00007f25054e1000)
        libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
(0x00007f25054a6000)

geos:

xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libgeos-3.9.1.so
        linux-vdso.so.1 (0x00007fff313c5000)
        libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
(0x00007fbbea26f000)
        libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fbbea120000)
        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fbbe9f2e000)
        libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
(0x00007fbbe9f13000)
        /lib64/ld-linux-x86-64.so.2 (0x00007fbbea688000)

proj:

xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libproj.so.22
        linux-vdso.so.1 (0x00007ffd8a9e9000)
        libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
(0x00007f91d7530000)
        libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 
(0x00007f91d74af000)
        libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 
(0x00007f91d741e000)
        libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
(0x00007f91d73fb000)
        libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 
(0x00007f91d73f5000)
        libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
(0x00007f91d7213000)
        libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f91d70c2000)
        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f91d6ed0000)
        libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
(0x00007f91d6eb5000)
        libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 
(0x00007f91d6e4b000)
        libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 
(0x00007f91d6da2000)
        liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 
(0x00007f91d6d79000)
        libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 
(0x00007f91d6b69000)
        libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 
(0x00007f91d6ae4000)
        libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f91d6ac8000)
        libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
(0x00007f91d6a9f000)
        libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 
(0x00007f91d6a7e000)
        librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 
(0x00007f91d6a5e000)
        libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 
(0x00007f91d69ee000)
        libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 
(0x00007f91d69db000)
        libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
(0x00007f91d6948000)
        libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
(0x00007f91d6672000)
        libgssapi_krb5.so.2 => /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 
(0x00007f91d6625000)
        libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
(0x00007f91d65cf000)
        liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
(0x00007f91d65bc000)
        libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
(0x00007f91d65ae000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f91d7a26000)
        libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
(0x00007f91d642c000)
        libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
(0x00007f91d6256000)
        libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
(0x00007f91d621f000)
        libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
(0x00007f91d61e3000)
        libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 
(0x00007f91d615f000)
        libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 
(0x00007f91d6082000)
        libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
(0x00007f91d6051000)
        libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
(0x00007f91d604a000)
        libkrb5support.so.0 => /lib/x86_64-linux-gnu/libkrb5support.so.0 
(0x00007f91d6039000)
        libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
(0x00007f91d601d000)
        libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
(0x00007f91d6000000)
        libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
(0x00007f91d5fbb000)
        libbrotlicommon.so.1 => 
/lib/x86_64-linux-gnu/libbrotlicommon.so.1 (0x00007f91d5f98000)
        libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
(0x00007f91d5e62000)
        libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
(0x00007f91d5e4a000)
        libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
(0x00007f91d5e43000)
        libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
(0x00007f91d5e37000)
        libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
(0x00007f91d5da4000)
        libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 
(0x00007f91d5cfd000)
        libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
(0x00007f91d5cc3000)
        libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
(0x00007f91d5caa000)
        libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 
(0x00007f91d5c9e000)
        libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 
(0x00007f91d5c74000)
        libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
(0x00007f91d5c62000)
        libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
(0x00007f91d5c12000)
        libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
(0x00007f91d5bd7000)

-------------------

Here is the valgrind output from crssync - do you see anything 
suspicious in here? proj is being mentioned - so maybe an issue with 
proj?

xxx at t480:~/dev/QGIS/build$ valgrind output/bin/crssync
==49441== Memcheck, a memory error detector
==49441== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et 
al.
==49441== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright 
info
==49441== Command: output/bin/crssync
==49441==
==49441== Invalid free() / delete / delete[] / realloc()
==49441==    at 0x483CFBF: operator delete(void*) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x1637ff40 is 0 bytes inside a block of size 17 
free'd
==49441==    at 0x483CFBF: operator delete(void*) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C3BAAF: _M_construct<char const*> 
(basic_string.tcc:219)
==49441==    by 0x9C3BAAF: _M_construct_aux<char const*> 
(basic_string.h:247)
==49441==    by 0x9C3BAAF: _M_construct<char const*> 
(basic_string.h:266)
==49441==    by 0x9C3BAAF: std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> >::basic_string(char 
const*, std::allocator<char> const&) [clone .isra.0] 
(basic_string.h:527)
==49441==    by 0x9C3ECF5: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:666)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 4
==49441==    at 0x150198C4: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x1637f898 is 8 bytes inside a block of size 24 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C5DB98: 
__shared_count<osgeo::proj::crs::GeographicCRS*> (shared_ptr_base.h:625)
==49441==    by 0x9C5DB98: 
__shared_count<osgeo::proj::crs::GeographicCRS*> (shared_ptr_base.h:636)
==49441==    by 0x9C5DB98: __shared_ptr<osgeo::proj::crs::GeographicCRS> 
(shared_ptr_base.h:1125)
==49441==    by 0x9C5DB98: shared_ptr<osgeo::proj::crs::GeographicCRS> 
(shared_ptr.h:139)
==49441==    by 0x9C5DB98: 
nn_make_shared<osgeo::proj::crs::GeographicCRS, const 
std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, const 
std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::Ellipsoida
lCS> >&> (crs.hpp:436)
==49441==    by 0x9C5DB98: 
osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
dropbox::oxygen::nn<std::shared_ptr<os
geo::proj::cs::EllipsoidalCS> > const&) (crs.cpp:2558)
==49441==    by 0x9C5DDEA: 
osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
const&, 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
 > const&, dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::EllipsoidalCS> > const
&) (crs.cpp:2533)
==49441==    by 0x9C5E3B8: 
osgeo::proj::crs::GeographicCRS::createEPSG_4979() (crs.cpp:2714)
==49441==    by 0x9C3ECC9: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:657)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 4
==49441==    at 0x15019A44: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x16368108 is 8 bytes inside a block of size 24 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C5D7E8: 
__shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:625)
==49441==    by 0x9C5D7E8: 
__shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:636)
==49441==    by 0x9C5D7E8: __shared_ptr<osgeo::proj::crs::GeodeticCRS> 
(shared_ptr_base.h:1125)
==49441==    by 0x9C5D7E8: shared_ptr<osgeo::proj::crs::GeodeticCRS> 
(shared_ptr.h:139)
==49441==    by 0x9C5D7E8: nn_make_shared<osgeo::proj::crs::GeodeticCRS, 
const std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, 
const std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS>
> &> (crs.hpp:348)
==49441==    by 0x9C5D7E8: 
osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
dropbox::oxygen::nn<std::shared_ptr<osge
o::proj::cs::CartesianCS> > const&) (crs.cpp:1641)
==49441==    by 0x9C5D97A: 
osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
const&, 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
 > const&, dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS> > const&) (
crs.cpp:1618)
==49441==    by 0x9C5DA81: 
osgeo::proj::crs::GeodeticCRS::createEPSG_4978() (crs.cpp:2064)
==49441==    by 0x9C3EBEB: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:631)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 4
==49441==    at 0x15019984: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x16364038 is 8 bytes inside a block of size 24 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C85B55: 
__shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
(shared_ptr_base.h:625)
==49441==    by 0x9C85B55: 
__shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
(shared_ptr_base.h:636)
==49441==    by 0x9C85B55: 
__shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
(shared_ptr_base.h:1125)
==49441==    by 0x9C85B55: 
shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
(shared_ptr.h:139)
==49441==    by 0x9C85B55: 
nn_make_shared<osgeo::proj::datum::GeodeticReferenceFrame, const 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> >&, 
const 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> 
 >&> (datum.hpp:446)
==49441==    by 0x9C85B55: 
osgeo::proj::datum::GeodeticReferenceFrame::create(osgeo::proj::util::PropertyMap 
const&, 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> > 
const&, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
std::char_traits
<char>, std::allocator<char> > > const&, 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> > 
const&) (datum.cpp:1184)
==49441==    by 0x9C85DF2: 
osgeo::proj::datum::GeodeticReferenceFrame::createEPSG_6326() 
(datum.cpp:1211)
==49441==    by 0x9C3EB9E: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:619)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 4
==49441==    at 0x15019744: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x1635fe98 is 8 bytes inside a block of size 24 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C8C6E2: 
__shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:625)
==49441==    by 0x9C8C6E2: 
__shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:636)
==49441==    by 0x9C8C6E2: __shared_ptr<osgeo::proj::datum::Ellipsoid> 
(shared_ptr_base.h:1125)
==49441==    by 0x9C8C6E2: shared_ptr<osgeo::proj::datum::Ellipsoid> 
(shared_ptr.h:139)
==49441==    by 0x9C8C6E2: nn_make_shared<osgeo::proj::datum::Ellipsoid, 
const osgeo::proj::common::Length&, const osgeo::proj::common::Scale&, 
const std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&> (datum.hpp:365)
==49441==    by 0x9C8C6E2: 
osgeo::proj::datum::Ellipsoid::createFlattenedSphere(osgeo::proj::util::PropertyMap 
const&, osgeo::proj::common::Length const&, osgeo::proj::common::Scale 
const&, std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> > c
onst&) (datum.cpp:744)
==49441==    by 0x9C8CBCC: 
osgeo::proj::datum::Ellipsoid::createGRS1980() (datum.cpp:791)
==49441==    by 0x9C3EB2F: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:606)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 4
==49441==    at 0x15019684: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x1635a4f8 is 8 bytes inside a block of size 24 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C8AEF9: 
__shared_count<osgeo::proj::datum::PrimeMeridian*> 
(shared_ptr_base.h:625)
==49441==    by 0x9C8AEF9: 
__shared_count<osgeo::proj::datum::PrimeMeridian*> 
(shared_ptr_base.h:636)
==49441==    by 0x9C8AEF9: 
__shared_ptr<osgeo::proj::datum::PrimeMeridian> (shared_ptr_base.h:1125)
==49441==    by 0x9C8AEF9: shared_ptr<osgeo::proj::datum::PrimeMeridian> 
(shared_ptr.h:139)
==49441==    by 0x9C8AEF9: 
nn_make_shared<osgeo::proj::datum::PrimeMeridian, const 
osgeo::proj::common::Angle&> (datum.hpp:237)
==49441==    by 0x9C8AEF9: 
osgeo::proj::datum::PrimeMeridian::create(osgeo::proj::util::PropertyMap 
const&, osgeo::proj::common::Angle const&) (datum.cpp:316)
==49441==    by 0x9C8B132: 
osgeo::proj::datum::PrimeMeridian::createPARIS() (datum.cpp:339)
==49441==    by 0x9C3EA98: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:592)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 8
==49441==    at 0x15023BE5: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x16354590 is 80 bytes inside a block of size 112 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
==49441==    by 0x9C4A69C: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4E144: 
make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&, double&, 
osgeo::proj::common::UnitOfMeasure::Type&, const 
std::__cxx11::basic_string<char, std::cha
r_traits<char>, std::allocator<char> >&, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&> (internal.hpp:100)
==49441==    by 0x9C4E144: 
osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&, double, 
osgeo::proj::common::UnitOfMeasure::Type, 
std::__cxx11::basic_string<char, std::char_traits<char>,
std::allocator<char> > const&, std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
==49441==    by 0x9C3D8E1: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:381)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 8
==49441==    at 0x15023BF9: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x16354570 is 48 bytes inside a block of size 112 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
==49441==    by 0x9C4A69C: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4E144: 
make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&, double&, 
osgeo::proj::common::UnitOfMeasure::Type&, const 
std::__cxx11::basic_string<char, std::cha
r_traits<char>, std::allocator<char> >&, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&> (internal.hpp:100)
==49441==    by 0x9C4E144: 
osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&, double, 
osgeo::proj::common::UnitOfMeasure::Type, 
std::__cxx11::basic_string<char, std::char_traits<char>,
std::allocator<char> > const&, std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
==49441==    by 0x9C3D8E1: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:381)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 8
==49441==    at 0x15023C0D: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x16354540 is 0 bytes inside a block of size 112 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
==49441==    by 0x9C4A69C: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4E144: 
make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&, double&, 
osgeo::proj::common::UnitOfMeasure::Type&, const 
std::__cxx11::basic_string<char, std::cha
r_traits<char>, std::allocator<char> >&, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&> (internal.hpp:100)
==49441==    by 0x9C4E144: 
osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&, double, 
osgeo::proj::common::UnitOfMeasure::Type, 
std::__cxx11::basic_string<char, std::char_traits<char>,
std::allocator<char> > const&, std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
==49441==    by 0x9C3D8E1: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:381)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid free() / delete / delete[] / realloc()
==49441==    at 0x483CFBF: operator delete(void*) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x15023C1F: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x163545f0 is 0 bytes inside a block of size 27 
free'd
==49441==    at 0x483CFBF: operator delete(void*) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4A68F: deallocate (new_allocator.h:128)
==49441==    by 0x9C4A68F: deallocate (alloc_traits.h:470)
==49441==    by 0x9C4A68F: _M_destroy (basic_string.h:237)
==49441==    by 0x9C4A68F: _M_dispose (basic_string.h:232)
==49441==    by 0x9C4A68F: ~basic_string (basic_string.h:658)
==49441==    by 0x9C4A68F: ~Private (common.cpp:72)
==49441==    by 0x9C4A68F: operator() (unique_ptr.h:81)
==49441==    by 0x9C4A68F: ~unique_ptr (unique_ptr.h:292)
==49441==    by 0x9C4A68F: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x586DDCA: void std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> 
 >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (in /home/bjsvwneu/dev/QGIS/build/output/lib/libqgis_core.so.3.21.0)
==49441==    by 0x9C4E163: _M_construct_aux<char*> (basic_string.h:247)
==49441==    by 0x9C4E163: _M_construct<char*> (basic_string.h:266)
==49441==    by 0x9C4E163: basic_string (basic_string.h:451)
==49441==    by 0x9C4E163: Private (common.cpp:83)
==49441==    by 0x9C4E163: 
make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&, double&, 
osgeo::proj::common::UnitOfMeasure::Type&, const 
std::__cxx11::basic_string<char, std::cha
r_traits<char>, std::allocator<char> >&, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&> (internal.hpp:100)
==49441==    by 0x9C4E163: 
osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&, double, 
osgeo::proj::common::UnitOfMeasure::Type, 
std::__cxx11::basic_string<char, std::char_traits<char>,
std::allocator<char> > const&, std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
==49441==    by 0x9C3D8E1: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:381)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid free() / delete / delete[] / realloc()
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x15023C2C: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x16354540 is 0 bytes inside a block of size 112 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
==49441==    by 0x9C4A69C: 
osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C4E144: 
make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&, double&, 
osgeo::proj::common::UnitOfMeasure::Type&, const 
std::__cxx11::basic_string<char, std::cha
r_traits<char>, std::allocator<char> >&, const 
std::__cxx11::basic_string<char, std::char_traits<char>, 
std::allocator<char> >&> (internal.hpp:100)
==49441==    by 0x9C4E144: 
osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&, double, 
osgeo::proj::common::UnitOfMeasure::Type, 
std::__cxx11::basic_string<char, std::char_traits<char>,
std::allocator<char> > const&, std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
==49441==    by 0x9C3D8E1: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:381)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 8
==49441==    at 0x15019EEC: osgeo::proj::util::BaseObject::~BaseObject() 
(in /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x163544f8 is 8 bytes inside a block of size 16 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C40A4F: 
make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
==49441==    by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
(util.cpp:70)
==49441==    by 0x9C4E12B: 
osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&, double, 
osgeo::proj::common::UnitOfMeasure::Type, 
std::__cxx11::basic_string<char, std::char_traits<char>,
std::allocator<char> > const&, std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
==49441==    by 0x9C3D8E1: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:381)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid free() / delete / delete[] / realloc()
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x163544f0 is 0 bytes inside a block of size 16 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C40A4F: 
make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
==49441==    by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
(util.cpp:70)
==49441==    by 0x9C4E12B: 
osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&, double, 
osgeo::proj::common::UnitOfMeasure::Type, 
std::__cxx11::basic_string<char, std::char_traits<char>,
std::allocator<char> > const&, std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
==49441==    by 0x9C3D8E1: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:381)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441== Invalid read of size 4
==49441==    at 0x15019804: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Address 0x1634fdd8 is 8 bytes inside a block of size 24 
free'd
==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
==49441==    by 0x954FBDF: exit (exit.c:139)
==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
==49441==  Block was alloc'd at
==49441==    at 0x483BE63: operator new(unsigned long) (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==49441==    by 0x9C473C1: 
__shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:625)
==49441==    by 0x9C473C1: 
__shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:636)
==49441==    by 0x9C473C1: __shared_ptr<osgeo::proj::metadata::Extent> 
(shared_ptr_base.h:1125)
==49441==    by 0x9C473C1: shared_ptr<osgeo::proj::metadata::Extent> 
(shared_ptr.h:139)
==49441==    by 0x9C473C1: nn_make_shared<osgeo::proj::metadata::Extent> 
(metadata.hpp:347)
==49441==    by 0x9C473C1: 
osgeo::proj::metadata::Extent::create(osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > > const&, 
std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent>
> , 
> std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent> 
> > > > const&, std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::VerticalExtent> >, std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadat
a::VerticalExtent> > > > const&, 
std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> 
 >, std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> > > > const&) (metadata.cpp:703)
==49441==    by 0x9C475F4: 
osgeo::proj::metadata::Extent::createFromBBOX(double, double, double, 
double, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
std::char_traits<char>, std::allocator<char> > > const&) 
(metadata.cpp:735)
==49441==    by 0x9C3BE29: 
__static_initialization_and_destruction_0(int, int) [clone .constprop.0] 
(static.cpp:179)
==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==49441==    by 0x4011C90: call_init (dl-init.c:30)
==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
==49441==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==49441==
==49441==
==49441== HEAP SUMMARY:
==49441==     in use at exit: 165,141 bytes in 2,467 blocks
==49441==   total heap usage: 910,752 allocs, 908,320 frees, 75,332,685 
bytes allocated
==49441==
==49441== LEAK SUMMARY:
==49441==    definitely lost: 2,583 bytes in 41 blocks
==49441==    indirectly lost: 39,830 bytes in 735 blocks
==49441==      possibly lost: 1,352 bytes in 18 blocks
==49441==    still reachable: 121,376 bytes in 1,673 blocks
==49441==                       of which reachable via heuristic:
==49441==                         newarray           : 1,536 bytes in 16 
blocks
==49441==         suppressed: 0 bytes in 0 blocks
==49441== Rerun with --leak-check=full to see details of leaked memory
==49441==
==49441== For lists of detected and suppressed errors, rerun with: -s
==49441== ERROR SUMMARY: 142 errors from 14 contexts (suppressed: 0 from 
0)

Thanks a lot,

Andreas

On 2021-09-03 15:42, Even Rouault wrote:

> Andreas
> 
> Several things to check:
> 
> - Is your GDAL build a clean one ? That is is it from a fresh build 
> directory, or are you rebuilding in a directory where a previous build 
> was done. If the later, make sure to "make clean" before rebuilding
> 
> - Is your GDAL build using your custom GEOS one ? Otherwise QGIS might 
> link directly to the custom one and indirectly to the system one 
> through GDAL. Check the output of "ldd output/bin/qgis | grep geos"
> 
> - try "valgrind output/bin/crssync". Emitted stack traces can give 
> interesting hints
> 
> Even
> 
> Le 03/09/2021 ? 15:30, Andreas Neumann a ?crit :
> 
>> Hi,
>> 
>> I have troubles compiling QGIS on my Linux Ubuntu 20.04 machine.
>> 
>> I use a self-compiled GEOS and GDAL.
>> 
>> The build always hangs at "crssync" - here is the ninja build output I 
>> get. Do you have any idea what might be wrong or what I could do in 
>> order to fix this problem?
>> 
>> Thank you for your hints,
>> 
>> Andreas
>> 
>> ------------------------
>> 
>> [0/1] Re-running CMake...
>> -- QGIS version: 3.21.0 Master (32100)
>> -- Found OpenCL C++ headers: /usr/include
>> -- ccache found
>> -- Found Proj: /usr/local/lib/libproj.so version 8 (8.1.0)
>> -- Found GEOS: /usr/local/lib/libgeos_c.so (3.9.1)
>> -- Found GDAL: /usr/local/lib/libgdal.so (3.3.1)
>> -- Found Expat: /usr/lib/x86_64-linux-gnu/libexpat.so
>> -- Found Spatialindex: /usr/lib/x86_64-linux-gnu/libspatialindex.so
>> -- Found Qwt: /usr/lib/libqwt-qt5.so (6.1.4)
>> -- Found libzip: /usr/lib/x86_64-linux-gnu/libzip.so
>> -- Found Sqlite3: /usr/lib/x86_64-linux-gnu/libsqlite3.so
>> -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-pthread
>> -- Found zlib: /usr/lib/x86_64-linux-gnu/libz.so
>> -- Found exiv2: /usr/lib/x86_64-linux-gnu/libexiv2.so
>> -- Found PostgreSQL: /usr/local/pgsql/lib/libpq.so
>> -- Found SpatiaLite: /usr/local/lib/libspatialite.so
>> -- Qt WebKit support enabled
>> -- Found ZSTD: /usr/lib/x86_64-linux-gnu/libzstd.so
>> -- Found laz-perf: /usr/local/include
>> -- Found PDAL: 
>> /usr/local/lib/libpdalcpp.so;/usr/local/lib/libpdal_util.so (2.0.1)
>> -- Found Qt version: 5.12.8
>> -- Found QScintilla2: /usr/lib/libqscintilla2_qt5.so (2.11.2)
>> -- Found QtKeychain: /usr/lib/x86_64-linux-gnu/libqt5keychain.so
>> -- Found QCA: /usr/lib/x86_64-linux-gnu/libqca-qt5.so (2.2.1)
>> -- Found QCA OpenSSL plugin
>> -- Pedantic compiler settings enabled
>> -- Found GSL: -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
>> -- Found Python executable: /usr/bin/python3.8 (version 3.8.10)
>> -- Python library: /usr/lib/x86_64-linux-gnu/libpython3.8.so
>> -- Python site-packages: /usr/lib/python3/dist-packages
>> -- Found PyQt5 version: 5.14.1
>> -- Found SIP version: 4.19.21
>> -- Found QScintilla2 PyQt module: 2.11.2
>> -- Could NOT find HDF5 (missing: HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
>> (found version "")
>> -- Could NOT find NetCDF (missing: NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
>> -- Using PROJ >= 6 srs database.
>> -- Ctest Binary Directory set to: 
>> /home/bjsvwneu/dev/QGIS/build/output/bin
>> -- Configuring done
>> -- Generating done
>> -- Build files have been written to: /home/bjsvwneu/dev/QGIS/build
>> [1/6072] Generating qgsversion.h, qgsversion.inc
>> Files "/home/bjsvwneu/dev/QGIS/build/qgsversion.h.temp" to 
>> "/home/bjsvwneu/dev/QGIS/build/qgsversion.h" are different.
>> [3/6072] Generating qgsexpression_texts.cpp
>> Files 
>> "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp.temp" 
>> to "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp" 
>> are different.
>> [2905/6072] Generating gui/sip_guipart0.cpp, gui/sip_guipart1.cpp, 
>> gui/sip_guipart2.cpp, gui/sip_guipart3.cpp, gui/sip_guipart4.cpp, 
>> g...i/sip_guipart10.cpp, gui/sip_guipart11.cpp, gui/sip_guipart12.cpp, 
>> gui/sip_guipart13.cpp, gui/sip_guipart14.cpp, gui/sip_guipart15.cpp
>> 
>> [4061/6072] Building CXX object 
>> src/providers/mdal/CMakeFiles/provider_mdal.dir/__/__/__/external/mdal/mdal_utils.cpp.o
>> ../external/mdal/mdal_utils.cpp: In function 'int 
>> MDAL::toInt(size_t)':
>> ../external/mdal/mdal_utils.cpp:143:14: warning: comparison of integer 
>> expressions of different signedness: 'const size_t' {aka 'const long 
>> unsigned int'} and 'int' [-Wsign-compare]
>> 143 |   if ( value > std::numeric_limits<int>::max() )
>> |        ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>> [4172/6072] Running crssync
>> FAILED: src/crssync/CMakeFiles/synccrsdb
>> cd /home/bjsvwneu/dev/QGIS/build/src/crssync && 
>> /home/bjsvwneu/dev/QGIS/build/output/bin/crssync
>> free(): invalid pointer
>> Aborted (core dumped)
>> [4173/6072] Building CXX object 
>> src/plugins/topology/CMakeFiles/topolplugin.dir/topolplugin_autogen/mocs_compilation.cpp.o
>> ninja: build stopped: subcommand failed.
>> 
>> _______________________________________________
>> QGIS-Developer mailing list
>> QGIS-Developer at lists.osgeo.org
>> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
>> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/73b0ccb3/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Sep  3 07:56:27 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 Sep 2021 14:56:27 -0000
Subject: [QGIS-Developer] Trouble compiling QGIS
In-Reply-To: <8ea7393b81cccb2768ca4ed153c7d957@carto.net>
References: <6154ac5b7424495d27cc5fe906bb1969@carto.net>
 <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>
 <8ea7393b81cccb2768ca4ed153c7d957@carto.net>
Message-ID: <5fb48dc2-8759-2786-d35b-cfc79575c171@spatialys.com>

The Valgrind output is actually interesting:

see

==49441== ???by 0x150193E6: ??? (in 
/usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)

[...]

==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)

So you're linking to 2 PROJ versions. That would have been my first bet, 
but you didn't mention a custom PROJ version :-)

So the custom GDAL links to the custom PROJ. You'll have now to check 
which of QGIS and/or Spatialite links to the system PROJ instead of the 
custom one.


Le 03/09/2021 ? 16:30, Andreas Neumann a ?crit?:
>
> Hi Even,
>
> Thank you for your reply.
>
> I checked with the ldd about gdal/geos/proj - and they all seem to 
> link to the self-compiled versions in /usr/local/lib
>
> gdal:
>
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libgdal.so.29
> ???????linux-vdso.so.1 (0x00007fffb930d000)
> ???????libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
> (0x00007f2509600000)
> ???????libjson-c.so.4 => /lib/x86_64-linux-gnu/libjson-c.so.4 
> (0x00007f25095ee000)
> ???????libfreexl.so.1 => /lib/x86_64-linux-gnu/libfreexl.so.1 
> (0x00007f25095e3000)
> *libgeos_c.so.1 => /usr/local/lib/libgeos_c.so.1 (0x00007f25095a5000)*
> ???????libexpat.so.1 => /lib/x86_64-linux-gnu/libexpat.so.1 
> (0x00007f2509577000)
> ???????libxerces-c-3.2.so => /lib/x86_64-linux-gnu/libxerces-c-3.2.so 
> (0x00007f25091e4000)
> ???????libpq.so.5 => /usr/local/pgsql/lib/libpq.so.5 (0x00007f2509193000)
> ???????libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 
> (0x00007f25090ea000)
> ???????libproj.so.22 => /usr/local/lib/libproj.so.22 (0x00007f2508d40000)
> ???????libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
> (0x00007f2508c17000)
> ???????libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 
> (0x00007f2508b92000)
> ???????libdeflate.so.0 => /lib/x86_64-linux-gnu/libdeflate.so.0 
> (0x00007f2508b74000)
> ???????libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f2508b56000)
> ???????libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
> (0x00007f2508b33000)
> ???????libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 
> (0x00007f2508b2d000)
> ???????libpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 
> (0x00007f2508aba000)
> ???????libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 
> (0x00007f2508a29000)
> ???????libxml2.so.2 => /lib/x86_64-linux-gnu/libxml2.so.2 
> (0x00007f250886f000)
> ???????libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007f250868b000)
> ???????libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f250853c000)
> ???????libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f250834a000)
> ???????/lib64/ld-linux-x86-64.so.2 (0x00007f250afe7000)
> ???????libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007f250832f000)
> *libgeos-3.9.1.so => /usr/local/lib/libgeos-3.9.1.so 
> (0x00007f250811b000)*
> ???????libcurl-gnutls.so.4 => 
> /lib/x86_64-linux-gnu/libcurl-gnutls.so.4 (0x00007f250808c000)
> ???????libicuuc.so.66 => /lib/x86_64-linux-gnu/libicuuc.so.66 
> (0x00007f2507ea4000)
> ???????libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
> (0x00007f2507e11000)
> ???????libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 
> (0x00007f2507d90000)
> ???????libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
> (0x00007f2507d67000)
> ???????libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 
> (0x00007f2507d46000)
> ???????librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 
> (0x00007f2507d24000)
> ???????libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 
> (0x00007f2507cb6000)
> ???????libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 
> (0x00007f2507ca3000)
> ???????libgssapi_krb5.so.2 => 
> /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 (0x00007f2507c56000)
> ???????libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
> (0x00007f2507c00000)
> ???????liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
> (0x00007f2507bef000)
> ???????libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
> (0x00007f2507bdf000)
> ???????liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 
> (0x00007f2507bb6000)
> ???????libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
> (0x00007f2507b7c000)
> ???????libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
> (0x00007f25079a6000)
> ???????libicudata.so.66 => /lib/x86_64-linux-gnu/libicudata.so.66 
> (0x00007f2505ee5000)
> ???????libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 
> (0x00007f2505e79000)
> ???????libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 
> (0x00007f2505c6b000)
> ???????libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
> (0x00007f2505ae9000)
> ???????libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
> (0x00007f2505ab2000)
> ???????libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 
> (0x00007f2505a2e000)
> ???????libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 
> (0x00007f250594f000)
> ???????libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
> (0x00007f250591e000)
> ???????libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
> (0x00007f2505917000)
> ???????libkrb5support.so.0 => 
> /lib/x86_64-linux-gnu/libkrb5support.so.0 (0x00007f2505908000)
> ???????libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
> (0x00007f25058ec000)
> ???????libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
> (0x00007f25058cf000)
> ???????libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
> (0x00007f2505888000)
> ???????libbrotlicommon.so.1 => 
> /lib/x86_64-linux-gnu/libbrotlicommon.so.1 (0x00007f2505865000)
> ???????libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
> (0x00007f250572f000)
> ???????libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
> (0x00007f2505719000)
> ???????libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
> (0x00007f2505712000)
> ???????libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
> (0x00007f2505704000)
> ???????libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
> (0x00007f2505671000)
> ???????libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 
> (0x00007f25055ca000)
> ???????libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
> (0x00007f2505592000)
> ???????libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
> (0x00007f2505579000)
> ???????libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 
> (0x00007f250556d000)
> ???????libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 
> (0x00007f2505541000)
> ???????libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
> (0x00007f250552f000)
> ???????libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
> (0x00007f25054e1000)
> ???????libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
> (0x00007f25054a6000)
>
>
> geos:
>
> xxx at t480 <mailto:bjsvwneu at t480>:~/dev/QGIS/build$ ldd 
> /usr/local/lib/libgeos-3.9.1.so
> ???????linux-vdso.so.1 (0x00007fff313c5000)
> ???????libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007fbbea26f000)
> ???????libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fbbea120000)
> ???????libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fbbe9f2e000)
> ???????libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007fbbe9f13000)
> ???????/lib64/ld-linux-x86-64.so.2 (0x00007fbbea688000)
>
> proj:
>
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libproj.so.22
> ???????linux-vdso.so.1 (0x00007ffd8a9e9000)
> ???????libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
> (0x00007f91d7530000)
> ???????libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 
> (0x00007f91d74af000)
> ???????libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 
> (0x00007f91d741e000)
> ???????libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
> (0x00007f91d73fb000)
> ???????libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 
> (0x00007f91d73f5000)
> ???????libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007f91d7213000)
> ???????libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f91d70c2000)
> ???????libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f91d6ed0000)
> ???????libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007f91d6eb5000)
> ???????libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 
> (0x00007f91d6e4b000)
> ???????libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 
> (0x00007f91d6da2000)
> ???????liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 
> (0x00007f91d6d79000)
> ???????libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 
> (0x00007f91d6b69000)
> ???????libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 
> (0x00007f91d6ae4000)
> ???????libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f91d6ac8000)
> ???????libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
> (0x00007f91d6a9f000)
> ???????libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 
> (0x00007f91d6a7e000)
> ???????librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 
> (0x00007f91d6a5e000)
> ???????libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 
> (0x00007f91d69ee000)
> ???????libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 
> (0x00007f91d69db000)
> ???????libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
> (0x00007f91d6948000)
> ???????libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
> (0x00007f91d6672000)
> ???????libgssapi_krb5.so.2 => 
> /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 (0x00007f91d6625000)
> ???????libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
> (0x00007f91d65cf000)
> ???????liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
> (0x00007f91d65bc000)
> ???????libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
> (0x00007f91d65ae000)
> ???????/lib64/ld-linux-x86-64.so.2 (0x00007f91d7a26000)
> ???????libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
> (0x00007f91d642c000)
> ???????libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
> (0x00007f91d6256000)
> ???????libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
> (0x00007f91d621f000)
> ???????libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
> (0x00007f91d61e3000)
> ???????libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 
> (0x00007f91d615f000)
> ???????libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 
> (0x00007f91d6082000)
> ???????libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
> (0x00007f91d6051000)
> ???????libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
> (0x00007f91d604a000)
> ???????libkrb5support.so.0 => 
> /lib/x86_64-linux-gnu/libkrb5support.so.0 (0x00007f91d6039000)
> ???????libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
> (0x00007f91d601d000)
> ???????libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
> (0x00007f91d6000000)
> ???????libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
> (0x00007f91d5fbb000)
> ???????libbrotlicommon.so.1 => 
> /lib/x86_64-linux-gnu/libbrotlicommon.so.1 (0x00007f91d5f98000)
> ???????libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
> (0x00007f91d5e62000)
> ???????libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
> (0x00007f91d5e4a000)
> ???????libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
> (0x00007f91d5e43000)
> ???????libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
> (0x00007f91d5e37000)
> ???????libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
> (0x00007f91d5da4000)
> ???????libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 
> (0x00007f91d5cfd000)
> ???????libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
> (0x00007f91d5cc3000)
> ???????libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
> (0x00007f91d5caa000)
> ???????libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 
> (0x00007f91d5c9e000)
> ???????libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 
> (0x00007f91d5c74000)
> ???????libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
> (0x00007f91d5c62000)
> ???????libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
> (0x00007f91d5c12000)
> ???????libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
> (0x00007f91d5bd7000)
>
> -------------------
>
> Here is the valgrind output from crssync - do you see anything 
> suspicious in here? proj is being mentioned - so maybe an issue with proj?
>
> xxx at t480 <mailto:xxx at t480>:~/dev/QGIS/build$ valgrind output/bin/crssync
> ==49441== Memcheck, a memory error detector
> ==49441== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
> ==49441== Using Valgrind-3.15.0 and LibVEX; rerun with -h for 
> copyright info
> ==49441== Command: output/bin/crssync
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441== ???at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x1637ff40 is 0 bytes inside a block of size 17 free'd
> ==49441== ???at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C3BAAF: _M_construct<char const*> 
> (basic_string.tcc:219)
> ==49441== ???by 0x9C3BAAF: _M_construct_aux<char const*> 
> (basic_string.h:247)
> ==49441== ???by 0x9C3BAAF: _M_construct<char const*> (basic_string.h:266)
> ==49441== ???by 0x9C3BAAF: std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> >::basic_string(char 
> const*, std::allocator<char> const&) [clone .isra.0] (basic_string.h:527)
> ==49441== ???by 0x9C3ECF5: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:666)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441== ???at 0x150198C4: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x1637f898 is 8 bytes inside a block of size 24 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C5DB98: 
> __shared_count<osgeo::proj::crs::GeographicCRS*> (shared_ptr_base.h:625)
> ==49441== ???by 0x9C5DB98: 
> __shared_count<osgeo::proj::crs::GeographicCRS*> (shared_ptr_base.h:636)
> ==49441== ???by 0x9C5DB98: 
> __shared_ptr<osgeo::proj::crs::GeographicCRS> (shared_ptr_base.h:1125)
> ==49441== ???by 0x9C5DB98: shared_ptr<osgeo::proj::crs::GeographicCRS> 
> (shared_ptr.h:139)
> ==49441== ???by 0x9C5DB98: 
> nn_make_shared<osgeo::proj::crs::GeographicCRS, const 
> std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, const 
> std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::Ellipsoida
> lCS> >&> (crs.hpp:436)
> ==49441== ???by 0x9C5DB98: 
> osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
> const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
> dropbox::oxygen::nn<std::shared_ptr<os
> geo::proj::cs::EllipsoidalCS> > const&) (crs.cpp:2558)
> ==49441== ???by 0x9C5DDEA: 
> osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> > const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::EllipsoidalCS> > 
> const
> &) (crs.cpp:2533)
> ==49441== ???by 0x9C5E3B8: 
> osgeo::proj::crs::GeographicCRS::createEPSG_4979() (crs.cpp:2714)
> ==49441== ???by 0x9C3ECC9: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:657)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441== ???at 0x15019A44: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x16368108 is 8 bytes inside a block of size 24 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C5D7E8: 
> __shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:625)
> ==49441== ???by 0x9C5D7E8: 
> __shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:636)
> ==49441== ???by 0x9C5D7E8: __shared_ptr<osgeo::proj::crs::GeodeticCRS> 
> (shared_ptr_base.h:1125)
> ==49441== ???by 0x9C5D7E8: shared_ptr<osgeo::proj::crs::GeodeticCRS> 
> (shared_ptr.h:139)
> ==49441== ???by 0x9C5D7E8: 
> nn_make_shared<osgeo::proj::crs::GeodeticCRS, const 
> std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, const 
> std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS>
> >&> (crs.hpp:348)
> ==49441== ???by 0x9C5D7E8: 
> osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
> const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osge
> o::proj::cs::CartesianCS> > const&) (crs.cpp:1641)
> ==49441== ???by 0x9C5D97A: 
> osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> > const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS> > 
> const&) (
> crs.cpp:1618)
> ==49441== ???by 0x9C5DA81: 
> osgeo::proj::crs::GeodeticCRS::createEPSG_4978() (crs.cpp:2064)
> ==49441== ???by 0x9C3EBEB: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:631)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441== ???at 0x15019984: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x16364038 is 8 bytes inside a block of size 24 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C85B55: 
> __shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
> (shared_ptr_base.h:625)
> ==49441== ???by 0x9C85B55: 
> __shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
> (shared_ptr_base.h:636)
> ==49441== ???by 0x9C85B55: 
> __shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> (shared_ptr_base.h:1125)
> ==49441== ???by 0x9C85B55: 
> shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> (shared_ptr.h:139)
> ==49441== ???by 0x9C85B55: 
> nn_make_shared<osgeo::proj::datum::GeodeticReferenceFrame, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> >&, 
> const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> >&> (datum.hpp:446)
> ==49441== ???by 0x9C85B55: 
> osgeo::proj::datum::GeodeticReferenceFrame::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> > 
> const&, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits
> <char>, std::allocator<char> > > const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> > const&) (datum.cpp:1184)
> ==49441== ???by 0x9C85DF2: 
> osgeo::proj::datum::GeodeticReferenceFrame::createEPSG_6326() 
> (datum.cpp:1211)
> ==49441== ???by 0x9C3EB9E: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:619)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441== ???at 0x15019744: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x1635fe98 is 8 bytes inside a block of size 24 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C8C6E2: 
> __shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:625)
> ==49441== ???by 0x9C8C6E2: 
> __shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:636)
> ==49441== ???by 0x9C8C6E2: __shared_ptr<osgeo::proj::datum::Ellipsoid> 
> (shared_ptr_base.h:1125)
> ==49441== ???by 0x9C8C6E2: shared_ptr<osgeo::proj::datum::Ellipsoid> 
> (shared_ptr.h:139)
> ==49441== ???by 0x9C8C6E2: 
> nn_make_shared<osgeo::proj::datum::Ellipsoid, const 
> osgeo::proj::common::Length&, const osgeo::proj::common::Scale&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (datum.hpp:365)
> ==49441== ???by 0x9C8C6E2: 
> osgeo::proj::datum::Ellipsoid::createFlattenedSphere(osgeo::proj::util::PropertyMap 
> const&, osgeo::proj::common::Length const&, osgeo::proj::common::Scale 
> const&, std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> > c
> onst&) (datum.cpp:744)
> ==49441== ???by 0x9C8CBCC: 
> osgeo::proj::datum::Ellipsoid::createGRS1980() (datum.cpp:791)
> ==49441== ???by 0x9C3EB2F: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:606)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441== ???at 0x15019684: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x1635a4f8 is 8 bytes inside a block of size 24 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C8AEF9: 
> __shared_count<osgeo::proj::datum::PrimeMeridian*> 
> (shared_ptr_base.h:625)
> ==49441== ???by 0x9C8AEF9: 
> __shared_count<osgeo::proj::datum::PrimeMeridian*> 
> (shared_ptr_base.h:636)
> ==49441== ???by 0x9C8AEF9: 
> __shared_ptr<osgeo::proj::datum::PrimeMeridian> (shared_ptr_base.h:1125)
> ==49441== ???by 0x9C8AEF9: 
> shared_ptr<osgeo::proj::datum::PrimeMeridian> (shared_ptr.h:139)
> ==49441== ???by 0x9C8AEF9: 
> nn_make_shared<osgeo::proj::datum::PrimeMeridian, const 
> osgeo::proj::common::Angle&> (datum.hpp:237)
> ==49441== ???by 0x9C8AEF9: 
> osgeo::proj::datum::PrimeMeridian::create(osgeo::proj::util::PropertyMap 
> const&, osgeo::proj::common::Angle const&) (datum.cpp:316)
> ==49441== ???by 0x9C8B132: 
> osgeo::proj::datum::PrimeMeridian::createPARIS() (datum.cpp:339)
> ==49441== ???by 0x9C3EA98: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:592)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441== ???at 0x15023BE5: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x16354590 is 80 bytes inside a block of size 112 
> free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441== ???by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441== ???by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441== ???by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441== ???by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441== ???at 0x15023BF9: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x16354570 is 48 bytes inside a block of size 112 
> free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441== ???by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441== ???by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441== ???by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441== ???by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441== ???at 0x15023C0D: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x16354540 is 0 bytes inside a block of size 112 
> free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441== ???by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441== ???by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441== ???by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441== ???by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441== ???at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x15023C1F: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x163545f0 is 0 bytes inside a block of size 27 free'd
> ==49441== ???at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4A68F: deallocate (new_allocator.h:128)
> ==49441== ???by 0x9C4A68F: deallocate (alloc_traits.h:470)
> ==49441== ???by 0x9C4A68F: _M_destroy (basic_string.h:237)
> ==49441== ???by 0x9C4A68F: _M_dispose (basic_string.h:232)
> ==49441== ???by 0x9C4A68F: ~basic_string (basic_string.h:658)
> ==49441== ???by 0x9C4A68F: ~Private (common.cpp:72)
> ==49441== ???by 0x9C4A68F: operator() (unique_ptr.h:81)
> ==49441== ???by 0x9C4A68F: ~unique_ptr (unique_ptr.h:292)
> ==49441== ???by 0x9C4A68F: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x586DDCA: void std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> 
> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (in 
> /home/bjsvwneu/dev/QGIS/build/output/lib/libqgis_core.so.3.21.0)
> ==49441== ???by 0x9C4E163: _M_construct_aux<char*> (basic_string.h:247)
> ==49441== ???by 0x9C4E163: _M_construct<char*> (basic_string.h:266)
> ==49441== ???by 0x9C4E163: basic_string (basic_string.h:451)
> ==49441== ???by 0x9C4E163: Private (common.cpp:83)
> ==49441== ???by 0x9C4E163: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441== ???by 0x9C4E163: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441== ???by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x15023C2C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x16354540 is 0 bytes inside a block of size 112 
> free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441== ???by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441== ???by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441== ???by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441== ???by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441== ???at 0x15019EEC: 
> osgeo::proj::util::BaseObject::~BaseObject() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x163544f8 is 8 bytes inside a block of size 16 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C40A4F: 
> make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
> ==49441== ???by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
> (util.cpp:70)
> ==49441== ???by 0x9C4E12B: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441== ???by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x163544f0 is 0 bytes inside a block of size 16 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C40A4F: 
> make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
> ==49441== ???by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
> (util.cpp:70)
> ==49441== ???by 0x9C4E12B: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441== ???by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441== ???at 0x15019804: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Address 0x1634fdd8 is 8 bytes inside a block of size 24 free'd
> ==49441== ???at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441== ???by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441== ???by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441== ???by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441== ???by 0x954FBDF: exit (exit.c:139)
> ==49441== ???by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441== ?Block was alloc'd at
> ==49441== ???at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441== ???by 0x9C473C1: 
> __shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:625)
> ==49441== ???by 0x9C473C1: 
> __shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:636)
> ==49441== ???by 0x9C473C1: __shared_ptr<osgeo::proj::metadata::Extent> 
> (shared_ptr_base.h:1125)
> ==49441== ???by 0x9C473C1: shared_ptr<osgeo::proj::metadata::Extent> 
> (shared_ptr.h:139)
> ==49441== ???by 0x9C473C1: 
> nn_make_shared<osgeo::proj::metadata::Extent> (metadata.hpp:347)
> ==49441== ???by 0x9C473C1: 
> osgeo::proj::metadata::Extent::create(osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > > const&, 
> std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent>
> >, 
> std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent> 
> > > > const&, 
> std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::VerticalExtent> 
> >, std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadat
> a::VerticalExtent> > > > const&, 
> std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> 
> >, 
> std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> 
> > > > const&) (metadata.cpp:703)
> ==49441== ???by 0x9C475F4: 
> osgeo::proj::metadata::Extent::createFromBBOX(double, double, double, 
> double, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > > const&) 
> (metadata.cpp:735)
> ==49441== ???by 0x9C3BE29: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:179)
> ==49441== ???by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441== ???by 0x4011C90: call_init (dl-init.c:30)
> ==49441== ???by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441== ???by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441==
> ==49441== HEAP SUMMARY:
> ==49441== ????in use at exit: 165,141 bytes in 2,467 blocks
> ==49441== ??total heap usage: 910,752 allocs, 908,320 frees, 
> 75,332,685 bytes allocated
> ==49441==
> ==49441== LEAK SUMMARY:
> ==49441== ???definitely lost: 2,583 bytes in 41 blocks
> ==49441== ???indirectly lost: 39,830 bytes in 735 blocks
> ==49441== ?????possibly lost: 1,352 bytes in 18 blocks
> ==49441== ???still reachable: 121,376 bytes in 1,673 blocks
> ==49441== ??????????????????????of which reachable via heuristic:
> ==49441== ????????????????????????newarray ??????????: 1,536 bytes in 
> 16 blocks
> ==49441== ????????suppressed: 0 bytes in 0 blocks
> ==49441== Rerun with --leak-check=full to see details of leaked memory
> ==49441==
> ==49441== For lists of detected and suppressed errors, rerun with: -s
> ==49441== ERROR SUMMARY: 142 errors from 14 contexts (suppressed: 0 
> from 0)
>
> Thanks a lot,
>
> Andreas
>
> On 2021-09-03 15:42, Even Rouault wrote:
>
>> Andreas
>>
>> Several things to check:
>>
>> - Is your GDAL build a clean one ? That is is it from a fresh build 
>> directory, or are you rebuilding in a directory where a previous 
>> build was done. If the later, make sure to "make clean" before rebuilding
>>
>> - Is your GDAL build using your custom GEOS one ? Otherwise QGIS 
>> might link directly to the custom one and indirectly to the system 
>> one through GDAL. Check the output of "ldd output/bin/qgis | grep geos"
>>
>> - try "valgrind output/bin/crssync". Emitted stack traces can give 
>> interesting hints
>>
>> Even
>>
>> Le 03/09/2021 ? 15:30, Andreas Neumann a ?crit?:
>>>
>>> Hi,
>>>
>>> I have troubles compiling QGIS on my Linux Ubuntu 20.04 machine.
>>>
>>> I use a self-compiled GEOS and GDAL.
>>>
>>> The build always hangs at "crssync" - here is the ninja build output 
>>> I get. Do you have any idea what might be wrong or what I could do 
>>> in order to fix this problem?
>>>
>>> Thank you for your hints,
>>>
>>> Andreas
>>>
>>> ------------------------
>>>
>>> [0/1] Re-running CMake...
>>> -- QGIS version: 3.21.0 Master (32100)
>>> -- Found OpenCL C++ headers: /usr/include
>>> -- ccache found
>>> -- Found Proj: /usr/local/lib/libproj.so version 8 (8.1.0)
>>> -- Found GEOS: /usr/local/lib/libgeos_c.so (3.9.1)
>>> -- Found GDAL: /usr/local/lib/libgdal.so (3.3.1)
>>> -- Found Expat: /usr/lib/x86_64-linux-gnu/libexpat.so
>>> -- Found Spatialindex: /usr/lib/x86_64-linux-gnu/libspatialindex.so
>>> -- Found Qwt: /usr/lib/libqwt-qt5.so (6.1.4)
>>> -- Found libzip: /usr/lib/x86_64-linux-gnu/libzip.so
>>> -- Found Sqlite3: /usr/lib/x86_64-linux-gnu/libsqlite3.so
>>> -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-pthread
>>> -- Found zlib: /usr/lib/x86_64-linux-gnu/libz.so
>>> -- Found exiv2: /usr/lib/x86_64-linux-gnu/libexiv2.so
>>> -- Found PostgreSQL: /usr/local/pgsql/lib/libpq.so
>>> -- Found SpatiaLite: /usr/local/lib/libspatialite.so
>>> -- Qt WebKit support enabled
>>> -- Found ZSTD: /usr/lib/x86_64-linux-gnu/libzstd.so
>>> -- Found laz-perf: /usr/local/include
>>> -- Found PDAL: 
>>> /usr/local/lib/libpdalcpp.so;/usr/local/lib/libpdal_util.so (2.0.1)
>>> -- Found Qt version: 5.12.8
>>> -- Found QScintilla2: /usr/lib/libqscintilla2_qt5.so (2.11.2)
>>> -- Found QtKeychain: /usr/lib/x86_64-linux-gnu/libqt5keychain.so
>>> -- Found QCA: /usr/lib/x86_64-linux-gnu/libqca-qt5.so (2.2.1)
>>> -- Found QCA OpenSSL plugin
>>> -- Pedantic compiler settings enabled
>>> -- Found GSL: -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
>>> -- Found Python executable: /usr/bin/python3.8 (version 3.8.10)
>>> -- Python library: /usr/lib/x86_64-linux-gnu/libpython3.8.so
>>> -- Python site-packages: /usr/lib/python3/dist-packages
>>> -- Found PyQt5 version: 5.14.1
>>> -- Found SIP version: 4.19.21
>>> -- Found QScintilla2 PyQt module: 2.11.2
>>> -- Could NOT find HDF5 (missing: HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
>>> (found version "")
>>> -- Could NOT find NetCDF (missing: NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
>>> -- Using PROJ >= 6 srs database.
>>> -- Ctest Binary Directory set to: 
>>> /home/bjsvwneu/dev/QGIS/build/output/bin
>>> -- Configuring done
>>> -- Generating done
>>> -- Build files have been written to: /home/bjsvwneu/dev/QGIS/build
>>> [1/6072] Generating qgsversion.h, qgsversion.inc
>>> Files "/home/bjsvwneu/dev/QGIS/build/qgsversion.h.temp" to 
>>> "/home/bjsvwneu/dev/QGIS/build/qgsversion.h" are different.
>>> [3/6072] Generating qgsexpression_texts.cpp
>>> Files 
>>> "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp.temp" 
>>> to "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp" 
>>> are different.
>>> [2905/6072] Generating gui/sip_guipart0.cpp, gui/sip_guipart1.cpp, 
>>> gui/sip_guipart2.cpp, gui/sip_guipart3.cpp, gui/sip_guipart4.cpp, 
>>> g...i/sip_guipart10.cpp, gui/sip_guipart11.cpp, 
>>> gui/sip_guipart12.cpp, gui/sip_guipart13.cpp, gui/sip_guipart14.cpp, 
>>> gui/sip_guipart15.cpp
>>>
>>> [4061/6072] Building CXX object 
>>> src/providers/mdal/CMakeFiles/provider_mdal.dir/__/__/__/external/mdal/mdal_utils.cpp.o 
>>>
>>> ../external/mdal/mdal_utils.cpp: In function 'int MDAL::toInt(size_t)':
>>> ../external/mdal/mdal_utils.cpp:143:14: warning: comparison of 
>>> integer expressions of different signedness: 'const size_t' {aka 
>>> 'const long unsigned int'} and 'int' [-Wsign-compare]
>>> ?143 | ??if ( value > std::numeric_limits<int>::max() )
>>> ?????| ???????~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>>> [4172/6072] Running crssync
>>> FAILED: src/crssync/CMakeFiles/synccrsdb
>>> cd /home/bjsvwneu/dev/QGIS/build/src/crssync && 
>>> /home/bjsvwneu/dev/QGIS/build/output/bin/crssync
>>> free(): invalid pointer
>>> Aborted (core dumped)
>>> [4173/6072] Building CXX object 
>>> src/plugins/topology/CMakeFiles/topolplugin.dir/topolplugin_autogen/mocs_compilation.cpp.o 
>>>
>>> ninja: build stopped: subcommand failed.
>>>
>>>
>>> _______________________________________________
>>> QGIS-Developer mailing list
>>> QGIS-Developer at lists.osgeo.org  <mailto:QGIS-Developer at lists.osgeo.org>
>>> List info:https://lists.osgeo.org/mailman/listinfo/qgis-developer  <https://lists.osgeo.org/mailman/listinfo/qgis-developer>
>>> Unsubscribe:https://lists.osgeo.org/mailman/listinfo/qgis-developer  <https://lists.osgeo.org/mailman/listinfo/qgis-developer>
>> -- 
>> http://www.spatialys.com  <http://www.spatialys.com>
>> My software is free, but my time generally not.
>
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/2471a1cd/attachment-0001.htm>

From a.neumann at carto.net  Fri Sep  3 08:00:57 2021
From: a.neumann at carto.net (Andreas Neumann)
Date: Fri, 03 Sep 2021 15:00:57 -0000
Subject: [QGIS-Developer] Trouble compiling QGIS
In-Reply-To: <5fb48dc2-8759-2786-d35b-cfc79575c171@spatialys.com>
References: <6154ac5b7424495d27cc5fe906bb1969@carto.net>
 <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>
 <8ea7393b81cccb2768ca4ed153c7d957@carto.net>
 <5fb48dc2-8759-2786-d35b-cfc79575c171@spatialys.com>
Message-ID: <9b0fbe1d804b77bfd0d7a98e49681858@carto.net>

Yes. I guess I have to dig with ldd through all the libraries and see 
which one is linking to the old proj version. There is more 
self-compiled stuff on my system.

Anyway - I will find the culprit with ldd and valgrind.

Thanks for your help!

Andreas

On 2021-09-03 16:51, Even Rouault wrote:

> The Valgrind output is actually interesting:
> 
> see
> 
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> 
> [...]
> 
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> 
> So you're linking to 2 PROJ versions. That would have been my first 
> bet, but you didn't mention a custom PROJ version :-)
> 
> So the custom GDAL links to the custom PROJ. You'll have now to check 
> which of QGIS and/or Spatialite links to the system PROJ instead of the 
> custom one.
> 
> Le 03/09/2021 ? 16:30, Andreas Neumann a ?crit :
> 
> Hi Even,
> 
> Thank you for your reply.
> 
> I checked with the ldd about gdal/geos/proj - and they all seem to link 
> to the self-compiled versions in /usr/local/lib
> 
> gdal:
> 
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libgdal.so.29
> linux-vdso.so.1 (0x00007fffb930d000)
> libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
> (0x00007f2509600000)
> libjson-c.so.4 => /lib/x86_64-linux-gnu/libjson-c.so.4 
> (0x00007f25095ee000)
> libfreexl.so.1 => /lib/x86_64-linux-gnu/libfreexl.so.1 
> (0x00007f25095e3000)
> libgeos_c.so.1 => /usr/local/lib/libgeos_c.so.1 (0x00007f25095a5000)
> libexpat.so.1 => /lib/x86_64-linux-gnu/libexpat.so.1 
> (0x00007f2509577000)
> libxerces-c-3.2.so => /lib/x86_64-linux-gnu/libxerces-c-3.2.so 
> (0x00007f25091e4000)
> libpq.so.5 => /usr/local/pgsql/lib/libpq.so.5 (0x00007f2509193000)
> libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 (0x00007f25090ea000)
> libproj.so.22 => /usr/local/lib/libproj.so.22 (0x00007f2508d40000)
> libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
> (0x00007f2508c17000)
> libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 (0x00007f2508b92000)
> libdeflate.so.0 => /lib/x86_64-linux-gnu/libdeflate.so.0 
> (0x00007f2508b74000)
> libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f2508b56000)
> libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
> (0x00007f2508b33000)
> libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f2508b2d000)
> libpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007f2508aba000)
> libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 (0x00007f2508a29000)
> libxml2.so.2 => /lib/x86_64-linux-gnu/libxml2.so.2 (0x00007f250886f000)
> libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007f250868b000)
> libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f250853c000)
> libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f250834a000)
> /lib64/ld-linux-x86-64.so.2 (0x00007f250afe7000)
> libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007f250832f000)
> libgeos-3.9.1.so => /usr/local/lib/libgeos-3.9.1.so 
> (0x00007f250811b000)
> libcurl-gnutls.so.4 => /lib/x86_64-linux-gnu/libcurl-gnutls.so.4 
> (0x00007f250808c000)
> libicuuc.so.66 => /lib/x86_64-linux-gnu/libicuuc.so.66 
> (0x00007f2507ea4000)
> libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
> (0x00007f2507e11000)
> libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 (0x00007f2507d90000)
> libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
> (0x00007f2507d67000)
> libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 (0x00007f2507d46000)
> librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 (0x00007f2507d24000)
> libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 (0x00007f2507cb6000)
> libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 (0x00007f2507ca3000)
> libgssapi_krb5.so.2 => /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 
> (0x00007f2507c56000)
> libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
> (0x00007f2507c00000)
> liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
> (0x00007f2507bef000)
> libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
> (0x00007f2507bdf000)
> liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 (0x00007f2507bb6000)
> libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
> (0x00007f2507b7c000)
> libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
> (0x00007f25079a6000)
> libicudata.so.66 => /lib/x86_64-linux-gnu/libicudata.so.66 
> (0x00007f2505ee5000)
> libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 (0x00007f2505e79000)
> libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 (0x00007f2505c6b000)
> libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
> (0x00007f2505ae9000)
> libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
> (0x00007f2505ab2000)
> libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 (0x00007f2505a2e000)
> libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 (0x00007f250594f000)
> libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
> (0x00007f250591e000)
> libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
> (0x00007f2505917000)
> libkrb5support.so.0 => /lib/x86_64-linux-gnu/libkrb5support.so.0 
> (0x00007f2505908000)
> libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
> (0x00007f25058ec000)
> libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
> (0x00007f25058cf000)
> libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
> (0x00007f2505888000)
> libbrotlicommon.so.1 => /lib/x86_64-linux-gnu/libbrotlicommon.so.1 
> (0x00007f2505865000)
> libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
> (0x00007f250572f000)
> libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
> (0x00007f2505719000)
> libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
> (0x00007f2505712000)
> libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
> (0x00007f2505704000)
> libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
> (0x00007f2505671000)
> libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 (0x00007f25055ca000)
> libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
> (0x00007f2505592000)
> libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
> (0x00007f2505579000)
> libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 (0x00007f250556d000)
> libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 (0x00007f2505541000)
> libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
> (0x00007f250552f000)
> libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
> (0x00007f25054e1000)
> libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
> (0x00007f25054a6000)
> 
> geos:
> 
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libgeos-3.9.1.so
> linux-vdso.so.1 (0x00007fff313c5000)
> libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007fbbea26f000)
> libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fbbea120000)
> libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fbbe9f2e000)
> libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007fbbe9f13000)
> /lib64/ld-linux-x86-64.so.2 (0x00007fbbea688000)
> 
> proj:
> 
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libproj.so.22
> linux-vdso.so.1 (0x00007ffd8a9e9000)
> libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
> (0x00007f91d7530000)
> libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 (0x00007f91d74af000)
> libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 (0x00007f91d741e000)
> libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
> (0x00007f91d73fb000)
> libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f91d73f5000)
> libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007f91d7213000)
> libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f91d70c2000)
> libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f91d6ed0000)
> libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007f91d6eb5000)
> libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 (0x00007f91d6e4b000)
> libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 (0x00007f91d6da2000)
> liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 (0x00007f91d6d79000)
> libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 (0x00007f91d6b69000)
> libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 (0x00007f91d6ae4000)
> libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f91d6ac8000)
> libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
> (0x00007f91d6a9f000)
> libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 (0x00007f91d6a7e000)
> librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 (0x00007f91d6a5e000)
> libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 (0x00007f91d69ee000)
> libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 (0x00007f91d69db000)
> libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
> (0x00007f91d6948000)
> libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
> (0x00007f91d6672000)
> libgssapi_krb5.so.2 => /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 
> (0x00007f91d6625000)
> libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
> (0x00007f91d65cf000)
> liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
> (0x00007f91d65bc000)
> libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
> (0x00007f91d65ae000)
> /lib64/ld-linux-x86-64.so.2 (0x00007f91d7a26000)
> libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
> (0x00007f91d642c000)
> libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
> (0x00007f91d6256000)
> libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
> (0x00007f91d621f000)
> libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
> (0x00007f91d61e3000)
> libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 (0x00007f91d615f000)
> libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 (0x00007f91d6082000)
> libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
> (0x00007f91d6051000)
> libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
> (0x00007f91d604a000)
> libkrb5support.so.0 => /lib/x86_64-linux-gnu/libkrb5support.so.0 
> (0x00007f91d6039000)
> libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
> (0x00007f91d601d000)
> libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
> (0x00007f91d6000000)
> libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
> (0x00007f91d5fbb000)
> libbrotlicommon.so.1 => /lib/x86_64-linux-gnu/libbrotlicommon.so.1 
> (0x00007f91d5f98000)
> libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
> (0x00007f91d5e62000)
> libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
> (0x00007f91d5e4a000)
> libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
> (0x00007f91d5e43000)
> libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
> (0x00007f91d5e37000)
> libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
> (0x00007f91d5da4000)
> libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 (0x00007f91d5cfd000)
> libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
> (0x00007f91d5cc3000)
> libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
> (0x00007f91d5caa000)
> libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 (0x00007f91d5c9e000)
> libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 (0x00007f91d5c74000)
> libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
> (0x00007f91d5c62000)
> libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
> (0x00007f91d5c12000)
> libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
> (0x00007f91d5bd7000)
> 
> -------------------
> 
> Here is the valgrind output from crssync - do you see anything 
> suspicious in here? proj is being mentioned - so maybe an issue with 
> proj?
> 
> xxx at t480:~/dev/QGIS/build$ valgrind output/bin/crssync
> ==49441== Memcheck, a memory error detector
> ==49441== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et 
> al.
> ==49441== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright 
> info
> ==49441== Command: output/bin/crssync
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1637ff40 is 0 bytes inside a block of size 17 
> free'd
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C3BAAF: _M_construct<char const*> 
> (basic_string.tcc:219)
> ==49441==    by 0x9C3BAAF: _M_construct_aux<char const*> 
> (basic_string.h:247)
> ==49441==    by 0x9C3BAAF: _M_construct<char const*> 
> (basic_string.h:266)
> ==49441==    by 0x9C3BAAF: std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> >::basic_string(char 
> const*, std::allocator<char> const&) [clone .isra.0] 
> (basic_string.h:527)
> ==49441==    by 0x9C3ECF5: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:666)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x150198C4: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1637f898 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C5DB98: 
> __shared_count<osgeo::proj::crs::GeographicCRS*> 
> (shared_ptr_base.h:625)
> ==49441==    by 0x9C5DB98: 
> __shared_count<osgeo::proj::crs::GeographicCRS*> 
> (shared_ptr_base.h:636)
> ==49441==    by 0x9C5DB98: 
> __shared_ptr<osgeo::proj::crs::GeographicCRS> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C5DB98: shared_ptr<osgeo::proj::crs::GeographicCRS> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C5DB98: 
> nn_make_shared<osgeo::proj::crs::GeographicCRS, const 
> std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, const 
> std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::Ellipsoida
> lCS> >&> (crs.hpp:436)
> ==49441==    by 0x9C5DB98: 
> osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
> const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
> dropbox::oxygen::nn<std::shared_ptr<os
> geo::proj::cs::EllipsoidalCS> > const&) (crs.cpp:2558)
> ==49441==    by 0x9C5DDEA: 
> osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> > const&, dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::EllipsoidalCS> > const
> &) (crs.cpp:2533)
> ==49441==    by 0x9C5E3B8: 
> osgeo::proj::crs::GeographicCRS::createEPSG_4979() (crs.cpp:2714)
> ==49441==    by 0x9C3ECC9: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:657)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019A44: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16368108 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C5D7E8: 
> __shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:625)
> ==49441==    by 0x9C5D7E8: 
> __shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:636)
> ==49441==    by 0x9C5D7E8: __shared_ptr<osgeo::proj::crs::GeodeticCRS> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C5D7E8: shared_ptr<osgeo::proj::crs::GeodeticCRS> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C5D7E8: 
> nn_make_shared<osgeo::proj::crs::GeodeticCRS, const 
> std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, const 
> std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS>
>> &> (crs.hpp:348)
> ==49441==    by 0x9C5D7E8: 
> osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
> const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osge
> o::proj::cs::CartesianCS> > const&) (crs.cpp:1641)
> ==49441==    by 0x9C5D97A: 
> osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> > const&, dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS> > const&) (
> crs.cpp:1618)
> ==49441==    by 0x9C5DA81: 
> osgeo::proj::crs::GeodeticCRS::createEPSG_4978() (crs.cpp:2064)
> ==49441==    by 0x9C3EBEB: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:631)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019984: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16364038 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C85B55: 
> __shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
> (shared_ptr_base.h:625)
> ==49441==    by 0x9C85B55: 
> __shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
> (shared_ptr_base.h:636)
> ==49441==    by 0x9C85B55: 
> __shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C85B55: 
> shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C85B55: 
> nn_make_shared<osgeo::proj::datum::GeodeticReferenceFrame, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> >&, 
> const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> >&> (datum.hpp:446)
> ==49441==    by 0x9C85B55: 
> osgeo::proj::datum::GeodeticReferenceFrame::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> > 
> const&, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits
> <char>, std::allocator<char> > > const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> > const&) (datum.cpp:1184)
> ==49441==    by 0x9C85DF2: 
> osgeo::proj::datum::GeodeticReferenceFrame::createEPSG_6326() 
> (datum.cpp:1211)
> ==49441==    by 0x9C3EB9E: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:619)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019744: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1635fe98 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C8C6E2: 
> __shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:625)
> ==49441==    by 0x9C8C6E2: 
> __shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:636)
> ==49441==    by 0x9C8C6E2: __shared_ptr<osgeo::proj::datum::Ellipsoid> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C8C6E2: shared_ptr<osgeo::proj::datum::Ellipsoid> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C8C6E2: 
> nn_make_shared<osgeo::proj::datum::Ellipsoid, const 
> osgeo::proj::common::Length&, const osgeo::proj::common::Scale&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (datum.hpp:365)
> ==49441==    by 0x9C8C6E2: 
> osgeo::proj::datum::Ellipsoid::createFlattenedSphere(osgeo::proj::util::PropertyMap 
> const&, osgeo::proj::common::Length const&, osgeo::proj::common::Scale 
> const&, std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> > c
> onst&) (datum.cpp:744)
> ==49441==    by 0x9C8CBCC: 
> osgeo::proj::datum::Ellipsoid::createGRS1980() (datum.cpp:791)
> ==49441==    by 0x9C3EB2F: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:606)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019684: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1635a4f8 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C8AEF9: 
> __shared_count<osgeo::proj::datum::PrimeMeridian*> 
> (shared_ptr_base.h:625)
> ==49441==    by 0x9C8AEF9: 
> __shared_count<osgeo::proj::datum::PrimeMeridian*> 
> (shared_ptr_base.h:636)
> ==49441==    by 0x9C8AEF9: 
> __shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C8AEF9: 
> shared_ptr<osgeo::proj::datum::PrimeMeridian> (shared_ptr.h:139)
> ==49441==    by 0x9C8AEF9: 
> nn_make_shared<osgeo::proj::datum::PrimeMeridian, const 
> osgeo::proj::common::Angle&> (datum.hpp:237)
> ==49441==    by 0x9C8AEF9: 
> osgeo::proj::datum::PrimeMeridian::create(osgeo::proj::util::PropertyMap 
> const&, osgeo::proj::common::Angle const&) (datum.cpp:316)
> ==49441==    by 0x9C8B132: 
> osgeo::proj::datum::PrimeMeridian::createPARIS() (datum.cpp:339)
> ==49441==    by 0x9C3EA98: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:592)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15023BE5: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354590 is 80 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15023BF9: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354570 is 48 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15023C0D: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354540 is 0 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x15023C1F: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x163545f0 is 0 bytes inside a block of size 27 
> free'd
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A68F: deallocate (new_allocator.h:128)
> ==49441==    by 0x9C4A68F: deallocate (alloc_traits.h:470)
> ==49441==    by 0x9C4A68F: _M_destroy (basic_string.h:237)
> ==49441==    by 0x9C4A68F: _M_dispose (basic_string.h:232)
> ==49441==    by 0x9C4A68F: ~basic_string (basic_string.h:658)
> ==49441==    by 0x9C4A68F: ~Private (common.cpp:72)
> ==49441==    by 0x9C4A68F: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A68F: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A68F: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x586DDCA: void std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> 
> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (in /home/bjsvwneu/dev/QGIS/build/output/lib/libqgis_core.so.3.21.0)
> ==49441==    by 0x9C4E163: _M_construct_aux<char*> (basic_string.h:247)
> ==49441==    by 0x9C4E163: _M_construct<char*> (basic_string.h:266)
> ==49441==    by 0x9C4E163: basic_string (basic_string.h:451)
> ==49441==    by 0x9C4E163: Private (common.cpp:83)
> ==49441==    by 0x9C4E163: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E163: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x15023C2C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354540 is 0 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15019EEC: 
> osgeo::proj::util::BaseObject::~BaseObject() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x163544f8 is 8 bytes inside a block of size 16 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C40A4F: 
> make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
> ==49441==    by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
> (util.cpp:70)
> ==49441==    by 0x9C4E12B: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x163544f0 is 0 bytes inside a block of size 16 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C40A4F: 
> make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
> ==49441==    by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
> (util.cpp:70)
> ==49441==    by 0x9C4E12B: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019804: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1634fdd8 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C473C1: 
> __shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:625)
> ==49441==    by 0x9C473C1: 
> __shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:636)
> ==49441==    by 0x9C473C1: __shared_ptr<osgeo::proj::metadata::Extent> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C473C1: shared_ptr<osgeo::proj::metadata::Extent> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C473C1: 
> nn_make_shared<osgeo::proj::metadata::Extent> (metadata.hpp:347)
> ==49441==    by 0x9C473C1: 
> osgeo::proj::metadata::Extent::create(osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > > const&, 
> std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent>
>> , 
>> std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent> 
>> > > > const&, std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::VerticalExtent> >, std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadat
> a::VerticalExtent> > > > const&, 
> std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> 
> >, std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> > > > const&) (metadata.cpp:703)
> ==49441==    by 0x9C475F4: 
> osgeo::proj::metadata::Extent::createFromBBOX(double, double, double, 
> double, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > > const&) 
> (metadata.cpp:735)
> ==49441==    by 0x9C3BE29: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:179)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441==
> ==49441== HEAP SUMMARY:
> ==49441==     in use at exit: 165,141 bytes in 2,467 blocks
> ==49441==   total heap usage: 910,752 allocs, 908,320 frees, 75,332,685 
> bytes allocated
> ==49441==
> ==49441== LEAK SUMMARY:
> ==49441==    definitely lost: 2,583 bytes in 41 blocks
> ==49441==    indirectly lost: 39,830 bytes in 735 blocks
> ==49441==      possibly lost: 1,352 bytes in 18 blocks
> ==49441==    still reachable: 121,376 bytes in 1,673 blocks
> ==49441==                       of which reachable via heuristic:
> ==49441==                         newarray           : 1,536 bytes in 
> 16 blocks
> ==49441==         suppressed: 0 bytes in 0 blocks
> ==49441== Rerun with --leak-check=full to see details of leaked memory
> ==49441==
> ==49441== For lists of detected and suppressed errors, rerun with: -s
> ==49441== ERROR SUMMARY: 142 errors from 14 contexts (suppressed: 0 
> from 0)
> 
> Thanks a lot,
> 
> Andreas
> 
> On 2021-09-03 15:42, Even Rouault wrote:
> 
> Andreas
> 
> Several things to check:
> 
> - Is your GDAL build a clean one ? That is is it from a fresh build 
> directory, or are you rebuilding in a directory where a previous build 
> was done. If the later, make sure to "make clean" before rebuilding
> 
> - Is your GDAL build using your custom GEOS one ? Otherwise QGIS might 
> link directly to the custom one and indirectly to the system one 
> through GDAL. Check the output of "ldd output/bin/qgis | grep geos"
> 
> - try "valgrind output/bin/crssync". Emitted stack traces can give 
> interesting hints
> 
> Even
> 
> Le 03/09/2021 ? 15:30, Andreas Neumann a ?crit :
> 
> Hi,
> 
> I have troubles compiling QGIS on my Linux Ubuntu 20.04 machine.
> 
> I use a self-compiled GEOS and GDAL.
> 
> The build always hangs at "crssync" - here is the ninja build output I 
> get. Do you have any idea what might be wrong or what I could do in 
> order to fix this problem?
> 
> Thank you for your hints,
> 
> Andreas
> 
> ------------------------
> 
> [0/1] Re-running CMake...
> -- QGIS version: 3.21.0 Master (32100)
> -- Found OpenCL C++ headers: /usr/include
> -- ccache found
> -- Found Proj: /usr/local/lib/libproj.so version 8 (8.1.0)
> -- Found GEOS: /usr/local/lib/libgeos_c.so (3.9.1)
> -- Found GDAL: /usr/local/lib/libgdal.so (3.3.1)
> -- Found Expat: /usr/lib/x86_64-linux-gnu/libexpat.so
> -- Found Spatialindex: /usr/lib/x86_64-linux-gnu/libspatialindex.so
> -- Found Qwt: /usr/lib/libqwt-qt5.so (6.1.4)
> -- Found libzip: /usr/lib/x86_64-linux-gnu/libzip.so
> -- Found Sqlite3: /usr/lib/x86_64-linux-gnu/libsqlite3.so
> -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-pthread
> -- Found zlib: /usr/lib/x86_64-linux-gnu/libz.so
> -- Found exiv2: /usr/lib/x86_64-linux-gnu/libexiv2.so
> -- Found PostgreSQL: /usr/local/pgsql/lib/libpq.so
> -- Found SpatiaLite: /usr/local/lib/libspatialite.so
> -- Qt WebKit support enabled
> -- Found ZSTD: /usr/lib/x86_64-linux-gnu/libzstd.so
> -- Found laz-perf: /usr/local/include
> -- Found PDAL: 
> /usr/local/lib/libpdalcpp.so;/usr/local/lib/libpdal_util.so (2.0.1)
> -- Found Qt version: 5.12.8
> -- Found QScintilla2: /usr/lib/libqscintilla2_qt5.so (2.11.2)
> -- Found QtKeychain: /usr/lib/x86_64-linux-gnu/libqt5keychain.so
> -- Found QCA: /usr/lib/x86_64-linux-gnu/libqca-qt5.so (2.2.1)
> -- Found QCA OpenSSL plugin
> -- Pedantic compiler settings enabled
> -- Found GSL: -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
> -- Found Python executable: /usr/bin/python3.8 (version 3.8.10)
> -- Python library: /usr/lib/x86_64-linux-gnu/libpython3.8.so
> -- Python site-packages: /usr/lib/python3/dist-packages
> -- Found PyQt5 version: 5.14.1
> -- Found SIP version: 4.19.21
> -- Found QScintilla2 PyQt module: 2.11.2
> -- Could NOT find HDF5 (missing: HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
> (found version "")
> -- Could NOT find NetCDF (missing: NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
> -- Using PROJ >= 6 srs database.
> -- Ctest Binary Directory set to: 
> /home/bjsvwneu/dev/QGIS/build/output/bin
> -- Configuring done
> -- Generating done
> -- Build files have been written to: /home/bjsvwneu/dev/QGIS/build
> [1/6072] Generating qgsversion.h, qgsversion.inc
> Files "/home/bjsvwneu/dev/QGIS/build/qgsversion.h.temp" to 
> "/home/bjsvwneu/dev/QGIS/build/qgsversion.h" are different.
> [3/6072] Generating qgsexpression_texts.cpp
> Files 
> "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp.temp" 
> to "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp" are 
> different.
> [2905/6072] Generating gui/sip_guipart0.cpp, gui/sip_guipart1.cpp, 
> gui/sip_guipart2.cpp, gui/sip_guipart3.cpp, gui/sip_guipart4.cpp, 
> g...i/sip_guipart10.cpp, gui/sip_guipart11.cpp, gui/sip_guipart12.cpp, 
> gui/sip_guipart13.cpp, gui/sip_guipart14.cpp, gui/sip_guipart15.cpp
> 
> [4061/6072] Building CXX object 
> src/providers/mdal/CMakeFiles/provider_mdal.dir/__/__/__/external/mdal/mdal_utils.cpp.o
> ../external/mdal/mdal_utils.cpp: In function 'int MDAL::toInt(size_t)':
> ../external/mdal/mdal_utils.cpp:143:14: warning: comparison of integer 
> expressions of different signedness: 'const size_t' {aka 'const long 
> unsigned int'} and 'int' [-Wsign-compare]
> 143 |   if ( value > std::numeric_limits<int>::max() )
> |        ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> [4172/6072] Running crssync
> FAILED: src/crssync/CMakeFiles/synccrsdb
> cd /home/bjsvwneu/dev/QGIS/build/src/crssync && 
> /home/bjsvwneu/dev/QGIS/build/output/bin/crssync
> free(): invalid pointer
> Aborted (core dumped)
> [4173/6072] Building CXX object 
> src/plugins/topology/CMakeFiles/topolplugin.dir/topolplugin_autogen/mocs_compilation.cpp.o
> ninja: build stopped: subcommand failed.
> 
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 
> --
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210903/9d67dab0/attachment-0001.htm>

From a.neumann at carto.net  Sat Sep  4 00:18:13 2021
From: a.neumann at carto.net (Andreas Neumann)
Date: Sat, 04 Sep 2021 07:18:13 -0000
Subject: [QGIS-Developer] Trouble compiling QGIS
In-Reply-To: <5fb48dc2-8759-2786-d35b-cfc79575c171@spatialys.com>
References: <6154ac5b7424495d27cc5fe906bb1969@carto.net>
 <fc4850e8-437d-ec1d-9fce-a30e91a01985@spatialys.com>
 <8ea7393b81cccb2768ca4ed153c7d957@carto.net>
 <5fb48dc2-8759-2786-d35b-cfc79575c171@spatialys.com>
Message-ID: <873c2a5ffe767650c7dc1cc0dd04471d@carto.net>

Hi,

QGIS builds fine again - thanks to your hints and help from ldd / 
valgrind.

Turned out to be a self-compile pdal (I know, more self-compiled stuff) 
that linked to an old geotiff which linked to an old proj. Replacing the 
old geotiff with as self-compile geotiff library fixed the issue.

I also wondered whether pdal could be compiled against the libgeotiff 
inside gdal - would that be possible? In that case I wouldn't have to 
install the separate libgeotiff.

Anyway - QGIS compiles and runs fine again.

Thanks for your help!

Andreas

On 2021-09-03 16:51, Even Rouault wrote:

> The Valgrind output is actually interesting:
> 
> see
> 
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> 
> [...]
> 
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> 
> So you're linking to 2 PROJ versions. That would have been my first 
> bet, but you didn't mention a custom PROJ version :-)
> 
> So the custom GDAL links to the custom PROJ. You'll have now to check 
> which of QGIS and/or Spatialite links to the system PROJ instead of the 
> custom one.
> 
> Le 03/09/2021 ? 16:30, Andreas Neumann a ?crit :
> 
> Hi Even,
> 
> Thank you for your reply.
> 
> I checked with the ldd about gdal/geos/proj - and they all seem to link 
> to the self-compiled versions in /usr/local/lib
> 
> gdal:
> 
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libgdal.so.29
> linux-vdso.so.1 (0x00007fffb930d000)
> libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
> (0x00007f2509600000)
> libjson-c.so.4 => /lib/x86_64-linux-gnu/libjson-c.so.4 
> (0x00007f25095ee000)
> libfreexl.so.1 => /lib/x86_64-linux-gnu/libfreexl.so.1 
> (0x00007f25095e3000)
> libgeos_c.so.1 => /usr/local/lib/libgeos_c.so.1 (0x00007f25095a5000)
> libexpat.so.1 => /lib/x86_64-linux-gnu/libexpat.so.1 
> (0x00007f2509577000)
> libxerces-c-3.2.so => /lib/x86_64-linux-gnu/libxerces-c-3.2.so 
> (0x00007f25091e4000)
> libpq.so.5 => /usr/local/pgsql/lib/libpq.so.5 (0x00007f2509193000)
> libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 (0x00007f25090ea000)
> libproj.so.22 => /usr/local/lib/libproj.so.22 (0x00007f2508d40000)
> libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
> (0x00007f2508c17000)
> libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 (0x00007f2508b92000)
> libdeflate.so.0 => /lib/x86_64-linux-gnu/libdeflate.so.0 
> (0x00007f2508b74000)
> libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f2508b56000)
> libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
> (0x00007f2508b33000)
> libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f2508b2d000)
> libpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007f2508aba000)
> libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 (0x00007f2508a29000)
> libxml2.so.2 => /lib/x86_64-linux-gnu/libxml2.so.2 (0x00007f250886f000)
> libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007f250868b000)
> libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f250853c000)
> libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f250834a000)
> /lib64/ld-linux-x86-64.so.2 (0x00007f250afe7000)
> libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007f250832f000)
> libgeos-3.9.1.so => /usr/local/lib/libgeos-3.9.1.so 
> (0x00007f250811b000)
> libcurl-gnutls.so.4 => /lib/x86_64-linux-gnu/libcurl-gnutls.so.4 
> (0x00007f250808c000)
> libicuuc.so.66 => /lib/x86_64-linux-gnu/libicuuc.so.66 
> (0x00007f2507ea4000)
> libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
> (0x00007f2507e11000)
> libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 (0x00007f2507d90000)
> libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
> (0x00007f2507d67000)
> libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 (0x00007f2507d46000)
> librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 (0x00007f2507d24000)
> libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 (0x00007f2507cb6000)
> libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 (0x00007f2507ca3000)
> libgssapi_krb5.so.2 => /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 
> (0x00007f2507c56000)
> libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
> (0x00007f2507c00000)
> liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
> (0x00007f2507bef000)
> libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
> (0x00007f2507bdf000)
> liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 (0x00007f2507bb6000)
> libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
> (0x00007f2507b7c000)
> libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
> (0x00007f25079a6000)
> libicudata.so.66 => /lib/x86_64-linux-gnu/libicudata.so.66 
> (0x00007f2505ee5000)
> libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 (0x00007f2505e79000)
> libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 (0x00007f2505c6b000)
> libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
> (0x00007f2505ae9000)
> libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
> (0x00007f2505ab2000)
> libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 (0x00007f2505a2e000)
> libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 (0x00007f250594f000)
> libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
> (0x00007f250591e000)
> libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
> (0x00007f2505917000)
> libkrb5support.so.0 => /lib/x86_64-linux-gnu/libkrb5support.so.0 
> (0x00007f2505908000)
> libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
> (0x00007f25058ec000)
> libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
> (0x00007f25058cf000)
> libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
> (0x00007f2505888000)
> libbrotlicommon.so.1 => /lib/x86_64-linux-gnu/libbrotlicommon.so.1 
> (0x00007f2505865000)
> libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
> (0x00007f250572f000)
> libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
> (0x00007f2505719000)
> libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
> (0x00007f2505712000)
> libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
> (0x00007f2505704000)
> libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
> (0x00007f2505671000)
> libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 (0x00007f25055ca000)
> libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
> (0x00007f2505592000)
> libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
> (0x00007f2505579000)
> libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 (0x00007f250556d000)
> libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 (0x00007f2505541000)
> libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
> (0x00007f250552f000)
> libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
> (0x00007f25054e1000)
> libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
> (0x00007f25054a6000)
> 
> geos:
> 
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libgeos-3.9.1.so
> linux-vdso.so.1 (0x00007fff313c5000)
> libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007fbbea26f000)
> libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fbbea120000)
> libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fbbe9f2e000)
> libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007fbbe9f13000)
> /lib64/ld-linux-x86-64.so.2 (0x00007fbbea688000)
> 
> proj:
> 
> xxx at t480:~/dev/QGIS/build$ ldd /usr/local/lib/libproj.so.22
> linux-vdso.so.1 (0x00007ffd8a9e9000)
> libsqlite3.so.0 => /lib/x86_64-linux-gnu/libsqlite3.so.0 
> (0x00007f91d7530000)
> libtiff.so.5 => /lib/x86_64-linux-gnu/libtiff.so.5 (0x00007f91d74af000)
> libcurl.so.4 => /lib/x86_64-linux-gnu/libcurl.so.4 (0x00007f91d741e000)
> libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 
> (0x00007f91d73fb000)
> libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f91d73f5000)
> libstdc++.so.6 => /lib/x86_64-linux-gnu/libstdc++.so.6 
> (0x00007f91d7213000)
> libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f91d70c2000)
> libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f91d6ed0000)
> libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 
> (0x00007f91d6eb5000)
> libwebp.so.6 => /lib/x86_64-linux-gnu/libwebp.so.6 (0x00007f91d6e4b000)
> libzstd.so.1 => /lib/x86_64-linux-gnu/libzstd.so.1 (0x00007f91d6da2000)
> liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 (0x00007f91d6d79000)
> libjbig.so.0 => /lib/x86_64-linux-gnu/libjbig.so.0 (0x00007f91d6b69000)
> libjpeg.so.8 => /lib/x86_64-linux-gnu/libjpeg.so.8 (0x00007f91d6ae4000)
> libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f91d6ac8000)
> libnghttp2.so.14 => /lib/x86_64-linux-gnu/libnghttp2.so.14 
> (0x00007f91d6a9f000)
> libidn2.so.0 => /lib/x86_64-linux-gnu/libidn2.so.0 (0x00007f91d6a7e000)
> librtmp.so.1 => /lib/x86_64-linux-gnu/librtmp.so.1 (0x00007f91d6a5e000)
> libssh.so.4 => /lib/x86_64-linux-gnu/libssh.so.4 (0x00007f91d69ee000)
> libpsl.so.5 => /lib/x86_64-linux-gnu/libpsl.so.5 (0x00007f91d69db000)
> libssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 
> (0x00007f91d6948000)
> libcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 
> (0x00007f91d6672000)
> libgssapi_krb5.so.2 => /lib/x86_64-linux-gnu/libgssapi_krb5.so.2 
> (0x00007f91d6625000)
> libldap_r-2.4.so.2 => /lib/x86_64-linux-gnu/libldap_r-2.4.so.2 
> (0x00007f91d65cf000)
> liblber-2.4.so.2 => /lib/x86_64-linux-gnu/liblber-2.4.so.2 
> (0x00007f91d65bc000)
> libbrotlidec.so.1 => /lib/x86_64-linux-gnu/libbrotlidec.so.1 
> (0x00007f91d65ae000)
> /lib64/ld-linux-x86-64.so.2 (0x00007f91d7a26000)
> libunistring.so.2 => /lib/x86_64-linux-gnu/libunistring.so.2 
> (0x00007f91d642c000)
> libgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 
> (0x00007f91d6256000)
> libhogweed.so.5 => /lib/x86_64-linux-gnu/libhogweed.so.5 
> (0x00007f91d621f000)
> libnettle.so.7 => /lib/x86_64-linux-gnu/libnettle.so.7 
> (0x00007f91d61e3000)
> libgmp.so.10 => /lib/x86_64-linux-gnu/libgmp.so.10 (0x00007f91d615f000)
> libkrb5.so.3 => /lib/x86_64-linux-gnu/libkrb5.so.3 (0x00007f91d6082000)
> libk5crypto.so.3 => /lib/x86_64-linux-gnu/libk5crypto.so.3 
> (0x00007f91d6051000)
> libcom_err.so.2 => /lib/x86_64-linux-gnu/libcom_err.so.2 
> (0x00007f91d604a000)
> libkrb5support.so.0 => /lib/x86_64-linux-gnu/libkrb5support.so.0 
> (0x00007f91d6039000)
> libresolv.so.2 => /lib/x86_64-linux-gnu/libresolv.so.2 
> (0x00007f91d601d000)
> libsasl2.so.2 => /lib/x86_64-linux-gnu/libsasl2.so.2 
> (0x00007f91d6000000)
> libgssapi.so.3 => /lib/x86_64-linux-gnu/libgssapi.so.3 
> (0x00007f91d5fbb000)
> libbrotlicommon.so.1 => /lib/x86_64-linux-gnu/libbrotlicommon.so.1 
> (0x00007f91d5f98000)
> libp11-kit.so.0 => /lib/x86_64-linux-gnu/libp11-kit.so.0 
> (0x00007f91d5e62000)
> libtasn1.so.6 => /lib/x86_64-linux-gnu/libtasn1.so.6 
> (0x00007f91d5e4a000)
> libkeyutils.so.1 => /lib/x86_64-linux-gnu/libkeyutils.so.1 
> (0x00007f91d5e43000)
> libheimntlm.so.0 => /lib/x86_64-linux-gnu/libheimntlm.so.0 
> (0x00007f91d5e37000)
> libkrb5.so.26 => /lib/x86_64-linux-gnu/libkrb5.so.26 
> (0x00007f91d5da4000)
> libasn1.so.8 => /lib/x86_64-linux-gnu/libasn1.so.8 (0x00007f91d5cfd000)
> libhcrypto.so.4 => /lib/x86_64-linux-gnu/libhcrypto.so.4 
> (0x00007f91d5cc3000)
> libroken.so.18 => /lib/x86_64-linux-gnu/libroken.so.18 
> (0x00007f91d5caa000)
> libffi.so.7 => /lib/x86_64-linux-gnu/libffi.so.7 (0x00007f91d5c9e000)
> libwind.so.0 => /lib/x86_64-linux-gnu/libwind.so.0 (0x00007f91d5c74000)
> libheimbase.so.1 => /lib/x86_64-linux-gnu/libheimbase.so.1 
> (0x00007f91d5c62000)
> libhx509.so.5 => /lib/x86_64-linux-gnu/libhx509.so.5 
> (0x00007f91d5c12000)
> libcrypt.so.1 => /lib/x86_64-linux-gnu/libcrypt.so.1 
> (0x00007f91d5bd7000)
> 
> -------------------
> 
> Here is the valgrind output from crssync - do you see anything 
> suspicious in here? proj is being mentioned - so maybe an issue with 
> proj?
> 
> xxx at t480:~/dev/QGIS/build$ valgrind output/bin/crssync
> ==49441== Memcheck, a memory error detector
> ==49441== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et 
> al.
> ==49441== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright 
> info
> ==49441== Command: output/bin/crssync
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1637ff40 is 0 bytes inside a block of size 17 
> free'd
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C3BAAF: _M_construct<char const*> 
> (basic_string.tcc:219)
> ==49441==    by 0x9C3BAAF: _M_construct_aux<char const*> 
> (basic_string.h:247)
> ==49441==    by 0x9C3BAAF: _M_construct<char const*> 
> (basic_string.h:266)
> ==49441==    by 0x9C3BAAF: std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> >::basic_string(char 
> const*, std::allocator<char> const&) [clone .isra.0] 
> (basic_string.h:527)
> ==49441==    by 0x9C3ECF5: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:666)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x150198C4: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1637f898 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C5DB98: 
> __shared_count<osgeo::proj::crs::GeographicCRS*> 
> (shared_ptr_base.h:625)
> ==49441==    by 0x9C5DB98: 
> __shared_count<osgeo::proj::crs::GeographicCRS*> 
> (shared_ptr_base.h:636)
> ==49441==    by 0x9C5DB98: 
> __shared_ptr<osgeo::proj::crs::GeographicCRS> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C5DB98: shared_ptr<osgeo::proj::crs::GeographicCRS> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C5DB98: 
> nn_make_shared<osgeo::proj::crs::GeographicCRS, const 
> std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, const 
> std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::Ellipsoida
> lCS> >&> (crs.hpp:436)
> ==49441==    by 0x9C5DB98: 
> osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
> const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
> dropbox::oxygen::nn<std::shared_ptr<os
> geo::proj::cs::EllipsoidalCS> > const&) (crs.cpp:2558)
> ==49441==    by 0x9C5DDEA: 
> osgeo::proj::crs::GeographicCRS::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> > const&, dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::EllipsoidalCS> > const
> &) (crs.cpp:2533)
> ==49441==    by 0x9C5E3B8: 
> osgeo::proj::crs::GeographicCRS::createEPSG_4979() (crs.cpp:2714)
> ==49441==    by 0x9C3ECC9: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:657)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019A44: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16368108 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C5D7E8: 
> __shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:625)
> ==49441==    by 0x9C5D7E8: 
> __shared_count<osgeo::proj::crs::GeodeticCRS*> (shared_ptr_base.h:636)
> ==49441==    by 0x9C5D7E8: __shared_ptr<osgeo::proj::crs::GeodeticCRS> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C5D7E8: shared_ptr<osgeo::proj::crs::GeodeticCRS> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C5D7E8: 
> nn_make_shared<osgeo::proj::crs::GeodeticCRS, const 
> std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame>&, const 
> std::shared_ptr<osgeo::proj::datum::DatumEnsemble>&, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS>
>> &> (crs.hpp:348)
> ==49441==    by 0x9C5D7E8: 
> osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
> const&, std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> const&, std::shared_ptr<osgeo::proj::datum::DatumEnsemble> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osge
> o::proj::cs::CartesianCS> > const&) (crs.cpp:1641)
> ==49441==    by 0x9C5D97A: 
> osgeo::proj::crs::GeodeticCRS::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> > const&, dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::cs::CartesianCS> > const&) (
> crs.cpp:1618)
> ==49441==    by 0x9C5DA81: 
> osgeo::proj::crs::GeodeticCRS::createEPSG_4978() (crs.cpp:2064)
> ==49441==    by 0x9C3EBEB: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:631)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019984: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16364038 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C85B55: 
> __shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
> (shared_ptr_base.h:625)
> ==49441==    by 0x9C85B55: 
> __shared_count<osgeo::proj::datum::GeodeticReferenceFrame*> 
> (shared_ptr_base.h:636)
> ==49441==    by 0x9C85B55: 
> __shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C85B55: 
> shared_ptr<osgeo::proj::datum::GeodeticReferenceFrame> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C85B55: 
> nn_make_shared<osgeo::proj::datum::GeodeticReferenceFrame, const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> >&, 
> const 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> >&> (datum.hpp:446)
> ==49441==    by 0x9C85B55: 
> osgeo::proj::datum::GeodeticReferenceFrame::create(osgeo::proj::util::PropertyMap 
> const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::Ellipsoid> > 
> const&, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits
> <char>, std::allocator<char> > > const&, 
> dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> > const&) (datum.cpp:1184)
> ==49441==    by 0x9C85DF2: 
> osgeo::proj::datum::GeodeticReferenceFrame::createEPSG_6326() 
> (datum.cpp:1211)
> ==49441==    by 0x9C3EB9E: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:619)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019744: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1635fe98 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C8C6E2: 
> __shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:625)
> ==49441==    by 0x9C8C6E2: 
> __shared_count<osgeo::proj::datum::Ellipsoid*> (shared_ptr_base.h:636)
> ==49441==    by 0x9C8C6E2: __shared_ptr<osgeo::proj::datum::Ellipsoid> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C8C6E2: shared_ptr<osgeo::proj::datum::Ellipsoid> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C8C6E2: 
> nn_make_shared<osgeo::proj::datum::Ellipsoid, const 
> osgeo::proj::common::Length&, const osgeo::proj::common::Scale&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (datum.hpp:365)
> ==49441==    by 0x9C8C6E2: 
> osgeo::proj::datum::Ellipsoid::createFlattenedSphere(osgeo::proj::util::PropertyMap 
> const&, osgeo::proj::common::Length const&, osgeo::proj::common::Scale 
> const&, std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> > c
> onst&) (datum.cpp:744)
> ==49441==    by 0x9C8CBCC: 
> osgeo::proj::datum::Ellipsoid::createGRS1980() (datum.cpp:791)
> ==49441==    by 0x9C3EB2F: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:606)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019684: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1635a4f8 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C8AEF9: 
> __shared_count<osgeo::proj::datum::PrimeMeridian*> 
> (shared_ptr_base.h:625)
> ==49441==    by 0x9C8AEF9: 
> __shared_count<osgeo::proj::datum::PrimeMeridian*> 
> (shared_ptr_base.h:636)
> ==49441==    by 0x9C8AEF9: 
> __shared_ptr<osgeo::proj::datum::PrimeMeridian> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C8AEF9: 
> shared_ptr<osgeo::proj::datum::PrimeMeridian> (shared_ptr.h:139)
> ==49441==    by 0x9C8AEF9: 
> nn_make_shared<osgeo::proj::datum::PrimeMeridian, const 
> osgeo::proj::common::Angle&> (datum.hpp:237)
> ==49441==    by 0x9C8AEF9: 
> osgeo::proj::datum::PrimeMeridian::create(osgeo::proj::util::PropertyMap 
> const&, osgeo::proj::common::Angle const&) (datum.cpp:316)
> ==49441==    by 0x9C8B132: 
> osgeo::proj::datum::PrimeMeridian::createPARIS() (datum.cpp:339)
> ==49441==    by 0x9C3EA98: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:592)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15023BE5: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354590 is 80 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15023BF9: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354570 is 48 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15023C0D: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354540 is 0 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x15023C1F: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x163545f0 is 0 bytes inside a block of size 27 
> free'd
> ==49441==    at 0x483CFBF: operator delete(void*) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A68F: deallocate (new_allocator.h:128)
> ==49441==    by 0x9C4A68F: deallocate (alloc_traits.h:470)
> ==49441==    by 0x9C4A68F: _M_destroy (basic_string.h:237)
> ==49441==    by 0x9C4A68F: _M_dispose (basic_string.h:232)
> ==49441==    by 0x9C4A68F: ~basic_string (basic_string.h:658)
> ==49441==    by 0x9C4A68F: ~Private (common.cpp:72)
> ==49441==    by 0x9C4A68F: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A68F: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A68F: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x586DDCA: void std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> 
> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (in /home/bjsvwneu/dev/QGIS/build/output/lib/libqgis_core.so.3.21.0)
> ==49441==    by 0x9C4E163: _M_construct_aux<char*> (basic_string.h:247)
> ==49441==    by 0x9C4E163: _M_construct<char*> (basic_string.h:266)
> ==49441==    by 0x9C4E163: basic_string (basic_string.h:451)
> ==49441==    by 0x9C4E163: Private (common.cpp:83)
> ==49441==    by 0x9C4E163: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E163: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x15023C2C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x16354540 is 0 bytes inside a block of size 112 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4A69C: operator() (unique_ptr.h:81)
> ==49441==    by 0x9C4A69C: ~unique_ptr (unique_ptr.h:292)
> ==49441==    by 0x9C4A69C: 
> osgeo::proj::common::UnitOfMeasure::~UnitOfMeasure() (common.hpp:60)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C4E144: 
> make_unique<osgeo::proj::common::UnitOfMeasure::Private, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&, double&, 
> osgeo::proj::common::UnitOfMeasure::Type&, const 
> std::__cxx11::basic_string<char, std::cha
> r_traits<char>, std::allocator<char> >&, const 
> std::__cxx11::basic_string<char, std::char_traits<char>, 
> std::allocator<char> >&> (internal.hpp:100)
> ==49441==    by 0x9C4E144: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 8
> ==49441==    at 0x15019EEC: 
> osgeo::proj::util::BaseObject::~BaseObject() (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x163544f8 is 8 bytes inside a block of size 16 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C40A4F: 
> make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
> ==49441==    by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
> (util.cpp:70)
> ==49441==    by 0x9C4E12B: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid free() / delete / delete[] / realloc()
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x163544f0 is 0 bytes inside a block of size 16 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C40A4F: 
> make_unique<osgeo::proj::util::BaseObject::Private> (internal.hpp:100)
> ==49441==    by 0x9C40A4F: osgeo::proj::util::BaseObject::BaseObject() 
> (util.cpp:70)
> ==49441==    by 0x9C4E12B: 
> osgeo::proj::common::UnitOfMeasure::UnitOfMeasure(std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&, double, 
> osgeo::proj::common::UnitOfMeasure::Type, 
> std::__cxx11::basic_string<char, std::char_traits<char>,
> std::allocator<char> > const&, std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > const&) (common.cpp:95)
> ==49441==    by 0x9C3D8E1: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:381)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441== Invalid read of size 4
> ==49441==    at 0x15019804: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x150193E6: ??? (in 
> /usr/lib/x86_64-linux-gnu/libproj.so.15.3.1)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Address 0x1634fdd8 is 8 bytes inside a block of size 24 
> free'd
> ==49441==    at 0x483D1CF: operator delete(void*, unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x955015D: __cxa_finalize (cxa_finalize.c:83)
> ==49441==    by 0x9C3FDC6: ??? (in /usr/local/lib/libproj.so.22.1.0)
> ==49441==    by 0x4011F5A: _dl_fini (dl-fini.c:138)
> ==49441==    by 0x954FA26: __run_exit_handlers (exit.c:108)
> ==49441==    by 0x954FBDF: exit (exit.c:139)
> ==49441==    by 0x952D0B9: (below main) (libc-start.c:342)
> ==49441==  Block was alloc'd at
> ==49441==    at 0x483BE63: operator new(unsigned long) (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==49441==    by 0x9C473C1: 
> __shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:625)
> ==49441==    by 0x9C473C1: 
> __shared_count<osgeo::proj::metadata::Extent*> (shared_ptr_base.h:636)
> ==49441==    by 0x9C473C1: __shared_ptr<osgeo::proj::metadata::Extent> 
> (shared_ptr_base.h:1125)
> ==49441==    by 0x9C473C1: shared_ptr<osgeo::proj::metadata::Extent> 
> (shared_ptr.h:139)
> ==49441==    by 0x9C473C1: 
> nn_make_shared<osgeo::proj::metadata::Extent> (metadata.hpp:347)
> ==49441==    by 0x9C473C1: 
> osgeo::proj::metadata::Extent::create(osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > > const&, 
> std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent>
>> , 
>> std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::GeographicExtent> 
>> > > > const&, std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::VerticalExtent> >, std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadat
> a::VerticalExtent> > > > const&, 
> std::vector<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> 
> >, std::allocator<dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::metadata::TemporalExtent> > > > const&) (metadata.cpp:703)
> ==49441==    by 0x9C475F4: 
> osgeo::proj::metadata::Extent::createFromBBOX(double, double, double, 
> double, osgeo::proj::util::optional<std::__cxx11::basic_string<char, 
> std::char_traits<char>, std::allocator<char> > > const&) 
> (metadata.cpp:735)
> ==49441==    by 0x9C3BE29: 
> __static_initialization_and_destruction_0(int, int) [clone 
> .constprop.0] (static.cpp:179)
> ==49441==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
> ==49441==    by 0x4011C90: call_init (dl-init.c:30)
> ==49441==    by 0x4011C90: _dl_init (dl-init.c:119)
> ==49441==    by 0x4001139: ??? (in 
> /usr/lib/x86_64-linux-gnu/ld-2.31.so)
> ==49441==
> ==49441==
> ==49441== HEAP SUMMARY:
> ==49441==     in use at exit: 165,141 bytes in 2,467 blocks
> ==49441==   total heap usage: 910,752 allocs, 908,320 frees, 75,332,685 
> bytes allocated
> ==49441==
> ==49441== LEAK SUMMARY:
> ==49441==    definitely lost: 2,583 bytes in 41 blocks
> ==49441==    indirectly lost: 39,830 bytes in 735 blocks
> ==49441==      possibly lost: 1,352 bytes in 18 blocks
> ==49441==    still reachable: 121,376 bytes in 1,673 blocks
> ==49441==                       of which reachable via heuristic:
> ==49441==                         newarray           : 1,536 bytes in 
> 16 blocks
> ==49441==         suppressed: 0 bytes in 0 blocks
> ==49441== Rerun with --leak-check=full to see details of leaked memory
> ==49441==
> ==49441== For lists of detected and suppressed errors, rerun with: -s
> ==49441== ERROR SUMMARY: 142 errors from 14 contexts (suppressed: 0 
> from 0)
> 
> Thanks a lot,
> 
> Andreas
> 
> On 2021-09-03 15:42, Even Rouault wrote:
> 
> Andreas
> 
> Several things to check:
> 
> - Is your GDAL build a clean one ? That is is it from a fresh build 
> directory, or are you rebuilding in a directory where a previous build 
> was done. If the later, make sure to "make clean" before rebuilding
> 
> - Is your GDAL build using your custom GEOS one ? Otherwise QGIS might 
> link directly to the custom one and indirectly to the system one 
> through GDAL. Check the output of "ldd output/bin/qgis | grep geos"
> 
> - try "valgrind output/bin/crssync". Emitted stack traces can give 
> interesting hints
> 
> Even
> 
> Le 03/09/2021 ? 15:30, Andreas Neumann a ?crit :
> 
> Hi,
> 
> I have troubles compiling QGIS on my Linux Ubuntu 20.04 machine.
> 
> I use a self-compiled GEOS and GDAL.
> 
> The build always hangs at "crssync" - here is the ninja build output I 
> get. Do you have any idea what might be wrong or what I could do in 
> order to fix this problem?
> 
> Thank you for your hints,
> 
> Andreas
> 
> ------------------------
> 
> [0/1] Re-running CMake...
> -- QGIS version: 3.21.0 Master (32100)
> -- Found OpenCL C++ headers: /usr/include
> -- ccache found
> -- Found Proj: /usr/local/lib/libproj.so version 8 (8.1.0)
> -- Found GEOS: /usr/local/lib/libgeos_c.so (3.9.1)
> -- Found GDAL: /usr/local/lib/libgdal.so (3.3.1)
> -- Found Expat: /usr/lib/x86_64-linux-gnu/libexpat.so
> -- Found Spatialindex: /usr/lib/x86_64-linux-gnu/libspatialindex.so
> -- Found Qwt: /usr/lib/libqwt-qt5.so (6.1.4)
> -- Found libzip: /usr/lib/x86_64-linux-gnu/libzip.so
> -- Found Sqlite3: /usr/lib/x86_64-linux-gnu/libsqlite3.so
> -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so;-pthread
> -- Found zlib: /usr/lib/x86_64-linux-gnu/libz.so
> -- Found exiv2: /usr/lib/x86_64-linux-gnu/libexiv2.so
> -- Found PostgreSQL: /usr/local/pgsql/lib/libpq.so
> -- Found SpatiaLite: /usr/local/lib/libspatialite.so
> -- Qt WebKit support enabled
> -- Found ZSTD: /usr/lib/x86_64-linux-gnu/libzstd.so
> -- Found laz-perf: /usr/local/include
> -- Found PDAL: 
> /usr/local/lib/libpdalcpp.so;/usr/local/lib/libpdal_util.so (2.0.1)
> -- Found Qt version: 5.12.8
> -- Found QScintilla2: /usr/lib/libqscintilla2_qt5.so (2.11.2)
> -- Found QtKeychain: /usr/lib/x86_64-linux-gnu/libqt5keychain.so
> -- Found QCA: /usr/lib/x86_64-linux-gnu/libqca-qt5.so (2.2.1)
> -- Found QCA OpenSSL plugin
> -- Pedantic compiler settings enabled
> -- Found GSL: -L/usr/lib/x86_64-linux-gnu -lgsl -lgslcblas -lm
> -- Found Python executable: /usr/bin/python3.8 (version 3.8.10)
> -- Python library: /usr/lib/x86_64-linux-gnu/libpython3.8.so
> -- Python site-packages: /usr/lib/python3/dist-packages
> -- Found PyQt5 version: 5.14.1
> -- Found SIP version: 4.19.21
> -- Found QScintilla2 PyQt module: 2.11.2
> -- Could NOT find HDF5 (missing: HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
> (found version "")
> -- Could NOT find NetCDF (missing: NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
> -- Using PROJ >= 6 srs database.
> -- Ctest Binary Directory set to: 
> /home/bjsvwneu/dev/QGIS/build/output/bin
> -- Configuring done
> -- Generating done
> -- Build files have been written to: /home/bjsvwneu/dev/QGIS/build
> [1/6072] Generating qgsversion.h, qgsversion.inc
> Files "/home/bjsvwneu/dev/QGIS/build/qgsversion.h.temp" to 
> "/home/bjsvwneu/dev/QGIS/build/qgsversion.h" are different.
> [3/6072] Generating qgsexpression_texts.cpp
> Files 
> "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp.temp" 
> to "/home/bjsvwneu/dev/QGIS/build/src/core/qgsexpression_texts.cpp" are 
> different.
> [2905/6072] Generating gui/sip_guipart0.cpp, gui/sip_guipart1.cpp, 
> gui/sip_guipart2.cpp, gui/sip_guipart3.cpp, gui/sip_guipart4.cpp, 
> g...i/sip_guipart10.cpp, gui/sip_guipart11.cpp, gui/sip_guipart12.cpp, 
> gui/sip_guipart13.cpp, gui/sip_guipart14.cpp, gui/sip_guipart15.cpp
> 
> [4061/6072] Building CXX object 
> src/providers/mdal/CMakeFiles/provider_mdal.dir/__/__/__/external/mdal/mdal_utils.cpp.o
> ../external/mdal/mdal_utils.cpp: In function 'int MDAL::toInt(size_t)':
> ../external/mdal/mdal_utils.cpp:143:14: warning: comparison of integer 
> expressions of different signedness: 'const size_t' {aka 'const long 
> unsigned int'} and 'int' [-Wsign-compare]
> 143 |   if ( value > std::numeric_limits<int>::max() )
> |        ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> [4172/6072] Running crssync
> FAILED: src/crssync/CMakeFiles/synccrsdb
> cd /home/bjsvwneu/dev/QGIS/build/src/crssync && 
> /home/bjsvwneu/dev/QGIS/build/output/bin/crssync
> free(): invalid pointer
> Aborted (core dumped)
> [4173/6072] Building CXX object 
> src/plugins/topology/CMakeFiles/topolplugin.dir/topolplugin_autogen/mocs_compilation.cpp.o
> ninja: build stopped: subcommand failed.
> 
> _______________________________________________
> QGIS-Developer mailing list
> QGIS-Developer at lists.osgeo.org
> List info: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: https://lists.osgeo.org/mailman/listinfo/qgis-developer
> 
> --
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/qgis-developer/attachments/20210904/35d8c9ea/attachment-0001.htm>

