From sherman at mrcc.com  Fri Mar 17 20:29:07 2006
From: sherman at mrcc.com (Gary Sherman)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] test
Message-ID: <441B6263.1020700@mrcc.com>


-- 
-gary

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Gary Sherman
http://mrcc.com
  "We work virtually everywhere"
http://qgis.org
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

From sherman at mrcc.com  Sat Mar 18 10:41:38 2006
From: sherman at mrcc.com (Gary Sherman)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] New Bug Tracker
Message-ID: <441C2A32.7070303@mrcc.com>

We are contemplating moving the bug tracker off of SourceForge. There is
a poll on the front page of http://qgis.org with a list of possible
choices. Please vote so we can narrow down the choices.


-- 
-gary

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Gary Sherman
http://mrcc.com
  "We work virtually everywhere"
http://qgis.org
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

From mateusz at loskot.net  Sat Mar 18 11:21:17 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] New Bug Tracker
In-Reply-To: <441C2A32.7070303@mrcc.com>
References: <441C2A32.7070303@mrcc.com>
Message-ID: <441C337D.2070807@loskot.net>

Gary Sherman wrote:
> We are contemplating moving the bug tracker off of SourceForge. There is
> a poll on the front page of http://qgis.org with a list of possible
> choices. Please vote so we can narrow down the choices.

I'd like to encourage QGIS developers to take a closer look at Trac.

Here is Trac's homepage with screenshots:

http://www.edgewall.com/trac/

Small example of live project using Trac:
http://trac.wordpress.org/

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From wonder.sk at gmail.com  Sat Mar 18 13:06:23 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Improving rendering speed
Message-ID: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>

Hi,

I've started to do some research on how to make rendering faster. My
benchmarks and thoughts on optimizing are on wiki:
http://wiki.qgis.org/qgiswiki/Rendering_Performance

I'd like hear some feedback from you!

Bye,
Martin

From mateusz at loskot.net  Sat Mar 18 14:24:37 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Building QT 4 with Visual C++ 2005
Message-ID: <441C5E75.7040803@loskot.net>

Hi,

I'd like to announce first HOWTO related to building QGIS
with VC++ 2005.

The first requirement to compile QGIS using Visual C++ 2005 is to
build QT4. So, here are step by step instructions how to do that:

http://wiki.qgis.org/qgiswiki/Building_QT_4_with_Visual_C%2B%2B_2005

Comments and suggestions are strongly welcome.

Next, I'm going to write HOWOT about building QGIS itself.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sat Mar 18 21:55:25 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Building Quantum GIS with Visual C++ 2005
Message-ID: <441CC81D.2030204@loskot.net>

Hi,

I've just finished the second HOWTO in series about using VC++ 2005.
So, here it is the list of both:

1. Building QT 4 with Visual C++ 2005
http://wiki.qgis.org/qgiswiki/Building_QT_4_with_Visual_C%2B%2B_2005

2. Building Quantum GIS with Visual C++ 2005
http://wiki.qgis.org/qgiswiki/Building_Quantum_GIS_with_Visual_C%2B%2B_2005

Those HOWTOs are crash courses, so please expect possible problems :-)
If you'll encounter problems, bugs or you'll have any comments please 
give me a note.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From wonder.sk at gmail.com  Sun Mar 19 12:01:03 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Removing layers in QGIS
Message-ID: <e8e7199c0603190901ibad683eh965bfd218dc7e254@mail.gmail.com>

Hi Marco,

recently I've found out that removing layer has 2 different
implementations - one in QgsLegend, another in QgisApp (this one even
doesn't work correctly). I wanted to fix that with using
QgsLegend::removeLayer(), but I've found inconsistency: in QgisApp,
layer is erased from map layer registry, while in QgsLegend this is
not happening.

My question is - what is the policy of using map layer registry (who
is responsible for adding/removing from it etc.). This would be good
to decide, also with regard to possibility to have multiple map
canvases or embedding canvas and legend to other projects.

Regards,
Martin

From wonder.sk at gmail.com  Sun Mar 19 16:00:01 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Improving rendering speed
In-Reply-To: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
References: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
Message-ID: <e8e7199c0603191300t9ee1387q89ea85ac59448458@mail.gmail.com>

I've updated that wiki page - with regard to Gavin's testing, there's
still need of clipping features. Currently not due bug in X11 but
because of bug in Qt - in rasterizer for QImage. This will probably
affect also other platforms, not only X11. Please could someone test
it on the other platforms?

Martin


On 3/18/06, Martin Dobias <wonder.sk@gmail.com> wrote:
> Hi,
>
> I've started to do some research on how to make rendering faster. My
> benchmarks and thoughts on optimizing are on wiki:
> http://wiki.qgis.org/qgiswiki/Rendering_Performance
>
> I'd like hear some feedback from you!
>
> Bye,
> Martin
>

From gavin at macaulay.co.nz  Sun Mar 19 16:30:48 2006
From: gavin at macaulay.co.nz (Gavin Macaulay)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Improving rendering speed
In-Reply-To: <e8e7199c0603191300t9ee1387q89ea85ac59448458@mail.gmail.com>
References: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
	<e8e7199c0603191300t9ee1387q89ea85ac59448458@mail.gmail.com>
Message-ID: <441DCD88.1060905@macaulay.co.nz>

Hi,

I think that the problem with QImage will be a very similar problem as 
with X11, but is most likely to now extend to other platforms :(

QPainter has the ability to set a clip region, and this may be a way to 
get Qt to do the clipping, although I seem to remember trying this in 
Qt3. However in the end someone has to do the clipping, and whether it's 
Qt or Qgis should really only depend on which code can do it fastest. 
I'll try a clip region on QPainter later tonight.

Gavin

Martin Dobias wrote:
> I've updated that wiki page - with regard to Gavin's testing, there's
> still need of clipping features. Currently not due bug in X11 but
> because of bug in Qt - in rasterizer for QImage. This will probably
> affect also other platforms, not only X11. Please could someone test
> it on the other platforms?
> 
> Martin
> 
> 
> On 3/18/06, Martin Dobias <wonder.sk@gmail.com> wrote:
>> Hi,
>>
>> I've started to do some research on how to make rendering faster. My
>> benchmarks and thoughts on optimizing are on wiki:
>> http://wiki.qgis.org/qgiswiki/Rendering_Performance
>>
>> I'd like hear some feedback from you!
>>
>> Bye,
>> Martin
>>
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer

From morb at beagle.com.au  Sat Mar 18 07:58:27 2006
From: morb at beagle.com.au (Brendan Morley)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Better getNextFeature in vector providers
In-Reply-To: <e8e7199c0603170723o38eb55ffwc16ad0414eabf8f@mail.gmail.com>
References: <e8e7199c0603170723o38eb55ffwc16ad0414eabf8f@mail.gmail.com>
Message-ID: <1142686707.3601.7.camel@localhost.localdomain>

Martin,

I had thought 0.8 is already in feature freeze; though my interpretation
of that was "get WMS finished, not just started" (-:  Therefore I vote
you do this in some post-0.8 branch.

Can I also suggest that as a result of me looking at what's required of
a WFS implementation, I've realised that getNextFeature will soon have
to deal with nested attributes (this is because the XML Schema
specification allows it).  When reimplementing getNextFeature, please
make sure it can be easily "scaled" to nested attributes in future.

Finally Mateusz, QVariant can have user variants - therefore I'm not
sure if the refactoring of getNextFeature is a good enough reason to
drag in the "boost" dependency.


Brendan


On Fri, 2006-03-17 at 16:23 +0100, Martin Dobias wrote:
> Hi,
> 
> currently I'm playing again with searching and filtering features from
> vector layers. Now, QgsVectorDataProvider has several access methods
> for features:
> - QgsFeature* getFirstFeature(bool fetchAttributes)
> - QgsFeature* getNextFeature(bool fetchAttributes)
> - QgsFeature* getNextFeature(std::list<int> const & attlist, int
> featureQueueSize)
> - bool getNextFeature(QgsFeature &feature, bool fetchAttributes)
> 
> Notes:
> - getFirstFeature is redundant and nearly not used at all
> - last getNextFeature call is probably the best since it doesn't
> create QgsFeature every time, but it misses implementation in
> PostrgreSQL, GRASS and GPX providers, so far not used at all in QGIS
> - getNextFeature with list as a parameter specifies attributes we're
> interested in
> 
> In my opinion it's not very practical and in case I need to access
> only attributes I always get also geometry. Therefore I'd like to
> suggest improving this interface for more flexible access. This is my
> idea of how this should work:
> 
> Only one accessor: bool getNextFeature(QgsFeature& feature)
> Feature that will be passed to getNextFeature could set:
> - hasGeometry(bool)  -- default true
> - hasAttributes(bool) -- default false
> Accessor function will consider these flags and won't do actions which
> are not required.
> 
> Also dealing with feature attributes should be improved - I've started
> some work on this to at least make difference between string and
> numeric values. This is not very good solution though. My opinion is
> to use QVariant classes for values (or something similar).
> 
> 
> Now question mainly on Gary: what is the current plan of 0.8 release?
> Should we wait with more improvements until it's released? (I'd like
> to implement filtering of vector layers to work with providers other
> than PostgreSQL) Or what about creating 0.8 release branch for
> bugfixes while development can go on in trunk?
> 
> Bye,
> Martin
> 
> 
> -------------------------------------------------------
> This SF.Net email is sponsored by xPML, a groundbreaking scripting language
> that extends applications into web and mobile media. Attend the live webcast
> and join the prime developer group breaking into this new coding territory!
> http://sel.as-us.falkag.net/sel?cmd=lnk&kid0944&bid$1720&dat1642
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/qgis-developer
> 


From wonder.sk at gmail.com  Sun Mar 19 19:23:52 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Better getNextFeature in vector providers
In-Reply-To: <1142686707.3601.7.camel@localhost.localdomain>
References: <e8e7199c0603170723o38eb55ffwc16ad0414eabf8f@mail.gmail.com>
	<1142686707.3601.7.camel@localhost.localdomain>
Message-ID: <e8e7199c0603191623v49af7f36i4cfca35bf88f6974@mail.gmail.com>

On 3/18/06, Brendan Morley <morb@beagle.com.au> wrote:
> Martin,
>
> I had thought 0.8 is already in feature freeze; though my interpretation
> of that was "get WMS finished, not just started" (-:  Therefore I vote
> you do this in some post-0.8 branch.

Hi Brendan,

Gary has recently set feature freeze to March 31, he confirmed to me
on IRC that it's ok to do some more improvements until that date.
Personally I don't think these changes are very big and I can surely
finish it on time.


> Can I also suggest that as a result of me looking at what's required of
> a WFS implementation, I've realised that getNextFeature will soon have
> to deal with nested attributes (this is because the XML Schema
> specification allows it).  When reimplementing getNextFeature, please
> make sure it can be easily "scaled" to nested attributes in future.

I would say that nested attributes can be flattened easily: they can
get field indexes in the order as they appear in schema and their
names can reflect nesting, e.g. "level1:level2:level3" could be name
for an attribute nested two levels deep. Does this make sense to you?


> Finally Mateusz, QVariant can have user variants - therefore I'm not
> sure if the refactoring of getNextFeature is a good enough reason to
> drag in the "boost" dependency.

I guess that Mateusz meant that only one header from boost would be
needed, not the whole library. However after some thinking and looking
in QVariant sources, I don't think that we really need something like
boost::any and that QVariant will suffice - I didn't find any
inefficiencies in the implementation. The second reason is that we
should prefer Qt classes to make the code as consistent as possible.

--------

Is this OK for everyone? Everything is in one call, allows to fetch
geometry or not, allows to specify what attributes to fetch
(identified by attribute index).

bool getNextFeature(QgsFeature& feature, bool fetchGeometry = true,
   std::list<int>& fetchAttributes = emptyList)

(emptyList will be static member of QgsVectorDataProvider, providing
default argument for the function)


Martin


>
>
> Brendan
>
>
> On Fri, 2006-03-17 at 16:23 +0100, Martin Dobias wrote:
> > Hi,
> >
> > currently I'm playing again with searching and filtering features from
> > vector layers. Now, QgsVectorDataProvider has several access methods
> > for features:
> > - QgsFeature* getFirstFeature(bool fetchAttributes)
> > - QgsFeature* getNextFeature(bool fetchAttributes)
> > - QgsFeature* getNextFeature(std::list<int> const & attlist, int
> > featureQueueSize)
> > - bool getNextFeature(QgsFeature &feature, bool fetchAttributes)
> >
> > Notes:
> > - getFirstFeature is redundant and nearly not used at all
> > - last getNextFeature call is probably the best since it doesn't
> > create QgsFeature every time, but it misses implementation in
> > PostrgreSQL, GRASS and GPX providers, so far not used at all in QGIS
> > - getNextFeature with list as a parameter specifies attributes we're
> > interested in
> >
> > In my opinion it's not very practical and in case I need to access
> > only attributes I always get also geometry. Therefore I'd like to
> > suggest improving this interface for more flexible access. This is my
> > idea of how this should work:
> >
> > Only one accessor: bool getNextFeature(QgsFeature& feature)
> > Feature that will be passed to getNextFeature could set:
> > - hasGeometry(bool)  -- default true
> > - hasAttributes(bool) -- default false
> > Accessor function will consider these flags and won't do actions which
> > are not required.
> >
> > Also dealing with feature attributes should be improved - I've started
> > some work on this to at least make difference between string and
> > numeric values. This is not very good solution though. My opinion is
> > to use QVariant classes for values (or something similar).
> >
> >
> > Now question mainly on Gary: what is the current plan of 0.8 release?
> > Should we wait with more improvements until it's released? (I'd like
> > to implement filtering of vector layers to work with providers other
> > than PostgreSQL) Or what about creating 0.8 release branch for
> > bugfixes while development can go on in trunk?
> >
> > Bye,
> > Martin
> >
> >
> > -------------------------------------------------------
> > This SF.Net email is sponsored by xPML, a groundbreaking scripting language
> > that extends applications into web and mobile media. Attend the live webcast
> > and join the prime developer group breaking into this new coding territory!
> > http://sel.as-us.falkag.net/sel?cmd=lnk&kid0944&bid$1720&dat1642
> > _______________________________________________
> > Qgis-developer mailing list
> > Qgis-developer@lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/qgis-developer
> >
>
>

From sherman at mrcc.com  Sun Mar 19 20:17:06 2006
From: sherman at mrcc.com (Gary Sherman)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Better getNextFeature in vector providers
In-Reply-To: <e8e7199c0603191623v49af7f36i4cfca35bf88f6974@mail.gmail.com>
References: <e8e7199c0603170723o38eb55ffwc16ad0414eabf8f@mail.gmail.com>	<1142686707.3601.7.camel@localhost.localdomain>
	<e8e7199c0603191623v49af7f36i4cfca35bf88f6974@mail.gmail.com>
Message-ID: <441E0292.4010001@mrcc.com>

Martin Dobias wrote:
> On 3/18/06, Brendan Morley <morb@beagle.com.au> wrote:
>> Martin,
>>
>> I had thought 0.8 is already in feature freeze; though my interpretation
>> of that was "get WMS finished, not just started" (-:  Therefore I vote
>> you do this in some post-0.8 branch.
> 
> Hi Brendan,
> 
> Gary has recently set feature freeze to March 31, he confirmed to me
> on IRC that it's ok to do some more improvements until that date.
> Personally I don't think these changes are very big and I can surely
> finish it on time.
> 
> 
To clarify, we don't want to implement any new major features. Tweaking
of existing things to make them work better is fine, as long as it
doesn't require major architectural changes. I guess to avoid any future
misunderstandings, we should take an informal vote on each feature
change between now and the freeze on 2006-03-31.

By the freeze date we don't want features that are just stubbed in,
working poorly, causing crashes, or will take more than a few days to
completely cleanup and make bug free.

-- 
-gary

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Gary Sherman
http://mrcc.com
  "We work virtually everywhere"
http://qgis.org
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

From gavin at macaulay.co.nz  Mon Mar 20 03:25:28 2006
From: gavin at macaulay.co.nz (Gavin Macaulay)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Improving rendering speed
In-Reply-To: <441DCD88.1060905@macaulay.co.nz>
References: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
	<e8e7199c0603191300t9ee1387q89ea85ac59448458@mail.gmail.com>
	<441DCD88.1060905@macaulay.co.nz>
Message-ID: <2657.60.234.100.22.1142843128.squirrel@secure.niwa.co.nz>

Hi,

I've had a look at using QPainter's clip region instead of QgsClipper. It
seems to have a bug in it reminiscent of the original problem we had with
not clipping- using a clip region allows one to zoom in further than
without, but it still gets confused eventually. I suspect that the problem
is when the coordinates are approaching the limit of the floats in which
they are stored (when I did the QgsClipper code I think I took some care
to cope with this gracefully).

For the moment we'll have to leave QgsClipper in. Note that the QgsClipper
clipping overhead only happens when zoomed in enough to cause the feature
screen coordinate points to go beyond +/-32000, although it does check
every feature to see if it goes beyond +/-32000 (but that's a fairly quick
operation).

Gavin

> Hi,
>
> I think that the problem with QImage will be a very similar problem as
> with X11, but is most likely to now extend to other platforms :(
>
> QPainter has the ability to set a clip region, and this may be a way to
> get Qt to do the clipping, although I seem to remember trying this in
> Qt3. However in the end someone has to do the clipping, and whether it's
> Qt or Qgis should really only depend on which code can do it fastest.
> I'll try a clip region on QPainter later tonight.
>
> Gavin
>
> Martin Dobias wrote:
>> I've updated that wiki page - with regard to Gavin's testing, there's
>> still need of clipping features. Currently not due bug in X11 but
>> because of bug in Qt - in rasterizer for QImage. This will probably
>> affect also other platforms, not only X11. Please could someone test
>> it on the other platforms?
>>
>> Martin
>>
>>
>> On 3/18/06, Martin Dobias <wonder.sk@gmail.com> wrote:
>>> Hi,
>>>
>>> I've started to do some research on how to make rendering faster. My
>>> benchmarks and thoughts on optimizing are on wiki:
>>> http://wiki.qgis.org/qgiswiki/Rendering_Performance
>>>
>>> I'd like hear some feedback from you!
>>>
>>> Bye,
>>> Martin
>>>
>> _______________________________________________
>> Qgis-developer mailing list
>> Qgis-developer@lists.qgis.org
>> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>



From mateusz at loskot.net  Mon Mar 20 04:52:04 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Better getNextFeature in vector providers
In-Reply-To: <e8e7199c0603191623v49af7f36i4cfca35bf88f6974@mail.gmail.com>
References: <e8e7199c0603170723o38eb55ffwc16ad0414eabf8f@mail.gmail.com>	<1142686707.3601.7.camel@localhost.localdomain>
	<e8e7199c0603191623v49af7f36i4cfca35bf88f6974@mail.gmail.com>
Message-ID: <441E7B44.2060104@loskot.net>

Martin Dobias wrote:
> On 3/18/06, Brendan Morley <morb@beagle.com.au> wrote:
> 
>> Finally Mateusz, QVariant can have user variants - therefore I'm 
>> not sure if the refactoring of getNextFeature is a good enough 
>> reason to drag in the "boost" dependency.
> 
> 
> I guess that Mateusz meant that only one header from boost would be 
> needed, not the whole library.

Yes, but I meant the only one is needed to be included - any.hpp.
But any.hpp includes 4-5 others from Boost.
So, there is a need to keep all Boost's header available, but no binary
lib has to be linked to use boost::any type.

> However after some thinking and looking in QVariant sources, I don't
> think that we really need something like boost::any and that QVariant
> will suffice - I didn't find any inefficiencies in the
> implementation. The second reason is that we should prefer Qt classes
> to make the code as consistent as possible.


OK, in this case it's more a matter of taste.
Simply, I'd choose Boost as I'm STL/C++ purist.

But I don't agree that Boost would make code inconsistent.
If you think so, why don't you replace all STL's containers
with QVector and QList?

STL is a part of C++ library, Boost is a kind of incubator for future
STL features. Boost is high quality professional library and I can't
understand why people are affraid of it so much.
Because of "dependency"?
IMHO There is no sense to abandon highly usable library because it could
introduce new dependency :-)

Just for sharing my opinion.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net


From wonder.sk at gmail.com  Mon Mar 20 05:24:50 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Better getNextFeature in vector providers
In-Reply-To: <441E7B44.2060104@loskot.net>
References: <e8e7199c0603170723o38eb55ffwc16ad0414eabf8f@mail.gmail.com>
	<1142686707.3601.7.camel@localhost.localdomain>
	<e8e7199c0603191623v49af7f36i4cfca35bf88f6974@mail.gmail.com>
	<441E7B44.2060104@loskot.net>
Message-ID: <e8e7199c0603200224l52122d8fu921bd01a746b3fa1@mail.gmail.com>

On 3/20/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> > However after some thinking and looking in QVariant sources, I don't
> > think that we really need something like boost::any and that QVariant
> > will suffice - I didn't find any inefficiencies in the
> > implementation. The second reason is that we should prefer Qt classes
> > to make the code as consistent as possible.
>
>
> OK, in this case it's more a matter of taste.
> Simply, I'd choose Boost as I'm STL/C++ purist.
>
> But I don't agree that Boost would make code inconsistent.
> If you think so, why don't you replace all STL's containers
> with QVector and QList?

OK, I agree that it wasn't a good argument :-)
I just meant that we don't need to use it since we have the same
functionality already in Qt.


> STL is a part of C++ library, Boost is a kind of incubator for future
> STL features. Boost is high quality professional library and I can't
> understand why people are affraid of it so much.
> Because of "dependency"?
> IMHO There is no sense to abandon highly usable library because it could
> introduce new dependency :-)

Surely it's a very handy library and it would be great to have those
features directly in C++. Being a standalone library is probably the
factor that people don't use it much as they don't want it as an
additional dependency... It's really all about matter of taste :-)

Martin

>
> Just for sharing my opinion.
>
> Cheers
> --
> Mateusz ?oskot
> http://mateusz.loskot.net
>
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
From mateusz at loskot.net  Mon Mar 20 05:41:47 2006
From: mateusz at loskot.net (=?ISO-8859-2?Q?Mateusz_=A3oskot?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Better getNextFeature in vector providers
In-Reply-To: <e8e7199c0603200224l52122d8fu921bd01a746b3fa1@mail.gmail.com>
References: <e8e7199c0603170723o38eb55ffwc16ad0414eabf8f@mail.gmail.com>	
	<1142686707.3601.7.camel@localhost.localdomain>	
	<e8e7199c0603191623v49af7f36i4cfca35bf88f6974@mail.gmail.com>	
	<441E7B44.2060104@loskot.net>
	<e8e7199c0603200224l52122d8fu921bd01a746b3fa1@mail.gmail.com>
Message-ID: <441E86EB.3060207@loskot.net>

Martin Dobias wrote:
> On 3/20/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> 
>>>However after some thinking and looking in QVariant sources, I don't
>>>think that we really need something like boost::any and that QVariant
>>>will suffice - I didn't find any inefficiencies in the
>>>implementation. The second reason is that we should prefer Qt classes
>>>to make the code as consistent as possible.
>>
>>
>>OK, in this case it's more a matter of taste.
>>Simply, I'd choose Boost as I'm STL/C++ purist.
>>
>>But I don't agree that Boost would make code inconsistent.
>>If you think so, why don't you replace all STL's containers
>>with QVector and QList?
> 
> 
> OK, I agree that it wasn't a good argument :-)
> I just meant that we don't need to use it since we have the same
> functionality already in Qt.


Yup, you're right.


>>STL is a part of C++ library, Boost is a kind of incubator for future
>>STL features. Boost is high quality professional library and I can't
>>understand why people are affraid of it so much.
>>Because of "dependency"?
>>IMHO There is no sense to abandon highly usable library because it could
>>introduce new dependency :-)
> 
> 
> Surely it's a very handy library and it would be great to have those
> features directly in C++. Being a standalone library is probably the
> factor that people don't use it much as they don't want it as an
> additional dependency... It's really all about matter of taste :-)

IMHO Boost becomes widely used as people are getting more familiar with 
metaprogramming. In most cases people write in "C++ with classes" 
instead of "modern C++" and metaprogramming scares them much.
That's what I see as the main reason.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From morb at beagle.com.au  Mon Mar 20 06:39:33 2006
From: morb at beagle.com.au (Brendan Morley)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: [QGIS Commit] [g_j_m] r5068 -
	trunk/qgis/src/gui
In-Reply-To: <20060320024231.A4DFE2EF83@svn.qgis.org>
References: <20060320024231.A4DFE2EF83@svn.qgis.org>
Message-ID: <1142854773.2886.8.camel@localhost.localdomain>

Gavin,

An idea I had for getting around the nested paint event is this:

Somehow we "triple-buffer" the canvas, where Qt provides the first 2
buffers and canvas operations write to the third.

Then a paint event is "simply" a matter of copying the third buffer to
the first pair. - a quick event.  Before and after, the canvas can
continue to be composed.

Thoughts?


Brendan

On Mon, 2006-03-20 at 02:42 +0000, noreply@qgis.org wrote:
> Author: g_j_m
> Date: 2006-03-20 02:42:21 +0000 (Mon, 20 Mar 2006)
> New Revision: 5068
> 
> Modified:
>    trunk/qgis/src/gui/qgsmaprender.cpp
> Log:
> Add a little debug output to make clear the source of the QPaintEngine
> error
> 
> 
> Modified: trunk/qgis/src/gui/qgsmaprender.cpp
> ===================================================================
> --- trunk/qgis/src/gui/qgsmaprender.cpp	2006-03-19 17:58:13 UTC (rev 5067)
> +++ trunk/qgis/src/gui/qgsmaprender.cpp	2006-03-20 02:42:21 UTC (rev 5068)
> @@ -205,6 +205,15 @@
>      std::cout << "QgsMapRender::render: at layer item '" << (*li).toLocal8Bit().data() << "'." << std::endl;
>  #endif
>  
> +    // This call is supposed to cause the progress bar to
> +    // advance. However, it seems that updating the progress bar is
> +    // incompatible with having a QPainter active (the one that is
> +    // passed into this function), as Qt produces a number of errors
> +    // when try to do so. I'm (Gavin) not sure how to fix this, but
> +    // added these comments and debug statement to help others...
> +    std::cerr << "If there is a QPaintEngine here, it is caused by an emit "
> +      "call just after line " << __LINE__ << " in file " << __FILE__ << ".\n";
> +
>      emit setProgress(myRenderCounter++,layers.size());
>      QgsMapLayer *ml = QgsMapLayerRegistry::instance()->mapLayer(*li);
>  
-- 
Brendan Morley <morb@ozemail.com.au>


From mateusz at loskot.net  Mon Mar 20 07:26:19 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Old list archives
Message-ID: <441E9F6B.6020200@loskot.net>

Hi,

After list has moved to the new server, does it mean old list archives
won't be available, even in read-only mode for searching?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From wonder.sk at gmail.com  Mon Mar 20 09:32:52 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Improving rendering speed
In-Reply-To: <441EA37F.3050901@autoform.ch>
References: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
	<e8e7199c0603191300t9ee1387q89ea85ac59448458@mail.gmail.com>
	<441EA37F.3050901@autoform.ch>
Message-ID: <e8e7199c0603200632j53577det12aa2f5def6df8dd@mail.gmail.com>

On 3/20/06, Marco Hugentobler <marco.hugentobler@autoform.ch> wrote:
>  Hi Martin,
>
>  Thanks for these benchmarks.
>  I think it would also be very interesting to compare with geometry/ without
> geometry.

I'd like to do such benchmark - after 0.8 release I'll take care of
improving feature retreiving for vector providers, so it will be easy
to make comparison of speed with and without geometry.

Martin

>
>  Marco
>
>  Martin Dobias wrote:
>
>  I've updated that wiki page - with regard to Gavin's testing, there's
> still need of clipping features. Currently not due bug in X11 but
> because of bug in Qt - in rasterizer for QImage. This will probably
> affect also other platforms, not only X11. Please could someone test
> it on the other platforms?
>
> Martin
>
>
> On 3/18/06, Martin Dobias <wonder.sk@gmail.com> wrote:
>
>
>
>  Hi,
>
> I've started to do some research on how to make rendering faster. My
> benchmarks and thoughts on optimizing are on wiki:
> http://wiki.qgis.org/qgiswiki/Rendering_Performance
>
> I'd like hear some feedback from you!
>
> Bye,
> Martin
>
>
>
>  _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
>
>
>

From mateusz at loskot.net  Sat Mar 18 07:11:37 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Fwd: Re: [Qgis-developer] Better getNextFeature in vector providers]
Message-ID: <441BF8F9.1020008@loskot.net>

Hi,
I'm forwarding my last post from today in this thread to the new list.
Mateusz
Cheers


-------- Original Message --------
Subject: Re: [Qgis-developer] Better getNextFeature in vector providers
Date: Sat, 18 Mar 2006 12:56:38 +0100
From: Mateusz ?oskot <mateusz@loskot.net>
To: qgis-developer@lists.sourceforge.net

Martin Dobias wrote:
> On 3/17/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> 
>>Possible option is:
>>
>>bool getNextFeature(QgsFeature& feature, bool getGeometry = true, bool
>>getAttributes = false);
>>
>>I mean, I'm a bit affraid of loosing control on how is QgsFeature coming
>>to getNextFeature call. What has* attributes it has set false/true, etc.
>>It's easier to keep control when using explicit function parameters.
> 
> 
> My intent was to get better readibility, as explained in reply to
> Radim. I think that adding and calling something like
> QgsFeature::clear() at start of getNextFeature could prepare that
> feature without having any problems. Or did you mean something other?
> 
> From my point of view I don't mind calling it as you and Radim
> proposed, this was just a new idea how it can be done.


My proposal is also another idea to discuss.
But I have to confess that I've not thought mych about this subject ;-)


>>>>Now, we can build attributes map (field index -> attribute)
>>>>
>>>>typedef std::map<int, FeatureAttribute> AttributesMap;
>>>>AttributesMap attributes_;
>>>
>>>
>>>Yes, however I think that std::vector will suffice. Or not?
>>
>>
>>Hmm, it depends, but I'd keep it as std::map.
>>I assume that:
>>1) I'd like to be able to store in AttributesMap *only* selected
>>attributes, but not all
>>2) AttributesMap is a kind of attributes index
>>3) AttributesMap is mainly queried for attributes by-field-index
>>
>>std::map is a tree structure. Indexes are usually a trees [2].
> 
> 
> (This is new to me. I always thought that maps are hash tables.)


std::map is (usually) a kind of balance tree:
http://www.ddj.com/documents/s=921/ddj9804e/


Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net


-------------------------------------------------------
This SF.Net email is sponsored by xPML, a groundbreaking scripting language
that extends applications into web and mobile media. Attend the live webcast
and join the prime developer group breaking into this new coding territory!
http://sel.as-us.falkag.net/sel?cmd=lnk&kid=110944&bid=241720&dat=121642
_______________________________________________
Qgis-developer mailing list
Qgis-developer@lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/qgis-developer

-- 
Mateusz ?oskot
http://mateusz.loskot.net

From marco.hugentobler at autoform.ch  Mon Mar 20 07:43:43 2006
From: marco.hugentobler at autoform.ch (Marco Hugentobler)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Improving rendering speed
In-Reply-To: <e8e7199c0603191300t9ee1387q89ea85ac59448458@mail.gmail.com>
References: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
	<e8e7199c0603191300t9ee1387q89ea85ac59448458@mail.gmail.com>
Message-ID: <441EA37F.3050901@autoform.ch>

Hi Martin,

Thanks for these benchmarks.
I think it would also be very interesting to compare with geometry/ 
without geometry.

Marco

Martin Dobias wrote:

>I've updated that wiki page - with regard to Gavin's testing, there's
>still need of clipping features. Currently not due bug in X11 but
>because of bug in Qt - in rasterizer for QImage. This will probably
>affect also other platforms, not only X11. Please could someone test
>it on the other platforms?
>
>Martin
>
>
>On 3/18/06, Martin Dobias <wonder.sk@gmail.com> wrote:
>  
>
>>Hi,
>>
>>I've started to do some research on how to make rendering faster. My
>>benchmarks and thoughts on optimizing are on wiki:
>>http://wiki.qgis.org/qgiswiki/Rendering_Performance
>>
>>I'd like hear some feedback from you!
>>
>>Bye,
>>Martin
>>
>>    
>>
>_______________________________________________
>Qgis-developer mailing list
>Qgis-developer@lists.qgis.org
>http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
>  
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/qgis-developer/attachments/20060320/d383feb6/attachment.html
From radim.blazek at gmail.com  Mon Mar 20 11:27:08 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Improving rendering speed
In-Reply-To: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
References: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
Message-ID: <340505ef0603200827r2e08ef41jd856689960f4706d@mail.gmail.com>

On 3/18/06, Martin Dobias <wonder.sk@gmail.com> wrote:
> Hi,
>
> I've started to do some research on how to make rendering faster. My
> benchmarks and thoughts on optimizing are on wiki:
> http://wiki.qgis.org/qgiswiki/Rendering_Performance

Nice! Thanks.

| "First draw of newly loaded GRASS layer takes cca double time to complete
| (is there any caching happening?)"

I am not sure, geometry is not chached, it is always read from file.
It could be building of spatial index which is build on first
call to select(QgsRect *rect, bool useIntersect)
but 1.5s seems to be too fast to build spatial index for 30000 lines.
It sould be also simply system file cache.

PostGIS is running on the same machine? Connected via TCP/IP
or socket file?
The files are all on local disk?

Radim


> I'd like hear some feedback from you!
>
> Bye,
> Martin
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>

From sherman at mrcc.com  Mon Mar 20 11:49:13 2006
From: sherman at mrcc.com (Gary Sherman)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Old list archives
In-Reply-To: <441E9F6B.6020200@loskot.net>
References: <441E9F6B.6020200@loskot.net>
Message-ID: <441EDD09.7020506@mrcc.com>

Mateusz ?oskot wrote:
> Hi,
> 
> After list has moved to the new server, does it mean old list archives
> won't be available, even in read-only mode for searching?
> 
> Cheers

I'm not sure if we can migrate the archives. I'll look into it. We can
leave them enabled, but run the risk of people somehow
subscribing/posting to the old lists.

-- 
-gary

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Gary Sherman
http://mrcc.com
  "We work virtually everywhere"
http://qgis.org
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

From wonder.sk at gmail.com  Mon Mar 20 11:56:14 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Improving rendering speed
In-Reply-To: <340505ef0603200827r2e08ef41jd856689960f4706d@mail.gmail.com>
References: <e8e7199c0603181006y190b258cl638e802a751ff07f@mail.gmail.com>
	<340505ef0603200827r2e08ef41jd856689960f4706d@mail.gmail.com>
Message-ID: <e8e7199c0603200856r36b25442n8b88b465be37efaf@mail.gmail.com>

On 3/20/06, Radim Blazek <radim.blazek@gmail.com> wrote:
> On 3/18/06, Martin Dobias <wonder.sk@gmail.com> wrote:
> > Hi,
> >
> > I've started to do some research on how to make rendering faster. My
> > benchmarks and thoughts on optimizing are on wiki:
> > http://wiki.qgis.org/qgiswiki/Rendering_Performance
>
> Nice! Thanks.
>
> | "First draw of newly loaded GRASS layer takes cca double time to complete
> | (is there any caching happening?)"
>
> I am not sure, geometry is not chached, it is always read from file.
> It could be building of spatial index which is build on first
> call to select(QgsRect *rect, bool useIntersect)
> but 1.5s seems to be too fast to build spatial index for 30000 lines.
> It sould be also simply system file cache.

Hm, I wouldn't say that system file cache does so big difference -
with layers from OGR provider nothing like this happens. Actually it
might be that building spatial index is that fast - I have tried it
again, adding and removing testing layer several times in a row,
always with the same results, that's why I don't think that system
cache is reason of such difference on every load.

> PostGIS is running on the same machine? Connected via TCP/IP
> or socket file?
> The files are all on local disk?

Yes, database is on the same machine and files only from local disk
(classical parallel ATA with Ultra DMA turned on).

My PostrgreSQL listens on both unix socket and TCP/IP socket, but it
seems that QGIS uses only TCP/IP connections (I watched netstat
output). Is there any way to override it to use unix socket?

Martin

>
> Radim
>
>
> > I'd like hear some feedback from you!
> >
> > Bye,
> > Martin
> > _______________________________________________
> > Qgis-developer mailing list
> > Qgis-developer@lists.qgis.org
> > http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
> >
>

From mateusz at loskot.net  Mon Mar 20 12:08:04 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Old list archives
In-Reply-To: <441EDD09.7020506@mrcc.com>
References: <441E9F6B.6020200@loskot.net> <441EDD09.7020506@mrcc.com>
Message-ID: <441EE174.20801@loskot.net>

Gary Sherman wrote:
> Mateusz ?oskot wrote:
> 
>> Hi,
>> 
>> After list has moved to the new server, does it mean old list
>> archives won't be available, even in read-only mode for searching?
>> 
>> Cheers
> 
> 
> I'm not sure if we can migrate the archives. I'll look into it. We
> can leave them enabled, but run the risk of people somehow 
> subscribing/posting to the old lists.

I see. I think it could be useful to have them available to look at past
ideas and discussions. I have had such a need so that's why I noticed
this issue.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From gavin at macaulay.co.nz  Mon Mar 20 15:50:54 2006
From: gavin at macaulay.co.nz (Gavin Macaulay)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: [QGIS Commit] [g_j_m] r5068
	-	trunk/qgis/src/gui
In-Reply-To: <1142854773.2886.8.camel@localhost.localdomain>
References: <20060320024231.A4DFE2EF83@svn.qgis.org>
	<1142854773.2886.8.camel@localhost.localdomain>
Message-ID: <441F15AE.8020603@macaulay.co.nz>

Brendan,

I'm not sure that I understand your suggestion. What are the two Qt 
buffers for? I can see the need for one, but what is the second for?

The problem seems (to me) to be that QPainter won't allow nested 
painting, and this is occurring because of how the Qgis code is 
structured - there is a QPainter that lives for as long as it takes to 
draw all of the map layers, and the progress bar is being updated while 
that QPainter is around, and presumably the progress bar is trying to 
paint to the same QImage or QPixmap as the one used by the Qgis map 
QPainter. Does that seem correct?

A solution could be to separate the painting of the map into small 
blocks and use a new QPainter for each block, interspersing them with 
calls to update the progress bar - essentially removing the nesting.

Gavin

Brendan Morley wrote:
> Gavin,
> 
> An idea I had for getting around the nested paint event is this:
> 
> Somehow we "triple-buffer" the canvas, where Qt provides the first 2
> buffers and canvas operations write to the third.
> 
> Then a paint event is "simply" a matter of copying the third buffer to
> the first pair. - a quick event.  Before and after, the canvas can
> continue to be composed.
> 
> Thoughts?
> 
> 
> Brendan
> 
> On Mon, 2006-03-20 at 02:42 +0000, noreply@qgis.org wrote:
>> Author: g_j_m
>> Date: 2006-03-20 02:42:21 +0000 (Mon, 20 Mar 2006)
>> New Revision: 5068
>>
>> Modified:
>>    trunk/qgis/src/gui/qgsmaprender.cpp
>> Log:
>> Add a little debug output to make clear the source of the QPaintEngine
>> error
>>
>>
>> Modified: trunk/qgis/src/gui/qgsmaprender.cpp
>> ===================================================================
>> --- trunk/qgis/src/gui/qgsmaprender.cpp	2006-03-19 17:58:13 UTC (rev 5067)
>> +++ trunk/qgis/src/gui/qgsmaprender.cpp	2006-03-20 02:42:21 UTC (rev 5068)
>> @@ -205,6 +205,15 @@
>>      std::cout << "QgsMapRender::render: at layer item '" << (*li).toLocal8Bit().data() << "'." << std::endl;
>>  #endif
>>  
>> +    // This call is supposed to cause the progress bar to
>> +    // advance. However, it seems that updating the progress bar is
>> +    // incompatible with having a QPainter active (the one that is
>> +    // passed into this function), as Qt produces a number of errors
>> +    // when try to do so. I'm (Gavin) not sure how to fix this, but
>> +    // added these comments and debug statement to help others...
>> +    std::cerr << "If there is a QPaintEngine here, it is caused by an emit "
>> +      "call just after line " << __LINE__ << " in file " << __FILE__ << ".\n";
>> +
>>      emit setProgress(myRenderCounter++,layers.size());
>>      QgsMapLayer *ml = QgsMapLayerRegistry::instance()->mapLayer(*li);
>>  

From nhugent at hispeed.ch  Mon Mar 20 16:28:15 2006
From: nhugent at hispeed.ch (nhugent@hispeed.ch)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Removing layers in QGIS
Message-ID: <200603202128.k2KLSFg7025436@smtp.hispeed.ch>

Hi Martin,

>Hi Marco,
>
>recently I've found out that removing layer has 2 different
>implementations - one in QgsLegend, another in QgisApp (this one even
>doesn't work correctly). 

In which cases does it not work correctly? Normally, i remove from the right click menu. Now i tried it from the main window menu and it seemed to work.

>I wanted to fix that with using
>QgsLegend::removeLayer(), but I've found inconsistency: in QgisApp,
>layer is erased from map layer registry, while in QgsLegend this is
>not happening.

There is QgsLegend::removeLayer(QString) and QgsLegend::legendLayerRemove(). The first one does not remove from the registry, the second one does. In nearly all cases, the second one is called. The first one is only called if QgsMapLayerRegistry::removeLayer is called with bool emitSignal = true and so the map layer is already removed from the registry (but i don't know if there is a need for the second call any more)

>My question is - what is the policy of using map layer registry (who
>is responsible for adding/removing from it etc.). This would be good
>to decide, also with regard to possibility to have multiple map
>canvases or embedding canvas and legend to other projects.

I agree current situation is (unnecessary) complicated. For the moment, it seems easier to me to remove from the registry only in legend. Because every layer remove goes to the legend, but some removes from the right click menu do not go to qgisapp.

Is it the idea, that the multiple map canvases will have the same legend? If yes, legend seems to be a good place for add/remove.


Marco

From wonder.sk at gmail.com  Mon Mar 20 17:31:14 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Removing layers in QGIS
In-Reply-To: <200603202128.k2KLSFg7025436@smtp.hispeed.ch>
References: <200603202128.k2KLSFg7025436@smtp.hispeed.ch>
Message-ID: <e8e7199c0603201431i6abe211akc6cd78176ef83041@mail.gmail.com>

On 3/20/06, nhugent@hispeed.ch <nhugent@hispeed.ch> wrote:
> Hi Martin,
>
> >Hi Marco,
> >
> >recently I've found out that removing layer has 2 different
> >implementations - one in QgsLegend, another in QgisApp (this one even
> >doesn't work correctly).
>
> In which cases does it not work correctly? Normally, i remove from the right click menu. Now i tried it from the main window menu and it seemed to work.
>
> >I wanted to fix that with using
> >QgsLegend::removeLayer(), but I've found inconsistency: in QgisApp,
> >layer is erased from map layer registry, while in QgsLegend this is
> >not happening.
>
> There is QgsLegend::removeLayer(QString) and QgsLegend::legendLayerRemove(). The first one does not remove from the registry, the second one does. In nearly all cases, the second one is called. The first one is only called if QgsMapLayerRegistry::removeLayer is called with bool emitSignal = true and so the map layer is already removed from the registry (but i don't know if there is a need for the second call any more)

Ah well, I haven't noticed the latter one (legendLayerRemove) which
also removes layer from  registry. The incorrect function I have meant
was QgisApp::removeLayer (it lefts  - I guess that the right approach
is just to call QgsLegend::legendLayerRemove - is it right?

>
> >My question is - what is the policy of using map layer registry (who
> >is responsible for adding/removing from it etc.). This would be good
> >to decide, also with regard to possibility to have multiple map
> >canvases or embedding canvas and legend to other projects.
>
> I agree current situation is (unnecessary) complicated. For the moment, it seems easier to me to remove from the registry only in legend. Because every layer remove goes to the legend, but some removes from the right click menu do not go to qgisapp.
>
> Is it the idea, that the multiple map canvases will have the same legend? If yes, legend seems to be a good place for add/remove.

I thought a bit on this topic and this looks like good solution: every
map canvas has it's own legend - for the matter of not getting legend
implementation too complex. Map layer registry holds also count of
canvases referencing a layer, therefore when it's going to be removed
from one legend, it decreases number of references and deletes it when
counter reaches zero.

Martin

>
>
> Marco
>

From lists at tweak.net.au  Tue Mar 21 18:16:58 2006
From: lists at tweak.net.au (Karl P)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] New Bug Tracker
In-Reply-To: <441C2A32.7070303@mrcc.com>
References: <441C2A32.7070303@mrcc.com>
Message-ID: <4420896A.9090000@tweak.net.au>


I vote for Jira, but it's not on the list.  Free for open source projects.

trac would be a next best choice, it's on it's way to becoming a free jira, but it's still 
   catching up.

Cheers,
Karl P

Gary Sherman wrote:
> We are contemplating moving the bug tracker off of SourceForge. There is
> a poll on the front page of http://qgis.org with a list of possible
> choices. Please vote so we can narrow down the choices.
> 
> 

From marco.hugentobler at autoform.ch  Tue Mar 21 02:49:52 2006
From: marco.hugentobler at autoform.ch (Marco Hugentobler)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Removing layers in QGIS
In-Reply-To: <e8e7199c0603201431i6abe211akc6cd78176ef83041@mail.gmail.com>
References: <200603202128.k2KLSFg7025436@smtp.hispeed.ch>
	<e8e7199c0603201431i6abe211akc6cd78176ef83041@mail.gmail.com>
Message-ID: <441FB020.20803@autoform.ch>


>Ah well, I haven't noticed the latter one (legendLayerRemove) which
>also removes layer from  registry. The incorrect function I have meant
>was QgisApp::removeLayer (it lefts  - I guess that the right approach
>is just to call QgsLegend::legendLayerRemove - is it right?
>
It lefts? That's a bug. I thought that it would call 
QgsLegend::legendLayerRemove.

>I thought a bit on this topic and this looks like good solution: every
>map canvas has it's own legend - for the matter of not getting legend
>implementation too complex. Map layer registry holds also count of
>canvases referencing a layer, therefore when it's going to be removed
>from one legend, it decreases number of references and deletes it when
>counter reaches zero.
>
It depends how we want the multiple canvases to behave. If each canvas 
has its own legend, it is like MDI. If all canvases have the same 
legend, it's like multiple views for the same project. I can think of 
useful situations for both.

Marco


From sherman at mrcc.com  Wed Mar 22 01:54:10 2006
From: sherman at mrcc.com (Gary Sherman)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Old list archives
In-Reply-To: <441EE174.20801@loskot.net>
References: <441E9F6B.6020200@loskot.net> <441EDD09.7020506@mrcc.com>
	<441EE174.20801@loskot.net>
Message-ID: <4420F492.5010509@mrcc.com>

Mateusz ?oskot wrote:
> Gary Sherman wrote:
>> Mateusz ?oskot wrote:
>>
>>> Hi,
>>>
>>> After list has moved to the new server, does it mean old list
>>> archives won't be available, even in read-only mode for searching?
>>>
>>> Cheers
>>
>>
>> I'm not sure if we can migrate the archives. I'll look into it. We
>> can leave them enabled, but run the risk of people somehow
>> subscribing/posting to the old lists.
> 
> I see. I think it could be useful to have them available to look at past
> ideas and discussions. I have had such a need so that's why I noticed
> this issue.
> 
> Cheers
The old archives can be imported into the new list. We'll do this once
we shut down the SF lists.

-- 
-gary

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Gary Sherman
http://mrcc.com
  "We work virtually everywhere"
http://qgis.org
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

From nhugent at hispeed.ch  Wed Mar 22 06:20:10 2006
From: nhugent at hispeed.ch (nhugent@hispeed.ch)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
Message-ID: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>

Dear qgissers,

I'm making some tests with qgis as a cgi application. The problem i have is that the webserver expects the cgi output on standard out and expects the output to be finished when standard out is closed. In qgis, there are many prints to std::cout for debugging purposes. My suggestion is to not use std::cout for debug messages anymore, but rather the QgsDebug macro (which calls qDebug). Like this, it is possible to install a qt message handler, which allows to handle these messages in a very flexible way. E.g. i could make qgis being quiet for cgi. We could display only qCritical and qFatal messages to end users and not debug output. An additional benefit of the QgsDebug macro is that it automatically prints out the file name and line number.

In order to create a 'hello cgi qgis' application, i already started to replace some debug messages with QgsDebug and commented out some std::cout messages where many of them appear (e.g. in QgsRasterLayer and QgsColorTable). I wanted to ask if it will be ok to commit these changes or if there are any objections.

Greetings,
Marco

From tim at linfiniti.com  Wed Mar 22 06:33:01 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
Message-ID: <e3e612a60603220333m3b9fa39fm55b0ca4377ba558b@mail.gmail.com>

+1

On 3/22/06, nhugent@hispeed.ch <nhugent@hispeed.ch> wrote:
> Dear qgissers,
>
> I'm making some tests with qgis as a cgi application. The problem i have is that the webserver expects the cgi output on standard out and expects the output to be finished when standard out is closed. In qgis, there are many prints to std::cout for debugging purposes. My suggestion is to not use std::cout for debug messages anymore, but rather the QgsDebug macro (which calls qDebug). Like this, it is possible to install a qt message handler, which allows to handle these messages in a very flexible way. E.g. i could make qgis being quiet for cgi. We could display only qCritical and qFatal messages to end users and not debug output. An additional benefit of the QgsDebug macro is that it automatically prints out the file name and line number.
>
> In order to create a 'hello cgi qgis' application, i already started to replace some debug messages with QgsDebug and commented out some std::cout messages where many of them appear (e.g. in QgsRasterLayer and QgsColorTable). I wanted to ask if it will be ok to commit these changes or if there are any objections.
>
> Greetings,
> Marco
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>


--
Tim Sutton

Visit http://qgis.org for a great Open Source GIS
Skype: timlinux
MSN: tim_bdworld@msn.com
Yahoo: tim_bdworld@yahoo.com
Jabber: timlinux
Irc: timlinux on #qgis at freenode.net

From morb at beagle.com.au  Wed Mar 22 07:55:55 2006
From: morb at beagle.com.au (Brendan Morley)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
Message-ID: <1143032155.2912.1.camel@localhost.localdomain>

Or could we put it to std::cerr or similar?

Brendan

On Wed, 2006-03-22 at 12:20 +0100, nhugent@hispeed.ch wrote:
> Dear qgissers,
> 
> I'm making some tests with qgis as a cgi application. The problem i have is that the webserver expects the cgi output on standard out and expects the output to be finished when standard out is closed. In qgis, there are many prints to std::cout for debugging purposes. My suggestion is to not use std::cout for debug messages anymore, but rather the QgsDebug macro (which calls qDebug). Like this, it is possible to install a qt message handler, which allows to handle these messages in a very flexible way. E.g. i could make qgis being quiet for cgi. We could display only qCritical and qFatal messages to end users and not debug output. An additional benefit of the QgsDebug macro is that it automatically prints out the file name and line number.
> 
> In order to create a 'hello cgi qgis' application, i already started to replace some debug messages with QgsDebug and commented out some std::cout messages where many of them appear (e.g. in QgsRasterLayer and QgsColorTable). I wanted to ask if it will be ok to commit these changes or if there are any objections.
> 
> Greetings,
> Marco
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer


From nhugent at hispeed.ch  Wed Mar 22 08:20:47 2006
From: nhugent at hispeed.ch (nhugent@hispeed.ch)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
Message-ID: <200603221320.k2MDKlaY009585@smtp.hispeed.ch>

For the cgi program this works perfectly (i may close the standard error channel there). But for qgis in a end user version (let's say 1.0), we would have no possibility to differentiate debug output (e.g. 'canvas extent is ....') from real error messages (e.g. 'error loading shapefile xy').

Marco 

>Or could we put it to std::cerr or similar?
>
>Brendan
>
>On Wed, 2006-03-22 at 12:20 +0100, nhugent@hispeed.ch wrote:
>> Dear qgissers,
>> 
>> I'm making some tests with qgis as a cgi application. The problem i have is that the webserver expects the cgi output on standard out and expects the output to be finished when standard out is closed. In qgis, there are many prints to std::cout for debugging purposes. My suggestion is to not use std::cout for debug messages anymore, but rather the QgsDebug macro (which calls qDebug). Like this, it is possible to install a qt message handler, which allows to handle these messages in a very flexible way. E.g. i could make qgis being quiet for cgi. We could display only qCritical and qFatal messages to end users and not debug output. An additional benefit of the QgsDebug macro is that it automatically prints out the file name and line number.
>> 
>> In order to create a 'hello cgi qgis' application, i already started to replace some debug messages with QgsDebug and commented out some std::cout messages where many of them appear (e.g. in QgsRasterLayer and QgsColorTable). I wanted to ask if it will be ok to commit these changes or if there are any objections.
>> 
>> Greetings,
>> Marco
>> _______________________________________________
>> Qgis-developer mailing list
>> Qgis-developer@lists.qgis.org
>> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
>
>

From mateusz at loskot.net  Wed Mar 22 09:13:08 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
Message-ID: <44215B74.7020108@loskot.net>

nhugent@hispeed.ch wrote:
> My suggestion is to not use std::cout for debug messages anymore, but
>  rather the QgsDebug macro (which calls qDebug).

I agree with Marco.
I'd also suggest to provide a macro that can be used to control debug
messages per file (pair of .h/.cpp files).
The idea is to turn all debug messages off and leave turned on
only debug messages on for one particular file.
This will help much to filter/track only objects/operations we are
interested in when working on single feature/file.
Now, QGIS debug mechanism outputs huge amount of messages and many of
them are useless in many cases, so they should be filtered when not needed.
This approach is used in GEOS and it works well.

There is a macro GEOS_DEBUG that is turned off by default.
But if someone want to debug/test e.g. Envelope class, then he has to
put one line into Envelope.cpp file:

#define GEOS_DEBUG 1

This solution could be improved to turn on/off all debug messages
globally or turn them on/off for particular file using local macro (like
the GEOS_DEBUG).

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From radim.blazek at gmail.com  Wed Mar 22 11:23:03 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <44215B74.7020108@loskot.net>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
	<44215B74.7020108@loskot.net>
Message-ID: <340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>

On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> nhugent@hispeed.ch wrote:
> > My suggestion is to not use std::cout for debug messages anymore, but
> >  rather the QgsDebug macro (which calls qDebug).
>
> I agree with Marco.
> I'd also suggest to provide a macro that can be used to control debug
> messages per file (pair of .h/.cpp files).
> The idea is to turn all debug messages off and leave turned on
> only debug messages on for one particular file.
> This will help much to filter/track only objects/operations we are
> interested in when working on single feature/file.
> Now, QGIS debug mechanism outputs huge amount of messages and many of
> them are useless in many cases, so they should be filtered when not needed.
> This approach is used in GEOS and it works well.
>
> There is a macro GEOS_DEBUG that is turned off by default.
> But if someone want to debug/test e.g. Envelope class, then he has to
> put one line into Envelope.cpp file:
>
> #define GEOS_DEBUG 1
>
> This solution could be improved to turn on/off all debug messages
> globally or turn them on/off for particular file using local macro (like
> the GEOS_DEBUG).

That means that you have to recompile always when you need
a debug message and that is clumsy.
I would prefere to control debug with enviroment variables.
It can include also file specification.
E.g.
export QGIS_DEBUG=5
export QGIS_DEBUG_FILE=Envelope.cpp

Radim


> Cheers
> --
> Mateusz ?oskot
> http://mateusz.loskot.net
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
From mateusz at loskot.net  Wed Mar 22 11:59:32 2006
From: mateusz at loskot.net (=?ISO-8859-2?Q?Mateusz_=A3oskot?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>	
	<44215B74.7020108@loskot.net>
	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>
Message-ID: <44218274.1000507@loskot.net>

Radim Blazek wrote:
> On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
>> nhugent@hispeed.ch wrote:
>> 
>>> My suggestion is to not use std::cout for debug messages anymore,
>>> but rather the QgsDebug macro (which calls qDebug).
>> 
>> I agree with Marco. I'd also suggest to provide a macro that can be
>> used to control debug messages per file (pair of .h/.cpp files). 
>> The idea is to turn all debug messages off and leave turned on only
>> debug messages on for one particular file. This will help much to
>> filter/track only objects/operations we are interested in when
>> working on single feature/file. Now, QGIS debug mechanism outputs
>> huge amount of messages and many of them are useless in many cases,
>> so they should be filtered when not needed. This approach is used
>> in GEOS and it works well.
>> 
>> There is a macro GEOS_DEBUG that is turned off by default. But if
>> someone want to debug/test e.g. Envelope class, then he has to put
>> one line into Envelope.cpp file:
>> 
>> #define GEOS_DEBUG 1
>> 
>> This solution could be improved to turn on/off all debug messages 
>> globally or turn them on/off for particular file using local macro
>> (like the GEOS_DEBUG).
> 
> 
> That means that you have to recompile always when you need a debug
> message and that is clumsy.


Yes, you're right.


> I would prefere to control debug with enviroment variables. It can
> include also file specification. E.g. export QGIS_DEBUG=5 export
> QGIS_DEBUG_FILE=Envelope.cpp


OK, I can imagine how QGIS_DEBUG variable is used.
The value of QGIS_DEBUG controls significance of messages sent to output.

But how the second macro should work?
Do you expect that everytime and everywhere debug output API is used, it 
reads for QGIS_DEBUG_FILE and checks if it contains current file.
If it does, then debug output is turned on for this file.
Right?

Basic example:

GEOS_DEBUG_PRINT("this is my debug message")

This macro is expanded to something like following operations:

Now, when QGIS is executed, macro checks:
- is there any QGIS_DEBUG_FILE deined?
- if there is, check if it contains file with name of current
   file; here __FILE__ can be used
- if current file is there, print debug message, if not, just ignore it.

Is this your idea?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From radim.blazek at gmail.com  Wed Mar 22 12:02:54 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <44218274.1000507@loskot.net>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
	<44215B74.7020108@loskot.net>
	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>
	<44218274.1000507@loskot.net>
Message-ID: <340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>

On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> > I would prefere to control debug with enviroment variables. It can
> > include also file specification. E.g. export QGIS_DEBUG=5 export
> > QGIS_DEBUG_FILE=Envelope.cpp
>
> OK, I can imagine how QGIS_DEBUG variable is used.
> The value of QGIS_DEBUG controls significance of messages sent to output.
>
> But how the second macro should work?
> Do you expect that everytime and everywhere debug output API is used, it
> reads for QGIS_DEBUG_FILE and checks if it contains current file.
> If it does, then debug output is turned on for this file.
> Right?
>
> Basic example:
>
> GEOS_DEBUG_PRINT("this is my debug message")
>
> This macro is expanded to something like following operations:
>
> Now, when QGIS is executed, macro checks:
> - is there any QGIS_DEBUG_FILE deined?
> - if there is, check if it contains file with name of current
>    file; here __FILE__ can be used
> - if current file is there, print debug message, if not, just ignore it.
>
> Is this your idea?

Yes.

Radim

> Cheers
> --
> Mateusz ?oskot
> http://mateusz.loskot.net
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
From mateusz at loskot.net  Wed Mar 22 12:45:20 2006
From: mateusz at loskot.net (=?ISO-8859-2?Q?Mateusz_=A3oskot?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>	
	<44215B74.7020108@loskot.net>	
	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>	
	<44218274.1000507@loskot.net>
	<340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>
Message-ID: <44218D30.3010407@loskot.net>

Radim Blazek wrote:
> On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
>
>>But how the second macro should work?
>>Do you expect that everytime and everywhere debug output API is used, it
>>reads for QGIS_DEBUG_FILE and checks if it contains current file.
>>If it does, then debug output is turned on for this file.
>>Right?
>>
>>Basic example:
>>
>>GEOS_DEBUG_PRINT("this is my debug message")
>>
>>This macro is expanded to something like following operations:
>>
>>Now, when QGIS is executed, macro checks:
>>- is there any QGIS_DEBUG_FILE deined?
>>- if there is, check if it contains file with name of current
>>   file; here __FILE__ can be used
>>- if current file is there, print debug message, if not, just ignore it.
>>
>>Is this your idea?
> 
> 
> Yes.


Great and I like it :-)

What is the current state of debug output?
I mean what is the current strategy?

Does everyone agree with Radim's idea?
Should current technique be changed according to Radim's concept?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From wonder.sk at gmail.com  Wed Mar 22 13:08:05 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <44218D30.3010407@loskot.net>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
	<44215B74.7020108@loskot.net>
	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>
	<44218274.1000507@loskot.net>
	<340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>
	<44218D30.3010407@loskot.net>
Message-ID: <e8e7199c0603221008q348afe1dl98e5466bd021a321@mail.gmail.com>

On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> Radim Blazek wrote:
> > On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> >
> >>But how the second macro should work?
> >>Do you expect that everytime and everywhere debug output API is used, it
> >>reads for QGIS_DEBUG_FILE and checks if it contains current file.
> >>If it does, then debug output is turned on for this file.
> >>Right?
> >>
> >>Basic example:
> >>
> >>GEOS_DEBUG_PRINT("this is my debug message")
> >>
> >>This macro is expanded to something like following operations:
> >>
> >>Now, when QGIS is executed, macro checks:
> >>- is there any QGIS_DEBUG_FILE deined?
> >>- if there is, check if it contains file with name of current
> >>   file; here __FILE__ can be used
> >>- if current file is there, print debug message, if not, just ignore it.
> >>
> >>Is this your idea?
> >
> >
> > Yes.
>
>
> Great and I like it :-)
>
> What is the current state of debug output?
> I mean what is the current strategy?
>
> Does everyone agree with Radim's idea?
> Should current technique be changed according to Radim's concept?

I like this approach very much. Sometimes it's really hard to track
debug messages I need it the flow of the other ones.

I also don't like that construct #ifdef QGISDEBUG ... #endif which can
be eliminated.

Moreover it would be good to have some constants or so, which will
indicate what kind of debug message is it - e.g. notice, warning,
error, fatal. Then, a call like

DEBUG_PRINT(NOTICE, "This is just a notice")

would produce e.g.:
NOTICE: This is just a notice.

So normal users will get only warning and errors... or should be
warning/error messages  handled in other way?

Martin

>
> Cheers
> --
> Mateusz ?oskot
> http://mateusz.loskot.net
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
From mateusz at loskot.net  Wed Mar 22 13:36:26 2006
From: mateusz at loskot.net (=?ISO-8859-2?Q?Mateusz_=A3oskot?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <e8e7199c0603221008q348afe1dl98e5466bd021a321@mail.gmail.com>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>	<44215B74.7020108@loskot.net>	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>	<44218274.1000507@loskot.net>	<340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>	<44218D30.3010407@loskot.net>
	<e8e7199c0603221008q348afe1dl98e5466bd021a321@mail.gmail.com>
Message-ID: <4421992A.6020908@loskot.net>

Martin Dobias wrote:
> On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
>>Radim Blazek wrote:
>>>On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
>>>
>>>
>>>>But how the second macro should work?
>>>>Do you expect that everytime and everywhere debug output API is used, it
>>>>reads for QGIS_DEBUG_FILE and checks if it contains current file.
>>>>If it does, then debug output is turned on for this file.
>>>>Right?
>>>>
>>>>Basic example:
>>>>
>>>>GEOS_DEBUG_PRINT("this is my debug message")
>>>>
>>>>This macro is expanded to something like following operations:
>>>>
>>>>Now, when QGIS is executed, macro checks:
>>>>- is there any QGIS_DEBUG_FILE deined?
>>>>- if there is, check if it contains file with name of current
>>>>  file; here __FILE__ can be used
>>>>- if current file is there, print debug message, if not, just ignore it.
>>>>
>>>>Is this your idea?
>>>
>>>
>>>Yes.
>>
>>
>>Great and I like it :-)
>>
>>What is the current state of debug output?
>>I mean what is the current strategy?
>>
>>Does everyone agree with Radim's idea?
>>Should current technique be changed according to Radim's concept?
> 
> 
> I like this approach very much. Sometimes it's really hard to track
> debug messages I need it the flow of the other ones.

Yup, that's what this new technique should solve.

> I also don't like that construct #ifdef QGISDEBUG ... #endif which can
> be eliminated.

Sure.
It should be as only using simple macro, without all #ifdefs.

> Moreover it would be good to have some constants or so, which will
> indicate what kind of debug message is it - e.g. notice, warning,
> error, fatal. Then, a call like
> 
> DEBUG_PRINT(NOTICE, "This is just a notice")

I'd name all QGIS related macros starting from QGIS_,
e.g. QGIS_DEBUG_PRINT or QGIS_DEBUG_MSG

There were problems with GEOS on Windows, because it used macro named as 
DEBUG, which is defined and used by VC++ compiler.
So, it had to be changed to GEOS_DEBUG.

> would produce e.g.:
> NOTICE: This is just a notice.

Do you mean this additional argument should control
what is placed in front of the message?
Examples:

ERROR: This is an error
or for better readability:

#
# ERROR: This is an error
#

WARNING: This is a warning
NOTICE: This is a note

?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From wonder.sk at gmail.com  Wed Mar 22 14:16:34 2006
From: wonder.sk at gmail.com (Martin Dobias)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <4421992A.6020908@loskot.net>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
	<44215B74.7020108@loskot.net>
	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>
	<44218274.1000507@loskot.net>
	<340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>
	<44218D30.3010407@loskot.net>
	<e8e7199c0603221008q348afe1dl98e5466bd021a321@mail.gmail.com>
	<4421992A.6020908@loskot.net>
Message-ID: <e8e7199c0603221116k11ff3d69r6bb9896801479d7@mail.gmail.com>

On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> Martin Dobias wrote:
> > Moreover it would be good to have some constants or so, which will
> > indicate what kind of debug message is it - e.g. notice, warning,
> > error, fatal. Then, a call like
> >
> > DEBUG_PRINT(NOTICE, "This is just a notice")
>
> I'd name all QGIS related macros starting from QGIS_,
> e.g. QGIS_DEBUG_PRINT or QGIS_DEBUG_MSG
>
> There were problems with GEOS on Windows, because it used macro named as
> DEBUG, which is defined and used by VC++ compiler.
> So, it had to be changed to GEOS_DEBUG.
>
> > would produce e.g.:
> > NOTICE: This is just a notice.
>
> Do you mean this additional argument should control
> what is placed in front of the message?
> Examples:
>
> ERROR: This is an error
> or for better readability:
>
> #
> # ERROR: This is an error
> #
>
> WARNING: This is a warning
> NOTICE: This is a note
>
> ?

I meant it could help users (and developers) to find out what does the
message actually mean when they don't know exactly what does it mean
and whether they should report it. Btw. good idea that errors could be
printed with such emphasis.

Martin

>
> Cheers
> --
> Mateusz ?oskot
> http://mateusz.loskot.net
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
From tim at linfiniti.com  Wed Mar 22 17:17:33 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <e8e7199c0603221116k11ff3d69r6bb9896801479d7@mail.gmail.com>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>	<44215B74.7020108@loskot.net>	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>	<44218274.1000507@loskot.net>	<340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>	<44218D30.3010407@loskot.net>	<e8e7199c0603221008q348afe1dl98e5466bd021a321@mail.gmail.com>	<4421992A.6020908@loskot.net>
	<e8e7199c0603221116k11ff3d69r6bb9896801479d7@mail.gmail.com>
Message-ID: <4421CCFD.2060008@linfiniti.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi

One other idea I could throw into the pot is to have a logger class. We
could then set it up to write to console, to file or even in the future
to some part of the gui. The latter could help when we have non
technical users and windows users who experience problems - we can just
ask us to send output from the logger window or whathaveyou. Log
requests could be static methods or we could use qt signals and slots
and connect the logger to objects being logged when they are
instantiated. Example invocation mechanisms:

emit logMessage("foo",QgsLogger::Critical);
emit logMessage("foo",QgsLogger::Informational);

or

QgsLogger::logMessage("foo",QgsLogger::Critical);
QgsLogger::logMessage("foo",QgsLogger::Informational);

Just another thought anyway...

Regards

Tim

Martin Dobias wrote:
> On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
>> Martin Dobias wrote:
>>> Moreover it would be good to have some constants or so, which will
>>> indicate what kind of debug message is it - e.g. notice, warning,
>>> error, fatal. Then, a call like
>>>
>>> DEBUG_PRINT(NOTICE, "This is just a notice")
>> I'd name all QGIS related macros starting from QGIS_,
>> e.g. QGIS_DEBUG_PRINT or QGIS_DEBUG_MSG
>>
>> There were problems with GEOS on Windows, because it used macro named as
>> DEBUG, which is defined and used by VC++ compiler.
>> So, it had to be changed to GEOS_DEBUG.
>>
>>> would produce e.g.:
>>> NOTICE: This is just a notice.
>> Do you mean this additional argument should control
>> what is placed in front of the message?
>> Examples:
>>
>> ERROR: This is an error
>> or for better readability:
>>
>> #
>> # ERROR: This is an error
>> #
>>
>> WARNING: This is a warning
>> NOTICE: This is a note
>>
>> ?
> 
> I meant it could help users (and developers) to find out what does the
> message actually mean when they don't know exactly what does it mean
> and whether they should report it. Btw. good idea that errors could be
> printed with such emphasis.
> 
> Martin
> 
>> Cheers
>> --
>> Mateusz ?oskot
>> http://mateusz.loskot.net
>> _______________________________________________
>> Qgis-developer mailing list
>> Qgis-developer@lists.qgis.org
>> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>>
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Qgis-developer mailing list
>> Qgis-developer@lists.qgis.org
>> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer


- --
Tim Sutton (tim at linfiniti.com)

Visit http://qgis.org for a great open source GIS application
Skype : timlinux
Jabber : timlinux@jabber.org
MSN : tim_bdworld@msn.com
ICQ : 245485851
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFEIcz9WvXTJUo0BDoRAgMzAKCEGSKrG4K50ILnXdSP1IF9gp5AogCff86i
yV1wm889Ymk1O9GXGVtMTro=
=/sFi
-----END PGP SIGNATURE-----

From gavin at macaulay.co.nz  Wed Mar 22 17:22:47 2006
From: gavin at macaulay.co.nz (Gavin Macaulay)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <4421CCFD.2060008@linfiniti.com>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>	<44215B74.7020108@loskot.net>	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>	<44218274.1000507@loskot.net>	<340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>	<44218D30.3010407@loskot.net>	<e8e7199c0603221008q348afe1dl98e5466bd021a321@mail.gmail.com>	<4421992A.6020908@loskot.net>
	<e8e7199c0603221116k11ff3d69r6bb9896801479d7@mail.gmail.com>
	<4421CCFD.2060008@linfiniti.com>
Message-ID: <26917.203.13.22.6.1143066167.squirrel@secure.niwa.co.nz>

Hi,

I've used log4cxx (http://logging.apache.org/log4cxx/) in the past. It is
quite comprehensive, but is a little awkward to use. It has good
facilities for redirecting log messages to various locations.

Gavin

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi
>
> One other idea I could throw into the pot is to have a logger class. We
> could then set it up to write to console, to file or even in the future
> to some part of the gui. The latter could help when we have non
> technical users and windows users who experience problems - we can just
> ask us to send output from the logger window or whathaveyou. Log
> requests could be static methods or we could use qt signals and slots
> and connect the logger to objects being logged when they are
> instantiated. Example invocation mechanisms:
>
> emit logMessage("foo",QgsLogger::Critical);
> emit logMessage("foo",QgsLogger::Informational);
>
> or
>
> QgsLogger::logMessage("foo",QgsLogger::Critical);
> QgsLogger::logMessage("foo",QgsLogger::Informational);
>
> Just another thought anyway...
>
> Regards
>
> Tim
>
> Martin Dobias wrote:
>> On 3/22/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
>>> Martin Dobias wrote:
>>>> Moreover it would be good to have some constants or so, which will
>>>> indicate what kind of debug message is it - e.g. notice, warning,
>>>> error, fatal. Then, a call like
>>>>
>>>> DEBUG_PRINT(NOTICE, "This is just a notice")
>>> I'd name all QGIS related macros starting from QGIS_,
>>> e.g. QGIS_DEBUG_PRINT or QGIS_DEBUG_MSG
>>>
>>> There were problems with GEOS on Windows, because it used macro named
>>> as
>>> DEBUG, which is defined and used by VC++ compiler.
>>> So, it had to be changed to GEOS_DEBUG.
>>>
>>>> would produce e.g.:
>>>> NOTICE: This is just a notice.
>>> Do you mean this additional argument should control
>>> what is placed in front of the message?
>>> Examples:
>>>
>>> ERROR: This is an error
>>> or for better readability:
>>>
>>> #
>>> # ERROR: This is an error
>>> #
>>>
>>> WARNING: This is a warning
>>> NOTICE: This is a note
>>>
>>> ?
>>
>> I meant it could help users (and developers) to find out what does the
>> message actually mean when they don't know exactly what does it mean
>> and whether they should report it. Btw. good idea that errors could be
>> printed with such emphasis.
>>
>> Martin
>>
>>> Cheers
>>> --
>>> Mateusz ?oskot
>>> http://mateusz.loskot.net
>>> _______________________________________________
>>> Qgis-developer mailing list
>>> Qgis-developer@lists.qgis.org
>>> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>>>
>>>
>>> ------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Qgis-developer mailing list
>>> Qgis-developer@lists.qgis.org
>>> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
>
> - --
> Tim Sutton (tim at linfiniti.com)
>
> Visit http://qgis.org for a great open source GIS application
> Skype : timlinux
> Jabber : timlinux@jabber.org
> MSN : tim_bdworld@msn.com
> ICQ : 245485851
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2.2 (GNU/Linux)
>
> iD8DBQFEIcz9WvXTJUo0BDoRAgMzAKCEGSKrG4K50ILnXdSP1IF9gp5AogCff86i
> yV1wm889Ymk1O9GXGVtMTro=
> =/sFi
> -----END PGP SIGNATURE-----
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>



From radim.blazek at gmail.com  Thu Mar 23 02:56:46 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] prints to std::cout in qgis
In-Reply-To: <4421CCFD.2060008@linfiniti.com>
References: <200603221120.k2MBKAaY003984@smtp.hispeed.ch>
	<44215B74.7020108@loskot.net>
	<340505ef0603220823p33eb74aft3ae4c231427089cf@mail.gmail.com>
	<44218274.1000507@loskot.net>
	<340505ef0603220902s3bca3537v86a31cb33f14918e@mail.gmail.com>
	<44218D30.3010407@loskot.net>
	<e8e7199c0603221008q348afe1dl98e5466bd021a321@mail.gmail.com>
	<4421992A.6020908@loskot.net>
	<e8e7199c0603221116k11ff3d69r6bb9896801479d7@mail.gmail.com>
	<4421CCFD.2060008@linfiniti.com>
Message-ID: <340505ef0603222356r1afac6e2q7a4f87893a6fb765@mail.gmail.com>

On 3/22/06, Tim Sutton <tim@linfiniti.com> wrote:
> One other idea I could throw into the pot is to have a logger class. We
> could then set it up to write to console, to file or even in the future
> to some part of the gui. The latter could help when we have non
> technical users and windows users who experience problems - we can just
> ask us to send output from the logger window or whathaveyou. Log
> requests could be static methods or we could use qt signals and slots
> and connect the logger to objects being logged when they are
> instantiated. Example invocation mechanisms:
>
> emit logMessage("foo",QgsLogger::Critical);
> emit logMessage("foo",QgsLogger::Informational);
>
> or
>
> QgsLogger::logMessage("foo",QgsLogger::Critical);
> QgsLogger::logMessage("foo",QgsLogger::Informational);

I prefer the second over emit. But it is too long, I would make it shorter:

QgsLog::critical("foo");
QgsLog::info("foo");
QgsLog::debug(1,"foo"); // 1 is level controled by env. var.

It is also often useful to print variable name - value pairs and
QString::number() is too long, so I would suggest also

QgsLog::debug(int l, QString var, int val);
QgsLog::debug(int l, QString var, double val);

Radim

> Just another thought anyway...
>
> Regards
>
> Tim

From radim.blazek at gmail.com  Fri Mar 24 05:51:51 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Display raster fails
In-Reply-To: <4423CF52.3050400@autoform.ch>
References: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>
	<4423CF52.3050400@autoform.ch>
Message-ID: <340505ef0603240251s730e140ay8c586887795c0b51@mail.gmail.com>

On 3/24/06, Marco Hugentobler <marco.hugentobler@autoform.ch> wrote:
> Hi Radim,
>
> This fails because of a recent change (i think of morb_au).
> To fix it right now, go to
> QgisApp::activateDeactivateLayerRelatedActions near the bottom and add a
> test for null pointer of the raster provider.

Sorry for CC, I had seen QgsLegend..., I have also found that it is
probably caused by  http://svn.qgis.org/trac/changeset/5080

I dont understand how can this:

else if(layer->type() == QgsMapLayer::RASTER) {
    const QgsRasterLayer* vlayer = dynamic_cast<const QgsRasterLayer*> (layer);

result in null vlayer.

Radim

> Marco
>
>
> Radim Blazek wrote:
>
> >Fresh SVN version crashes if a raster is opened.
> >
> >Last debug:
> >
> >QgsMapCanvas::drawContents
> >QgsMapCanvas::render: canvas is frozen
> >panning: extent to widget: [12,0] [42x36]
> >QgsMapCanvasItem::updatePosition: <AUTO> [11,0]-[268x245]
> >/ssi0/ssi/blazek/bin/myqgis-head: line 6:  8774 Segmentation fault
> > (core dumped)
> >
> >Back trace:
> >
> >#0  QgisApp::activateDeactivateLayerRelatedActions (this=0x5c37c0,
> >layer=Variable "layer" is not available.
> >)
> >    at qgisapp.cpp:4961
> >#1  0x0000002a9569e4b1 in QgsLegend::handleCurrentItemChanged (
> >    this=0x6a9590, current=Variable "current" is not available.
> >) at qgslegend.cpp:95
> >#2  0x0000002a956aeeee in QgsLegend::qt_metacall (this=0x6a9590,
> >    _c=QMetaObject::InvokeMetaMethod, _id=-5, _a=0x7fbfffc4a0)
> >    at qgslegend.moc.cpp:112
> >#3  0x0000002a984f65e2 in QMetaObject::activate ()
> >
> >Radim
> >
> >
> >
>
>

From luca.casagrande at gmail.com  Fri Mar 24 10:06:49 2006
From: luca.casagrande at gmail.com (Luca Casagrande)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Display raster fails
In-Reply-To: <340505ef0603240251s730e140ay8c586887795c0b51@mail.gmail.com>
References: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>
	<4423CF52.3050400@autoform.ch>
	<340505ef0603240251s730e140ay8c586887795c0b51@mail.gmail.com>
Message-ID: <200603241506.49816.luca.casagrande@gmail.com>

Hi guys!
I am currently working with latest SVN , but after the today sync ( i know 
that it's not a good way of work using the unstable edition, but bug-testing 
had to be done) i can't display raster anymore...
How can I use the previus SVN?

Thx
Luca

Alle 10:51, venerd? 24 marzo 2006, Radim Blazek ha scritto:
> On 3/24/06, Marco Hugentobler <marco.hugentobler@autoform.ch> wrote:
> > Hi Radim,
> >
> > This fails because of a recent change (i think of morb_au).
> > To fix it right now, go to
> > QgisApp::activateDeactivateLayerRelatedActions near the bottom and add a
> > test for null pointer of the raster provider.
>
> Sorry for CC, I had seen QgsLegend..., I have also found that it is
> probably caused by  http://svn.qgis.org/trac/changeset/5080
>
> I dont understand how can this:
>
> else if(layer->type() == QgsMapLayer::RASTER) {
>     const QgsRasterLayer* vlayer = dynamic_cast<const QgsRasterLayer*>
> (layer);
>
> result in null vlayer.
>
> Radim
>
> > Marco
> >
> > Radim Blazek wrote:
> > >Fresh SVN version crashes if a raster is opened.
> > >
> > >Last debug:
> > >
> > >QgsMapCanvas::drawContents
> > >QgsMapCanvas::render: canvas is frozen
> > >panning: extent to widget: [12,0] [42x36]
> > >QgsMapCanvasItem::updatePosition: <AUTO> [11,0]-[268x245]
> > >/ssi0/ssi/blazek/bin/myqgis-head: line 6:  8774 Segmentation fault
> > > (core dumped)
> > >
> > >Back trace:
> > >
> > >#0  QgisApp::activateDeactivateLayerRelatedActions (this=0x5c37c0,
> > >layer=Variable "layer" is not available.
> > >)
> > >    at qgisapp.cpp:4961
> > >#1  0x0000002a9569e4b1 in QgsLegend::handleCurrentItemChanged (
> > >    this=0x6a9590, current=Variable "current" is not available.
> > >) at qgslegend.cpp:95
> > >#2  0x0000002a956aeeee in QgsLegend::qt_metacall (this=0x6a9590,
> > >    _c=QMetaObject::InvokeMetaMethod, _id=-5, _a=0x7fbfffc4a0)
> > >    at qgslegend.moc.cpp:112
> > >#3  0x0000002a984f65e2 in QMetaObject::activate ()
> > >
> > >Radim

-- 
"E' molto pi? bello sapere qualcosa di tutto, che tutto di una cosa (Blaise 
Pascal)."

GENTOO-GIS Development Team
jabber: casagrande@jabber.linux.it

 

From mateusz at loskot.net  Fri Mar 24 09:23:12 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Bug tracker poll
Message-ID: <442400D0.7090804@loskot.net>

Hi,

Why but tracker poll has been removed?
Is this finished?
I can't find it's results.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From marco.hugentobler at autoform.ch  Fri Mar 24 05:52:02 2006
From: marco.hugentobler at autoform.ch (Marco Hugentobler)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Display raster fails
In-Reply-To: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>
References: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>
Message-ID: <4423CF52.3050400@autoform.ch>

Hi Radim,

This fails because of a recent change (i think of morb_au).
To fix it right now, go to 
QgisApp::activateDeactivateLayerRelatedActions near the bottom and add a 
test for null pointer of the raster provider.

Marco


Radim Blazek wrote:

>Fresh SVN version crashes if a raster is opened.
>
>Last debug:
>
>QgsMapCanvas::drawContents
>QgsMapCanvas::render: canvas is frozen
>panning: extent to widget: [12,0] [42x36]
>QgsMapCanvasItem::updatePosition: <AUTO> [11,0]-[268x245]
>/ssi0/ssi/blazek/bin/myqgis-head: line 6:  8774 Segmentation fault    
> (core dumped)
>
>Back trace:
>
>#0  QgisApp::activateDeactivateLayerRelatedActions (this=0x5c37c0,
>layer=Variable "layer" is not available.
>)
>    at qgisapp.cpp:4961
>#1  0x0000002a9569e4b1 in QgsLegend::handleCurrentItemChanged (
>    this=0x6a9590, current=Variable "current" is not available.
>) at qgslegend.cpp:95
>#2  0x0000002a956aeeee in QgsLegend::qt_metacall (this=0x6a9590,
>    _c=QMetaObject::InvokeMetaMethod, _id=-5, _a=0x7fbfffc4a0)
>    at qgslegend.moc.cpp:112
>#3  0x0000002a984f65e2 in QMetaObject::activate ()
>
>Radim
>
>  
>


From marco.hugentobler at autoform.ch  Fri Mar 24 06:16:53 2006
From: marco.hugentobler at autoform.ch (Marco Hugentobler)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Display raster fails
In-Reply-To: <340505ef0603240251s730e140ay8c586887795c0b51@mail.gmail.com>
References: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>	
	<4423CF52.3050400@autoform.ch>
	<340505ef0603240251s730e140ay8c586887795c0b51@mail.gmail.com>
Message-ID: <4423D525.8000507@autoform.ch>



Radim Blazek wrote:

>I dont understand how can this:
>
>else if(layer->type() == QgsMapLayer::RASTER) {
>    const QgsRasterLayer* vlayer = dynamic_cast<const QgsRasterLayer*> (layer);
>
>result in null vlayer.
>
>Radim
>
The vlayer is 0? When i had a quick look at it yesterday evening, i 
thought that dprovider might be 0 (i think the normal raster layers 
don't use providers, only WMS).

Marco


From mateusz at loskot.net  Fri Mar 24 12:45:22 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Trac
Message-ID: <44243032.2070007@loskot.net>

Hi,

Today, I asked about Bug Track poll.
I didn't know about that QGIS Admins have installed Trac already.
https://svn.qgis.org/trac/

I learned it from logs:
http://logs.qgis.org/slogs/%23qgis.2006-03-24.log

Does it mean QGIS bug tracker moves to Trac?
I mean, I have not got any announcement or sth like this from the 
qgis-developer@lists.qgis.org. May be my e-mail was broken for a while.

So, what's about Trac?
Should I report bugs there?

BTW, it looks very nice!
Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From sherman at mrcc.com  Fri Mar 24 12:49:41 2006
From: sherman at mrcc.com (Gary Sherman)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Trac
In-Reply-To: <44243032.2070007@loskot.net>
References: <44243032.2070007@loskot.net>
Message-ID: <44243135.1010800@mrcc.com>

Mateusz ?oskot wrote:
> Hi,
> 
> Today, I asked about Bug Track poll.
> I didn't know about that QGIS Admins have installed Trac already.
> https://svn.qgis.org/trac/
> 
> I learned it from logs:
> http://logs.qgis.org/slogs/%23qgis.2006-03-24.log
> 
> Does it mean QGIS bug tracker moves to Trac?
> I mean, I have not got any announcement or sth like this from the
> qgis-developer@lists.qgis.org. May be my e-mail was broken for a while.
> 
> So, what's about Trac?
> Should I report bugs there?
> 
> BTW, it looks very nice!
> Cheers
I just made the transition late last night and haven't sent notices to
the lists yet.


-- 
-gary

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Gary Sherman
http://mrcc.com
  "We work virtually everywhere"
http://qgis.org
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

From mateusz at loskot.net  Fri Mar 24 12:52:30 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Trac
In-Reply-To: <44243135.1010800@mrcc.com>
References: <44243032.2070007@loskot.net> <44243135.1010800@mrcc.com>
Message-ID: <442431DE.50807@loskot.net>

Gary Sherman wrote:
> Mateusz ?oskot wrote:
> 
>>Does it mean QGIS bug tracker moves to Trac?
>>I mean, I have not got any announcement or sth like this from the
>>qgis-developer@lists.qgis.org. May be my e-mail was broken for a while.
>
 >
> I just made the transition late last night and haven't sent notices to
> the lists yet.


Sorry, I didn't want to hurry you.


Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Fri Mar 24 18:25:22 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Old Bug Reports and New Trac
Message-ID: <44247FE2.9050802@loskot.net>

Hi,

Is this recommended to re-submit old and still open bug
reports from SF.net to Trac?
Or may be they will be submitted automatically?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From morb at beagle.com.au  Fri Mar 24 18:39:26 2006
From: morb at beagle.com.au (Brendan Morley)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: [QGIS Commit] r5086 - trunk/qgis/src/gui
In-Reply-To: <20060324063818.9962E2EF84@svn.qgis.org>
References: <20060324063818.9962E2EF84@svn.qgis.org>
Message-ID: <1143243566.2896.8.camel@localhost.localdomain>

Folks,

Sorry I didn't test for non-provider raster layers as well as my pet
raster type (WMS).

The below change will still disable the Identify tool for non-provider
raster layers, which I believe is still a bug.

I will commit in due course.


Brendan


On Fri, 2006-03-24 at 06:38 +0000, gsherman@qgis.org wrote:
> Author: rblazek
> Date: 2006-03-24 06:38:14 +0000 (Fri, 24 Mar 2006)
> New Revision: 5086
> 
> Modified:
>    trunk/qgis/src/gui/qgisapp.cpp
> Log:
> driver test also
> 
> Modified: trunk/qgis/src/gui/qgisapp.cpp
> ===================================================================
> --- trunk/qgis/src/gui/qgisapp.cpp	2006-03-24 04:53:39 UTC (rev 5085)
> +++ trunk/qgis/src/gui/qgisapp.cpp	2006-03-24 06:38:14 UTC (rev 5086)
> @@ -4958,7 +4958,7 @@
>        {
>          const QgsRasterDataProvider* dprovider = vlayer->getDataProvider();
>          // does provider allow the identify map tool?
> -        if (dprovider->capabilities() & QgsRasterDataProvider::Identify)
> +        if ( dprovider && (dprovider->capabilities() & QgsRasterDataProvider::Identify))
>          {
>            mActionIdentify->setEnabled(TRUE);
>          }



From radim.blazek at gmail.com  Fri Mar 24 12:42:57 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] connect to QgsLegend::currentItemChanged
Message-ID: <340505ef0603240942x9b4e76v132d3dc1bb4baf00@mail.gmail.com>

How can I connect to QgsLegend::currentItemChanged from plugin?

Radim

From radim.blazek at gmail.com  Fri Mar 24 05:31:28 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Display raster fails
Message-ID: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>

Fresh SVN version crashes if a raster is opened.

Last debug:

QgsMapCanvas::drawContents
QgsMapCanvas::render: canvas is frozen
panning: extent to widget: [12,0] [42x36]
QgsMapCanvasItem::updatePosition: <AUTO> [11,0]-[268x245]
/ssi0/ssi/blazek/bin/myqgis-head: line 6:  8774 Segmentation fault    
 (core dumped)

Back trace:

#0  QgisApp::activateDeactivateLayerRelatedActions (this=0x5c37c0,
layer=Variable "layer" is not available.
)
    at qgisapp.cpp:4961
#1  0x0000002a9569e4b1 in QgsLegend::handleCurrentItemChanged (
    this=0x6a9590, current=Variable "current" is not available.
) at qgslegend.cpp:95
#2  0x0000002a956aeeee in QgsLegend::qt_metacall (this=0x6a9590,
    _c=QMetaObject::InvokeMetaMethod, _id=-5, _a=0x7fbfffc4a0)
    at qgslegend.moc.cpp:112
#3  0x0000002a984f65e2 in QMetaObject::activate ()

Radim

From radim.blazek at gmail.com  Fri Mar 24 09:19:26 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Display raster fails
In-Reply-To: <200603241506.49816.luca.casagrande@gmail.com>
References: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>
	<4423CF52.3050400@autoform.ch>
	<340505ef0603240251s730e140ay8c586887795c0b51@mail.gmail.com>
	<200603241506.49816.luca.casagrande@gmail.com>
Message-ID: <340505ef0603240619r50dab08cx902994a1edff0c67@mail.gmail.com>

On 3/24/06, Luca Casagrande <luca.casagrande@gmail.com> wrote:
> Hi guys!
> I am currently working with latest SVN , but after the today sync ( i know
> that it's not a good way of work using the unstable edition, but bug-testing
> had to be done) i can't display raster anymore...
> How can I use the previus SVN?

It is already fixed in SVN.
You can get older revision with -r flag, for example
svn update -r 999

Radim

> Thx
> Luca
>
> Alle 10:51, venerd? 24 marzo 2006, Radim Blazek ha scritto:
> > On 3/24/06, Marco Hugentobler <marco.hugentobler@autoform.ch> wrote:
> > > Hi Radim,
> > >
> > > This fails because of a recent change (i think of morb_au).
> > > To fix it right now, go to
> > > QgisApp::activateDeactivateLayerRelatedActions near the bottom and add a
> > > test for null pointer of the raster provider.
> >
> > Sorry for CC, I had seen QgsLegend..., I have also found that it is
> > probably caused by  http://svn.qgis.org/trac/changeset/5080
> >
> > I dont understand how can this:
> >
> > else if(layer->type() == QgsMapLayer::RASTER) {
> >     const QgsRasterLayer* vlayer = dynamic_cast<const QgsRasterLayer*>
> > (layer);
> >
> > result in null vlayer.
> >
> > Radim
> >
> > > Marco
> > >
> > > Radim Blazek wrote:
> > > >Fresh SVN version crashes if a raster is opened.
> > > >
> > > >Last debug:
> > > >
> > > >QgsMapCanvas::drawContents
> > > >QgsMapCanvas::render: canvas is frozen
> > > >panning: extent to widget: [12,0] [42x36]
> > > >QgsMapCanvasItem::updatePosition: <AUTO> [11,0]-[268x245]
> > > >/ssi0/ssi/blazek/bin/myqgis-head: line 6:  8774 Segmentation fault
> > > > (core dumped)
> > > >
> > > >Back trace:
> > > >
> > > >#0  QgisApp::activateDeactivateLayerRelatedActions (this=0x5c37c0,
> > > >layer=Variable "layer" is not available.
> > > >)
> > > >    at qgisapp.cpp:4961
> > > >#1  0x0000002a9569e4b1 in QgsLegend::handleCurrentItemChanged (
> > > >    this=0x6a9590, current=Variable "current" is not available.
> > > >) at qgslegend.cpp:95
> > > >#2  0x0000002a956aeeee in QgsLegend::qt_metacall (this=0x6a9590,
> > > >    _c=QMetaObject::InvokeMetaMethod, _id=-5, _a=0x7fbfffc4a0)
> > > >    at qgslegend.moc.cpp:112
> > > >#3  0x0000002a984f65e2 in QMetaObject::activate ()
> > > >
> > > >Radim
>
> --
> "E' molto pi? bello sapere qualcosa di tutto, che tutto di una cosa (Blaise
> Pascal)."
>
> GENTOO-GIS Development Team
> jabber: casagrande@jabber.linux.it
>
>
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>

From radim.blazek at gmail.com  Fri Mar 24 07:36:54 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: Display raster fails
In-Reply-To: <4423D525.8000507@autoform.ch>
References: <340505ef0603240231i147afddfh9b9e57904d4d7a7f@mail.gmail.com>
	<4423CF52.3050400@autoform.ch>
	<340505ef0603240251s730e140ay8c586887795c0b51@mail.gmail.com>
	<4423D525.8000507@autoform.ch>
Message-ID: <340505ef0603240436t2bd7199n5cac71e0431d9ddd@mail.gmail.com>

On 3/24/06, Marco Hugentobler <marco.hugentobler@autoform.ch> wrote:
>
>
> Radim Blazek wrote:
>
> >I dont understand how can this:
> >
> >else if(layer->type() == QgsMapLayer::RASTER) {
> >    const QgsRasterLayer* vlayer = dynamic_cast<const QgsRasterLayer*> (layer);
> >
> >result in null vlayer.
> >
> >Radim
> >
> The vlayer is 0? When i had a quick look at it yesterday evening, i
> thought that dprovider might be 0 (i think the normal raster layers
> don't use providers, only WMS).

I don't know but I added test for vlayer and it woked.
Now I added also test for driver.

Radim

> Marco
>
>

From mateusz at loskot.net  Sat Mar 25 10:59:25 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] mloskot has moved all his open bugs/patches to the
	Trac
Message-ID: <442568DD.90509@loskot.net>

Hi,
As said in the subject, I finished moving my bug and patch reports from
SF.net to the QGIS Trac. I moved only those that are still open.
On the SF.net tracker, I changed status of those reports as closed.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From sherman at mrcc.com  Sat Mar 25 13:36:45 2006
From: sherman at mrcc.com (Gary Sherman)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] New QGIS project management site and issue tracker
Message-ID: <44258DBD.6010403@mrcc.com>

Greetings,

We have moved the tracking of bugs, tasks, feature requests, and patches
to a new site at https://svn.qgis.org/trac. This site uses Trac
(http://trac.edgewall.com/) and provides not only issue tracking but
also browsing of the Subversion repository, source code viewing, project
time line, and road map.

Please use this site to report bugs and request enhancements. Be sure to
read https://svn.qgis.org/trac/wiki/UsingTracWithQuantumGis to get started.

We are nearing a preview release of 0.8 and at that time will be
depending on your input (via https://svn.qgis.org/trac).

If you want to be informed of issues as they are submitted and
completed, you can subscribe to the QGIS-trac mailing list at
http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-trac.


-- 
-gary

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
Gary Sherman
http://mrcc.com
  "We work virtually everywhere"
http://qgis.org
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

From marco.hugentobler at autoform.ch  Mon Mar 27 01:37:21 2006
From: marco.hugentobler at autoform.ch (Marco Hugentobler)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] connect to QgsLegend::currentItemChanged
In-Reply-To: <340505ef0603240942x9b4e76v132d3dc1bb4baf00@mail.gmail.com>
References: <340505ef0603240942x9b4e76v132d3dc1bb4baf00@mail.gmail.com>
Message-ID: <44278821.3050607@autoform.ch>

Hi Radim,
I can't remember how this was done in earlier versions.
We probably need to have a method in QgsInterface which returns a 
pointer to the legend (and one in QgisApp too). Or maybe even better, 
methods for doing the connection /disconnection such that plugins do not 
have to know the legend class.

Marco

Radim Blazek wrote:

>How can I connect to QgsLegend::currentItemChanged from plugin?
>
>Radim
>_______________________________________________
>Qgis-developer mailing list
>Qgis-developer@lists.qgis.org
>http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>
>  
>


From tim at linfiniti.com  Tue Mar 28 04:52:24 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Job Offer: Do you want to get paid to work in QGIS?
Message-ID: <e3e612a60603280152k40a2e864i205d83f53892d600@mail.gmail.com>

Hi All

I am very pleased to announce that there is a great opportunity to
participate in a European project as GIS developer. Details are
provided below.


------------------------------------
Job offer to work on the project: C++ GIS developer

We are looking for a person interested in working on the project.
She/He will be contracted by the Museo Nacional de Ciencias Naturales
in Madrid for at least one year.

The person will be working mainly with the QGIS community developing a
plugin and helping in the QGIS development. Therefore experience
working with C++ and GDAL will be great. Additionally experience
working in an open source project will be appreciated. Please read the
project details for more info on what we are planning to do.

We are mainly looking for someone with a European nationality, it
makes things easier for us, but we could eventually consider
applications from outside. The idea is for the applicant to work in
Madrid at the Museum, but we can discuss other possibilities if
required.

People interested please send the CV to Javier de la Torre
(jatorre@mncn.csic.es).
For more information visit:  http://www.biogeografia.com/edit/
and                                     
http://www.biogeografia.com/edit/project/index.html

------------------------------------

Regards

--
Tim Sutton

Visit http://qgis.org for a great Open Source GIS
Skype: timlinux
MSN: tim_bdworld@msn.com
Yahoo: tim_bdworld@yahoo.com
Jabber: timlinux
Irc: timlinux on #qgis at freenode.net

From tim at linfiniti.com  Tue Mar 28 08:27:18 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] QGIS at Geoinformatics2006
Message-ID: <e3e612a60603280527m21fc91d8u6bfdfb0a45e65c1c@mail.gmail.com>

Hi all

Some time ago we discussed the possibility of attending Geoinformatics
2006 on September 12-15th 2006 in Lausanne - Switzerland. We started a
wiki page for this purpose:

http://wiki.qgis.org/qgiswiki/Geoinformatics2006

I was recently contacted by the organisers of this conference and it
seems they will be happy for our involvement. They are going to be
holding regular meetings on IRC up until the time of the event.

Thus I am writing this email to appeal for help from the QGIS
community. In particular we need:

 - people who can present case studies of how they have been using QGIS
 - people who can present tutorials in the use of QGIS
 - people who can present technical talks relating to the architecture of QGIS
 - people who can help with organising
 - people who can help with preparing publicity materials etc.

As you can see we need a lot of help :-) You dont need to be a QGIS
guru to make a useful contribution! You also dont need to be a
programmer. In fact you dont even need to be attending the conference
to help! Pretty much if you manage to put the same colour sock on each
foot when you get up in the morning, we can use your help! (OK we all
slip up sometimes so we wont hold the last thing as a strict criterion
:-p ).

We will provide additional feedback after meeting with the
Geoinformatics organisers on IRC with regards to exactly what we can
and cant achieve in the organisation of a Geoinformatics2006 'QGIS
Track'.

If you are interested to help, please register yourself on the wiki
and let us know who you are and what you are interested in helping
with.

Best regards

--
Tim Sutton

Visit http://qgis.org for a great Open Source GIS
Skype: timlinux
MSN: tim_bdworld@msn.com
Yahoo: tim_bdworld@yahoo.com
Jabber: timlinux
Irc: timlinux on #qgis at freenode.net

From olivier.ertz at heig-vd.ch  Tue Mar 28 10:06:27 2006
From: olivier.ertz at heig-vd.ch (ERTZ Olivier)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: QGIS at Geoinformatics2006
In-Reply-To: <e3e612a60603280527m21fc91d8u6bfdfb0a45e65c1c@mail.gmail.com>
References: <e3e612a60603280527m21fc91d8u6bfdfb0a45e65c1c@mail.gmail.com>
Message-ID: <442950F3.3010602@heig-vd.ch>

To complete Tim's call, please notice :

---

FOSS4G2006 is an international conference addressing geospatial data 
technologies developed by or of relevance to the Open Source community, 
will be held September 12-15, 2006 in Lausanne, Switzerland. The 
conference will bring together all the Free and Open Source Software for 
Geoinformatics (FOSS4G) communities. The conference incorporates the 
OSGIS Conference, Mapserver User Meeting, GRASS Users Conference, Java 
oriented FOSS4G and EOGEO Workshops with the intent to be broadly 
inclusive.

Lausanne, Switzerland will host the conference, making it the first time 
many of these groups will meet in Europe. A committee is working to 
design a program with elements that will interest participants from the 
novice to the expert. The conference strives to build on the successes 
and enthusiasm generated by previous, related meetings.

Important dates to note (dates are approximate and subject to change):

- April 15, 2006 Workshop submission deadline

- June 30, 2006 Presentation submission deadline

- April 15, 2006 Final registration opening (pre-registration is open)

- June 30, 2006 Early registration deadline

We strongly encourage making your room reservation early as September is 
still high season for tourism in Lausanne.

For more information, registration and/or submit a contribution, please 
visit the conference website at

   http://www.foss4g2006.org

Take advantage of the opportunity FOSS4G2006 offers to network with 
fellow geospatial data professionals, renewing old acquaintances and 
making new ones. Hope to see you there!

The FOSS4G2006 Committee



From mateusz at loskot.net  Tue Mar 28 12:19:17 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] [Fwd: Re: [postgis-users] Announcing mezoGIS]
Message-ID: <44297015.3050709@loskot.net>

Hi,

As you may know, today mezoGIS was announced by its author.
There is also some small discussion on the postgis-user list.

Here is one I'd like to point on, it's author is complaining on buggy
QGIS and how it handles PostGIS features.

May be it could be helpful to encourage Markus Schaber, the author of
this post, to share his experience and bugs he knows about.

Cheers
Mateusz ?oskot


-------- Original Message --------
Subject: Re: [postgis-users] Announcing mezoGIS
Date: Tue, 28 Mar 2006 17:31:30 +0200
Reply-To: PostGIS Users Discussion <postgis-users@postgis.refractions.net>
Adresat: PostGIS Users Discussion


Hi, Frederic,

Frederic Back wrote:
> The project is still rather immature, but already provides
> some nice features, like the ability to display any kind of
> geometry in a result set (instead of only indexed tables).

This sounds like an absolute life-saver for me, I hate creating bunches
of temporary tables, properly indexed with int4 primary keys, for buggy
QGIS.

Thanks a lot, I'll try it immediately.

Btw, maybe you can send an announcement to pgsql-announce@postgresql.org
too.

Thanks,
Markus
-- 
Markus Schaber | Logical Tracking&Tracing International AG
Dipl. Inf.     | Software Development GIS

Fight against software patents in EU! www.ffii.org www.nosoftwarepatents.org
_______________________________________________
postgis-users mailing list
postgis-users@postgis.refractions.net
http://postgis.refractions.net/mailman/listinfo/postgis-users

-- 
Mateusz ?oskot
http://mateusz.loskot.net

From tim at linfiniti.com  Tue Mar 28 20:27:07 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Ramping up for 0.8 - a QGIS test framework
Message-ID: <e3e612a60603281727s58151880mcf0d16028f024e02@mail.gmail.com>

Greetings all

First a quick personal note: Im about to finish my current contract
and will have a 2 month period before starting my next job. In this
period (among other things) I am hoping to spend a good amount of time
on QGIS getting it towards a release ready state. Gary and I have
finished moving off all aspects of the sf project management onto a
private server. This time consuming process accounts for the decided
lack of svn traffic on out part :-( We hope the new project service
will provide us with a good mix of flexibility, reliability, speed of
access and control.

I would really like to address the perception of QGIS being 'buggy'
and 'unstable' through a more rigourous approach to testing and
managing bug reports. I believe there are three things we can do to
address this:

1) Develop a comprehensive unit testing framework
2) Setup automated nightly test builds for validating that head builds
and passes our test suite, along with html reports etc.
3) Setup a system whereby when someone builds QGIS successfully, the
option is offered of posting some information such as OS, distro,
build time, cpu, memory, SVN revision, unit test report etc can be
automatically posted to our server so that we can have a birds eye
view on the status of which environments are 'habitable' for QGIS at
any given time

(Item 3 above is a 'nice to have' for the future)

I propose that for the unit tests we should use the test framework
within qt4. My suggestion is that we create a test stub for every
class and method in the current src/ tree, replicating the same
heirachy under qgis/test/. In addition under /qgis/test/algorithms/ we
can create tests that cut across many classes. Lastly I propose that
we create qgis/test/gui for creating a suite of gui automated tests.
The test stubs would be populated over time as we write more and more
tests.

Ideally these tests should be run as a part of the build process, so
that running 'make' will fail unless all the tests pass too.

The idea would then be to create a test case for every bug (now seems
an especially opportune time since our bug queue has been shortened in
the move over to trac). This will ensure that the all-to-familiar
problem we have of fixed things being rebroken in subsequent commits.

I am volunteering to create the initial test framework structure (and
Ill welcome any help offered). Radim has some excellent ideas for
publicising 0.8 when its released and it would be really nice if we
could feel confident when it goes 'out the door' that the code base is
robust and well tested.

I know there are many ways to skin this cat, so any suggestions /
ideas / concerns / discussion on the matter will welcome. Ill start a
wiki page to document the ideas above more formally when ./ if I get
general approval for carrying out this work....

Best regards to all


--
Tim Sutton

Visit http://qgis.org for a great Open Source GIS
Skype: timlinux
MSN: tim_bdworld@msn.com
Yahoo: tim_bdworld@yahoo.com
Jabber: timlinux
Irc: timlinux on #qgis at freenode.net

From radim.blazek at gmail.com  Wed Mar 29 02:41:40 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Ramping up for 0.8 - a QGIS test framework
In-Reply-To: <e3e612a60603281727s58151880mcf0d16028f024e02@mail.gmail.com>
References: <e3e612a60603281727s58151880mcf0d16028f024e02@mail.gmail.com>
Message-ID: <340505ef0603282341v174203b3y9052bffdfc414b17@mail.gmail.com>

Hi.

I realy appreciate any work towards stability. Stability is the most
important thing we should work on I think. QGIS has already enough
features but frequently crashing application is realy useless.

I have no idea however how a test suite should work.
The most difficult bugs are those which appeare 'randomly' after
minutes/hours of user interaction with lots of data in various
formats loaded. Can we simulate this?

Regarding GRASS I have finished adding new features and I'll also
concentrate on bugfixing.

Radim


On 3/29/06, Tim Sutton <tim@linfiniti.com> wrote:
> Greetings all
>
> First a quick personal note: Im about to finish my current contract
> and will have a 2 month period before starting my next job. In this
> period (among other things) I am hoping to spend a good amount of time
> on QGIS getting it towards a release ready state. Gary and I have
> finished moving off all aspects of the sf project management onto a
> private server. This time consuming process accounts for the decided
> lack of svn traffic on out part :-( We hope the new project service
> will provide us with a good mix of flexibility, reliability, speed of
> access and control.
>
> I would really like to address the perception of QGIS being 'buggy'
> and 'unstable' through a more rigourous approach to testing and
> managing bug reports. I believe there are three things we can do to
> address this:
>
> 1) Develop a comprehensive unit testing framework
> 2) Setup automated nightly test builds for validating that head builds
> and passes our test suite, along with html reports etc.
> 3) Setup a system whereby when someone builds QGIS successfully, the
> option is offered of posting some information such as OS, distro,
> build time, cpu, memory, SVN revision, unit test report etc can be
> automatically posted to our server so that we can have a birds eye
> view on the status of which environments are 'habitable' for QGIS at
> any given time
>
> (Item 3 above is a 'nice to have' for the future)
>
> I propose that for the unit tests we should use the test framework
> within qt4. My suggestion is that we create a test stub for every
> class and method in the current src/ tree, replicating the same
> heirachy under qgis/test/. In addition under /qgis/test/algorithms/ we
> can create tests that cut across many classes. Lastly I propose that
> we create qgis/test/gui for creating a suite of gui automated tests.
> The test stubs would be populated over time as we write more and more
> tests.
>
> Ideally these tests should be run as a part of the build process, so
> that running 'make' will fail unless all the tests pass too.
>
> The idea would then be to create a test case for every bug (now seems
> an especially opportune time since our bug queue has been shortened in
> the move over to trac). This will ensure that the all-to-familiar
> problem we have of fixed things being rebroken in subsequent commits.
>
> I am volunteering to create the initial test framework structure (and
> Ill welcome any help offered). Radim has some excellent ideas for
> publicising 0.8 when its released and it would be really nice if we
> could feel confident when it goes 'out the door' that the code base is
> robust and well tested.
>
> I know there are many ways to skin this cat, so any suggestions /
> ideas / concerns / discussion on the matter will welcome. Ill start a
> wiki page to document the ideas above more formally when ./ if I get
> general approval for carrying out this work....
>
> Best regards to all
>
>
> --
> Tim Sutton
>
> Visit http://qgis.org for a great Open Source GIS
> Skype: timlinux
> MSN: tim_bdworld@msn.com
> Yahoo: tim_bdworld@yahoo.com
> Jabber: timlinux
> Irc: timlinux on #qgis at freenode.net
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>

From tim at linfiniti.com  Wed Mar 29 03:51:53 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Ramping up for 0.8 - a QGIS test framework
In-Reply-To: <340505ef0603282341v174203b3y9052bffdfc414b17@mail.gmail.com>
References: <e3e612a60603281727s58151880mcf0d16028f024e02@mail.gmail.com>
	<340505ef0603282341v174203b3y9052bffdfc414b17@mail.gmail.com>
Message-ID: <e3e612a60603290051g2ef431b5t9be5f3df1924e83@mail.gmail.com>

Hi

> I have no idea however how a test suite should work.
> The most difficult bugs are those which appeare 'randomly' after
> minutes/hours of user interaction with lots of data in various
> formats loaded. Can we simulate this?

Im not sure - I did have the idea of also creating a 'test-data' dir
which contains small datasets that are know to trigger specific
issues. The thought was to then try to programmatically load each
layer and perhaps for example test that the canvas image rendered for
these layers is not a uniform colour (indicating nothing was
rendered). Combinations of layers could probably be tested in this way
too. What is less obvious to me is how we could test for mis-rendering
(visual artifacts) and so on. Most likely we can also produce a visual
report with side by side pairs of images. The image on the left is the
'expected' rendered output and on the right is what the unit tester
has rendered. This way you can quickly visually scan the report and
see any anomalies. One of our openModeller contributers used a similar
technique when composing the unit test for om.


My thought is that even if unit tests can cover only 80% of problem
scenarios, it will still be a major advancement in quality control for
QGIS. I dont have all the answers yet, but I think if we make a start
and get into a 'testing culture' we can make improvements along the
way....

8<-------- snip---------------

Regards

--
Tim Sutton

Visit http://qgis.org for a great Open Source GIS
Skype: timlinux
MSN: tim_bdworld@msn.com
Yahoo: tim_bdworld@yahoo.com
Jabber: timlinux
Irc: timlinux on #qgis at freenode.net

From tim at linfiniti.com  Wed Mar 29 09:46:53 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Qt Roadshow
Message-ID: <e3e612a60603290646s2c82ee08o9f0a953dd171eb11@mail.gmail.com>

If anyone is interested.....

http://www.trolltech.com/events/qtroadshow/register.html

Regards

--
Tim Sutton

Visit http://qgis.org for a great Open Source GIS
Skype: timlinux
MSN: tim_bdworld@msn.com
Yahoo: tim_bdworld@yahoo.com
Jabber: timlinux
Irc: timlinux on #qgis at freenode.net

From radim.blazek at gmail.com  Wed Mar 29 11:32:35 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] connect to QgsLegend::currentItemChanged
In-Reply-To: <44278821.3050607@autoform.ch>
References: <340505ef0603240942x9b4e76v132d3dc1bb4baf00@mail.gmail.com>
	<44278821.3050607@autoform.ch>
Message-ID: <340505ef0603290832g626674a5tade16d4f684ac3a4@mail.gmail.com>

On 3/27/06, Marco Hugentobler <marco.hugentobler@autoform.ch> wrote:
> Hi Radim,
> I can't remember how this was done in earlier versions.
> We probably need to have a method in QgsInterface which returns a
> pointer to the legend (and one in QgisApp too). Or maybe even better,
> methods for doing the connection /disconnection such that plugins do not
> have to know the legend class.

I added
 signal QgsLegend::currentLayerChanged(QgsMapLayer *)
 QgsLegend * QgisApp::legend()
 signal QgisIface::currentLayerChanged ( QgsMapLayer * )
but  emit QgisIface::currentLayerChanged does not want to compile.
I don't know why.

Radim


> Marco
>
> Radim Blazek wrote:
>
> >How can I connect to QgsLegend::currentItemChanged from plugin?
> >
> >Radim
> >_______________________________________________
> >Qgis-developer mailing list
> >Qgis-developer@lists.qgis.org
> >http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
> >
> >
> >
>
>

From telwertowski at comcast.net  Wed Mar 29 17:12:32 2006
From: telwertowski at comcast.net (Tom Elwertowski)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] connect to QgsLegend::currentItemChanged
In-Reply-To: <340505ef0603290832g626674a5tade16d4f684ac3a4@mail.gmail.com>
References: <340505ef0603240942x9b4e76v132d3dc1bb4baf00@mail.gmail.com>	<44278821.3050607@autoform.ch>
	<340505ef0603290832g626674a5tade16d4f684ac3a4@mail.gmail.com>
Message-ID: <442B0650.6090600@comcast.net>

Radim Blazek wrote:
> I added
>  signal QgsLegend::currentLayerChanged(QgsMapLayer *)
>  QgsLegend * QgisApp::legend()
>  signal QgisIface::currentLayerChanged ( QgsMapLayer * )
> but  emit QgisIface::currentLayerChanged does not want to compile.
> I don't know why.

Hi Radim,

QgisIface needs the Q_OBJECT macro when signals are defined. You also 
have to add qgisiface.moc.cpp to the list of moc files to be generated 
in Makefile.am. The emit should then compile.

Tom

From telwertowski at comcast.net  Thu Mar 30 01:37:37 2006
From: telwertowski at comcast.net (Tom Elwertowski)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Using the Qt*_debug Libraries to Find Bad Qt
	Connections
Message-ID: <442B7CB1.20706@comcast.net>

Hello all,

I have recently started using the Qt*_debug libraries. One of the things 
these libraries do is report bad connections at runtime. We have several 
connections where either the signal or slot isn't defined and the 
regular libraries don't report this. connect() does return a bool but we 
don't check it.

In order not to confuse readers of our code, we should use the debug 
libraries to monitor connections and either remove one-sided connections 
or else add empty functions on the other side with NYI comments.

On a Mac, the debug libraries can be activated by defining:
export DYLD_IMAGE_SUFFIX=_debug

This has no effect on Ubuntu so I modified line 383 of my working copy 
of acinclude.m4 to be:
QT_LIB="-lQtCore_debug -lQt3Support_debug -lQtGui_debug 
-lQtNetwork_debug -lQtSvg_debug"

If there isn't an automatic way to do this on Linux, perhaps we should 
add a --enable-qtdebug option to configure.


Qt/Mac 4.1.1 warning and workaround:

Don't use the suffix _debug. Setting this suffix will load all debug 
libraries, not just the Qt debug libraries. There are problems in the Qt 
4.1.1 libraries which trigger fatal assertions in the Mac OS debug 
libraries.

Instead, do for each Qt library:
ln -s QtCore_debug $QTDIR/QtCore.framework/Versions/4.0/QtCore_debugqt

Then do:
export DYLD_IMAGE_SUFFIX=_debugqt

This workaround will load the Qt debug libraries without loading the Mac 
OS debug libraries.

Tom

From radim.blazek at gmail.com  Thu Mar 30 04:52:04 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Re: raster refresh
In-Reply-To: <340505ef0603290811m258e464dl2b5c6685da65dda5@mail.gmail.com>
References: <340505ef0603290811m258e464dl2b5c6685da65dda5@mail.gmail.com>
Message-ID: <340505ef0603300152i742aa5b8s3ee46ef3bcb781e@mail.gmail.com>

On 3/29/06, Radim Blazek <radim.blazek@gmail.com> wrote:
> Raster layers are not refreshed (reloaded if rewritten) if 'Refresh'
> action is clicked or 'Pan' is used. The layer is reloaded however if
> Zoom in/out is used. Vectors work OK.

I found it, somebody commented call to QgsRasterLayer::update()
from QgsRasterLayer::draw(), probably with introdution of raster providers?
Please make it working again it is important for any analytical work
with rasters.

Thanks
Radim

From radim.blazek at gmail.com  Thu Mar 30 02:34:31 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] connect to QgsLegend::currentItemChanged
In-Reply-To: <442B0650.6090600@comcast.net>
References: <340505ef0603240942x9b4e76v132d3dc1bb4baf00@mail.gmail.com>
	<44278821.3050607@autoform.ch>
	<340505ef0603290832g626674a5tade16d4f684ac3a4@mail.gmail.com>
	<442B0650.6090600@comcast.net>
Message-ID: <340505ef0603292334v3cdbd56cy27de56343549eb52@mail.gmail.com>

On 3/30/06, Tom Elwertowski <telwertowski@comcast.net> wrote:
> Radim Blazek wrote:
> > I added
> >  signal QgsLegend::currentLayerChanged(QgsMapLayer *)
> >  QgsLegend * QgisApp::legend()
> >  signal QgisIface::currentLayerChanged ( QgsMapLayer * )
> > but  emit QgisIface::currentLayerChanged does not want to compile.
> > I don't know why.
>
> Hi Radim,
>
> QgisIface needs the Q_OBJECT macro when signals are defined. You also
> have to add qgisiface.moc.cpp to the list of moc files to be generated
> in Makefile.am. The emit should then compile.

Thanks, I forgot about the Makefile.am.

Radim

> Tom
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>

From radim.blazek at gmail.com  Wed Mar 29 11:11:48 2006
From: radim.blazek at gmail.com (Radim Blazek)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] raster refresh
Message-ID: <340505ef0603290811m258e464dl2b5c6685da65dda5@mail.gmail.com>

Raster layers are not refreshed (reloaded if rewritten) if 'Refresh'
action is clicked or 'Pan' is used. The layer is reloaded however if
Zoom in/out is used. Vectors work OK.

Radim

From mateusz at loskot.net  Fri Mar 31 10:52:36 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Fwd: [GRASS5] New GRASS Quality Control System
	online]
Message-ID: <442D5044.9090707@loskot.net>

Hi,

Regarding Tim's proposal about how to make development organization
better and QGIS less buggy, here is the post about New GRASS QCS.
It may be interesting to bring new ideas for QGIS.
Cheers
Mateusz


---------- Forwarded message ----------
From: Markus Neteler <neteler itc.it>
Date: Mar 31, 2006 4:31 PM
Subject: [GRASS5] New GRASS Quality Control System online
To: grass developers list <grass5 grass.itc.it>

Dear GRASS developers and interested users,

as you know, GRASS is a huge system with thousands of files and
hundreds of thousands of lines of code. You are contributing to the
development - but do you sometimes wonder how quality is ensured in
such a big project? Sure, there is the commit mailing list which shows
changes in real time. But probably more could be done.

Today we want to propose a new system to you:
At Ecole Polytechnique de Montreal a new software quality control
system has been developed which checks the CVS changes as distributed
by the GRASS commit mailing list for potential problems. We would like
to invite you to try this new GRASS source code quality monitoring
service. We, that are Giulio Antoniol, Ettore Merlo, Salah Bouktif and
Markus Neteler. Based on Free Software tools and the software
engineering knowledge of the people of Ecole Polytechnique de
Montreal, this quality assessment system was realized as combined
email notifier and Web dashboard.

So, what do you and the GRASS project gain from that? Three principal
services are provided to you and the community:

- The first service analyzes and controls the complexity increase and
  potential quality declining;

- The second supports distributed developers to perform safe evolution
  by sending them a feedback report after each contribution in order to
  avoid abnormal actions;

- The third allows developers to learn about the big picture of the
  whole software by providing them with a dashboard of the project
  evolution.

What could go wrong? The *first service* checks if new functions or
modifications are getting too complex which renders them
unmaintainable. The service also checks if a modified function,
probably written by someone else, is already too complex and should
better broken into pieces. Finally it checks if functions are cloned,
i.e. that several code pieces are identical or nearly identical. In
this case such clones should be removed (e.g. by moving the function
to the related GRASS library).

As *second service* this report is sent to the developer shortly after
each CVS modification. Memory is still fresh and the developer is
invited to act upon a newly introduced problem or invited to attack an
old outstanding problem with legacy code in GRASS.

The *third service* is a Web site which provides easy code navigation
to better study clones or complex functions (we call them "baby
monsters" or "monsters" and put them into the "monster garage" there
for inspection). Also detailed graphs will be generated to better
illustrate the problems identified.

It is our goal to make the services a help and understandable even to
the "hobby" programmer. And of course, to help to improve the code
quality. Better code is easier to maintain - so please give the system
a try.

To receive the code monitoring messages of your contributions, please
just send a mail to Markus that you are interested. To take a look at
the dashboard, check here:

http://web.soccerlab.polymtl.ca/grass-evolution/grass-browsers/grass-index-en.html

To log into the GRASS restricted, enter:
User: grass  (pw: "grass6")

Our plan in the long term is to develop personalized services and
different views for different developers. This is a beta test and we
need your help to identify weaknesses and possible enhancements.

For example, as suggested by Ettore, we could easily implement a
service to check files/functions for quality indexes before performing
the actual CVS commit, kind of preventive verification.

We are happy to give more feedback! Let us know or simply try the
new system out.

Best regards

 Markus

in collaboration with and grateful to:
  Giulio Antoniol <antoniol AT ieee.org>
  Salah Bouktif <salah.bouktif AT polymtl.ca>
  Ettore Merlo <ettore.merlo AT polymtl.ca>

_______________________________________________
grass dev mailing list
grass5@grass.itc.it
http://grass.itc.it/mailman/listinfo/grass5

---------------------------------------------------------------------
To unsubscribe, e-mail: discuss-unsubscribe@mail.osgeo.org
For additional commands, e-mail: discuss-help@mail.osgeo.org


-- 
Mateusz ?oskot
http://mateusz.loskot.net

From tim at linfiniti.com  Fri Mar 31 16:21:39 2006
From: tim at linfiniti.com (Tim Sutton)
Date: Wed Feb  6 23:24:48 2008
Subject: [Qgis-developer] Fwd: [GRASS5] New GRASS Quality Control System
	online]
In-Reply-To: <442D5044.9090707@loskot.net>
References: <442D5044.9090707@loskot.net>
Message-ID: <e3e612a60603311321v19bfd260x8dfe5e438446f08d@mail.gmail.com>

Hi

Very interesting - I wonder if they would let us try out QGIS in there too....

Regards

Tim

On 3/31/06, Mateusz ?oskot <mateusz@loskot.net> wrote:
> Hi,
>
> Regarding Tim's proposal about how to make development organization
> better and QGIS less buggy, here is the post about New GRASS QCS.
> It may be interesting to bring new ideas for QGIS.
> Cheers
> Mateusz
>
>
> ---------- Forwarded message ----------
> From: Markus Neteler <neteler itc.it>
> Date: Mar 31, 2006 4:31 PM
> Subject: [GRASS5] New GRASS Quality Control System online
> To: grass developers list <grass5 grass.itc.it>
>
> Dear GRASS developers and interested users,
>
> as you know, GRASS is a huge system with thousands of files and
> hundreds of thousands of lines of code. You are contributing to the
> development - but do you sometimes wonder how quality is ensured in
> such a big project? Sure, there is the commit mailing list which shows
> changes in real time. But probably more could be done.
>
> Today we want to propose a new system to you:
> At Ecole Polytechnique de Montreal a new software quality control
> system has been developed which checks the CVS changes as distributed
> by the GRASS commit mailing list for potential problems. We would like
> to invite you to try this new GRASS source code quality monitoring
> service. We, that are Giulio Antoniol, Ettore Merlo, Salah Bouktif and
> Markus Neteler. Based on Free Software tools and the software
> engineering knowledge of the people of Ecole Polytechnique de
> Montreal, this quality assessment system was realized as combined
> email notifier and Web dashboard.
>
> So, what do you and the GRASS project gain from that? Three principal
> services are provided to you and the community:
>
> - The first service analyzes and controls the complexity increase and
>   potential quality declining;
>
> - The second supports distributed developers to perform safe evolution
>   by sending them a feedback report after each contribution in order to
>   avoid abnormal actions;
>
> - The third allows developers to learn about the big picture of the
>   whole software by providing them with a dashboard of the project
>   evolution.
>
> What could go wrong? The *first service* checks if new functions or
> modifications are getting too complex which renders them
> unmaintainable. The service also checks if a modified function,
> probably written by someone else, is already too complex and should
> better broken into pieces. Finally it checks if functions are cloned,
> i.e. that several code pieces are identical or nearly identical. In
> this case such clones should be removed (e.g. by moving the function
> to the related GRASS library).
>
> As *second service* this report is sent to the developer shortly after
> each CVS modification. Memory is still fresh and the developer is
> invited to act upon a newly introduced problem or invited to attack an
> old outstanding problem with legacy code in GRASS.
>
> The *third service* is a Web site which provides easy code navigation
> to better study clones or complex functions (we call them "baby
> monsters" or "monsters" and put them into the "monster garage" there
> for inspection). Also detailed graphs will be generated to better
> illustrate the problems identified.
>
> It is our goal to make the services a help and understandable even to
> the "hobby" programmer. And of course, to help to improve the code
> quality. Better code is easier to maintain - so please give the system
> a try.
>
> To receive the code monitoring messages of your contributions, please
> just send a mail to Markus that you are interested. To take a look at
> the dashboard, check here:
>
> http://web.soccerlab.polymtl.ca/grass-evolution/grass-browsers/grass-index-en.html
>
> To log into the GRASS restricted, enter:
> User: grass  (pw: "grass6")
>
> Our plan in the long term is to develop personalized services and
> different views for different developers. This is a beta test and we
> need your help to identify weaknesses and possible enhancements.
>
> For example, as suggested by Ettore, we could easily implement a
> service to check files/functions for quality indexes before performing
> the actual CVS commit, kind of preventive verification.
>
> We are happy to give more feedback! Let us know or simply try the
> new system out.
>
> Best regards
>
>  Markus
>
> in collaboration with and grateful to:
>   Giulio Antoniol <antoniol AT ieee.org>
>   Salah Bouktif <salah.bouktif AT polymtl.ca>
>   Ettore Merlo <ettore.merlo AT polymtl.ca>
>
> _______________________________________________
> grass dev mailing list
> grass5@grass.itc.it
> http://grass.itc.it/mailman/listinfo/grass5
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: discuss-unsubscribe@mail.osgeo.org
> For additional commands, e-mail: discuss-help@mail.osgeo.org
>
>
> --
> Mateusz ?oskot
> http://mateusz.loskot.net
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer@lists.qgis.org
> http://lists.qgis.org/cgi-bin/mailman/listinfo/qgis-developer
>


--
Tim Sutton

Visit http://qgis.org for a great Open Source GIS
Skype: timlinux
MSN: tim_bdworld@msn.com
Yahoo: tim_bdworld@yahoo.com
Jabber: timlinux
Irc: timlinux on #qgis at freenode.net
