From erixen_cruz at earthbrain.com  Fri Jan  5 13:18:23 2024
From: erixen_cruz at earthbrain.com (Erixen Cruz)
Date: Fri, 5 Jan 2024 21:18:23 +0000
Subject: [PROJ] Bump CMake to 3.14+
Message-ID: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>

Hello,

I would like feedback about possibly bumping the minimum CMake version for PROJ to 3.14+. This idea comes from https://github.com/OSGeo/PROJ/pull/3987  where I want to use CMake's FindSQLite3 instead of PROJ's https://cmake.org/cmake/help/latest/module/FindSQLite3.html .

3.16 is available in Travis CI with the Focal (Ubuntu 20.04 LTS) distribution https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain . Its possible to install a 3.14+ version on Bionic (18 LTS), which is what PROJ uses now.

3.14 was release nearly five years ago https://www.kitware.com/cmake-3-14-0-available-for-download/ so two year old requirement from RFC 3 holds.

What suggestions or problems do you have with this version bump?

Sincerely,
Erixen
[https://www.kitware.com/main/wp-content/uploads/2019/05/Release_CMake.jpg]<https://www.kitware.com/cmake-3-14-0-available-for-download/>
CMake 3.14.0 available for download<https://www.kitware.com/cmake-3-14-0-available-for-download/>
I am happy to announce that CMake 3.14.0 is now available for download at:https://cmake.org/download/ The first two 3.14.0 release candidates included the FindOcatave module. This has been removed in rc3, and rc4 pending further development. Documentation is available at:https://cmake.org/cmake/help/v3.14 Release notes appear below and are also published athttps://cmake.org/cmake/help/v3.14/release/3.14.html Some of the more significant changes in [?]
www.kitware.com

[https://opengraph.githubassets.com/07f0e75bdf388e24cb98f45339a529183a83c5b471900636d412a6ae9c15d13e/OSGeo/PROJ/pull/3987]<https://github.com/OSGeo/PROJ/pull/3987>
Link to explicit SQLite3 target by ErixenCruz ? Pull Request #3987 ? OSGeo/PROJ<https://github.com/OSGeo/PROJ/pull/3987>
Added clear title that can be used to generate release notes This change originates from Conan conan-io/conan-center-index#21512 (comment). I create an explicit SQLite::SQLite3 target library and ...
github.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240105/f16a09fa/attachment.htm>

From howard at hobu.co  Fri Jan  5 13:31:45 2024
From: howard at hobu.co (Howard Butler)
Date: Fri, 5 Jan 2024 15:31:45 -0600
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <0C2631FD-22EB-4EFB-B16D-0A27D26E3FA2@hobu.co>

GDAL recently ratified RFC 98 to bump its CMake floor to CMake 3.16

https://gdal.org/development/rfc/rfc98_build_requirements_gdal_3_9.html

It would seem reasonable to bump PROJ's floor to that for the next release as well.

Howard

> On Jan 5, 2024, at 3:18?PM, Erixen Cruz via PROJ <proj at lists.osgeo.org> wrote:
> 
> Hello,
> 
> I would like feedback about possibly bumping the minimum CMake version for PROJ to 3.14+. This idea comes from https://github.com/OSGeo/PROJ/pull/3987  where I want to use CMake's FindSQLite3 instead of PROJ's https://cmake.org/cmake/help/latest/module/FindSQLite3.html .
> 
> 3.16 is available in Travis CI with the Focal (Ubuntu 20.04 LTS) distribution https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain . Its possible to install a 3.14+ version on Bionic (18 LTS), which is what PROJ uses now.
> 
> 3.14 was release nearly five years ago https://www.kitware.com/cmake-3-14-0-available-for-download/ so two year old requirement from RFC 3 holds.
> 
> What suggestions or problems do you have with this version bump?
> 
> Sincerely,
> Erixen
>  <https://www.kitware.com/cmake-3-14-0-available-for-download/>	
> CMake 3.14.0 available for download <https://www.kitware.com/cmake-3-14-0-available-for-download/>
> I am happy to announce that CMake 3.14.0 is now available for download at:https://cmake.org/download/ The first two 3.14.0 release candidates included the FindOcatave module. This has been removed in rc3, and rc4 pending further development. Documentation is available at:https://cmake.org/cmake/help/v3.14 Release notes appear below and are also published athttps://cmake.org/cmake/help/v3.14/release/3.14.htmlSome of the more significant changes in [?]
> www.kitware.com <http://www.kitware.com/>
> 
>  <https://github.com/OSGeo/PROJ/pull/3987>	
> Link to explicit SQLite3 target by ErixenCruz ? Pull Request #3987 ? OSGeo/PROJ <https://github.com/OSGeo/PROJ/pull/3987>
> Added clear title that can be used to generate release notes This change originates from Conan conan-io/conan-center-index#21512 (comment). I create an explicit SQLite::SQLite3 target library and ...
> github.com <http://github.com/>
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240105/924ea427/attachment-0001.htm>

From Robert.Denham at des.qld.gov.au  Sun Jan  7 16:20:29 2024
From: Robert.Denham at des.qld.gov.au (Robert Denham)
Date: Mon, 8 Jan 2024 00:20:29 +0000
Subject: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2
Message-ID: <ME3PR01MB6306320E5A76B19D05684A2B8C6B2@ME3PR01MB6306.ausprd01.prod.outlook.com>

This is probably just an improvement, but I was wondering if someone could help explain minor differences we're observing when transforming coordinates from WGS 84 geographic coordinates to projected coordinates in Australia. 

For example, if I do:

echo -27.495159464576993 153.02971160860926|
 	docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON  osgeo/proj:9.2.0 \
 	cs2cs epsg:4326 +to epsg:28356

I get:

pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
502934.82       6958719.00 0.00
Using coordinate operation Inverse of GDA94 to WGS 84 (1) + Map Grid of Australia zone 56

But if I do the same with version 9.1.1:

echo -27.495159464576993 153.02971160860926|
 	docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON  osgeo/proj:9.1.1 \
 	cs2cs epsg:4326 +to epsg:28356

I get a slightly different output:

502934.23       6958717.61 0.00


And a large amount of output (see below)

I just wanted to check whether this was expected behaviour, and if the difference in the coordinate transformation could be interpreted as an improvement?
I checked other projected coordinates systems, including 

* GDA2020 Zone 56 (EPSG:7856)
* Australian Albers GDA94 (EPSG:3755)
* Australian Albers GDA2020 (EPSG:9473)

Each of these give slightly different results under proj 9.1.1 and 9.2.0. The only relevant change I could see in proj was EPSG updated to EPSG 10.082 in proj 9.2. I assume this is the source of the differences?


Thanks
Robert



(output from cs2cs with proj 9.1.1 follows)

pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104a31020
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104a31020] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x56210470c510
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x56210470c510] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b90340
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104b90340] (proj=utm) done
pipeline: Pipeline: 3 steps built. Determining i/o characteristics
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 0 (proj=unitconvert) at 0x562104bc82a0
pipeline: Pipeline at [0x562104b87920]:    step at [0x562104bc82a0] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 1 (proj=utm) at 0x562104b94000
pipeline: Pipeline at [0x562104b87920]:    step at [0x562104b94000] (proj=utm) done
pipeline: Pipeline: 2 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104ac94a0
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104ac94a0] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b94d60
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b94d60] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b952a0
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b952a0] (proj=utm) done
pipeline: Pipeline: 3 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=WGS84
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b976f0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b976f0] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b97cc0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b97cc0] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=push, 2
pipeline:     v_3
push: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
push: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=push) at 0x562104b98290
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98290] (proj=push) done
pipeline: Pipeline: Building arg list for step no. 3
pipeline: Pipeline: init - proj=cart, 2
pipeline:     ellps=WGS84
cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
cart: pj_ellipsoid - final:    ellps=WGS84
pipeline: Pipeline: Step 3 (proj=cart) at 0x562104b98810
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98810] (proj=cart) done
pipeline: Pipeline: Building arg list for step no. 4
pipeline: Pipeline: init - inv, 10
pipeline:     proj=helmert
pipeline:     x=0.06155
pipeline:     y=-0.01087
pipeline:     z=-0.04019
pipeline:     rx=-0.0394924
pipeline:     ry=-0.0327221
pipeline:     rz=-0.0328979
pipeline:     s=-0.009994
pipeline:     convention=coordinate_frame
helmert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
helmert: pj_ellipsoid - final:    ellps=GRS80
helmert: Helmert parameters:
helmert: x=   0.06155  y=  -0.01087  z=  -0.04019
helmert: rx= -0.03949  ry= -0.03272  rz= -0.03290
helmert: s=  -0.00999  exact=0  convention=coordinate_frame
helmert: dx=  0.00000  dy=  0.00000  dz=  0.00000
helmert: drx= 0.00000  dry= 0.00000  drz= 0.00000
helmert: ds=  0.00000  t_epoch= 0.00000
helmert: Transformation parameters for observation t_obs=0 (t_epoch=0):
helmert: x: 0.06155
helmert: y: -0.01087
helmert: z: -0.04019
helmert: s: -9.994e-09
helmert: rx: -1.91465e-07
helmert: ry: -1.58641e-07
helmert: rz: -1.59494e-07
helmert: theta: 0
helmert: Rotation Matrix:
helmert:   |      1  -1.59494e-07   1.58641e-07 |
helmert:   |  1.59494e-07       1  -1.91465e-07 |
helmert:   | -1.58641e-07   1.91465e-07       1 |
pipeline: Pipeline: Step 4 (inv) at 0x562104b98e90
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98e90] (inv) done
pipeline: Pipeline: Building arg list for step no. 5
pipeline: Pipeline: init - inv, 3
pipeline:     proj=cart
pipeline:     ellps=GRS80
cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
cart: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 5 (inv) at 0x562104b99560
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99560] (inv) done
pipeline: Pipeline: Building arg list for step no. 6
pipeline: Pipeline: init - proj=pop, 2
pipeline:     v_3
pop: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pop: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 6 (proj=pop) at 0x562104b99ac0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99ac0] (proj=pop) done
pipeline: Pipeline: Building arg list for step no. 7
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 7 (proj=utm) at 0x562104b9a070
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b9a070] (proj=utm) done
pipeline: Pipeline: 8 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b9b790
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9b790] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b9bd60
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9bd60] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - inv, 3
pipeline:     proj=hgridshift
pipeline:     grids=au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
hgridshift: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
hgridshift: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (inv) at 0x562104b9c380
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c380] (inv) done
pipeline: Pipeline: Building arg list for step no. 3
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 3 (proj=utm) at 0x562104b9c950
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c950] (proj=utm) done
pipeline: Pipeline: 4 steps built. Determining i/o characteristics
Using coordinate operation Inverse of GDA94 to WGS 84 (3) + Map Grid of Australia zone 56
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
502934.23       6958717.61 0.00









R

------------------------------
The information in this email together with any attachments is intended only for the person or entity to which it is addressed and may contain confidential and/or privileged material. There is no waiver of any confidentiality/privilege by your inadvertent receipt of this material. 
Any form of review, disclosure, modification, distribution and/or publication of this email message is prohibited, unless as a necessary part of Departmental business.
If you have received this message in error, you are asked to inform the sender as quickly as possible and delete this message and any copies of this message from your computer and/or your computer system network.
------------------------------

From jonathan at t3rra.com  Sun Jan  7 17:12:57 2024
From: jonathan at t3rra.com (Jonathan Johansen)
Date: Mon, 8 Jan 2024 11:12:57 +1000
Subject: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2
In-Reply-To: <ME3PR01MB6306320E5A76B19D05684A2B8C6B2@ME3PR01MB6306.ausprd01.prod.outlook.com>
References: <ME3PR01MB6306320E5A76B19D05684A2B8C6B2@ME3PR01MB6306.ausprd01.prod.outlook.com>
Message-ID: <CALFvv1mysrNuUqtMnvf1W-XsNjdhX+sD8ur0yty7nOqc-kVGOA@mail.gmail.com>

Oh, I'd be interested in the cause of this too, please, as a user located
in Aus who updated to PROJ 9 not too long ago.

On Mon, Jan 8, 2024 at 10:47?AM Robert Denham via PROJ <proj at lists.osgeo.org>
wrote:

> This is probably just an improvement, but I was wondering if someone could
> help explain minor differences we're observing when transforming
> coordinates from WGS 84 geographic coordinates to projected coordinates in
> Australia.
>
> For example, if I do:
>
> echo -27.495159464576993 153.02971160860926|
>         docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON
> osgeo/proj:9.2.0 \
>         cs2cs epsg:4326 +to epsg:28356
>
> I get:
>
> pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
> pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
> pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call
> fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) -
> succeeded
> pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call
> fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) -
> succeeded
> 502934.82       6958719.00 0.00
> Using coordinate operation Inverse of GDA94 to WGS 84 (1) + Map Grid of
> Australia zone 56
>
> But if I do the same with version 9.1.1:
>
> echo -27.495159464576993 153.02971160860926|
>         docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON
> osgeo/proj:9.1.1 \
>         cs2cs epsg:4326 +to epsg:28356
>
> I get a slightly different output:
>
> 502934.23       6958717.61 0.00
>
>
> And a large amount of output (see below)
>
> I just wanted to check whether this was expected behaviour, and if the
> difference in the coordinate transformation could be interpreted as an
> improvement?
> I checked other projected coordinates systems, including
>
> * GDA2020 Zone 56 (EPSG:7856)
> * Australian Albers GDA94 (EPSG:3755)
> * Australian Albers GDA2020 (EPSG:9473)
>
> Each of these give slightly different results under proj 9.1.1 and 9.2.0.
> The only relevant change I could see in proj was EPSG updated to EPSG
> 10.082 in proj 9.2. I assume this is the source of the differences?
>
>
> Thanks
> Robert
>
>
>
> (output from cs2cs with proj 9.1.1 follows)
>
> pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
> pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
> pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call
> fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) -
> succeeded
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:    ellps=GRS80
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:
> pipeline: Pipeline: Building arg list for step no. 0
> pipeline: Pipeline: init - proj=axisswap, 2
> pipeline:     order=2,1
> axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> axisswap: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104a31020
> pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104a31020]
> (proj=axisswap) done
> pipeline: Pipeline: Building arg list for step no. 1
> pipeline: Pipeline: init - proj=unitconvert, 3
> pipeline:     xy_in=deg
> pipeline:     xy_out=rad
> unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> unitconvert: pj_ellipsoid - final:    ellps=GRS80
> unitconvert: xy_in unit: Degree
> unitconvert: xy_out unit: Radian
> pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x56210470c510
> pipeline: Pipeline at [0x562104bc7f60]:    step at [0x56210470c510]
> (proj=unitconvert) done
> pipeline: Pipeline: Building arg list for step no. 2
> pipeline: Pipeline: init - proj=utm, 4
> pipeline:     zone=56
> pipeline:     south
> pipeline:     ellps=GRS80
> utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> utm: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b90340
> pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104b90340]
> (proj=utm) done
> pipeline: Pipeline: 3 steps built. Determining i/o characteristics
> axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> axisswap: pj_ellipsoid - final:    ellps=GRS80
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:    ellps=GRS80
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:
> pipeline: Pipeline: Building arg list for step no. 0
> pipeline: Pipeline: init - proj=unitconvert, 3
> pipeline:     xy_in=deg
> pipeline:     xy_out=rad
> unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> unitconvert: pj_ellipsoid - final:    ellps=GRS80
> unitconvert: xy_in unit: Degree
> unitconvert: xy_out unit: Radian
> pipeline: Pipeline: Step 0 (proj=unitconvert) at 0x562104bc82a0
> pipeline: Pipeline at [0x562104b87920]:    step at [0x562104bc82a0]
> (proj=unitconvert) done
> pipeline: Pipeline: Building arg list for step no. 1
> pipeline: Pipeline: init - proj=utm, 4
> pipeline:     zone=56
> pipeline:     south
> pipeline:     ellps=GRS80
> utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> utm: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 1 (proj=utm) at 0x562104b94000
> pipeline: Pipeline at [0x562104b87920]:    step at [0x562104b94000]
> (proj=utm) done
> pipeline: Pipeline: 2 steps built. Determining i/o characteristics
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:    ellps=GRS80
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:
> pipeline: Pipeline: Building arg list for step no. 0
> pipeline: Pipeline: init - proj=axisswap, 2
> pipeline:     order=2,1
> axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> axisswap: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104ac94a0
> pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104ac94a0]
> (proj=axisswap) done
> pipeline: Pipeline: Building arg list for step no. 1
> pipeline: Pipeline: init - proj=unitconvert, 3
> pipeline:     xy_in=deg
> pipeline:     xy_out=rad
> unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> unitconvert: pj_ellipsoid - final:    ellps=GRS80
> unitconvert: xy_in unit: Degree
> unitconvert: xy_out unit: Radian
> pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b94d60
> pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b94d60]
> (proj=unitconvert) done
> pipeline: Pipeline: Building arg list for step no. 2
> pipeline: Pipeline: init - proj=utm, 4
> pipeline:     zone=56
> pipeline:     south
> pipeline:     ellps=GRS80
> utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> utm: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b952a0
> pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b952a0]
> (proj=utm) done
> pipeline: Pipeline: 3 steps built. Determining i/o characteristics
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:    ellps=WGS84
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:
> pipeline: Pipeline: Building arg list for step no. 0
> pipeline: Pipeline: init - proj=axisswap, 2
> pipeline:     order=2,1
> axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> axisswap: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b976f0
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b976f0]
> (proj=axisswap) done
> pipeline: Pipeline: Building arg list for step no. 1
> pipeline: Pipeline: init - proj=unitconvert, 3
> pipeline:     xy_in=deg
> pipeline:     xy_out=rad
> unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> unitconvert: pj_ellipsoid - final:    ellps=GRS80
> unitconvert: xy_in unit: Degree
> unitconvert: xy_out unit: Radian
> pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b97cc0
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b97cc0]
> (proj=unitconvert) done
> pipeline: Pipeline: Building arg list for step no. 2
> pipeline: Pipeline: init - proj=push, 2
> pipeline:     v_3
> push: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> push: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 2 (proj=push) at 0x562104b98290
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98290]
> (proj=push) done
> pipeline: Pipeline: Building arg list for step no. 3
> pipeline: Pipeline: init - proj=cart, 2
> pipeline:     ellps=WGS84
> cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> cart: pj_ellipsoid - final:    ellps=WGS84
> pipeline: Pipeline: Step 3 (proj=cart) at 0x562104b98810
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98810]
> (proj=cart) done
> pipeline: Pipeline: Building arg list for step no. 4
> pipeline: Pipeline: init - inv, 10
> pipeline:     proj=helmert
> pipeline:     x=0.06155
> pipeline:     y=-0.01087
> pipeline:     z=-0.04019
> pipeline:     rx=-0.0394924
> pipeline:     ry=-0.0327221
> pipeline:     rz=-0.0328979
> pipeline:     s=-0.009994
> pipeline:     convention=coordinate_frame
> helmert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> helmert: pj_ellipsoid - final:    ellps=GRS80
> helmert: Helmert parameters:
> helmert: x=   0.06155  y=  -0.01087  z=  -0.04019
> helmert: rx= -0.03949  ry= -0.03272  rz= -0.03290
> helmert: s=  -0.00999  exact=0  convention=coordinate_frame
> helmert: dx=  0.00000  dy=  0.00000  dz=  0.00000
> helmert: drx= 0.00000  dry= 0.00000  drz= 0.00000
> helmert: ds=  0.00000  t_epoch= 0.00000
> helmert: Transformation parameters for observation t_obs=0 (t_epoch=0):
> helmert: x: 0.06155
> helmert: y: -0.01087
> helmert: z: -0.04019
> helmert: s: -9.994e-09
> helmert: rx: -1.91465e-07
> helmert: ry: -1.58641e-07
> helmert: rz: -1.59494e-07
> helmert: theta: 0
> helmert: Rotation Matrix:
> helmert:   |      1  -1.59494e-07   1.58641e-07 |
> helmert:   |  1.59494e-07       1  -1.91465e-07 |
> helmert:   | -1.58641e-07   1.91465e-07       1 |
> pipeline: Pipeline: Step 4 (inv) at 0x562104b98e90
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98e90] (inv)
> done
> pipeline: Pipeline: Building arg list for step no. 5
> pipeline: Pipeline: init - inv, 3
> pipeline:     proj=cart
> pipeline:     ellps=GRS80
> cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> cart: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 5 (inv) at 0x562104b99560
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99560] (inv)
> done
> pipeline: Pipeline: Building arg list for step no. 6
> pipeline: Pipeline: init - proj=pop, 2
> pipeline:     v_3
> pop: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pop: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 6 (proj=pop) at 0x562104b99ac0
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99ac0]
> (proj=pop) done
> pipeline: Pipeline: Building arg list for step no. 7
> pipeline: Pipeline: init - proj=utm, 4
> pipeline:     zone=56
> pipeline:     south
> pipeline:     ellps=GRS80
> utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> utm: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 7 (proj=utm) at 0x562104b9a070
> pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b9a070]
> (proj=utm) done
> pipeline: Pipeline: 8 steps built. Determining i/o characteristics
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:    ellps=GRS80
> pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pipeline: pj_ellipsoid - final:
> pipeline: Pipeline: Building arg list for step no. 0
> pipeline: Pipeline: init - proj=axisswap, 2
> pipeline:     order=2,1
> axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> axisswap: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b9b790
> pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9b790]
> (proj=axisswap) done
> pipeline: Pipeline: Building arg list for step no. 1
> pipeline: Pipeline: init - proj=unitconvert, 3
> pipeline:     xy_in=deg
> pipeline:     xy_out=rad
> unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> unitconvert: pj_ellipsoid - final:    ellps=GRS80
> unitconvert: xy_in unit: Degree
> unitconvert: xy_out unit: Radian
> pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b9bd60
> pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9bd60]
> (proj=unitconvert) done
> pipeline: Pipeline: Building arg list for step no. 2
> pipeline: Pipeline: init - inv, 3
> pipeline:     proj=hgridshift
> pipeline:     grids=au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
> hgridshift: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> hgridshift: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 2 (inv) at 0x562104b9c380
> pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c380] (inv)
> done
> pipeline: Pipeline: Building arg list for step no. 3
> pipeline: Pipeline: init - proj=utm, 4
> pipeline:     zone=56
> pipeline:     south
> pipeline:     ellps=GRS80
> utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> utm: pj_ellipsoid - final:    ellps=GRS80
> pipeline: Pipeline: Step 3 (proj=utm) at 0x562104b9c950
> pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c950]
> (proj=utm) done
> pipeline: Pipeline: 4 steps built. Determining i/o characteristics
> Using coordinate operation Inverse of GDA94 to WGS 84 (3) + Map Grid of
> Australia zone 56
> pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call
> fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) -
> succeeded
> 502934.23       6958717.61 0.00
>
>
>
>
>
>
>
>
>
> R
>
> ------------------------------
> The information in this email together with any attachments is intended
> only for the person or entity to which it is addressed and may contain
> confidential and/or privileged material. There is no waiver of any
> confidentiality/privilege by your inadvertent receipt of this material.
> Any form of review, disclosure, modification, distribution and/or
> publication of this email message is prohibited, unless as a necessary part
> of Departmental business.
> If you have received this message in error, you are asked to inform the
> sender as quickly as possible and delete this message and any copies of
> this message from your computer and/or your computer system network.
> ------------------------------
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/1f7e48e9/attachment-0001.htm>

From erixen_cruz at earthbrain.com  Sun Jan  7 19:54:57 2024
From: erixen_cruz at earthbrain.com (Erixen Cruz)
Date: Mon, 8 Jan 2024 03:54:57 +0000
Subject: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2
In-Reply-To: <CALFvv1mysrNuUqtMnvf1W-XsNjdhX+sD8ur0yty7nOqc-kVGOA@mail.gmail.com>
References: <ME3PR01MB6306320E5A76B19D05684A2B8C6B2@ME3PR01MB6306.ausprd01.prod.outlook.com>
 <CALFvv1mysrNuUqtMnvf1W-XsNjdhX+sD8ur0yty7nOqc-kVGOA@mail.gmail.com>
Message-ID: <TYWP286MB2634078E49ED6A521BE8655EE56B2@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>

I think https://github.com/OSGeo/PROJ/pull/3621. Before that PR, PROJ did a shift with a geotiff between GDA2020<->GDA94 as an intermediate step for transforming to WGS84. Now, WGS84 to either GDA is null (no operation). I remember reading some bulletin published by an Australian government or agency that confirms this behaviour is "correct"? That geotiff grid shift is intended only for conversion between 94 and 2020 and not as a more accurate way to get to WGS84.
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Jonathan Johansen via PROJ <proj at lists.osgeo.org>
Sent: Sunday, January 7, 2024 8:12:57 PM
To: Robert Denham <Robert.Denham at des.qld.gov.au>
Cc: proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: Re: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2

Oh, I'd be interested in the cause of this too, please, as a user located in Aus who updated to PROJ 9 not too long ago.

On Mon, Jan 8, 2024 at 10:47?AM Robert Denham via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>> wrote:
This is probably just an improvement, but I was wondering if someone could help explain minor differences we're observing when transforming coordinates from WGS 84 geographic coordinates to projected coordinates in Australia.

For example, if I do:

echo -27.495159464576993 153.02971160860926|
        docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON  osgeo/proj:9.2.0 \
        cs2cs epsg:4326 +to epsg:28356

I get:

pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
502934.82       6958719.00 0.00
Using coordinate operation Inverse of GDA94 to WGS 84 (1) + Map Grid of Australia zone 56

But if I do the same with version 9.1.1:

echo -27.495159464576993 153.02971160860926|
        docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON  osgeo/proj:9.1.1 \
        cs2cs epsg:4326 +to epsg:28356

I get a slightly different output:

502934.23       6958717.61 0.00


And a large amount of output (see below)

I just wanted to check whether this was expected behaviour, and if the difference in the coordinate transformation could be interpreted as an improvement?
I checked other projected coordinates systems, including

* GDA2020 Zone 56 (EPSG:7856)
* Australian Albers GDA94 (EPSG:3755)
* Australian Albers GDA2020 (EPSG:9473)

Each of these give slightly different results under proj 9.1.1 and 9.2.0. The only relevant change I could see in proj was EPSG updated to EPSG 10.082 in proj 9.2. I assume this is the source of the differences?


Thanks
Robert



(output from cs2cs with proj 9.1.1 follows)

pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104a31020
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104a31020] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x56210470c510
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x56210470c510] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b90340
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104b90340] (proj=utm) done
pipeline: Pipeline: 3 steps built. Determining i/o characteristics
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 0 (proj=unitconvert) at 0x562104bc82a0
pipeline: Pipeline at [0x562104b87920]:    step at [0x562104bc82a0] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 1 (proj=utm) at 0x562104b94000
pipeline: Pipeline at [0x562104b87920]:    step at [0x562104b94000] (proj=utm) done
pipeline: Pipeline: 2 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104ac94a0
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104ac94a0] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b94d60
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b94d60] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b952a0
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b952a0] (proj=utm) done
pipeline: Pipeline: 3 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=WGS84
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b976f0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b976f0] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b97cc0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b97cc0] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=push, 2
pipeline:     v_3
push: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
push: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=push) at 0x562104b98290
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98290] (proj=push) done
pipeline: Pipeline: Building arg list for step no. 3
pipeline: Pipeline: init - proj=cart, 2
pipeline:     ellps=WGS84
cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
cart: pj_ellipsoid - final:    ellps=WGS84
pipeline: Pipeline: Step 3 (proj=cart) at 0x562104b98810
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98810] (proj=cart) done
pipeline: Pipeline: Building arg list for step no. 4
pipeline: Pipeline: init - inv, 10
pipeline:     proj=helmert
pipeline:     x=0.06155
pipeline:     y=-0.01087
pipeline:     z=-0.04019
pipeline:     rx=-0.0394924
pipeline:     ry=-0.0327221
pipeline:     rz=-0.0328979
pipeline:     s=-0.009994
pipeline:     convention=coordinate_frame
helmert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
helmert: pj_ellipsoid - final:    ellps=GRS80
helmert: Helmert parameters:
helmert: x=   0.06155  y=  -0.01087  z=  -0.04019
helmert: rx= -0.03949  ry= -0.03272  rz= -0.03290
helmert: s=  -0.00999  exact=0  convention=coordinate_frame
helmert: dx=  0.00000  dy=  0.00000  dz=  0.00000
helmert: drx= 0.00000  dry= 0.00000  drz= 0.00000
helmert: ds=  0.00000  t_epoch= 0.00000
helmert: Transformation parameters for observation t_obs=0 (t_epoch=0):
helmert: x: 0.06155
helmert: y: -0.01087
helmert: z: -0.04019
helmert: s: -9.994e-09
helmert: rx: -1.91465e-07
helmert: ry: -1.58641e-07
helmert: rz: -1.59494e-07
helmert: theta: 0
helmert: Rotation Matrix:
helmert:   |      1  -1.59494e-07   1.58641e-07 |
helmert:   |  1.59494e-07       1  -1.91465e-07 |
helmert:   | -1.58641e-07   1.91465e-07       1 |
pipeline: Pipeline: Step 4 (inv) at 0x562104b98e90
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98e90] (inv) done
pipeline: Pipeline: Building arg list for step no. 5
pipeline: Pipeline: init - inv, 3
pipeline:     proj=cart
pipeline:     ellps=GRS80
cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
cart: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 5 (inv) at 0x562104b99560
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99560] (inv) done
pipeline: Pipeline: Building arg list for step no. 6
pipeline: Pipeline: init - proj=pop, 2
pipeline:     v_3
pop: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pop: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 6 (proj=pop) at 0x562104b99ac0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99ac0] (proj=pop) done
pipeline: Pipeline: Building arg list for step no. 7
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 7 (proj=utm) at 0x562104b9a070
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b9a070] (proj=utm) done
pipeline: Pipeline: 8 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b9b790
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9b790] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b9bd60
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9bd60] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - inv, 3
pipeline:     proj=hgridshift
pipeline:     grids=au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
hgridshift: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
hgridshift: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (inv) at 0x562104b9c380
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c380] (inv) done
pipeline: Pipeline: Building arg list for step no. 3
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 3 (proj=utm) at 0x562104b9c950
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c950] (proj=utm) done
pipeline: Pipeline: 4 steps built. Determining i/o characteristics
Using coordinate operation Inverse of GDA94 to WGS 84 (3) + Map Grid of Australia zone 56
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
502934.23       6958717.61 0.00









R

------------------------------
The information in this email together with any attachments is intended only for the person or entity to which it is addressed and may contain confidential and/or privileged material. There is no waiver of any confidentiality/privilege by your inadvertent receipt of this material.
Any form of review, disclosure, modification, distribution and/or publication of this email message is prohibited, unless as a necessary part of Departmental business.
If you have received this message in error, you are asked to inform the sender as quickly as possible and delete this message and any copies of this message from your computer and/or your computer system network.
------------------------------
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/7589a3d1/attachment-0001.htm>

From Robert.Denham at des.qld.gov.au  Sun Jan  7 20:33:34 2024
From: Robert.Denham at des.qld.gov.au (Robert Denham)
Date: Mon, 8 Jan 2024 04:33:34 +0000
Subject: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2
In-Reply-To: <TYWP286MB2634078E49ED6A521BE8655EE56B2@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
References: <ME3PR01MB6306320E5A76B19D05684A2B8C6B2@ME3PR01MB6306.ausprd01.prod.outlook.com>
 <CALFvv1mysrNuUqtMnvf1W-XsNjdhX+sD8ur0yty7nOqc-kVGOA@mail.gmail.com>
 <TYWP286MB2634078E49ED6A521BE8655EE56B2@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <ME3PR01MB63061DD5A39FC622494DB5768C6B2@ME3PR01MB6306.ausprd01.prod.outlook.com>

Thank you Erixen,
That makes sense, and this agrees with Geoscience Australia calculator https://geodesyapps.ga.gov.au/geographic-to-grid. This gives the same results as proj 9.2

Robert


From: Erixen Cruz <erixen_cruz at earthbrain.com>
Sent: Monday, January 8, 2024 1:55 PM
To: Jonathan Johansen; Robert Denham
Cc: proj at lists.osgeo.org
Subject: Re: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2

I think https:?//github.?com/OSGeo/PROJ/pull/3621. Before that PR, PROJ did a shift with a geotiff between GDA2020<->GDA94 as an intermediate step for transforming to WGS84. Now, WGS84 to either GDA is null (no operation). I remember reading

I think https://github.com/OSGeo/PROJ/pull/3621<https://urldefense.com/v3/__https:/github.com/OSGeo/PROJ/pull/3621__;!!PUY2jUP3Fp7oEg!F7cBGkbpEaUh7JbDaygWZvd1WOAfMdTnDyS6msuUNaOlDKHHNx3moxenuk25133D5HL9v5A1YwkZdsY0kqWaY3-hT9M-u42MTg$>. Before that PR, PROJ did a shift with a geotiff between GDA2020<->GDA94 as an intermediate step for transforming to WGS84. Now, WGS84 to either GDA is null (no operation). I remember reading some bulletin published by an Australian government or agency that confirms this behaviour is "correct"? That geotiff grid shift is intended only for conversion between 94 and 2020 and not as a more accurate way to get to WGS84.
________________________________
From: PROJ <proj-bounces at lists.osgeo.org<mailto:proj-bounces at lists.osgeo.org>> on behalf of Jonathan Johansen via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>>
Sent: Sunday, January 7, 2024 8:12:57 PM
To: Robert Denham <Robert.Denham at des.qld.gov.au<mailto:Robert.Denham at des.qld.gov.au>>
Cc: proj at lists.osgeo.org<mailto:proj at lists.osgeo.org> <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>>
Subject: Re: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2

Oh, I'd be interested in the cause of this too, please, as a user located in Aus who updated to PROJ 9 not too long ago.

On Mon, Jan 8, 2024 at 10:47?AM Robert Denham via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>> wrote:
This is probably just an improvement, but I was wondering if someone could help explain minor differences we're observing when transforming coordinates from WGS 84 geographic coordinates to projected coordinates in Australia.

For example, if I do:

echo -27.495159464576993 153.02971160860926|
        docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON  osgeo/proj:9.2.0 \
        cs2cs epsg:4326 +to epsg:28356

I get:

pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
502934.82       6958719.00 0.00
Using coordinate operation Inverse of GDA94 to WGS 84 (1) + Map Grid of Australia zone 56

But if I do the same with version 9.1.1:

echo -27.495159464576993 153.02971160860926|
        docker run -i --rm --env PROJ_DEBUG=4 --env PROJ_NETWORK=ON  osgeo/proj:9.1.1 \
        cs2cs epsg:4326 +to epsg:28356

I get a slightly different output:

502934.23       6958717.61 0.00


And a large amount of output (see below)

I just wanted to check whether this was expected behaviour, and if the difference in the coordinate transformation could be interpreted as an improvement?
I checked other projected coordinates systems, including

* GDA2020 Zone 56 (EPSG:7856)
* Australian Albers GDA94 (EPSG:3755)
* Australian Albers GDA2020 (EPSG:9473)

Each of these give slightly different results under proj 9.1.1 and 9.2.0. The only relevant change I could see in proj was EPSG updated to EPSG 10.082 in proj 9.2. I assume this is the source of the differences?


Thanks
Robert



(output from cs2cs with proj 9.1.1 follows)

pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104a31020
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104a31020] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x56210470c510
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x56210470c510] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b90340
pipeline: Pipeline at [0x562104bc7f60]:    step at [0x562104b90340] (proj=utm) done
pipeline: Pipeline: 3 steps built. Determining i/o characteristics
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 0 (proj=unitconvert) at 0x562104bc82a0
pipeline: Pipeline at [0x562104b87920]:    step at [0x562104bc82a0] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 1 (proj=utm) at 0x562104b94000
pipeline: Pipeline at [0x562104b87920]:    step at [0x562104b94000] (proj=utm) done
pipeline: Pipeline: 2 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104ac94a0
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104ac94a0] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b94d60
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b94d60] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=utm) at 0x562104b952a0
pipeline: Pipeline at [0x562104c029b0]:    step at [0x562104b952a0] (proj=utm) done
pipeline: Pipeline: 3 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=WGS84
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b976f0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b976f0] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b97cc0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b97cc0] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - proj=push, 2
pipeline:     v_3
push: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
push: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (proj=push) at 0x562104b98290
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98290] (proj=push) done
pipeline: Pipeline: Building arg list for step no. 3
pipeline: Pipeline: init - proj=cart, 2
pipeline:     ellps=WGS84
cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
cart: pj_ellipsoid - final:    ellps=WGS84
pipeline: Pipeline: Step 3 (proj=cart) at 0x562104b98810
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98810] (proj=cart) done
pipeline: Pipeline: Building arg list for step no. 4
pipeline: Pipeline: init - inv, 10
pipeline:     proj=helmert
pipeline:     x=0.06155
pipeline:     y=-0.01087
pipeline:     z=-0.04019
pipeline:     rx=-0.0394924
pipeline:     ry=-0.0327221
pipeline:     rz=-0.0328979
pipeline:     s=-0.009994
pipeline:     convention=coordinate_frame
helmert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
helmert: pj_ellipsoid - final:    ellps=GRS80
helmert: Helmert parameters:
helmert: x=   0.06155  y=  -0.01087  z=  -0.04019
helmert: rx= -0.03949  ry= -0.03272  rz= -0.03290
helmert: s=  -0.00999  exact=0  convention=coordinate_frame
helmert: dx=  0.00000  dy=  0.00000  dz=  0.00000
helmert: drx= 0.00000  dry= 0.00000  drz= 0.00000
helmert: ds=  0.00000  t_epoch= 0.00000
helmert: Transformation parameters for observation t_obs=0 (t_epoch=0):
helmert: x: 0.06155
helmert: y: -0.01087
helmert: z: -0.04019
helmert: s: -9.994e-09
helmert: rx: -1.91465e-07
helmert: ry: -1.58641e-07
helmert: rz: -1.59494e-07
helmert: theta: 0
helmert: Rotation Matrix:
helmert:   |      1  -1.59494e-07   1.58641e-07 |
helmert:   |  1.59494e-07       1  -1.91465e-07 |
helmert:   | -1.58641e-07   1.91465e-07       1 |
pipeline: Pipeline: Step 4 (inv) at 0x562104b98e90
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b98e90] (inv) done
pipeline: Pipeline: Building arg list for step no. 5
pipeline: Pipeline: init - inv, 3
pipeline:     proj=cart
pipeline:     ellps=GRS80
cart: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
cart: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 5 (inv) at 0x562104b99560
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99560] (inv) done
pipeline: Pipeline: Building arg list for step no. 6
pipeline: Pipeline: init - proj=pop, 2
pipeline:     v_3
pop: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pop: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 6 (proj=pop) at 0x562104b99ac0
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b99ac0] (proj=pop) done
pipeline: Pipeline: Building arg list for step no. 7
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 7 (proj=utm) at 0x562104b9a070
pipeline: Pipeline at [0x562104b96660]:    step at [0x562104b9a070] (proj=utm) done
pipeline: Pipeline: 8 steps built. Determining i/o characteristics
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:    ellps=GRS80
pipeline: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pipeline: pj_ellipsoid - final:
pipeline: Pipeline: Building arg list for step no. 0
pipeline: Pipeline: init - proj=axisswap, 2
pipeline:     order=2,1
axisswap: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
axisswap: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 0 (proj=axisswap) at 0x562104b9b790
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9b790] (proj=axisswap) done
pipeline: Pipeline: Building arg list for step no. 1
pipeline: Pipeline: init - proj=unitconvert, 3
pipeline:     xy_in=deg
pipeline:     xy_out=rad
unitconvert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
unitconvert: pj_ellipsoid - final:    ellps=GRS80
unitconvert: xy_in unit: Degree
unitconvert: xy_out unit: Radian
pipeline: Pipeline: Step 1 (proj=unitconvert) at 0x562104b9bd60
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9bd60] (proj=unitconvert) done
pipeline: Pipeline: Building arg list for step no. 2
pipeline: Pipeline: init - inv, 3
pipeline:     proj=hgridshift
pipeline:     grids=au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
hgridshift: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
hgridshift: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 2 (inv) at 0x562104b9c380
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c380] (inv) done
pipeline: Pipeline: Building arg list for step no. 3
pipeline: Pipeline: init - proj=utm, 4
pipeline:     zone=56
pipeline:     south
pipeline:     ellps=GRS80
utm: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
utm: pj_ellipsoid - final:    ellps=GRS80
pipeline: Pipeline: Step 3 (proj=utm) at 0x562104b9c950
pipeline: Pipeline at [0x562104b9a890]:    step at [0x562104b9c950] (proj=utm) done
pipeline: Pipeline: 4 steps built. Determining i/o characteristics
Using coordinate operation Inverse of GDA94 to WGS 84 (3) + Map Grid of Australia zone 56
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call fopen(/usr/share/proj/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - succeeded
502934.23       6958717.61 0.00









R

------------------------------
The information in this email together with any attachments is intended only for the person or entity to which it is addressed and may contain confidential and/or privileged material. There is no waiver of any confidentiality/privilege by your inadvertent receipt of this material.
Any form of review, disclosure, modification, distribution and/or publication of this email message is prohibited, unless as a necessary part of Departmental business.
If you have received this message in error, you are asked to inform the sender as quickly as possible and delete this message and any copies of this message from your computer and/or your computer system network.
------------------------------
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj<https://urldefense.com/v3/__https:/lists.osgeo.org/mailman/listinfo/proj__;!!PUY2jUP3Fp7oEg!F7cBGkbpEaUh7JbDaygWZvd1WOAfMdTnDyS6msuUNaOlDKHHNx3moxenuk25133D5HL9v5A1YwkZdsY0kqWaY3-hT9O7ZrCbTQ$>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/ffc1acf6/attachment-0001.htm>

From howard at hobu.co  Mon Jan  8 06:33:51 2024
From: howard at hobu.co (Howard Butler)
Date: Mon, 8 Jan 2024 08:33:51 -0600
Subject: [PROJ] spatialreference.org updated!
Message-ID: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>

All,

I would like to congratulate Javier Jimenez for his work to completely refactor https://spatialreference.org <https://spatialreference.org/>. First released in 2007, spatialreference.org <http://spatialreference.org/> was the first website to provide a canonical home for coordinate systems at fixed URL locations that could be referred to by other web infrastructure. Javier took the crusty Django site and completely refactored it to make it work better, be easy to update, and preserved its canonical URL history. Some highlights include:

* Like https://crs-explorer.proj.org <https://crs-explorer.proj.org/>, spatialreference.org <http://spatialreference.org/> is now a statically generated site 
* It is fast :)
* It is produced using PROJ. 
* It is open source https://github.com/OSGeo/spatialreference.org/ If you want to host your own internal mirrors, you can run the scripts and build your own deployment
* It will be refreshed at least at the cadence of major PROJ releases (previously had been updated only once or twice in its entire 15+ year history)
* It supports CORS (thanks GitHub Pages) for pulling in PROJJSON or WKT into your web applications

I hope Javier has more to add about the effort, but I would like to thank him profusely for taking this on and completing it. It is a wonderful update to a widely used community resource.

Thanks!

Howard
 

From michael.smith.erdc at gmail.com  Mon Jan  8 06:46:11 2024
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Mon, 08 Jan 2024 09:46:11 -0500
Subject: [PROJ] spatialreference.org updated!
In-Reply-To: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
References: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
Message-ID: <D177585D-F126-4020-AF0E-7D7E2891573F@gmail.com>

Nice work Javier and Howard. A fantastic resource!

Mike


-- 

Michael Smith 
Remote Sensing/GIS Center 
US Army Corps of Engineers 





?On 1/8/24, 9:34 AM, "PROJ on behalf of Howard Butler via PROJ" <proj-bounces at lists.osgeo.org <mailto:proj-bounces at lists.osgeo.org> on behalf of proj at lists.osgeo.org <mailto:proj at lists.osgeo.org>> wrote:


All,


I would like to congratulate Javier Jimenez for his work to completely refactor https://spatialreference.org <https://spatialreference.org> <https://spatialreference.org/> <https://spatialreference.org/&gt;>. First released in 2007, spatialreference.org <http://spatialreference.org/> <http://spatialreference.org/&gt;> was the first website to provide a canonical home for coordinate systems at fixed URL locations that could be referred to by other web infrastructure. Javier took the crusty Django site and completely refactored it to make it work better, be easy to update, and preserved its canonical URL history. Some highlights include:


* Like https://crs-explorer.proj.org <https://crs-explorer.proj.org> <https://crs-explorer.proj.org/> <https://crs-explorer.proj.org/&gt;>, spatialreference.org <http://spatialreference.org/> <http://spatialreference.org/&gt;> is now a statically generated site 
* It is fast :)
* It is produced using PROJ. 
* It is open source https://github.com/OSGeo/spatialreference.org/ <https://github.com/OSGeo/spatialreference.org/> If you want to host your own internal mirrors, you can run the scripts and build your own deployment
* It will be refreshed at least at the cadence of major PROJ releases (previously had been updated only once or twice in its entire 15+ year history)
* It supports CORS (thanks GitHub Pages) for pulling in PROJJSON or WKT into your web applications


I hope Javier has more to add about the effort, but I would like to thank him profusely for taking this on and completing it. It is a wonderful update to a widely used community resource.


Thanks!


Howard


_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>





From andrew at avenza.com  Mon Jan  8 07:01:43 2024
From: andrew at avenza.com (Andrew Patterson)
Date: Mon, 8 Jan 2024 10:01:43 -0500
Subject: [PROJ] spatialreference.org updated!
In-Reply-To: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
References: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
Message-ID: <CAC8biO2LpROh_Y+-ep9Uipxac20unopxiZYL6Ppb46N-K2y0Jw@mail.gmail.com>

Wow, nice work Mr. Jimenez! This site has been a really useful tool over
the years and it's really quite obvious how snappy it is now. Thanks so
much!

On Mon, Jan 8, 2024 at 9:34?AM Howard Butler via PROJ <proj at lists.osgeo.org>
wrote:

> All,
>
> I would like to congratulate Javier Jimenez for his work to completely
> refactor https://spatialreference.org <https://spatialreference.org/>.
> First released in 2007, spatialreference.org <http://spatialreference.org/>
> was the first website to provide a canonical home for coordinate systems at
> fixed URL locations that could be referred to by other web infrastructure.
> Javier took the crusty Django site and completely refactored it to make it
> work better, be easy to update, and preserved its canonical URL history.
> Some highlights include:
>
> * Like https://crs-explorer.proj.org <https://crs-explorer.proj.org/>,
> spatialreference.org <http://spatialreference.org/> is now a statically
> generated site
> * It is fast :)
> * It is produced using PROJ.
> * It is open source https://github.com/OSGeo/spatialreference.org/ If you
> want to host your own internal mirrors, you can run the scripts and build
> your own deployment
> * It will be refreshed at least at the cadence of major PROJ releases
> (previously had been updated only once or twice in its entire 15+ year
> history)
> * It supports CORS (thanks GitHub Pages) for pulling in PROJJSON or WKT
> into your web applications
>
> I hope Javier has more to add about the effort, but I would like to thank
> him profusely for taking this on and completing it. It is a wonderful
> update to a widely used community resource.
>
> Thanks!
>
> Howard
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 

[image: Avenza Systems Logo]
Andrew Patterson
Lead Software Architect
+1 (416) 487-5116 x401
84 Merton St., Toronto, ON, M4S 1A1


///supply.founders.outreach <https://www.avenza.com/about/contact/>
<https://www.facebook.com/AvenzaSystems/>    <https://x.com/Avenza>
<https://www.linkedin.com/company/avenza-systems-inc-/mycompany/>
<https://www.instagram.com/avenzamaps/>    <https://x.com/AvenzaMaps>
<https://www.facebook.com/AvenzaMaps/>
[image: Avenza Events Banner] <https://www.avenza.com/resources/events/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/15843828/attachment.htm>

From gdt at lexort.com  Mon Jan  8 07:08:17 2024
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 08 Jan 2024 10:08:17 -0500
Subject: [PROJ] Differences in coordinate transforms from proj 9.1 to 9.2
In-Reply-To: <TYWP286MB2634078E49ED6A521BE8655EE56B2@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 (Erixen Cruz via PROJ's message of "Mon, 8 Jan 2024 03:54:57 +0000")
References: <ME3PR01MB6306320E5A76B19D05684A2B8C6B2@ME3PR01MB6306.ausprd01.prod.outlook.com>
 <CALFvv1mysrNuUqtMnvf1W-XsNjdhX+sD8ur0yty7nOqc-kVGOA@mail.gmail.com>
 <TYWP286MB2634078E49ED6A521BE8655EE56B2@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <rmi4jfng8wu.fsf@s1.lexort.com>

Erixen Cruz via PROJ <proj at lists.osgeo.org> writes:

> I think https://github.com/OSGeo/PROJ/pull/3621. Before that PR, PROJ
> did a shift with a geotiff between GDA2020<->GDA94 as an intermediate
> step for transforming to WGS84. Now, WGS84 to either GDA is null (no
> operation). I remember reading some bulletin published by an
> Australian government or agency that confirms this behaviour is
> "correct"? That geotiff grid shift is intended only for conversion
> between 94 and 2020 and not as a more accurate way to get to WGS84.

WGS84 is an ensemble with 2m of fuzz so there is really no such thing as
accurate, when one means 10cm or sub-meter, transforms to/from or
coordinates in WGS84.

My memory is fuzzy, but I think GDA94 might be close to WGS84(TRANSIT)
and GDA2020 close to a more recent realization of WGS84 or ITRF, as of
its reference epoch.

If you could about accuracy you should stop using WGS84(ensemble) and
use specific realizations or specific ITRF realizations.  However,
geojson and maybe web standards refer to WGS84(ensemble).  Everywhere,
but especially AU, if you care about sub 50 cm, you need to be clear on
station velocities in ITRF, whereas regional datums like GDA2020 and
NAD83(2011) are much closer to plate-fixed.

From howard at hobu.co  Mon Jan  8 06:52:35 2024
From: howard at hobu.co (Howard Butler)
Date: Mon, 8 Jan 2024 08:52:35 -0600
Subject: [PROJ] spatialreference.org updated!
In-Reply-To: <D177585D-F126-4020-AF0E-7D7E2891573F@gmail.com>
References: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
 <D177585D-F126-4020-AF0E-7D7E2891573F@gmail.com>
Message-ID: <586B6C13-38D6-4CA8-A01D-ADCAA257D4AB@hobu.co>

All I did was flip the DNS. Javier and Even did all the real work, but I wanted to make sure to get the word out. 

It was getting a slight bit embarrassing that the most complete index was an alternative ad-supported site. The authority PROJ brings spatialreference.org <http://spatialreference.org/> will continue to inspire confidence in what's published and give people the ability to step forward and conveniently contribute if they desire. 

> On Jan 8, 2024, at 8:46?AM, Michael Smith <michael.smith.erdc at gmail.com> wrote:
> 
> Nice work Javier and Howard. A fantastic resource!
> 
> Mike
> 
> 
> -- 
> 
> Michael Smith 
> Remote Sensing/GIS Center 
> US Army Corps of Engineers 
> 
> 
> 
> 
> 
> ?On 1/8/24, 9:34 AM, "PROJ on behalf of Howard Butler via PROJ" <proj-bounces at lists.osgeo.org <mailto:proj-bounces at lists.osgeo.org><mailto:proj-bounces at lists.osgeo.org> on behalf of proj at lists.osgeo.org <mailto:proj at lists.osgeo.org><mailto:proj at lists.osgeo.org>> wrote:
> 
> 
> All,
> 
> 
> I would like to congratulate Javier Jimenez for his work to completely refactor https://spatialreference.org <https://spatialreference.org/> <https://spatialreference.org <https://spatialreference.org/>> <https://spatialreference.org/> <https://spatialreference.org/&gt;>. First released in 2007, spatialreference.org <http://spatialreference.org/><http://spatialreference.org/> <http://spatialreference.org/&gt;> was the first website to provide a canonical home for coordinate systems at fixed URL locations that could be referred to by other web infrastructure. Javier took the crusty Django site and completely refactored it to make it work better, be easy to update, and preserved its canonical URL history. Some highlights include:
> 
> 
> * Like https://crs-explorer.proj.org <https://crs-explorer.proj.org/> <https://crs-explorer.proj.org <https://crs-explorer.proj.org/>> <https://crs-explorer.proj.org/> <https://crs-explorer.proj.org/&gt;>, spatialreference.org <http://spatialreference.org/> <http://spatialreference.org/> <http://spatialreference.org/&gt;> is now a statically generated site 
> * It is fast :)
> * It is produced using PROJ. 
> * It is open source https://github.com/OSGeo/spatialreference.org/<https://github.com/OSGeo/spatialreference.org/> If you want to host your own internal mirrors, you can run the scripts and build your own deployment
> * It will be refreshed at least at the cadence of major PROJ releases (previously had been updated only once or twice in its entire 15+ year history)
> * It supports CORS (thanks GitHub Pages) for pulling in PROJJSON or WKT into your web applications
> 
> 
> I hope Javier has more to add about the effort, but I would like to thank him profusely for taking this on and completing it. It is a wonderful update to a widely used community resource.
> 
> 
> Thanks!
> 
> 
> Howard
> 
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org> <mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/05af2277/attachment-0001.htm>

From j1 at jimenezshaw.com  Mon Jan  8 07:36:58 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 8 Jan 2024 16:36:58 +0100
Subject: [PROJ] spatialreference.org updated!
In-Reply-To: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
References: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
Message-ID: <CADRrdKuW1vhTwAmKdsyrRijPVGQd8DO7q0YTGwYfY2k04Mo43w@mail.gmail.com>

Thank you Howard for the nice comments.

I started this project a few months ago after Even Rouault suggested me the
idea based on my previous development of https://crs-explorer.proj.org/
The main idea is exactly the same as in the CRS-Explorer: generate in
python a JSON file with all the CRSs available in PROJ using PyPROJ, and
display the information in a webpage statically hosted in GitHub pages
(helped by JavaScript). The whole process takes less than 4 minutes in
gh-pages for more than 13000 CRSs (including the download of the PROJ
docker image).

For spatialreference.org I learned some more python (including Jinja2).
Special thanks to my wife, who helped me with that.

Keeping the backwards compatibility (not completely, but I hope that
enough) was probably the hardest part. That forced me to do things in a
specific way, even knowing that it was not the best.
I kept the style from the 2000's to have minimal disruption (the important
thing was the data!) and do not think so much about UI so far. If you do
not pay attention you may not notice that the page has changed! (in the
footer you have the data compilation date ;) Maybe somebody with more UI
skills wants to contribute (keeping it lean and fast!).

Something to not forget is that GitHub pages has limitation in size and
requests. I do not think that requests are going to be a problem. But
size... we are not far from the limit. See that we are producing more than
100,000 files and directories.

Probably some of you are asking "what is the difference with
https://crs-explorer.proj.org/ ?"
Well, now both are up to date on PROJ (that is up to date on EPSG on every
release). However the way to search / explore the data is different, and
also how to display it. Using one or the other depends on your needs and
preferences.

Enjoy it!

Cheers
--
Javier Jimenez Shaw

On Mon, 8 Jan 2024 at 15:33, Howard Butler via PROJ <proj at lists.osgeo.org>
wrote:

> All,
>
> I would like to congratulate Javier Jimenez for his work to completely
> refactor https://spatialreference.org <https://spatialreference.org/>.
> First released in 2007, spatialreference.org <http://spatialreference.org/>
> was the first website to provide a canonical home for coordinate systems at
> fixed URL locations that could be referred to by other web infrastructure.
> Javier took the crusty Django site and completely refactored it to make it
> work better, be easy to update, and preserved its canonical URL history.
> Some highlights include:
>
> * Like https://crs-explorer.proj.org <https://crs-explorer.proj.org/>,
> spatialreference.org <http://spatialreference.org/> is now a statically
> generated site
> * It is fast :)
> * It is produced using PROJ.
> * It is open source https://github.com/OSGeo/spatialreference.org/ If you
> want to host your own internal mirrors, you can run the scripts and build
> your own deployment
> * It will be refreshed at least at the cadence of major PROJ releases
> (previously had been updated only once or twice in its entire 15+ year
> history)
> * It supports CORS (thanks GitHub Pages) for pulling in PROJJSON or WKT
> into your web applications
>
> I hope Javier has more to add about the effort, but I would like to thank
> him profusely for taking this on and completing it. It is a wonderful
> update to a widely used community resource.
>
> Thanks!
>
> Howard
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/53b0aaac/attachment.htm>

From Jochem.Lesparre at kadaster.nl  Mon Jan  8 07:38:47 2024
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 8 Jan 2024 15:38:47 +0000
Subject: [PROJ] spatialreference.org updated!
In-Reply-To: <586B6C13-38D6-4CA8-A01D-ADCAA257D4AB@hobu.co>
References: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
 <D177585D-F126-4020-AF0E-7D7E2891573F@gmail.com>
 <586B6C13-38D6-4CA8-A01D-ADCAA257D4AB@hobu.co>
Message-ID: <AM0P192MB04822DCA91E8F8301E86E002EF6B2@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

I guess you mean epsg.io with the ad-supported site? Thanks for this clarification of the purpose of spatialreference.org. Hopefully epsg.io will soon drop in the Google ranking in favor of spatialreference.org! So I can finally stop explaining people that they should not use epsg.io, since it is outdated and it mixes up 2D and 3D.



Disclaimer:
De inhoud van deze e-mail is vertrouwelijk en uitsluitend bestemd voor de geadresseerde(n).
Gebruik, openbaarmaking, vermenigvuldiging, verspreiding en/of verstrekking van deze informatie aan derden is niet toegestaan.
Op al onze producten en diensten zijn onze algemene leveringsvoorwaarden van toepassing
[https://www.kadaster.nl/algemene-leveringsvoorwaarden].

Disclaimer:
This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed.
If you are not the intended recipient, you are notified that disclosing, copying, distributing or taking any action in reliance on the contents of this information is strictly prohibited.
Our general terms and conditions of delivery apply to all our products and services
[https://www.kadaster.com/general-terms-and-conditions].
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/13a37fd3/attachment.htm>

From martin.desruisseaux at geomatys.com  Mon Jan  8 08:04:27 2024
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Mon, 8 Jan 2024 17:04:27 +0100
Subject: [PROJ] spatialreference.org updated!
In-Reply-To: <AM0P192MB04822DCA91E8F8301E86E002EF6B2@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
References: <07E06485-014C-4355-939C-2F9893DC4075@hobu.co>
 <D177585D-F126-4020-AF0E-7D7E2891573F@gmail.com>
 <586B6C13-38D6-4CA8-A01D-ADCAA257D4AB@hobu.co>
 <AM0P192MB04822DCA91E8F8301E86E002EF6B2@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <ca72cf59-a3ba-48b7-a313-076a5008380c@geomatys.com>

Le 2024-01-08 ? 16 h 38, Lesparre, Jochem via PROJ a ?crit :

> I guess you mean epsg.io with the ad-supported site? Thanks for this 
> clarification of the purpose of spatialreference.org. Hopefully 
> epsg.io will soon drop in the Google ranking in favor of 
> spatialreference.org! So I can finally stop explaining people that 
> they should not use epsg.io, since it is outdated and it mixes up 2D 
> and 3D.
>
I think the biggest problem is that peoples think that epsg.io is the 
official EPSG registry, while actually it is unrelated (the official 
registry is epsg.org). I keep repeating that in every conferences, and 
still see peoples surprised to learn that fact every times. I have been 
told that an EPSG layer asked epsg.io to at least put a disclaimer 
banner, but they refused to do so. Since EPSG is not a registered 
trademark, they have few legal tools for protecting their name.

 ??? Martin



From even.rouault at spatialys.com  Mon Jan  8 09:43:36 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 8 Jan 2024 18:43:36 +0100
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>

I'm also supporting of bumping to CMake 3.16+. You'll have at least to 
retire the .github/workflows/linux_gcc_5_4.yml workflow, which has no 
value any longer

Even

Le 05/01/2024 ? 22:18, Erixen Cruz via PROJ a ?crit?:
> Hello,
>
> I would like feedback about possibly bumping the minimum CMake version 
> for PROJ to 3.14+. This idea comes from 
> https://github.com/OSGeo/PROJ/pull/3987??where I want to use CMake's 
> FindSQLite3 instead of PROJ's 
> https://cmake.org/cmake/help/latest/module/FindSQLite3.html?.
>
> 3.16 is available in Travis CI with the Focal (Ubuntu 20.04 LTS) 
> distribution 
> https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain?. 
> Its possible to install a 3.14+ version on Bionic (18 LTS), which is 
> what PROJ uses now.
>
> 3.14 was release nearly five years ago 
> https://www.kitware.com/cmake-3-14-0-available-for-download/?so two 
> year old requirement from RFC 3 holds.
>
> What suggestions or problems do you have with this version bump?
>
> Sincerely,
> Erixen
> <https://www.kitware.com/cmake-3-14-0-available-for-download/>
> 	
> CMake 3.14.0 available for download 
> <https://www.kitware.com/cmake-3-14-0-available-for-download/>
> I am happy to announce that CMake 3.14.0 is now available for download 
> at:https://cmake.org/download/ The first two 3.14.0 release candidates 
> included the FindOcatave module. This has been removed in rc3, and rc4 
> pending further development. Documentation is available 
> at:https://cmake.org/cmake/help/v3.14 Release notes appear below and 
> are also published 
> athttps://cmake.org/cmake/help/v3.14/release/3.14.html Some of the 
> more significant changes in [?]
> www.kitware.com
>
>
> <https://github.com/OSGeo/PROJ/pull/3987>
> 	
> Link to explicit SQLite3 target by ErixenCruz ? Pull Request #3987 ? 
> OSGeo/PROJ <https://github.com/OSGeo/PROJ/pull/3987>
> Added clear title that can be used to generate release notes This 
> change originates from Conan conan-io/conan-center-index#21512 
> (comment). I create an explicit SQLite::SQLite3 target library and ...
> github.com
>
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/3ba8b3e2/attachment.htm>

From j1 at jimenezshaw.com  Mon Jan  8 10:21:25 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 8 Jan 2024 19:21:25 +0100
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
Message-ID: <CADRrdKvOTw9fkqFyU34R7Gi=du0V0b4T9UEAoAD2+7t=z8JELg@mail.gmail.com>

+1 to move to CMake 3.16 , aligned with GDAL

On Mon, 8 Jan 2024 at 18:43, Even Rouault via PROJ <proj at lists.osgeo.org>
wrote:

> I'm also supporting of bumping to CMake 3.16+. You'll have at least to
> retire the .github/workflows/linux_gcc_5_4.yml workflow, which has no value
> any longer
>
> Even
> Le 05/01/2024 ? 22:18, Erixen Cruz via PROJ a ?crit :
>
> Hello,
>
> I would like feedback about possibly bumping the minimum CMake version for
> PROJ to 3.14+. This idea comes from
> https://github.com/OSGeo/PROJ/pull/3987  where I want to use CMake's
> FindSQLite3 instead of PROJ's
> https://cmake.org/cmake/help/latest/module/FindSQLite3.html .
>
> 3.16 is available in Travis CI with the Focal (Ubuntu 20.04 LTS)
> distribution
> https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain .
> Its possible to install a 3.14+ version on Bionic (18 LTS), which is what
> PROJ uses now.
>
> 3.14 was release nearly five years ago
> https://www.kitware.com/cmake-3-14-0-available-for-download/ so two year
> old requirement from RFC 3 holds.
>
> What suggestions or problems do you have with this version bump?
>
> Sincerely,
> Erixen
> <https://www.kitware.com/cmake-3-14-0-available-for-download/>
> CMake 3.14.0 available for download
> <https://www.kitware.com/cmake-3-14-0-available-for-download/>
> I am happy to announce that CMake 3.14.0 is now available for download at:
> https://cmake.org/download/ The first two 3.14.0 release candidates
> included the FindOcatave module. This has been removed in rc3, and rc4
> pending further development. Documentation is available at:
> https://cmake.org/cmake/help/v3.14 Release notes appear below and are
> also published athttps://cmake.org/cmake/help/v3.14/release/3.14.html
> Some of the more significant changes in [?]
> www.kitware.com
>
> <https://github.com/OSGeo/PROJ/pull/3987>
> Link to explicit SQLite3 target by ErixenCruz ? Pull Request #3987 ?
> OSGeo/PROJ <https://github.com/OSGeo/PROJ/pull/3987>
> Added clear title that can be used to generate release notes This change
> originates from Conan conan-io/conan-center-index#21512 (comment). I create
> an explicit SQLite::SQLite3 target library and ...
> github.com
>
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240108/2b37d013/attachment.htm>

From knudsen.thomas at gmail.com  Tue Jan  9 03:01:26 2024
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Tue, 9 Jan 2024 12:01:26 +0100
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
Message-ID: <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>

I also find it hard to see any reasonable arguments against 3.16

/Thomas

Den man. 8. jan. 2024 kl. 18.43 skrev Even Rouault via PROJ <
proj at lists.osgeo.org>:

> I'm also supporting of bumping to CMake 3.16+. You'll have at least to
> retire the .github/workflows/linux_gcc_5_4.yml workflow, which has no value
> any longer
>
> Even
> Le 05/01/2024 ? 22:18, Erixen Cruz via PROJ a ?crit :
>
> Hello,
>
> I would like feedback about possibly bumping the minimum CMake version for
> PROJ to 3.14+. This idea comes from
> https://github.com/OSGeo/PROJ/pull/3987  where I want to use CMake's
> FindSQLite3 instead of PROJ's
> https://cmake.org/cmake/help/latest/module/FindSQLite3.html .
>
> 3.16 is available in Travis CI with the Focal (Ubuntu 20.04 LTS)
> distribution
> https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain .
> Its possible to install a 3.14+ version on Bionic (18 LTS), which is what
> PROJ uses now.
>
> 3.14 was release nearly five years ago
> https://www.kitware.com/cmake-3-14-0-available-for-download/ so two year
> old requirement from RFC 3 holds.
>
> What suggestions or problems do you have with this version bump?
>
> Sincerely,
> Erixen
> <https://www.kitware.com/cmake-3-14-0-available-for-download/>
> CMake 3.14.0 available for download
> <https://www.kitware.com/cmake-3-14-0-available-for-download/>
> I am happy to announce that CMake 3.14.0 is now available for download at:
> https://cmake.org/download/ The first two 3.14.0 release candidates
> included the FindOcatave module. This has been removed in rc3, and rc4
> pending further development. Documentation is available at:
> https://cmake.org/cmake/help/v3.14 Release notes appear below and are
> also published athttps://cmake.org/cmake/help/v3.14/release/3.14.html
> Some of the more significant changes in [?]
> www.kitware.com
>
> <https://github.com/OSGeo/PROJ/pull/3987>
> Link to explicit SQLite3 target by ErixenCruz ? Pull Request #3987 ?
> OSGeo/PROJ <https://github.com/OSGeo/PROJ/pull/3987>
> Added clear title that can be used to generate release notes This change
> originates from Conan conan-io/conan-center-index#21512 (comment). I create
> an explicit SQLite::SQLite3 target library and ...
> github.com
>
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240109/f371ed4e/attachment.htm>

From erixen_cruz at earthbrain.com  Tue Jan  9 09:41:22 2024
From: erixen_cruz at earthbrain.com (Erixen Cruz)
Date: Tue, 9 Jan 2024 17:41:22 +0000
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
Message-ID: <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>

Thank you for your opinions so far. Any other further discussion on bumping CMake minimum version to 3.16? RFC3 requires PSC approval, and Javier has given a +1. Would anyone else like to +1/-1 on CMake 3.16?
I intend to incorporate the version bump into my open PR.
Sincerely, Erixen
________________________________
From: Thomas Knudsen <knudsen.thomas at gmail.com>
Sent: Tuesday, January 9, 2024 6:01 AM
To: Even Rouault <even.rouault at spatialys.com>
Cc: Erixen Cruz <erixen_cruz at earthbrain.com>; proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: Re: [PROJ] Bump CMake to 3.14+

I also find it hard to see any reasonable arguments against 3.16

/Thomas

Den man. 8. jan. 2024 kl. 18.43 skrev Even Rouault via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>>:

I'm also supporting of bumping to CMake 3.16+. You'll have at least to retire the .github/workflows/linux_gcc_5_4.yml workflow, which has no value any longer

Even

Le 05/01/2024 ? 22:18, Erixen Cruz via PROJ a ?crit :
Hello,

I would like feedback about possibly bumping the minimum CMake version for PROJ to 3.14+. This idea comes from https://github.com/OSGeo/PROJ/pull/3987  where I want to use CMake's FindSQLite3 instead of PROJ's https://cmake.org/cmake/help/latest/module/FindSQLite3.html .

3.16 is available in Travis CI with the Focal (Ubuntu 20.04 LTS) distribution https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain . Its possible to install a 3.14+ version on Bionic (18 LTS), which is what PROJ uses now.

3.14 was release nearly five years ago https://www.kitware.com/cmake-3-14-0-available-for-download/ so two year old requirement from RFC 3 holds.

What suggestions or problems do you have with this version bump?

Sincerely,
Erixen
[X]<https://www.kitware.com/cmake-3-14-0-available-for-download/>
CMake 3.14.0 available for download<https://www.kitware.com/cmake-3-14-0-available-for-download/>
I am happy to announce that CMake 3.14.0 is now available for download at:https://cmake.org/download/ The first two 3.14.0 release candidates included the FindOcatave module. This has been removed in rc3, and rc4 pending further development. Documentation is available at:https://cmake.org/cmake/help/v3.14 Release notes appear below and are also published athttps://cmake.org/cmake/help/v3.14/release/3.14.html<http://cmake.org/cmake/help/v3.14/release/3.14.html> Some of the more significant changes in [?]
www.kitware.com<http://www.kitware.com>

[X]<https://github.com/OSGeo/PROJ/pull/3987>
Link to explicit SQLite3 target by ErixenCruz ? Pull Request #3987 ? OSGeo/PROJ<https://github.com/OSGeo/PROJ/pull/3987>
Added clear title that can be used to generate release notes This change originates from Conan conan-io/conan-center-index#21512 (comment). I create an explicit SQLite::SQLite3 target library and ...
github.com<http://github.com>




_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj


--
http://www.spatialys.com
My software is free, but my time generally not.

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240109/e9849671/attachment-0001.htm>

From charles.karney at gmail.com  Tue Jan  9 09:43:35 2024
From: charles.karney at gmail.com (Charles Karney)
Date: Tue, 9 Jan 2024 12:43:35 -0500
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <89d9340f-f3c1-4bb1-97f2-bc6ddf7e9a6d@alum.mit.edu>

Yes, this is an easy call...

+1 from me

On 1/9/24 12:41, Erixen Cruz via PROJ wrote:
> Thank you for your opinions so far. Any other further discussion on 
> bumping CMake minimum version to 3.16? RFC3 requires PSC approval, 
> and?Javier has given a +1. Would anyone else like to +1/-1 on CMake 3.16?
> I intend to incorporate the version bump into my open PR.
> Sincerely, Erixen
> ------------------------------------------------------------------------
> *From:* Thomas Knudsen <knudsen.thomas at gmail.com>
> *Sent:* Tuesday, January 9, 2024 6:01 AM
> *To:* Even Rouault <even.rouault at spatialys.com>
> *Cc:* Erixen Cruz <erixen_cruz at earthbrain.com>; proj at lists.osgeo.org 
> <proj at lists.osgeo.org>
> *Subject:* Re: [PROJ] Bump CMake to 3.14+
> I also find it hard to see any reasonable arguments against 3.16
> 
> /Thomas
> 
> Den man. 8. jan. 2024 kl. 18.43 skrev Even Rouault via PROJ 
> <proj at lists.osgeo.org <mailto:proj at lists.osgeo.org>>:
> 
>     __
> 
>     I'm also supporting of bumping to CMake 3.16+. You'll have at least
>     to retire the .github/workflows/linux_gcc_5_4.yml workflow, which
>     has no value any longer
> 
>     Even
> 
>     Le 05/01/2024 ? 22:18, Erixen Cruz via PROJ a ?crit?:
>>     Hello,
>>
>>     I would like feedback about possibly bumping the minimum CMake
>>     version for PROJ to 3.14+. This idea comes from
>>     https://github.com/OSGeo/PROJ/pull/3987
>>     <https://github.com/OSGeo/PROJ/pull/3987>??where I want to use
>>     CMake's FindSQLite3 instead of PROJ's
>>     https://cmake.org/cmake/help/latest/module/FindSQLite3.html
>>     <https://cmake.org/cmake/help/latest/module/FindSQLite3.html>?.
>>
>>     3.16 is available in Travis CI with the Focal (Ubuntu 20.04 LTS)
>>     distribution
>>     https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain <https://docs.travis-ci.com/user/reference/focal/#compilers-and-build-toolchain>?. Its possible to install a 3.14+ version on Bionic (18 LTS), which is what PROJ uses now.
>>
>>     3.14 was release nearly five years ago
>>     https://www.kitware.com/cmake-3-14-0-available-for-download/
>>     <https://www.kitware.com/cmake-3-14-0-available-for-download/>?so
>>     two year old requirement from RFC 3 holds.
>>
>>     What suggestions or problems do you have with this version bump?
>>
>>     Sincerely,
>>     Erixen
>>     <https://www.kitware.com/cmake-3-14-0-available-for-download/>
>>     	
>>     CMake 3.14.0 available for download
>>     <https://www.kitware.com/cmake-3-14-0-available-for-download/>
>>     I am happy to announce that CMake 3.14.0 is now available for
>>     download at:https://cmake.org/download/
>>     <https://cmake.org/download/> The first two 3.14.0 release
>>     candidates included the FindOcatave module. This has been removed
>>     in rc3, and rc4 pending further development. Documentation is
>>     available at:https://cmake.org/cmake/help/v3.14
>>     <https://cmake.org/cmake/help/v3.14> Release notes appear below
>>     and are also published
>>     athttps://cmake.org/cmake/help/v3.14/release/3.14.html
>>     <http://cmake.org/cmake/help/v3.14/release/3.14.html> Some of the
>>     more significant changes in [?]
>>     www.kitware.com <http://www.kitware.com>
>>
>>
>>     <https://github.com/OSGeo/PROJ/pull/3987>
>>     	
>>     Link to explicit SQLite3 target by ErixenCruz ? Pull Request #3987
>>     ? OSGeo/PROJ <https://github.com/OSGeo/PROJ/pull/3987>
>>     Added clear title that can be used to generate release notes This
>>     change originates from Conan conan-io/conan-center-index#21512
>>     (comment). I create an explicit SQLite::SQLite3 target library and ...
>>     github.com <http://github.com>
>>
>>
>>
>>     _______________________________________________
>>     PROJ mailing list
>>     PROJ at lists.osgeo.org  <mailto:PROJ at lists.osgeo.org>
>>     https://lists.osgeo.org/mailman/listinfo/proj  <https://lists.osgeo.org/mailman/listinfo/proj>
>     -- 
>     http://www.spatialys.com  <http://www.spatialys.com>
>     My software is free, but my time generally not.
> 
>     _______________________________________________
>     PROJ mailing list
>     PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/proj
>     <https://lists.osgeo.org/mailman/listinfo/proj>
> 
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
Charles Karney <karney at alum.mit.edu>
702 Prospect Ave
Princeton, NJ 08540-4037

From knudsen.thomas at gmail.com  Tue Jan  9 11:45:17 2024
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Tue, 9 Jan 2024 20:45:17 +0100
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <CAH0YoEMrg8kauGK3EmNaRJ33A+Vhy9FK6WGtOHtxwFWaMA1t9g@mail.gmail.com>

Definitely +1

/Thomas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240109/dc0d6cf0/attachment.htm>

From mwtoews at gmail.com  Tue Jan  9 12:32:19 2024
From: mwtoews at gmail.com (Mike Taves)
Date: Wed, 10 Jan 2024 09:32:19 +1300
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <CAM2FmMrwbbTHdB3eC_5-zU2bx=BeHX7PdG6T2TLne6+_WY5Q5A@mail.gmail.com>

On Wed, 10 Jan 2024 at 06:41, Erixen Cruz via PROJ <proj at lists.osgeo.org> wrote:
>
> Thank you for your opinions so far. Any other further discussion on bumping CMake minimum version to 3.16? RFC3 requires PSC approval, and Javier has given a +1. Would anyone else like to +1/-1 on CMake 3.16?
> I intend to incorporate the version bump into my open PR.

(non PCS) +1 to move to CMake 3.16. That CMake version is packaged for
most modern linux OSes [1], and has many new features to embrace [2].

As for adding it to an existing PR, I'm indifferent. I could do this
in a separate PR this week if that's preferred.

[1] https://pkgs.org/search/?q=cmake
[2] https://cliutils.gitlab.io/modern-cmake/chapters/intro/newcmake.html

From schwehr at gmail.com  Tue Jan  9 12:49:18 2024
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 9 Jan 2024 12:49:18 -0800
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <CAH0YoEMrg8kauGK3EmNaRJ33A+Vhy9FK6WGtOHtxwFWaMA1t9g@mail.gmail.com>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
 <CAH0YoEMrg8kauGK3EmNaRJ33A+Vhy9FK6WGtOHtxwFWaMA1t9g@mail.gmail.com>
Message-ID: <CACmBxyvHpHEmX38UAu-6ALdtP_6kp_2vT8=O+Ew5pTro99D_BA@mail.gmail.com>

+1 KurtS

https://github.com/Kitware/CMake/releases/tag/v3.16.0 is from November 2019.

On Tue, Jan 9, 2024 at 11:46?AM Thomas Knudsen via PROJ <
proj at lists.osgeo.org> wrote:

> Definitely +1
>
> /Thomas
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240109/2760d53d/attachment.htm>

From alansnow21 at gmail.com  Tue Jan  9 14:34:50 2024
From: alansnow21 at gmail.com (Alan Snow)
Date: Tue, 9 Jan 2024 16:34:50 -0600
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <CACmBxyvHpHEmX38UAu-6ALdtP_6kp_2vT8=O+Ew5pTro99D_BA@mail.gmail.com>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
 <CAH0YoEMrg8kauGK3EmNaRJ33A+Vhy9FK6WGtOHtxwFWaMA1t9g@mail.gmail.com>
 <CACmBxyvHpHEmX38UAu-6ALdtP_6kp_2vT8=O+Ew5pTro99D_BA@mail.gmail.com>
Message-ID: <CAGybdFRvJOWCNwrT+65-aNRzPMGBQmtaFZJ-OPD0iEg1g7CR-Q@mail.gmail.com>

+1 Alan

On Tue, Jan 9, 2024, 2:49 PM Kurt Schwehr via PROJ <proj at lists.osgeo.org>
wrote:

> +1 KurtS
>
> https://github.com/Kitware/CMake/releases/tag/v3.16.0 is from November
> 2019.
>
> On Tue, Jan 9, 2024 at 11:46?AM Thomas Knudsen via PROJ <
> proj at lists.osgeo.org> wrote:
>
>> Definitely +1
>>
>> /Thomas
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240109/0470a0fc/attachment.htm>

From kreve at sdfi.dk  Wed Jan 10 01:52:36 2024
From: kreve at sdfi.dk (Kristian Evers)
Date: Wed, 10 Jan 2024 09:52:36 +0000
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <CAGybdFRvJOWCNwrT+65-aNRzPMGBQmtaFZJ-OPD0iEg1g7CR-Q@mail.gmail.com>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
 <CAH0YoEMrg8kauGK3EmNaRJ33A+Vhy9FK6WGtOHtxwFWaMA1t9g@mail.gmail.com>
 <CACmBxyvHpHEmX38UAu-6ALdtP_6kp_2vT8=O+Ew5pTro99D_BA@mail.gmail.com>
 <CAGybdFRvJOWCNwrT+65-aNRzPMGBQmtaFZJ-OPD0iEg1g7CR-Q@mail.gmail.com>
Message-ID: <fa0da58442254ede820adf4921f1b87d@sdfi.dk>

+1 Kristian

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Alan Snow via PROJ
Sent: 9. januar 2024 23:35
To: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Bump CMake to 3.14+

+1 Alan
On Tue, Jan 9, 2024, 2:49 PM Kurt Schwehr via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>> wrote:
+1 KurtS

https://github.com/Kitware/CMake/releases/tag/v3.16.0 is from November 2019.

On Tue, Jan 9, 2024 at 11:46?AM Thomas Knudsen via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>> wrote:
Definitely +1

/Thomas
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240110/9518bc5f/attachment.htm>

From mwtoews at gmail.com  Wed Jan 10 02:19:36 2024
From: mwtoews at gmail.com (Mike Taves)
Date: Wed, 10 Jan 2024 23:19:36 +1300
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <CAM2FmMrwbbTHdB3eC_5-zU2bx=BeHX7PdG6T2TLne6+_WY5Q5A@mail.gmail.com>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
 <CAM2FmMrwbbTHdB3eC_5-zU2bx=BeHX7PdG6T2TLne6+_WY5Q5A@mail.gmail.com>
Message-ID: <CAM2FmMroJDv7xymp0HfoOVgekaLtmLTxWzQQ1YuzT9x1Y+pxiw@mail.gmail.com>

Hi All,

See a draft PR for the changes to increase CMake minimum version from
3.9 to 3.16: https://github.com/OSGeo/PROJ/pull/3997

There are a few bumps to smooth out before it's ready.

From erixen_cruz at earthbrain.com  Fri Jan 12 07:46:09 2024
From: erixen_cruz at earthbrain.com (Erixen Cruz)
Date: Fri, 12 Jan 2024 15:46:09 +0000
Subject: [PROJ] Bump CMake to 3.14+
In-Reply-To: <fa0da58442254ede820adf4921f1b87d@sdfi.dk>
References: <TYWP286MB26347F2C696B6DED7BC104BFE5662@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>
 <4485b970-d77b-403a-a8cc-28d6456ffe19@spatialys.com>
 <CAH0YoEMJMJCY9N8ym4Bhos-r2F1p2fA6HqZ6f5_fVTHjdvQVCw@mail.gmail.com>
 <OS3P286MB26315E7395900498AD577BFDE56A2@OS3P286MB2631.JPNP286.PROD.OUTLOOK.COM>
 <CAH0YoEMrg8kauGK3EmNaRJ33A+Vhy9FK6WGtOHtxwFWaMA1t9g@mail.gmail.com>
 <CACmBxyvHpHEmX38UAu-6ALdtP_6kp_2vT8=O+Ew5pTro99D_BA@mail.gmail.com>
 <CAGybdFRvJOWCNwrT+65-aNRzPMGBQmtaFZJ-OPD0iEg1g7CR-Q@mail.gmail.com>
 <fa0da58442254ede820adf4921f1b87d@sdfi.dk>
Message-ID: <TYWP286MB263445986A8562578FAE64AAE56F2@TYWP286MB2634.JPNP286.PROD.OUTLOOK.COM>

Vote for making the CMake minimum version 3.16 for PROJ has passed with +1s from Kristian, Kurt, Thomas, Charles, and Javier. Thanks everybody.

Mike has already created a PR https://github.com/OSGeo/PROJ/pull/3997.

Sincerely, Erixen
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Kristian Evers via PROJ <proj at lists.osgeo.org>
Sent: Wednesday, January 10, 2024 4:52 AM
To: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Bump CMake to 3.14+


+1 Kristian



From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Alan Snow via PROJ
Sent: 9. januar 2024 23:35
To: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Bump CMake to 3.14+



+1 Alan

On Tue, Jan 9, 2024, 2:49 PM Kurt Schwehr via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>> wrote:

+1 KurtS



https://github.com/Kitware/CMake/releases/tag/v3.16.0 is from November 2019.



On Tue, Jan 9, 2024 at 11:46?AM Thomas Knudsen via PROJ <proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>> wrote:

Definitely +1



/Thomas

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240112/1db95bf4/attachment.htm>

From j1 at jimenezshaw.com  Fri Jan 26 09:24:33 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 26 Jan 2024 18:24:33 +0100
Subject: [PROJ] CSRS Epoch 2017.50 (NAD83)
Message-ID: <CADRrdKthJ+Fmb8VCG4hKr2NxoqUgXHgupmM0=MT5rC25KRiM8g@mail.gmail.com>

Hi

I discovered today that there is a datum in California called "CSRS Epoch
2017.50 (NAD83)"
http://geoweb99.ucsd.edu/index.php/epoch2017/
http://sopac-csrc.ucsd.edu/

"CSRS Epoch 2017.50(NAD83) replaces the previous ?CSRS Epoch 2011.00
ITRF2005 NAD83(NSRS2007)? datum that included coordinates for 830 CSRN
stations."

I have not seen it before, so I guess there is no CRS using it in EPSG. (I
do not find that datum in EPSG)
How can it be used with PROJ?

(Is it normal that some states use their own datum in the US? It is not
enough with hundred of State Planes ;)

Cheers,
Javier.

PS. Be careful with the acronyms:
CRS: Coordinate Reference System
CSRC: California Spatial Reference Center
CSRS: California Spatial Reference System
NAD83(CSRS): Canadian Spatial Reference System

So "NAD83(CSRS)" and "CSRS (NAD83)" are not the same.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240126/1c0fa5bc/attachment.htm>

From even.rouault at spatialys.com  Fri Jan 26 10:02:25 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 26 Jan 2024 19:02:25 +0100
Subject: [PROJ] CSRS Epoch 2017.50 (NAD83)
In-Reply-To: <CADRrdKthJ+Fmb8VCG4hKr2NxoqUgXHgupmM0=MT5rC25KRiM8g@mail.gmail.com>
References: <CADRrdKthJ+Fmb8VCG4hKr2NxoqUgXHgupmM0=MT5rC25KRiM8g@mail.gmail.com>
Message-ID: <13d8d8fc-5368-4cce-9e78-bd7ee746f197@spatialys.com>

Hi,

interesting... It is known by ESRI as 
https://spatialreference.org/ref/esri/104024/ but AFAICS, there isn't 
any transformation registered in their database between this datum and 
other North American datums.

There's a slide deck talking about it, where HTDP is mentionned 
(https://www.ngs.noaa.gov/TOOLS/Htdp/Htdp.html) : 
https://geodesy.noaa.gov/geospatial-summit/year-2019/files/martin-coordinates-moving.pptx 
, but I've the feeling the message might be that Californians found HTDP 
to not be faithful enough for their purpose. I dunno.. I guess our 
friends from NGS could confirm or infirm.

I guess the reason for a separate datum is that part of California is 
anchored on a separate tectonic plate than the rest of N.A (or even the 
parts on the N.A. plate are subject to high deformation). Presumably 
this will be obsoleted by the NATRF2022 when it comes into life, and 
interestingly I found in 
https://casetext.com/statute/california-codes/california-public-resources-code/division-8-surveying-and-mapping/chapter-3-geodetic-datums-and-the-california-spatial-reference-network/section-8852-nad83-natrf2022-or-patrf2022 
that states "The official geodetic datum to which horizontal positions 
and ellipsoid heights are referenced within the State of California 
shall be NAD83, NATRF2022, or PATRF2022". Oh joy!

Even

Le 26/01/2024 ? 18:24, Javier Jimenez Shaw via PROJ a ?crit?:
> Hi
>
> I discovered today that there is a datum in California called "CSRS 
> Epoch 2017.50 (NAD83)"
> http://geoweb99.ucsd.edu/index.php/epoch2017/
> http://sopac-csrc.ucsd.edu/
>
> "CSRS Epoch 2017.50(NAD83) replaces the previous ?CSRS Epoch 2011.00 
> ITRF2005 NAD83(NSRS2007)? datum that included coordinates for 830 CSRN 
> stations."
>
> I have not seen it before, so I guess there is no CRS using it in 
> EPSG. (I do not find that datum in EPSG)
> How can it be used with PROJ?
>
> (Is it normal that some states use their own datum in the US? It is 
> not enough with hundred of State Planes ;)
>
> Cheers,
> Javier.
>
> PS. Be careful with the acronyms:
> CRS: Coordinate Reference System
> CSRC: California Spatial Reference Center
> CSRS: California Spatial Reference System
> NAD83(CSRS): Canadian Spatial Reference System
>
> So "NAD83(CSRS)" and "CSRS (NAD83)" are not the same.
>
> .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240126/2511284a/attachment.htm>

From gdt at lexort.com  Fri Jan 26 11:06:03 2024
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 26 Jan 2024 14:06:03 -0500
Subject: [PROJ] CSRS Epoch 2017.50 (NAD83)
In-Reply-To: <CADRrdKthJ+Fmb8VCG4hKr2NxoqUgXHgupmM0=MT5rC25KRiM8g@mail.gmail.com>
 (Javier Jimenez Shaw via PROJ's message of "Fri, 26 Jan 2024 18:24:33
 +0100")
References: <CADRrdKthJ+Fmb8VCG4hKr2NxoqUgXHgupmM0=MT5rC25KRiM8g@mail.gmail.com>
Message-ID: <rmi1qa3diec.fsf@s1.lexort.com>

Javier Jimenez Shaw via PROJ <proj at lists.osgeo.org> writes:

> I discovered today that there is a datum in California called "CSRS Epoch
> 2017.50 (NAD83)"
> http://geoweb99.ucsd.edu/index.php/epoch2017/
> http://sopac-csrc.ucsd.edu/
>
> "CSRS Epoch 2017.50(NAD83) replaces the previous ?CSRS Epoch 2011.00
> ITRF2005 NAD83(NSRS2007)? datum that included coordinates for 830 CSRN
> stations."
>
> I have not seen it before, so I guess there is no CRS using it in EPSG. (I
> do not find that datum in EPSG)

I haven't heard of this before, but I live in a stable part of the
country :-)

I read about this a bit, and I'm not quite sure what's going on.  As I
understand things, the official federal datum is NAD83(2011) epoch
2010.0 even in regions of California on the Pacific plate.  However, you
can't really make measurements in that frame because the assumption of
small relative motion between your point and the reference stations
doesn't apply, because of not only crossing the plate boundary but the
large deformations.

I think the point is to, while avoiding a full-blown dynamic datum like
"just use ITRF" or the NATRF's intra-frame velocity model, have a series
of static datums that, if a recent one is used, have much lower errors.
I would think that if one examined station coordinates over time, you'd
see PA plate motion and deformation, and probably the eastern edge would
line up with NAD83.

I wonder if the need for this is driven by widespread use of RTK
networks.  The CA RTN situation is unclear to me:
  https://dot.ca.gov/caltrans-near-me/district-6/district-6-programs/d6-land-surveys/d6-rtn-gps

and I'd expect that the base stations configure their epoch 2017
coordinates and thus only the differential values of present-2017 end up
as error sources for users trying to obtain epcoh 2017 coordinates.

My state's RTN, "MaCORS", configures NAD83(2011) epoch 2010.0
coordinates, even though in 14 years at 2 mm/y (since NAD83(2011) is not
quite crust fixed), that's 2.4 cm.   But users want epoch 2010.0
coordinates, not current epoch, and basically all points in
Massachusetts have the same relative motion.

> (Is it normal that some states use their own datum in the US? It is not
> enough with hundred of State Planes ;)

It is absolutely not normal, but also not surprising that California
would do so.  The only other state that has such deformation is perhaps
Alaska, and they might take the approach that if the road hasn't buckled
it's all good.  I'm also not sure about WA.  But I have not heard of
them having datums.

I know you know this, but for others reading, State Plane Coordinate
Systems are projections of existing datums.  Generally, they are
projected from "NAD83(2011) epoch 2010.0".  So that's a much lesser
complication.


From brian.shaw at noaa.gov  Fri Jan 26 11:12:53 2024
From: brian.shaw at noaa.gov (Brian Shaw)
Date: Fri, 26 Jan 2024 12:12:53 -0700
Subject: [PROJ] CSRS Epoch 2017.50 (NAD83)
In-Reply-To: <13d8d8fc-5368-4cce-9e78-bd7ee746f197@spatialys.com>
References: <CADRrdKthJ+Fmb8VCG4hKr2NxoqUgXHgupmM0=MT5rC25KRiM8g@mail.gmail.com>
 <13d8d8fc-5368-4cce-9e78-bd7ee746f197@spatialys.com>
Message-ID: <4515f058-6b9d-41c7-8195-96c368cce1b4@noaa.gov>

All

Yes we are aware of this California Datum and it was developed by the 
California Spatial Reference Center 
<http://sopac-csrc.ucsd.edu/index.php/csrc/> 
(http://sopac-csrc.ucsd.edu/index.php/csrc/) at the request of 
CALTRANS.? As suggested with California being on two tectonic plates 
with earthquakes that cause large displacements they needed to have a 
more updated datum than the time frame that NGS develops them.? I cannot 
specifically recall the earthquake that initiated this datum but I think 
it may have been one near Napa.? In my presentations I highlight the 
challenges California has due to earthquakes (China Lake in 2019 cause 
6-10 feet of horizontal shift) and from subsidence (San Joaquin Valley 
USGS study showed up to 2 feet of subsidence in 16 months).? If 
interested here is a presentation I provided that has some of this 
information 
(https://geodesy.noaa.gov/web/science_edu/presentations_library/files/shaw_nsrs_mod_nsgic_20230928.pptx)

Since Esri is based in California I suspect that is why they implemented 
it but this is not an NGS developed datum so I believe CSRC or CALTRANS 
would have to submit it to EPSG.

I hope this helps
Brian

On 1/26/2024 11:02 AM, Even Rouault via PROJ wrote:
>
> Hi,
>
> interesting... It is known by ESRI as 
> https://spatialreference.org/ref/esri/104024/ but AFAICS, there isn't 
> any transformation registered in their database between this datum and 
> other North American datums.
>
> There's a slide deck talking about it, where HTDP is mentionned 
> (https://www.ngs.noaa.gov/TOOLS/Htdp/Htdp.html) : 
> https://geodesy.noaa.gov/geospatial-summit/year-2019/files/martin-coordinates-moving.pptx 
> , but I've the feeling the message might be that Californians found 
> HTDP to not be faithful enough for their purpose. I dunno.. I guess 
> our friends from NGS could confirm or infirm.
>
> I guess the reason for a separate datum is that part of California is 
> anchored on a separate tectonic plate than the rest of N.A (or even 
> the parts on the N.A. plate are subject to high deformation). 
> Presumably this will be obsoleted by the NATRF2022 when it comes into 
> life, and interestingly I found in 
> https://casetext.com/statute/california-codes/california-public-resources-code/division-8-surveying-and-mapping/chapter-3-geodetic-datums-and-the-california-spatial-reference-network/section-8852-nad83-natrf2022-or-patrf2022 
> that states "The official geodetic datum to which horizontal positions 
> and ellipsoid heights are referenced within the State of California 
> shall be NAD83, NATRF2022, or PATRF2022". Oh joy!
>
> Even
>
> Le 26/01/2024 ? 18:24, Javier Jimenez Shaw via PROJ a ?crit?:
>> Hi
>>
>> I discovered today that there is a datum in California called "CSRS 
>> Epoch 2017.50 (NAD83)"
>> http://geoweb99.ucsd.edu/index.php/epoch2017/
>> http://sopac-csrc.ucsd.edu/
>>
>> "CSRS Epoch 2017.50(NAD83) replaces the previous ?CSRS Epoch 2011.00 
>> ITRF2005 NAD83(NSRS2007)? datum that included coordinates for 830 
>> CSRN stations."
>>
>> I have not seen it before, so I guess there is no CRS using it in 
>> EPSG. (I do not find that datum in EPSG)
>> How can it be used with PROJ?
>>
>> (Is it normal that some states use their own datum in the US? It is 
>> not enough with hundred of State Planes ;)
>>
>> Cheers,
>> Javier.
>>
>> PS. Be careful with the acronyms:
>> CRS: Coordinate Reference System
>> CSRC: California Spatial Reference Center
>> CSRS: California Spatial Reference System
>> NAD83(CSRS): Canadian Spatial Reference System
>>
>> So "NAD83(CSRS)" and "CSRS (NAD83)" are not the same.
>>
>> .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>>
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
*************************************
Brian Shaw
Rocky Mountain Regional Advisor (CO, MT, WY)
NOAA's National Geodetic Survey (NGS)
Cell Phone # 240-988-6363
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240126/c28a67c6/attachment-0001.htm>

From Jochem.Lesparre at kadaster.nl  Mon Jan 29 08:15:14 2024
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 29 Jan 2024 16:15:14 +0000
Subject: [PROJ] Make push and pop FIFO?
In-Reply-To: <AM0P192MB048208CD9EDC078D26830606EF97A@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
References: <AM0P192MB0482617C0F76AD40C7E17D9EEF8CA@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <CAH0YoEOoSmZ_QcbTmHnATtVYxzHBkCd2DAhe5dFzuWiugto+JA@mail.gmail.com>
 <AM6P192MB0488A02C118D7E400D38C015EF8CA@AM6P192MB0488.EURP192.PROD.OUTLOOK.COM>
 <CAH0YoENuAyx3voWcfn_s1XmxUetjrQ2iWba4zEX_Sdq4pMrHOw@mail.gmail.com>
 <AM0P192MB0482EC9BB404C26D5930EBF9EF92A@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <rmi4jgijkeb.fsf@s1.lexort.com>
 <CAH0YoENC7m=MSf=H4+yaLTrhjRf-M42XFAxN9cergPG4_9Z3fQ@mail.gmail.com>
 <b7be156f-bf4a-4a40-b7c7-6550794a3b01@spatialys.com>
 <CAH0YoEPW3P48CU3OoYBS4c8kWhc8q4HsPQyDwJB-Jwjf0OaXuQ@mail.gmail.com>
 <3f3d124b-ccf8-4ea3-9df5-2f5f231d2c47@spatialys.com>
 <AM0P192MB048208CD9EDC078D26830606EF97A@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <AM0P192MB04826F48D0A6C9C4B8C4DE77EF7E2@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

> Adding a variable name could made be optional? In that case +push +v_3 and +pop +v_3 would still work the old way, but one could also use +push +v_3 +name=ellipsoidalheight and +pop +v_3 +name=ellipsoidalheight.

Could my suggestion above, provide a workable compromise for the solution of my problem? What is needed to find consensus on this topic, or should I create a feature request without specifying a specific solution?

Regards, Jochem



Disclaimer:
De inhoud van deze e-mail is vertrouwelijk en uitsluitend bestemd voor de geadresseerde(n).
Gebruik, openbaarmaking, vermenigvuldiging, verspreiding en/of verstrekking van deze informatie aan derden is niet toegestaan.
Op al onze producten en diensten zijn onze algemene leveringsvoorwaarden van toepassing
[https://www.kadaster.nl/algemene-leveringsvoorwaarden].

Disclaimer:
This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed.
If you are not the intended recipient, you are notified that disclosing, copying, distributing or taking any action in reliance on the contents of this information is strictly prohibited.
Our general terms and conditions of delivery apply to all our products and services
[https://www.kadaster.com/general-terms-and-conditions].

From kapadokija at gmail.com  Tue Jan 30 10:15:24 2024
From: kapadokija at gmail.com (Mladen Mijatovic)
Date: Tue, 30 Jan 2024 19:15:24 +0100
Subject: [PROJ] Grid shift files
Message-ID: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>

Dear all,

My application is using proj 9.3.1. I would like to enable the user to set
a custom location for his own grid files used for horizontal
transformations. Is there a way to make proj using a custom location for
search of these files?

Best regards,
Mladen.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240130/85654440/attachment.htm>

From mkennedy2 at earthlink.net  Tue Jan 30 10:58:19 2024
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Tue, 30 Jan 2024 18:58:19 +0000
Subject: [PROJ] World area of use
Message-ID: <530e1614-5ebc-7015-c74c-89102fc494e6@earthlink.net>

Hello Javier,

Disclosure: I'm a member of the subcommittee that maintains the EPSG registry. I also work for Esri.

I'm sorry that I took so long to respond. I haven't been keeping up with the list. My colleague, Bojan, had forwarded your message to me but it while I was on vacation and got buried. 

You can sometimes find information about why the subcommittee makes certain decisions in the Guidance Notes, https://epsg.org/guidance-notes.html

Guidance Note 7-6 is EPSG policies and procedures for EPSG Dataset data management, documents strategy for populating the EPSG Dataset. 

It includes a small section on extents with this bit about World extents: 

"There are two extent records for the whole world, code 2830 includes and code 1262 excludes, the names of all countries. The description for 2830 is lengthy -- over 3000 characters. It is used for entities that might be wanted from a text string using country name. Code 1262 is used when a short description is appropriate." 

Do you feel we should expand the section or double-check that the choice of extent code is consistent? Feel free to ask me to bring it up to the subcommittee or send an email yourself using the online form at https://epsg.org/contact.html.

It's also tied to an option you have when logged in, "Include World Items". We recently discussed whether to move more objects in/out of that category like the ITRF definitions.

Regards,
Melita

-- 
Melita Kennedy
Principal Product Engineer
Esri, Inc.
mkennedy at esri.com

======================================================


From: PROJ <proj-bounces at lists.osgeo.org (mailto:proj-bounces at lists.osgeo.org)> On Behalf Of Even Rouault via PROJ
Sent: Saturday, December 30, 2023 11:18 AM
To: Javier Jimenez Shaw <j1 at jimenezshaw.com (mailto:j1 at jimenezshaw.com)>; proj <PROJ at lists.osgeo.org (mailto:PROJ at lists.osgeo.org)>
Subject: Re: [PROJ] World area of use

Hi Javier,
I don't know the reason for the difference, but if there's one, it would be interesting to know, and if there's none, converging to World (without country list, extent 1262) would indeed seem better. Looking at the few instances that use World by country (extent 2830), there is no apparent logic. It isn't even related to the type (geographic 2D vs 3D vs geocentric).
Grep'ping in the change items of the registry (grep epsg_change PostgreSQL_Data_Script.sql | grep 1262 | grep 2830), shows a global trend of moving from 2830 to 1262 (with a interesting back &amp; forth for CRS 8227, IGS14 geocentric, which was changed from 1262 to 2830, and then later back to 1262)
Even
Le 30/12/2023 &agrave; 19:54, Javier Jimenez Shaw via PROJ a &eacute;crit :
Hi

Playing with crs-explorer, I found that there are a few (and only a few) CRSs with an endless "area of use" description:
?latlng=-45.435465,-15.468750&amp;ignoreWorld=false&amp;allowDeprecated=false&amp;authorities=EPSG&amp;activeTypes=GEOGRAPHIC_2D_CRS,GEOGRAPHIC_3D_CRS,GEOCENTRIC_CRS [crs-explorer.proj.org] (https:/crs-explorer.proj.org/?latlng=-45.435465,-15.468750&amp;ignoreWorld=false&amp;allowDeprecated=false&amp;authorities=EPSG&amp;activeTypes=GEOGRAPHIC_2D_CRS,GEOGRAPHIC_3D_CRS,GEOCENTRIC_CRS (https://urldefense.com/v3/__https:/crs-explorer.proj.org/?latlng=-45.435465,-15.468750&amp;ignoreWorld=false&amp;allowDeprecated=false&amp;authorities=EPSG&amp;activeTypes=GEOGRAPHIC_2D_CRS,GEOGRAPHIC_3D_CRS,GEOCENTRIC_CRS__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdD-o6GRn$))

In EPSG called "World (by country)" World-by-country.html [epsg.org] (https:/epsg.org/extent_2830/World-by-country.html (https://urldefense.com/v3/__https:/epsg.org/extent_2830/World-by-country.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdPBiEOeG$))

like
EPSG:4326 [epsg.org] (https:/epsg.org/crs_4326/WGS-84.html (https://urldefense.com/v3/__https:/epsg.org/crs_4326/WGS-84.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdJmPB8XQ$))
WGS 84
EPSG:9754 [epsg.org] (https:/epsg.org/crs_9754/WGS-84-G2139-.html (https://urldefense.com/v3/__https:/epsg.org/crs_9754/WGS-84-G2139-.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdBTV_bnb$))
WGS 84 (G2139)


EPSG:9988 [epsg.org] (https:/epsg.org/crs_9988/ITRF2020.html (https://urldefense.com/v3/__https:/epsg.org/crs_9988/ITRF2020.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdEgAvj6T$))
ITRF2020


EPSG:10176 [epsg.org] (https:/epsg.org/crs_10176/IGS20.html (https://urldefense.com/v3/__https:/epsg.org/crs_10176/IGS20.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdAY_9M5R$))
IGS20

but not some other implementations like
EPSG:4978 [epsg.org] (https:/epsg.org/crs_4978/WGS-84.html (https://urldefense.com/v3/__https:/epsg.org/crs_4978/WGS-84.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdOxjP9Ib$))
WGS 84
EPSG:9753 [epsg.org] (https:/epsg.org/crs_9753/WGS-84-G2139-.html (https://urldefense.com/v3/__https:/epsg.org/crs_9753/WGS-84-G2139-.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdDXobqfV$))
WGS 84 (G2139)


EPSG:9055 [epsg.org] (https:/epsg.org/crs_9055/WGS-84-G1150-.html (https://urldefense.com/v3/__https:/epsg.org/crs_9055/WGS-84-G1150-.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdBVfUA7V$))
WGS 84 (G1150)

(yes, same CRS. The difference is Geographic 2D vs 3D vs geocentric)

Do you know why this difference?
Is it something to communicate to EPSG?
I personally think that that endless list of countries is not needed when there is a "World" at front.

Cheers and happy new year.
.___ ._ ..._ .. . ._. .___ .. __ . _. . __.. ... .... ._ .__


From j1 at jimenezshaw.com  Tue Jan 30 15:18:30 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 31 Jan 2024 00:18:30 +0100
Subject: [PROJ] Grid shift files
In-Reply-To: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>
References: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>
Message-ID: <CADRrdKstN8e1mQMwwZCx69WgvqCwHpqXLo-U6BJ9iSdRJQKvsQ@mail.gmail.com>

Do you mean a custom location in your hard drive?
Then using PROJ_DATA environment variable is an easy solution. See that is
like a "PATH", separating folders with ":" or ";" depending on your OS, and
it should include also the folder that contains "proj.db".

On Tue, 30 Jan 2024 at 19:15, Mladen Mijatovic via PROJ <
proj at lists.osgeo.org> wrote:

> Dear all,
>
> My application is using proj 9.3.1. I would like to enable the user to set
> a custom location for his own grid files used for horizontal
> transformations. Is there a way to make proj using a custom location for
> search of these files?
>
> Best regards,
> Mladen.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240131/3ad5a8b6/attachment.htm>

From kapadokija at gmail.com  Tue Jan 30 16:36:26 2024
From: kapadokija at gmail.com (Mladen Mijatovic)
Date: Wed, 31 Jan 2024 01:36:26 +0100
Subject: [PROJ] Grid shift files
In-Reply-To: <CADRrdKstN8e1mQMwwZCx69WgvqCwHpqXLo-U6BJ9iSdRJQKvsQ@mail.gmail.com>
References: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>
 <CADRrdKstN8e1mQMwwZCx69WgvqCwHpqXLo-U6BJ9iSdRJQKvsQ@mail.gmail.com>
Message-ID: <CAGCPN7G+KbVh67Yt7csd-Yt_4+38o9xFiMZQsWDWbMVMJ=OxUw@mail.gmail.com>

Yes, I am thinking about the location on the hard drive, on a local machine
where the app is running.

Is it mandatory to place db file there too? I would like to keep them
separtely, not to allow user to mess with the db and ini files.

On Wed, Jan 31, 2024, 00:18 Javier Jimenez Shaw <j1 at jimenezshaw.com> wrote:

> Do you mean a custom location in your hard drive?
> Then using PROJ_DATA environment variable is an easy solution. See that is
> like a "PATH", separating folders with ":" or ";" depending on your OS, and
> it should include also the folder that contains "proj.db".
>
> On Tue, 30 Jan 2024 at 19:15, Mladen Mijatovic via PROJ <
> proj at lists.osgeo.org> wrote:
>
>> Dear all,
>>
>> My application is using proj 9.3.1. I would like to enable the user to
>> set a custom location for his own grid files used for horizontal
>> transformations. Is there a way to make proj using a custom location for
>> search of these files?
>>
>> Best regards,
>> Mladen.
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240131/efbceb9e/attachment.htm>

From luis.de.sousa at protonmail.ch  Tue Jan 30 22:35:22 2024
From: luis.de.sousa at protonmail.ch (=?utf-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Wed, 31 Jan 2024 06:35:22 +0000
Subject: [PROJ] Grid shift files
In-Reply-To: <CAGCPN7G+KbVh67Yt7csd-Yt_4+38o9xFiMZQsWDWbMVMJ=OxUw@mail.gmail.com>
References: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>
 <CADRrdKstN8e1mQMwwZCx69WgvqCwHpqXLo-U6BJ9iSdRJQKvsQ@mail.gmail.com>
 <CAGCPN7G+KbVh67Yt7csd-Yt_4+38o9xFiMZQsWDWbMVMJ=OxUw@mail.gmail.com>
Message-ID: <sDMoy9ocFsE_hw3FWSQXTR7DHBnHkFL4NXvTL5_UMUXUhTqOn57JfYQLtzqRC0s_8XCweUw1TyZWLMK1vXjGUVuRCNhlYFyKc10QbNgoTdM=@protonmail.ch>

Yes it is. Something like:

PROJ_DATA=/path/to/custom.file;/path/to/proj.db

Regards.

--
Lu?s Moreira de Sousa

Sent from Proton Mail mobile

-------- Original Message --------
On 31 Jan 2024, 01:36, Mladen Mijatovic via PROJ wrote:

> Yes, I am thinking about the location on the hard drive, on a local machine where the app is running.
>
> Is it mandatory to place db file there too? I would like to keep them separtely, not to allow user to mess with the db and ini files.
>
> On Wed, Jan 31, 2024, 00:18 Javier Jimenez Shaw <j1 at jimenezshaw.com> wrote:
>
>> Do you mean a custom location in your hard drive?
>> Then using PROJ_DATA environment variable is an easy solution. See that is like a "PATH", separating folders with ":" or ";" depending on your OS, and it should include also the folder that contains "proj.db".
>>
>> On Tue, 30 Jan 2024 at 19:15, Mladen Mijatovic via PROJ <proj at lists.osgeo.org> wrote:
>>
>>> Dear all,
>>>
>>> My application is using proj 9.3.1. I would like to enable the user to set a custom location for his own grid files used for horizontal transformations. Is there a way to make proj using a custom location for search of these files?
>>>
>>> Best regards,
>>> Mladen.
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240131/18a960b7/attachment.htm>

From j1 at jimenezshaw.com  Tue Jan 30 23:41:56 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 31 Jan 2024 08:41:56 +0100
Subject: [PROJ] Grid shift files
In-Reply-To: <sDMoy9ocFsE_hw3FWSQXTR7DHBnHkFL4NXvTL5_UMUXUhTqOn57JfYQLtzqRC0s_8XCweUw1TyZWLMK1vXjGUVuRCNhlYFyKc10QbNgoTdM=@protonmail.ch>
References: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>
 <CADRrdKstN8e1mQMwwZCx69WgvqCwHpqXLo-U6BJ9iSdRJQKvsQ@mail.gmail.com>
 <CAGCPN7G+KbVh67Yt7csd-Yt_4+38o9xFiMZQsWDWbMVMJ=OxUw@mail.gmail.com>
 <sDMoy9ocFsE_hw3FWSQXTR7DHBnHkFL4NXvTL5_UMUXUhTqOn57JfYQLtzqRC0s_8XCweUw1TyZWLMK1vXjGUVuRCNhlYFyKc10QbNgoTdM=@protonmail.ch>
Message-ID: <CADRrdKu_w1T1Hj8Wzwtkn1xkx4gh2tWqLXxA6W39su-iGnNwJw@mail.gmail.com>

More info:
https://proj.org/en/9.3/resource_files.html#where-are-proj-resource-files-looked-for

On Wed, 31 Jan 2024, 07:35 Lu??s Moreira de Sousa, <
luis.de.sousa at protonmail.ch> wrote:

> Yes it is. Something like:
>
> PROJ_DATA=/path/to/custom.file;/path/to/proj.db
>
> Regards.
>
>
> --
> Lu?s Moreira de Sousa
>
>
>
> Sent from Proton Mail mobile
>
>
>
> -------- Original Message --------
> On 31 Jan 2024, 01:36, Mladen Mijatovic via PROJ < proj at lists.osgeo.org>
> wrote:
>
>
> Yes, I am thinking about the location on the hard drive, on a local
> machine where the app is running.
>
> Is it mandatory to place db file there too? I would like to keep them
> separtely, not to allow user to mess with the db and ini files.
>
> On Wed, Jan 31, 2024, 00:18 Javier Jimenez Shaw <j1 at jimenezshaw.com>
> wrote:
>
>> Do you mean a custom location in your hard drive?
>> Then using PROJ_DATA environment variable is an easy solution. See that
>> is like a "PATH", separating folders with ":" or ";" depending on your OS,
>> and it should include also the folder that contains "proj.db".
>>
>> On Tue, 30 Jan 2024 at 19:15, Mladen Mijatovic via PROJ <
>> proj at lists.osgeo.org> wrote:
>>
>>> Dear all,
>>>
>>> My application is using proj 9.3.1. I would like to enable the user to
>>> set a custom location for his own grid files used for horizontal
>>> transformations. Is there a way to make proj using a custom location for
>>> search of these files?
>>>
>>> Best regards,
>>> Mladen.
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240131/ed09709d/attachment.htm>

From kapadokija at gmail.com  Wed Jan 31 05:06:58 2024
From: kapadokija at gmail.com (Mladen Mijatovic)
Date: Wed, 31 Jan 2024 14:06:58 +0100
Subject: [PROJ] Grid shift files
In-Reply-To: <CADRrdKu_w1T1Hj8Wzwtkn1xkx4gh2tWqLXxA6W39su-iGnNwJw@mail.gmail.com>
References: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>
 <CADRrdKstN8e1mQMwwZCx69WgvqCwHpqXLo-U6BJ9iSdRJQKvsQ@mail.gmail.com>
 <CAGCPN7G+KbVh67Yt7csd-Yt_4+38o9xFiMZQsWDWbMVMJ=OxUw@mail.gmail.com>
 <sDMoy9ocFsE_hw3FWSQXTR7DHBnHkFL4NXvTL5_UMUXUhTqOn57JfYQLtzqRC0s_8XCweUw1TyZWLMK1vXjGUVuRCNhlYFyKc10QbNgoTdM=@protonmail.ch>
 <CADRrdKu_w1T1Hj8Wzwtkn1xkx4gh2tWqLXxA6W39su-iGnNwJw@mail.gmail.com>
Message-ID: <CAGCPN7FEo=P+sRucYSfEh3=4pOkkJutM3gkrnMeETui8VW9fWA@mail.gmail.com>

Many thanks to you all!

???, 31. ??? 2024. ? 08:42 Javier Jimenez Shaw <j1 at jimenezshaw.com> ??
???????/??:

> More info:
>
> https://proj.org/en/9.3/resource_files.html#where-are-proj-resource-files-looked-for
>
> On Wed, 31 Jan 2024, 07:35 Lu??s Moreira de Sousa, <
> luis.de.sousa at protonmail.ch> wrote:
>
>> Yes it is. Something like:
>>
>> PROJ_DATA=/path/to/custom.file;/path/to/proj.db
>>
>> Regards.
>>
>>
>> --
>> Lu?s Moreira de Sousa
>>
>>
>>
>> Sent from Proton Mail mobile
>>
>>
>>
>> -------- Original Message --------
>> On 31 Jan 2024, 01:36, Mladen Mijatovic via PROJ < proj at lists.osgeo.org>
>> wrote:
>>
>>
>> Yes, I am thinking about the location on the hard drive, on a local
>> machine where the app is running.
>>
>> Is it mandatory to place db file there too? I would like to keep them
>> separtely, not to allow user to mess with the db and ini files.
>>
>> On Wed, Jan 31, 2024, 00:18 Javier Jimenez Shaw <j1 at jimenezshaw.com>
>> wrote:
>>
>>> Do you mean a custom location in your hard drive?
>>> Then using PROJ_DATA environment variable is an easy solution. See that
>>> is like a "PATH", separating folders with ":" or ";" depending on your OS,
>>> and it should include also the folder that contains "proj.db".
>>>
>>> On Tue, 30 Jan 2024 at 19:15, Mladen Mijatovic via PROJ <
>>> proj at lists.osgeo.org> wrote:
>>>
>>>> Dear all,
>>>>
>>>> My application is using proj 9.3.1. I would like to enable the user to
>>>> set a custom location for his own grid files used for horizontal
>>>> transformations. Is there a way to make proj using a custom location for
>>>> search of these files?
>>>>
>>>> Best regards,
>>>> Mladen.
>>>> _______________________________________________
>>>> PROJ mailing list
>>>> PROJ at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240131/7c6f9aff/attachment-0001.htm>

From kapadokija at gmail.com  Wed Jan 31 05:07:29 2024
From: kapadokija at gmail.com (Mladen Mijatovic)
Date: Wed, 31 Jan 2024 14:07:29 +0100
Subject: [PROJ] Grid shift files
In-Reply-To: <CAGCPN7FEo=P+sRucYSfEh3=4pOkkJutM3gkrnMeETui8VW9fWA@mail.gmail.com>
References: <CAGCPN7FZipUGDQoNdAxaqOWXrMaYPz_1h_qdBDj5aWa475eG1g@mail.gmail.com>
 <CADRrdKstN8e1mQMwwZCx69WgvqCwHpqXLo-U6BJ9iSdRJQKvsQ@mail.gmail.com>
 <CAGCPN7G+KbVh67Yt7csd-Yt_4+38o9xFiMZQsWDWbMVMJ=OxUw@mail.gmail.com>
 <sDMoy9ocFsE_hw3FWSQXTR7DHBnHkFL4NXvTL5_UMUXUhTqOn57JfYQLtzqRC0s_8XCweUw1TyZWLMK1vXjGUVuRCNhlYFyKc10QbNgoTdM=@protonmail.ch>
 <CADRrdKu_w1T1Hj8Wzwtkn1xkx4gh2tWqLXxA6W39su-iGnNwJw@mail.gmail.com>
 <CAGCPN7FEo=P+sRucYSfEh3=4pOkkJutM3gkrnMeETui8VW9fWA@mail.gmail.com>
Message-ID: <CAGCPN7EV=GqM=E9vDwNgPswTGCU-AG1FzkYR5+Hx3TBiWKyNRQ@mail.gmail.com>

Is there another way? Just to know what are the alternatives.

???, 31. ??? 2024. ? 14:06 Mladen Mijatovic <kapadokija at gmail.com> ??
???????/??:

> Many thanks to you all!
>
> ???, 31. ??? 2024. ? 08:42 Javier Jimenez Shaw <j1 at jimenezshaw.com> ??
> ???????/??:
>
>> More info:
>>
>> https://proj.org/en/9.3/resource_files.html#where-are-proj-resource-files-looked-for
>>
>> On Wed, 31 Jan 2024, 07:35 Lu??s Moreira de Sousa, <
>> luis.de.sousa at protonmail.ch> wrote:
>>
>>> Yes it is. Something like:
>>>
>>> PROJ_DATA=/path/to/custom.file;/path/to/proj.db
>>>
>>> Regards.
>>>
>>>
>>> --
>>> Lu?s Moreira de Sousa
>>>
>>>
>>>
>>> Sent from Proton Mail mobile
>>>
>>>
>>>
>>> -------- Original Message --------
>>> On 31 Jan 2024, 01:36, Mladen Mijatovic via PROJ < proj at lists.osgeo.org>
>>> wrote:
>>>
>>>
>>> Yes, I am thinking about the location on the hard drive, on a local
>>> machine where the app is running.
>>>
>>> Is it mandatory to place db file there too? I would like to keep them
>>> separtely, not to allow user to mess with the db and ini files.
>>>
>>> On Wed, Jan 31, 2024, 00:18 Javier Jimenez Shaw <j1 at jimenezshaw.com>
>>> wrote:
>>>
>>>> Do you mean a custom location in your hard drive?
>>>> Then using PROJ_DATA environment variable is an easy solution. See that
>>>> is like a "PATH", separating folders with ":" or ";" depending on your OS,
>>>> and it should include also the folder that contains "proj.db".
>>>>
>>>> On Tue, 30 Jan 2024 at 19:15, Mladen Mijatovic via PROJ <
>>>> proj at lists.osgeo.org> wrote:
>>>>
>>>>> Dear all,
>>>>>
>>>>> My application is using proj 9.3.1. I would like to enable the user to
>>>>> set a custom location for his own grid files used for horizontal
>>>>> transformations. Is there a way to make proj using a custom location for
>>>>> search of these files?
>>>>>
>>>>> Best regards,
>>>>> Mladen.
>>>>> _______________________________________________
>>>>> PROJ mailing list
>>>>> PROJ at lists.osgeo.org
>>>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>>>
>>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240131/4944993f/attachment.htm>

From j1 at jimenezshaw.com  Wed Jan 31 06:07:37 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 31 Jan 2024 15:07:37 +0100
Subject: [PROJ] World area of use
In-Reply-To: <530e1614-5ebc-7015-c74c-89102fc494e6@earthlink.net>
References: <530e1614-5ebc-7015-c74c-89102fc494e6@earthlink.net>
Message-ID: <CADRrdKsWmEoviXaAiMfr1Wy+8tDkS10OMq2swzKLfHXKnXd1_w@mail.gmail.com>

Thanks Melita

That shows that there is some intention there, not just two extents used
randomly (that was the impression).
Me personally I would use always the "short" extent, 1262. The long list of
all countries is redundant and extremely verbose for me.

Best regards,
Javier.

On Tue, 30 Jan 2024 at 19:58, Melita Kennedy via PROJ <proj at lists.osgeo.org>
wrote:

> Hello Javier,
>
> Disclosure: I'm a member of the subcommittee that maintains the EPSG
> registry. I also work for Esri.
>
> I'm sorry that I took so long to respond. I haven't been keeping up with
> the list. My colleague, Bojan, had forwarded your message to me but it
> while I was on vacation and got buried.
>
> You can sometimes find information about why the subcommittee makes
> certain decisions in the Guidance Notes,
> https://epsg.org/guidance-notes.html
>
> Guidance Note 7-6 is EPSG policies and procedures for EPSG Dataset data
> management, documents strategy for populating the EPSG Dataset.
>
> It includes a small section on extents with this bit about World extents:
>
> "There are two extent records for the whole world, code 2830 includes and
> code 1262 excludes, the names of all countries. The description for 2830 is
> lengthy -- over 3000 characters. It is used for entities that might be
> wanted from a text string using country name. Code 1262 is used when a
> short description is appropriate."
>
> Do you feel we should expand the section or double-check that the choice
> of extent code is consistent? Feel free to ask me to bring it up to the
> subcommittee or send an email yourself using the online form at
> https://epsg.org/contact.html.
>
> It's also tied to an option you have when logged in, "Include World
> Items". We recently discussed whether to move more objects in/out of that
> category like the ITRF definitions.
>
> Regards,
> Melita
>
> --
> Melita Kennedy
> Principal Product Engineer
> Esri, Inc.
> mkennedy at esri.com
>
> ======================================================
>
>
> From: PROJ <proj-bounces at lists.osgeo.org (mailto:
> proj-bounces at lists.osgeo.org)> On Behalf Of Even Rouault via PROJ
> Sent: Saturday, December 30, 2023 11:18 AM
> To: Javier Jimenez Shaw <j1 at jimenezshaw.com (mailto:j1 at jimenezshaw.com)>;
> proj <PROJ at lists.osgeo.org (mailto:PROJ at lists.osgeo.org)>
> Subject: Re: [PROJ] World area of use
>
> Hi Javier,
> I don't know the reason for the difference, but if there's one, it would
> be interesting to know, and if there's none, converging to World (without
> country list, extent 1262) would indeed seem better. Looking at the few
> instances that use World by country (extent 2830), there is no apparent
> logic. It isn't even related to the type (geographic 2D vs 3D vs
> geocentric).
> Grep'ping in the change items of the registry (grep epsg_change
> PostgreSQL_Data_Script.sql | grep 1262 | grep 2830), shows a global trend
> of moving from 2830 to 1262 (with a interesting back &amp; forth for CRS
> 8227, IGS14 geocentric, which was changed from 1262 to 2830, and then later
> back to 1262)
> Even
> Le 30/12/2023 &agrave; 19:54, Javier Jimenez Shaw via PROJ a &eacute;crit :
> Hi
>
> Playing with crs-explorer, I found that there are a few (and only a few)
> CRSs with an endless "area of use" description:
> ?latlng=-45.435465,-15.468750&amp;ignoreWorld=false&amp;allowDeprecated=false&amp;authorities=EPSG&amp;activeTypes=GEOGRAPHIC_2D_CRS,GEOGRAPHIC_3D_CRS,GEOCENTRIC_CRS
> [crs-explorer.proj.org] (https:/
> crs-explorer.proj.org/?latlng=-45.435465,-15.468750&amp;ignoreWorld=false&amp;allowDeprecated=false&amp;authorities=EPSG&amp;activeTypes=GEOGRAPHIC_2D_CRS,GEOGRAPHIC_3D_CRS,GEOCENTRIC_CRS
> (
> https://urldefense.com/v3/__https:/crs-explorer.proj.org/?latlng=-45.435465,-15.468750&amp;ignoreWorld=false&amp;allowDeprecated=false&amp;authorities=EPSG&amp;activeTypes=GEOGRAPHIC_2D_CRS,GEOGRAPHIC_3D_CRS,GEOCENTRIC_CRS__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdD-o6GRn$
> ))
>
> In EPSG called "World (by country)" World-by-country.html [epsg.org]
> (https:/epsg.org/extent_2830/World-by-country.html (
> https://urldefense.com/v3/__https:/epsg.org/extent_2830/World-by-country.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdPBiEOeG$
> ))
>
> like
> EPSG:4326 [epsg.org] (https:/epsg.org/crs_4326/WGS-84.html (
> https://urldefense.com/v3/__https:/epsg.org/crs_4326/WGS-84.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdJmPB8XQ$
> ))
> WGS 84
> EPSG:9754 [epsg.org] (https:/epsg.org/crs_9754/WGS-84-G2139-.html (
> https://urldefense.com/v3/__https:/epsg.org/crs_9754/WGS-84-G2139-.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdBTV_bnb$
> ))
> WGS 84 (G2139)
>
>
> EPSG:9988 [epsg.org] (https:/epsg.org/crs_9988/ITRF2020.html (
> https://urldefense.com/v3/__https:/epsg.org/crs_9988/ITRF2020.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdEgAvj6T$
> ))
> ITRF2020
>
>
> EPSG:10176 [epsg.org] (https:/epsg.org/crs_10176/IGS20.html (
> https://urldefense.com/v3/__https:/epsg.org/crs_10176/IGS20.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdAY_9M5R$
> ))
> IGS20
>
> but not some other implementations like
> EPSG:4978 [epsg.org] (https:/epsg.org/crs_4978/WGS-84.html (
> https://urldefense.com/v3/__https:/epsg.org/crs_4978/WGS-84.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdOxjP9Ib$
> ))
> WGS 84
> EPSG:9753 [epsg.org] (https:/epsg.org/crs_9753/WGS-84-G2139-.html (
> https://urldefense.com/v3/__https:/epsg.org/crs_9753/WGS-84-G2139-.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdDXobqfV$
> ))
> WGS 84 (G2139)
>
>
> EPSG:9055 [epsg.org] (https:/epsg.org/crs_9055/WGS-84-G1150-.html (
> https://urldefense.com/v3/__https:/epsg.org/crs_9055/WGS-84-G1150-.html__;!!CKZwjTOV!2uziJJtS5R3htvY33qmdDN1rJ-yl23YUiU7NAtFcJgQ3laCDfCl5lFah7a66_RTDPzQIdBVfUA7V$
> ))
> WGS 84 (G1150)
>
> (yes, same CRS. The difference is Geographic 2D vs 3D vs geocentric)
>
> Do you know why this difference?
> Is it something to communicate to EPSG?
> I personally think that that endless list of countries is not needed when
> there is a "World" at front.
>
> Cheers and happy new year.
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __.. ... .... ._ .__
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20240131/1aa73915/attachment-0001.htm>

