From gerald.evenden at verizon.net  Mon Jan  2 12:29:36 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Mon, 02 Jan 2006 15:29:36 -0500
Subject: [Proj] Old problems
In-Reply-To: <200512311704.56111.gerald.evenden@verizon.net>
References: <200512311704.56111.gerald.evenden@verizon.net>
Message-ID: <200601021529.36175.gerald.evenden@verizon.net>

On Saturday 31 December 2005 05:04 pm, Gerald I. Evenden wrote:
> I was looking into downloading and installing GRASS as I do not have a
> current general purpose map making graphic on my system.  The main problem
	...
Nice idea, but life is too short.  I download GRASS and managed to get all the 
necessary support stuff also installed so that 'configure' and 'make' managed 
to get though the installation process.  While trying to do a quick test with 
the included demo stuff and good 'ol Spearfishi, I ran into a hassle.  Upon 
opening the files I got a 500ms flash on the screen of some map like image 
and then GRASS TK screen disappeared and a diagnostic listing came up on the 
session window listing a bunch of "faillures" seeming to point to some 
librarie(s).

Well ... for something that took about 8 minutes to compile on a 3GHz machine 
I have a problem that I am not even dreaming about trying to solve.

I guess I will dust off MAPGEN and see if I can bring it up.

PS: thanks to Frank for responding to the gdal hassle.
-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From paul-grass at stjohnspoint.co.uk  Mon Jan  2 12:59:58 2006
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Mon, 02 Jan 2006 20:59:58 +0000
Subject: [Proj] Old problems
In-Reply-To: <200601021529.36175.gerald.evenden@verizon.net>
References: <200512311704.56111.gerald.evenden@verizon.net>
	<200601021529.36175.gerald.evenden@verizon.net>
Message-ID: <43B9944E.2070101@stjohnspoint.co.uk>

Gerald I. Evenden wrote:
> Nice idea, but life is too short.  I download GRASS and managed to get all the 
> necessary support stuff also installed so that 'configure' and 'make' managed 
> to get though the installation process.  While trying to do a quick test with 
> the included demo stuff and good 'ol Spearfishi, I ran into a hassle.  Upon 
> opening the files I got a 500ms flash on the screen of some map like image 
> and then GRASS TK screen disappeared and a diagnostic listing came up on the 
> session window listing a bunch of "faillures" seeming to point to some 
> librarie(s).

Hmm sounds like it might perhaps be a simple problem with finding the 
shared libraries---you could try adding /usr/local/lib (if that's where 
you installed the support stuff) to /etc/ld.so.conf and running 
ldconfig, or adding /usr/local/lib to the LD_LIBRARY_PATH environment 
variable.

Or add the -text command-line switch to the GRASS start-up command so it 
doesn't try loading the GUI stuff at all.

But.. this isn't the GRASS list so I won't elaborate and cause undue 
traffic. It took me several months to sort out all the problems and get 
GRASS to compile completely when I first started using it 3-4 years ago 
so up and running in 8 minutes is good going!

Paul


From roger at opq.se  Tue Jan  3 05:11:21 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Tue, 03 Jan 2006 14:11:21 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <1134571447.17795.107.camel@acme.pacific>
References: <1134400737.20841.55.camel@acme.pacific>
	<20051212210127.GA2276@geo9.hut.fi>
	<1134461756.31610.18.camel@acme.pacific>
	<1134464643.8808.13.camel@geo9.hut.fi>
	<1134470621.31610.80.camel@acme.pacific>
	<1134571447.17795.107.camel@acme.pacific>
Message-ID: <1136293881.9764.32.camel@acme.pacific>

On Wed, 2005-12-14 at 15:44 +0100, Roger Oberholtzer wrote:

> 
> I have sorted out using proj 4.4.9 to obtain KKJ X/Y values from WGS84
> LAT/LONG values.
> 
> To be more precise, I have this sorted out on Linux. I compiled the same
> 4.4.9 code on Windows using MS VC++ 6.0 and the makefile.vc in the proj
> source. The problem is that I do not get the same results on the two
> systems! The error is in the neighborhood of 100 meters.
> Has anyone used proj on Windows and had any such problem? I have used
> other similar libraries on both platforms before, so I did not expect
> this.
> 
> I was thinking of trying the 4.4.6 binary that is available for
> downloads, but it does not contain a proj.lib file, making linking
> problematic. Any reason there is not a windows binary of 4.4.9, and only
> of 4.4.6?


I have now verified that I am doing the exact same thing on both
platforms. I have attached a small amount of test data that demonstrates
what I am seeing. The data contains eight columns:

Columns 1 and 2 are the X/Y that an external reference system (customer)
claims the values should be.

Columns 3 and 4 are the X/Y that I get with PROJ on Linux. Matches
Columns 1 and 2 within acceptable limits. This was my first test of proj
that I initially reported and was happy with.

Columns 5 and 6 are the X/Y that I get with PROJ on Windows (MSVC++ 6.0
compiler). Do NOT match Columns 3 and 4, to which they should be almost
identical, and also are farther away from reference in Columns 1 and 2.

Columns 7 and 8 are WGS84 lats and longs in minutes. I have verified
that both the Linux and Windows calculations are using the exact same
values for these. These are the values that all calculations are based
on.

The PROJ command used on both Linux and Windows is:

Initialization:

    pj_init_plus("+proj=latlong +ellps=WGS84");

    pj_init_plus("+init=esri:2393");

Calculation:

    set lng and lat to the location in radians, then:

    pj_transform(fromProj, toProj, 1, 0, &lng, &lat, &alt):

The code on both platforms is the same. The utility that is doing this
also does other transforms, and these are always the same on both
platforms.  So, in a way I do not understand, there is some difference
that, by process of elimination, must be in the proj code.

Could there be any constant that proj defines if it is not defined by
the system? Like a PI or some other value? So if I have not included
some expected system file on the windows platform it could get some
different default value?

I would imagine that the altitude value is not used? Right?

The 'esri' file is the same on both platforms. It is the one that comes
with proj.

Any ideas (other than tell the users to do this on a Linux platform for
best results)?

-- 
Roger Oberholtzer
OPQ Systems AB

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060103/11dd5158/attachment.html>
-------------- next part --------------
6678774.88 3382686.20 6678774.91071 3382686.80341 6678748.55278 3382628.51448 6012.21644 2452.87822      
6678780.97 3382679.04 6678781.00476 3382679.65336 6678754.64711 3382621.36416 6012.21959 2452.87027      
6678783.49 3382669.19 6678783.52215 3382669.79620 6678757.16460 3382611.50653 6012.22078 2452.85953      
6678782.96 3382659.07 6678782.98758 3382659.67969 6678756.63002 3382601.38955 6012.22032 2452.84861      
6678779.22 3382649.53 6678779.25745 3382650.13852 6678752.89974 3382591.84793 6012.21814 2452.83842      
6678773.75 3382641.12 6678773.78035 3382641.72293 6678747.42243 3382583.43195 6012.21505 2452.82952      
6678767.34 3382633.48 6678767.36189 3382634.08617 6678741.00371 3382575.79484 6012.21147 2452.82148      
6678760.84 3382625.97 6678760.86123 3382626.57741 6678734.50279 3382568.28572 6012.20784 2452.81359      
6678754.28 3382618.42 6678754.30908 3382619.02314 6678727.95037 3382560.73110 6012.20418 2452.80565      
6678748.06 3382610.77 6678748.09408 3382611.37745 6678721.73512 3382553.08505 6012.20070 2452.79760      

From roger at opq.se  Tue Jan  3 05:38:35 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Tue, 03 Jan 2006 14:38:35 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <1136293881.9764.32.camel@acme.pacific>
References: <1134400737.20841.55.camel@acme.pacific>
	<20051212210127.GA2276@geo9.hut.fi>
	<1134461756.31610.18.camel@acme.pacific>
	<1134464643.8808.13.camel@geo9.hut.fi>
	<1134470621.31610.80.camel@acme.pacific>
	<1134571447.17795.107.camel@acme.pacific>
	<1136293881.9764.32.camel@acme.pacific>
Message-ID: <1136295516.9764.40.camel@acme.pacific>

On Tue, 2006-01-03 at 14:11 +0100, Roger Oberholtzer wrote:
> 
> Initialization:
> 
>     pj_init_plus("+proj=latlong +ellps=WGS84");
> 
>     pj_init_plus("+init=esri:2393");

Oops: Editing madness. The two previous lines should have been:

	projPJ fromProj = pj_init_plus("+proj=latlong +ellps=WGS84");

	projPJ toProj = pj_init_plus("+init=esri:2393");

And, all return codes are checked in the program. I just left that off
for clarity.

-- 
Roger Oberholtzer
OPQ Systems AB




From warmerdam at pobox.com  Tue Jan  3 10:06:41 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 3 Jan 2006 13:06:41 -0500
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <1136293881.9764.32.camel@acme.pacific>
References: <1134400737.20841.55.camel@acme.pacific>
	<20051212210127.GA2276@geo9.hut.fi>
	<1134461756.31610.18.camel@acme.pacific>
	<1134464643.8808.13.camel@geo9.hut.fi>
	<1134470621.31610.80.camel@acme.pacific>
	<1134571447.17795.107.camel@acme.pacific>
	<1136293881.9764.32.camel@acme.pacific>
Message-ID: <931f8ea90601031006s6ad26eayb6ad69ed2b64b70e@mail.gmail.com>

On 1/3/06, Roger Oberholtzer <roger at opq.se> wrote:
>            On Wed, 2005-12-14 at 15:44 +0100, Roger Oberholtzer wrote:
>  I have sorted out using proj 4.4.9 to obtain KKJ X/Y values from WGS84
> LAT/LONG values.

Roger,

I tried to reproduce your results, but was unsuccessful.

I converted the minute location (6012.21644 2452.87822) to
degrees as (100.203607E 40.881303N), somewhere in Mongolia
or northern China.  Is that right?  You referred to the columns as
lat and long, but a latitude of 100N makes no sense, so I assumed
they were really long and lat, respectively.

I tried transforming this like:

cs2cs +proj=latlong +ellps=WGS84 +to +init=esri:2393
100.20360733333334 40.881303666666668
9357680.26      8013647.87 -76.26

Well, the results aren't even in vaguely the same ballpark as your
values.

So I tried going in reverse to see if that worked any better.

cs2cs  +init=esri:2393 +to +proj=latlong +datum=WGS84
6678774.88 3382686.20
58d3'14.396"E   26d48'49.909"N 64.519

Not really close to anything either.

Now, I could continue to guess what I am interpreting wrong in
your instructions, but I think that may be pointless.  Could you please
try your case with cs2cs, and give an easy example we could type in
to try and reproduce your results?

PS. esri:2393 is a tranverse mercator projection.  These
are genreally not stable far from the central meridian.  In this
case it would appear you are working 2.5 million meters away
from the central meridian (since the false easting is 3500000m).
That is a substantial distance.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From EMiller at dfg.ca.gov  Tue Jan  3 10:11:14 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Tue, 03 Jan 2006 10:11:14 -0800
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
Message-ID: <s3ba4de8.028@dfg.ca.gov>

Are they really in minutes?  If I divide by 60 and run through cs2cs using esri:2393, I don't get anything close to your reference values.  I also assumed you meant the values were in longitude (col 7) and latitude (col 8) order.

Also, even though pj_transform assumes datum=WGS84 if no datum is specified, it'd be more correct to actually specify +datum=WGS84.

>>> roger at opq.se 1/3/2006 5:11:21 AM >>>
On Wed, 2005-12-14 at 15:44 +0100, Roger Oberholtzer wrote:

Columns 7 and 8 are WGS84 lats and longs in minutes. I have verified
that both the Linux and Windows calculations are using the exact same
values for these. These are the values that all calculations are based
on.





From john.smart at caris.com  Tue Jan  3 10:25:54 2006
From: john.smart at caris.com (John Smart)
Date: Tue, 3 Jan 2006 14:25:54 -0400
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
References: <s3ba4de8.028@dfg.ca.gov>
Message-ID: <001d01c61093$2253c4f0$5ac8a8c0@caris.priv>

I think it may be DDMM.mmmmm
6012.21644 2452.87822

60 degrees 12.21644 minutes N
24 degrees 52.87822 minutes E

(which is just west of Helsinki).


----- Original Message ----- 
From: "Eric Miller" <EMiller at dfg.ca.gov>
To: <proj at lists.maptools.org>
Sent: Tuesday, January 03, 2006 2:11 PM
Subject: Re: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows


> Are they really in minutes?  If I divide by 60 and run through cs2cs using 
> esri:2393, I don't get anything close to your reference values.  I also 
> assumed you meant the values were in longitude (col 7) and latitude (col 
> 8) order.
>
> Also, even though pj_transform assumes datum=WGS84 if no datum is 
> specified, it'd be more correct to actually specify +datum=WGS84.
>
>>>> roger at opq.se 1/3/2006 5:11:21 AM >>>
> On Wed, 2005-12-14 at 15:44 +0100, Roger Oberholtzer wrote:
>
> Columns 7 and 8 are WGS84 lats and longs in minutes. I have verified
> that both the Linux and Windows calculations are using the exact same
> values for these. These are the values that all calculations are based
> on.
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From roger at opq.se  Tue Jan  3 11:06:29 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Tue, 03 Jan 2006 20:06:29 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <001d01c61093$2253c4f0$5ac8a8c0@caris.priv>
References: <s3ba4de8.028@dfg.ca.gov>
	<001d01c61093$2253c4f0$5ac8a8c0@caris.priv>
Message-ID: <1136315189.6794.1.camel@shark.pacific>

On Tue, 2006-01-03 at 14:25 -0400, John Smart wrote:
> I think it may be DDMM.mmmmm

That is what I meant.

> 6012.21644 2452.87822
> 
> 60 degrees 12.21644 minutes N
> 24 degrees 52.87822 minutes E
> 
> (which is just west of Helsinki).

--
Roger Oberholtzer



From roger at opq.se  Tue Jan  3 11:32:11 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Tue, 03 Jan 2006 20:32:11 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <931f8ea90601031006s6ad26eayb6ad69ed2b64b70e@mail.gmail.com>
References: <1134400737.20841.55.camel@acme.pacific>
	<20051212210127.GA2276@geo9.hut.fi>
	<1134461756.31610.18.camel@acme.pacific>
	<1134464643.8808.13.camel@geo9.hut.fi>
	<1134470621.31610.80.camel@acme.pacific>
	<1134571447.17795.107.camel@acme.pacific>
	<1136293881.9764.32.camel@acme.pacific>
	<931f8ea90601031006s6ad26eayb6ad69ed2b64b70e@mail.gmail.com>
Message-ID: <1136316731.6794.14.camel@shark.pacific>

On Tue, 2006-01-03 at 13:06 -0500, Frank Warmerdam wrote:
> On 1/3/06, Roger Oberholtzer <roger at opq.se> wrote:
> >            On Wed, 2005-12-14 at 15:44 +0100, Roger Oberholtzer wrote:
> >  I have sorted out using proj 4.4.9 to obtain KKJ X/Y values from WGS84
> > LAT/LONG values.
> 
> Roger,
> 
> I tried to reproduce your results, but was unsuccessful.
> 
> I converted the minute location (6012.21644 2452.87822) to
> degrees as (100.203607E 40.881303N), somewhere in Mongolia
> or northern China.  Is that right?  You referred to the columns as
> lat and long, but a latitude of 100N makes no sense, so I assumed
> they were really long and lat, respectively.
> 
> I tried transforming this like:
> 
> cs2cs +proj=latlong +ellps=WGS84 +to +init=esri:2393
> 100.20360733333334 40.881303666666668
> 9357680.26      8013647.87 -76.26
> 
> Well, the results aren't even in vaguely the same ballpark as your
> values.
> 
> So I tried going in reverse to see if that worked any better.
> 
> cs2cs  +init=esri:2393 +to +proj=latlong +datum=WGS84
> 6678774.88 3382686.20
> 58d3'14.396"E   26d48'49.909"N 64.519
> 
> Not really close to anything either.
> 
> Now, I could continue to guess what I am interpreting wrong in
> your instructions, but I think that may be pointless.  Could you please
> try your case with cs2cs, and give an easy example we could type in
> to try and reproduce your results?
> 
> PS. esri:2393 is a tranverse mercator projection.  These
> are genreally not stable far from the central meridian.  In this
> case it would appear you are working 2.5 million meters away
> from the central meridian (since the false easting is 3500000m).
> That is a substantial distance.

The values should have been described as ddmm.mmmmm, not minutes. as I
first specified. And they are from near Helsinki.


--
Roger



From roger at opq.se  Tue Jan  3 12:26:41 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Tue, 03 Jan 2006 21:26:41 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <s3ba4de8.028@dfg.ca.gov>
References: <s3ba4de8.028@dfg.ca.gov>
Message-ID: <1136320001.6794.18.camel@shark.pacific>

On Tue, 2006-01-03 at 10:11 -0800, Eric Miller wrote:
> Are they really in minutes?  If I divide by 60 and run through cs2cs using esri:2393, I don't get anything close to your reference values.  I also assumed you meant the values were in longitude (col 7) and latitude (col 8) order.

The values are as I described them. The first is latitude and the second
is longitude. In ddmm.mmmmm, not minutes. My mistake.

> 
> Also, even though pj_transform assumes datum=WGS84 if no datum is specified, it'd be more correct to actually specify +datum=WGS84.
> 
> >>> roger at opq.se 1/3/2006 5:11:21 AM >>>
> On Wed, 2005-12-14 at 15:44 +0100, Roger Oberholtzer wrote:
> 
> Columns 7 and 8 are WGS84 lats and longs in minutes. I have verified
> that both the Linux and Windows calculations are using the exact same
> values for these. These are the values that all calculations are based
> on.
> 
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From warmerdam at pobox.com  Tue Jan  3 14:02:48 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 3 Jan 2006 17:02:48 -0500
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <1136320001.6794.18.camel@shark.pacific>
References: <s3ba4de8.028@dfg.ca.gov> <1136320001.6794.18.camel@shark.pacific>
Message-ID: <931f8ea90601031402r399d4c95y1956f14f755772d9@mail.gmail.com>

Roger,

I got matching results on Linux and Windows:

cs2cs +proj=latlong +ellps=WGS84 +to +init=esri:2393
24d52.87822 60d12.21644
3382686.81      6678774.91 -24.59

I also verified this with the FWTools binaries for cs2cs.

Could you try cs2cs on each platform?  Then perhaps try
the cs2cs that is part of the FWTools build?

The cs2cs should be doing essentially the same thing as
your program.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From gerald.evenden at verizon.net  Tue Jan  3 19:25:50 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Tue, 03 Jan 2006 22:25:50 -0500
Subject: [Proj] Old problems
In-Reply-To: <43B9944E.2070101@stjohnspoint.co.uk>
References: <200512311704.56111.gerald.evenden@verizon.net>
	<200601021529.36175.gerald.evenden@verizon.net>
	<43B9944E.2070101@stjohnspoint.co.uk>
Message-ID: <200601032225.51052.gerald.evenden@verizon.net>

Since I had "proj-4.4.9" downloaded I made some comparisons with libproj4 to 
see what the basic problems were.

As for the projections themselves (PJ_ files) there is little difference 
except for updated names for support functions and some *improved* functions
in libproj4.  There are, of coarse, a few projections in libproj4 that are not 
in the old stuff.  Of course, the pj_latlong "projection" has no place in a 
projection operation.  Could be replace with Equirectangular where +a=1;

I took a careful look at the pj_init, pj_fwd and pj_inv.  There is little 
difference with pj_fwd and pj_inv but the big problem is with pj_init.  The 
issue is the inclusion of the non-projection datum operations and the "prime 
meridian" problem.  Also, the old usage of a "default" input is removed in 
libproj4.

I do not see why the datum operations cannot be made a shell procedure process 
where the entries are nearly identical with libproj4.  Something like 
gx_init, gx_fwd, gx_inv, where gx_init feeds off the options related to 
datums and gives the list to pj_init to initialize the projection phase.  
Remember, libproj4 pj_init ignores any options that it does not recognize.  
Also, does anyone use the default file or +init?  This was one of my mistakes 
in the original and continually caused a headache with people calling about 
proj not working because it could not find the default file because they had 
not set a global. Getting rid of it would get rid of the +no_def's which 
haunt so many listings of usage.

I'd be glad to give up the pj_init, pj_fwd and pj_inv names and replace them 
with proj_init, proj_forward and proj_inverse in the libproj4 system.  Thus 
the libdatum could have the pj_* entries and minimize any hassles in changing 
application programs.  Any of the other less utilized entries would also 
prefix with proj_.  Note the structure pointer returned by the new pj_init 
would have a pointer to PJ returned by proj_init.

Under this scheme a application like GRASS would not have to do anything but 
change Makefile to recognize the new libdatum library.   "big smiley  :-)"

I would go further and change all the PJ_ and pj_ s to proj_ PROJ_ but that is 
a lot of work.

Any comments?

-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From warmerdam at pobox.com  Tue Jan  3 20:09:19 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 3 Jan 2006 23:09:19 -0500
Subject: [Proj] Old problems
In-Reply-To: <200601032225.51052.gerald.evenden@verizon.net>
References: <200512311704.56111.gerald.evenden@verizon.net>
	<200601021529.36175.gerald.evenden@verizon.net>
	<43B9944E.2070101@stjohnspoint.co.uk>
	<200601032225.51052.gerald.evenden@verizon.net>
Message-ID: <931f8ea90601032009i2e50696eif61685211b8ebfa8@mail.gmail.com>

On 1/3/06, Gerald I. Evenden <gerald.evenden at verizon.net> wrote:
> I do not see why the datum operations cannot be made a shell procedure process
> where the entries are nearly identical with libproj4.  Something like
> gx_init, gx_fwd, gx_inv, where gx_init feeds off the options related to
> datums and gives the list to pj_init to initialize the projection phase.

Gerald,

Indeed it is plausible to layer things this way, though it would be
change in API that would require changes in all applications
using PROJ.4 (at least that depend on datum, etc features)

> Remember, libproj4 pj_init ignores any options that it does not recognize.
> Also, does anyone use the default file or +init?

I would agree that the default file is a problem, and I wouldn't
be adverse to it disappearing all together.

The +init files though are widely used.  Especially the epsg file,
which is relatively new.

> I'd be glad to give up the pj_init, pj_fwd and pj_inv names and replace them
> with proj_init, proj_forward and proj_inverse in the libproj4 system.  Thus
> the libdatum could have the pj_* entries and minimize any hassles in changing
> application programs.  Any of the other less utilized entries would also
> prefix with proj_.  Note the structure pointer returned by the new pj_init
> would have a pointer to PJ returned by proj_init.

Well, I still think there are issues of conflicting definitions for the PJ
structure, layering the initialization logic and so forth.  It could all be done
but would require substantial work, and care to avoid unnecessary
disturbance to applications.

> Any comments?

My main comment is that I'm sure this will all happen.  It is
certainly my intention.  But it doesn't seem like there is any
compelling rush to make these changes.  For the time being
the two libs haven't diverged that much, and it is relatively easy
to migrate selected pj_*.c files into the remotesensing.org version
as needed.   If I was to take some time on PROJ issues, I
would likely dig into some of the Krovak, prime meridian and
related problems that folks have been trying to get me to move
on.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From roger at opq.se  Wed Jan  4 02:47:01 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 04 Jan 2006 11:47:01 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <931f8ea90601031402r399d4c95y1956f14f755772d9@mail.gmail.com>
References: <s3ba4de8.028@dfg.ca.gov> <1136320001.6794.18.camel@shark.pacific>
	<931f8ea90601031402r399d4c95y1956f14f755772d9@mail.gmail.com>
Message-ID: <1136371622.12571.18.camel@acme.pacific>

On Tue, 2006-01-03 at 17:02 -0500, Frank Warmerdam wrote:
> Roger,
> 
> I got matching results on Linux and Windows:
> 
> cs2cs +proj=latlong +ellps=WGS84 +to +init=esri:2393
> 24d52.87822 60d12.21644
> 3382686.81      6678774.91 -24.59
> 
> I also verified this with the FWTools binaries for cs2cs.
> 
> Could you try cs2cs on each platform?  Then perhaps try
> the cs2cs that is part of the FWTools build?

I ran these through the cs2cs on windows that uses the exact same
dll/tool chain as my program and got the results (correct) as above. I
then changed my program to use the definitions from the esri file
direct, as in:

	toProj   = pj_init_plus("+proj=tmerc +lat_0=0 +lon_0=27 +k=1.000000 "
                                                "+x_0=3500000 +y_0=0
+ellps=intl "

"+towgs84=-90.7,-106.1,-119.2,4.09,0.218,-1.05,1.37 "
                                                "+units=m +no_def");

But I get the exact same difference on windows.

I have once again verified that the values (lat/long) given is the same
on both platforms (checked to 8 decimal places). The source code is, as
I have said, the same. Just the compiler and libs (math and all) are
different. I am using MSVC++ 6.0.

I am at a loss as to what I could do to effect these differences. cs2cs
and my app are both using a proj dll (the exact same one). And that
cs2cs seems to work.

s*i*...

> The cs2cs should be doing essentially the same thing as
> your program.

I looked at the cs2cs program to sort out how to use the C functions. I
would expect that it should be doing the EXACT same thing with proj.

-- 
Roger Oberholtzer
OPQ Systems AB




From martin.vermeer at hut.fi  Wed Jan  4 06:26:42 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Wed, 04 Jan 2006 16:26:42 +0200
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <1136371622.12571.18.camel@acme.pacific>
References: <s3ba4de8.028@dfg.ca.gov> <1136320001.6794.18.camel@shark.pacific>
	<931f8ea90601031402r399d4c95y1956f14f755772d9@mail.gmail.com>
	<1136371622.12571.18.camel@acme.pacific>
Message-ID: <1136384803.1835.8.camel@geo9.hut.fi>

On Wed, 2006-01-04 at 11:47 +0100, Roger Oberholtzer wrote:
> On Tue, 2006-01-03 at 17:02 -0500, Frank Warmerdam wrote:
> > Roger,
> > 
> > I got matching results on Linux and Windows:
> > 
> > cs2cs +proj=latlong +ellps=WGS84 +to +init=esri:2393
> > 24d52.87822 60d12.21644
> > 3382686.81      6678774.91 -24.59
> > 
> > I also verified this with the FWTools binaries for cs2cs.
> > 
> > Could you try cs2cs on each platform?  Then perhaps try
> > the cs2cs that is part of the FWTools build?
> 
> I ran these through the cs2cs on windows that uses the exact same
> dll/tool chain as my program and got the results (correct) as above. I
> then changed my program to use the definitions from the esri file
> direct, as in:
> 
> 	toProj   = pj_init_plus("+proj=tmerc +lat_0=0 +lon_0=27 +k=1.000000 "
>                                                 "+x_0=3500000 +y_0=0
> +ellps=intl "
> 
> "+towgs84=-90.7,-106.1,-119.2,4.09,0.218,-1.05,1.37 "
>                                                 "+units=m +no_def");
> 
> But I get the exact same difference on windows.
> 
> I have once again verified that the values (lat/long) given is the same
> on both platforms (checked to 8 decimal places). The source code is, as
> I have said, the same. Just the compiler and libs (math and all) are
> different. I am using MSVC++ 6.0.
> 
> I am at a loss as to what I could do to effect these differences. cs2cs
> and my app are both using a proj dll (the exact same one). And that
> cs2cs seems to work.
> 
> s*i*...
> 
> > The cs2cs should be doing essentially the same thing as
> > your program.
> 
> I looked at the cs2cs program to sort out how to use the C functions. I
> would expect that it should be doing the EXACT same thing with proj.

This may be a silly remark, but are you sure there aren't any UNIX
newlines left in some of your Windows files? I could imagine the
compiler / compiled programme to react weirdly to this (have sometimes
seen this).

- Martin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060104/868d45b1/attachment.sig>

From roger at opq.se  Wed Jan  4 07:03:43 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 04 Jan 2006 16:03:43 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows
In-Reply-To: <1136384803.1835.8.camel@geo9.hut.fi>
References: <s3ba4de8.028@dfg.ca.gov> <1136320001.6794.18.camel@shark.pacific>
	<931f8ea90601031402r399d4c95y1956f14f755772d9@mail.gmail.com>
	<1136371622.12571.18.camel@acme.pacific>
	<1136384803.1835.8.camel@geo9.hut.fi>
Message-ID: <1136387023.12571.33.camel@acme.pacific>

On Wed, 2006-01-04 at 16:26 +0200, Martin Vermeer wrote:
> On Wed, 2006-01-04 at 11:47 +0100, Roger Oberholtzer wrote:
> > On Tue, 2006-01-03 at 17:02 -0500, Frank Warmerdam wrote:
> > > Roger,
> > > 
> > > I got matching results on Linux and Windows:
> > > 
> > > cs2cs +proj=latlong +ellps=WGS84 +to +init=esri:2393
> > > 24d52.87822 60d12.21644
> > > 3382686.81      6678774.91 -24.59
> > > 
> > > I also verified this with the FWTools binaries for cs2cs.
> > > 
> > > Could you try cs2cs on each platform?  Then perhaps try
> > > the cs2cs that is part of the FWTools build?
> > 
> > I ran these through the cs2cs on windows that uses the exact same
> > dll/tool chain as my program and got the results (correct) as above. I
> > then changed my program to use the definitions from the esri file
> > direct, as in:
> > 
> > 	toProj   = pj_init_plus("+proj=tmerc +lat_0=0 +lon_0=27 +k=1.000000 "
> >                                                 "+x_0=3500000 +y_0=0
> > +ellps=intl "
> > 
> > "+towgs84=-90.7,-106.1,-119.2,4.09,0.218,-1.05,1.37 "
> >                                                 "+units=m +no_def");
> > 
> > But I get the exact same difference on windows.
> > 
> > I have once again verified that the values (lat/long) given is the same
> > on both platforms (checked to 8 decimal places). The source code is, as
> > I have said, the same. Just the compiler and libs (math and all) are
> > different. I am using MSVC++ 6.0.
> > 
> > I am at a loss as to what I could do to effect these differences. cs2cs
> > and my app are both using a proj dll (the exact same one). And that
> > cs2cs seems to work.
> > 
> > s*i*...
> > 
> > > The cs2cs should be doing essentially the same thing as
> > > your program.
> > 
> > I looked at the cs2cs program to sort out how to use the C functions. I
> > would expect that it should be doing the EXACT same thing with proj.
> 
> This may be a silly remark, but are you sure there aren't any UNIX
> newlines left in some of your Windows files? I could imagine the
> compiler / compiled programme to react weirdly to this (have sometimes
> seen this).

The program source is only Unix EOL. MSVC++ has never had a problem with
this. I wish it was something as simple to fix. We also do OS-9, which
has a third type of EOL and will only accept that in .h files. But MSVC
++ has this properly sorted.

Note that the application in question also uses geotrans as well as
local stuff, and they provide identical results on the two platforms. It
is only proj...

> 
> - Martin
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-- 
Roger Oberholtzer
OPQ Systems AB




From warmerdam at pobox.com  Wed Jan  4 10:26:19 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 4 Jan 2006 13:26:19 -0500
Subject: [Proj] Old problems
In-Reply-To: <200601041212.33218.gerald.evenden@verizon.net>
References: <200512311704.56111.gerald.evenden@verizon.net>
	<200601032225.51052.gerald.evenden@verizon.net>
	<931f8ea90601032009i2e50696eif61685211b8ebfa8@mail.gmail.com>
	<200601041212.33218.gerald.evenden@verizon.net>
Message-ID: <931f8ea90601041026s247ee356g8c002157b72d5a71@mail.gmail.com>

On 1/4/06, Gerald I. Evenden <gerald.evenden at verizon.net> wrote:
> The only other items I find are the non-projection projections geocentric,
> latlong and longlat.  Am I correct to this point?
>
> This leaves pj_init as the focus of compatibility issues.  Correct?  That is,
> as far as usage of proj4 and libproj4 there would be no changes other than
> what pj_init does and the 3 non-projections.
>
> Now assume that libproj4 has new entry points, proj_init, proj_fwd and
> proj_inv, and the initialized structure is PROJ and your requirements still
> have the pj_ series and structure PJ.  The structure PJ is now changed to
> something like:
>
> typedef struct PJconsts {
>        int     datum_type; /* PJD_UNKNOWN/3PARAM/7PARAM/GRIDSHIFT/WGS84 */
>         double  datum_params[7];
>         double  from_greenwich; /* prime meridian offset (in radians) */
>         int do_type; // where do_type selects latlong, longlat or geocentric
>         PROJ *libpj;
> } PJ;
>
> Your new pj_init is now rewritten using much of the code in libproj4's
> proj_init except that it checks to see if the non-projections are selected
> and bypasses calling proj_init with its input arguments and processes needed
> arguments to setup one of the three non-projections.  If a projection is
> needed then proj_init is selected and and the returned pointer is put into
> libpj.  I think the new pj_fwd and pj_inv are obviously modified.  Of course,
> pj_free needs mods as well.

Gerald,

Well, a few small complications include:
 o The need for the libpj structure even for non-projections to hold
    the ellipse information.
 o The issue of sharing the string parsing code.  Do we duplicate?

> If you gotta use +init, which I think should be modified to a DBMS SQL lookup,
> then use it in the modified pj_init.

I am agreeable to this being an "upper layer issue".

> The longer this issue is put off the greater the pain of correcting the
> problem is going to be.  I do think we need to bit the bullet and solve it
> once and for all.  Otherwise it remains a festering sore.

OK, I'm convinced.   I'm prepared to work on this in the evenings
in January.  Could you go ahead and rename the entry points and
structure for libproj4?  Then I'll proceed to alter a new generation of
the high level library to use it for all the projections work.

I'm reasonably convinced we will encounter some unanticipated
problems, but I'm sure we can address them as they come up.

Frank writes:
> would likely dig into some of the Krovak,

Gerald writes:
> What is the problem with Krovak?

I think it is related to the axis orientation.   I am *wanting* to
add +axis directives to the coordinate system description to
support different axis orientations instead of creating a new
projection type for alternate axes.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From werchowyna at epf.pl  Wed Jan  4 14:13:35 2006
From: werchowyna at epf.pl (Maciek Sieczka)
Date: Wed, 04 Jan 2006 23:13:35 +0100
Subject: Krovak fix (was: [Proj] Old problems)
In-Reply-To: <931f8ea90601041026s247ee356g8c002157b72d5a71@mail.gmail.com>
References: <200512311704.56111.gerald.evenden@verizon.net>
	<200601032225.51052.gerald.evenden@verizon.net>
	<931f8ea90601032009i2e50696eif61685211b8ebfa8@mail.gmail.com>
	<200601041212.33218.gerald.evenden@verizon.net>
	<931f8ea90601041026s247ee356g8c002157b72d5a71@mail.gmail.com>
Message-ID: <1136412816.10418.32.camel@localhost.localdomain>

On śro, 2006-01-04 at 13:26 -0500, Frank Warmerdam wrote:

> Frank writes:
> > would likely dig into some of the Krovak,
> 
> Gerald writes:
> > What is the problem with Krovak?
> 
> I think it is related to the axis orientation.   I am *wanting* to
> add +axis directives to the coordinate system description to
> support different axis orientations instead of creating a new
> projection type for alternate axes.

Frank,

Does that mean that Radim's workaround to support Slovak and Czech
coordinate systems
http://mpa.itc.it/radim/jtsk/PJ_krovak.c.patch
won't be neccessary anymore?

Maciek


--------------------
Szykuje się długa i mroźna zima? Nie pękaj! 
Hurtownia prezerwatyw  http://www.jak-pol.com.pl/



From warmerdam at pobox.com  Wed Jan  4 15:34:46 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 4 Jan 2006 18:34:46 -0500
Subject: Krovak fix (was: [Proj] Old problems)
In-Reply-To: <1136412816.10418.32.camel@localhost.localdomain>
References: <200512311704.56111.gerald.evenden@verizon.net>
	<200601032225.51052.gerald.evenden@verizon.net>
	<931f8ea90601032009i2e50696eif61685211b8ebfa8@mail.gmail.com>
	<200601041212.33218.gerald.evenden@verizon.net>
	<931f8ea90601041026s247ee356g8c002157b72d5a71@mail.gmail.com>
	<1136412816.10418.32.camel@localhost.localdomain>
Message-ID: <931f8ea90601041534q2bd00a95r73be959601bffa77@mail.gmail.com>

On 1/4/06, Maciek Sieczka <werchowyna at epf.pl> wrote:
> On śro, 2006-01-04 at 13:26 -0500, Frank Warmerdam wrote:
>
> > Frank writes:
> > > would likely dig into some of the Krovak,
> >
> > Gerald writes:
> > > What is the problem with Krovak?
> >
> > I think it is related to the axis orientation.   I am *wanting* to
> > add +axis directives to the coordinate system description to
> > support different axis orientations instead of creating a new
> > projection type for alternate axes.
>
> Frank,
>
> Does that mean that Radim's workaround to support Slovak and Czech
> coordinate systems
> http://mpa.itc.it/radim/jtsk/PJ_krovak.c.patch
> won't be neccessary anymore?

Maciek,

It is my intention that a generic solution would be instituted,
and then, presumably, that patch would not be required.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From roger at opq.se  Thu Jan  5 02:41:56 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Thu, 05 Jan 2006 11:41:56 +0100
Subject: [Proj] Finnish KKJ in proj 4.4.9 - Linux vs. Windows - SOLVED!
In-Reply-To: <1136316731.6794.14.camel@shark.pacific>
References: <1134400737.20841.55.camel@acme.pacific>
	<20051212210127.GA2276@geo9.hut.fi>
	<1134461756.31610.18.camel@acme.pacific>
	<1134464643.8808.13.camel@geo9.hut.fi>
	<1134470621.31610.80.camel@acme.pacific>
	<1134571447.17795.107.camel@acme.pacific>
	<1136293881.9764.32.camel@acme.pacific>
	<931f8ea90601031006s6ad26eayb6ad69ed2b64b70e@mail.gmail.com>
	<1136316731.6794.14.camel@shark.pacific>
Message-ID: <1136457716.17800.22.camel@acme.pacific>


My mistake:

I was not initializing the height value sent to the transform. The
assumption was that if it was used at all, it was a write-only value.
Bad assumption. On Linux, the value turned out to be 0.0, which is what
cs2cs also used when it was not specified. On Windows, it was non-zero.
However, due to the nature of the program stack, the value was
consistent (but not constant), so I did not see a random error, which
would have indicated an initialization problem.

I have now set the height to 0.0 and get the desired results on both
platforms. The height value I have comes from a D_GPS receiver (Trimble
Ag132), and so I think using it would probably introduce more error than
if it was not used. At some point I will test this theory.

Sorry for the inconvenience.

-- 
Roger Oberholtzer
OPQ Systems AB




From gerald.evenden at verizon.net  Sun Jan  8 19:50:36 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 08 Jan 2006 22:50:36 -0500
Subject: [Proj] New libproj4.3
Message-ID: <200601082250.36335.gerald.evenden@verizon.net>

A new level libproj4.3 is almost done.  All the code has been converted with 
only a few touchups for the man3 file.  All module names are in the proj_ 
prefix and nearly all lib_proj.h material is either prefixed with proj_ or 
PROJ_.

Note: the use of .3 on the name is because .1 is basically the old PROJ4 
system and .2 is the previous basic libproj4 release.

The pdf documentation will take a little longer to convert to 4.3.

I was going to put shared libraries into the makefile but after spending more 
than two hours on the net as well as personal manuals I cannot find any 
useful documentation for generating shared libraries with 'make'.  
Interesting, given the popularity and usefulness of the operation.
-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From roger at opq.se  Wed Jan 11 06:31:31 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 11 Jan 2006 15:31:31 +0100
Subject: [Proj] proj and Dutch RD
Message-ID: <1136989892.11608.43.camel@acme.pacific>


I am trying to use proj on a Dutch project using 'RD'. I have
encountered a problem.

I am trying the command:

	cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere
+lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
+x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs

This is based on the definition is the 'esri' file for item 28922.

The X/Y values I get are not correct (according to our contact). I have
attached a small set of values, which contains:

	latitude and longitude in degrees (WGS84)

	easting and northing according to our contact

	easting, northing and altitude from cs2cs with command line shown above

I have stuck to cs2cs for this to eliminate any programming error on my
part (other than the command line).

I have a configuration file for this from my contact. It looks like
this, which is pretty much what I wave on the command line. 

	PROJCS["Rijksdriehoekstelsel_New",
	GEOGCS["GCS_Amersfoort",
	DATUM["D_Amersfoort",
	SPHEROID["Bessel_1841",6377397.155,299.1528128]],
	PRIMEM["Greenwich",0],
	UNIT["Degree",0.0174532925199432955]],
	PROJECTION["Double_Stereographic"],
	PARAMETER["Scale_Factor",0.9999079],
	PARAMETER["False_Easting",155000],
	PARAMETER["False_Northing",463000],
	PARAMETER["Central_Meridian",5.38763888888889],
	PARAMETER["Latitude_Of_Origin",52.15616055555555],
	UNIT["Meter",1]]

The 'PARAMETER' items match my command line. I am not sure about the
others, like the DEGREE unit and the Bessel values.




-- 
Roger Oberholtzer
OPQ Systems AB

-------------- next part --------------
cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs


52.0556731913	5.8994491135	190098.79	451944.855	190099.05	451880.05 698.54
52.0556731747	5.8994491135	190098.79	451944.853	190099.05	451880.05 698.54
52.0556731747	5.8994491302	190098.791	451944.853	190099.05	451880.05 698.54
52.055673158	5.8994491302	190098.791	451944.851	190099.05	451880.04 698.54
52.0556731413	5.8994491302	190098.791	451944.849	190099.05	451880.04 698.54
52.0556731413	5.8994491468	190098.792	451944.849	190099.05	451880.04 698.54
52.0556731247	5.8994491468	190098.792	451944.847	190099.05	451880.04 698.54
52.055673108	5.8994491468	190098.792	451944.845	190099.05	451880.04 698.54
52.055673108	5.8994491635	190098.793	451944.845	190099.05	451880.04 698.54
52.0556730913	5.8994491635	190098.793	451944.844	190099.05	451880.04 698.54
52.0556730747	5.8994491635	190098.793	451944.842	190099.05	451880.04 698.54
52.0556730747	5.8994491802	190098.794	451944.842	190099.05	451880.04 698.54
52.0556730747	5.8994491802	190098.794	451944.842	190099.05	451880.04 698.54
52.055673058	5.8994491802	190098.794	451944.84	190099.05	451880.03 698.54
52.0556730413	5.8994491802	190098.794	451944.838	190099.05	451880.03 698.54
52.0556730413	5.8994491969	190098.795	451944.838	190099.05	451880.03 698.54
52.0556730247	5.8994491969	190098.795	451944.836	190099.05	451880.03 698.54
52.055673008	5.8994491969	190098.795	451944.834	190099.05	451880.03 698.54
52.055673008	5.8994492135	190098.797	451944.834	190099.05	451880.03 698.54
52.0556729913	5.8994492135	190098.797	451944.832	190099.05	451880.03 698.54
52.0556723746	5.8994494969	190098.816	451944.764	190099.07	451879.96 698.54
52.0556723746	5.8994495136	190098.818	451944.764	190099.07	451879.96 698.54
52.0556723579	5.8994495136	190098.818	451944.762	190099.07	451879.96 698.54

From martin.vermeer at hut.fi  Wed Jan 11 07:14:01 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Wed, 11 Jan 2006 17:14:01 +0200
Subject: [Proj] proj and Dutch RD
In-Reply-To: <1136989892.11608.43.camel@acme.pacific>
References: <1136989892.11608.43.camel@acme.pacific>
Message-ID: <1136992442.18690.5.camel@geo9.hut.fi>

On Wed, 2006-01-11 at 15:31 +0100, Roger Oberholtzer wrote:
> I am trying to use proj on a Dutch project using 'RD'. I have
> encountered a problem.
> 
> I am trying the command:
> 
> 	cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere
> +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
> +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs
> 
> This is based on the definition is the 'esri' file for item 28922.
> 
> The X/Y values I get are not correct (according to our contact). I have
> attached a small set of values, which contains:
> 
> 	latitude and longitude in degrees (WGS84)
> 
> 	easting and northing according to our contact
> 
> 	easting, northing and altitude from cs2cs with command line shown above
> 
> I have stuck to cs2cs for this to eliminate any programming error on my
> part (other than the command line).
> 
> I have a configuration file for this from my contact. It looks like
> this, which is pretty much what I wave on the command line. 
> 
> 	PROJCS["Rijksdriehoekstelsel_New",
> 	GEOGCS["GCS_Amersfoort",
> 	DATUM["D_Amersfoort",
> 	SPHEROID["Bessel_1841",6377397.155,299.1528128]],
> 	PRIMEM["Greenwich",0],
> 	UNIT["Degree",0.0174532925199432955]],
> 	PROJECTION["Double_Stereographic"],
> 	PARAMETER["Scale_Factor",0.9999079],
> 	PARAMETER["False_Easting",155000],
> 	PARAMETER["False_Northing",463000],
> 	PARAMETER["Central_Meridian",5.38763888888889],
> 	PARAMETER["Latitude_Of_Origin",52.15616055555555],
> 	UNIT["Meter",1]]
> 
> The 'PARAMETER' items match my command line. I am not sure about the
> others, like the DEGREE unit and the Bessel values.

Try

cs2cs -r +proj=latlong +ellps=bessel +to +proj=stere
+lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
+x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs

I assume that your given lat, long coordinates are already on Bessel ;-)

- Martin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060111/43700221/attachment.sig>

From gerald.evenden at verizon.net  Wed Jan 11 07:56:45 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 11 Jan 2006 10:56:45 -0500
Subject: [Proj] proj and Dutch RD
In-Reply-To: <1136989892.11608.43.camel@acme.pacific>
References: <1136989892.11608.43.camel@acme.pacific>
Message-ID: <200601111056.45437.gerald.evenden@verizon.net>

On Wednesday 11 January 2006 09:31 am, Roger Oberholtzer wrote:
> I am trying to use proj on a Dutch project using 'RD'. I have
> encountered a problem.
>
> I am trying the command:
>
> 	cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere
> +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
> +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs
	...
	Seeing the "Double Stereographic" below I feel that you should be using
+proj=sterea rather than than the American or Snyder stere.

> 	PROJECTION["Double_Stereographic"],
> 	PARAMETER["Scale_Factor",0.9999079],
> 	PARAMETER["False_Easting",155000],
> 	PARAMETER["False_Northing",463000],
> 	PARAMETER["Central_Meridian",5.38763888888889],
> 	PARAMETER["Latitude_Of_Origin",52.15616055555555],
> 	UNIT["Meter",1]]
>
> The 'PARAMETER' items match my command line. I am not sure about the
> others, like the DEGREE unit and the Bessel values.

-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From roger at opq.se  Wed Jan 11 08:08:49 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 11 Jan 2006 17:08:49 +0100
Subject: [Proj] proj and Dutch RD
In-Reply-To: <1136989892.11608.43.camel@acme.pacific>
References: <1136989892.11608.43.camel@acme.pacific>
Message-ID: <1136995729.11608.66.camel@acme.pacific>

xOn Wed, 2006-01-11 at 17:14 +0200, Martin Vermeer wrote: 
> On Wed, 2006-01-11 at 15:31 +0100, Roger Oberholtzer wrote:
> > I am trying to use proj on a Dutch project using 'RD'. I have
> > encountered a problem.
> > 
> > I am trying the command:
> > 
> > 	cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere
> > +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
> > +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs
> > 
> > This is based on the definition is the 'esri' file for item 28922.
> > 
> > The X/Y values I get are not correct (according to our contact). I have
> > attached a small set of values, which contains:
> > 
> > 	latitude and longitude in degrees (WGS84)
> > 
> > 	easting and northing according to our contact
> > 
> > 	easting, northing and altitude from cs2cs with command line shown above
> > 
> > I have stuck to cs2cs for this to eliminate any programming error on my
> > part (other than the command line).
> > 
> > I have a configuration file for this from my contact. It looks like
> > this, which is pretty much what I wave on the command line. 
> > 
> > 	PROJCS["Rijksdriehoekstelsel_New",
> > 	GEOGCS["GCS_Amersfoort",
> > 	DATUM["D_Amersfoort",
> > 	SPHEROID["Bessel_1841",6377397.155,299.1528128]],
> > 	PRIMEM["Greenwich",0],
> > 	UNIT["Degree",0.0174532925199432955]],
> > 	PROJECTION["Double_Stereographic"],
> > 	PARAMETER["Scale_Factor",0.9999079],
> > 	PARAMETER["False_Easting",155000],
> > 	PARAMETER["False_Northing",463000],
> > 	PARAMETER["Central_Meridian",5.38763888888889],
> > 	PARAMETER["Latitude_Of_Origin",52.15616055555555],
> > 	UNIT["Meter",1]]
> > 
> > The 'PARAMETER' items match my command line. I am not sure about the
> > others, like the DEGREE unit and the Bessel values.
> 
> Try
> 
> cs2cs -r +proj=latlong +ellps=bessel +to +proj=stere
> +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
> +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs
> 
> I assume that your given lat, long coordinates are already on Bessel ;-)

They are WGS84 values from a Trimble GPS. Now I am confused. When doing
a KKJ conversion (Finland), I had to specify the source lat/long as
+ellps=wgs84. But your spec pus the values within 0.3 meters of the
target. Hum...


-- 
Roger Oberholtzer
OPQ Systems AB




From roger at opq.se  Wed Jan 11 08:17:42 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 11 Jan 2006 17:17:42 +0100
Subject: [Proj] proj and Dutch RD
In-Reply-To: <200601111056.45437.gerald.evenden@verizon.net>
References: <1136989892.11608.43.camel@acme.pacific>
	<200601111056.45437.gerald.evenden@verizon.net>
Message-ID: <1136996263.11608.74.camel@acme.pacific>

On Wed, 2006-01-11 at 10:56 -0500, Gerald I. Evenden wrote:
> On Wednesday 11 January 2006 09:31 am, Roger Oberholtzer wrote:
> > I am trying to use proj on a Dutch project using 'RD'. I have
> > encountered a problem.
> >
> > I am trying the command:
> >
> > 	cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere
> > +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
> > +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs
> 	...
> 	Seeing the "Double Stereographic" below I feel that you should be using
> +proj=sterea rather than than the American or Snyder stere.

If I use sterea, and set the input ellipse to bessel rather than wgs84,
my calculated values are almost exactly the same (> 0.001 meters error).
Yeah!

-- 
Roger Oberholtzer
OPQ Systems AB




From gerald.evenden at verizon.net  Wed Jan 11 09:06:18 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 11 Jan 2006 12:06:18 -0500
Subject: [Proj] proj and Dutch RD
In-Reply-To: <1136996263.11608.74.camel@acme.pacific>
References: <1136989892.11608.43.camel@acme.pacific>
	<200601111056.45437.gerald.evenden@verizon.net>
	<1136996263.11608.74.camel@acme.pacific>
Message-ID: <200601111206.19040.gerald.evenden@verizon.net>

On Wednesday 11 January 2006 11:17 am, Roger Oberholtzer wrote:
> On Wed, 2006-01-11 at 10:56 -0500, Gerald I. Evenden wrote:
> > On Wednesday 11 January 2006 09:31 am, Roger Oberholtzer wrote:
> > > I am trying to use proj on a Dutch project using 'RD'. I have
> > > encountered a problem.
> > >
> > > I am trying the command:
> > >
> > > 	cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere
> > > +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
> > > +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs
> >
> > 	...
> > 	Seeing the "Double Stereographic" below I feel that you should be using
> > +proj=sterea rather than than the American or Snyder stere.
>
> If I use sterea, and set the input ellipse to bessel rather than wgs84,
> my calculated values are almost exactly the same (> 0.001 meters error).
> Yeah!

Given the following script:

vala=" +ellps=WGS84 +proj=stere \
+lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 \
+x_0=155000 +y_0=463000"
valb=" +ellps=WGS84 +proj=sterea \
+lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 \
+x_0=155000 +y_0=463000"
cat <<EOF >data
5.38763888888889 52.15616055555555 at the origin
5.88763888888889 52.65616055555555 1/2 degree from origin
6.38763888888889 53.15616055555555 1 degree from origin
EOF
echo "using Snyder Stereographic"
./lproj $vala data
echo "using Double Stereographic"
./lproj $valb data

where the test values are at the center of the projection and intervals of 1/2 
degree and 1 degree (in both latitude and longitude) from the origin.  The 
script generates the following output:

using Snyder Stereographic
155000.00       463000.00 at the origin
188832.98       518750.23 1/2 degree from origin
221895.96       574738.50 1 degree from origin
using Double Stereographic
155000.00       463000.00 at the origin
188832.02       518749.72 1/2 degree from origin
221892.14       574736.46 1 degree from origin

Note that there is no difference at the center or projection origin but the 
projections differ by several meters at a distance of 1 degree from the 
origin.

In your case, where you are datum shifting using the wrong but same  
projection in inverse/forward mode, you would probably produce minimal error.  
You could have probably used Transverse Mercator and come up with pretty much 
the same values.

What I am suggesting is that you are setting up a bad habit of referring to 
the incorrect projection for a certain area.

-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From cjmce at lsu.edu  Wed Jan 11 09:20:07 2006
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Wed, 11 Jan 2006 11:20:07 -0600
Subject: [Proj] proj and Dutch RD
Message-ID: <OF374187CA.C551B66B-ON862570F3.005F39A5-862570F3.005F39C9@lsu.edu>





Mr. Evenden said:

"What I am suggesting is that you are setting up a bad habit of referring
to the incorrect projection for a certain area."

I totally agree.  Such practices have led to financially castastropic goofs
in past decades; some of them are quite infamous.

Clifford J. Mugnier
Chief of Geodesy and
Associate Director,
CENTER FOR GEOINFORMATICS
Department of Civil Engineering
CEBA 3223A
LOUISIANA STATE UNIVERSITY
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic]
Voice and Facsimile:  (225) 578-4474 [Research]
======================================================
http://www.asprs.org/resources/GRIDS/
http://www.cee.lsu.edu/facultyStaff/mugnier/index.html
======================================================




From EMiller at dfg.ca.gov  Wed Jan 11 10:09:39 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Wed, 11 Jan 2006 10:09:39 -0800
Subject: [Proj] proj and Dutch RD
Message-ID: <s3c4d97e.085@dfg.ca.gov>

Here's a source listing 3-parameter values for transforming between WGS84 and RD: http://kartoweb.itc.nl/geometrics/Reference%20surfaces/DATUM.txt

"""
Rijks Driehoeksmeting=Bessel 1841,-593,-26,-478,Netherlands
"""

I've no idea if the signs needs to be changed or what the source is...  Caveat lector!

Theoretically you can use the +towgs84 argument to apply the datum transformation.

>>> roger at opq.se 1/11/2006 8:17 AM >>>
On Wed, 2006-01-11 at 10:56 -0500, Gerald I. Evenden wrote:
> On Wednesday 11 January 2006 09:31 am, Roger Oberholtzer wrote:
> > I am trying to use proj on a Dutch project using 'RD'. I have
> > encountered a problem.
> >
> > I am trying the command:
> >
> > 	cs2cs -r +proj=latlong +ellps=WGS84 +to +proj=stere
> > +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079
> > +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs
> 	...
> 	Seeing the "Double Stereographic" below I feel that you should be using
> +proj=sterea rather than than the American or Snyder stere.

If I use sterea, and set the input ellipse to bessel rather than wgs84,
my calculated values are almost exactly the same (> 0.001 meters error).
Yeah!

-- 
Roger Oberholtzer
OPQ Systems AB


_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From martin.vermeer at hut.fi  Wed Jan 11 11:32:33 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Wed, 11 Jan 2006 21:32:33 +0200
Subject: [Proj] proj and Dutch RD
In-Reply-To: <s3c4d97e.085@dfg.ca.gov>
References: <s3c4d97e.085@dfg.ca.gov>
Message-ID: <20060111193232.GA21689@geo9.hut.fi>

On Wed, Jan 11, 2006 at 10:09:39AM -0800, Eric Miller wrote:
> Here's a source listing 3-parameter values for transforming between WGS84 and RD: http://kartoweb.itc.nl/geometrics/Reference%20surfaces/DATUM.txt
> 
> """
> Rijks Driehoeksmeting=Bessel 1841,-593,-26,-478,Netherlands
> """
> 
> I've no idea if the signs needs to be changed or what the source is...  Caveat lector!
> 
> Theoretically you can use the +towgs84 argument to apply the datum transformation.

Yes of course... you need the correct translation vector. The Bessel
ellipsoid is non-geocentric!

Forget my suggestion of using bessel as the 'from' ellipsoid. It should
be wgs84 with proper shift added.

- Martin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060111/877a324a/attachment.sig>

From roger at opq.se  Wed Jan 11 11:57:00 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 11 Jan 2006 20:57:00 +0100
Subject: [Proj] proj and Dutch RD
In-Reply-To: <OF374187CA.C551B66B-ON862570F3.005F39A5-862570F3.005F39C9@lsu.edu>
References: <OF374187CA.C551B66B-ON862570F3.005F39A5-862570F3.005F39C9@lsu.edu>
Message-ID: <1137009420.9588.10.camel@shark.pacific>

On Wed, 2006-01-11 at 11:20 -0600, Clifford J Mugnier wrote:
> 
> 
> 
> Mr. Evenden said:
> 
> "What I am suggesting is that you are setting up a bad habit of referring
> to the incorrect projection for a certain area."
> 
> I totally agree.  Such practices have led to financially castastropic goofs
> in past decades; some of them are quite infamous.

This seemed to be a disconnected response (I have not seen Mr Evenden's
mail). I did make a mistake and wrote Dutch when I meant the
Netherlands. I did not see it until it was posted. Sorry. But the
projection in question is still RD New.

> 
> Clifford J. Mugnier
> Chief of Geodesy and
> Associate Director,
> CENTER FOR GEOINFORMATICS
> Department of Civil Engineering
> CEBA 3223A
> LOUISIANA STATE UNIVERSITY
> Baton Rouge, LA  70803
> Voice and Facsimile:  (225) 578-8536 [Academic]
> Voice and Facsimile:  (225) 578-4474 [Research]
> ======================================================
> http://www.asprs.org/resources/GRIDS/
> http://www.cee.lsu.edu/facultyStaff/mugnier/index.html
> ======================================================
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From roger at opq.se  Wed Jan 11 12:21:08 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 11 Jan 2006 21:21:08 +0100
Subject: [Proj] proj and Dutch RD
In-Reply-To: <20060111193232.GA21689@geo9.hut.fi>
References: <s3c4d97e.085@dfg.ca.gov>  <20060111193232.GA21689@geo9.hut.fi>
Message-ID: <1137010868.9588.16.camel@shark.pacific>

On Wed, 2006-01-11 at 21:32 +0200, Martin Vermeer wrote:
> On Wed, Jan 11, 2006 at 10:09:39AM -0800, Eric Miller wrote:
> > Here's a source listing 3-parameter values for transforming between WGS84 and RD: http://kartoweb.itc.nl/geometrics/Reference%20surfaces/DATUM.txt
> > 
> > """
> > Rijks Driehoeksmeting=Bessel 1841,-593,-26,-478,Netherlands
> > """
> > 
> > I've no idea if the signs needs to be changed or what the source is...  Caveat lector!
> > 
> > Theoretically you can use the +towgs84 argument to apply the datum transformation.
> 
> Yes of course... you need the correct translation vector. The Bessel
> ellipsoid is non-geocentric!
> 
> Forget my suggestion of using bessel as the 'from' ellipsoid. It should
> be wgs84 with proper shift added.

You lost me here. I thought if the GPS receiver was set to wgs84 and not
changed, the description I would use for the source long/lats (from the
receiver) would never change. I would only need to specify the various
target projections. But I find myself using one desctiption of the
source lat/longs when doing KKJ for Finland, and a different definition
of the source when doing RD projections for the Netherlands. (Not
Holland as the subject indicated.) I seem to be missing something. Or a
source of lat/longs is not as described.

> 
> - Martin

> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From EMiller at dfg.ca.gov  Wed Jan 11 12:43:13 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Wed, 11 Jan 2006 12:43:13 -0800
Subject: [Proj] proj and Dutch RD
Message-ID: <s3c4fd79.006@dfg.ca.gov>

I think Martin's comment is a little to brief.

Your source coordinate system is geodetic coordinates using the WGS84 Datum (implies WGS84 ellipsoid)
In cs2cs terms:  +proj=latlong +datum=WGS84

Your destination coordinate system is RD (new)
In cs2cs terms: +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +towgs84=593,26,478

I'm not sure about the signs for the towgs84 parameters (dx,dy,dz), maybe they're supposed to be negative.  Anyway, the +towgs84 tells cs2cs how to transform the WGS84 coordinates (in XYZ space) to whatever the output datum for RD is.  The +towgs84 or +datum for a different target coordinate systems will likely be different.  But, your source definition would stay the same.  If you have some reference coordinates, you can probably work out whether the towgs84 numbers are supposed to be positive or negative (provided those are good values).

Clear as mud?

>>> Roger Oberholtzer <roger at opq.se> 1/11/2006 12:21 PM >>>
On Wed, 2006-01-11 at 21:32 +0200, Martin Vermeer wrote:
> On Wed, Jan 11, 2006 at 10:09:39AM -0800, Eric Miller wrote:
> > Here's a source listing 3-parameter values for transforming between WGS84 and RD: http://kartoweb.itc.nl/geometrics/Reference%20surfaces/DATUM.txt 
> > 
> > """
> > Rijks Driehoeksmeting=Bessel 1841,-593,-26,-478,Netherlands
> > """
> > 
> > I've no idea if the signs needs to be changed or what the source is...  Caveat lector!
> > 
> > Theoretically you can use the +towgs84 argument to apply the datum transformation.
> 
> Yes of course... you need the correct translation vector. The Bessel
> ellipsoid is non-geocentric!
> 
> Forget my suggestion of using bessel as the 'from' ellipsoid. It should
> be wgs84 with proper shift added.

You lost me here. I thought if the GPS receiver was set to wgs84 and not
changed, the description I would use for the source long/lats (from the
receiver) would never change. I would only need to specify the various
target projections. But I find myself using one desctiption of the
source lat/longs when doing KKJ for Finland, and a different definition
of the source when doing RD projections for the Netherlands. (Not
Holland as the subject indicated.) I seem to be missing something. Or a
source of lat/longs is not as described.

> 
> - Martin

> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj 

_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From martin.vermeer at hut.fi  Wed Jan 11 14:17:46 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Thu, 12 Jan 2006 00:17:46 +0200
Subject: [Proj] proj and Dutch RD
In-Reply-To: <s3c4fd79.006@dfg.ca.gov>
References: <s3c4fd79.006@dfg.ca.gov>
Message-ID: <20060111221746.GA22702@geo9.hut.fi>

On Wed, Jan 11, 2006 at 12:43:13PM -0800, Eric Miller wrote:
> I think Martin's comment is a little to brief.
> 
> Your source coordinate system is geodetic coordinates using the WGS84 Datum (implies WGS84 ellipsoid)
> In cs2cs terms:  +proj=latlong +datum=WGS84
> 
> Your destination coordinate system is RD (new)
> In cs2cs terms: +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +towgs84=593,26,478
> 
> I'm not sure about the signs for the towgs84 parameters (dx,dy,dz), maybe they're supposed to be negative.  Anyway, the +towgs84 tells cs2cs how to transform the WGS84 coordinates (in XYZ space) to whatever the output datum for RD is.  The +towgs84 or +datum for a different target coordinate systems will likely be different.  But, your source definition would stay the same.  If you have some reference coordinates, you can probably work out whether the towgs84 numbers are supposed to be positive or negative (provided those are good values).
> 
> Clear as mud?

This is precisely what I meant. Thanks!

So play around with those +towgs84 parms, until you can reproduce your
reference values. There must be decimetre precision shift values
somewhere too, as I know the triangulation to be that precise. They must
know at the cadastral survey in Apeldoorn. Here is their on-line
transformer:

https://RDinfo.kadaster.nl/rd/transformator.html

Values that I found on the Internet (Molodensky-Badekas, i.e., relative
to an origin in the Netherlands) :

-593.16
 -26.15
-478.54

(Don't ask about the minus signs ;-)

- Martin
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060112/9bf84902/attachment.sig>

From paul-grass at stjohnspoint.co.uk  Wed Jan 11 14:49:43 2006
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Wed, 11 Jan 2006 22:49:43 +0000
Subject: [Proj] proj and Dutch RD
Message-ID: <43C58B87.6090607@stjohnspoint.co.uk>


Martin Vermeer wrote:
> On Wed, Jan 11, 2006 at 10:09:39AM -0800, Eric Miller wrote:
> 
>>Here's a source listing 3-parameter values for transforming between WGS84 and RD: http://kartoweb.itc.nl/geometrics/Reference%20surfaces/DATUM.txt
>>
>>"""
>>Rijks Driehoeksmeting=Bessel 1841,-593,-26,-478,Netherlands
>>"""
>>
>>I've no idea if the signs needs to be changed or what the source is...  Caveat lector!
>>
>>Theoretically you can use the +towgs84 argument to apply the datum transformation.
> 
> 
> Yes of course... you need the correct translation vector. The Bessel
> ellipsoid is non-geocentric!
> 
> Forget my suggestion of using bessel as the 'from' ellipsoid. It should
> be wgs84 with proper shift added.

GRASS uses
towgs84=565.036,49.914,465.839,-0.4094,0.3597,-1.86854,-4.0772 for the
Netherlands
(http://freegis.org/cgi-bin/viewcvs.cgi/*checkout*/grass6/lib/gis/datumtransform.table)

Perhaps useful.


From j.l.h.hartmann at uva.nl  Wed Jan 11 09:56:15 2006
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Wed, 11 Jan 2006 18:56:15 +0100
Subject: [Proj] proj and Dutch RD
In-Reply-To: <200601111206.19040.gerald.evenden@verizon.net>
References: <1136989892.11608.43.camel@acme.pacific>	<200601111056.45437.gerald.evenden@verizon.net>	<1136996263.11608.74.camel@acme.pacific>
	<200601111206.19040.gerald.evenden@verizon.net>
Message-ID: <43C546BF.8040707@uva.nl>

Gerald I. Evenden wrote:

> 
> 
> Given the following script:
> 
> vala=" +ellps=WGS84 +proj=stere \
> +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 \
> +x_0=155000 +y_0=463000"
> valb=" +ellps=WGS84 +proj=sterea \
> +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 \
> +x_0=155000 +y_0=463000"
> cat <<EOF >data
> 5.38763888888889 52.15616055555555 at the origin
> 5.88763888888889 52.65616055555555 1/2 degree from origin
> 6.38763888888889 53.15616055555555 1 degree from origin
> EOF
> echo "using Snyder Stereographic"
> ./lproj $vala data
> echo "using Double Stereographic"
> ./lproj $valb data
> 
> where the test values are at the center of the projection and intervals of 1/2 
> degree and 1 degree (in both latitude and longitude) from the origin.  The 
> script generates the following output:
> 
> using Snyder Stereographic
> 155000.00       463000.00 at the origin
> 188832.98       518750.23 1/2 degree from origin
> 221895.96       574738.50 1 degree from origin
> using Double Stereographic
> 155000.00       463000.00 at the origin
> 188832.02       518749.72 1/2 degree from origin
> 221892.14       574736.46 1 degree from origin
> 
> Note that there is no difference at the center or projection origin but the 
> projections differ by several meters at a distance of 1 degree from the 
> origin.
> 

Yes, the PROJ-definition for the Dutch coordinate system (RD) should be 
"sterea", not "stere". The problem is that the EPSG data-file in the 
PROJ-distribution has "stere" for RD (epsg:28992), although he original 
EPSG database has the correct definition: Oblique Stereographic. 
Attached two images with projections from latlon to RD, giving the 
differences between PROJ's "stere"/"sterea" projections and the official 
Dutch converter ad http://www.rdnap.nl.

Jan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dutch_sterea.gif
Type: image/gif
Size: 16661 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060111/5ec46c40/attachment.gif>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dutch_stere.gif
Type: image/gif
Size: 16901 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060111/5ec46c40/attachment-0001.gif>

From ovv at hetnet.nl  Wed Jan 11 21:57:30 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 12 Jan 2006 06:57:30 +0100
Subject: [Proj] proj and Dutch RD
In-Reply-To: <1136989892.11608.43.camel@acme.pacific>
Message-ID: <BFEBAE5A.647D%ovv@hetnet.nl>

The transformation and projection parameters for the Dutch RD2000 (RD New)
projection can be found on the website of the Dutch Cadastre:
http://www.rdnap.nl

Two publications are important:

"Het stelsel van de Rijksdriehoeksmeting en het European Terrestrial
Reference System 1989 - Gebruik en definitie",
Kadaster
http://www.rdnap.nl/download/rdnaptrans.pdf

"Coördinaattransformaties en kaartprojecties - Formules en parameters",
MD-rapportnummer: MDGAP - 2000.31,
Ministerie van Verkeer en Waterstaat, Meetkundige Dienst
http://www.rdnap.nl/download/coor-en-proj.zip

>From these publications you can derive the following:

Transformation from WGS84 to Bessel 1841:
dx=-565.036; dy=-49.914; dz=-465.839; rx=-0.40939; ry=0.35971; rz=-1.86849;
ds=-4.0772;
Published test point:
lat=52d 10m 42.7005s; lon=5d 48m 36.5479s; h=90.865;
My transformation: 
lat = 52d 10m 46.270042s, lon = 05d 48m 38.339038s, h = 47.5825 m
The text says: lat = 52d 10m 46.2700s, lon = 05d 48m 38.3390s, h = 47.582 m

Transformation from Bessel 1841 to WGS84:
dx=565.040; dy=49.910; dz=465.840; rx=0.40939; ry=-0.35971; rz=1.86849;
ds=4.0772;
Note the very small asymmetry in the to-from parameters!
Published test point:
lat=52d 10m 46.2700s; lon=5d 48m 38.3390s; h=47.582;
My transformation: 
lat = 52d 10m 42.700443s, lon = 05d 48m 36.547865s, h = 90.8649 m
The text says: lat = 52d 10m 42.7005s, lon = 5d 48m 36.5479s, h = 90.865

The RD projection is the double stereographic projection (sterea in
PROJ/libproj).
Central Point: Amersfoort:
52.156160556 N, 5.387638889 E, h = 0.0 m
or in dms: 52d 09m 22.178s N, 05d 23m 15.500 E
Double stereographic projection, k = 0.9999079; x0=155000; y0=463000;
x,y in meters.

Published test point:

lat=52d 12m 34.567s; lon=4d 23m 45.678s; on Bessel 1841 ellipsoid
lat0=52d 9m 22.178s; lon0=5d 23m 15.500;
x0=155000; y0=463000; k0=0.9999079;
I got with my version of sterea: x = 87232.21066, y = 469408.51174
The text ("Coördinaattransformaties en kaartprojecties") says:
x = 87232.211, y = 469408.512 m
The text says that these figures are calculated with the polynomial
expression for the double stereographic projection, whereas (lib)proj uses
the exact solution. The RD series development has a stated accuracy of 0.2
mm or better. Furthermore the text notes that these figures are before grid
interpolation. Therefore some differences can be expected using the official
transformation tool RDNAPTRANS, which uses grid corrections.

> GRASS uses
> towgs84=565.036,49.914,465.839,-0.4094,0.3597,-1.86854,-4.0772
How amusing...

It can be advised to update applications and data files according to the
published data.
I am no representative of the Dutch Kadaster, so the data mentioned above
cannot be used for any legal purposes.
But you can verify the data yourself; references are given above.











From roger at opq.se  Wed Jan 11 23:29:48 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Thu, 12 Jan 2006 08:29:48 +0100
Subject: [Proj] proj and Dutch RD
In-Reply-To: <20060111221746.GA22702@geo9.hut.fi>
References: <s3c4fd79.006@dfg.ca.gov>  <20060111221746.GA22702@geo9.hut.fi>
Message-ID: <1137050988.28660.9.camel@acme.pacific>

On Thu, 2006-01-12 at 00:17 +0200, Martin Vermeer wrote:
> On Wed, Jan 11, 2006 at 12:43:13PM -0800, Eric Miller wrote:
> > I think Martin's comment is a little to brief.
> > 
> > Your source coordinate system is geodetic coordinates using the WGS84 Datum (implies WGS84 ellipsoid)
> > In cs2cs terms:  +proj=latlong +datum=WGS84
> > 
> > Your destination coordinate system is RD (new)
> > In cs2cs terms: +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +towgs84=593,26,478
> > 
> > I'm not sure about the signs for the towgs84 parameters (dx,dy,dz), maybe they're supposed to be negative.  Anyway, the +towgs84 tells cs2cs how to transform the WGS84 coordinates (in XYZ space) to whatever the output datum for RD is.  The +towgs84 or +datum for a different target coordinate systems will likely be different.  But, your source definition would stay the same.  If you have some reference coordinates, you can probably work out whether the towgs84 numbers are supposed to be positive or negative (provided those are good values).
> > 
> > Clear as mud?
> 
> This is precisely what I meant. Thanks!

But the 'fix' was to change the description of the source lat/longs from

	+proj=latlong +ellps=WGS84
to
	+proj=latlong +ellps=bessel

After the '+to' I always had +ellps=bessel to describe the desired
result. That was not changed.

Confusion here continues...

> 
> So play around with those +towgs84 parms, until you can reproduce your
> reference values. There must be decimetre precision shift values
> somewhere too, as I know the triangulation to be that precise. They must
> know at the cadastral survey in Apeldoorn. Here is their on-line
> transformer:
> 
> https://RDinfo.kadaster.nl/rd/transformator.html

I have looked at that. In summary, the conversion that does the best
(almost identical values) is:

+proj=latlong +ellps=bessel +to
+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs

The one that was off by at least 60 meters was:

+proj=latlong +ellps=wgs84 +to
+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs

-- 
Roger Oberholtzer
OPQ Systems AB




From roger at opq.se  Thu Jan 12 01:20:46 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Thu, 12 Jan 2006 10:20:46 +0100
Subject: [Proj] proj and geotrans global variables
Message-ID: <1137057646.28660.34.camel@acme.pacific>


I have had a need to make a statically linked application on Linux.
Granted this is a one-off as we usually only use dynamic linking. But I
have encountered a problem:

The application should have the library from geotrans and from proj.
When statically linking such an app, it turns out that a bit of code
sharing between the two libraries has gotten in the way. The file in
question is geocent.c. It seems that this file in proj is originally
from geotrans. (Sorry if it is the other way around - my Sherlock Holms
abilities come and go.) The names of functions were modified; however,
the names of a few global variables were not changed. Specifically
Geocent_ep2, Geocent_e2 and Geocent_a. So, the GNU linker refuses to
statically link a program with these two libraries as these variables
are multiply defined.

When looking at both libraries, it appears that the values in question
are not used outside the geocent.c file. So, maybe they should be static
instead of global? Unless I miss a reference. Global variables in a
library is usually bad practice anyway.

-- 
Roger Oberholtzer
OPQ Systems AB




From pmezard at gmail.com  Thu Jan 12 03:07:15 2006
From: pmezard at gmail.com (=?ISO-8859-1?Q?Patrick_M=E9zard?=)
Date: Thu, 12 Jan 2006 12:07:15 +0100
Subject: [Proj] MapInfo/Oracle Cylindrical Miller Parameters
Message-ID: <1bfd36520601120307o75cf263bn4822f295bfe7410b@mail.gmail.com>

Hello,
In search of a good-looking world projection I came across Miller
Cylindrical one. Fortunately, both MapInfo and Oracle Spatial know about it,
and even better agree on transformations from WGS84 to Miller for several
points. This is important because it is always easier to debug something
when the input or output can be reproduced on other tools. Now I would like
to use it in proj.4 but as usual I am stuck trying to figure out *the
parameter string*.

I am taking the Oracle WKTEXT description as reference:
"""
PROJCS["Miller Cylindrical", GEOGCS [ "NAD 27 (Continental US)", DATUM ["NAD
27 (Continental US)", SPHEROID ["Clarke 1866", 6378206.400000, 294.978698]],
PRIMEM  [ "Greenwich", 0.000000 ], UNIT ["Decimal Degree",
0.01745329251994330]], PROJECTION ["Miller Cylindrical"], UNIT ["Meter",
1.000000000000]]
"""

It converts (2.35, 48.85) into (261360.667, 5916639.52).

NAD27 datum is defined by:
"""
NAME = NAD 27 (Continental US)
SHIFT_X =  -8
SHIFT_Y =  160
SHIFT_Z = 176
"""

Oracle WGS84 and Clarke 1866 ellipsoids definitions are the same than
proj.4ones.

and finally tried something like:
"""
cs2cs +proj=latlong +datum=WGS84 +to +proj=mill +ellps=clrk66
+towgs84=-8,160,176 +lon_0=0 +units=m
2.35 48.85
261360.67       5889006.49 -12281.453
"""

So, cs2cs output x coordinate perfectly matches Oracle's one, but the y
differs by 27633m.
I tried to replace the Clarke ellipsoid with a sphere defined by the minor
then the major axis but it does not improve the result.

Just to be clear: I do know that configuring Miller projection with a WGS84
datum would give me usable results. What I am looking for is compatibility
with existing applications, to ease debugging and allow release to third
parties without complicated explanations about why this is not the same
thing than the one they see in their GIS dialog boxes while having almost
the same name.

What do you think about this? Are these discrepancies to be expected because
of differences within projection implementations? Did I miss something when
configuring the projection?
Thank you for any idea.

--
Patrick Mézard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060112/314b333b/attachment.html>

From john.smart at caris.com  Thu Jan 12 06:15:45 2006
From: john.smart at caris.com (John Smart)
Date: Thu, 12 Jan 2006 10:15:45 -0400
Subject: [Proj] MapInfo/Oracle Cylindrical Miller Parameters
References: <1bfd36520601120307o75cf263bn4822f295bfe7410b@mail.gmail.com>
Message-ID: <001b01c61782$adbe6040$5ac8a8c0@caris.priv>

I don't know the details of what's going on inside proj, but I do see that if I take out the+towgs84 argument I get:
C:\Proj\bin>cs2cs +proj=latlong +datum=WGS84 +to +proj=mill +ellps=clrk66 +lon_0=0 +units=m
2.35 48.85
261603.65       5916486.09 0.000

which is closer to your Oracle results. clrk66 doesn't seem like the right ellipsoid for WGS-84 but (a) I can never remember how to get a list of ellipsoid codes from proj and (b) even a sphere would probably do the job for a "world projection". And NAD27 is for North America - a best fit as of 1927 knowledge. But your test point is in Europe. So I wouldn't expect your +towgs84 values to be useful there.

I think you should keep in mind that if you're talking about a world projection, you're talking about scales in the order of 1:100 million, where even a skinny 0.1mm line width will cover 10km on the ground. The odd metre or two or thousand won't make much difference.

  ----- Original Message ----- 
  From: Patrick Mézard 
  To: proj at lists.maptools.org 
  Sent: Thursday, January 12, 2006 7:07 AM
  Subject: [Proj] MapInfo/Oracle Cylindrical Miller Parameters


  Hello,
  In search of a good-looking world projection I came across Miller Cylindrical one. Fortunately, both MapInfo and Oracle Spatial know about it, and even better agree on transformations from WGS84 to Miller for several points. This is important because it is always easier to debug something when the input or output can be reproduced on other tools. Now I would like to use it in proj.4 but as usual I am stuck trying to figure out *the parameter string*.

  I am taking the Oracle WKTEXT description as reference:
  """
  PROJCS["Miller Cylindrical", GEOGCS [ "NAD 27 (Continental US)", DATUM ["NAD 27 (Continental US)", SPHEROID ["Clarke 1866", 6378206.400000, 294.978698]], PRIMEM  [ "Greenwich", 0.000000 ], UNIT ["Decimal Degree", 0.01745329251994330]], PROJECTION ["Miller Cylindrical"], UNIT ["Meter", 1.000000000000]]
  """

  It converts (2.35, 48.85) into (261360.667, 5916639.52).

  NAD27 datum is defined by:
  """
  NAME = NAD 27 (Continental US)
  SHIFT_X =  -8
  SHIFT_Y =  160
  SHIFT_Z = 176
  """

  Oracle WGS84 and Clarke 1866 ellipsoids definitions are the same than proj.4 ones.

  and finally tried something like:
  """
  cs2cs +proj=latlong +datum=WGS84 +to +proj=mill +ellps=clrk66 +towgs84=-8,160,176 +lon_0=0 +units=m
  2.35 48.85
  261360.67       5889006.49 -12281.453
  """

  So, cs2cs output x coordinate perfectly matches Oracle's one, but the y differs by 27633m.
  I tried to replace the Clarke ellipsoid with a sphere defined by the minor then the major axis but it does not improve the result.

  Just to be clear: I do know that configuring Miller projection with a WGS84 datum would give me usable results. What I am looking for is compatibility with existing applications, to ease debugging and allow release to third parties without complicated explanations about why this is not the same thing than the one they see in their GIS dialog boxes while having almost the same name.

  What do you think about this? Are these discrepancies to be expected because of differences within projection implementations? Did I miss something when configuring the projection?
  Thank you for any idea.

  --
  Patrick Mézard





------------------------------------------------------------------------------


  _______________________________________________
  Proj mailing list
  Proj at lists.maptools.org
  http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060112/74c65d9c/attachment.html>

From warmerdam at pobox.com  Thu Jan 12 06:38:04 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 12 Jan 2006 09:38:04 -0500
Subject: [Proj] MapInfo/Oracle Cylindrical Miller Parameters
In-Reply-To: <1bfd36520601120307o75cf263bn4822f295bfe7410b@mail.gmail.com>
References: <1bfd36520601120307o75cf263bn4822f295bfe7410b@mail.gmail.com>
Message-ID: <931f8ea90601120638s4e4f951ahac2da956dcae6f65@mail.gmail.com>

On 1/12/06, Patrick Mézard <pmezard at gmail.com> wrote:
> Hello,
>  In search of a good-looking world projection I came across Miller
> Cylindrical one. Fortunately, both MapInfo and Oracle Spatial know about it,
> and even better agree on transformations from WGS84 to Miller for several
> points. This is important because it is always easier to debug something
> when the input or output can be reproduced on other tools. Now I would like
> to use it in proj.4 but as usual I am stuck trying to figure out *the
> parameter string*.
>
>  I am taking the Oracle WKTEXT description as reference:
>  """
>  PROJCS["Miller Cylindrical", GEOGCS [ "NAD 27 (Continental US)", DATUM
> ["NAD 27 (Continental US)", SPHEROID ["Clarke 1866", 6378206.400000,
> 294.978698]], PRIMEM  [ "Greenwich", 0.000000 ], UNIT ["Decimal Degree",
> 0.01745329251994330]], PROJECTION ["Miller Cylindrical"], UNIT ["Meter",
> 1.000000000000]]
>  """
>
>  It converts (2.35, 48.85) into (261360.667, 5916639.52).

Patrick,

As John notes, it is a bit artificial to be using a NAD27 based
miller projection for world mapping.

If I use "proj -V" to get more details of how PROJ.4 treats
your projection definition we see that it operates only on spheres
for Miller, and derives a sphere of radius 6378206.400.  I suspect
that Oracle is either actually evaluating the projection on the
ellipsoid, or falling back to a different sphere definition.

It may be difficult to get compatible results if some systems
are evaluating miller on the ellipsoids while PROJ.4 only does it
on the sphere.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From warmerdam at pobox.com  Thu Jan 12 07:32:27 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 12 Jan 2006 10:32:27 -0500
Subject: [Proj] proj and geotrans global variables
In-Reply-To: <1137057646.28660.34.camel@acme.pacific>
References: <1137057646.28660.34.camel@acme.pacific>
Message-ID: <931f8ea90601120732r66c48351l8e64167042e65893@mail.gmail.com>

On 1/12/06, Roger Oberholtzer <roger at opq.se> wrote:
> When looking at both libraries, it appears that the values in question
> are not used outside the geocent.c file. So, maybe they should be static
> instead of global? Unless I miss a reference. Global variables in a
> library is usually bad practice anyway.

Roger,

I agree.  I will make these variables static.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From roger at opq.se  Thu Jan 12 08:58:47 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Thu, 12 Jan 2006 17:58:47 +0100
Subject: [Proj] OSGB36
Message-ID: <1137085127.28660.212.camel@acme.pacific>


Here I go again :)

This time, I am testing OSGB36 (UK). My current method uses geotrans. I
am using a 7 parameter transform (in geotrans-speak). When I convert
WGS84 lat/longs into OSGB36 X/Y, the difference from the accepted
location is less than 10 meters (which is an issue for a future
posting). So, I thought I would see how proj4 compares. Once again, my
brain is nowhere in sight. I get location errors that are much greater.
Usually over 90 meters.

I am trying this:

cs2cs +proj=latlong +ellps=WGS84 +to +proj=tmerc +lat_0=49 +lon_0=-2
+k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +units=m +no_defs

These settings are based on the esri file and look reasonable compared
to the values I use in geotrans.

A sample set of points:

WGS84 (somewhere near Norwich):

	lat=52.63820000

	lng=1.25423000

I should get (UK TRL say):

	N=620282.88  E=309469.17

But with the command above I get:

	N=620164.87  E=309430.14

With geotrans (C API), I get:

	N=620287.247 E=309465.242


I really do try to figure this out before I post. But I am stumped.
Again...


-- 
Roger Oberholtzer
OPQ Systems AB




From paul-grass at stjohnspoint.co.uk  Thu Jan 12 09:19:27 2006
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Thu, 12 Jan 2006 17:19:27 +0000 (GMT)
Subject: [Proj] OSGB36
In-Reply-To: <1137085127.28660.212.camel@acme.pacific>
References: <1137085127.28660.212.camel@acme.pacific>
Message-ID: <Pine.LNX.4.60.0601121716470.16313@agrippa.ukshells.co.uk>

Hello Roger

On Thu, 12 Jan 2006, Roger Oberholtzer wrote:

> This time, I am testing OSGB36 (UK). My current method uses geotrans. I
> am using a 7 parameter transform (in geotrans-speak). When I convert
> WGS84 lat/longs into OSGB36 X/Y, the difference from the accepted
> location is less than 10 meters (which is an issue for a future
> posting). So, I thought I would see how proj4 compares. Once again, my
> brain is nowhere in sight. I get location errors that are much greater.
> Usually over 90 meters.
>
> I am trying this:
>
> cs2cs +proj=latlong +ellps=WGS84 +to +proj=tmerc +lat_0=49 +lon_0=-2
> +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +units=m +no_defs
>
> These settings are based on the esri file and look reasonable compared
> to the values I use in geotrans.

You need to do a datum transformation (WGS84 to OSGB36)
With the following command line
cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc 
+lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy 
+towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m 
+no_defs
I get these results
620286.26       309466.38
for your test point. Much closer.

That parameter set is used in GRASS and the comment with it indicates an 
accuracy of 5 metres. For anything better you're likely to need to use 
some of the gridshifting data available at http://www.gps.gov.uk/ (not yet 
in a suitable format for use with PROJ.4)

Paul



>
> A sample set of points:
>
> WGS84 (somewhere near Norwich):
>
> 	lat=52.63820000
>
> 	lng=1.25423000
>
> I should get (UK TRL say):
>
> 	N=620282.88  E=309469.17
>
> But with the command above I get:
>
> 	N=620164.87  E=309430.14
>
> With geotrans (C API), I get:
>
> 	N=620287.247 E=309465.242
>
>
> I really do try to figure this out before I post. But I am stumped.
> Again...
>
>
> --
> Roger Oberholtzer
> OPQ Systems AB
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>


From roger at opq.se  Thu Jan 12 12:44:35 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Thu, 12 Jan 2006 21:44:35 +0100
Subject: [Proj] OSGB36
In-Reply-To: <Pine.LNX.4.60.0601121716470.16313@agrippa.ukshells.co.uk>
References: <1137085127.28660.212.camel@acme.pacific>
	<Pine.LNX.4.60.0601121716470.16313@agrippa.ukshells.co.uk>
Message-ID: <1137098675.8395.13.camel@shark.pacific>

On Thu, 2006-01-12 at 17:19 +0000, Paul Kelly wrote:
> Hello Roger
> 
> On Thu, 12 Jan 2006, Roger Oberholtzer wrote:
> 
> > This time, I am testing OSGB36 (UK). My current method uses geotrans. I
> > am using a 7 parameter transform (in geotrans-speak). When I convert
> > WGS84 lat/longs into OSGB36 X/Y, the difference from the accepted
> > location is less than 10 meters (which is an issue for a future
> > posting). So, I thought I would see how proj4 compares. Once again, my
> > brain is nowhere in sight. I get location errors that are much greater.
> > Usually over 90 meters.
> >
> > I am trying this:
> >
> > cs2cs +proj=latlong +ellps=WGS84 +to +proj=tmerc +lat_0=49 +lon_0=-2
> > +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +units=m +no_defs
> >
> > These settings are based on the esri file and look reasonable compared
> > to the values I use in geotrans.
> 
> You need to do a datum transformation (WGS84 to OSGB36)
> With the following command line
> cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc 
> +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy 
> +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m 
> +no_defs
> I get these results
> 620286.26       309466.38
> for your test point. Much closer.

This was an improvement. The difference for this point it 4.376 meters.

> That parameter set is used in GRASS and the comment with it indicates an 
> accuracy of 5 metres. For anything better you're likely to need to use 
> some of the gridshifting data available at http://www.gps.gov.uk/ (not yet 
> in a suitable format for use with PROJ.4)

TRL (Transport Research Lab) point me to GridInQuest, which is a
Windows-only implementation of what you are refering to. I have
contacted them and they say they will not do a Linux version. I believe
it is work paid for by public funds. But the implementation is not
distributed. The application does run on Linux/Wine, but that does not
really help me.

Using geotrans, I get differences up to 15 meters, with 10 seeming more
the average. I think proj may be better. But, unfortunately, not as good
as I may need in the UK, which seems to be going to OSTN02. As you no
doubt already know.

--
Roger Oberholtzer



From ovv at hetnet.nl  Fri Jan 13 05:19:40 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Fri, 13 Jan 2006 14:19:40 +0100
Subject: [Proj] OSGB36
In-Reply-To: <Pine.LNX.4.60.0601121716470.16313@agrippa.ukshells.co.uk>
Message-ID: <BFED677C.64A3%ovv@hetnet.nl>

> From: Paul Kelly <paul-grass-stjohnspoint.co.uk>
> Subject: Re: [Proj] OSGB36
> On Thu, 12 Jan 2006, Roger Oberholtzer wrote:

>> This time, I am testing OSGB36 (UK). My current method uses geotrans. I
>> am using a 7 parameter transform (in geotrans-speak).
>> A sample set of points:
>> WGS84 (somewhere near Norwich):
>> lat=52.63820000
>> lng=1.25423000
>> I should get (UK TRL say):
>> N=620282.88  E=309469.17

> You need to do a datum transformation (WGS84 to OSGB36)
> With the following command line
> cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc
> +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy
> +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
> +no_defs
> I get these results
> 620286.26       309466.38
> for your test point. Much closer.

I can confirm the test results from mr. Kelly.
A more verbose description:
Transformation from WGS84 to OSGB36:
lat=52.63820; lon=1.25423; h=0;
This gives:
lat=52.637798, lon=1.256045, h=-45.3413
Transformation parameters:
dx=-446.448; dy=125.157; dz=-542.060;
rx=-0.1502; ry=-0.2470; rz=-0.8421; ds=20.4894;
Position vector rotation, approximate transform (like PROJ.4 does).
Transverse Mercator on Airy 1830 ellipsoid:
with: lat0=49.0; lon0=-2.0; x0=400000; y0=-100000; k0=0.9996012717;
gives: x=620286.2515, y=309466.3864

Source of the parameters:
"A guide to coordinate systems in Great Britain", Ordnance Survey, v1.4 May
2002
<http://www.gps.gov.uk/additionalInfo/images/A_guide_to_coord.pdf>

Differences with Ordance Survey results must be attributed to lack of
gridinterpolation.

Geotrans has inaccurate transformation parameters in the file 7_param.dat
Note that these are coordinate frame parameters.
With these parameters I arrive with my code at
x = 620287.2473, y = 309465.2385
(mr. Oberholtzer mentioned N=620287.247 E=309465.242)



By the way, in my previous email with subject "Re: [Proj] proj and Dutch RD"
I forgot to mention that the datum transformation parameters are coordinate
frame parameters, so the signs of the r's should be reversed if you want to
use the parameters for a position vector transform like PROJ.4's.


 



From roger at opq.se  Fri Jan 13 05:38:00 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Fri, 13 Jan 2006 14:38:00 +0100
Subject: [Proj] OSGB36
In-Reply-To: <BFED677C.64A3%ovv@hetnet.nl>
References: <BFED677C.64A3%ovv@hetnet.nl>
Message-ID: <1137159480.25364.88.camel@acme.pacific>

On Fri, 2006-01-13 at 14:19 +0100, Oscar van Vlijmen wrote:
> > From: Paul Kelly <paul-grass-stjohnspoint.co.uk>
> > Subject: Re: [Proj] OSGB36
> > On Thu, 12 Jan 2006, Roger Oberholtzer wrote:
> 
> >> This time, I am testing OSGB36 (UK). My current method uses geotrans. I
> >> am using a 7 parameter transform (in geotrans-speak).
> >> A sample set of points:
> >> WGS84 (somewhere near Norwich):
> >> lat=52.63820000
> >> lng=1.25423000
> >> I should get (UK TRL say):
> >> N=620282.88  E=309469.17
> 
> > You need to do a datum transformation (WGS84 to OSGB36)
> > With the following command line
> > cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc
> > +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy
> > +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
> > +no_defs
> > I get these results
> > 620286.26       309466.38
> > for your test point. Much closer.
> 
> I can confirm the test results from mr. Kelly.
> A more verbose description:
> Transformation from WGS84 to OSGB36:
> lat=52.63820; lon=1.25423; h=0;
> This gives:
> lat=52.637798, lon=1.256045, h=-45.3413
> Transformation parameters:
> dx=-446.448; dy=125.157; dz=-542.060;
> rx=-0.1502; ry=-0.2470; rz=-0.8421; ds=20.4894;
> Position vector rotation, approximate transform (like PROJ.4 does).
> Transverse Mercator on Airy 1830 ellipsoid:
> with: lat0=49.0; lon0=-2.0; x0=400000; y0=-100000; k0=0.9996012717;
> gives: x=620286.2515, y=309466.3864
> 
> Source of the parameters:
> "A guide to coordinate systems in Great Britain", Ordnance Survey, v1.4 May
> 2002
> <http://www.gps.gov.uk/additionalInfo/images/A_guide_to_coord.pdf>
> 
> Differences with Ordance Survey results must be attributed to lack of
> gridinterpolation.

Is that the main thing that OSTN02 adds to all this?

-- 
Roger Oberholtzer
OPQ Systems AB




From john.smart at caris.com  Fri Jan 13 07:28:10 2006
From: john.smart at caris.com (John Smart)
Date: Fri, 13 Jan 2006 11:28:10 -0400
Subject: [Proj] OSGB36
References: <BFED677C.64A3%ovv@hetnet.nl>
	<1137159480.25364.88.camel@acme.pacific>
Message-ID: <004801c61855$f61d7410$5ac8a8c0@caris.priv>

>> Differences with Ordance Survey results must be attributed to lack of
>> gridinterpolation.
>
> Is that the main thing that OSTN02 adds to all this?
>

OSTN02 is a grid-shifts file with grid resolution = 1km. The shifts are from 
GB National Grid (i.e. a TM projection) on ETRS89 to the same projection on 
OSGB36. Bilinear interpolation is used between grid nodes. The stated 
accuracy is something like 0.1m at 1 sigma. The grid-shifts file has a nice 
feature that it has dummy values outside of a 10km buffer around GB 
coastline. The file also has orthometric height differences (OSGM02) at the 
same grid points.

The 7 parameter is stated as being good for applications needing accuracy 
less good than +/- 5m.

Could be nice if Proj would support this grid shift file, but what is really 
needed (IMHO) is some standardization on such file formats so that a 
plethora of different formats would not be needed. Ntv2 is something of a 
standard but relates to lat/long differences not projection grid. 



From roger at opq.se  Fri Jan 13 08:02:45 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Fri, 13 Jan 2006 17:02:45 +0100
Subject: [Proj] OSGB36
In-Reply-To: <004801c61855$f61d7410$5ac8a8c0@caris.priv>
References: <BFED677C.64A3%ovv@hetnet.nl>
	<1137159480.25364.88.camel@acme.pacific>
	<004801c61855$f61d7410$5ac8a8c0@caris.priv>
Message-ID: <1137168166.25364.112.camel@acme.pacific>

On Fri, 2006-01-13 at 11:28 -0400, John Smart wrote:
> >> Differences with Ordance Survey results must be attributed to lack of
> >> gridinterpolation.
> >
> > Is that the main thing that OSTN02 adds to all this?
> >
> 
> OSTN02 is a grid-shifts file with grid resolution = 1km. The shifts are from 
> GB National Grid (i.e. a TM projection) on ETRS89 to the same projection on 
> OSGB36. Bilinear interpolation is used between grid nodes. The stated 
> accuracy is something like 0.1m at 1 sigma. The grid-shifts file has a nice 
> feature that it has dummy values outside of a 10km buffer around GB 
> coastline. The file also has orthometric height differences (OSGM02) at the 
> same grid points.
> 
> The 7 parameter is stated as being good for applications needing accuracy 
> less good than +/- 5m.
> 
> Could be nice if Proj would support this grid shift file, but what is really 
> needed (IMHO) is some standardization on such file formats so that a 
> plethora of different formats would not be needed. Ntv2 is something of a 
> standard but relates to lat/long differences not projection grid. 

As a start, where can one get the grid shift values? Is there only one
standard set?

Isn't there any Linux library that will do this (commercial is fine,
too)?

-- 
Roger Oberholtzer
OPQ Systems AB




From john.smart at caris.com  Fri Jan 13 08:29:24 2006
From: john.smart at caris.com (John Smart)
Date: Fri, 13 Jan 2006 12:29:24 -0400
Subject: [Proj] OSGB36
References: <BFED677C.64A3%ovv@hetnet.nl><1137159480.25364.88.camel@acme.pacific><004801c61855$f61d7410$5ac8a8c0@caris.priv>
	<1137168166.25364.112.camel@acme.pacific>
Message-ID: <000601c6185e$8482e0c0$5ac8a8c0@caris.priv>


> As a start, where can one get the grid shift values? Is there only one
> standard set?
>
Try http://www.gps.gov.uk/additionalinfo/questDeveloper.asp


> Isn't there any Linux library that will do this (commercial is fine,
> too)?

No idea, but it's a fairly trivial bilinear interpolation with a simple text 
file. They include very detailed documentation on the algorithm for forward 
and reverse calculations.

Good luck. 



From martin.vermeer at hut.fi  Sat Jan 14 01:17:18 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Sat, 14 Jan 2006 11:17:18 +0200
Subject: [Proj] OSGB36
In-Reply-To: <004801c61855$f61d7410$5ac8a8c0@caris.priv>
References: <BFED677C.64A3%ovv@hetnet.nl>
	<1137159480.25364.88.camel@acme.pacific>
	<004801c61855$f61d7410$5ac8a8c0@caris.priv>
Message-ID: <20060114091717.GA23024@geo9.hut.fi>

On Fri, Jan 13, 2006 at 11:28:10AM -0400, John Smart wrote:
 
> Could be nice if Proj would support this grid shift file, but what is 
> really needed (IMHO) is some standardization on such file formats so that a 
> plethora of different formats would not be needed. Ntv2 is something of a 
> standard but relates to lat/long differences not projection grid. 

I am afraid that train has left... Finland, e.g., is using affine
(bilinear) interpolation within triangles of a Delaunay triangulation.

I would think that PROJ4 would need a plug-in architecture with a well
defined API, into which different "grid transformers" can be plugged by
users.

- Martin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060114/f3c32a89/attachment.sig>

From mirabell at unipg.it  Tue Jan 17 07:39:52 2006
From: mirabell at unipg.it (Francesco Mirabella)
Date: Tue, 17 Jan 2006 16:39:52 +0100
Subject: [Proj] cs2cs latlong-GB
Message-ID: <20060117153952.GA9848@unipg.it>

Hi to all,
I am a newbie on this list, I am triyng to project some lat-long points
(international ellipsoid on
rome40 datum)( 12.17183333  43.55000000) to Gauss-Boaga Projection
(tmerc on
+international ellipsoid on rome40). I use:

 cs2cs -E +proj=latlong +ellps=intl
 ++towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +to +proj=tmerc
 +lon_0=15
 ++k=0.9996 +x_0=2520000 +ellps=intl
  +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68  -v -f %.6f

  I have reprojected the values to GB with grass in order to test the
  result (the
  +result shold be: 2291529.04882672   4825875.89322372 according to
  grass)


  But I get wrong values, especially on latitude (2205154.728842
  5838292.243164)

  can someone help??

cheers,
Francesco
  



From warmerdam at pobox.com  Tue Jan 17 08:27:19 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 17 Jan 2006 11:27:19 -0500
Subject: [Proj] cs2cs latlong-GB
In-Reply-To: <20060117153952.GA9848@unipg.it>
References: <20060117153952.GA9848@unipg.it>
Message-ID: <931f8ea90601170827s2517f2aep617ac373bf969839@mail.gmail.com>

On 1/17/06, Francesco Mirabella <mirabell at unipg.it> wrote:
> Hi to all,
> I am a newbie on this list, I am triyng to project some lat-long points
> (international ellipsoid on
> rome40 datum)( 12.17183333  43.55000000) to Gauss-Boaga Projection
> (tmerc on
> +international ellipsoid on rome40). I use:
>
>  cs2cs -E +proj=latlong +ellps=intl
>  ++towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +to +proj=tmerc
>  +lon_0=15
>  ++k=0.9996 +x_0=2520000 +ellps=intl
>   +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68  -v -f %.6f
>
>   I have reprojected the values to GB with grass in order to test the
>   result (the
>   +result shold be: 2291529.04882672   4825875.89322372 according to
>   grass)

Francesco,

You seem to have doubled '+'es in a couple spots up
above (++towgs84=..., and ++k).  Is that a reflection of
what you actually did or some sort of cut and paste error?

When I do it, things seem to work OK:

warmerda at gdal2200[208]% cs2cs -E +proj=latlong +ellps=intl
+towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +to +proj=tmerc
+lon_0=15 +k=0.9996 +x_0=2520000 +ellps=intl
+towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68  -v -f %.6f
# ---- From Coordinate System ----
#Lat/long (Geodetic)
#
# +proj=latlong +ellps=intl
# +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68
# ---- To Coordinate System ----
#Transverse Mercator
#       Cyl, Sph&Ell
# +proj=tmerc +lon_0=15 +k=0.9996 +x_0=2520000 +ellps=intl
# +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68
12.17183333  43.55000000
12.17183333  43.55000000        2291532.166325  4825868.544447 0.000000

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From mirabell at unipg.it  Tue Jan 17 09:05:26 2006
From: mirabell at unipg.it (Francesco Mirabella)
Date: Tue, 17 Jan 2006 18:05:26 +0100
Subject: [Proj] cs2cs latlong-GB
In-Reply-To: <931f8ea90601170827s2517f2aep617ac373bf969839@mail.gmail.com>
References: <20060117153952.GA9848@unipg.it>
	<931f8ea90601170827s2517f2aep617ac373bf969839@mail.gmail.com>
Message-ID: <20060117170526.GC9848@unipg.it>

Hi Frank,
thanks for your reply, the multiple ++ were due to cut and paste,
however: thanks, I must say that it works fine but it is funny because it actually works fine if I put long and lat values together.... It goes wrong if I put only long (12.17183333) and then only lat (43.55000000).... You can try, you will get wrong values, both longitude and latitude
It funny I didn't think of putting them together as a couple...

Thanks again,

cheers
Francesco


On Tue, Jan 17, 2006 at 11:27:19AM -0500, Frank Warmerdam wrote:
> On 1/17/06, Francesco Mirabella <mirabell at unipg.it> wrote:
> > Hi to all,
> > I am a newbie on this list, I am triyng to project some lat-long points
> > (international ellipsoid on
> > rome40 datum)( 12.17183333  43.55000000) to Gauss-Boaga Projection
> > (tmerc on
> > +international ellipsoid on rome40). I use:
> >
> >  cs2cs -E +proj=latlong +ellps=intl
> >  ++towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +to +proj=tmerc
> >  +lon_0=15
> >  ++k=0.9996 +x_0=2520000 +ellps=intl
> >   +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68  -v -f %.6f
> >
> >   I have reprojected the values to GB with grass in order to test the
> >   result (the
> >   +result shold be: 2291529.04882672   4825875.89322372 according to
> >   grass)
> 
> Francesco,
> 
> You seem to have doubled '+'es in a couple spots up
> above (++towgs84=..., and ++k).  Is that a reflection of
> what you actually did or some sort of cut and paste error?
> 
> When I do it, things seem to work OK:
> 
> warmerda at gdal2200[208]% cs2cs -E +proj=latlong +ellps=intl
> +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 +to +proj=tmerc
> +lon_0=15 +k=0.9996 +x_0=2520000 +ellps=intl
> +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68  -v -f %.6f
> # ---- From Coordinate System ----
> #Lat/long (Geodetic)
> #
> # +proj=latlong +ellps=intl
> # +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68
> # ---- To Coordinate System ----
> #Transverse Mercator
> #       Cyl, Sph&Ell
> # +proj=tmerc +lon_0=15 +k=0.9996 +x_0=2520000 +ellps=intl
> # +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68
> 12.17183333  43.55000000
> 12.17183333  43.55000000        2291532.166325  4825868.544447 0.000000
> 
> Best regards,
> --
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | Geospatial Programmer for Rent
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj




From roger at opq.se  Tue Jan 17 11:39:14 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Tue, 17 Jan 2006 20:39:14 +0100
Subject: [Proj] OSGB36
In-Reply-To: <20060114091717.GA23024@geo9.hut.fi>
References: <BFED677C.64A3%ovv@hetnet.nl>
	<1137159480.25364.88.camel@acme.pacific>
	<004801c61855$f61d7410$5ac8a8c0@caris.priv>
	<20060114091717.GA23024@geo9.hut.fi>
Message-ID: <1137526754.7621.6.camel@shark.pacific>

But no one knows of an implementation of this calculation that runs on
Linux? For money? Odd. There is only a Windows DLL (GridInQuest) to do
this. The docs they provide for others are, to me, incomplete at best.

On Sat, 2006-01-14 at 11:17 +0200, Martin Vermeer wrote:
> On Fri, Jan 13, 2006 at 11:28:10AM -0400, John Smart wrote:
>  
> > Could be nice if Proj would support this grid shift file, but what is 
> > really needed (IMHO) is some standardization on such file formats so that a 
> > plethora of different formats would not be needed. Ntv2 is something of a 
> > standard but relates to lat/long differences not projection grid. 
> 
> I am afraid that train has left... Finland, e.g., is using affine
> (bilinear) interpolation within triangles of a Delaunay triangulation.
> I would think that PROJ4 would need a plug-in architecture with a well
> defined API, into which different "grid transformers" can be plugged by
> users.
> 
> - Martin
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From archer at eskimo.com  Thu Jan 19 10:01:43 2006
From: archer at eskimo.com (Curt, WE7U)
Date: Thu, 19 Jan 2006 10:01:43 -0800 (PST)
Subject: [Proj] CSLTokenizeStringComplex/CSLCount/CSLDestroy
Message-ID: <Pine.SUN.4.58.0601190947300.18461@eskimo.com>


I upgraded to OpenSuSE 10.0 this week, giving me gcc-4.0 instead of
gcc-3.something.  I'm now getting these warnings:


  warning: implicit declaration of function `CSLTokenizeStringComplex'
  warning: assignment makes pointer from integer without a cast
  warning: implicit declaration of function `CSLCount'
  warning: implicit declaration of function `CSLDestroy'


This bit of code parses a projection definition into tokens for
pj_init() and then initializes the projection.  It appears that I
originally used a private API from "cpl_csv.h".

Is there a public API I can use to do the same thing?  I see
"cpl_serv.h" called out in "geo_tiffp.h", but that's also a private
API.

I prefer to get rid of all compiler warnings so that real
errors/warnings are more apparent.  For the moment I can live with
this if there are no alternatives.  I _can_ get rid of the warnings
on Linux by adding an #include at the top of the file, but then the
program doesn't compile under Cygwin.

--
Curt, WE7U.   APRS Client Comparisons: http://www.eskimo.com/~archer
"Lotto:    A tax on people who are bad at math." -- unknown
"Windows:  Microsoft's tax on computer illiterates." -- WE7U
"The world DOES revolve around me:  I picked the coordinate system!"


From EMiller at dfg.ca.gov  Thu Jan 19 10:53:36 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Thu, 19 Jan 2006 10:53:36 -0800
Subject: [Proj] CSLTokenizeStringComplex/CSLCount/CSLDestroy
Message-ID: <s3cf6fd7.036@dfg.ca.gov>

This appears to be a GDAL question, not a PROJ question.  Try posting to gdal-dev at lists.maptools.org.  BTW, you don't want to live with those warnings.  They indicate potentially program crashing issues at runtime.  Implicit functions have a signature of "int function()"; hence, your second warning.  Also, the compiler can't verify you're calling implicit functions with the correct type or number of arguments.

>>> "Curt, WE7U" <archer at eskimo.com> 1/19/2006 10:01 AM >>>

I upgraded to OpenSuSE 10.0 this week, giving me gcc-4.0 instead of
gcc-3.something.  I'm now getting these warnings:


  warning: implicit declaration of function `CSLTokenizeStringComplex'
  warning: assignment makes pointer from integer without a cast
  warning: implicit declaration of function `CSLCount'
  warning: implicit declaration of function `CSLDestroy'


This bit of code parses a projection definition into tokens for
pj_init() and then initializes the projection.  It appears that I
originally used a private API from "cpl_csv.h".

Is there a public API I can use to do the same thing?  I see
"cpl_serv.h" called out in "geo_tiffp.h", but that's also a private
API.

I prefer to get rid of all compiler warnings so that real
errors/warnings are more apparent.  For the moment I can live with
this if there are no alternatives.  I _can_ get rid of the warnings
on Linux by adding an #include at the top of the file, but then the
program doesn't compile under Cygwin.

--
Curt, WE7U.   APRS Client Comparisons: http://www.eskimo.com/~archer 
"Lotto:    A tax on people who are bad at math." -- unknown
"Windows:  Microsoft's tax on computer illiterates." -- WE7U
"The world DOES revolve around me:  I picked the coordinate system!"
_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From andy.canfield at gmail.com  Thu Jan 19 11:15:11 2006
From: andy.canfield at gmail.com (Andy Canfield)
Date: Thu, 19 Jan 2006 11:15:11 -0800
Subject: [Proj] Two questions about Proj
Message-ID: <7425d0870601191115l695d865axa7b94648739f7660@mail.gmail.com>

First question:
Is there a good example somewhere of using it to transform coordinates
from one projection to another?

Second question:
Is there a good example somewhere of using it to shift from one datum
to another within the same projection?

Third question:
Does it support translating coordinates to and from the old AT&T V&H
coordinate system?



From gerald.evenden at verizon.net  Thu Jan 19 11:24:56 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Thu, 19 Jan 2006 14:24:56 -0500
Subject: [Proj] CSLTokenizeStringComplex/CSLCount/CSLDestroy
In-Reply-To: <s3cf6fd7.036@dfg.ca.gov>
References: <s3cf6fd7.036@dfg.ca.gov>
Message-ID: <200601191424.56444.gerald.evenden@verizon.net>

On Thursday 19 January 2006 01:53 pm, Eric Miller wrote:
	...
> I prefer to get rid of all compiler warnings so that real
> errors/warnings are more apparent.  For the moment I can live with
> this if there are no alternatives.  I _can_ get rid of the warnings
> on Linux by adding an #include at the top of the file, but then the
> program doesn't compile under Cygwin.

My comment is an aside to your main problem.

While the desire to remove all warnings from a compile are admirable it often 
ends up being impossible to achieve.  Last night and this morning while 
cleaning up the next release of libproj4 I turned on the "-Wall -pedantic" 
switches and scanned the 'make' output for 'warning's.  Out of the 150+ files 
constituting the library there are about 3 or 4 files that generate warnings.
With the exception of the strerror_r problem, they are trivial and impractical 
to eliminate.

As for the strerror_r problem, info/man documents that the function should 
return int but the string.h header file prototypes a *char return.  This is a 
GNU problem that I have not resolved yet.  I believe POSIX requires int.  
This is a thread compatibility problem.

PS: proj_strerror_r returns int and acts like strerror_r should and should be 
thread safe.

-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From archer at eskimo.com  Thu Jan 19 13:37:51 2006
From: archer at eskimo.com (Curt, WE7U)
Date: Thu, 19 Jan 2006 13:37:51 -0800 (PST)
Subject: [Proj] CSLTokenizeStringComplex/CSLCount/CSLDestroy
In-Reply-To: <200601191424.56444.gerald.evenden@verizon.net>
References: <s3cf6fd7.036@dfg.ca.gov>
	<200601191424.56444.gerald.evenden@verizon.net>
Message-ID: <Pine.SUN.4.58.0601191326180.18461@eskimo.com>

On Thu, 19 Jan 2006, Gerald I. Evenden wrote:

> While the desire to remove all warnings from a compile are admirable it often
> ends up being impossible to achieve.

Agree, somewhat.  In our case we achieved it, until we tried
compiling with gcc-4.0.


> Last night and this morning while
> cleaning up the next release of libproj4 I turned on the "-Wall -pedantic"
> switches and scanned the 'make' output for 'warning's.  Out of the 150+ files
> constituting the library there are about 3 or 4 files that generate warnings.
> With the exception of the strerror_r problem, they are trivial and impractical
> to eliminate.

I tried "-pedantic" and it ended up showing quite a few problems in
several libraries we use (and we use a LOT of libraries in our
application).  I've since switched to "-O2 -pipe -W -Wall
-Wpointer-arith -Wstrict-prototypes -Wno-unused-parameter -pthread",
but every once in a while I throw in "-pedantic" just to check the
main app's code.  As a general rule I don't use that flag, but I
might add it in the future if I can get rid of the added warnings
that ensue.

With the flags described I see only the few warnings I described
earlier with gcc-4.0, with a large multi-process/multi-threaded
application.  The fewer the warnings, the more professional the
application appears to those who compile it.

--
Curt, WE7U.   APRS Client Comparisons: http://www.eskimo.com/~archer
"Lotto:    A tax on people who are bad at math." -- unknown
"Windows:  Microsoft's tax on computer illiterates." -- WE7U
"The world DOES revolve around me:  I picked the coordinate system!"


From kms at passback.co.uk  Fri Jan 20 01:53:46 2006
From: kms at passback.co.uk (Keith Sharp)
Date: Fri, 20 Jan 2006 09:53:46 +0000
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
Message-ID: <1137750826.19082.22.camel@animal.passback.co.uk>

Hello,

I am trying to use the Proj API to convert WGS84 values to OSGB values
such that I can eventually create a Landranger Grid Reference.

Using the cs2cs command and some values taken from a previous posting on
the list I can get the result I want:

[kms at animal include]$ /home/kms/tmp/install/bin/cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
-4.432298 55.863157
247878.12       666006.03 -53.39

(Glasgow Airport in the UK).

I then tried to code this up using the API:

#include <stdio.h>
#include <proj_api.h>

int
main (int argc, char *argv[])
{
	char *wgs84[] = { "proj=latlong", "ellps=WGS84", "towgs84=0,0,0", "nodef" };

	char *osgb[] = { "proj=tmerc", "lat_0=49", "lon_0=-2", "k=0.9996012717", "x_0=400000", "y_0=-100000", "ellps=airy", "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894", "units=m" };


	projPJ wgs84PJ;
	projPJ osgbPJ;

	double x = 55.863157, y = -4.432298, z = 0;
	int e = 0;

	if (!(wgs84PJ = pj_init (4, wgs84))) {
		printf ("Failed to initialise WGS84\n");
		return 1;
	}

	if (!(osgbPJ = pj_init (2, osgb))) {
		printf ("Failed to initialise OSGB\n");
		return 1;
	}

	printf ("Converting from WGS84 to OSGB\n");
	printf ("X: %e  Y: %e  Z: %e\n", x, y, z);
	if ((e = pj_transform (wgs84PJ, osgbPJ, 1, 0, &y, &x, &z)) != 0) {
		printf ("Transform failed: %s\n", pj_strerrno (e));
		return e;
	}
	printf ("X: %e  Y: %e  Z: %e\n", x, y, z);
	printf ("Expected result was X: 247878 and Y: 666006\n");

	return 0;
}

But when I run my test program I get the following:

[kms at animal test]$ ./test
Converting from WGS84 to OSGB
X: 5.586316e+01  Y: -4.432298e+00  Z: 0.000000e+00
Transform failed: latitude or longitude exceeded limits

I have to confess that I am VERY new to this type of thing, so I may
well be making a number of fundamental mistakes.  If I am could someone
point me on the correct path?

Many thanks,

Keith.



From ovv at hetnet.nl  Fri Jan 20 03:25:14 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Fri, 20 Jan 2006 12:25:14 +0100
Subject: [Proj] Two questions about Proj
In-Reply-To: <7425d0870601191115l695d865axa7b94648739f7660@mail.gmail.com>
Message-ID: <BFF6872A.654B%ovv@hetnet.nl>

> From: Andy Canfield <andy.canfield-gmail.com>
> Third question:
> Does it support translating coordinates to and from the old AT&T V&H
> coordinate system?

No.
Some time ago I found good working C code at:
<http://cpansearch.bulknews.net/markup/Geo-Coordinates-VandH-XS-0.01/XS.c>
Derived from a program obtained from an anonymous author within Bellcore by
way of the National Exchange Carrier Association. Cleaned up and improved a
bit by Tom Libert.
  
The code has forward AND inverse code. Not perfectly symmetrical, but very
adequate for normal V&H use.
See also the "Donald Elliptic Projection" discussed earlier in this list.
My test point:
lat=37d 42m 14.69s; lon=-82d 39m 15.27s;
V&H: 6363.235128, 2250.699791
The inverse gives: 37d 42m 14.7031s, -82d 39m 15.2701s
This projection is also used with West is positive convention.

V&H seems to be in use even today.
Originally used for calculating a 'billable' distance between telephone
calling centers.




From john.smart at caris.com  Fri Jan 20 04:42:29 2006
From: john.smart at caris.com (John Smart)
Date: Fri, 20 Jan 2006 08:42:29 -0400
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
References: <1137750826.19082.22.camel@animal.passback.co.uk>
Message-ID: <005b01c61dbe$f9b63ee0$5ac8a8c0@caris.priv>

> double x = 55.863157, y = -4.432298, z = 0;

I could be missing something here but haven't you got your x and y mixed up? 
Your command line test had x=-4 and y=55 (4w and 55n).

If I do your command line test with the mixed up values I get:
55.863157 -4.432298
8256101.80      -6437819.18 599.248

(I was supposing maybe I'd get the same message as you).

maybe there's some sanity checking going on in the code, since a Transverse 
Mercator projection generally isn't useful so far away from its origin.

Just a guess. Good luck.



From kms at passback.co.uk  Fri Jan 20 05:01:31 2006
From: kms at passback.co.uk (Keith Sharp)
Date: Fri, 20 Jan 2006 13:01:31 +0000
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
In-Reply-To: <005b01c61dbe$f9b63ee0$5ac8a8c0@caris.priv>
References: <1137750826.19082.22.camel@animal.passback.co.uk>
	<005b01c61dbe$f9b63ee0$5ac8a8c0@caris.priv>
Message-ID: <1137762091.19082.24.camel@animal.passback.co.uk>

On Fri, 2006-01-20 at 08:42 -0400, John Smart wrote:
> > double x = 55.863157, y = -4.432298, z = 0;
> 
> I could be missing something here but haven't you got your x and y mixed up? 
> Your command line test had x=-4 and y=55 (4w and 55n).
> 
> If I do your command line test with the mixed up values I get:
> 55.863157 -4.432298
> 8256101.80      -6437819.18 599.248
> 
> (I was supposing maybe I'd get the same message as you).
> 
> maybe there's some sanity checking going on in the code, since a Transverse 
> Mercator projection generally isn't useful so far away from its origin.

I may well have my X and Y mixed up, but switching them gives the same
error with my code:

[kms at animal test]$ ./test 
Converting from WGS84 to OSGB
X: -4.432298e+00  Y: 5.586316e+01  Z: 0.000000e+00
Transform failed: latitude or longitude exceeded limits

Thanks,

Keith.



From warmerdam at pobox.com  Fri Jan 20 05:51:18 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 20 Jan 2006 08:51:18 -0500
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
In-Reply-To: <1137750826.19082.22.camel@animal.passback.co.uk>
References: <1137750826.19082.22.camel@animal.passback.co.uk>
Message-ID: <931f8ea90601200551x55858cf8q6646a9b8ebb1b751@mail.gmail.com>

On 1/20/06, Keith Sharp <kms at passback.co.uk> wrote:
> int
> main (int argc, char *argv[])
> {
>         char *wgs84[] = { "proj=latlong", "ellps=WGS84", "towgs84=0,0,0", "nodef" };
>
>         char *osgb[] = { "proj=tmerc", "lat_0=49", "lon_0=-2", "k=0.9996012717", "x_0=400000", "y_0=-100000", "ellps=airy", "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894", "units=m" };
>
>         projPJ wgs84PJ;
>         projPJ osgbPJ;
>
>         double x = 55.863157, y = -4.432298, z = 0;
>         int e = 0;
>
>         if (!(wgs84PJ = pj_init (4, wgs84))) {
>                 printf ("Failed to initialise WGS84\n");
>                 return 1;
>         }
>
>         if (!(osgbPJ = pj_init (2, osgb))) {
>                 printf ("Failed to initialise OSGB\n");
>                 return 1;
>         }
>
>         printf ("Converting from WGS84 to OSGB\n");
>         printf ("X: %e  Y: %e  Z: %e\n", x, y, z);
>         if ((e = pj_transform (wgs84PJ, osgbPJ, 1, 0, &y, &x, &z)) != 0) {
>                 printf ("Transform failed: %s\n", pj_strerrno (e));
>                 return e;
>         }
>         printf ("X: %e  Y: %e  Z: %e\n", x, y, z);
>         printf ("Expected result was X: 247878 and Y: 666006\n");
>
>         return 0;
> }

Keith,

As mentioned, you have the x/y mixed up.  But as
importantly, the pj_transform() takes geographic locations
in radians, not degrees like the user accessable interface
in cs2cs.

Multiply your values by DEG_TO_RAD to convert from degrees
to radians.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From warmerdam at pobox.com  Fri Jan 20 05:59:14 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 20 Jan 2006 08:59:14 -0500
Subject: [Proj] Two questions about Proj
In-Reply-To: <7425d0870601191115l695d865axa7b94648739f7660@mail.gmail.com>
References: <7425d0870601191115l695d865axa7b94648739f7660@mail.gmail.com>
Message-ID: <931f8ea90601200559u57a128a3v84c7cb2d46f20db5@mail.gmail.com>

On 1/19/06, Andy Canfield <andy.canfield at gmail.com> wrote:
> First question:
> Is there a good example somewhere of using it to transform coordinates
> from one projection to another?

Andy,

I'm not sure what qualifies as a *good* example.  A simple example
might be:

cs2cs +proj=utm +zone=11 +datum=WGS84 +to +proj +zone=12 +datum=WGS84

> Second question:
> Is there a good example somewhere of using it to shift from one datum
> to another within the same projection?

cs2cs +proj=utm +zone=11 +datum=NAD27 +to +proj=utm +zone=11 +datum=NAD83

> Third question:
> Does it support translating coordinates to and from the old AT&T V&H
> coordinate system?

This is not supported by PROJ.  I see Oscar has provided excellent
details on how you could accomplish it.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From kms at passback.co.uk  Fri Jan 20 05:59:29 2006
From: kms at passback.co.uk (Keith Sharp)
Date: Fri, 20 Jan 2006 13:59:29 +0000
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
In-Reply-To: <931f8ea90601200551x55858cf8q6646a9b8ebb1b751@mail.gmail.com>
References: <1137750826.19082.22.camel@animal.passback.co.uk>
	<931f8ea90601200551x55858cf8q6646a9b8ebb1b751@mail.gmail.com>
Message-ID: <1137765569.19082.26.camel@animal.passback.co.uk>

On Fri, 2006-01-20 at 08:51 -0500, Frank Warmerdam wrote:

> Keith,
> 
> As mentioned, you have the x/y mixed up.  But as
> importantly, the pj_transform() takes geographic locations
> in radians, not degrees like the user accessable interface
> in cs2cs.
> 
> Multiply your values by DEG_TO_RAD to convert from degrees
> to radians.

Many thanks Frank, that has solved my problem!

Keith.



From andy.canfield at gmail.com  Fri Jan 20 08:17:27 2006
From: andy.canfield at gmail.com (Andy Canfield)
Date: Fri, 20 Jan 2006 08:17:27 -0800
Subject: [Proj] Two questions about Proj
In-Reply-To: <931f8ea90601200559u57a128a3v84c7cb2d46f20db5@mail.gmail.com>
References: <7425d0870601191115l695d865axa7b94648739f7660@mail.gmail.com>
	<931f8ea90601200559u57a128a3v84c7cb2d46f20db5@mail.gmail.com>
Message-ID: <7425d0870601200817w148dc8d2h648eb380e68d147c@mail.gmail.com>

Actually I was meaning something different in my questions because I
didn't realize most folks use Proj4 from the command line. What I was
really meaning was how do I find an example of using it from C or C++
as a dynamic library or compiled source into my project? I need to
translate coordinates from Lat Lon NAD 83 to State Plan and Vice Versa
and I would rather not have to write it if Proj4 already supports
doing it.

The V&H question was because I used to work for AT&T and I still work
for the same company but our portion of AT&T was bought by another
company. If V&H wasn't supported by Proj4 I would be willing to add it
once I get familiar with the source and how to use it I could add that
and submit it. It's just I'm not familiar enough with Proj4 to know
how it would be used yet. I have written the code to translate Lat lon
to V&H and vice versa in Java and in C++ for two different projects
where I work so translating it into C or whatever Proj4 is written in
should be fairly straight forward. I'd like to get the translation out
in public and open source since it seems to be such a hard projection
to find tools for and the tools that do exist cost way to much for
what they do. Also I think it would go well with the Open Source
spirit that AT&T of old had with it's Bell Labs projects and all the
things it contributed to computing in general.

Oscar is correct we still use V&H to calculate distances between rate
centers for billing purposes on calls.

Andy

On 1/20/06, Frank Warmerdam <warmerdam at pobox.com> wrote:
> On 1/19/06, Andy Canfield <andy.canfield at gmail.com> wrote:
> > First question:
> > Is there a good example somewhere of using it to transform coordinates
> > from one projection to another?
>
> Andy,
>
> I'm not sure what qualifies as a *good* example.  A simple example
> might be:
>
> cs2cs +proj=utm +zone=11 +datum=WGS84 +to +proj +zone=12 +datum=WGS84
>
> > Second question:
> > Is there a good example somewhere of using it to shift from one datum
> > to another within the same projection?
>
> cs2cs +proj=utm +zone=11 +datum=NAD27 +to +proj=utm +zone=11 +datum=NAD83
>
> > Third question:
> > Does it support translating coordinates to and from the old AT&T V&H
> > coordinate system?
>
> This is not supported by PROJ.  I see Oscar has provided excellent
> details on how you could accomplish it.
>
> Best regards,
> --
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | Geospatial Programmer for Rent
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



From kms at passback.co.uk  Fri Jan 20 09:11:50 2006
From: kms at passback.co.uk (Keith Sharp)
Date: Fri, 20 Jan 2006 17:11:50 +0000
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
In-Reply-To: <931f8ea90601200551x55858cf8q6646a9b8ebb1b751@mail.gmail.com>
References: <1137750826.19082.22.camel@animal.passback.co.uk>
	<931f8ea90601200551x55858cf8q6646a9b8ebb1b751@mail.gmail.com>
Message-ID: <1137777110.19082.32.camel@animal.passback.co.uk>

On Fri, 2006-01-20 at 08:51 -0500, Frank Warmerdam wrote:
> Keith,
> 
> As mentioned, you have the x/y mixed up.  But as
> importantly, the pj_transform() takes geographic locations
> in radians, not degrees like the user accessable interface
> in cs2cs.
> 
> Multiply your values by DEG_TO_RAD to convert from degrees
> to radians.

My celebrations were a little premature :-(

I am still not getting the same values from the command:

[kms at animal include]$ /home/kms/tmp/install/bin/cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
-4.134063 55.705968
266000.11       647899.98 -53.12

As from my new (slightly improved) C program:

[kms at animal test]$ ./test
Input ln = -4.134063e+00  Output X = -6.234896e+06  Expected X = 266000
Input lt = 5.570597e+01  Output Y = 7.443438e+06  Expected Y = 647900

The results from the command line match the output from the conversion
routine used by Streetmap:

http://www.streetmap.co.uk/streetmap.dll?GridConvert?name=266000,647900&type=OSGrid

I am still missing something, any suggestions?

Thanks,

Keith.

Latest source:

#include <stdio.h>
#include <proj_api.h>

/*

	Test point is Glasgow Airport:
	
		Landranger: 	NS 479 660 
		WGS84 Lat:		55.705968
		WGS84 Lon:		-4.134063
		OS X:			266000
		OS Y:			647900

*/

int
main (int argc, char *argv[])
{
	char *wgs84[] = { "proj=latlong", "ellps=WGS84", "towgs84=0,0,0", "nodef" };

	char *osgb[] = { "proj=tmerc", "lat_0=49", "lon_0=-2", "k=0.999601272000000040", "x_0=400000", "y_0=-100000", "ellps=airy", "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894", "units=m" };

	projPJ wgs84PJ;
	projPJ osgbPJ;

	double ln = -4.134063, lt = 55.705968, at = 0;
	double x, y, z;
	int e = 0;

	x = ln * DEG_TO_RAD;
	y = lt * DEG_TO_RAD;
	z = at * DEG_TO_RAD;

	if (!(wgs84PJ = pj_init (4, wgs84))) {
		printf ("Failed to initialise WGS84\n");
		return 1;
	}

	if (!(osgbPJ = pj_init (2, osgb))) {
		printf ("Failed to initialise OSGB\n");
		return 1;
	}

	if ((e = pj_transform (wgs84PJ, osgbPJ, 1, 0, &y, &x, &z)) != 0) {
		printf ("Transform failed: %s\n", pj_strerrno (e));
		return e;
	}
	printf ("Input ln = %e  Output X = %e  Expected X = 266000\n", ln, x);
	printf ("Input lt = %e  Output Y = %e  Expected Y = 647900\n", lt, y);

	return 0;
}



From EMiller at dfg.ca.gov  Fri Jan 20 09:44:04 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Fri, 20 Jan 2006 09:44:04 -0800
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
Message-ID: <s3d0b0fb.093@dfg.ca.gov>

Don't multiply height values with DEG_TO_RAD.  Heights are in meters relative to the ellipsoid surface.  But, since you start with zero, that doesn't really impact anything.  If you don't have height values, pj_transform supports passing NULL for the Z-value pointer.

Your k-factor appears to be slightly different between command line and the program.

But, I think your biggest problem is in your pj_init call.  The first argument is supposed to be the number of elements in the array.  Your argument for osgb is only 2.  And none of those first two says don't use default values. 

Let this compile time idiom count your array elements for you:

size_t els = sizeof(array)/sizeof(array[0]);

Obviously, it only works when the definition of the array is in scope.
 
>>> kms at passback.co.uk 1/20/2006 9:11 AM >>>
On Fri, 2006-01-20 at 08:51 -0500, Frank Warmerdam wrote:
> Keith,
> 
> As mentioned, you have the x/y mixed up.  But as
> importantly, the pj_transform() takes geographic locations
> in radians, not degrees like the user accessable interface
> in cs2cs.
> 
> Multiply your values by DEG_TO_RAD to convert from degrees
> to radians.

My celebrations were a little premature :-(

I am still not getting the same values from the command:

[kms at animal include]$ /home/kms/tmp/install/bin/cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
-4.134063 55.705968
266000.11       647899.98 -53.12

As from my new (slightly improved) C program:

[kms at animal test]$ ./test
Input ln = -4.134063e+00  Output X = -6.234896e+06  Expected X = 266000
Input lt = 5.570597e+01  Output Y = 7.443438e+06  Expected Y = 647900

The results from the command line match the output from the conversion
routine used by Streetmap:

http://www.streetmap.co.uk/streetmap.dll?GridConvert?name=266000,647900&type=OSGrid 

I am still missing something, any suggestions?

Thanks,

Keith.

Latest source:

#include <stdio.h>
#include <proj_api.h>

/*

	Test point is Glasgow Airport:
	
		Landranger: 	NS 479 660 
		WGS84 Lat:		55.705968
		WGS84 Lon:		-4.134063
		OS X:			266000
		OS Y:			647900

*/

int
main (int argc, char *argv[])
{
	char *wgs84[] = { "proj=latlong", "ellps=WGS84", "towgs84=0,0,0", "nodef" };

	char *osgb[] = { "proj=tmerc", "lat_0=49", "lon_0=-2", "k=0.999601272000000040", "x_0=400000", "y_0=-100000", "ellps=airy", "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894", "units=m" };

	projPJ wgs84PJ;
	projPJ osgbPJ;

	double ln = -4.134063, lt = 55.705968, at = 0;
	double x, y, z;
	int e = 0;

	x = ln * DEG_TO_RAD;
	y = lt * DEG_TO_RAD;
	z = at * DEG_TO_RAD;

	if (!(wgs84PJ = pj_init (4, wgs84))) {
		printf ("Failed to initialise WGS84\n");
		return 1;
	}

	if (!(osgbPJ = pj_init (2, osgb))) {
		printf ("Failed to initialise OSGB\n");
		return 1;
	}

	if ((e = pj_transform (wgs84PJ, osgbPJ, 1, 0, &y, &x, &z)) != 0) {
		printf ("Transform failed: %s\n", pj_strerrno (e));
		return e;
	}
	printf ("Input ln = %e  Output X = %e  Expected X = 266000\n", ln, x);
	printf ("Input lt = %e  Output Y = %e  Expected Y = 647900\n", lt, y);

	return 0;
}

_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From gerald.evenden at verizon.net  Fri Jan 20 09:47:06 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Fri, 20 Jan 2006 12:47:06 -0500
Subject: [Proj] Two questions about Proj
In-Reply-To: <BFF6872A.654B%ovv@hetnet.nl>
References: <BFF6872A.654B%ovv@hetnet.nl>
Message-ID: <200601201247.06756.gerald.evenden@verizon.net>

	..
> V&H seems to be in use even today.

Why it is, is incomprehensible to me.

> Originally used for calculating a 'billable' distance between telephone
> calling centers.

But my opinion aside, I understand less the code referenced.  It refers to 
ellipsoid yet I cannot find any reference to eccentricity, flattening, etc. 
or anything  aboout Clarke, WGS, etc..  It talks about transferring 
coordinates from ellipsoid to sphere---conformal, authalic, ???  Is billing 
*so accurate* that the ellipse must be accounted for?

What is/was the matter with the Two-Point Equidistant projection that has been 
around for some time?

My opinion of this "projection" remains  unchanged.  It is a ad hoc 
machination to solve a peculiar approach to a financial problem and not a 
serious effort in geodesy, grid systems or general mapping needs.  I suggest 
seeing if Quicken, or other bookkeeping software giants can develop an 
appropriate plugin for this projection.
-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From EMiller at dfg.ca.gov  Fri Jan 20 09:49:09 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Fri, 20 Jan 2006 09:49:09 -0800
Subject: [Proj] Two questions about Proj
Message-ID: <s3d0b22f.036@dfg.ca.gov>

It shouldn't take you long to find examples of using the PROJ4 library from other programs.  A couple of emails today have examples.

Generally the easiest is to use the pj_transform function for the conversions.  You just have to make sure your from/to coordinate systems are defined correctly.  The library supports NADCON datum transformation for NAD27, which is nice.  

All of the State Plane coordinate systems have definitions in the proj/nad/stateXX files.  However, be careful about the multiple versions of State Plane Coordinate Systems.  What are the units? meters? us-ft? ft?  Not everyone has been very good about using the correct units even though NAD27 is supposed to be in "us-ft" (different from "ft") and NAD83 is supposed to be in meters (though some folks have used "us-ft" or even "ft").


>>> andy.canfield at gmail.com 1/20/2006 8:17 AM >>>
Actually I was meaning something different in my questions because I
didn't realize most folks use Proj4 from the command line. What I was
really meaning was how do I find an example of using it from C or C++
as a dynamic library or compiled source into my project? I need to
translate coordinates from Lat Lon NAD 83 to State Plan and Vice Versa
and I would rather not have to write it if Proj4 already supports
doing it.





From kms at passback.co.uk  Fri Jan 20 10:26:40 2006
From: kms at passback.co.uk (Keith Sharp)
Date: Fri, 20 Jan 2006 18:26:40 +0000
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
In-Reply-To: <s3d0b0fb.093@dfg.ca.gov>
References: <s3d0b0fb.093@dfg.ca.gov>
Message-ID: <1137781600.19082.41.camel@animal.passback.co.uk>

On Fri, 2006-01-20 at 09:44 -0800, Eric Miller wrote:
> Don't multiply height values with DEG_TO_RAD.  Heights are in meters
> relative to the ellipsoid surface.  But, since you start with zero,
> that doesn't really impact anything.  If you don't have height values,
> pj_transform supports passing NULL for the Z-value pointer.

Ok, switched to using NULL instead of z as my test case doesn't include
height.

> Your k-factor appears to be slightly different between command line
> and the program.

That was me tinkering, I've made them both the same again.

> But, I think your biggest problem is in your pj_init call.  The first
> argument is supposed to be the number of elements in the array.  Your
> argument for osgb is only 2.  And none of those first two says don't
> use default values. 

Yep, this was a bug introduced by me randomly changing things with
little or no understanding in an attempt to make it work.  Even changing
the pj_init call of OSGB to use 9 as the element count it still gives
different answers:

[kms at animal include]$ /home/kms/tmp/install/bin/cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
-4.134063 55.705968
266000.11       647899.98 -53.12

[kms at animal test]$ ./test 
Input ln = -4.134063e+00  Output X = -6.373681e+06  Expected X = 2.660000e+05
Input lt = 5.570597e+01  Output Y = 8.231288e+06  Expected Y = 6.479000e+05

I must be missing something fundamental, I've been looking at the cs2cs
source and I cannot see what it's main () and process() functions are
doing that I am not.

Keith.

Slightly fixed up source:

#include <stdio.h>
#include <proj_api.h>

/*

	Test point is Glasgow Airport:
	
		Landranger: 	NS 479 660 
		WGS84 Lat:		55.705968
		WGS84 Lon:		-4.134063
		OS X:			266000
		OS Y:			647900

*/

int
main (int argc, char *argv[])
{
	char *wgs84[] = { "proj=latlong", "ellps=WGS84", "towgs84=0,0,0", "nodef" };

	char *osgb[] = { "proj=tmerc", "lat_0=49", "lon_0=-2", "k=0.9996012717", "x_0=400000", "y_0=-100000", "ellps=airy", "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894", "units=m" };

	projPJ wgs84PJ;
	projPJ osgbPJ;

	double ln = -4.134063, lt = 55.705968;
	double x, y;
	int e = 0;
	
	double east = 266000;
	double nrth = 647900;

	x = ln * DEG_TO_RAD;
	y = lt * DEG_TO_RAD;

	if (!(wgs84PJ = pj_init (4, wgs84))) {
		printf ("Failed to initialise WGS84\n");
		return 1;
	}

	if (!(osgbPJ = pj_init (9, osgb))) {
		printf ("Failed to initialise OSGB\n");
		return 1;
	}

	if ((e = pj_transform (wgs84PJ, osgbPJ, 1, 0, &y, &x, NULL)) != 0) {
		printf ("Transform failed: %s\n", pj_strerrno (e));
		return e;
	}
	printf ("Input ln = %e  Output X = %e  Expected X = %e\n", ln, x, east);
	printf ("Input lt = %e  Output Y = %e  Expected Y = %e\n", lt, y, nrth);

	return 0;
}



From EMiller at dfg.ca.gov  Fri Jan 20 10:42:13 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Fri, 20 Jan 2006 10:42:13 -0800
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
Message-ID: <s3d0bea2.055@dfg.ca.gov>

Your "y" and "x" arguments are in the wrong order in the pj_transform call.  I didn't notice it before.

>>> kms at passback.co.uk 1/20/2006 10:26 AM >>>
On Fri, 2006-01-20 at 09:44 -0800, Eric Miller wrote:

> But, I think your biggest problem is in your pj_init call.  The first
> argument is supposed to be the number of elements in the array.  Your
> argument for osgb is only 2.  And none of those first two says don't
> use default values. 

Yep, this was a bug introduced by me randomly changing things with
little or no understanding in an attempt to make it work.  Even changing
the pj_init call of OSGB to use 9 as the element count it still gives
different answers:

[kms at animal include]$ /home/kms/tmp/install/bin/cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
-4.134063 55.705968
266000.11       647899.98 -53.12

[kms at animal test]$ ./test 
Input ln = -4.134063e+00  Output X = -6.373681e+06  Expected X = 2.660000e+05
Input lt = 5.570597e+01  Output Y = 8.231288e+06  Expected Y = 6.479000e+05

I must be missing something fundamental, I've been looking at the cs2cs
source and I cannot see what it's main () and process() functions are
doing that I am not.

Keith.

Slightly fixed up source:

#include <stdio.h>
#include <proj_api.h>

/*

	Test point is Glasgow Airport:
	
		Landranger: 	NS 479 660 
		WGS84 Lat:		55.705968
		WGS84 Lon:		-4.134063
		OS X:			266000
		OS Y:			647900

*/

int
main (int argc, char *argv[])
{
	char *wgs84[] = { "proj=latlong", "ellps=WGS84", "towgs84=0,0,0", "nodef" };

	char *osgb[] = { "proj=tmerc", "lat_0=49", "lon_0=-2", "k=0.9996012717", "x_0=400000", "y_0=-100000", "ellps=airy", "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894", "units=m" };

	projPJ wgs84PJ;
	projPJ osgbPJ;

	double ln = -4.134063, lt = 55.705968;
	double x, y;
	int e = 0;
	
	double east = 266000;
	double nrth = 647900;

	x = ln * DEG_TO_RAD;
	y = lt * DEG_TO_RAD;

	if (!(wgs84PJ = pj_init (4, wgs84))) {
		printf ("Failed to initialise WGS84\n");
		return 1;
	}

	if (!(osgbPJ = pj_init (9, osgb))) {
		printf ("Failed to initialise OSGB\n");
		return 1;
	}

	if ((e = pj_transform (wgs84PJ, osgbPJ, 1, 0, &y, &x, NULL)) != 0) {
		printf ("Transform failed: %s\n", pj_strerrno (e));
		return e;
	}
	printf ("Input ln = %e  Output X = %e  Expected X = %e\n", ln, x, east);
	printf ("Input lt = %e  Output Y = %e  Expected Y = %e\n", lt, y, nrth);

	return 0;
}

_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From kms at passback.co.uk  Fri Jan 20 11:01:05 2006
From: kms at passback.co.uk (Keith Sharp)
Date: Fri, 20 Jan 2006 19:01:05 +0000
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
In-Reply-To: <s3d0bea2.055@dfg.ca.gov>
References: <s3d0bea2.055@dfg.ca.gov>
Message-ID: <1137783665.19082.44.camel@animal.passback.co.uk>

On Fri, 2006-01-20 at 10:42 -0800, Eric Miller wrote:
> Your "y" and "x" arguments are in the wrong order in the pj_transform
> call.  I didn't notice it before.

That was it!  If you notice I had them the wrong way round in my first
email, then I tidied up my code and put them the wrong way round again.

Many thanks for your patience and help,

Keith.



From roger at opq.se  Sun Jan 22 02:56:51 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Sun, 22 Jan 2006 11:56:51 +0100
Subject: [Proj] Using pj_transform API to convert WGS84 to OSGB
In-Reply-To: <1137781600.19082.41.camel@animal.passback.co.uk>
References: <s3d0b0fb.093@dfg.ca.gov>
	<1137781600.19082.41.camel@animal.passback.co.uk>
Message-ID: <1137927411.6385.25.camel@d195-84-185-156.surbrunn.net>

On Fri, 2006-01-20 at 18:26 +0000, Keith Sharp wrote:
> On Fri, 2006-01-20 at 09:44 -0800, Eric Miller wrote:
> > Don't multiply height values with DEG_TO_RAD.  Heights are in meters
> > relative to the ellipsoid surface.  But, since you start with zero,
> > that doesn't really impact anything.  If you don't have height values,
> > pj_transform supports passing NULL for the Z-value pointer.
> 
> Ok, switched to using NULL instead of z as my test case doesn't include
> height.
> 
> > Your k-factor appears to be slightly different between command line
> > and the program.
> 
> That was me tinkering, I've made them both the same again.
> 
> > But, I think your biggest problem is in your pj_init call.  The first
> > argument is supposed to be the number of elements in the array.  Your
> > argument for osgb is only 2.  And none of those first two says don't
> > use default values. 
> 
> Yep, this was a bug introduced by me randomly changing things with
> little or no understanding in an attempt to make it work.  Even changing
> the pj_init call of OSGB to use 9 as the element count it still gives
> different answers:
> 
> [kms at animal include]$ /home/kms/tmp/install/bin/cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +nodefs +to +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 +units=m
> -4.134063 55.705968
> 266000.11       647899.98 -53.12
> 
> [kms at animal test]$ ./test 
> Input ln = -4.134063e+00  Output X = -6.373681e+06  Expected X = 2.660000e+05
> Input lt = 5.570597e+01  Output Y = 8.231288e+06  Expected Y = 6.479000e+05
> 
> I must be missing something fundamental, I've been looking at the cs2cs
> source and I cannot see what it's main () and process() functions are
> doing that I am not.
> 
> Keith.

Here is what I use. The _plus functions make this easier. They take one
string. So there are NO commas between my strings. I just like to make
the call easier to read.

        if (!fromProj = pj_init_plus(
"+proj=latlong "
"+ellps=WGS84 "
"+towgs84=0,0,0 "
"+nodefs"))) return(ISERROR);

        if (!(toProj = pj_init_plus(
"+proj=tmerc "
"+lat_0=49 "
"+lon_0=-2 "
"+k=0.9996012717 "
"+x_0=400000 "
"+y_0=-100000 "
"+ellps=airy "
"+towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894 "
"+units=m "
"+no_defs"))) return(ISERROR);

Then, setting LONG and LAT to the location in dd.mmmmm, I use it with:

        lng = LONG * DEGREE_TO_RADIAN;
        lat = LAT  * DEGREE_TO_RADIAN;
        alt = 0; // We do not give this a height

        if (pj_transform(&fromProj, &toProj, 1, 0, &lng, &lat, &alt)
		!= ISOK) return(ISERROR);

        *localx = lng;
        *localy = lat;
        *localz = alt;	// Whatever...

--
Roger Oberholtzer



From brianp at occinc.com  Wed Jan 25 10:09:02 2006
From: brianp at occinc.com (Brian Peschel)
Date: Wed, 25 Jan 2006 12:09:02 -0600
Subject: [Proj] Updated epsg file
Message-ID: <43D7BEBE.6080203@occinc.com>

Any know where I can get an updated epsg file 
(/usr/local/share/proj/epsg)?  I am using 4.4.9 with the US datum 
extension (proj-4.4.9.tar.gz 
<ftp://ftp.remotesensing.org/proj/proj-4.4.9.tar.gz> and 
proj-datumgrid-1.3.zip 
<ftp://ftp.remotesensing.org/proj/proj-datumgrid-1.3.zip>).  The epsg 
file in my build directory is dated May 12, 2004.  Basically, I need to 
get the values for epsg code of 102185 which I have seen support for in 
other applications (like FME).

Thanks!

-- 
Brian Peschel




From warmerdam at pobox.com  Wed Jan 25 10:23:47 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 25 Jan 2006 13:23:47 -0500
Subject: [Proj] Updated epsg file
In-Reply-To: <43D7BEBE.6080203@occinc.com>
References: <43D7BEBE.6080203@occinc.com>
Message-ID: <931f8ea90601251023ya413a4fx3769ef02aa5a80b0@mail.gmail.com>

On 1/25/06, Brian Peschel <brianp at occinc.com> wrote:
> Any know where I can get an updated epsg file
> (/usr/local/share/proj/epsg)?  I am using 4.4.9 with the US datum
> extension (proj-4.4.9.tar.gz
> <ftp://ftp.remotesensing.org/proj/proj-4.4.9.tar.gz> and
> proj-datumgrid-1.3.zip
> <ftp://ftp.remotesensing.org/proj/proj-datumgrid-1.3.zip>).  The epsg
> file in my build directory is dated May 12, 2004.  Basically, I need to
> get the values for epsg code of 102185 which I have seen support for in
> other applications (like FME).

Brian,

Codes like 102185 are not real EPSG codes, they are
ESRI extensions.  If you look at the nad/esri file you
will find a translation of the ESRI coordinate system codes,
but they seem to be somewhat out of date, since there is no
102185 in there.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From ovv at hetnet.nl  Thu Jan 26 06:17:21 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 26 Jan 2006 15:17:21 +0100
Subject: [Proj] Updated epsg file
In-Reply-To: <931f8ea90601251023ya413a4fx3769ef02aa5a80b0@mail.gmail.com>
Message-ID: <BFFE9880.65F1%ovv@hetnet.nl>


> Codes like 102185 are not real EPSG codes, they are
> ESRI extensions.  If you look at the nad/esri file you
> will find a translation of the ESRI coordinate system codes,
> but they seem to be somewhat out of date, since there is no
> 102185 in there.

I found up-to-date ESRI IDs on the ESRI website.
http://arcweb.esri.com/arcwebonline/services/pcs.htm
(1.9 MB, 2901 entries.)
Derived from this ESRI Projected Coordinate Systems file
the 102185 ID:

102185: NAD_1983_10TM_AEP_Resource
PROJCS: NAD_1983_10TM_AEP_Resource
GEOGCS: GCS_North_American_1983
DATUM: D_North_American_1983
SPHEROID: GRS_1980,6378137.0,298.257222101
PRIMEM: Greenwich,0.0
UNIT: Degree,0.0174532925199433
PROJECTION: Transverse_Mercator
PARAMETER: False_Easting,0.0
PARAMETER: False_Northing,0.0
PARAMETER: Central_Meridian,-115.0
PARAMETER: Scale_Factor,0.9992
PARAMETER: Latitude_Of_Origin,0.0
UNIT: Meter,1.0
 
Is this the one?




From brianp at occinc.com  Thu Jan 26 09:45:23 2006
From: brianp at occinc.com (Brian Peschel)
Date: Thu, 26 Jan 2006 11:45:23 -0600
Subject: [Proj] Updated epsg file
Message-ID: <43D90AB3.2070001@occinc.com>

> > >/ Any know where I can get an updated epsg file
/> > >/ (/usr/local/share/proj/epsg)?  I am using 4.4.9 with the US datum
/> > >/ extension (proj-4.4.9.tar.gz
/> > >/ <ftp://ftp.remotesensing.org/proj/proj-4.4.9.tar.gz> and
/> > >/ proj-datumgrid-1.3.zip
/> > >/ <ftp://ftp.remotesensing.org/proj/proj-datumgrid-1.3.zip>).  The epsg
/> > >/ file in my build directory is dated May 12, 2004.  Basically, I need to
/> > >/ get the values for epsg code of 102185 which I have seen support for in
/> > >/ other applications (like FME).
/> >
> > Brian,
> >/ Codes like 102185 are not real EPSG codes, they are
/> >/ ESRI extensions.  If you look at the nad/esri file you
/> >/ will find a translation of the ESRI coordinate system codes,
/> >/ but they seem to be somewhat out of date, since there is no
/> >/ 102185 in there.
/> 
> I found up-to-date ESRI IDs on the ESRI website.
> http://arcweb.esri.com/arcwebonline/services/pcs.htm
> (1.9 MB, 2901 entries.)
> Derived from this ESRI Projected Coordinate Systems file
> the 102185 ID:
> 
> 102185: NAD_1983_10TM_AEP_Resource
> PROJCS: NAD_1983_10TM_AEP_Resource
> GEOGCS: GCS_North_American_1983
> DATUM: D_North_American_1983
> SPHEROID: GRS_1980,6378137.0,298.257222101
> PRIMEM: Greenwich,0.0
> UNIT: Degree,0.0174532925199433
> PROJECTION: Transverse_Mercator
> PARAMETER: False_Easting,0.0
> PARAMETER: False_Northing,0.0
> PARAMETER: Central_Meridian,-115.0
> PARAMETER: Scale_Factor,0.9992
> PARAMETER: Latitude_Of_Origin,0.0
> UNIT: Meter,1.0
>  
> Is this the one?

That is the conversion I need and it matches the data I have.  How do I incorporate
this into PROJ.4?  If I look the /usr/local/proj/esri file, they are formated like

# Anguilla 1957 / British West Indies Grid
<2000> +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.999500 +x_0=400000 +y_0=0 +ellps=clr

which is not the same format as the link Oscar provided.


-- 
Brian Peschel




From gerald.evenden at verizon.net  Thu Jan 26 10:06:11 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Thu, 26 Jan 2006 13:06:11 -0500
Subject: [Proj] Updated epsg file
In-Reply-To: <43D90AB3.2070001@occinc.com>
References: <43D90AB3.2070001@occinc.com>
Message-ID: <200601261306.11687.gerald.evenden@verizon.net>

On Thursday 26 January 2006 12:45 pm, Brian Peschel wrote:
	...
> > 102185: NAD_1983_10TM_AEP_Resource
> > PROJCS: NAD_1983_10TM_AEP_Resource
> > GEOGCS: GCS_North_American_1983
> > DATUM: D_North_American_1983
> > SPHEROID: GRS_1980,6378137.0,298.257222101
> > PRIMEM: Greenwich,0.0
> > UNIT: Degree,0.0174532925199433
> > PROJECTION: Transverse_Mercator
> > PARAMETER: False_Easting,0.0
> > PARAMETER: False_Northing,0.0
> > PARAMETER: Central_Meridian,-115.0
> > PARAMETER: Scale_Factor,0.9992
> > PARAMETER: Latitude_Of_Origin,0.0
> > UNIT: Meter,1.0
> >
> > Is this the one?
>
> That is the conversion I need and it matches the data I have.  How do I
> incorporate this into PROJ.4?  If I look the /usr/local/proj/esri file,
> they are formated like
>
> # Anguilla 1957 / British West Indies Grid
> <2000> +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.999500 +x_0=400000 +y_0=0
> +ellps=clr
>
> which is not the same format as the link Oscar provided.

As far as proj is concerned the above ESRI specs are simply:

+proj=tmerc +ellps=GRS80 +lon_0=-115 +k_0=0.9992
-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From jarrett_l_redd at yahoo.com  Fri Jan 27 00:59:35 2006
From: jarrett_l_redd at yahoo.com (Jarrett L. Redd)
Date: Fri, 27 Jan 2006 00:59:35 -0800 (PST)
Subject: [Proj] Dataset mismatch?
Message-ID: <20060127085936.48496.qmail@web35604.mail.mud.yahoo.com>

Howdy...

Please forgive the long cross-posting.  I'm new to this and don't know exactly
who will have a possible answer for this issue of mine.

I'm a volunteer working on a avalanche terrain and runout mapping project for
potential use by our mountain search and rescue teams.  I'm using DRG 24k
topographical geotiff slices in UTM NAD27 and then processing 1/3 arc-sec
elevation .adf files in lat/lon NAD83 to match up and plot slopes and such. 
All this is downloaded from the NED seamless website.

Problem is, the two data sets don't match up precisely.  That is, the features
on the topo seem to match up precisely with elevation data in some places and
not so precisely in others.  At the worst, the error is around 500 feet.  I'm
using "libproj" to convert coordinates between the two datums.  I'm currently
processing a section of Colorado, and I'm building "libproj" to include the
"conus" correction file.  I've also verified my coordinate conversions are
correct by comparing against openEV and topoUSA.  I'm also using "libgdal" to
pull out the elevation data and "libgeotiff" to grab the image raster data and
geo tags.

However, like I said, I'm new to this.  I'm converting the NW and SE corners of
the geotiff into NAD83 and then interpolating for each pixel to match up with
the elevation data using the origin and resolution of the various elevation
pieces.  I have a sneaky feeling that life isn't that simple.  Am I missing
some fancy projection to correct for curvature of the earth or something?  Or
is this just an inherent mismatch between the data sets?  Or both?  Other
suggestions to try?

Please don't suggest using a commercially available mapping package since we
have no money and I need to do very extensive data processing once I have the
data sets matching up properly.

Thanks.

-Jarrett

P.S.  Here's an example of a nearly 500 foot mismatch error:

A tiny rock spire on the topo map:
13 0394704 4334970

And the corresponding spike in elevation data:
13 0394571 4335039

[Coords provided by OpenEV cursor]

I don't expect a perfect matchup, but the worst areas need to be corrected
somehow to make the avalanche terrain maps useful.

I can email an example image showing the error if someone is really interested.

Thanks again.



From ed at topozone.com  Fri Jan 27 06:40:47 2006
From: ed at topozone.com (Ed McNierney)
Date: Fri, 27 Jan 2006 09:40:47 -0500
Subject: [Proj] RE: [Gdal-dev] Dataset mismatch?
Message-ID: <4BF377919225F449BB097CB76FFE9BC83DD855@ptolemy.topozone.com>

Jarrett -

I looked at both of your coordinates on TopoZone, and - assuming that
I'm identifying the "tiny rock spire" correctly, neither one of those
coordinates seems to be correct.

Assuming the coordinates you list below are NAD83, here is the "topo
map" location:

http://www.topozone.com/map.asp?z=13&e=394704&n=4334970&datum=NAD83&u=4

And here is the "elevation spike" location:

http://www.topozone.com/map.asp?z=13&e=394571&n=4335039&datum=NAD83&u=4 

Using the USGS NED data, I find a local elevation maximum of 11,999.8
feet at UTM 13 394644E 4335185N (NAD83), which corresponds quite well
with the location of the little "ring" on the topo map you can see in
both the links above.

Perhaps if you could give us the data you're using and walk through the
process showing intermediate results we can help diagnose the
problem(s).

	- Ed

Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
ed at topozone.com
(978) 251-4242 

-----Original Message-----
From: gdal-dev-bounces at lists.maptools.org
[mailto:gdal-dev-bounces at lists.maptools.org] On Behalf Of Jarrett L.
Redd
Sent: Friday, January 27, 2006 4:00 AM
To: gdal-dev at lists.maptools.org; proj at lists.maptools.org;
geotiff at lists.maptools.org
Subject: [Gdal-dev] Dataset mismatch?

Howdy...

Please forgive the long cross-posting.  I'm new to this and don't know
exactly who will have a possible answer for this issue of mine.

I'm a volunteer working on a avalanche terrain and runout mapping
project for potential use by our mountain search and rescue teams.  I'm
using DRG 24k topographical geotiff slices in UTM NAD27 and then
processing 1/3 arc-sec elevation .adf files in lat/lon NAD83 to match up
and plot slopes and such. 
All this is downloaded from the NED seamless website.

Problem is, the two data sets don't match up precisely.  That is, the
features on the topo seem to match up precisely with elevation data in
some places and not so precisely in others.  At the worst, the error is
around 500 feet.  I'm using "libproj" to convert coordinates between the
two datums.  I'm currently processing a section of Colorado, and I'm
building "libproj" to include the "conus" correction file.  I've also
verified my coordinate conversions are correct by comparing against
openEV and topoUSA.  I'm also using "libgdal" to pull out the elevation
data and "libgeotiff" to grab the image raster data and geo tags.

However, like I said, I'm new to this.  I'm converting the NW and SE
corners of the geotiff into NAD83 and then interpolating for each pixel
to match up with the elevation data using the origin and resolution of
the various elevation pieces.  I have a sneaky feeling that life isn't
that simple.  Am I missing some fancy projection to correct for
curvature of the earth or something?  Or is this just an inherent
mismatch between the data sets?  Or both?  Other suggestions to try?

Please don't suggest using a commercially available mapping package
since we have no money and I need to do very extensive data processing
once I have the data sets matching up properly.

Thanks.

-Jarrett

P.S.  Here's an example of a nearly 500 foot mismatch error:

A tiny rock spire on the topo map:
13 0394704 4334970

And the corresponding spike in elevation data:
13 0394571 4335039

[Coords provided by OpenEV cursor]

I don't expect a perfect matchup, but the worst areas need to be
corrected somehow to make the avalanche terrain maps useful.

I can email an example image showing the error if someone is really
interested.

Thanks again.

_______________________________________________
Gdal-dev mailing list
Gdal-dev at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/gdal-dev



From mfinn at usgs.gov  Fri Jan 27 09:52:09 2006
From: mfinn at usgs.gov (Michael P Finn)
Date: Fri, 27 Jan 2006 11:52:09 -0600
Subject: [Proj] Dataset mismatch?
In-Reply-To: <20060127085936.48496.qmail@web35604.mail.mud.yahoo.com>
Message-ID: <OF994356CB.DFC6D75D-ON86257103.0061FB54-86257103.00622915@usgs.gov>

>From my colleague Lynn Usery (USGS/ Geospatial Information Office).   Mike 
Finn




Using 2 points is not sufficient. The user should use a grid of at least 
20 x 20 points (400 total points) over the quad. Transform those between 
the datums and resample the pixels based on this approach. This is a 
simple operation in Imagine which automatically locates the control 
points then applies the datum tranformation, interpolates and resamples 
the data. Of course Jarrett said no commercial software, so he must find 
a way to implement this process with open source code.

To perform the datum transformation, two points is just not enough to 
handle the differences between the two datums. NGS used thousands of 
points in the transformation to determine the NADCON shifts between NAD 
27 and NAD 83 for the US.

Lynn





"Jarrett L. Redd" <jarrett_l_redd at yahoo.com> 
Sent by: proj-bounces at lists.maptools.org
01/27/2006 02:59 AM
Please respond to
"PROJ.4 and general Projections Discussions"    <proj at lists.maptools.org>


To
gdal-dev at lists.maptools.org, proj at lists.maptools.org, 
geotiff at lists.maptools.org
cc

Subject
[Proj] Dataset mismatch?






Howdy...

Please forgive the long cross-posting.  I'm new to this and don't know 
exactly
who will have a possible answer for this issue of mine.

I'm a volunteer working on a avalanche terrain and runout mapping project 
for
potential use by our mountain search and rescue teams.  I'm using DRG 24k
topographical geotiff slices in UTM NAD27 and then processing 1/3 arc-sec
elevation .adf files in lat/lon NAD83 to match up and plot slopes and 
such. 
All this is downloaded from the NED seamless website.

Problem is, the two data sets don't match up precisely.  That is, the 
features
on the topo seem to match up precisely with elevation data in some places 
and
not so precisely in others.  At the worst, the error is around 500 feet. 
I'm
using "libproj" to convert coordinates between the two datums.  I'm 
currently
processing a section of Colorado, and I'm building "libproj" to include 
the
"conus" correction file.  I've also verified my coordinate conversions are
correct by comparing against openEV and topoUSA.  I'm also using "libgdal" 
to
pull out the elevation data and "libgeotiff" to grab the image raster data 
and
geo tags.

However, like I said, I'm new to this.  I'm converting the NW and SE 
corners of
the geotiff into NAD83 and then interpolating for each pixel to match up 
with
the elevation data using the origin and resolution of the various 
elevation
pieces.  I have a sneaky feeling that life isn't that simple.  Am I 
missing
some fancy projection to correct for curvature of the earth or something? 
Or
is this just an inherent mismatch between the data sets?  Or both?  Other
suggestions to try?

Please don't suggest using a commercially available mapping package since 
we
have no money and I need to do very extensive data processing once I have 
the
data sets matching up properly.

Thanks.

-Jarrett

P.S.  Here's an example of a nearly 500 foot mismatch error:

A tiny rock spire on the topo map:
13 0394704 4334970

And the corresponding spike in elevation data:
13 0394571 4335039

[Coords provided by OpenEV cursor]

I don't expect a perfect matchup, but the worst areas need to be corrected
somehow to make the avalanche terrain maps useful.

I can email an example image showing the error if someone is really 
interested.

Thanks again.

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060127/72edb875/attachment.html>

From ed at topozone.com  Fri Jan 27 10:29:26 2006
From: ed at topozone.com (Ed McNierney)
Date: Fri, 27 Jan 2006 13:29:26 -0500
Subject: [Proj] Dataset mismatch?
Message-ID: <4BF377919225F449BB097CB76FFE9BC83DD85F@ptolemy.topozone.com>

Mike -
 
Yes, the USGS used thousands of points, but they needed to cover the
whole country!  For CONUS that's around 50,000 quads worth.  We're only
talking about one quad that's only about 10 x 15 kilometers.  If the NGS
used 400 points per quad they would have needed over 20 million points.
 
I took a look at the Mount Sherman, CO quad that is the subject of the
original post.  The northwest corner of that quad is at 392131E 4345059N
(NAD27) and 392084E 4345267N (NAD83).  The NAD27 -> NAD83 datum shift at
that point is (-47E, +208N).  If I go to the southeast corner of that
quad, the coordinates are 402746E 4331044N (NAD27) and 402699E 4331252N
(NAD93).  The NAD27 -> NAD83 datum shift at that opposite corner is
(-47E, +208N) - identical to the datum shift at the opposite corner!  I
cannot imagine one would require 400 intermediate control points to
accurately calculate a datum shift across an area the size of a
7.5-minute quad - especially when the shift at opposite corners is the
same.  You might, I suppose, manage to get off by a meter or two, but
since a single pixel on a 1:24K DRG is 2.4384 meters on a side, you're
literally below the threshold of precision on the data.
 
Jarrett's seeing discrepancies of hundreds of meters.  Even if you
measured only one point and presumed the datum shift was identical
across the entire quad, you couldn't produce an error that large.
 
     - Ed
 
Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
ed at topozone.com
(978) 251-4242 

 
 
 

________________________________

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Michael P Finn
Sent: Friday, January 27, 2006 12:52 PM
To: PROJ.4 and general Projections Discussions
Cc: geotiff at lists.maptools.org; proj at lists.maptools.org;
gdal-dev at lists.maptools.org; proj-bounces at lists.maptools.org
Subject: Re: [Proj] Dataset mismatch?



>From my colleague Lynn Usery (USGS/ Geospatial Information Office).
Mike Finn 




Using 2 points is not sufficient. The user should use a grid of at least

20 x 20 points (400 total points) over the quad. Transform those between

the datums and resample the pixels based on this approach. This is a 
simple operation in Imagine which automatically locates the control 
points then applies the datum tranformation, interpolates and resamples 
the data. Of course Jarrett said no commercial software, so he must find

a way to implement this process with open source code.

To perform the datum transformation, two points is just not enough to 
handle the differences between the two datums. NGS used thousands of 
points in the transformation to determine the NADCON shifts between NAD 
27 and NAD 83 for the US.

Lynn 





"Jarrett L. Redd" <jarrett_l_redd at yahoo.com> 
Sent by: proj-bounces at lists.maptools.org 

01/27/2006 02:59 AM 
Please respond to
"PROJ.4 and general Projections Discussions"
<proj at lists.maptools.org>


To
gdal-dev at lists.maptools.org, proj at lists.maptools.org,
geotiff at lists.maptools.org 
cc
Subject
[Proj] Dataset mismatch?

	




Howdy...

Please forgive the long cross-posting.  I'm new to this and don't know
exactly
who will have a possible answer for this issue of mine.

I'm a volunteer working on a avalanche terrain and runout mapping
project for
potential use by our mountain search and rescue teams.  I'm using DRG
24k
topographical geotiff slices in UTM NAD27 and then processing 1/3
arc-sec
elevation .adf files in lat/lon NAD83 to match up and plot slopes and
such. 
All this is downloaded from the NED seamless website.

Problem is, the two data sets don't match up precisely.  That is, the
features
on the topo seem to match up precisely with elevation data in some
places and
not so precisely in others.  At the worst, the error is around 500 feet.
I'm
using "libproj" to convert coordinates between the two datums.  I'm
currently
processing a section of Colorado, and I'm building "libproj" to include
the
"conus" correction file.  I've also verified my coordinate conversions
are
correct by comparing against openEV and topoUSA.  I'm also using
"libgdal" to
pull out the elevation data and "libgeotiff" to grab the image raster
data and
geo tags.

However, like I said, I'm new to this.  I'm converting the NW and SE
corners of
the geotiff into NAD83 and then interpolating for each pixel to match up
with
the elevation data using the origin and resolution of the various
elevation
pieces.  I have a sneaky feeling that life isn't that simple.  Am I
missing
some fancy projection to correct for curvature of the earth or
something?  Or
is this just an inherent mismatch between the data sets?  Or both?
Other
suggestions to try?

Please don't suggest using a commercially available mapping package
since we
have no money and I need to do very extensive data processing once I
have the
data sets matching up properly.

Thanks.

-Jarrett

P.S.  Here's an example of a nearly 500 foot mismatch error:

A tiny rock spire on the topo map:
13 0394704 4334970

And the corresponding spike in elevation data:
13 0394571 4335039

[Coords provided by OpenEV cursor]

I don't expect a perfect matchup, but the worst areas need to be
corrected
somehow to make the avalanche terrain maps useful.

I can email an example image showing the error if someone is really
interested.

Thanks again.

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060127/4f7a3caf/attachment.html>

From jarrett_l_redd at yahoo.com  Fri Jan 27 10:53:05 2006
From: jarrett_l_redd at yahoo.com (Jarrett L. Redd)
Date: Fri, 27 Jan 2006 10:53:05 -0800 (PST)
Subject: [Proj] RE: [Gdal-dev] Dataset mismatch?
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC83DD855@ptolemy.topozone.com>
Message-ID: <20060127185305.36831.qmail@web35602.mail.mud.yahoo.com>

Howdy, Ed...

Thanks for the response.  Sorry, I didn't specify that the coords I gave for
the rock spire are in NAD27.  I checked with topozone and it seems to match up
for that datum.

However, I think I may have found part of my problem.  I need to find the NAD83
coords for each pixel in the geotiff to match it up with the elevation data. 
To do this, I was linearly interpolating from the NW/SE corner coords.  This
seems to be the source of the error.  When I switch to using GTIFImageToPCS to
go from pixels to NAD27 UTM, then "libproj" to go from NAD27 to NAD83, I get a
pretty good match.  However, this is very slow, so I guess I'll still
interpolate, but over smaller regions.

However, once I have the pixel coords, I have to figure out the associated
elevation value.  I don't see any other way to do this but to interpolate from
the provided origin and lat/lon pixel resolutions in the ADF file.  Is this the
proper way?

Thanks.

-Jarrett

--- Ed McNierney <ed at topozone.com> wrote:

> Jarrett -
> 
> I looked at both of your coordinates on TopoZone, and - assuming that
> I'm identifying the "tiny rock spire" correctly, neither one of those
> coordinates seems to be correct.
> 
> Assuming the coordinates you list below are NAD83, here is the "topo
> map" location:
> 
> http://www.topozone.com/map.asp?z=13&e=394704&n=4334970&datum=NAD83&u=4
> 
> And here is the "elevation spike" location:
> 
> http://www.topozone.com/map.asp?z=13&e=394571&n=4335039&datum=NAD83&u=4 
> 
> Using the USGS NED data, I find a local elevation maximum of 11,999.8
> feet at UTM 13 394644E 4335185N (NAD83), which corresponds quite well
> with the location of the little "ring" on the topo map you can see in
> both the links above.
> 
> Perhaps if you could give us the data you're using and walk through the
> process showing intermediate results we can help diagnose the
> problem(s).
> 
> 	- Ed
> 
> Ed McNierney
> President and Chief Mapmaker
> TopoZone.com / Maps a la carte, Inc.
> 73 Princeton Street, Suite 305
> North Chelmsford, MA  01863
> ed at topozone.com
> (978) 251-4242 
> 
> -----Original Message-----
> From: gdal-dev-bounces at lists.maptools.org
> [mailto:gdal-dev-bounces at lists.maptools.org] On Behalf Of Jarrett L.
> Redd
> Sent: Friday, January 27, 2006 4:00 AM
> To: gdal-dev at lists.maptools.org; proj at lists.maptools.org;
> geotiff at lists.maptools.org
> Subject: [Gdal-dev] Dataset mismatch?
> 
> Howdy...
> 
> Please forgive the long cross-posting.  I'm new to this and don't know
> exactly who will have a possible answer for this issue of mine.
> 
> I'm a volunteer working on a avalanche terrain and runout mapping
> project for potential use by our mountain search and rescue teams.  I'm
> using DRG 24k topographical geotiff slices in UTM NAD27 and then
> processing 1/3 arc-sec elevation .adf files in lat/lon NAD83 to match up
> and plot slopes and such. 
> All this is downloaded from the NED seamless website.
> 
> Problem is, the two data sets don't match up precisely.  That is, the
> features on the topo seem to match up precisely with elevation data in
> some places and not so precisely in others.  At the worst, the error is
> around 500 feet.  I'm using "libproj" to convert coordinates between the
> two datums.  I'm currently processing a section of Colorado, and I'm
> building "libproj" to include the "conus" correction file.  I've also
> verified my coordinate conversions are correct by comparing against
> openEV and topoUSA.  I'm also using "libgdal" to pull out the elevation
> data and "libgeotiff" to grab the image raster data and geo tags.
> 
> However, like I said, I'm new to this.  I'm converting the NW and SE
> corners of the geotiff into NAD83 and then interpolating for each pixel
> to match up with the elevation data using the origin and resolution of
> the various elevation pieces.  I have a sneaky feeling that life isn't
> that simple.  Am I missing some fancy projection to correct for
> curvature of the earth or something?  Or is this just an inherent
> mismatch between the data sets?  Or both?  Other suggestions to try?
> 
> Please don't suggest using a commercially available mapping package
> since we have no money and I need to do very extensive data processing
> once I have the data sets matching up properly.
> 
> Thanks.
> 
> -Jarrett
> 
> P.S.  Here's an example of a nearly 500 foot mismatch error:
> 
> A tiny rock spire on the topo map:
> 13 0394704 4334970
> 
> And the corresponding spike in elevation data:
> 13 0394571 4335039
> 
> [Coords provided by OpenEV cursor]
> 
> I don't expect a perfect matchup, but the worst areas need to be
> corrected somehow to make the avalanche terrain maps useful.
> 
> I can email an example image showing the error if someone is really
> interested.
> 
> Thanks again.
> 
> _______________________________________________
> Gdal-dev mailing list
> Gdal-dev at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/gdal-dev
> 



From jarrett_l_redd at yahoo.com  Fri Jan 27 11:03:20 2006
From: jarrett_l_redd at yahoo.com (Jarrett L. Redd)
Date: Fri, 27 Jan 2006 11:03:20 -0800 (PST)
Subject: [Proj] Dataset mismatch?
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC83DD85F@ptolemy.topozone.com>
Message-ID: <20060127190320.30855.qmail@web35608.mail.mud.yahoo.com>

Sorry... saw these messages after my previous response.  Believe it or not,
this seems to be the problem.  I had my suspicions that it was a non-linear
problem associated with the datum conversion, and when I did the conversion,
the error goes away (mostly).  I didn't bother at first because I also believed
it was too small an area to show such an error.  I guess not!  By the way, it
may not be possible to answer this question, but I thought I'd try anyway: 
anyone know what maximum error mismatch to expect due to the datasets
themselves?  I'm seeing 50 feet in various areas, and occasionally up to 150
feet (in narrow canyons, etc).  Perhaps I still have a problem somewhere.

Thanks.

-Jarrett

--- Ed McNierney <ed at topozone.com> wrote:

> Mike -
>  
> Yes, the USGS used thousands of points, but they needed to cover the
> whole country!  For CONUS that's around 50,000 quads worth.  We're only
> talking about one quad that's only about 10 x 15 kilometers.  If the NGS
> used 400 points per quad they would have needed over 20 million points.
>  
> I took a look at the Mount Sherman, CO quad that is the subject of the
> original post.  The northwest corner of that quad is at 392131E 4345059N
> (NAD27) and 392084E 4345267N (NAD83).  The NAD27 -> NAD83 datum shift at
> that point is (-47E, +208N).  If I go to the southeast corner of that
> quad, the coordinates are 402746E 4331044N (NAD27) and 402699E 4331252N
> (NAD93).  The NAD27 -> NAD83 datum shift at that opposite corner is
> (-47E, +208N) - identical to the datum shift at the opposite corner!  I
> cannot imagine one would require 400 intermediate control points to
> accurately calculate a datum shift across an area the size of a
> 7.5-minute quad - especially when the shift at opposite corners is the
> same.  You might, I suppose, manage to get off by a meter or two, but
> since a single pixel on a 1:24K DRG is 2.4384 meters on a side, you're
> literally below the threshold of precision on the data.
>  
> Jarrett's seeing discrepancies of hundreds of meters.  Even if you
> measured only one point and presumed the datum shift was identical
> across the entire quad, you couldn't produce an error that large.
>  
>      - Ed
>  
> Ed McNierney
> President and Chief Mapmaker
> TopoZone.com / Maps a la carte, Inc.
> 73 Princeton Street, Suite 305
> North Chelmsford, MA  01863
> ed at topozone.com
> (978) 251-4242 
> 
>  
>  
>  
> 
> ________________________________
> 
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Michael P Finn
> Sent: Friday, January 27, 2006 12:52 PM
> To: PROJ.4 and general Projections Discussions
> Cc: geotiff at lists.maptools.org; proj at lists.maptools.org;
> gdal-dev at lists.maptools.org; proj-bounces at lists.maptools.org
> Subject: Re: [Proj] Dataset mismatch?
> 
> 
> 
> >From my colleague Lynn Usery (USGS/ Geospatial Information Office).
> Mike Finn 
> 
> 
> 
> 
> Using 2 points is not sufficient. The user should use a grid of at least
> 
> 20 x 20 points (400 total points) over the quad. Transform those between
> 
> the datums and resample the pixels based on this approach. This is a 
> simple operation in Imagine which automatically locates the control 
> points then applies the datum tranformation, interpolates and resamples 
> the data. Of course Jarrett said no commercial software, so he must find
> 
> a way to implement this process with open source code.
> 
> To perform the datum transformation, two points is just not enough to 
> handle the differences between the two datums. NGS used thousands of 
> points in the transformation to determine the NADCON shifts between NAD 
> 27 and NAD 83 for the US.
> 
> Lynn 
> 
> 
> 
> 
> 
> "Jarrett L. Redd" <jarrett_l_redd at yahoo.com> 
> Sent by: proj-bounces at lists.maptools.org 
> 
> 01/27/2006 02:59 AM 
> Please respond to
> "PROJ.4 and general Projections Discussions"
> <proj at lists.maptools.org>
> 
> 
> To
> gdal-dev at lists.maptools.org, proj at lists.maptools.org,
> geotiff at lists.maptools.org 
> cc
> Subject
> [Proj] Dataset mismatch?
> 
> 	
> 
> 
> 
> 
> Howdy...
> 
> Please forgive the long cross-posting.  I'm new to this and don't know
> exactly
> who will have a possible answer for this issue of mine.
> 
> I'm a volunteer working on a avalanche terrain and runout mapping
> project for
> potential use by our mountain search and rescue teams.  I'm using DRG
> 24k
> topographical geotiff slices in UTM NAD27 and then processing 1/3
> arc-sec
> elevation .adf files in lat/lon NAD83 to match up and plot slopes and
> such. 
> All this is downloaded from the NED seamless website.
> 
> Problem is, the two data sets don't match up precisely.  That is, the
> features
> on the topo seem to match up precisely with elevation data in some
> places and
> not so precisely in others.  At the worst, the error is around 500 feet.
> I'm
> using "libproj" to convert coordinates between the two datums.  I'm
> currently
> processing a section of Colorado, and I'm building "libproj" to include
> the
> "conus" correction file.  I've also verified my coordinate conversions
> are
> correct by comparing against openEV and topoUSA.  I'm also using
> "libgdal" to
> pull out the elevation data and "libgeotiff" to grab the image raster
> data and
> geo tags.
> 
> However, like I said, I'm new to this.  I'm converting the NW and SE
> corners of
> the geotiff into NAD83 and then interpolating for each pixel to match up
> with
> the elevation data using the origin and resolution of the various
> elevation
> pieces.  I have a sneaky feeling that life isn't that simple.  Am I
> missing
> some fancy projection to correct for curvature of the earth or
> something?  Or
> is this just an inherent mismatch between the data sets?  Or both?
> Other
> suggestions to try?
> 
> Please don't suggest using a commercially available mapping package
> since we
> have no money and I need to do very extensive data processing once I
> have the
> data sets matching up properly.
> 
> Thanks.
> 
> -Jarrett
> 
> P.S.  Here's an example of a nearly 500 foot mismatch error:
> 
> A tiny rock spire on the topo map:
> 13 0394704 4334970
> 
> And the corresponding spike in elevation data:
> 13 0394571 4335039
> 
> [Coords provided by OpenEV cursor]
> 
> I don't expect a perfect matchup, but the worst areas need to be
> corrected
> somehow to make the avalanche terrain maps useful.
> 
> I can email an example image showing the error if someone is really
> interested.
> 
> Thanks again.
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> > _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From mfinn at usgs.gov  Fri Jan 27 11:13:05 2006
From: mfinn at usgs.gov (Michael P Finn)
Date: Fri, 27 Jan 2006 13:13:05 -0600
Subject: [Proj] Dataset mismatch?
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC83DD85F@ptolemy.topozone.com>
Message-ID: <OF636F9034.B9685EC1-ON86257103.00687630-86257103.006991EE@usgs.gov>

Ed,

Thank you for the reply. I haven't rolled up my sleeves on this problem 
but I follow you points clearly. Off the top of my head then, if a 
transformation of this sort is only a meter or two, and a pixel is 2.4m, 
then Jarrett's discrepancy of a couple hundred meters, smells like a 
blunder somewhere to me. (Or, perhaps, he is at the max accuracy he can 
expect considering the two sources he is using and their pedigrees (the 
accuracies (errors) in their sources and methods of collection).

Mike






"Ed McNierney" <ed at topozone.com> 
Sent by: proj-bounces at lists.maptools.org
01/27/2006 12:29 PM
Please respond to
"PROJ.4 and general Projections Discussions"    <proj at lists.maptools.org>


To
"PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
cc
proj-bounces at lists.maptools.org, gdal-dev at lists.maptools.org
Subject
RE: [Proj] Dataset mismatch?






Mike -
 
Yes, the USGS used thousands of points, but they needed to cover the whole 
country!  For CONUS that's around 50,000 quads worth.  We're only talking 
about one quad that's only about 10 x 15 kilometers.  If the NGS used 400 
points per quad they would have needed over 20 million points.
 
I took a look at the Mount Sherman, CO quad that is the subject of the 
original post.  The northwest corner of that quad is at 392131E 4345059N 
(NAD27) and 392084E 4345267N (NAD83).  The NAD27 -> NAD83 datum shift at 
that point is (-47E, +208N).  If I go to the southeast corner of that 
quad, the coordinates are 402746E 4331044N (NAD27) and 402699E 4331252N 
(NAD93).  The NAD27 -> NAD83 datum shift at that opposite corner is (-47E, 
+208N) - identical to the datum shift at the opposite corner!  I cannot 
imagine one would require 400 intermediate control points to accurately 
calculate a datum shift across an area the size of a 7.5-minute quad - 
especially when the shift at opposite corners is the same.  You might, I 
suppose, manage to get off by a meter or two, but since a single pixel on 
a 1:24K DRG is 2.4384 meters on a side, you're literally below the 
threshold of precision on the data.
 
Jarrett's seeing discrepancies of hundreds of meters.  Even if you 
measured only one point and presumed the datum shift was identical across 
the entire quad, you couldn't produce an error that large.
 
     - Ed
 
Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
ed at topozone.com
(978) 251-4242 
 
 
 

From: proj-bounces at lists.maptools.org 
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Michael P Finn
Sent: Friday, January 27, 2006 12:52 PM
To: PROJ.4 and general Projections Discussions
Cc: geotiff at lists.maptools.org; proj at lists.maptools.org; 
gdal-dev at lists.maptools.org; proj-bounces at lists.maptools.org
Subject: Re: [Proj] Dataset mismatch?


>From my colleague Lynn Usery (USGS/ Geospatial Information Office).   Mike 
Finn 




Using 2 points is not sufficient. The user should use a grid of at least 
20 x 20 points (400 total points) over the quad. Transform those between 
the datums and resample the pixels based on this approach. This is a 
simple operation in Imagine which automatically locates the control 
points then applies the datum tranformation, interpolates and resamples 
the data. Of course Jarrett said no commercial software, so he must find 
a way to implement this process with open source code.

To perform the datum transformation, two points is just not enough to 
handle the differences between the two datums. NGS used thousands of 
points in the transformation to determine the NADCON shifts between NAD 
27 and NAD 83 for the US.

Lynn 




"Jarrett L. Redd" <jarrett_l_redd at yahoo.com> 
Sent by: proj-bounces at lists.maptools.org 
01/27/2006 02:59 AM 

Please respond to
"PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>



To
gdal-dev at lists.maptools.org, proj at lists.maptools.org, 
geotiff at lists.maptools.org 
cc

Subject
[Proj] Dataset mismatch?








Howdy...

Please forgive the long cross-posting.  I'm new to this and don't know 
exactly
who will have a possible answer for this issue of mine.

I'm a volunteer working on a avalanche terrain and runout mapping project 
for
potential use by our mountain search and rescue teams.  I'm using DRG 24k
topographical geotiff slices in UTM NAD27 and then processing 1/3 arc-sec
elevation .adf files in lat/lon NAD83 to match up and plot slopes and 
such. 
All this is downloaded from the NED seamless website.

Problem is, the two data sets don't match up precisely.  That is, the 
features
on the topo seem to match up precisely with elevation data in some places 
and
not so precisely in others.  At the worst, the error is around 500 feet. 
I'm
using "libproj" to convert coordinates between the two datums.  I'm 
currently
processing a section of Colorado, and I'm building "libproj" to include 
the
"conus" correction file.  I've also verified my coordinate conversions are
correct by comparing against openEV and topoUSA.  I'm also using "libgdal" 
to
pull out the elevation data and "libgeotiff" to grab the image raster data 
and
geo tags.

However, like I said, I'm new to this.  I'm converting the NW and SE 
corners of
the geotiff into NAD83 and then interpolating for each pixel to match up 
with
the elevation data using the origin and resolution of the various 
elevation
pieces.  I have a sneaky feeling that life isn't that simple.  Am I 
missing
some fancy projection to correct for curvature of the earth or something? 
Or
is this just an inherent mismatch between the data sets?  Or both?  Other
suggestions to try?

Please don't suggest using a commercially available mapping package since 
we
have no money and I need to do very extensive data processing once I have 
the
data sets matching up properly.

Thanks.

-Jarrett

P.S.  Here's an example of a nearly 500 foot mismatch error:

A tiny rock spire on the topo map:
13 0394704 4334970

And the corresponding spike in elevation data:
13 0394571 4335039

[Coords provided by OpenEV cursor]

I don't expect a perfect matchup, but the worst areas need to be corrected
somehow to make the avalanche terrain maps useful.

I can email an example image showing the error if someone is really 
interested.

Thanks again.

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060127/b7afd641/attachment.html>

From ed at topozone.com  Fri Jan 27 11:24:09 2006
From: ed at topozone.com (Ed McNierney)
Date: Fri, 27 Jan 2006 14:24:09 -0500
Subject: [Proj] Dataset mismatch?
Message-ID: <4BF377919225F449BB097CB76FFE9BC83DD863@ptolemy.topozone.com>

Jarrett -

Why do you think it is the problem?  Are you indeed operating at a scale
where you're using two corner points per 7.5-minute quad?  And can you
give examples (with specific coordinates) of where you see substantial
datum shifts on multiple points on a single quad?  I'm skeptical...

Is it possible that the error is in the way you calculate the
interpolated values?

	- Ed

Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
ed at topozone.com
(978) 251-4242 

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Jarrett L. Redd
Sent: Friday, January 27, 2006 2:03 PM
To: PROJ.4 and general Projections Discussions
Cc: proj-bounces at lists.maptools.org; gdal-dev at lists.maptools.org
Subject: RE: [Proj] Dataset mismatch?

Sorry... saw these messages after my previous response.  Believe it or
not, this seems to be the problem.  I had my suspicions that it was a
non-linear problem associated with the datum conversion, and when I did
the conversion, the error goes away (mostly).  I didn't bother at first
because I also believed it was too small an area to show such an error.
I guess not!  By the way, it may not be possible to answer this
question, but I thought I'd try anyway: 
anyone know what maximum error mismatch to expect due to the datasets
themselves?  I'm seeing 50 feet in various areas, and occasionally up to
150 feet (in narrow canyons, etc).  Perhaps I still have a problem
somewhere.

Thanks.

-Jarrett

--- Ed McNierney <ed at topozone.com> wrote:

> Mike -
>  
> Yes, the USGS used thousands of points, but they needed to cover the 
> whole country!  For CONUS that's around 50,000 quads worth.  We're 
> only talking about one quad that's only about 10 x 15 kilometers.  If 
> the NGS used 400 points per quad they would have needed over 20
million points.
>  
> I took a look at the Mount Sherman, CO quad that is the subject of the

> original post.  The northwest corner of that quad is at 392131E 
> 4345059N
> (NAD27) and 392084E 4345267N (NAD83).  The NAD27 -> NAD83 datum shift 
> at that point is (-47E, +208N).  If I go to the southeast corner of 
> that quad, the coordinates are 402746E 4331044N (NAD27) and 402699E 
> 4331252N (NAD93).  The NAD27 -> NAD83 datum shift at that opposite 
> corner is (-47E, +208N) - identical to the datum shift at the opposite

> corner!  I cannot imagine one would require 400 intermediate control 
> points to accurately calculate a datum shift across an area the size 
> of a 7.5-minute quad - especially when the shift at opposite corners 
> is the same.  You might, I suppose, manage to get off by a meter or 
> two, but since a single pixel on a 1:24K DRG is 2.4384 meters on a 
> side, you're literally below the threshold of precision on the data.
>  
> Jarrett's seeing discrepancies of hundreds of meters.  Even if you 
> measured only one point and presumed the datum shift was identical 
> across the entire quad, you couldn't produce an error that large.
>  
>      - Ed
>  
> Ed McNierney
> President and Chief Mapmaker
> TopoZone.com / Maps a la carte, Inc.
> 73 Princeton Street, Suite 305
> North Chelmsford, MA  01863
> ed at topozone.com
> (978) 251-4242
> 
>  
>  
>  
> 
> ________________________________
> 
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Michael P Finn
> Sent: Friday, January 27, 2006 12:52 PM
> To: PROJ.4 and general Projections Discussions
> Cc: geotiff at lists.maptools.org; proj at lists.maptools.org; 
> gdal-dev at lists.maptools.org; proj-bounces at lists.maptools.org
> Subject: Re: [Proj] Dataset mismatch?
> 
> 
> 
> >From my colleague Lynn Usery (USGS/ Geospatial Information Office).
> Mike Finn
> 
> 
> 
> 
> Using 2 points is not sufficient. The user should use a grid of at 
> least
> 
> 20 x 20 points (400 total points) over the quad. Transform those 
> between
> 
> the datums and resample the pixels based on this approach. This is a 
> simple operation in Imagine which automatically locates the control 
> points then applies the datum tranformation, interpolates and 
> resamples the data. Of course Jarrett said no commercial software, so 
> he must find
> 
> a way to implement this process with open source code.
> 
> To perform the datum transformation, two points is just not enough to 
> handle the differences between the two datums. NGS used thousands of 
> points in the transformation to determine the NADCON shifts between 
> NAD
> 27 and NAD 83 for the US.
> 
> Lynn
> 
> 
> 
> 
> 
> "Jarrett L. Redd" <jarrett_l_redd at yahoo.com> Sent by: 
> proj-bounces at lists.maptools.org
> 
> 01/27/2006 02:59 AM
> Please respond to
> "PROJ.4 and general Projections Discussions"
> <proj at lists.maptools.org>
> 
> 
> To
> gdal-dev at lists.maptools.org, proj at lists.maptools.org, 
> geotiff at lists.maptools.org cc Subject [Proj] Dataset mismatch?
> 
> 	
> 
> 
> 
> 
> Howdy...
> 
> Please forgive the long cross-posting.  I'm new to this and don't know

> exactly who will have a possible answer for this issue of mine.
> 
> I'm a volunteer working on a avalanche terrain and runout mapping 
> project for potential use by our mountain search and rescue teams.  
> I'm using DRG 24k topographical geotiff slices in UTM NAD27 and then 
> processing 1/3 arc-sec elevation .adf files in lat/lon NAD83 to match 
> up and plot slopes and such.
> All this is downloaded from the NED seamless website.
> 
> Problem is, the two data sets don't match up precisely.  That is, the 
> features on the topo seem to match up precisely with elevation data in

> some places and not so precisely in others.  At the worst, the error 
> is around 500 feet.
> I'm
> using "libproj" to convert coordinates between the two datums.  I'm 
> currently processing a section of Colorado, and I'm building "libproj"

> to include the "conus" correction file.  I've also verified my 
> coordinate conversions are correct by comparing against openEV and 
> topoUSA.  I'm also using "libgdal" to pull out the elevation data and 
> "libgeotiff" to grab the image raster data and geo tags.
> 
> However, like I said, I'm new to this.  I'm converting the NW and SE 
> corners of the geotiff into NAD83 and then interpolating for each 
> pixel to match up with the elevation data using the origin and 
> resolution of the various elevation pieces.  I have a sneaky feeling 
> that life isn't that simple.  Am I missing some fancy projection to 
> correct for curvature of the earth or something?  Or is this just an 
> inherent mismatch between the data sets?  Or both?
> Other
> suggestions to try?
> 
> Please don't suggest using a commercially available mapping package 
> since we have no money and I need to do very extensive data processing

> once I have the data sets matching up properly.
> 
> Thanks.
> 
> -Jarrett
> 
> P.S.  Here's an example of a nearly 500 foot mismatch error:
> 
> A tiny rock spire on the topo map:
> 13 0394704 4334970
> 
> And the corresponding spike in elevation data:
> 13 0394571 4335039
> 
> [Coords provided by OpenEV cursor]
> 
> I don't expect a perfect matchup, but the worst areas need to be 
> corrected somehow to make the avalanche terrain maps useful.
> 
> I can email an example image showing the error if someone is really 
> interested.
> 
> Thanks again.
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> > _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From EMiller at dfg.ca.gov  Fri Jan 27 11:33:55 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Fri, 27 Jan 2006 11:33:55 -0800
Subject: [Proj] Dataset mismatch?
Message-ID: <s3da0539.052@dfg.ca.gov>

I think this may be a job for gdalwarp in the GDAL Utilities package:

http://www.remotesensing.org/gdal/gdalwarp.html 


>>> jarrett_l_redd at yahoo.com 1/27/2006 12:59 AM >>>
Howdy...

Please forgive the long cross-posting.  I'm new to this and don't know exactly
who will have a possible answer for this issue of mine.

I'm a volunteer working on a avalanche terrain and runout mapping project for
potential use by our mountain search and rescue teams.  I'm using DRG 24k
topographical geotiff slices in UTM NAD27 and then processing 1/3 arc-sec
elevation .adf files in lat/lon NAD83 to match up and plot slopes and such. 
All this is downloaded from the NED seamless website.

Problem is, the two data sets don't match up precisely.  That is, the features
on the topo seem to match up precisely with elevation data in some places and
not so precisely in others.  At the worst, the error is around 500 feet.  I'm
using "libproj" to convert coordinates between the two datums.  I'm currently
processing a section of Colorado, and I'm building "libproj" to include the
"conus" correction file.  I've also verified my coordinate conversions are
correct by comparing against openEV and topoUSA.  I'm also using "libgdal" to
pull out the elevation data and "libgeotiff" to grab the image raster data and
geo tags.

However, like I said, I'm new to this.  I'm converting the NW and SE corners of
the geotiff into NAD83 and then interpolating for each pixel to match up with
the elevation data using the origin and resolution of the various elevation
pieces.  I have a sneaky feeling that life isn't that simple.  Am I missing
some fancy projection to correct for curvature of the earth or something?  Or
is this just an inherent mismatch between the data sets?  Or both?  Other
suggestions to try?

Please don't suggest using a commercially available mapping package since we
have no money and I need to do very extensive data processing once I have the
data sets matching up properly.

Thanks.

-Jarrett

P.S.  Here's an example of a nearly 500 foot mismatch error:

A tiny rock spire on the topo map:
13 0394704 4334970

And the corresponding spike in elevation data:
13 0394571 4335039

[Coords provided by OpenEV cursor]

I don't expect a perfect matchup, but the worst areas need to be corrected
somehow to make the avalanche terrain maps useful.

I can email an example image showing the error if someone is really interested.

Thanks again.

_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From ed at topozone.com  Fri Jan 27 11:49:34 2006
From: ed at topozone.com (Ed McNierney)
Date: Fri, 27 Jan 2006 14:49:34 -0500
Subject: [Proj] Dataset mismatch?
Message-ID: <4BF377919225F449BB097CB76FFE9BC83DD864@ptolemy.topozone.com>

Jarrett -

Just to give you a feel for the situation, take a look at the NGS NADCON
page at:

http://www.ngs.noaa.gov/TOOLS/Nadcon/Nadcon.shtml

The top of the page shows two rough graphics charting the NAD27/NAD83
datum shift in both latitude and longitude.  The heavy blue isolines are
in 0.5-second increments, so you need to move from one line to the next
for the size of the datum shift to change by 0.5 seconds.  Very roughly
speaking, 0.5 seconds of arc in the US is about 12 - 15 meters, so these
charts show how far you have to travel for the size of the datum shift
to get to be 12 - 15 meters.

I realize you can't do precise calculations from these charts, but the
longitude isolines are generally closer together and they look to be
about 5 degrees of longitude apart.  That would mean the longitude datum
shift might be - on average) about 0.5 seconds per 5 degrees or 0.1
seconds per degree.  A 7.5-minute quad is one-eighth of a degree on a
side, so one would expect a datum shift (in each of latitude and
longitude) on the order of one-eigth of 0.1 or 0.0125 seconds.  That's
about a third of a meter in each direction, or perhaps as much as half a
meter altogether.

These are VERY rough "in the ballpark" calculations, but they're
intended to get a feel for the order of magnitude of the shift.  That's
why I would be surprised to find a datum shift that varies by more than
one pixel across a 7.5-minute quad.

	- Ed

Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
ed at topozone.com
(978) 251-4242 



From jarrett_l_redd at yahoo.com  Fri Jan 27 12:57:50 2006
From: jarrett_l_redd at yahoo.com (Jarrett L. Redd)
Date: Fri, 27 Jan 2006 12:57:50 -0800 (PST)
Subject: [Proj] Dataset mismatch?
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC83DD863@ptolemy.topozone.com>
Message-ID: <20060127205750.81610.qmail@web35613.mail.mud.yahoo.com>

Well, I understand what you are saying.  I agree, it can't be just from the
datum correction.  It must have something to do with the pixel coordinate to
NAD83 conversion as well.  The interpolation was bypassing that as well.  With
the datum conversion on every pixel, the "tiny rock spire" mentioned in the
original post now matches up exactly.

However, there is still some error here and there.  But I'm guessing it must be
the datasets themselves.

-Jarrett

--- Ed McNierney <ed at topozone.com> wrote:

> Jarrett -
> 
> Why do you think it is the problem?  Are you indeed operating at a scale
> where you're using two corner points per 7.5-minute quad?  And can you
> give examples (with specific coordinates) of where you see substantial
> datum shifts on multiple points on a single quad?  I'm skeptical...
> 
> Is it possible that the error is in the way you calculate the
> interpolated values?
> 
> 	- Ed
> 
> Ed McNierney
> President and Chief Mapmaker
> TopoZone.com / Maps a la carte, Inc.
> 73 Princeton Street, Suite 305
> North Chelmsford, MA  01863
> ed at topozone.com
> (978) 251-4242 
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Jarrett L. Redd
> Sent: Friday, January 27, 2006 2:03 PM
> To: PROJ.4 and general Projections Discussions
> Cc: proj-bounces at lists.maptools.org; gdal-dev at lists.maptools.org
> Subject: RE: [Proj] Dataset mismatch?
> 
> Sorry... saw these messages after my previous response.  Believe it or
> not, this seems to be the problem.  I had my suspicions that it was a
> non-linear problem associated with the datum conversion, and when I did
> the conversion, the error goes away (mostly).  I didn't bother at first
> because I also believed it was too small an area to show such an error.
> I guess not!  By the way, it may not be possible to answer this
> question, but I thought I'd try anyway: 
> anyone know what maximum error mismatch to expect due to the datasets
> themselves?  I'm seeing 50 feet in various areas, and occasionally up to
> 150 feet (in narrow canyons, etc).  Perhaps I still have a problem
> somewhere.
> 
> Thanks.
> 
> -Jarrett
> 
> --- Ed McNierney <ed at topozone.com> wrote:
> 
> > Mike -
> >  
> > Yes, the USGS used thousands of points, but they needed to cover the 
> > whole country!  For CONUS that's around 50,000 quads worth.  We're 
> > only talking about one quad that's only about 10 x 15 kilometers.  If 
> > the NGS used 400 points per quad they would have needed over 20
> million points.
> >  
> > I took a look at the Mount Sherman, CO quad that is the subject of the
> 
> > original post.  The northwest corner of that quad is at 392131E 
> > 4345059N
> > (NAD27) and 392084E 4345267N (NAD83).  The NAD27 -> NAD83 datum shift 
> > at that point is (-47E, +208N).  If I go to the southeast corner of 
> > that quad, the coordinates are 402746E 4331044N (NAD27) and 402699E 
> > 4331252N (NAD93).  The NAD27 -> NAD83 datum shift at that opposite 
> > corner is (-47E, +208N) - identical to the datum shift at the opposite
> 
> > corner!  I cannot imagine one would require 400 intermediate control 
> > points to accurately calculate a datum shift across an area the size 
> > of a 7.5-minute quad - especially when the shift at opposite corners 
> > is the same.  You might, I suppose, manage to get off by a meter or 
> > two, but since a single pixel on a 1:24K DRG is 2.4384 meters on a 
> > side, you're literally below the threshold of precision on the data.
> >  
> > Jarrett's seeing discrepancies of hundreds of meters.  Even if you 
> > measured only one point and presumed the datum shift was identical 
> > across the entire quad, you couldn't produce an error that large.
> >  
> >      - Ed
> >  
> > Ed McNierney
> > President and Chief Mapmaker
> > TopoZone.com / Maps a la carte, Inc.
> > 73 Princeton Street, Suite 305
> > North Chelmsford, MA  01863
> > ed at topozone.com
> > (978) 251-4242
> > 
> >  
> >  
> >  
> > 
> > ________________________________
> > 
> > From: proj-bounces at lists.maptools.org
> > [mailto:proj-bounces at lists.maptools.org] On Behalf Of Michael P Finn
> > Sent: Friday, January 27, 2006 12:52 PM
> > To: PROJ.4 and general Projections Discussions
> > Cc: geotiff at lists.maptools.org; proj at lists.maptools.org; 
> > gdal-dev at lists.maptools.org; proj-bounces at lists.maptools.org
> > Subject: Re: [Proj] Dataset mismatch?
> > 
> > 
> > 
> > >From my colleague Lynn Usery (USGS/ Geospatial Information Office).
> > Mike Finn
> > 
> > 
> > 
> > 
> > Using 2 points is not sufficient. The user should use a grid of at 
> > least
> > 
> > 20 x 20 points (400 total points) over the quad. Transform those 
> > between
> > 
> > the datums and resample the pixels based on this approach. This is a 
> > simple operation in Imagine which automatically locates the control 
> > points then applies the datum tranformation, interpolates and 
> > resamples the data. Of course Jarrett said no commercial software, so 
> > he must find
> > 
> > a way to implement this process with open source code.
> > 
> > To perform the datum transformation, two points is just not enough to 
> > handle the differences between the two datums. NGS used thousands of 
> > points in the transformation to determine the NADCON shifts between 
> > NAD
> > 27 and NAD 83 for the US.
> > 
> > Lynn
> > 
> > 
> > 
> > 
> > 
> > "Jarrett L. Redd" <jarrett_l_redd at yahoo.com> Sent by: 
> > proj-bounces at lists.maptools.org
> > 
> > 01/27/2006 02:59 AM
> > Please respond to
> > "PROJ.4 and general Projections Discussions"
> > <proj at lists.maptools.org>
> > 
> > 
> > To
> > gdal-dev at lists.maptools.org, proj at lists.maptools.org, 
> > geotiff at lists.maptools.org cc Subject [Proj] Dataset mismatch?
> > 
> > 	
> > 
> > 
> > 
> > 
> > Howdy...
> > 
> > Please forgive the long cross-posting.  I'm new to this and don't know
> 
> > exactly who will have a possible answer for this issue of mine.
> > 
> > I'm a volunteer working on a avalanche terrain and runout mapping 
> > project for potential use by our mountain search and rescue teams.  
> > I'm using DRG 24k topographical geotiff slices in UTM NAD27 and then 
> > processing 1/3 arc-sec elevation .adf files in lat/lon NAD83 to match 
> > up and plot slopes and such.
> > All this is downloaded from the NED seamless website.
> > 
> > Problem is, the two data sets don't match up precisely.  That is, the 
> > features on the topo seem to match up precisely with elevation data in
> 
> > some places and not so precisely in others.  At the worst, the error 
> > is around 500 feet.
> > I'm
> > using "libproj" to convert coordinates between the two datums.  I'm 
> > currently processing a section of Colorado, and I'm building "libproj"
> 
> > to include the "conus" correction file.  I've also verified my 
> > coordinate conversions are correct by comparing against openEV and 
> > topoUSA.  I'm also using "libgdal" to pull out the elevation data and 
> > "libgeotiff" to grab the image raster data and geo tags.
> > 
> > However, like I said, I'm new to this.  I'm converting the NW and SE 
> > corners of the geotiff into NAD83 and then interpolating for each 
> > pixel to match up with the elevation data using the origin and 
> > resolution of the various elevation pieces.  I have a sneaky feeling 
> > that life isn't that simple.  Am I missing some fancy projection to 
> > correct for curvature of the earth or something?  Or is this just an 
> > inherent mismatch between the data sets?  Or both?
> > Other
> > suggestions to try?
> > 
> > Please don't suggest using a commercially available mapping package 
> > since we have no money and I need to do very extensive data processing
> 
> > once I have the data sets matching up properly.
> > 
> > Thanks.
> > 
> > -Jarrett
> > 
> > P.S.  Here's an example of a nearly 500 foot mismatch error:
> > 
> > A tiny rock spire on the topo map:
> > 13 0394704 4334970
> > 
> > And the corresponding spike in elevation data:
> > 13 0394571 4335039
> > 
> > [Coords provided by OpenEV cursor]
> > 
> > I don't expect a perfect matchup, but the worst areas need to be 
> > corrected somehow to make the avalanche terrain maps useful.
> > 
> > I can email an example image showing the error if someone is really 
> > interested.
> > 
> > Thanks again.
> > 
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
> > 
> > 
> > > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From gerald.evenden at verizon.net  Sat Jan 28 09:26:19 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sat, 28 Jan 2006 12:26:19 -0500
Subject: [Proj] Revision of rtodms
Message-ID: <200601281226.19137.gerald.evenden@verizon.net>

To make libproj4 completely thread friendly it was necessary to create a new 
radian to DMS formating procedure to replace "pr_rtodms."  The prototype for 
the replacement procedure is:

proj_rtodms_r(char *fld, size_t wf, const char *fmt,
                    double radian, char * sign)

where 'fld' is a character array of length 'wf', 'fmt' is a "ddf" format to be 
employed. 'radian' is the value to be formated and 'sign' is a two character 
array containing the optional sign suffix ("NS" or "EW").

An example of the variety of outputs for the radian value of the DMS value of 
33:15:45 for various values of 'fmt' are:

   Just degrees-minutes
val: 33.2625 fmt: %dd%.3f'%c output: 33d15.750'N
   full DMS in proj format
val: -33.2625 fmt: %dd%d'%.3f" output: -33d15'45.000"
   simple floating point output
val: -33.2625 fmt: %.8f output: -33.26250000
   pretty print format for LaTeX
val: 33.2625 fmt: $%d^{\circ}%d'%.3f''$%c output: $33^{\circ}15'45.000''$N

The major restriction is that the format should be in the basic form of 
'%d%d%.nf', '%d%.nf' or '%.nf'.  If there is a trailing '%c' suffix sign is 
used otherwise prefix +/- for the degree part.  Any fillers or field values 
may be used.

This procedure will replace pj_rtodms in release 3 of libproj4---soon to be 
issued.  However, if anyone wants a copy, email me for an email copy.  It 
does not require lib_proj.h if one makes their own proto.
-- 
Jerry and the low riders:Daisy May and Joshua
"The being cannot be termed rational or virtuous,
who obeys any authority, but that of reason."
---Mary Wollstonecraft 1792


From jarrett_l_redd at yahoo.com  Sun Jan 29 21:23:05 2006
From: jarrett_l_redd at yahoo.com (Jarrett L. Redd)
Date: Sun, 29 Jan 2006 21:23:05 -0800 (PST)
Subject: [Proj] Dataset mismatch?
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC83DD863@ptolemy.topozone.com>
Message-ID: <20060130052305.37590.qmail@web35605.mail.mud.yahoo.com>

Ed,

Indeed, the datum conversion was never the problem.  Instead, it was a faulty
assumption on my part.  I assumed that the skew between the dataset projections
was negligable on such a small area when it fact it is quite significant.  By
skew, I mean that if you project a square from one dataset into the other
dataset, you will not get exactly a square.  Therefore, if you just perform a
normal bi-nodal interpolation, you will get a significant error.  But if you
account for a 2D skew with a quad-nodal interpolation, then the error goes
away.  This is why the error vanished when I started translating every point
directly.  FYI, if you interpolate from just the 4 corners of the quad versus
hundreds of internal points, you get a max position difference of around 2.5
feet, just as you predicted.  This is obviously way below the DRG 24k
resolution and can be ignored.  Another interesting thing is that the 1/3 arc
second elevation data plots around 1.5m low on the topo maps.  That is, the
plotted contour lines are always just below the topo contour lines.  Since I
only care about slopes, lifting everything 1.5m makes them line up very nicely.

Thanks again to everyone for their help.  I think this tool is going to save
some lives once it gets out into the field.  At that time, I will be releasing
the source so that it can continue to be modified as avalanche prediction
models improve.

-Jarrett

--- Ed McNierney <ed at topozone.com> wrote:

> Jarrett -
> 
> Why do you think it is the problem?  Are you indeed operating at a scale
> where you're using two corner points per 7.5-minute quad?  And can you
> give examples (with specific coordinates) of where you see substantial
> datum shifts on multiple points on a single quad?  I'm skeptical...
> 
> Is it possible that the error is in the way you calculate the
> interpolated values?
> 
> 	- Ed
> 
> Ed McNierney
> President and Chief Mapmaker
> TopoZone.com / Maps a la carte, Inc.
> 73 Princeton Street, Suite 305
> North Chelmsford, MA  01863
> ed at topozone.com
> (978) 251-4242 
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Jarrett L. Redd
> Sent: Friday, January 27, 2006 2:03 PM
> To: PROJ.4 and general Projections Discussions
> Cc: proj-bounces at lists.maptools.org; gdal-dev at lists.maptools.org
> Subject: RE: [Proj] Dataset mismatch?
> 
> Sorry... saw these messages after my previous response.  Believe it or
> not, this seems to be the problem.  I had my suspicions that it was a
> non-linear problem associated with the datum conversion, and when I did
> the conversion, the error goes away (mostly).  I didn't bother at first
> because I also believed it was too small an area to show such an error.
> I guess not!  By the way, it may not be possible to answer this
> question, but I thought I'd try anyway: 
> anyone know what maximum error mismatch to expect due to the datasets
> themselves?  I'm seeing 50 feet in various areas, and occasionally up to
> 150 feet (in narrow canyons, etc).  Perhaps I still have a problem
> somewhere.
> 
> Thanks.
> 
> -Jarrett
> 
> --- Ed McNierney <ed at topozone.com> wrote:
> 
> > Mike -
> >  
> > Yes, the USGS used thousands of points, but they needed to cover the 
> > whole country!  For CONUS that's around 50,000 quads worth.  We're 
> > only talking about one quad that's only about 10 x 15 kilometers.  If 
> > the NGS used 400 points per quad they would have needed over 20
> million points.
> >  
> > I took a look at the Mount Sherman, CO quad that is the subject of the
> 
> > original post.  The northwest corner of that quad is at 392131E 
> > 4345059N
> > (NAD27) and 392084E 4345267N (NAD83).  The NAD27 -> NAD83 datum shift 
> > at that point is (-47E, +208N).  If I go to the southeast corner of 
> > that quad, the coordinates are 402746E 4331044N (NAD27) and 402699E 
> > 4331252N (NAD93).  The NAD27 -> NAD83 datum shift at that opposite 
> > corner is (-47E, +208N) - identical to the datum shift at the opposite
> 
> > corner!  I cannot imagine one would require 400 intermediate control 
> > points to accurately calculate a datum shift across an area the size 
> > of a 7.5-minute quad - especially when the shift at opposite corners 
> > is the same.  You might, I suppose, manage to get off by a meter or 
> > two, but since a single pixel on a 1:24K DRG is 2.4384 meters on a 
> > side, you're literally below the threshold of precision on the data.
> >  
> > Jarrett's seeing discrepancies of hundreds of meters.  Even if you 
> > measured only one point and presumed the datum shift was identical 
> > across the entire quad, you couldn't produce an error that large.
> >  
> >      - Ed
> >  
> > Ed McNierney
> > President and Chief Mapmaker
> > TopoZone.com / Maps a la carte, Inc.
> > 73 Princeton Street, Suite 305
> > North Chelmsford, MA  01863
> > ed at topozone.com
> > (978) 251-4242
> > 
> >  
> >  
> >  
> > 
> > ________________________________
> > 
> > From: proj-bounces at lists.maptools.org
> > [mailto:proj-bounces at lists.maptools.org] On Behalf Of Michael P Finn
> > Sent: Friday, January 27, 2006 12:52 PM
> > To: PROJ.4 and general Projections Discussions
> > Cc: geotiff at lists.maptools.org; proj at lists.maptools.org; 
> > gdal-dev at lists.maptools.org; proj-bounces at lists.maptools.org
> > Subject: Re: [Proj] Dataset mismatch?
> > 
> > 
> > 
> > >From my colleague Lynn Usery (USGS/ Geospatial Information Office).
> > Mike Finn
> > 
> > 
> > 
> > 
> > Using 2 points is not sufficient. The user should use a grid of at 
> > least
> > 
> > 20 x 20 points (400 total points) over the quad. Transform those 
> > between
> > 
> > the datums and resample the pixels based on this approach. This is a 
> > simple operation in Imagine which automatically locates the control 
> > points then applies the datum tranformation, interpolates and 
> > resamples the data. Of course Jarrett said no commercial software, so 
> > he must find
> > 
> > a way to implement this process with open source code.
> > 
> > To perform the datum transformation, two points is just not enough to 
> > handle the differences between the two datums. NGS used thousands of 
> > points in the transformation to determine the NADCON shifts between 
> > NAD
> > 27 and NAD 83 for the US.
> > 
> > Lynn
> > 
> > 
> > 
> > 
> > 
> > "Jarrett L. Redd" <jarrett_l_redd at yahoo.com> Sent by: 
> > proj-bounces at lists.maptools.org
> > 
> > 01/27/2006 02:59 AM
> > Please respond to
> > "PROJ.4 and general Projections Discussions"
> > <proj at lists.maptools.org>
> > 
> > 
> > To
> > gdal-dev at lists.maptools.org, proj at lists.maptools.org, 
> > geotiff at lists.maptools.org cc Subject [Proj] Dataset mismatch?
> > 
> > 	
> > 
> > 
> > 
> > 
> > Howdy...
> > 
> > Please forgive the long cross-posting.  I'm new to this and don't know
> 
> > exactly who will have a possible answer for this issue of mine.
> > 
> > I'm a volunteer working on a avalanche terrain and runout mapping 
> > project for potential use by our mountain search and rescue teams.  
> > I'm using DRG 24k topographical geotiff slices in UTM NAD27 and then 
> > processing 1/3 arc-sec elevation .adf files in lat/lon NAD83 to match 
> > up and plot slopes and such.
> > All this is downloaded from the NED seamless website.
> > 
> > Problem is, the two data sets don't match up precisely.  That is, the 
> > features on the topo seem to match up precisely with elevation data in
> 
> > some places and not so precisely in others.  At the worst, the error 
> > is around 500 feet.
> > I'm
> > using "libproj" to convert coordinates between the two datums.  I'm 
> > currently processing a section of Colorado, and I'm building "libproj"
> 
> > to include the "conus" correction file.  I've also verified my 
> > coordinate conversions are correct by comparing against openEV and 
> > topoUSA.  I'm also using "libgdal" to pull out the elevation data and 
> > "libgeotiff" to grab the image raster data and geo tags.
> > 
> > However, like I said, I'm new to this.  I'm converting the NW and SE 
> > corners of the geotiff into NAD83 and then interpolating for each 
> > pixel to match up with the elevation data using the origin and 
> > resolution of the various elevation pieces.  I have a sneaky feeling 
> > that life isn't that simple.  Am I missing some fancy projection to 
> > correct for curvature of the earth or something?  Or is this just an 
> > inherent mismatch between the data sets?  Or both?
> > Other
> > suggestions to try?
> > 
> > Please don't suggest using a commercially available mapping package 
> > since we have no money and I need to do very extensive data processing
> 
> > once I have the data sets matching up properly.
> > 
> > Thanks.
> > 
> > -Jarrett
> > 
> > P.S.  Here's an example of a nearly 500 foot mismatch error:
> > 
> > A tiny rock spire on the topo map:
> > 13 0394704 4334970
> > 
> > And the corresponding spike in elevation data:
> > 13 0394571 4335039
> > 
> > [Coords provided by OpenEV cursor]
> > 
> > I don't expect a perfect matchup, but the worst areas need to be 
> > corrected somehow to make the avalanche terrain maps useful.
> > 
> > I can email an example image showing the error if someone is really 
> > interested.
> > 
> > Thanks again.
> > 
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
> > 
> > 
> > > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From awilliams at rapidmap.com.au  Tue Jan 31 20:32:57 2006
From: awilliams at rapidmap.com.au (Andrew Williams)
Date: Wed, 1 Feb 2006 15:32:57 +1100
Subject: [Proj] Azimuthal Equidistant projection Northern Hemisphere centric
Message-ID: <CFE1D6CAE2D44343BF58E308C1C7EC64543901@rmg-server03.rmg.local>

Hi folks,
I'm using GDAL to try and warp an AEQD projected image to Latlong. 
 
This is the syntax
gdalwarp -s_srs "+proj=aeqd +lat_0=0 +long_0=134 +x_0=0 +y_0=0" -t_srs "+proj=latlong +datum=WGS84" input.tif output.tif
 
The issue is that the image is a Southern hemisphere Equatorial projection of Australia. The image is warping, but instead of "spreading" the Southern part of the image so that line of longitude no longer converge, it's spreading the Northern part of the image and making it worse.
 
It looks like the warp calculation is assuming a Northern aspect where the lines of longitude converge at the top of the image rather than the bottom of the image in a Southern aspect.
 
The reason for my enquiry here is to find out if I can (or need to) add some other parameter to the source definition to make GDAL sensitive to the fact that it's a Southern Hemisphere rather than Northern hemisphere projection.
 
regards
Andrew



From sdteffen at gmail.com  Tue Jan 31 21:56:13 2006
From: sdteffen at gmail.com (Steffen Macke)
Date: Wed, 1 Feb 2006 07:56:13 +0200
Subject: [Proj] Roussilhe Projection
In-Reply-To: <200510311642.38754.gerald.evenden@verizon.net>
References: <000f01c5d726$eec4c850$6501a8c0@taxussi.com.pl>
	<435D6650.5010109@loskot.net> <4362BCE3.3050704@loskot.net>
	<200510311642.38754.gerald.evenden@verizon.net>
Message-ID: <3cb1691c0601312156t621bebaaq3883a1831fc3c7c7@mail.gmail.com>

Hello All,

I tried to move the Roussilhe projection from

http://members.verizon.net/~vze2hc4d/proj4/lbp4-3_060124R.tar.gz

to proj.4.4.9. I attached a patch with the changes I did to make things compile.
However, while Gerald Evenden's package works fine, my patched proj does not
work.
E.g.

echo 36.176039 31.203685 0 | ./proj +to +proj=rouss +ellps=clrk80 
+rf=293.46 +a=6378249.2 +lon_0="39d09'E" +lat_0="34d12'N"
+k_0=0.9995341

gives

-1.#J   -1.#J 0

Did I miss anything?

Regards,

Steffen
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rouss4proj4.diff
Type: application/octet-stream
Size: 1833 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060201/e9a91884/attachment.obj>

From erich.sadlowski at gmx.de  Tue Jan 31 23:00:54 2006
From: erich.sadlowski at gmx.de (ErichS)
Date: Wed, 1 Feb 2006 07:00:54 +0000 (UTC)
Subject: [Proj] System 42/83 (S42/83)
Message-ID: <loom.20060201T075318-529@post.gmane.org>

Hello all,

I'm trying to use coordinates in S42/83, a system often used in eastern Europe
(e.g. Russia) and partially in East-Germany ("Deutsches Heeresgitter").

It's similar to Gauss-Kruger (Gauß-Krüger) (i.e a transverse mercator
projection) but it uses 6 degrees wide stripes instead of 3 degrees.

And its first meridian is at 3E.

Is there a possibility to define these parameters in cs2cs/proj4?

As ellipsoid "Krassovski" is used (+ellps=krass).

Many greetings
Erich




