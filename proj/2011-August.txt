From noorcs22 at gmail.com  Tue Aug  2 01:41:38 2011
From: noorcs22 at gmail.com (Mustafa646)
Date: Tue, 2 Aug 2011 01:41:38 -0700 (PDT)
Subject: [Proj] Changing projection in OL code
Message-ID: <1312274498423-6644040.post@n2.nabble.com>

I have a shapefile with native projection SWREFF99_1800. For publishing on
Geoserver, I changed it from SWREFF99_1800 to Spherical Mercator (EPSG:4326)
by using third party tool ogr2ogr. And finally i published it on Geoserver
and Displayed it over Google base map in my OL Web Page. 

I want to change this projection (from SWREFF99_1800 to EPSG:4326) by using
some code in my OL web page instead of changing it by using third party tool
before publishing it on Geoserver. Is it possible and if yes, then what will
be the possible code/method for this ?

--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Changing-projection-in-OL-code-tp6644040p6644040.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From support.mn at elisanet.fi  Tue Aug  2 02:44:26 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Tue, 2 Aug 2011 12:44:26 +0300 (EEST)
Subject: [Proj] Changing projection in OL code
Message-ID: <1381936.11163511312278267741.JavaMail.support.mn@elisanet.fi>

Hello,

what "OL code" you are talking about?

Regards: Janne.

-------------------------------------------------------

Mustafa646 [noorcs22 at gmail.com] kirjoitti: 
> I have a shapefile with native projection SWREFF99_1800. For publishing on
> Geoserver, I changed it from SWREFF99_1800 to Spherical Mercator (EPSG:4326)
> by using third party tool ogr2ogr. And finally i published it on Geoserver
> and Displayed it over Google base map in my OL Web Page. 
> 
> I want to change this projection (from SWREFF99_1800 to EPSG:4326) by using
> some code in my OL web page instead of changing it by using third party tool
> before publishing it on Geoserver. Is it possible and if yes, then what will
> be the possible code/method for this ?
> 
> --
> View this message in context: http://osgeo-org.1803224.n2.nabble.com/Changing-projection-in-OL-code-tp6644040p6644040.html
> Sent from the PROJ.4 mailing list archive at Nabble.com.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From noorcs22 at gmail.com  Tue Aug  2 05:24:35 2011
From: noorcs22 at gmail.com (Mustafa646)
Date: Tue, 2 Aug 2011 05:24:35 -0700 (PDT)
Subject: [Proj] Changing projection in OL code
In-Reply-To: <1381936.11163511312278267741.JavaMail.support.mn@elisanet.fi>
References: <1312274498423-6644040.post@n2.nabble.com>
	<1381936.11163511312278267741.JavaMail.support.mn@elisanet.fi>
Message-ID: <1312287875555-6644683.post@n2.nabble.com>

"OL code" means coding by using OpenLayers API Library.

Can i change projection of shapefile published on Geoserver by using
OpenLayers API ?

--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Changing-projection-in-OL-code-tp6644040p6644683.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jrepetto at free.fr  Tue Aug  2 06:19:13 2011
From: jrepetto at free.fr (Jean-Claude Repetto)
Date: Tue, 02 Aug 2011 15:19:13 +0200
Subject: [Proj] Changing projection in OL code
In-Reply-To: <1312287875555-6644683.post@n2.nabble.com>
References: <1312274498423-6644040.post@n2.nabble.com>	<1381936.11163511312278267741.JavaMail.support.mn@elisanet.fi>
	<1312287875555-6644683.post@n2.nabble.com>
Message-ID: <4E37F951.4080405@free.fr>

Le 02/08/2011 14:24, Mustafa646 a écrit :
> "OL code" means coding by using OpenLayers API Library.
>
> Can i change projection of shapefile published on Geoserver by using
> OpenLayers API ?
>

Hello,

I think you are posting on the wrong ML. Try the Geoserver or OpenLayers 
mailing lists.

Jean-Claude


From francescoboccacci at libero.it  Tue Aug  2 08:44:44 2011
From: francescoboccacci at libero.it (Francesco Boccacci)
Date: Tue, 2 Aug 2011 15:44:44 +0000 (UTC)
Subject: [Proj] Invitation to connect on LinkedIn
Message-ID: <42685907.1726838.1312299884022.JavaMail.app@ela4-bed78.prod>

LinkedIn
------------



   
I'd like to add you to my professional network on LinkedIn.

- Francesco

Francesco Boccacci
R&D developer at Navionics s.p.a 
Florence Area, Italy

Confirm that you know Francesco Boccacci
https://www.linkedin.com/e/l8qnl-gqv1gv04-4/isd/3732902939/IBHeOc4h/


 
-- 
(c) 2011, LinkedIn Corporation
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110802/c68273e9/attachment.html>

From maurelio at live.it  Thu Aug  4 00:23:15 2011
From: maurelio at live.it (zagot)
Date: Thu, 4 Aug 2011 00:23:15 -0700 (PDT)
Subject: [Proj] Google Mercator Projection
Message-ID: <1312442595429-6651663.post@n2.nabble.com>

Hi to All,
this is an oldie, but i cannot seem to find a solution.
When i want to do a transform on a wgs84 to google/bing the y coordinate
shifts.

I have read this  variuos post and this official note:
http://trac.osgeo.org/proj/wiki/FAQ#ChangingEllipsoidWhycantIconvertfromWGS84toGoogleEarthVirtualGlobeMercator

...so I tried adding +nadgrids=@null like i read, but with this example:

from ..."+proj=latlong +datum=WGS84";

to... "+proj=merc +a=6378137 +b=6378137 +lat_t1=0.0 +lon_0=0.0 +x_0=0.0
+y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"

i have this result -626172.1357121646,  6887893.4928337997 

in the result y differ from correct value:6853955.508199729 (with Proj.NET
the result is correct)

..seems adding +nadgrids=@null  have no effect

what's I wrong?

thanks in advance

sorry for my english
thanks


--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Google-Mercator-Projection-tp6651663p6651663.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jrepetto at free.fr  Thu Aug  4 01:02:33 2011
From: jrepetto at free.fr (Jean-Claude Repetto)
Date: Thu, 04 Aug 2011 10:02:33 +0200
Subject: [Proj] Google Mercator Projection
In-Reply-To: <1312442595429-6651663.post@n2.nabble.com>
References: <1312442595429-6651663.post@n2.nabble.com>
Message-ID: <4E3A5219.1040003@free.fr>

Le 04/08/2011 09:23, zagot a écrit :

> i have this result -626172.1357121646,  6887893.4928337997
>
What are the input coordinates ?


From maurelio at live.it  Thu Aug  4 01:56:36 2011
From: maurelio at live.it (zagot)
Date: Thu, 4 Aug 2011 01:56:36 -0700 (PDT)
Subject: [Proj] Google Mercator Projection
In-Reply-To: <4E3A5219.1040003@free.fr>
References: <1312442595429-6651663.post@n2.nabble.com>
	<4E3A5219.1040003@free.fr>
Message-ID: <1312448196975-6651893.post@n2.nabble.com>

ops sorry

this is input values

//trasform to radians
 Double R=0.0174532925199432958;
 Double X = -5.625*R;
 Double Y = 52.4827802220782*R;

then we have
x=-0.098174770424681035 
y=0.9159973154758253

--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Google-Mercator-Projection-tp6651663p6651893.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From maurelio at live.it  Thu Aug  4 02:03:03 2011
From: maurelio at live.it (zagot)
Date: Thu, 4 Aug 2011 02:03:03 -0700 (PDT)
Subject: [Proj] Google Mercator Projection
In-Reply-To: <1312448196975-6651893.post@n2.nabble.com>
References: <1312442595429-6651663.post@n2.nabble.com>
	<4E3A5219.1040003@free.fr>
	<1312448196975-6651893.post@n2.nabble.com>
Message-ID: <1312448583326-6651909.post@n2.nabble.com>

I use Proj.dll version 4.4.6 

--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Google-Mercator-Projection-tp6651663p6651909.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jrepetto at free.fr  Thu Aug  4 02:39:16 2011
From: jrepetto at free.fr (Jean-Claude Repetto)
Date: Thu, 04 Aug 2011 11:39:16 +0200
Subject: [Proj] Google Mercator Projection
In-Reply-To: <1312442595429-6651663.post@n2.nabble.com>
References: <1312442595429-6651663.post@n2.nabble.com>
Message-ID: <4E3A68C4.4080404@free.fr>

Le 04/08/2011 09:23, zagot a écrit :
> Hi to All,
> this is an oldie, but i cannot seem to find a solution.
> When i want to do a transform on a wgs84 to google/bing the y coordinate
> shifts.
>
> I have read this  variuos post and this official note:
> http://trac.osgeo.org/proj/wiki/FAQ#ChangingEllipsoidWhycantIconvertfromWGS84toGoogleEarthVirtualGlobeMercator
>
> ...so I tried adding +nadgrids=@null like i read, but with this example:
>
> from ..."+proj=latlong +datum=WGS84";
>
> to... "+proj=merc +a=6378137 +b=6378137 +lat_t1=0.0 +lon_0=0.0 +x_0=0.0
> +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
>
> i have this result -626172.1357121646,  6887893.4928337997
>
> in the result y differ from correct value:6853955.508199729 (with Proj.NET
> the result is correct)
>
> ..seems adding +nadgrids=@null  have no effect
>
> what's I wrong?

You have forgotten to specify the datum for the projected CRS :

cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +a=6378137 +b=6378137 
+lat_t1=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +datum=WGS84 +units=m 
+nadgrids=@null +no_defs
-5.625 52.4827802220782
-626172.14	6853979.30 0.00

Jean-Claude


From jagoncal at gmail.com  Thu Aug  4 02:55:52 2011
From: jagoncal at gmail.com (=?ISO-8859-1?Q?Jose_Gon=E7alves?=)
Date: Thu, 4 Aug 2011 10:55:52 +0100
Subject: [Proj] Google Mercator Projection
In-Reply-To: <1312442595429-6651663.post@n2.nabble.com>
References: <1312442595429-6651663.post@n2.nabble.com>
Message-ID: <CALHLaOSkpCBgTkm2Syw4a1bQ=aSh8Krrj6E2cokm8pNrHgXeLQ@mail.gmail.com>

The formula for "Google Mercator" Y coordinate is:

6378137 * LN ( TAN ( PI / 4.0 + LAT / 2.0 ) )

For LAT=52.4827802220782 you get 6887893.49, which is what you are obtaining
with proj.
The other value is some 30 km smaller. May be it was calculated with the
actual Mercator projection of the ellipsoid.

Regards

José Gonçalves



2011/8/4 zagot <maurelio at live.it>

> Hi to All,
> this is an oldie, but i cannot seem to find a solution.
> When i want to do a transform on a wgs84 to google/bing the y coordinate
> shifts.
>
> I have read this  variuos post and this official note:
>
> http://trac.osgeo.org/proj/wiki/FAQ#ChangingEllipsoidWhycantIconvertfromWGS84toGoogleEarthVirtualGlobeMercator
>
> ...so I tried adding +nadgrids=@null like i read, but with this example:
>
> from ..."+proj=latlong +datum=WGS84";
>
> to... "+proj=merc +a=6378137 +b=6378137 +lat_t1=0.0 +lon_0=0.0 +x_0=0.0
> +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
>
> i have this result -626172.1357121646,  6887893.4928337997
>
> in the result y differ from correct value:6853955.508199729 (with Proj.NET
> the result is correct)
>
> ..seems adding +nadgrids=@null  have no effect
>
> what's I wrong?
>
> thanks in advance
>
> sorry for my english
> thanks
>
>
> --
> View this message in context:
> http://osgeo-org.1803224.n2.nabble.com/Google-Mercator-Projection-tp6651663p6651663.html
> Sent from the PROJ.4 mailing list archive at Nabble.com.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110804/d27dbf40/attachment.html>

From maurelio at live.it  Thu Aug  4 04:22:42 2011
From: maurelio at live.it (zagot)
Date: Thu, 4 Aug 2011 04:22:42 -0700 (PDT)
Subject: [Proj] Google Mercator Projection
In-Reply-To: <4E3A68C4.4080404@free.fr>
References: <1312442595429-6651663.post@n2.nabble.com>
	<4E3A68C4.4080404@free.fr>
Message-ID: <1312456962067-6652311.post@n2.nabble.com>

i have copied from the official note definition
cs2cs +proj=latlong +datum=WGS84 \
    +to +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 \
                   +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs

ok.. however with the datum now the result is different:-626172.1357121646, 
6853979.3008168638

but if I transform this point using CS2CS tool, as follows:

echo -5.625 52.4827802220782 | cs2cs -f “%.10f” +init=epsg:4326 +to
+init=epsg:3857

then I'll get the following result instead:

(-626172.1357121646, 6887893.4928337997)

why this difference? what's is correct?

thanks

--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Google-Mercator-Projection-tp6651663p6652311.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jagoncal at gmail.com  Thu Aug  4 07:10:51 2011
From: jagoncal at gmail.com (=?ISO-8859-1?Q?Jose_Gon=E7alves?=)
Date: Thu, 4 Aug 2011 15:10:51 +0100
Subject: [Proj] Google Mercator Projection
In-Reply-To: <4E3A68C4.4080404@free.fr>
References: <1312442595429-6651663.post@n2.nabble.com>
	<4E3A68C4.4080404@free.fr>
Message-ID: <CALHLaOSDOebDOH+7edTnp2UKHjN+BONxUMByz82MBm-C+LKYPw@mail.gmail.com>

You can't mix "+a=6378137 +b=6378137" and "+datum=WGS84".
The control +datum implies an ellipsoid, which will conflict with the
definition of the sphere. Presumably the behaviour of the program is to
consider the last to be specified.

The conversion from WGS84 geographic coordinates to Google Mercator in the
command line does not need CS2CS. It can be done with PROJ, since it doesn't
involve a datum transformation:

echo -5.625 52.4827802220782 | proj +a=6378137 +b=6378137 +proj=merc
-626172.14      6887893.49


Regards

Jose'


> You have forgotten to specify the datum for the projected CRS :
>
> cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +a=6378137 +b=6378137
> +lat_t1=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +datum=WGS84 +units=m
> +nadgrids=@null +no_defs
> -5.625 52.4827802220782
> -626172.14      6853979.30 0.00
>
> Jean-Claude
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110804/16179aff/attachment.html>

From maurelio at live.it  Thu Aug  4 08:59:14 2011
From: maurelio at live.it (zagot)
Date: Thu, 4 Aug 2011 08:59:14 -0700 (PDT)
Subject: [Proj] Google Mercator Projection
In-Reply-To: <CALHLaOSDOebDOH+7edTnp2UKHjN+BONxUMByz82MBm-C+LKYPw@mail.gmail.com>
References: <1312442595429-6651663.post@n2.nabble.com>
	<4E3A68C4.4080404@free.fr>
	<CALHLaOSDOebDOH+7edTnp2UKHjN+BONxUMByz82MBm-C+LKYPw@mail.gmail.com>
Message-ID: <1312473554248-6653287.post@n2.nabble.com>

Hi Josè,

you are right I'm confusing by official note... 
1)adding +nadgrids=@null is not necessary and the first result is correct 
6887893.4928337997
3) adding datum is wrong 

finally the follow code is simply correct and my maps is center fine with
proj.dll 4.4.6 :)

from ..."+proj=latlong +datum=WGS84";

to... "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0
+y_0=0 +k=1.0 +units=m  +no_defs"

thanks to all
g.


--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Google-Mercator-Projection-tp6651663p6653287.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From emmanuel.seguin at ign.fr  Fri Aug  5 06:42:30 2011
From: emmanuel.seguin at ign.fr (=?ISO-8859-1?Q?Emmanuel_S=E9guin?=)
Date: Fri, 05 Aug 2011 15:42:30 +0200
Subject: [Proj] Releasing 4.8.0 ?
Message-ID: <4E3BF346.6020803@ign.fr>

Hi everyone,

Experiencing thread-safety issues while using Proj4 4.7.0 in our own WMS 
software, we (IGNF) have done a test with the trunk version of Proj4 => 
New Proj4 API thread-safe functions solved our problems. As we're 
generally happy about the tests done using this trunk version, we were 
thinking about releasing our software with a new version of Proj4. This 
leads us to the subject of this message :

How far is the trunk version of Proj4 from the 4.8.0 release ? And how 
can this milestone be reached ?

The 4.8.0 milestone indicator 
(http://trac.osgeo.org/proj/milestone/4.8.0) shows only two active 
tickets yet to be solved.
However, there's a more substantial list of 46 active bug tickets 
waiting to be solved (http://trac.osgeo.org/proj/report/1).

Do you think all the active bug tickets need to be fixed before 
releasing 4.8.0 ?

Which one of them do you think must be absolutely fixed in the 4.8.0 
release ?

Thanx for you opinions,

Best regards,

Manu

-- 
Emmanuel Séguin
SIEL - Pôle technique du Géoportail
Institut Géographique National
2/4, avenue Pasteur - 94165 Saint Mandé Cedex
Phone : +33 1.43.98.80.00 (ext : 72.21)
http://fr.linkedin.com/in/emmmanuelseguin




From warmerdam at pobox.com  Fri Aug  5 09:04:33 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 5 Aug 2011 09:04:33 -0700
Subject: [Proj] Releasing 4.8.0 ?
In-Reply-To: <4E3BF346.6020803@ign.fr>
References: <4E3BF346.6020803@ign.fr>
Message-ID: <CA+YzLBdmw8T--yskbiLyirdCQLsixd9bWuS7=NOVSpPc+b-ibA@mail.gmail.com>

2011/8/5 Emmanuel Séguin <emmanuel.seguin at ign.fr>:
> How far is the trunk version of Proj4 from the 4.8.0 release ? And how
> can this milestone be reached ?

Emmanuel,

Good question.  I made a push for a 4.8.0 release about six
weeks ago, but got bogged down in the number of open bugs
and ultimately failed to bring forward even a beta.

> The 4.8.0 milestone indicator
> (http://trac.osgeo.org/proj/milestone/4.8.0) shows only two active
> tickets yet to be solved.
> However, there's a more substantial list of 46 active bug tickets
> waiting to be solved (http://trac.osgeo.org/proj/report/1).
>
> Do you think all the active bug tickets need to be fixed before
> releasing 4.8.0 ?

I certainly do not feel the bug backlog needs to be cleared before
a release.

> Which one of them do you think must be absolutely fixed in the 4.8.0
> release ?

That is a very good question.  I'd appreciate folks identifying bugs
(on list, or possibly by setting the milestone to 4.8.0 in Trac) that
they think are important to fix before we proceed with a release.
Some I have trouble judging the importance of.

I'd like to have a PROJ 4.8.0 release completed in August.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer


From support.mn at elisanet.fi  Sun Aug  7 06:28:37 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sun, 7 Aug 2011 16:28:37 +0300 (EEST)
Subject: [Proj] Releasing 4.8.0 ?
Message-ID: <16783860.7621201312723717644.JavaMail.support.mn@elisanet.fi>

Hello,

Before thread safe measures in library could somebody check
and test the performance of all versions since we do not want
to have any back steps in speed. (And maybe put a switch to
remove such measures if they are not required if they really do
add some overhead?)

My suggestion would be that if somebody needs thread safety
he adds some locking mechanism above Proj.4 so that the threads
do not mess up (write) the data and reading only by many threads
is not a problem? What exactly are the changes made in Proj.4
from 4.6 to 4.7?

Regards: Janne.

----------------------------------------------------

Emmanuel Séguin [emmanuel.seguin at ign.fr] kirjoitti: 
> Hi everyone,
> 
> Experiencing thread-safety issues while using Proj4 4.7.0 in our own WMS 
> software, we (IGNF) have done a test with the trunk version of Proj4 => 
> New Proj4 API thread-safe functions solved our problems. As we're 
> generally happy about the tests done using this trunk version, we were 
> thinking about releasing our software with a new version of Proj4. This 
> leads us to the subject of this message :
> 
> How far is the trunk version of Proj4 from the 4.8.0 release ? And how 
> can this milestone be reached ?
> 
> The 4.8.0 milestone indicator 
> (http://trac.osgeo.org/proj/milestone/4.8.0) shows only two active 
> tickets yet to be solved.
> However, there's a more substantial list of 46 active bug tickets 
> waiting to be solved (http://trac.osgeo.org/proj/report/1).
> 
> Do you think all the active bug tickets need to be fixed before 
> releasing 4.8.0 ?
> 
> Which one of them do you think must be absolutely fixed in the 4.8.0 
> release ?
> 
> Thanx for you opinions,
> 
> Best regards,
> 
> Manu
> 
> -- 
> Emmanuel Séguin
> SIEL - Pôle technique du Géoportail
> Institut Géographique National
> 2/4, avenue Pasteur - 94165 Saint Mandé Cedex
> Phone : +33 1.43.98.80.00 (ext : 72.21)
> http://fr.linkedin.com/in/emmmanuelseguin
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From warmerdam at pobox.com  Sun Aug  7 10:12:36 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sun, 7 Aug 2011 10:12:36 -0700
Subject: [Proj] Releasing 4.8.0 ?
In-Reply-To: <16783860.7621201312723717644.JavaMail.support.mn@elisanet.fi>
References: <16783860.7621201312723717644.JavaMail.support.mn@elisanet.fi>
Message-ID: <CA+YzLBfQMpM-57OpooEsxC5VGjNG0Wp+Mtr01OeNwEvze02AQQ@mail.gmail.com>

On Sun, Aug 7, 2011 at 6:28 AM,  <support.mn at elisanet.fi> wrote:
> Hello,
>
> Before thread safe measures in library could somebody check
> and test the performance of all versions since we do not want
> to have any back steps in speed. (And maybe put a switch to
> remove such measures if they are not required if they really do
> add some overhead?)

Janne,

Doing some timetests between versions does seem worthwhile.  If
this is a major concern for you, I would encourage you to do so.  Perhaps
compare 4.6.0, 4.7.0 and trunk.

I will note that while I am concerned about performance, my
goal with PROJ.4 isn't necessarily to be the fastest projections
library.  I don't accept that any peformance regression is unacceptable.

You can configure --without-mutex on unix-like systems to
disable use of locking where it is currently found (access to
datum shift grids, and the "init file" cache).

> My suggestion would be that if somebody needs thread safety
> he adds some locking mechanism above Proj.4 so that the threads
> do not mess up (write) the data and reading only by many threads
> is not a problem? What exactly are the changes made in Proj.4
> from 4.6 to 4.7?

Your suggested approach was used in the past, but it was an
unnecessary limitation in most cases so it was decided (by me
at least) that PROJ.4 should become multi-thread safe.

This has been accomplished by two main means.

1) Implement an exclusion lock around access to some
shared resources, in particular the datum shift grids and
the cache of initiations loaded from init files (like 'epsg').

2) Implement an execution context object, visible at the
application layer, that can be used to segregate different
threads.  The most important thing put in this thread was
the "pj_errno", but some other things, like error handlers
as well.  This allows us to implement reentrancy without
mutual exclusion locks.

There was also a bit of cleanup of other unnecessary static
data I think.   Some of this work, the exclusion locks in
particular, was already done in 4.7.0.  The context work is
in 4.8.0 and requires using slightly different function entry
points to get full advantage.

The introduction of a context should likely have been
vetted by an RFC process.  I am still willing to do so
if there are several members of the community who would
like us to have a chance to consider whether or not to go
this direction.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer


From carlo.bertelli at gmail.com  Sun Aug  7 14:16:51 2011
From: carlo.bertelli at gmail.com (Carlo A. Bertelli (Charta s.r.l.))
Date: Sun, 7 Aug 2011 23:16:51 +0200
Subject: [Proj] Little sphere projection
Message-ID: <CALc8-V+4ZgX9rsS9Ldii-7Trn_kBSw3HnKUN_mhrE7BkB_p=dQ@mail.gmail.com>

Hello,
I'm trying a simplistic approach to a topological representation. I'm
mapping the possessions belonging to a group of abbeys in a regional
space. Il works well at a small scale, but when the abbeys are
clustered in major towns, the representation ties properties to the
cluster and not to the single abbey. The fact is that towns (and
clustering) play a significant role in this story (yes this happens in
the 18th century), asks for a better representation.
My idea is analysing each town cluster using a little sphere (or
ellipsoid) centered on the town whith an emisphere that only covers
the space of the region, so to show larger distances in town (so to
distinguish any abbey) and reduced distances far from the town center.
I think it should not be impossible to craft ad hoc projections, but I
have no idea on how to do it. Could someone help me?
TIA
c


From cjmce at lsu.edu  Sun Aug  7 19:49:59 2011
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Sun, 7 Aug 2011 21:49:59 -0500
Subject: [Proj] Little sphere projection
References: <CALc8-V+4ZgX9rsS9Ldii-7Trn_kBSw3HnKUN_mhrE7BkB_p=dQ@mail.gmail.com>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A6B10@email002.lsu.edu>

For any individual Abbey, the azimuthal equidistant projection (originally invented by the monk, Postel) might do in either a spherical or an ellipsoidal case.  This projection is identical to what is viewed on a radar screen.  The French Hatt projection is one variant used for hydrographic projections of harbor surveys in the 19th and early 20th centuries.
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3531
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 328-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of Carlo A. Bertelli (Charta s.r.l.)
Sent: Sun 07-Aug-11 16:16
To: proj at lists.maptools.org
Subject: [Proj] Little sphere projection



Hello,
I'm trying a simplistic approach to a topological representation. I'm
mapping the possessions belonging to a group of abbeys in a regional
space. Il works well at a small scale, but when the abbeys are
clustered in major towns, the representation ties properties to the
cluster and not to the single abbey. The fact is that towns (and
clustering) play a significant role in this story (yes this happens in
the 18th century), asks for a better representation.
My idea is analysing each town cluster using a little sphere (or
ellipsoid) centered on the town whith an emisphere that only covers
the space of the region, so to show larger distances in town (so to
distinguish any abbey) and reduced distances far from the town center.
I think it should not be impossible to craft ad hoc projections, but I
have no idea on how to do it. Could someone help me?
TIA
c
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110807/54ccfc78/attachment.html>

From support.mn at elisanet.fi  Mon Aug  8 00:59:25 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Mon, 8 Aug 2011 10:59:25 +0300 (EEST)
Subject: [Proj] Releasing 4.8.0 ?
Message-ID: <29624518.11214531312790365325.JavaMail.support.mn@elisanet.fi>

Frank,

if you are only using local variables in stack.. there are no thread
problems since each thread has it's own variables.. the point is
just to remove all globals and instead of referencing globals
calling access functions to protected locals. Basically each
thread should have it's own variables in stack or where ever.

I have not tested the speed of 4.7 but I had the feeling after switching
back to 4.6 that all proj.4 operations had an increase of speed and
that is why I am suspicious about the 4.7 coding? Especially the
startup initialization of projections was much faster in 4.6.

Since I do not need thread safety even if my projects mostly are
multi threaded (only one thread handles the projections) I would
not like to have any drawbacks in speed. So that I really prefer a
switch that would remove all unnecessary thread related overhead.

Frank, can you run "Diff" for 4.6 and 4.7 (or 4.8)? I don't have the tool
installed right now here.

http://en.wikipedia.org/wiki/Diff
http://pubs.opengroup.org/onlinepubs/9699919799/utilities/diff.html

Regards: Janne.

--------------------------------

Frank Warmerdam [warmerdam at pobox.com] kirjoitti: 
> On Sun, Aug 7, 2011 at 6:28 AM,  <support.mn at elisanet.fi> wrote:
> > Hello,
> >
> > Before thread safe measures in library could somebody check
> > and test the performance of all versions since we do not want
> > to have any back steps in speed. (And maybe put a switch to
> > remove such measures if they are not required if they really do
> > add some overhead?)
> 
> Janne,
> 
> Doing some timetests between versions does seem worthwhile.  If
> this is a major concern for you, I would encourage you to do so.  Perhaps
> compare 4.6.0, 4.7.0 and trunk.
> 
> I will note that while I am concerned about performance, my
> goal with PROJ.4 isn't necessarily to be the fastest projections
> library.  I don't accept that any peformance regression is unacceptable.
> 
> You can configure --without-mutex on unix-like systems to
> disable use of locking where it is currently found (access to
> datum shift grids, and the "init file" cache).
> 
> > My suggestion would be that if somebody needs thread safety
> > he adds some locking mechanism above Proj.4 so that the threads
> > do not mess up (write) the data and reading only by many threads
> > is not a problem? What exactly are the changes made in Proj.4
> > from 4.6 to 4.7?
> 
> Your suggested approach was used in the past, but it was an
> unnecessary limitation in most cases so it was decided (by me
> at least) that PROJ.4 should become multi-thread safe.
> 
> This has been accomplished by two main means.
> 
> 1) Implement an exclusion lock around access to some
> shared resources, in particular the datum shift grids and
> the cache of initiations loaded from init files (like 'epsg').
> 
> 2) Implement an execution context object, visible at the
> application layer, that can be used to segregate different
> threads.  The most important thing put in this thread was
> the "pj_errno", but some other things, like error handlers
> as well.  This allows us to implement reentrancy without
> mutual exclusion locks.
> 
> There was also a bit of cleanup of other unnecessary static
> data I think.   Some of this work, the exclusion locks in
> particular, was already done in 4.7.0.  The context work is
> in 4.8.0 and requires using slightly different function entry
> points to get full advantage.
> 
> The introduction of a context should likely have been
> vetted by an RFC process.  I am still willing to do so
> if there are several members of the community who would
> like us to have a chance to consider whether or not to go
> this direction.
> 
> Best regards,
> -- 
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | Geospatial Software Developer
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From carlo.bertelli at gmail.com  Mon Aug  8 01:06:09 2011
From: carlo.bertelli at gmail.com (Carlo A. Bertelli (Charta s.r.l.))
Date: Mon, 8 Aug 2011 10:06:09 +0200
Subject: [Proj]  Little sphere projection
Message-ID: <CALc8-VKkQs3tEq=s6S0zkzpFwmn8VtjSpzPq5LJanWEPLxcQAQ@mail.gmail.com>

Thank you for the idea of the radar, that's the image I have in my
mind. But I'm not able to find the proper parameters for proj.
That projection seems to be the same that Snyder calls "Oblique
Azimuthal Equidistant", but I cannot find any
non-cylindrical/non-conic Equidistant projection in proj. Could the
spherical be a special case of conic projection? Should the "ob_tran"
(General Oblique Transformation) be used in this case?
I think this could make things even more difficult to handle.

-- Clifford J Mugnier cjmce at lsu.edu  on Sun Aug 7 21:49:59 EST 2011 wrote:

> For any individual Abbey, the azimuthal equidistant projection (originally
> invented by the monk, Postel) might do in either a spherical or an
> ellipsoidal case.  This projection is identical to what is viewed on a
> radar screen.  The French Hatt projection is one variant used for
> hydrographic projections of harbor surveys in the 19th and early 20th
> centuries.
>
> Clifford J. Mugnier, C.P., C.M.S.
> Chief of Geodesy,
> Center for GeoInformatics
> Department of Civil Engineering
> Patrick F. Taylor Hall 3531
> LOUISIANA STATE UNIVERSITY
> Baton Rouge, LA  70803
[...]


From support.mn at elisanet.fi  Mon Aug  8 01:55:21 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Mon, 8 Aug 2011 11:55:21 +0300 (EEST)
Subject: [Proj] Little sphere projection
Message-ID: <26920871.11221451312793721203.JavaMail.support.mn@elisanet.fi>

Hello,

I am not sure, but it does not sound that your problem is projection
related since in small scale changing the projection does not add
anything too much to the result since almost all normal projections
give similar results when the curvature of the earth does not affect
very much the end result compared to the planar representation of
it?

The projection starts to play role for example near poles when you
are using for example Mercator projection. The distortion of the
plane representation of the earth is so huge that the projection is
no more usable and it gives wrong results. But in most normal
cases where maps are made with fair accuracy there should not
be any need to change the original projection.

You can draw spheres or what ever on all normal maps using
normal local projections and the results should be rather accurate.

Regards: Janne.

------------------------------------------------------

"Carlo A. Bertelli (Charta s.r.l.)" [carlo.bertelli at gmail.com] kirjoitti: 
> Hello,
> I'm trying a simplistic approach to a topological representation. I'm
> mapping the possessions belonging to a group of abbeys in a regional
> space. Il works well at a small scale, but when the abbeys are
> clustered in major towns, the representation ties properties to the
> cluster and not to the single abbey. The fact is that towns (and
> clustering) play a significant role in this story (yes this happens in
> the 18th century), asks for a better representation.
> My idea is analysing each town cluster using a little sphere (or
> ellipsoid) centered on the town whith an emisphere that only covers
> the space of the region, so to show larger distances in town (so to
> distinguish any abbey) and reduced distances far from the town center.
> I think it should not be impossible to craft ad hoc projections, but I
> have no idea on how to do it. Could someone help me?
> TIA
> c
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Tue Aug  9 04:02:40 2011
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 9 Aug 2011 11:02:40 +0000
Subject: [Proj] Little sphere projection
In-Reply-To: <CALc8-V+4ZgX9rsS9Ldii-7Trn_kBSw3HnKUN_mhrE7BkB_p=dQ@mail.gmail.com>
References: <CALc8-V+4ZgX9rsS9Ldii-7Trn_kBSw3HnKUN_mhrE7BkB_p=dQ@mail.gmail.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD4938861DF3@SETHNWS023.carmenta.se>

Carlo Bertelli wrote:

> My idea is analysing each town cluster using a little sphere
> (or ellipsoid) centered on the town whith an emisphere that 
> only covers the space of the region, so to show larger distances 
> in town (so to distinguish any abbey) and reduced distances far 
> from the town center. 

If I understand you right, you want your map to be distorted
in the same way as M. C. Escher's Balcony,

http://www.worldofescher.com/gallery/A3.html

where the central balcony is shown in a large (detailed) scale,
but surrounding areas are shown in much smaller scale.  

In Escher's print, the scale has stabilized when you get to the
print edges, but that's not necessary. 

I haven't seen such map projections used for cartography, except
for patriotic joke maps, where one's beloved home town or country
is shown in a much larger scale than the rest of the world. But
maybe such projections are used for statistical or economic maps,
as you suggest.  I doubt there is anything appropriate in Proj.4, 
though. 

One could make a new kind of azimuthal map projection for this
purpose.  The azimuth (direction) from the town center could be
preserved (because, why not?).  The true distance from the town 
center could be represented by a shorter map distance.  The
mathematical function that converts true distance to map distance
should have slope 1 for short distances, but gradually get lower
slope.  Something like arctan or tanh, perhaps.  

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Carlo A. Bertelli (Charta s.r.l.)
Sent: den 7 augusti 2011 23:17
To: proj at lists.maptools.org
Subject: [Proj] Little sphere projection

Hello,
I'm trying a simplistic approach to a topological representation. I'm mapping the possessions belonging to a group of abbeys in a regional space. Il works well at a small scale, but when the abbeys are clustered in major towns, the representation ties properties to the cluster and not to the single abbey. The fact is that towns (and
clustering) play a significant role in this story (yes this happens in the 18th century), asks for a better representation.
My idea is analysing each town cluster using a little sphere (or
ellipsoid) centered on the town whith an emisphere that only covers the space of the region, so to show larger distances in town (so to distinguish any abbey) and reduced distances far from the town center.
I think it should not be impossible to craft ad hoc projections, but I have no idea on how to do it. Could someone help me?
TIA
c
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From j.l.h.hartmann at uva.nl  Tue Aug  9 04:33:55 2011
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Tue, 09 Aug 2011 13:33:55 +0200
Subject: [Proj] Little sphere projection
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD4938861DF3@SETHNWS023.carmenta.se>
References: <CALc8-V+4ZgX9rsS9Ldii-7Trn_kBSw3HnKUN_mhrE7BkB_p=dQ@mail.gmail.com>
	<E4AB3DD44D22854B819908379DE4AD4938861DF3@SETHNWS023.carmenta.se>
Message-ID: <4E411B23.5040804@uva.nl>

Are these the kind of maps you mean:

http://www-personal.umich.edu/~mejn/cartograms/

These are "cartograms", distorted maps on the basis of some sort of 
density distributions. There is a complete book with hundreds of examples:

http://www.amazon.com/Atlas-Real-World-Daniel-Dorling/dp/0500514259

The authors have made available the software 
(http://www-personal.umich.edu/~mejn/cart/). I got it working some time 
ago, but you need to know a bit about low-level compiling. 
Alternatively, there is a tool for ArcGIS 
(http://blogs.esri.com/Info/blogs/gisedcom/archive/2009/10/16/exploring-data-using-cartograms-within-arcgis-desktop.aspx).

Cartograms are real fun, so I hope you can do something with them for 
your subject.

Cheers,

Jan

On 08/09/11 13:02, Mikael Rittri wrote:
> Carlo Bertelli wrote:
>
>> My idea is analysing each town cluster using a little sphere
>> (or ellipsoid) centered on the town whith an emisphere that
>> only covers the space of the region, so to show larger distances
>> in town (so to distinguish any abbey) and reduced distances far
>> from the town center.
> If I understand you right, you want your map to be distorted
> in the same way as M. C. Escher's Balcony,
>
> http://www.worldofescher.com/gallery/A3.html
>
> where the central balcony is shown in a large (detailed) scale,
> but surrounding areas are shown in much smaller scale.
>
> In Escher's print, the scale has stabilized when you get to the
> print edges, but that's not necessary.
>
> I haven't seen such map projections used for cartography, except
> for patriotic joke maps, where one's beloved home town or country
> is shown in a much larger scale than the rest of the world. But
> maybe such projections are used for statistical or economic maps,
> as you suggest.  I doubt there is anything appropriate in Proj.4,
> though.
>
> One could make a new kind of azimuthal map projection for this
> purpose.  The azimuth (direction) from the town center could be
> preserved (because, why not?).  The true distance from the town
> center could be represented by a shorter map distance.  The
> mathematical function that converts true distance to map distance
> should have slope 1 for short distances, but gradually get lower
> slope.  Something like arctan or tanh, perhaps.
>
> Best regards,
>
> Mikael Rittri
> Carmenta
> Sweden
> http://www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Carlo A. Bertelli (Charta s.r.l.)
> Sent: den 7 augusti 2011 23:17
> To: proj at lists.maptools.org
> Subject: [Proj] Little sphere projection
>
> Hello,
> I'm trying a simplistic approach to a topological representation. I'm mapping the possessions belonging to a group of abbeys in a regional space. Il works well at a small scale, but when the abbeys are clustered in major towns, the representation ties properties to the cluster and not to the single abbey. The fact is that towns (and
> clustering) play a significant role in this story (yes this happens in the 18th century), asks for a better representation.
> My idea is analysing each town cluster using a little sphere (or
> ellipsoid) centered on the town whith an emisphere that only covers the space of the region, so to show larger distances in town (so to distinguish any abbey) and reduced distances far from the town center.
> I think it should not be impossible to craft ad hoc projections, but I have no idea on how to do it. Could someone help me?
> TIA
> c
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110809/1bf3bb25/attachment.html>

From dagnew at ucsd.edu  Tue Aug  9 10:52:41 2011
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Tue, 9 Aug 2011 10:52:41 -0700
Subject: [Proj] Little sphere projection
In-Reply-To: <4E411B23.5040804@uva.nl>
References: <CALc8-V+4ZgX9rsS9Ldii-7Trn_kBSw3HnKUN_mhrE7BkB_p=dQ@mail.gmail.com>
	<E4AB3DD44D22854B819908379DE4AD4938861DF3@SETHNWS023.carmenta.se>
	<4E411B23.5040804@uva.nl>
Message-ID: <C78458D6-99E9-41F1-BB81-D70210804295@ucsd.edu>

I think what is wanted is a projection that magnifies the center much  
more
than greater distances; see (these are from Snyder's bibliography):

944.  H\agerstrand, Torsten, 1957, Migration and area, in Migration in
Sweden: Lund, Sweden, Royal University of Lund, Dept. of Geography, Lund
studies in geography, series B, Human Geography, no. 13, p. 27-158.
[Azimuthal Logarithmic projection shown, p. 73.]

1194.  Kadmon, Naftali, 1975, Data-bank derived hyperbolic-scale
equitemporal town maps: International Yearbook of Cartography, v. 15, p.
47-54.  [Enlargement of center of projection.]

1197.  Kadmon, Naftali, and Shlomi, Eli, 1978, A polyfocal projection  
for
statistical surfaces: Cartographic Journal, v. 15, no. 1, p. 36-41.

2101.  Sliwa, Antoni, 1978, Kartograficzne metody ekonomicznej  
transformacji
przestrzeni: Folia Geographica, Series Geografica Oeconomica, v. 11, p.
149-160.  [Polish.  Cartographical methods of economic space  
transformation.
Extension of H?gerstrand (1957) Azimuthal Logarithmic projection
techniques.]

2102.  Smith, Derek, and Griffin, Trevor, 1976, Maps and the human
statistical landscape: Globe, v. 1, no. 5-6, p. 63-69.  [Azimuthal
Logarithmic projection centered on Adelaide, Australia.]

2132. Snyder, J. P., 1987, "Magnifying-glass" azimuthal map  
projections: Amer.
Cartographer, v. 14, no. 1, p. 61-68.

2253. Tobler, W. R., 1963, Geographic area and map projections:  
Geographical Review, v.
53, no. 1, p. 59-78.  [Equal-area projections and cartograms.   
Translated to
German as Geographischer Raum und Kartenprojektionen, in Wirtschafts-  
und
Sozialgeographie.  Hrsg. v. Dietrich Bartels: Cologne and Berlin,
Kiepenheuer und Witsch, 1970, p. 262-277.]



From carlo.bertelli at gmail.com  Wed Aug 10 00:00:07 2011
From: carlo.bertelli at gmail.com (Carlo A. Bertelli (Charta s.r.l.))
Date: Wed, 10 Aug 2011 09:00:07 +0200
Subject: [Proj] Little sphere projection
In-Reply-To: <4E411B23.5040804@uva.nl>
References: <CALc8-V+4ZgX9rsS9Ldii-7Trn_kBSw3HnKUN_mhrE7BkB_p=dQ@mail.gmail.com>
	<E4AB3DD44D22854B819908379DE4AD4938861DF3@SETHNWS023.carmenta.se>
	<4E411B23.5040804@uva.nl>
Message-ID: <CALc8-VLvGOFBi10ZUXg+9vg5738Tra9U2UUPAcqhy5xWh+mEEQ@mail.gmail.com>

Everything you say it's true and very interesting.
We may think that the representation I'm looking for is a cartogram,
maybe, but in a peculiar way. It's mostly a "perspective" on the data.
It should show the "urban" view of this otherwise small scale
behaviour. But it risks to be off-topic.
Cartograms usually show a change in the *features* themselves, I'm
looking for an uneven scale for the map, which is not a perspective,
but a projection.
In my first idea it is truly what Clifford Mugnier calls a "radar"
view. Near things are enlarged, far thing become smaller in a
non-linear way.
This could lead to another "projection" (I think someone has already
worked on it), a normal (laplacian) projection that is very near
(statistically) to what is suggested by Mikael Rittri with Escher's
Balcony. As he implicitely says, this could be fairly easy to
approximate, but it's difficult to apply as this should really be
treated as a cartogram that is tied to each abbey and not to urban
space in comparison to the countryside. This is not easy to decide.
I think the idea of a spherical (globular?) projection is the most
practical, and I need it to be a projection and not a cartogram
because there are also other layers that should be re-projected
(roads, rivers, hillshading). But, as I said before, I cannot find a
projection supported by proj which could be used in this case. A
suggestion is gratefully accepted about the type and parameters I
should use for centering it on a town and to adjust the size of the
"spheroid" to the area of the phenomena.
Thank you to everyone, you have enhanced my understanding of the
problem. I think I can work out a cartogram on the size of farms, but
in this case built possessions (points) and localized financial
annuities are too much a complex issue for a cartogram.
c

On Tue, Aug 9, 2011 at 1:33 PM, Jan Hartmann <j.l.h.hartmann at uva.nl> wrote:
> Are these the kind of maps you mean:
>
> http://www-personal.umich.edu/~mejn/cartograms/
>
> These are "cartograms", distorted maps on the basis of some sort of density
> distributions. There is a complete book with hundreds of examples:
>
> http://www.amazon.com/Atlas-Real-World-Daniel-Dorling/dp/0500514259
>
> The authors have made available the software
> (http://www-personal.umich.edu/~mejn/cart/). I got it working some time ago,
> but you need to know a bit about low-level compiling. Alternatively, there
> is a tool for ArcGIS
> (http://blogs.esri.com/Info/blogs/gisedcom/archive/2009/10/16/exploring-data-using-cartograms-within-arcgis-desktop.aspx).
>
> Cartograms are real fun, so I hope you can do something with them for your
> subject.
>
> Cheers,
>
> Jan
>
> On 08/09/11 13:02, Mikael Rittri wrote:
>
> Carlo Bertelli wrote:
>
> My idea is analysing each town cluster using a little sphere
> (or ellipsoid) centered on the town whith an emisphere that
> only covers the space of the region, so to show larger distances
> in town (so to distinguish any abbey) and reduced distances far
> from the town center.
>
> If I understand you right, you want your map to be distorted
> in the same way as M. C. Escher's Balcony,
>
> http://www.worldofescher.com/gallery/A3.html
>
> where the central balcony is shown in a large (detailed) scale,
> but surrounding areas are shown in much smaller scale.
>
> In Escher's print, the scale has stabilized when you get to the
> print edges, but that's not necessary.
>
> I haven't seen such map projections used for cartography, except
> for patriotic joke maps, where one's beloved home town or country
> is shown in a much larger scale than the rest of the world. But
> maybe such projections are used for statistical or economic maps,
> as you suggest.  I doubt there is anything appropriate in Proj.4,
> though.
>
> One could make a new kind of azimuthal map projection for this
> purpose.  The azimuth (direction) from the town center could be
> preserved (because, why not?).  The true distance from the town
> center could be represented by a shorter map distance.  The
> mathematical function that converts true distance to map distance
> should have slope 1 for short distances, but gradually get lower
> slope.  Something like arctan or tanh, perhaps.
>
> Best regards,
>
> Mikael Rittri
> Carmenta
> Sweden
> http://www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Carlo A. Bertelli
> (Charta s.r.l.)
> Sent: den 7 augusti 2011 23:17
> To: proj at lists.maptools.org
> Subject: [Proj] Little sphere projection
>
> Hello,
> I'm trying a simplistic approach to a topological representation. I'm
> mapping the possessions belonging to a group of abbeys in a regional space.
> Il works well at a small scale, but when the abbeys are clustered in major
> towns, the representation ties properties to the cluster and not to the
> single abbey. The fact is that towns (and
> clustering) play a significant role in this story (yes this happens in the
> 18th century), asks for a better representation.
> My idea is analysing each town cluster using a little sphere (or
> ellipsoid) centered on the town whith an emisphere that only covers the
> space of the region, so to show larger distances in town (so to distinguish
> any abbey) and reduced distances far from the town center.
> I think it should not be impossible to craft ad hoc projections, but I have
> no idea on how to do it. Could someone help me?
> TIA
> c

-- 
--------------------------------------------------------------------------
Carlo A. Bertelli
   Charta servizi e sistemi per il territorio e la storia ambientale srl
          Dipendenze del palazzo Doria,
          vc. alla Chiesa della Maddalena 9/2 16124      Genova (Italy)
          tel. +39(0)10 2475439  fax +39(0)10 2475439  gsm:+39 393 1590711
   e-mail: bertelli at charta.acme.com      http://www.charta.acme.com
--------------------------------------------------------------------------


From noorcs22 at gmail.com  Wed Aug 10 01:22:53 2011
From: noorcs22 at gmail.com (Mustafa646)
Date: Wed, 10 Aug 2011 01:22:53 -0700 (PDT)
Subject: [Proj] Proj4 Examples
Message-ID: <1312964573905-6671490.post@n2.nabble.com>

Can Anybody tell me about some useful examples where Proj4 library is used.
Just like we have examples for OpenLayers etc.

 

--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Proj4-Examples-tp6671490p6671490.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From support.mn at elisanet.fi  Wed Aug 10 05:23:48 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Wed, 10 Aug 2011 15:23:48 +0300 (EEST)
Subject: [Proj] Proj4 Examples
Message-ID: <12114207.7813301312979028572.JavaMail.support.mn@elisanet.fi>

Hello,

Just start reading the documents

-> http://trac.osgeo.org/proj/

Regards: Janne.

----------------------------------------

Mustafa646 [noorcs22 at gmail.com] kirjoitti: 
> Can Anybody tell me about some useful examples where Proj4 library is used.
> Just like we have examples for OpenLayers etc.
> 
>  
> 
> --
> View this message in context: http://osgeo-org.1803224.n2.nabble.com/Proj4-Examples-tp6671490p6671490.html
> Sent from the PROJ.4 mailing list archive at Nabble.com.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From noorcs22 at gmail.com  Wed Aug 10 07:43:48 2011
From: noorcs22 at gmail.com (Mustafa646)
Date: Wed, 10 Aug 2011 07:43:48 -0700 (PDT)
Subject: [Proj] How to change Layer's Native Projection
Message-ID: <1312987428543-6672649.post@n2.nabble.com>

I have a Layer (polygon shapefile) with native projection EPSG:3008. I want
to change its native projection from EPSG:3008 to EPSG:4326. How i do this ?

I don't want to change it using third party tool like ogr2ogr. I want to
change it using Proj4 js library. How i do this ?





--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/How-to-change-Layer-s-Native-Projection-tp6672649p6672649.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From warmerdam at pobox.com  Wed Aug 10 07:53:22 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 10 Aug 2011 07:53:22 -0700
Subject: [Proj] How to change Layer's Native Projection
In-Reply-To: <1312987428543-6672649.post@n2.nabble.com>
References: <1312987428543-6672649.post@n2.nabble.com>
Message-ID: <4E429B62.1000701@pobox.com>

On 11-08-10 07:43 AM, Mustafa646 wrote:
> I have a Layer (polygon shapefile) with native projection EPSG:3008. I want
> to change its native projection from EPSG:3008 to EPSG:4326. How i do this ?
>
> I don't want to change it using third party tool like ogr2ogr. I want to
> change it using Proj4 js library. How i do this ?

Mustafa,

PROJ.4 does not include any support for accessing feature formats like
shapefiles.  You could convert a stream of text points from one coordinate
system to the other like:

   cs2cs +init=epsg:3008 +to +init=epsg:4326 < 3008.txt > 4326.txt

I shall avoid asking why you wish to avoid ogr2ogr despite my curiosity.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From fyw at wwwtools.com  Wed Aug 10 09:09:05 2011
From: fyw at wwwtools.com (Frank Willett)
Date: Wed, 10 Aug 2011 10:09:05 -0600
Subject: [Proj] Problem with program on Windows
Message-ID: <F97FB750-5E8B-4608-B795-92040763B8C2@wwwtools.com>

I'm running Windows 7 Ultimate 64 and have cygwin installed.

I downloaded the proj.4 Windows binary distribution and tried the following command:

proj.exe +proj=utm +ellps=clrk66 +lon_0=0 +lat_0=0 +x_0=500000 +y_0=0 +units=m

expecting an answer of (500000.00, 0.00) and got (166017.00, 0.00)

I then tried:

proj.exe +proj=utm +ellps=clrk66 +lon_0=0 +lat_0=0 +x_0=0 +y_0=0 +units=m

expecting an answer of (0.00, 0.00) and I got the same answer of (166017.00, 0.00).

I then downloaded the source code and compiled/linked under cygwin and tried the above tests
again, obtaining (83398.20, 0.00) for both tests.

I sure hope I'm missing something obvious :-(

Any ideas?

Frank

From warmerdam at pobox.com  Wed Aug 10 09:25:43 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 10 Aug 2011 09:25:43 -0700
Subject: [Proj] Problem with program on Windows
In-Reply-To: <F97FB750-5E8B-4608-B795-92040763B8C2@wwwtools.com>
References: <F97FB750-5E8B-4608-B795-92040763B8C2@wwwtools.com>
Message-ID: <CA+YzLBfARDuUbyX6XSBmac9dp5y8Qn8z9mVTgWdjuSz-iV3oGw@mail.gmail.com>

On Wed, Aug 10, 2011 at 9:09 AM, Frank Willett <fyw at wwwtools.com> wrote:
> I'm running Windows 7 Ultimate 64 and have cygwin installed.
>
> I downloaded the proj.4 Windows binary distribution and tried the following command:
>
> proj.exe +proj=utm +ellps=clrk66 +lon_0=0 +lat_0=0 +x_0=500000 +y_0=0 +units=m
>
> expecting an answer of (500000.00, 0.00) and got (166017.00, 0.00)

Frank,

You have not indicated what user input you gave, so it is hard to be
sure what the correct output should be.  However, I will note that it
is not normal to try and specify the detailed parameters like +lon_0,
+lat_0, +x_0 and +y_0 with +proj=utm.  With UTM you should provide
a +zone.  If you want to specify the transverse mercator projection
yourself then just use +proj=tmerc instead.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer


From fyw at wwwtools.com  Wed Aug 10 09:41:41 2011
From: fyw at wwwtools.com (Frank Willett)
Date: Wed, 10 Aug 2011 10:41:41 -0600
Subject: [Proj] Problem with program on Windows
In-Reply-To: <CA+YzLBfARDuUbyX6XSBmac9dp5y8Qn8z9mVTgWdjuSz-iV3oGw@mail.gmail.com>
References: <F97FB750-5E8B-4608-B795-92040763B8C2@wwwtools.com>
	<CA+YzLBfARDuUbyX6XSBmac9dp5y8Qn8z9mVTgWdjuSz-iV3oGw@mail.gmail.com>
Message-ID: <701FB95B-95FA-438A-B71A-4563E16E67C9@wwwtools.com>

Thanks,

My confusion was the difference between tmerc and utm.

BTW: I was inputing (0, 0).

When I switched to tmerc all is well.

Thanks again :-)

Frank

On Aug 10, 2011, at 10:25 AM, Frank Warmerdam wrote:

> On Wed, Aug 10, 2011 at 9:09 AM, Frank Willett <fyw at wwwtools.com> wrote:
>> I'm running Windows 7 Ultimate 64 and have cygwin installed.
>> 
>> I downloaded the proj.4 Windows binary distribution and tried the following command:
>> 
>> proj.exe +proj=utm +ellps=clrk66 +lon_0=0 +lat_0=0 +x_0=500000 +y_0=0 +units=m
>> 
>> expecting an answer of (500000.00, 0.00) and got (166017.00, 0.00)
> 
> Frank,
> 
> You have not indicated what user input you gave, so it is hard to be
> sure what the correct output should be.  However, I will note that it
> is not normal to try and specify the detailed parameters like +lon_0,
> +lat_0, +x_0 and +y_0 with +proj=utm.  With UTM you should provide
> a +zone.  If you want to specify the transverse mercator projection
> yourself then just use +proj=tmerc instead.
> 
> Best regards,
> -- 
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | Geospatial Software Developer
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From support.mn at elisanet.fi  Thu Aug 11 14:29:57 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Fri, 12 Aug 2011 00:29:57 +0300 (EEST)
Subject: [Proj] How to change Layer's Native Projection
Message-ID: <25541649.12139001313098197849.JavaMail.support.mn@elisanet.fi>

Hello,

Commercial MNS can import shp files in any (EPSG) projection and export them
to any (EPSG) projection. If you want to do the programming your self you might
start your project from "shp2text"

http://www.obviously.com/gis/shp2text/

which is very close all what is needed additional to Proj.4. Shp2text is based on
"shapelib":

http://shapelib.maptools.org/

Shapelib author Frank Warmerdam knows more about that library I am sure ;)

And he might tell you how "easy" it is to be integrated with Java if that is what
you want? Most of proj.4 etc. is written in C.

Regards: Janne.

---------------------------------------------------

Mustafa646 [noorcs22 at gmail.com] kirjoitti: 
> I have a Layer (polygon shapefile) with native projection EPSG:3008. I want
> to change its native projection from EPSG:3008 to EPSG:4326. How i do this ?
> 
> I don't want to change it using third party tool like ogr2ogr. I want to
> change it using Proj4 js library. How i do this ?
> 



From warmerdam at pobox.com  Thu Aug 11 14:40:00 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 11 Aug 2011 14:40:00 -0700
Subject: [Proj] How to change Layer's Native Projection
In-Reply-To: <1312987428543-6672649.post@n2.nabble.com>
References: <1312987428543-6672649.post@n2.nabble.com>
Message-ID: <CA+YzLBfAi3Ma5UYOSGqmWNnzKBOWS6G5RnKGpwq2971mvPyXbQ@mail.gmail.com>

On Wed, Aug 10, 2011 at 7:43 AM, Mustafa646 <noorcs22 at gmail.com> wrote:
> I don't want to change it using third party tool like ogr2ogr. I want to
> change it using Proj4 js library. How i do this ?

Hi,

I'm afraid I missed the "js" part of the above when
replying last time.  My answer was around the C version
of PROJ.4, not the JavaScript version.  The JavaScript
version also does not have built-in shapefile support and
I'm not sure how you would go about reading and writing
shapefiles in JavaScript.

I do believe that Proj4JS does not use init files so you
might need to provide the full parameters for the
coordinate systems in question.  For EPSG:3008 that
might look something like:

+proj=tmerc +lat_0=0 +lon_0=13.5 +k=1 +x_0=150000 +y_0=0 +ellps=GRS80

Take my javascript advice with a grain of salt.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer


From support.mn at elisanet.fi  Thu Aug 11 14:53:30 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Fri, 12 Aug 2011 00:53:30 +0300 (EEST)
Subject: [Proj] Problem with program on Windows
Message-ID: <32089637.12139561313099610763.JavaMail.support.mn@elisanet.fi>

Frank,

that is the reason I have been talking about the syntax check
to be connected to Proj.4 ... that would then give at least a warning
(if switched on) that the user is giving meaningless input to Proj.4
and it would handle situations like this here (and maybe several
similar later) and minimize the input data garbage.

Syntax scanning is very easy to implement using "Recursive
descent parser" and will not yield any massive source code.

http://en.wikipedia.org/wiki/Recursive_descent_parser

Regards: Janne.

----------------------

Frank Warmerdam [warmerdam at pobox.com] kirjoitti:
>
> However, I will note that it
> is not normal to try and specify the detailed parameters like +lon_0,
> +lat_0, +x_0 and +y_0 with +proj=utm.  With UTM you should provide
> a +zone.  If you want to specify the transverse mercator projection
> yourself then just use +proj=tmerc instead.
> 



From warmerdam at pobox.com  Thu Aug 11 15:11:26 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 11 Aug 2011 15:11:26 -0700
Subject: [Proj] Problem with program on Windows
In-Reply-To: <32089637.12139561313099610763.JavaMail.support.mn@elisanet.fi>
References: <32089637.12139561313099610763.JavaMail.support.mn@elisanet.fi>
Message-ID: <CA+YzLBeXovXyL8seeBLd6GKRjqJ39thaAyi5_TriAq8KAbP4nQ@mail.gmail.com>

On Thu, Aug 11, 2011 at 2:53 PM,  <support.mn at elisanet.fi> wrote:
> Frank,
>
> that is the reason I have been talking about the syntax check
> to be connected to Proj.4 ... that would then give at least a warning
> (if switched on) that the user is giving meaningless input to Proj.4
> and it would handle situations like this here (and maybe several
> similar later) and minimize the input data garbage.

Janne,

It would be desirable, but it isn't something I intend to work on in
the near term.  I would note doing it properly would require
someone *knowing* the grammar.  In fact I am often not aware
of the syntax of many of the esoteric options and I'd hate to
break stuff that is working for some people.

> Syntax scanning is very easy to implement using "Recursive
> descent parser" and will not yield any massive source code.
>
> http://en.wikipedia.org/wiki/Recursive_descent_parser

I have written lots of parsers, sometimes using parser generators
and sometimes by hand.  Depending on the interpretation of
"massive" I do not entirely agree with your statement.  I believe
having a proper parser as part of PROJ.4 would non-trivially
bulk up the project.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer


From support.mn at elisanet.fi  Thu Aug 11 15:40:41 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Fri, 12 Aug 2011 01:40:41 +0300 (EEST)
Subject: [Proj] Problem with program on Windows
Message-ID: <7427890.12140181313102442515.JavaMail.support.mn@elisanet.fi>

Frank,

I agree that it would be an additional labor but the Proj.4
grammar is so easy that it does not take very many lines
to implement and of course you could always exclude the
scanner from your project if that was not needed since
that would just be some kind of a preprocessor. It would
greatly improve the quality of the definition data and help
users to avoid most obvious mistakes. It would also make
the processing otherwise more simple since the code
would not need to do any repeated checking.

I did also several compiler and language projects in 80's
and 90's even one full relational database language.

Janne.

---------------------------------------------------------

Frank Warmerdam [warmerdam at pobox.com] kirjoitti: 
> On Thu, Aug 11, 2011 at 2:53 PM,  <support.mn at elisanet.fi> wrote:
> > Frank,
> >
> > that is the reason I have been talking about the syntax check
> > to be connected to Proj.4 ... that would then give at least a warning
> > (if switched on) that the user is giving meaningless input to Proj.4
> > and it would handle situations like this here (and maybe several
> > similar later) and minimize the input data garbage.
> 
> Janne,
> 
> It would be desirable, but it isn't something I intend to work on in
> the near term.  I would note doing it properly would require
> someone *knowing* the grammar.  In fact I am often not aware
> of the syntax of many of the esoteric options and I'd hate to
> break stuff that is working for some people.
> 
> > Syntax scanning is very easy to implement using "Recursive
> > descent parser" and will not yield any massive source code.
> >
> > http://en.wikipedia.org/wiki/Recursive_descent_parser
> 
> I have written lots of parsers, sometimes using parser generators
> and sometimes by hand.  Depending on the interpretation of
> "massive" I do not entirely agree with your statement.  I believe
> having a proper parser as part of PROJ.4 would non-trivially
> bulk up the project.



From knudsen.thomas at gmail.com  Thu Aug 11 23:34:44 2011
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Fri, 12 Aug 2011 08:34:44 +0200
Subject: [Proj] Problem with program on Windows
In-Reply-To: <7427890.12140181313102442515.JavaMail.support.mn@elisanet.fi>
References: <7427890.12140181313102442515.JavaMail.support.mn@elisanet.fi>
Message-ID: <CAH0YoEO+UPQjfLA-5fxcBb9mdJ9G6K2Go-F1WUnHCuXOoVfBug@mail.gmail.com>

2011/8/12 <support.mn at elisanet.fi>

> Frank,
>
> I agree that it would be an additional labor but the Proj.4
> grammar is so easy that it does not take very many lines
> to implement


I somewhat kind of doubt it since, as Frank says, the syntax for some of the
more esoteric projections may be non trivial. And under all circumstances
there will be a lot of special cases (e.g. the zone specifier for utm). For
each individual projection I agree that it may not be a big thing to
implement syntax checking - but there is a lot of projections, and one would
need to understand the specifics of all of them. Actually, as far as I can
see, this amounts to writing "a significant fraction of N" syntax checkers
for the N projections in the library.

If you can see simpler ways to do it, I think you should flesh it out in
code and post a patch: Others may want to join the effort once you have
actually shown how easy it is.

/thomas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110812/30642494/attachment.html>

From support.mn at elisanet.fi  Mon Aug 15 10:02:12 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Mon, 15 Aug 2011 20:02:12 +0300 (EEST)
Subject: [Proj] Proj.4 definition grammar checker,
 was: Re:  Problem with program on Windows
Message-ID: <7852132.8045731313427733434.JavaMail.support.mn@elisanet.fi>

Hello,

Here is how you can make a simple Proj.4 definition grammar
checker in a easy way:

1) First you check the syntax that it is formally correct, which is very
simple since there are only very few types of statements. Here you
can also check that given numbers are formally ok and that they do
not exceed known limits and similar matters.

2) During the syntax check you first figure out what is the current
projection .. there are about 150 or so in Proj.4. Then you just
consult the projection allowable parameter table where all possible
parameters are given for that particular projection and check that the
user is using it as it should be used ... some parameters might be
required, some optional and many illegal.

3) You could later add more and more detailed checking around this
simple code. I would estimate that the preliminary version would not
be very much more than 1000 lines of code. It would be based around
a simple recursive descent parser and a projection allowable parameter
table (with one row for each projection - about 150 rows and maybe
about 50 columns for different parameters) .... or somthing similar.

It is easy to implement and would remove most of the "beginner"
errors and greatly improve the quality of the data. At least it would
greatly help me for example since even I don't know what is required,
allowed or illegal with all projections. (So better let the computer
to take care of that). The table could also be used by an other small
program which would automatically list out all the current projections
and how to use their parameters. That printout would then be the
current definition of the Proj.4 projection-datum definition language.

Regards: Janne.

---------------------------------------------------

Thomas Knudsen [knudsen.thomas at gmail.com] kirjoitti: 
> I somewhat kind of doubt it since, as Frank says, the syntax for some of the
> more esoteric projections may be non trivial. And under all circumstances
> there will be a lot of special cases (e.g. the zone specifier for utm). For
> each individual projection I agree that it may not be a big thing to
> implement syntax checking - but there is a lot of projections, and one would
> need to understand the specifics of all of them. Actually, as far as I can
> see, this amounts to writing "a significant fraction of N" syntax checkers
> for the N projections in the library.
> 
> If you can see simpler ways to do it, I think you should flesh it out in
> code and post a patch: Others may want to join the effort once you have
> actually shown how easy it is.
> 



From mathewfoxx at gmail.com  Tue Aug 16 12:33:12 2011
From: mathewfoxx at gmail.com (Mathew Fox)
Date: Tue, 16 Aug 2011 15:33:12 -0400
Subject: [Proj] setting lambert conformal conic projection in gdalwarp
Message-ID: <CALS9urR8cLAuJrLkYdBSKsh8uk6dCx51ob85RO5vrpH21QL1Yg@mail.gmail.com>

Hi all,

I am having problems with the Lambert Conformal Conic projection.

I am trying to convert an LCC file into UTM:

gdalwarp -of GTiff -s_srs '+proj=lcc +lat_1=0 +lat_2=0 +lat_0=50  +lon_0=0
+x_0=0 +y_0=0 +units=m +no_defs' -t_srs '+proj=UTM +zone=18 +units=m
+datum=NAD83 +no_defs' cols.asc cols.tif

I got the parameters from an existing LCC file.

Problem is, when I try to set this projection to my file I get an error
about the projection parameters.
ERROR 6: Failed to initialize PROJ.4 with `+proj=lcc +lat_1=0 +lat_2=0
+lat_0=50 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs '.
conic lat_1 = -lat_2

Thank you in advance for any suggestions.

Matt.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110816/97775b02/attachment.html>

From jagoncal at gmail.com  Tue Aug 16 15:28:20 2011
From: jagoncal at gmail.com (=?ISO-8859-1?Q?Jose_Gon=E7alves?=)
Date: Tue, 16 Aug 2011 23:28:20 +0100
Subject: [Proj] setting lambert conformal conic projection in gdalwarp
In-Reply-To: <CALS9urR8cLAuJrLkYdBSKsh8uk6dCx51ob85RO5vrpH21QL1Yg@mail.gmail.com>
References: <CALS9urR8cLAuJrLkYdBSKsh8uk6dCx51ob85RO5vrpH21QL1Yg@mail.gmail.com>
Message-ID: <CALHLaOQc-i8z5dpik0qPboDbFX-SFXEzOTwHveVT_0HDDKt61A@mail.gmail.com>

Matt

There is a problem with the lcc projection. The two latitudes +lat_1 and
+lat_2 define the standard parallels, where the cone intersects the
ellipsoid. They can't be both zero (the cone would degenerate into a
cylinder).

There are two more possible problems.
In the source coordinate system there is no ellipsoid definition. It seems
that gdalwarp is assuming to be WGS84.
In the output system you have UTM in uppercase. The proj standard is
lowercase.

Regards

José


2011/8/16 Mathew Fox <mathewfoxx at gmail.com>

> Hi all,
>
> I am having problems with the Lambert Conformal Conic projection.
>
> I am trying to convert an LCC file into UTM:
>
> gdalwarp -of GTiff -s_srs '+proj=lcc +lat_1=0 +lat_2=0 +lat_0=50  +lon_0=0
> +x_0=0 +y_0=0 +units=m +no_defs' -t_srs '+proj=UTM +zone=18 +units=m
> +datum=NAD83 +no_defs' cols.asc cols.tif
>
> I got the parameters from an existing LCC file.
>
> Problem is, when I try to set this projection to my file I get an error
> about the projection parameters.
> ERROR 6: Failed to initialize PROJ.4 with `+proj=lcc +lat_1=0 +lat_2=0
> +lat_0=50 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs '.
> conic lat_1 = -lat_2
>
> Thank you in advance for any suggestions.
>
> Matt.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110816/a277150d/attachment.html>

From charles.karney at sri.com  Tue Aug 16 17:26:13 2011
From: charles.karney at sri.com (Charles Karney)
Date: Tue, 16 Aug 2011 20:26:13 -0400
Subject: [Proj] setting lambert conformal conic projection in gdalwarp
In-Reply-To: <CALHLaOQc-i8z5dpik0qPboDbFX-SFXEzOTwHveVT_0HDDKt61A@mail.gmail.com>
References: <CALS9urR8cLAuJrLkYdBSKsh8uk6dCx51ob85RO5vrpH21QL1Yg@mail.gmail.com>
	<CALHLaOQc-i8z5dpik0qPboDbFX-SFXEzOTwHveVT_0HDDKt61A@mail.gmail.com>
Message-ID: <4E4B0AA5.8080702@sri.com>

On 08/16/11 18:28, Jose Gonçalves wrote:
> Matt
>
> There is a problem with the lcc projection. The two latitudes +lat_1 and
> +lat_2 define the standard parallels, where the cone intersects the
> ellipsoid. They can't be both zero (the cone would degenerate into a
> cylinder).

Of course, they *can* both be zero and the equations then become those
of the Mercator projection.  It's just that the authors of proj.4 chose
not to handle this case.

   --Charles



From al001 at uni-koeln.de  Wed Aug 17 01:43:55 2011
From: al001 at uni-koeln.de (Irwin Scollar)
Date: Wed, 17 Aug 2011 10:43:55 +0200
Subject: [Proj] Krovak again
Message-ID: <201108170906.p7H96ojM031462@smtp-auth.uni-koeln.de>

The Czech GeoPortal site:

http://geoportal.cuzk.cz  (COSMC)

shows positive coordinates (Krovak) increasing to the south and the 
west when the mouse cursor is moved over a map or an orthophoto.

A map area centered on Prague on the COSMC site automatically shows 
the bounding box coordinates as negative numbers in the search field 
of the web browser.

http://geoportal.cuzk.cz/cuzk_wmsklient/Default.aspx?CRS=EPSG:102067&variant=ortofoto&BBOX=-826324.245856,-1224934.494271,-713435.417927,-1140267.873324

The national Inspire Czech Geoportal site shows negative values 
increasing to the south and west in the lower left corner on mouse movement.

http://geoportal.gov.cz/web/guest

Which Krovak variant shown in OGP Publication 373-7.2 p 25ff is 
involved here or is this yet another variant?

What is EPSG 102067?  It's not in the EPSG database.

Irwin Scollar



From Mikael.Rittri at carmenta.com  Wed Aug 17 03:40:52 2011
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 17 Aug 2011 10:40:52 +0000
Subject: [Proj] Krovak again
In-Reply-To: <201108170906.p7H96ojM031462@smtp-auth.uni-koeln.de>
References: <201108170906.p7H96ojM031462@smtp-auth.uni-koeln.de>
Message-ID: <E4AB3DD44D22854B819908379DE4AD4938863171@SETHNWS023.carmenta.se>

Hello Irwin.

> What is EPSG 102067?  It's not in the EPSG database. 

True, there is no such thing as EPSG:102067. Someone must
have meant ESRI:102067, which is called Krovak East North.

http://spatialreference.org/ref/esri/102067/

There are basically two families of Czech-and-Slovakian
Krovak instances.  

  * In the "classical" ones, for example S-JTSK / Krovak (EPSG:5513), 
    the first axis (X) goes south, and the second axis Y goes west.

  * In the "GIS" variants, for example ESRI:102067, the
    axes go east and north, which is necessary in many 
    GIS systems. They should have the phrase "East North"
    in their name. 

A property they all share is that the grid origin 
(where both projected coordinates are zero) is at the 
oblique cone apex between Helsinki and Tallinn,
northeast of Czech-and-Slovakia.    

This means that in the "classical" (South West) variants,
all projected coordinates are positive in Czech-and-Slovakia,
but in the GIS variants, they are negative there. 

You wrote:

> The national Inspire Czech Geoportal site shows 
> negative values increasing to the south and west

I don't understand that. So I hope that when you say 
"negative values increasing" to the south and west, 
you mean that the values become _more_ negative, 
that is: the values decrease, but their absolute 
values increase, towards south and west.

It took many years for EPSG to add GIS-Krovak variants,
so the ESRI codes for some Krovak variants have become 
popular: 

   ESRI:102065, S-JTSK Krovak
   ESRI:102066, S-JTSK Ferro Krovak East North
   ESRI:102067, S-JTSK Krovak East North

These are equivalent, as far as I know, to the recent EPSG entries

   EPSG:5513, S-JTSK / Krovak
   EPSG:5221, S-JTSK (Ferro) / Krovak East North
   EPSG:5514, S-JTSK / Krovak East North

respectively. Then, you have also the oldest variant

   EPSG:2065, S-JTSK (Ferro) / Krovak.

Furthermore, Czech authorities have introduced a modified 
version of the S-JTSK datum, which is called S-JTSK/05. 
With this modified datum, you must use a "Modified Krovak" 
projection, which somehow compensates for distortions in 
the datum realisation (I don't understand the design or purpose,
but I believe the modifications do not change coordinates 
more than about 1 meter). There are four EPSG entries based 
on S-JTSK/05: 
    EPSG:5224, 5225, 5515 and 5516. 

Best Regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Irwin Scollar
Sent: den 17 augusti 2011 10:44
To: proj at lists.maptools.org
Subject: [Proj] Krovak again

The Czech GeoPortal site:

http://geoportal.cuzk.cz  (COSMC)

shows positive coordinates (Krovak) increasing to the south and the west when the mouse cursor is moved over a map or an orthophoto.

A map area centered on Prague on the COSMC site automatically shows the bounding box coordinates as negative numbers in the search field of the web browser.

http://geoportal.cuzk.cz/cuzk_wmsklient/Default.aspx?CRS=EPSG:102067&variant=ortofoto&BBOX=-826324.245856,-1224934.494271,-713435.417927,-1140267.873324

The national Inspire Czech Geoportal site shows negative values increasing to the south and west in the lower left corner on mouse movement.

http://geoportal.gov.cz/web/guest

Which Krovak variant shown in OGP Publication 373-7.2 p 25ff is involved here or is this yet another variant?

What is EPSG 102067?  It's not in the EPSG database.

Irwin Scollar

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From mathewfoxx at gmail.com  Wed Aug 17 06:16:22 2011
From: mathewfoxx at gmail.com (Mathew Fox)
Date: Wed, 17 Aug 2011 09:16:22 -0400
Subject: [Proj] setting lambert conformal conic projection in gdalwarp
Message-ID: <CALS9urQec6qQmpvMHbr_HCWn+YOFGbFfT9CjTzO8sFBs0ZZMww@mail.gmail.com>

Hi Jose, Charles,

thanks for your input.
Now, what is a reasonable solution for this? Can I use a custom
projection in gdal (parsing the parameters without naming it "lcc")?

Matt.

>* Matt
*>*
*>* There is a problem with the lcc projection. The two latitudes +lat_1 and
*>* +lat_2 define the standard parallels, where the cone intersects the
*>* ellipsoid. They can't be both zero (the cone would degenerate into a
*>* cylinder).
*
Of course, they *can* both be zero and the equations then become those
of the Mercator projection.  It's just that the authors of proj.4 chose
not to handle this case.

   --Charles

Hi all,

I am having problems with the Lambert Conformal Conic projection.

I am trying to convert an LCC file into UTM:

gdalwarp -of GTiff -s_srs '+proj=lcc +lat_1=0 +lat_2=0 +lat_0=50  +lon_0=0
+x_0=0 +y_0=0 +units=m +no_defs' -t_srs '+proj=UTM +zone=18 +units=m
+datum=NAD83 +no_defs' cols.asc cols.tif

I got the parameters from an existing LCC file.

Problem is, when I try to set this projection to my file I get an error
about the projection parameters.
ERROR 6: Failed to initialize PROJ.4 with `+proj=lcc +lat_1=0 +lat_2=0
+lat_0=50 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs '.
conic lat_1 = -lat_2

Thank you in advance for any suggestions.

Matt.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110817/c117d36c/attachment.html>

From raichev at cs.auckland.ac.nz  Thu Aug 18 15:13:55 2011
From: raichev at cs.auckland.ac.nz (Alex Raichev)
Date: Fri, 19 Aug 2011 10:13:55 +1200
Subject: [Proj] adding the HEALPix projection to Proj4
Message-ID: <CAL0kKZf0Dno-4ozb+YvKfg-LjdX8RGJ8_yevis0PsVB_efkpWw@mail.gmail.com>

Hi all:

I just joined this list. My name is Alex Raichev, and i'm working with
Robert Gibb and Michael Speth of Landcare Research New Zealand on a
GIS project. As part of this project, we would like to add the HEALPix
projection (http://en.wikipedia.org/wiki/Healpix) to Proj4.

Our plan is to implement in Proj4 the spherical HEALPix projection
from the formulas published in

Mark R. Calabretta and Boudewijn F. Roukema, Mapping on the healpix
grid, Monthly Notices of the Royal Astronomical Society 381 (2007),
no. 2, 865–872.

and an ellipsoidal HEALPix projection that is simply the composition
of 1) the standard area preserving projection from an oblate spheroid
to a sphere and 2) the spherical HEALPix projection.

If any of you are working on this already or have any suggestions,
please let me know.

Thanks.
Alex


From Mikael.Rittri at carmenta.com  Mon Aug 22 01:57:44 2011
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 22 Aug 2011 08:57:44 +0000
Subject: [Proj] setting lambert conformal conic projection in gdalwarp
In-Reply-To: <CALS9urQec6qQmpvMHbr_HCWn+YOFGbFfT9CjTzO8sFBs0ZZMww@mail.gmail.com>
References: <CALS9urQec6qQmpvMHbr_HCWn+YOFGbFfT9CjTzO8sFBs0ZZMww@mail.gmail.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD4938863DD0@SETHNWS023.carmenta.se>

Hello Matt,

I think there are many GIS systems, apart from proj.4, 
that don't handle the case where the Lambert cone has
degenerated into a cylinder. So my guess is that there
is something wrong with your metadata.  

Possibly, the intention was to define a Lambert Conformal
Conic with one standard parallel at 50dN. If so, and if 
we assume WGS84, the Proj.4 definition would be

  +proj=lcc +lat_1=50 +lat_0=50 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs

If this is the true coordinate system of your source image,
then "up" in the source image would be roughly northwest (in
UTM zone 18).  

On the other hand, if the metadata really are correct, 
it should be possible to emulate the coordinate system 
by using ordinary Mercator like this:

  +proj=merc +lon_0=0 +x_0=0 +y_0=-6413524.5942 +datum=WGS84 +units=m +no_defs

where the false northing y_0 is chosen so that 
0dE, 50dN will be projected to 0, 0. If this is correct, 
then "up" in the source image should be true north. 

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

________________________________

From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mathew Fox
Sent: den 17 augusti 2011 15:16
To: proj at lists.maptools.org
Subject: [Proj] setting lambert conformal conic projection in gdalwarp


Hi Jose, Charles, 

thanks for your input.
Now, what is a reasonable solution for this? Can I use a custom projection in gdal (parsing the parameters without naming it "lcc")?

Matt.

> Matt

>
> There is a problem with the lcc projection. The two latitudes +lat_1 and
> +lat_2 define the standard parallels, where the cone intersects the
> ellipsoid. They can't be both zero (the cone would degenerate into a

> cylinder).

Of course, they *can* both be zero and the equations then become those
of the Mercator projection.  It's just that the authors of proj.4 chose
not to handle this case.

   --Charles


Hi all,

I am having problems with the Lambert Conformal Conic projection.

I am trying to convert an LCC file into UTM:

gdalwarp -of GTiff -s_srs '+proj=lcc +lat_1=0 +lat_2=0 +lat_0=50  +lon_0=0

+x_0=0 +y_0=0 +units=m +no_defs' -t_srs '+proj=UTM +zone=18 +units=m
+datum=NAD83 +no_defs' cols.asc cols.tif

I got the parameters from an existing LCC file.

Problem is, when I try to set this projection to my file I get an error

about the projection parameters.
ERROR 6: Failed to initialize PROJ.4 with `+proj=lcc +lat_1=0 +lat_2=0
+lat_0=50 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs '.
conic lat_1 = -lat_2

Thank you in advance for any suggestions.


Matt.



From ben at vterrain.org  Tue Aug 23 17:48:44 2011
From: ben at vterrain.org (Ben Discoe)
Date: Tue, 23 Aug 2011 17:48:44 -0700
Subject: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4
Message-ID: <019d01cc61f7$93ee5bf0$bbcb13d0$@org>

Hi folks,

The issues of geocentric CS and vertical CS are distinct, but they are related in an important way: Geocentric coordinates are not very useful to the GIS world unless they can be converted to orthometric ("sea level") heights, which involves a vertical CS.

Currently, the GDAL/OGR/PROJ4 stack has limited support for geocentric & vertical CS, but the limitation of what works and what doesn't is difficult to guess from the documentation.  I'd like to contribute my understanding to date.

GDAL is actually doing quite a lot right, despite some major historical issues it has to deal with.  As far as i can tell:

1. PROJ4 was never meant to handle vertical CS; as described on http://trac.osgeo.org/proj/wiki/VerticalDatums it's a late addition.

2. The EPSG codes are a messy, incomplete patchwork of 2D and 3D coordinate systems, in which vertical CS also seems to be an awkward, late addition.

3. OGC's WKT encoding (and hence OGR's) also wasn't quite designed to handle vertical CS; it can store a VERT_CS node, but that apparently isn't sufficient to actually define the transformation.

Understandably, as a result of the above history, the OGRSpatialReference implementation of VERT_DATUM nodes is somewhat awkward and ad-hoc.

The simplest way to create an OGRSpatialReference with a vertical CS is to use an import function, for example:

A. Working backwards from PROJ4:
  srs.importFromProj4("+proj=longlat +datum=WGS84 +no_defs +geoidgrids=g2009conus.gtx");

or

B. Example of a compound, Paris-based CS from EPSG:
  srs.importFromEPSG(7400);

The first example produces an SRS that works (assuming you have g2009conus.gtx installed on your PROJ_LIB folder).  The WKT has a section that looks like:
    VERT_CS["NAVD88 height",
        VERT_DATUM["North American Vertical Datum 1988",2005,
            EXTENSION["PROJ4_GRIDS","g2009conus.gtx"]],
        AXIS["Up",UP]]	

The PROJ4_GRIDS EXTENSION is what makes PROJ4 work.

The second example will not actually function.  It creates WKT like this:
COMPD_CS["NTF (Paris) + NGF IGN69 height",
    GEOGCS[...],
    VERT_CS["NGF IGN69 height",
        VERT_DATUM["Nivellement General de la France - IGN69",2005,
            AUTHORITY["EPSG","5119"]],
        AXIS["Up",UP],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AUTHORITY["EPSG","5720"]],
    AUTHORITY["EPSG","7400"]]

It lacks a PROJ4_GRIDS, because in the GDAL data file for composite CS, compdcs.csv, the entry is:
   7400,"NTF (Paris) + NGF IGN69 height",4807,5720,1,0

This means the vertical CS is 5720, which appears in vertcs.csv as:
   5720,NGF IGN69 height,5119,Nivellement General de la France - IGN69,9001,1,0,6499,,

Note there is no .gtx file present for 5720.  There are in fact only 3 entries in vertcs.csv which contain a .gtx file, and hence only 3 that will produce valid results:

  3855,EGM2008 geoid height,1027,EGM2008 geoid,9001,1,0,6499,9665,"egm08_25.gtx"
  5703,NAVD88 height,5103,North American Vertical Datum 1988,9001,1,0,6499,9665,"g2003conus.gtx,g2003alaska.gtx,g2003h01.gtx,g2003p01.gtx"
  5773,EGM96 geoid height,5171,EGM96 geoid,9001,1,0,6499,9665,"egm96_15.gtx"

Of those three (3855, 5703, 5773), there is not a single entry in compdcs.csv which uses them.  Hence, no compound CS set by EPSG code will actually work.

The third way to create an OGRSpatialReference with a vertical CS is like this:

  srs4.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
  srs4.SetExtension("VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");

AFAICT, the arguments to SetVertCS() are not a matter of functionality; they can be anything, but it seems good practice to put human-readable descriptions in there, ideally taken from a standard text like vertcs.csv.  (This example is a bit confusing, because the vertical datum is named 1988, but the latest version of it is 2009).  The main purpose of calling SetVertCS is to promote the CS to a compound CS with a VERT_DATUM node.  The next call (SetExtension) can then decorate the VERT_DATUM with the 'extension' to make the SRS actually work, i.e. allow it to exportToProj4 correctly so that OGRCreateCoordinateTransformation will work correctly.

Here is a complete, functional example of converting a geocentric value to a geographic coordinate with orthometric height:	

  OGRSpatialReference srs1, srs2;
  srs1.importFromEPSG(4978);		// 4978 is the EPSG code for geocentric (ECEF)
  srs2.SetWellKnownGeogCS("WGS84");
  srs2.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
  srs2.SetExtension( "VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");

  double x, y, z;
  x = -2691744.9992481042;	// A point on the ellipsoid
  y = -4262401.8609118778;
  z =  3894209.4515372305;

  // ecef -> geoid
  OGRCoordinateTransformation *oct = OGRCreateCoordinateTransformation(&srs1, &srs2);
  oct->Transform(1, &x, &y, &z);
  printf(" lon,lat,height %lf,%lf,%lf\n", x, y, z);

If it works, it prints the correct value:
lon,lat,height -122.272778,37.871667,32.269611

If the VertCS/Extension is omitted, or if PROJ cannot find the .gtx file, or anything else goes wrong, you simply get the ellipsoidal height (close to 0.0).

In conclusion, although the vertical CS support in OGR/PROJ4 is a bit limited (and neither the limitations nor supported cases are documented), it can be made to work.  Hopefully, this email will prove useful as documentation for anyone else needing to do this transformation.

As an aside, this whole discussion is purely about what works in the Open stack; i have absolutely no idea what sort of WKT (COMPD_CS / VERT_CS / VERT_DATUM) would work in the e.g. ESRI universe.

-Ben



From support.mn at elisanet.fi  Wed Aug 24 02:32:06 2011
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Wed, 24 Aug 2011 12:32:06 +0300 (EEST)
Subject: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4
Message-ID: <30954147.8519901314178327157.JavaMail.support.mn@elisanet.fi>

Hello,

What I have noticed is that most GPS sensors disagree about
the geoid (MSL) height but the reference ellipsoid is always the
same between different GPS units (what ever make they might
be). It is also true that GNSS sensor can calculate reference
ellipsoids without any large effort. So I would presume that
the best vertical reference would be some ellipsoid but hardly
any geoid even if there are areas on the earth where the geoid
is well known and calculated.

But sure if you need horizontal datums you also need vertical
datums. The question is more what is the reference? I would
say that it is "towgs84" both horizontal and vertical in proj4.

But even airplanes do not care about that since they use flight
levels and they are always referenced to the current local
pressure and that changes all the time when the weather is
changing.  (All "FL" planes go lower or higher when the pressure
changes)

"A Flight Level (FL) is a standard nominal altitude of an aircraft,
in hundreds of feet. This altitude is calculated from the
International standard pressure datum of 1013.25 hPa
(29.92 inHg), the average sea-level pressure, and therefore
is not necessarily the same as the aircraft's true altitude either
above mean sea level or above ground level." (or any reference
ellipsoid)

http://en.wikipedia.org/wiki/Flight_level

Regards: Janne.

-------------------------------------------------------------------------

Ben Discoe [ben at vterrain.org] kirjoitti: 
> Hi folks,
> 
> The issues of geocentric CS and vertical CS are distinct, but they are related in an important way: Geocentric coordinates are not very useful to the GIS world unless they can be converted to orthometric ("sea level") heights, which involves a vertical CS.
> 
> Currently, the GDAL/OGR/PROJ4 stack has limited support for geocentric & vertical CS, but the limitation of what works and what doesn't is difficult to guess from the documentation.  I'd like to contribute my understanding to date.
> 
> GDAL is actually doing quite a lot right, despite some major historical issues it has to deal with.  As far as i can tell:
> 
> 1. PROJ4 was never meant to handle vertical CS; as described on http://trac.osgeo.org/proj/wiki/VerticalDatums it's a late addition.
> 
> 2. The EPSG codes are a messy, incomplete patchwork of 2D and 3D coordinate systems, in which vertical CS also seems to be an awkward, late addition.
> 
> 3. OGC's WKT encoding (and hence OGR's) also wasn't quite designed to handle vertical CS; it can store a VERT_CS node, but that apparently isn't sufficient to actually define the transformation.
> 
> Understandably, as a result of the above history, the OGRSpatialReference implementation of VERT_DATUM nodes is somewhat awkward and ad-hoc.
> 
> The simplest way to create an OGRSpatialReference with a vertical CS is to use an import function, for example:
> 
> A. Working backwards from PROJ4:
>   srs.importFromProj4("+proj=longlat +datum=WGS84 +no_defs +geoidgrids=g2009conus.gtx");
> 
> or
> 
> B. Example of a compound, Paris-based CS from EPSG:
>   srs.importFromEPSG(7400);
> 
> The first example produces an SRS that works (assuming you have g2009conus.gtx installed on your PROJ_LIB folder).  The WKT has a section that looks like:
>     VERT_CS["NAVD88 height",
>         VERT_DATUM["North American Vertical Datum 1988",2005,
>             EXTENSION["PROJ4_GRIDS","g2009conus.gtx"]],
>         AXIS["Up",UP]]	
> 
> The PROJ4_GRIDS EXTENSION is what makes PROJ4 work.
> 
> The second example will not actually function.  It creates WKT like this:
> COMPD_CS["NTF (Paris) + NGF IGN69 height",
>     GEOGCS[...],
>     VERT_CS["NGF IGN69 height",
>         VERT_DATUM["Nivellement General de la France - IGN69",2005,
>             AUTHORITY["EPSG","5119"]],
>         AXIS["Up",UP],
>         UNIT["metre",1,
>             AUTHORITY["EPSG","9001"]],
>         AUTHORITY["EPSG","5720"]],
>     AUTHORITY["EPSG","7400"]]
> 
> It lacks a PROJ4_GRIDS, because in the GDAL data file for composite CS, compdcs.csv, the entry is:
>    7400,"NTF (Paris) + NGF IGN69 height",4807,5720,1,0
> 
> This means the vertical CS is 5720, which appears in vertcs.csv as:
>    5720,NGF IGN69 height,5119,Nivellement General de la France - IGN69,9001,1,0,6499,,
> 
> Note there is no .gtx file present for 5720.  There are in fact only 3 entries in vertcs.csv which contain a .gtx file, and hence only 3 that will produce valid results:
> 
>   3855,EGM2008 geoid height,1027,EGM2008 geoid,9001,1,0,6499,9665,"egm08_25.gtx"
>   5703,NAVD88 height,5103,North American Vertical Datum 1988,9001,1,0,6499,9665,"g2003conus.gtx,g2003alaska.gtx,g2003h01.gtx,g2003p01.gtx"
>   5773,EGM96 geoid height,5171,EGM96 geoid,9001,1,0,6499,9665,"egm96_15.gtx"
> 
> Of those three (3855, 5703, 5773), there is not a single entry in compdcs.csv which uses them.  Hence, no compound CS set by EPSG code will actually work.
> 
> The third way to create an OGRSpatialReference with a vertical CS is like this:
> 
>   srs4.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
>   srs4.SetExtension("VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");
> 
> AFAICT, the arguments to SetVertCS() are not a matter of functionality; they can be anything, but it seems good practice to put human-readable descriptions in there, ideally taken from a standard text like vertcs.csv.  (This example is a bit confusing, because the vertical datum is named 1988, but the latest version of it is 2009).  The main purpose of calling SetVertCS is to promote the CS to a compound CS with a VERT_DATUM node.  The next call (SetExtension) can then decorate the VERT_DATUM with the 'extension' to make the SRS actually work, i.e. allow it to exportToProj4 correctly so that OGRCreateCoordinateTransformation will work correctly.
> 
> Here is a complete, functional example of converting a geocentric value to a geographic coordinate with orthometric height:	
> 
>   OGRSpatialReference srs1, srs2;
>   srs1.importFromEPSG(4978);		// 4978 is the EPSG code for geocentric (ECEF)
>   srs2.SetWellKnownGeogCS("WGS84");
>   srs2.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
>   srs2.SetExtension( "VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");
> 
>   double x, y, z;
>   x = -2691744.9992481042;	// A point on the ellipsoid
>   y = -4262401.8609118778;
>   z =  3894209.4515372305;
> 
>   // ecef -> geoid
>   OGRCoordinateTransformation *oct = OGRCreateCoordinateTransformation(&srs1, &srs2);
>   oct->Transform(1, &x, &y, &z);
>   printf(" lon,lat,height %lf,%lf,%lf\n", x, y, z);
> 
> If it works, it prints the correct value:
> lon,lat,height -122.272778,37.871667,32.269611
> 
> If the VertCS/Extension is omitted, or if PROJ cannot find the .gtx file, or anything else goes wrong, you simply get the ellipsoidal height (close to 0.0).
> 
> In conclusion, although the vertical CS support in OGR/PROJ4 is a bit limited (and neither the limitations nor supported cases are documented), it can be made to work.  Hopefully, this email will prove useful as documentation for anyone else needing to do this transformation.
> 
> As an aside, this whole discussion is purely about what works in the Open stack; i have absolutely no idea what sort of WKT (COMPD_CS / VERT_CS / VERT_DATUM) would work in the e.g. ESRI universe.
> 
> -Ben
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Wed Aug 24 06:13:36 2011
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 24 Aug 2011 13:13:36 +0000
Subject: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4
In-Reply-To: <019d01cc61f7$93ee5bf0$bbcb13d0$@org>
References: <019d01cc61f7$93ee5bf0$bbcb13d0$@org>
Message-ID: <E4AB3DD44D22854B819908379DE4AD4938864450@SETHNWS023.carmenta.se>

Thanks, Ben, for the information.

We have some customers who need to convert between 
height-above-geoid and height-above-WGS84-ellipsoid, 
but they don't need much accuracy: a couple of 
meters error is okay. My advice has been to use 
some representation of EGM2008, as the most detailed 
global geoid model.

I would like to learn more about the maximal (or typical)
deviation between EGM2008 and other geoid models. For 
Europe, my impression is that most of the national height 
systems differ less than 0.5 m from the common European 
height system EVRF2007 (see "Map Projections for Europe", 
page 101, http://www.ec-gis.org/document.cfm?id=425&db=document ).
A curious exception is a difference of 2.3 m for 
Belgium, which uses (or has used) a height system 
based on mean low tide of some kind, instead of 
mean sea level. I think Ireland has some similar 
height system. 

But I am not sure about the difference between EVRF2007 
and EGM2008. I have looked at a few sample points where 
there was a difference of up to about 0.4 m. I haven't 
found any conversion method between EVRF2007 and EGM2008, 
or any estimate of the differences. Does anyone know?

For the rest of the world, I am even less sure of 
things. I have heard that the true mean sea level 
can differ by a couple of meters from the geoid, 
since mean sea level is not an equipotential surface 
(due to variations in water temperature, salinity, 
and whatever). But since national heights can be 
measured from low tide - or maybe from something else - 
I guess one can expect even larger deviations.  

Regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com 

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Ben Discoe
Sent: den 24 augusti 2011 02:49
To: gdal-dev at lists.osgeo.org; proj at lists.maptools.org
Subject: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4

Hi folks,

The issues of geocentric CS and vertical CS are distinct, but they are related in an important way: Geocentric coordinates are not very useful to the GIS world unless they can be converted to orthometric ("sea level") heights, which involves a vertical CS.

Currently, the GDAL/OGR/PROJ4 stack has limited support for geocentric & vertical CS, but the limitation of what works and what doesn't is difficult to guess from the documentation.  I'd like to contribute my understanding to date.

GDAL is actually doing quite a lot right, despite some major historical issues it has to deal with.  As far as i can tell:

1. PROJ4 was never meant to handle vertical CS; as described on http://trac.osgeo.org/proj/wiki/VerticalDatums it's a late addition.

2. The EPSG codes are a messy, incomplete patchwork of 2D and 3D coordinate systems, in which vertical CS also seems to be an awkward, late addition.

3. OGC's WKT encoding (and hence OGR's) also wasn't quite designed to handle vertical CS; it can store a VERT_CS node, but that apparently isn't sufficient to actually define the transformation.

Understandably, as a result of the above history, the OGRSpatialReference implementation of VERT_DATUM nodes is somewhat awkward and ad-hoc.

The simplest way to create an OGRSpatialReference with a vertical CS is to use an import function, for example:

A. Working backwards from PROJ4:
  srs.importFromProj4("+proj=longlat +datum=WGS84 +no_defs +geoidgrids=g2009conus.gtx");

or

B. Example of a compound, Paris-based CS from EPSG:
  srs.importFromEPSG(7400);

The first example produces an SRS that works (assuming you have g2009conus.gtx installed on your PROJ_LIB folder).  The WKT has a section that looks like:
    VERT_CS["NAVD88 height",
        VERT_DATUM["North American Vertical Datum 1988",2005,
            EXTENSION["PROJ4_GRIDS","g2009conus.gtx"]],
        AXIS["Up",UP]]	

The PROJ4_GRIDS EXTENSION is what makes PROJ4 work.

The second example will not actually function.  It creates WKT like this:
COMPD_CS["NTF (Paris) + NGF IGN69 height",
    GEOGCS[...],
    VERT_CS["NGF IGN69 height",
        VERT_DATUM["Nivellement General de la France - IGN69",2005,
            AUTHORITY["EPSG","5119"]],
        AXIS["Up",UP],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AUTHORITY["EPSG","5720"]],
    AUTHORITY["EPSG","7400"]]

It lacks a PROJ4_GRIDS, because in the GDAL data file for composite CS, compdcs.csv, the entry is:
   7400,"NTF (Paris) + NGF IGN69 height",4807,5720,1,0

This means the vertical CS is 5720, which appears in vertcs.csv as:
   5720,NGF IGN69 height,5119,Nivellement General de la France - IGN69,9001,1,0,6499,,

Note there is no .gtx file present for 5720.  There are in fact only 3 entries in vertcs.csv which contain a .gtx file, and hence only 3 that will produce valid results:

  3855,EGM2008 geoid height,1027,EGM2008 geoid,9001,1,0,6499,9665,"egm08_25.gtx"
  5703,NAVD88 height,5103,North American Vertical Datum 1988,9001,1,0,6499,9665,"g2003conus.gtx,g2003alaska.gtx,g2003h01.gtx,g2003p01.gtx"
  5773,EGM96 geoid height,5171,EGM96 geoid,9001,1,0,6499,9665,"egm96_15.gtx"

Of those three (3855, 5703, 5773), there is not a single entry in compdcs.csv which uses them.  Hence, no compound CS set by EPSG code will actually work.

The third way to create an OGRSpatialReference with a vertical CS is like this:

  srs4.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
  srs4.SetExtension("VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");

AFAICT, the arguments to SetVertCS() are not a matter of functionality; they can be anything, but it seems good practice to put human-readable descriptions in there, ideally taken from a standard text like vertcs.csv.  (This example is a bit confusing, because the vertical datum is named 1988, but the latest version of it is 2009).  The main purpose of calling SetVertCS is to promote the CS to a compound CS with a VERT_DATUM node.  The next call (SetExtension) can then decorate the VERT_DATUM with the 'extension' to make the SRS actually work, i.e. allow it to exportToProj4 correctly so that OGRCreateCoordinateTransformation will work correctly.

Here is a complete, functional example of converting a geocentric value to a geographic coordinate with orthometric height:	

  OGRSpatialReference srs1, srs2;
  srs1.importFromEPSG(4978);		// 4978 is the EPSG code for geocentric (ECEF)
  srs2.SetWellKnownGeogCS("WGS84");
  srs2.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
  srs2.SetExtension( "VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");

  double x, y, z;
  x = -2691744.9992481042;	// A point on the ellipsoid
  y = -4262401.8609118778;
  z =  3894209.4515372305;

  // ecef -> geoid
  OGRCoordinateTransformation *oct = OGRCreateCoordinateTransformation(&srs1, &srs2);
  oct->Transform(1, &x, &y, &z);
  printf(" lon,lat,height %lf,%lf,%lf\n", x, y, z);

If it works, it prints the correct value:
lon,lat,height -122.272778,37.871667,32.269611

If the VertCS/Extension is omitted, or if PROJ cannot find the .gtx file, or anything else goes wrong, you simply get the ellipsoidal height (close to 0.0).

In conclusion, although the vertical CS support in OGR/PROJ4 is a bit limited (and neither the limitations nor supported cases are documented), it can be made to work.  Hopefully, this email will prove useful as documentation for anyone else needing to do this transformation.

As an aside, this whole discussion is purely about what works in the Open stack; i have absolutely no idea what sort of WKT (COMPD_CS / VERT_CS / VERT_DATUM) would work in the e.g. ESRI universe.

-Ben

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From gdt at ir.bbn.com  Wed Aug 24 08:41:40 2011
From: gdt at ir.bbn.com (Greg Troxel)
Date: Wed, 24 Aug 2011 11:41:40 -0400
Subject: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD4938864450@SETHNWS023.carmenta.se>
	(Mikael Rittri's message of "Wed, 24 Aug 2011 13:13:36 +0000")
References: <019d01cc61f7$93ee5bf0$bbcb13d0$@org>
	<E4AB3DD44D22854B819908379DE4AD4938864450@SETHNWS023.carmenta.se>
Message-ID: <rmimxeyn7ez.fsf@fnord.ir.bbn.com>


Mikael Rittri <Mikael.Rittri at carmenta.com> writes:

> We have some customers who need to convert between 
> height-above-geoid and height-above-WGS84-ellipsoid, 
> but they don't need much accuracy: a couple of 
> meters error is okay. My advice has been to use 
> some representation of EGM2008, as the most detailed 
> global geoid model.

That sounds reasonable.

> I would like to learn more about the maximal (or typical)
> deviation between EGM2008 and other geoid models. For 
> Europe, my impression is that most of the national height 
> systems differ less than 0.5 m from the common European 
> height system EVRF2007 (see "Map Projections for Europe", 
> page 101, http://www.ec-gis.org/document.cfm?id=425&db=document ).
> A curious exception is a difference of 2.3 m for 
> Belgium, which uses (or has used) a height system 
> based on mean low tide of some kind, instead of 
> mean sea level. I think Ireland has some similar 
> height system. 

NGS has some podcasts/lectures available about height, and they are well
worth listening to:

  http://www.ngs.noaa.gov/corbin/class_description/NSRS_Modernization_0411.shtml

(and see related items).

One thing that wasn't clear to me at first is that 'geoid model' can
mean several things.  The most straightforward is about the distance of
a particular equipotential above the ellipsoid.  But one can also make a
model that gives the difference between orthometic heights in some datum
and ellipsoid heights.  Such a model implicitly includes distortions in
the vertical datum.  But if what you really want is to obtain orthometic
heights from GPS, that's what you want.

This page lists some of the US geoid models.  Note that if you compare
the values at a point, GEOID09 and EGM2008 will differ not only because
of only GEOID09 matching NAVD88, but because NAD83 ellipsoid heights are
different from WGS84 ellipsoid heights.   That might be the case in
Europe if there is a modern regional datum distinct from ITRF/WGS84.
Near me (42N 71W), GEOID09 is -27.3m and EGM2008 is -28.1m.  But, this
doesn't mean that the models differ by 0.8m -- because the NAVD88 zero
surface is not necessarily the WGS84 geoid.

http://www.ngs.noaa.gov/GEOID/

> But I am not sure about the difference between EVRF2007 
> and EGM2008. I have looked at a few sample points where 
> there was a difference of up to about 0.4 m. I haven't 
> found any conversion method between EVRF2007 and EGM2008, 
> or any estimate of the differences. Does anyone know?

From a quick scan of EVRF2007, it appears that it is conceptually
similar to NAVD88, in that it's based on leveling and has a single fixed
point.  (But it's apparently dynamic height rather than orthometric.)
So a geoid model that relates the EVRF2007 0 height surface to the WGS84
ellipsoid would not necessarily have the same values as EGM2008.

http://www.bkg.bund.de/nn_164706/geodIS/EVRS/EN/EVRF2007/evrf2007__node.html__nnn=true

> For the rest of the world, I am even less sure of 
> things. I have heard that the true mean sea level 
> can differ by a couple of meters from the geoid, 
> since mean sea level is not an equipotential surface 
> (due to variations in water temperature, salinity, 
> and whatever). But since national heights can be 

and persistent/average winds.

> measured from low tide - or maybe from something else - 
> I guess one can expect even larger deviations.  

I think the key question is what people who say they want "height above
geoid" really want.  I would think people that don't have a significant
understanding of geodesy probably want "orthometric height in the same
datum as my other data", which is a reasonable thing to want.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110824/a5ca5b59/attachment.sig>

From ndzinn at comcast.net  Wed Aug 24 08:43:57 2011
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Wed, 24 Aug 2011 10:43:57 -0500
Subject: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD4938864450@SETHNWS023.carmenta.se>
References: <019d01cc61f7$93ee5bf0$bbcb13d0$@org>
	<E4AB3DD44D22854B819908379DE4AD4938864450@SETHNWS023.carmenta.se>
Message-ID: <80CEA685AF2942449E557FFC27D06EF4@NoelHmPC>

Thanks for the EVRF2007 link, Mikael.  I have already thanked Ben for his 
post that charts a path between gravity-based verticals and geocentric 
coordinates (ECEF), which provide geodetically rigorous, scalable 
visualization in 3D without cartographic distortion.  The two (gravity and 
ECEF) are inextricably linked.  It's where geospatial is bound to go and Ben 
is forging a path.

Since my endeavor is a .com and not a .org, I am not adverse to using 
commercial products that speed my work.  At the risk of being off-topic or 
inappropriate, I will say that one of them is Blue Marble Geographic 
Calculator, in which I have no financial interest, and which provides Proj.4 
functionality plus much else at a price.  Blue Marble excels at vertical 
transformations by supporting the following gravity models simply and 
easily:

Australia - AUSGEOID 98, AusGeoid2009
Canadian Vertical Datum CVGD28
Colombia - GEOCOL 04
Denmark - DVR90
France and Corsica - RAC09, RAF09
Great Britain - OSTN02
Iberia - IGM 95, IGG2005
Japan - Japan Height Datum via GSIGEO2005
Local Geodetic Datum Ellipsoid Height
The Netherlands - NLGEO2004
South Africa - SAGEOID2010
United States - NAVD88, NGVD29 via Geoid 96, Geoid 99, Geoid 03, or Geoid 
2009
Worldwide - EGM96, EGM08, OSU91A
Also supports local offset height models for vertical datum transformations

My point is not to tout a commercial product but to reaffirm the thrust of 
Ben's post.  I'd say the .com world is ahead of the .org world in providing 
ease of access to the vertical transformations that are required to bring 
disparate parts of the world into a common, distortion-free reference 
system.

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

-----Original Message----- 
From: Mikael Rittri
Sent: Wednesday, August 24, 2011 8:13 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4

Thanks, Ben, for the information.

We have some customers who need to convert between
height-above-geoid and height-above-WGS84-ellipsoid,
but they don't need much accuracy: a couple of
meters error is okay. My advice has been to use
some representation of EGM2008, as the most detailed
global geoid model.

I would like to learn more about the maximal (or typical)
deviation between EGM2008 and other geoid models. For
Europe, my impression is that most of the national height
systems differ less than 0.5 m from the common European
height system EVRF2007 (see "Map Projections for Europe",
page 101, http://www.ec-gis.org/document.cfm?id=425&db=document ).
A curious exception is a difference of 2.3 m for
Belgium, which uses (or has used) a height system
based on mean low tide of some kind, instead of
mean sea level. I think Ireland has some similar
height system.

But I am not sure about the difference between EVRF2007
and EGM2008. I have looked at a few sample points where
there was a difference of up to about 0.4 m. I haven't
found any conversion method between EVRF2007 and EGM2008,
or any estimate of the differences. Does anyone know?

For the rest of the world, I am even less sure of
things. I have heard that the true mean sea level
can differ by a couple of meters from the geoid,
since mean sea level is not an equipotential surface
(due to variations in water temperature, salinity,
and whatever). But since national heights can be
measured from low tide - or maybe from something else -
I guess one can expect even larger deviations.

Regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org 
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Ben Discoe
Sent: den 24 augusti 2011 02:49
To: gdal-dev at lists.osgeo.org; proj at lists.maptools.org
Subject: [Proj] Vertical and geocentric coordinate support in OGR/PROJ4

Hi folks,

The issues of geocentric CS and vertical CS are distinct, but they are 
related in an important way: Geocentric coordinates are not very useful to 
the GIS world unless they can be converted to orthometric ("sea level") 
heights, which involves a vertical CS.

Currently, the GDAL/OGR/PROJ4 stack has limited support for geocentric & 
vertical CS, but the limitation of what works and what doesn't is difficult 
to guess from the documentation.  I'd like to contribute my understanding to 
date.

GDAL is actually doing quite a lot right, despite some major historical 
issues it has to deal with.  As far as i can tell:

1. PROJ4 was never meant to handle vertical CS; as described on 
http://trac.osgeo.org/proj/wiki/VerticalDatums it's a late addition.

2. The EPSG codes are a messy, incomplete patchwork of 2D and 3D coordinate 
systems, in which vertical CS also seems to be an awkward, late addition.

3. OGC's WKT encoding (and hence OGR's) also wasn't quite designed to handle 
vertical CS; it can store a VERT_CS node, but that apparently isn't 
sufficient to actually define the transformation.

Understandably, as a result of the above history, the OGRSpatialReference 
implementation of VERT_DATUM nodes is somewhat awkward and ad-hoc.

The simplest way to create an OGRSpatialReference with a vertical CS is to 
use an import function, for example:

A. Working backwards from PROJ4:
  srs.importFromProj4("+proj=longlat +datum=WGS84 +no_defs 
+geoidgrids=g2009conus.gtx");

or

B. Example of a compound, Paris-based CS from EPSG:
  srs.importFromEPSG(7400);

The first example produces an SRS that works (assuming you have 
g2009conus.gtx installed on your PROJ_LIB folder).  The WKT has a section 
that looks like:
    VERT_CS["NAVD88 height",
        VERT_DATUM["North American Vertical Datum 1988",2005,
            EXTENSION["PROJ4_GRIDS","g2009conus.gtx"]],
        AXIS["Up",UP]]

The PROJ4_GRIDS EXTENSION is what makes PROJ4 work.

The second example will not actually function.  It creates WKT like this:
COMPD_CS["NTF (Paris) + NGF IGN69 height",
    GEOGCS[...],
    VERT_CS["NGF IGN69 height",
        VERT_DATUM["Nivellement General de la France - IGN69",2005,
            AUTHORITY["EPSG","5119"]],
        AXIS["Up",UP],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AUTHORITY["EPSG","5720"]],
    AUTHORITY["EPSG","7400"]]

It lacks a PROJ4_GRIDS, because in the GDAL data file for composite CS, 
compdcs.csv, the entry is:
   7400,"NTF (Paris) + NGF IGN69 height",4807,5720,1,0

This means the vertical CS is 5720, which appears in vertcs.csv as:
   5720,NGF IGN69 height,5119,Nivellement General de la France - 
IGN69,9001,1,0,6499,,

Note there is no .gtx file present for 5720.  There are in fact only 3 
entries in vertcs.csv which contain a .gtx file, and hence only 3 that will 
produce valid results:

  3855,EGM2008 geoid height,1027,EGM2008 
geoid,9001,1,0,6499,9665,"egm08_25.gtx"
  5703,NAVD88 height,5103,North American Vertical Datum 
1988,9001,1,0,6499,9665,"g2003conus.gtx,g2003alaska.gtx,g2003h01.gtx,g2003p01.gtx"
  5773,EGM96 geoid height,5171,EGM96 geoid,9001,1,0,6499,9665,"egm96_15.gtx"

Of those three (3855, 5703, 5773), there is not a single entry in 
compdcs.csv which uses them.  Hence, no compound CS set by EPSG code will 
actually work.

The third way to create an OGRSpatialReference with a vertical CS is like 
this:

  srs4.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
  srs4.SetExtension("VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");

AFAICT, the arguments to SetVertCS() are not a matter of functionality; they 
can be anything, but it seems good practice to put human-readable 
descriptions in there, ideally taken from a standard text like vertcs.csv. 
(This example is a bit confusing, because the vertical datum is named 1988, 
but the latest version of it is 2009).  The main purpose of calling 
SetVertCS is to promote the CS to a compound CS with a VERT_DATUM node.  The 
next call (SetExtension) can then decorate the VERT_DATUM with the 
'extension' to make the SRS actually work, i.e. allow it to exportToProj4 
correctly so that OGRCreateCoordinateTransformation will work correctly.

Here is a complete, functional example of converting a geocentric value to a 
geographic coordinate with orthometric height:

  OGRSpatialReference srs1, srs2;
  srs1.importFromEPSG(4978); // 4978 is the EPSG code for geocentric (ECEF)
  srs2.SetWellKnownGeogCS("WGS84");
  srs2.SetVertCS("NAVD88 height", "North American Vertical Datum 1988");
  srs2.SetExtension( "VERT_DATUM", "PROJ4_GRIDS", "g2009conus.gtx");

  double x, y, z;
  x = -2691744.9992481042; // A point on the ellipsoid
  y = -4262401.8609118778;
  z =  3894209.4515372305;

  // ecef -> geoid
  OGRCoordinateTransformation *oct = 
OGRCreateCoordinateTransformation(&srs1, &srs2);
  oct->Transform(1, &x, &y, &z);
  printf(" lon,lat,height %lf,%lf,%lf\n", x, y, z);

If it works, it prints the correct value:
lon,lat,height -122.272778,37.871667,32.269611

If the VertCS/Extension is omitted, or if PROJ cannot find the .gtx file, or 
anything else goes wrong, you simply get the ellipsoidal height (close to 
0.0).

In conclusion, although the vertical CS support in OGR/PROJ4 is a bit 
limited (and neither the limitations nor supported cases are documented), it 
can be made to work.  Hopefully, this email will prove useful as 
documentation for anyone else needing to do this transformation.

As an aside, this whole discussion is purely about what works in the Open 
stack; i have absolutely no idea what sort of WKT (COMPD_CS / VERT_CS / 
VERT_DATUM) would work in the e.g. ESRI universe.

-Ben

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj 




From misha at mail.geometrics.com  Thu Aug 25 14:02:20 2011
From: misha at mail.geometrics.com (Mikhail Tchernychev)
Date: Thu, 25 Aug 2011 14:02:20 -0700
Subject: [Proj] ITRF to GDA94 transformation problems - bug in 7 parameters?
In-Reply-To: <BANLkTinCiB6qDSWiPakcKpfi8U-a-Of95g@mail.gmail.com>
References: <BANLkTinYVNj3JZk6fXfit0+3Hi3gjKaEtw@mail.gmail.com>
	<BANLkTinCiB6qDSWiPakcKpfi8U-a-Of95g@mail.gmail.com>
Message-ID: <4E56B85C.2090706@mail.geometrics.com>

   Hello everyone,

I am trying to re-produce transformation described in this document:

http://www.ga.gov.au/image_cache/GA3795.pdf

appendix B, and I am getting errors about 0.11 m

My 
+towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.006859, 
  the same
numbers as in the article.

This is what I get if I use lat / lon -> lat/lon

cs2cs +from -w4  +proj=latlong +datum=WGS84 +to 
+towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.006859 +proj=latlong 
<<EOF
133d53'7.8574"E  23d40'12.4314"S 603.287
EOF


Computed and Correct results:
133d53'7.8454"E    23d40'12.4468"S   603.261
133d53'7.8478"E    23d40'12.4461"S   603.350

I also tried to convert directly geocentric coordinates listed in the 
article. This is what I got:

cs2cs -f "%.3lf" +from  -w4 +proj=geocent +datum=WGS84 +to 
+towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.006859 
+proj=geocent <<EOF
-4052052.048 4212836.105 -2545105.587
EOF

computed and correct result
-4052051.655    4212836.186   -2545106.011
-4052051.765    4212836.205   -2545106.027

I attached script with cs2cs calls, which exhibits the problem.


Help is greatly appreciated,

Thank you
Mikhail


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: gda_test.sh
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110825/d5853800/attachment.ksh>

From martin.desruisseaux at geomatys.fr  Thu Aug 25 14:59:01 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Thu, 25 Aug 2011 23:59:01 +0200
Subject: [Proj] New proposal of JNI bindings for Proj.4
Message-ID: <4E56C5A5.2050500@geomatys.fr>

Hello all

In preparation for the GeoAPI session at the FOSS4G, I wish to provide a GeoAPI 
implementation on top of the C/C++ Proj.4 library as a "proof of concept" that 
GeoAPI can be used for accessing transparently existing libraries. JNI bindings 
already exist <http://svn.osgeo.org/metacrs/proj/trunk/proj/jniwrap/> in Proj.4, 
thanks to Andrea Antonello's work. However I wish to provide the bindings in a 
different way:

  * The current binding expects /x/, /y/ and optionally /z/ ordinate values to
    be provided in 3 separated arrays, while GeoAPI - like Java2D API - expect a
    single array with (/x/,/y/) or (/x/,/y/,/z/) tupples (note that the Proj.4
    C/C++ API allows both forms).
  * The current binding allocates and deallocates the PJ C/C++ structure (which
    implies parsing the Proj.4 parameters) everytime the pj_transform method is
    invoked. I wish a slightly different cycle in which the PJ C/C++structure
    can be allocated once, reused for many calls to pj_transform, and
    deallocated when the Java peer is garbage-collected.


There is also some apparent memory leaks in the C side of current bindings that 
I would like to fix. In addition, I think that the binding code in C should also 
checks argument values (null pointer, index out of bounds) in order to avoid a 
crash if a Java application pass wrongs parameter values.

The Java API proposal can be viewed there. Every methods in this class are 
native methods:

  * http://www.geoapi.org/geoapi-proj4/apidocs/org/proj4/PJ.html


The C side of the JNI bindings (not including the old bindings):

  * https://geoapi.svn.sourceforge.net/svnroot/geoapi/trunk/geoapi-proj4/src/main/native/jniproj.c


So my questions are:

  *

    Do peoples agree to commit those new JNI bindings (without GeoAPI
    dependency) straight into the Proj.4 SVN code base, together with the
    existing bindings? There will be no change in the existing configuration
    that enable/disable compilation of JNI bindings.

  *

    What do we do with existing bindings?

      o Taking some time for fixing the memory leaks and add argument checks?
      o Or deprecate them, suggesting peoples to use the new JNI bindings instead?

I guess that the answer to my last question depends on how widely used are the 
current bindings?

In any case, I want to thanks Andrea Antonello since its current bindings 
provided a very convenient starting point that make very easy for me to try 
alternatives.

     Regards,

         Martin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110825/986d7c5b/attachment.html>

From warmerdam at pobox.com  Thu Aug 25 15:08:44 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 25 Aug 2011 15:08:44 -0700
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E56C5A5.2050500@geomatys.fr>
References: <4E56C5A5.2050500@geomatys.fr>
Message-ID: <CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>

On Thu, Aug 25, 2011 at 2:59 PM, Martin Desruisseaux
<martin.desruisseaux at geomatys.fr> wrote:
> Do peoples agree to commit those new JNI bindings (without GeoAPI
> dependency) straight into the Proj.4 SVN code base, together with the
> existing bindings? There will be no change in the existing configuration
> that enable/disable compilation of JNI bindings.

Martin,

I have no objection to your committing the new bindings,
assuming there is no hue and cry from folks using the old
bindings.  I assume they are not widely used currently.

It is a pity that compatibility with the existing bindings
could not be easily preserved, but I can live with this.

> What do we do with existing bindings?

I think it does not make sense to have two Java
bindings.  I am ok with removing the existing ones
in favor of your changes ones.

Please ensure the Java changes are prominently noted in the
ChangeLog file.   I will try to note it in the release announcement.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer


From EMiller at dfg.ca.gov  Thu Aug 25 16:19:26 2011
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Thu, 25 Aug 2011 16:19:26 -0700
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E56C5A5.2050500@geomatys.fr>
References: <4E56C5A5.2050500@geomatys.fr>
Message-ID: <4E56760E.95FD.00E4.0@dfg.ca.gov>

>>> On 8/25/2011 at 2:59 PM, Martin Desruisseaux <martin.desruisseaux at geomatys.fr>
wrote:
> 
>   * The current binding expects /x/, /y/ and optionally /z/ ordinate values 
> to
>     be provided in 3 separated arrays, while GeoAPI - like Java2D API - expect 
> a
>     single array with (/x/,/y/) or (/x/,/y/,/z/) tupples (note that the 
> Proj.4
>     C/C++ API allows both forms).

Well, GeoAPI will have to translate then, I guess...

>   * The current binding allocates and deallocates the PJ C/C++ structure 
> (which
>     implies parsing the Proj.4 parameters) everytime the pj_transform method 
> is
>     invoked. I wish a slightly different cycle in which the PJ 
> C/C++structure
>     can be allocated once, reused for many calls to pj_transform, and
>     deallocated when the Java peer is garbage-collected.

When I wrote a .Net wrapper, I created a class that manages the lifetimes of the native PJ* resources and provided simple coordinate transform methods.  So, you could call the transform as many times as you want.  It implemented the .Net IDisposable interface for resource cleanup.  I don't know if Java has anything similar.  You can wait 'til garbage collection, but that can be awhile.  The overhead of recreating the PJ* structures isn't very high.

> There is also some apparent memory leaks in the C side of current bindings 
> that 
> I would like to fix. In addition, I think that the binding code in C should 
> also 
> checks argument values (null pointer, index out of bounds) in order to avoid 
> a 
> crash if a Java application pass wrongs parameter values.

In my experience, the thread resource issues with files and grids was the biggest issue.  If you can find memory leaks, they should be reported and fixed.

I had a good laugh about the C code doing array bounds checking.  Really, if you're wrapping a native library, you should be doing some argument validation before passing it along.
 

-- 

Eric G. Miller
Staff Programmer
CA Dept. of Fish & Game





From martin.desruisseaux at geomatys.fr  Thu Aug 25 17:34:19 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Fri, 26 Aug 2011 02:34:19 +0200
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>
References: <4E56C5A5.2050500@geomatys.fr>
	<CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>
Message-ID: <4E56EA0B.1060704@geomatys.fr>

Hello Frank

Le 26/08/11 00:08, Frank Warmerdam a écrit :
> It is a pity that compatibility with the existing bindings could not be easily 
> preserved, but I can live with this.
Actually it can be easily preserved as a duplicated API (providing we do the 
small effort of fixing memory leaks and adding safety checks). The question is 
rather: do we want a duplicated API (which may cause some confusion)? It is more 
a "clarity" than a technical issue.

The reason is that the way arguments are organized in the previous "transform" 
method is different than the way arguments are organized in Java2D or GeoAPI, 
and translating between the two ways would force users to copy the entire 
coordinate arrays.


> What do we do with existing bindings?
> I think it does not make sense to have two Java
> bindings.  I am ok with removing the existing ones
> in favor of your changes ones.
>
> Please ensure the Java changes are prominently noted in the
> ChangeLog file.   I will try to note it in the release announcement.

If peoples are okay with that, I will do.

We can also just mark the previous binding as "deprecated" and wait one release 
cycle before to remove them. This leave more time for user feedbacks.

     Martin



From martin.desruisseaux at geomatys.fr  Thu Aug 25 18:05:54 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Fri, 26 Aug 2011 03:05:54 +0200
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E56760E.95FD.00E4.0@dfg.ca.gov>
References: <4E56C5A5.2050500@geomatys.fr> <4E56760E.95FD.00E4.0@dfg.ca.gov>
Message-ID: <4E56F172.5030706@geomatys.fr>

Hello Eric

Le 26/08/11 01:19, Eric Miller a écrit :
>>    * The current binding expects x,y and optionally z ordinate values to
>>      be provided in 3 separated arrays, while GeoAPI - like Java2D API - expect a
>>      single array with (x,y) or (x,y,z) tupples (note that the Proj.4
>>      C/C++ API allows both forms).
>>
>> Well, GeoAPI will have to translate then, I guess...
Actually, we just need to invoke pj_transform(...) with the x=array, y=array+1, 
z=array+2 and point_offset=3. There is no need to copy any coordinate values.

>>    * The current binding allocates and deallocates the PJ C/C++ structure (which
>>      implies parsing the Proj.4 parameters) everytime the pj_transform method is
>>      invoked. I wish a slightly different cycle in which the PJ C/C++structure
>>      can be allocated once, reused for many calls to pj_transform, and
>>      deallocated when the Java peer is garbage-collected.
> When I wrote a .Net wrapper, I created a class that manages the lifetimes of the native PJ* resources and provided simple coordinate transform methods.  So, you could call the transform as many times as you want.  It implemented the .Net IDisposable interface for resource cleanup.  I don't know if Java has anything similar.  You can wait 'til garbage collection, but that can be awhile.
Yes, Java also have something similar. The reason why I choose to not put a 
dispose() method in that class is because typical GIS applications have a few 
Coordinate Reference System (CRS) objects shared by thousands of geometries (or 
rasters, etc.).  It can be difficult to determine when a CRS can be disposed, 
and doing it wrong can be dangerous. The users would need to ensure that the CRS 
is not used anymore by any other object... which is precisely the garbage 
collector job.

For applications dealing with only a few CRS, I think that the delay before PJ 
objects are garbage-collected will have unoticeable effect.

> In my experience, the thread resource issues with files and grids was the biggest issue.  If you can find memory leaks, they should be reported and fixed.
The memory leaks were in the JNI bindings. I don't think that the C library 
itself was impacted. This leak was occurring every time the pj_transform method 
was invoked though JNI, which may occur often.


> I had a good laugh about the C code doing array bounds checking.  Really, if you're wrapping a native library, you should be doing some argument validation before passing it along.
This is true that array bound checkings is not part of C/C++ tradition. However 
the JNI bindings are just a facade for Java applications - ignored by C/C++ 
applications -, and array bound checkings are part of Java tradition. As a rule, 
it should be impossible (in theory) for a user to crash the Java Virtual Machine 
even if he misuses a method. The fact that the method is native rather than pure 
Java is invisible from an API point of view (this details does not appear in the 
generated javadoc), so the user expects those methods to behave like any 
ordinary Java method.

Regards,

     Martin



From Mikael.Rittri at carmenta.com  Fri Aug 26 00:45:41 2011
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Fri, 26 Aug 2011 07:45:41 +0000
Subject: [Proj] ITRF to GDA94 transformation problems - bug in 7
 parameters?
In-Reply-To: <4E56B85C.2090706@mail.geometrics.com>
References: <BANLkTinYVNj3JZk6fXfit0+3Hi3gjKaEtw@mail.gmail.com>
	<BANLkTinCiB6qDSWiPakcKpfi8U-a-Of95g@mail.gmail.com>
	<4E56B85C.2090706@mail.geometrics.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD4938864BA5@SETHNWS023.carmenta.se>

Hello Mikhail,
you wrote

> I am trying to re-produce transformation described in this document:
> 
> http://www.ga.gov.au/image_cache/GA3795.pdf
> 
> appendix B, and I am getting errors about 0.11 m
> My 
> +towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.006859,
> the same numbers as in the article.

You have made two subtle errors that nearly cancel each other, but not quite.

A) There are two sign conventions for the three rotations. The document 
uses Coordinate Frame Rotation (according to sections 2 and 3), but cs2cs 
uses the opposite Position Vector Transformation.  So with cs2cs you should
negate the rotations, and use 

+towgs84=-0.054100,-0.019100,0.009600,-0.010833,-0.010703,-0.011403,0.006859

instead. (But wait, I am not done yet!)

B) In the document, transformation goes in the direction 
from ITRF2000 to GDA94. With cs2cs, if you want to regard
ITRF2000 as equivalent to +datum=WGS84, then to model GDA94,
you need +towgs84 parameters that implement the opposite 
direction: from GDA94 to ITRF2000. To do this, you negate 
all parameters from A), and get 

+towgs84=0.054100,0.019100,-0.009600,0.010833,0.010703,0.011403,-0.006859

instead. (Now I am done.)

With the parameters from B), I can reproduce the results of the document by doing

cs2cs +from -w4 +proj=latlong +datum=WGS84 +to +towgs84=0.054100,0.019100,-0.009600,0.010833,0.010703,0.011403,-0.006859 +proj=latlong

input:

133d53'7.8574"E  23d40'12.4314"S 603.287

output:

133d53'7.8478"E 23d40'12.4461"S 603.350

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikhail Tchernychev
Sent: den 25 augusti 2011 23:02
To: PROJ.4 and general Projections Discussions
Subject: [Proj] ITRF to GDA94 transformation problems - bug in 7 parameters?

   Hello everyone,

I am trying to re-produce transformation described in this document:

http://www.ga.gov.au/image_cache/GA3795.pdf

appendix B, and I am getting errors about 0.11 m

My 
+towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.00685
+9,
  the same
numbers as in the article.

This is what I get if I use lat / lon -> lat/lon

cs2cs +from -w4  +proj=latlong +datum=WGS84 +to 
+towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.00685
+9 +proj=latlong
<<EOF
133d53'7.8574"E  23d40'12.4314"S 603.287 EOF


Computed and Correct results:
133d53'7.8454"E    23d40'12.4468"S   603.261
133d53'7.8478"E    23d40'12.4461"S   603.350

I also tried to convert directly geocentric coordinates listed in the article. This is what I got:

cs2cs -f "%.3lf" +from  -w4 +proj=geocent +datum=WGS84 +to 
+towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.00685
+9
+proj=geocent <<EOF
-4052052.048 4212836.105 -2545105.587
EOF

computed and correct result
-4052051.655    4212836.186   -2545106.011
-4052051.765    4212836.205   -2545106.027

I attached script with cs2cs calls, which exhibits the problem.


Help is greatly appreciated,

Thank you
Mikhail




From misha at mail.geometrics.com  Fri Aug 26 09:53:57 2011
From: misha at mail.geometrics.com (Mikhail Tchernychev)
Date: Fri, 26 Aug 2011 09:53:57 -0700
Subject: [Proj] ITRF to GDA94 transformation problems - bug in 7
	parameters?
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD4938864BA5@SETHNWS023.carmenta.se>
References: <BANLkTinYVNj3JZk6fXfit0+3Hi3gjKaEtw@mail.gmail.com>	<BANLkTinCiB6qDSWiPakcKpfi8U-a-Of95g@mail.gmail.com>
	<4E56B85C.2090706@mail.geometrics.com>
	<E4AB3DD44D22854B819908379DE4AD4938864BA5@SETHNWS023.carmenta.se>
Message-ID: <4E57CFA5.1080000@mail.geometrics.com>

  Hello Mikael,

Thank you very much for your explanation!  I was puzzled with this 
problem for almost a year,
and I did try changing rotation signs, but I did not know that all signs 
needs to be reversed.
Now everything makes sense.

BTW, there is also ugly bug in my shell script (+towgs84 not properly 
defined)

Thanks again for providing this great answer to the list,

Best Regards
Mikhail

On 8/26/2011 12:45 AM, Mikael Rittri wrote:
> Hello Mikhail,
> you wrote
>
>> I am trying to re-produce transformation described in this document:
>>
>> http://www.ga.gov.au/image_cache/GA3795.pdf
>>
>> appendix B, and I am getting errors about 0.11 m
>> My
>> +towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.006859,
>> the same numbers as in the article.
> You have made two subtle errors that nearly cancel each other, but not quite.
>
> A) There are two sign conventions for the three rotations. The document
> uses Coordinate Frame Rotation (according to sections 2 and 3), but cs2cs
> uses the opposite Position Vector Transformation.  So with cs2cs you should
> negate the rotations, and use
>
> +towgs84=-0.054100,-0.019100,0.009600,-0.010833,-0.010703,-0.011403,0.006859
>
> instead. (But wait, I am not done yet!)
>
> B) In the document, transformation goes in the direction
> from ITRF2000 to GDA94. With cs2cs, if you want to regard
> ITRF2000 as equivalent to +datum=WGS84, then to model GDA94,
> you need +towgs84 parameters that implement the opposite
> direction: from GDA94 to ITRF2000. To do this, you negate
> all parameters from A), and get
>
> +towgs84=0.054100,0.019100,-0.009600,0.010833,0.010703,0.011403,-0.006859
>
> instead. (Now I am done.)
>
> With the parameters from B), I can reproduce the results of the document by doing
>
> cs2cs +from -w4 +proj=latlong +datum=WGS84 +to +towgs84=0.054100,0.019100,-0.009600,0.010833,0.010703,0.011403,-0.006859 +proj=latlong
>
> input:
>
> 133d53'7.8574"E  23d40'12.4314"S 603.287
>
> output:
>
> 133d53'7.8478"E 23d40'12.4461"S 603.350
>
> Best regards,
>
> Mikael Rittri
> Carmenta
> Sweden
> http://www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikhail Tchernychev
> Sent: den 25 augusti 2011 23:02
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] ITRF to GDA94 transformation problems - bug in 7 parameters?
>
>     Hello everyone,
>
> I am trying to re-produce transformation described in this document:
>
> http://www.ga.gov.au/image_cache/GA3795.pdf
>
> appendix B, and I am getting errors about 0.11 m
>
> My
> +towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.00685
> +9,
>    the same
> numbers as in the article.
>
> This is what I get if I use lat / lon ->  lat/lon
>
> cs2cs +from -w4  +proj=latlong +datum=WGS84 +to
> +towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.00685
> +9 +proj=latlong
> <<EOF
> 133d53'7.8574"E  23d40'12.4314"S 603.287 EOF
>
>
> Computed and Correct results:
> 133d53'7.8454"E    23d40'12.4468"S   603.261
> 133d53'7.8478"E    23d40'12.4461"S   603.350
>
> I also tried to convert directly geocentric coordinates listed in the article. This is what I got:
>
> cs2cs -f "%.3lf" +from  -w4 +proj=geocent +datum=WGS84 +to
> +towgs84=-0.054100,-0.019100,0.009600,0.010833,0.010703,0.011403,0.00685
> +9
> +proj=geocent<<EOF
> -4052052.048 4212836.105 -2545105.587
> EOF
>
> computed and correct result
> -4052051.655    4212836.186   -2545106.011
> -4052051.765    4212836.205   -2545106.027
>
> I attached script with cs2cs calls, which exhibits the problem.
>
>
> Help is greatly appreciated,
>
> Thank you
> Mikhail
>
>



From martin.desruisseaux at geomatys.fr  Sat Aug 27 09:22:27 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Sat, 27 Aug 2011 18:22:27 +0200
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>
References: <4E56C5A5.2050500@geomatys.fr>
	<CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>
Message-ID: <4E5919C3.7010806@geomatys.fr>

I have just done my first commit on 
http://svn.osgeo.org/metacrs/proj/trunk/proj/src/jniproj.c

On the memory leak issue, I applied only the trivial fix. I documented the other 
issues (without fixing them) for historical records.

I will wait a little bit before to commit the new JNI bindings in replacement to 
the existing ones, in case I did something wrong with this first commit or 
someone object to the replacement.

On a related note, I attached to this email a patch for minor typos I found by 
accident. Because they in C files outside the JNI bindings, I prefer to not 
touch them without permission.

     Regards,

         Martin

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: typo.patch
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110827/a39fcf89/attachment.ksh>

From warmerdam at pobox.com  Sat Aug 27 09:41:35 2011
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sat, 27 Aug 2011 09:41:35 -0700
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E5919C3.7010806@geomatys.fr>
References: <4E56C5A5.2050500@geomatys.fr>
	<CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>
	<4E5919C3.7010806@geomatys.fr>
Message-ID: <4E591E3F.6030709@pobox.com>

On 11-08-27 09:22 AM, Martin Desruisseaux wrote:
> I have just done my first commit on
> http://svn.osgeo.org/metacrs/proj/trunk/proj/src/jniproj.c
>
> On the memory leak issue, I applied only the trivial fix. I documented the
> other issues (without fixing them) for historical records.
>
> I will wait a little bit before to commit the new JNI bindings in replacement
> to the existing ones, in case I did something wrong with this first commit or
> someone object to the replacement.

Martin,

 From my point of view you should go ahead.  Please also update the
ChangeLog file to mention your fixes to the old bindings and additions
as you apply them.

> On a related note, I attached to this email a patch for minor typos I found by
> accident. Because they in C files outside the JNI bindings, I prefer to not
> touch them without permission.

Applied.  Don't hesitate to make changes elsewhere that are low risk
like this.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From martin.desruisseaux at geomatys.fr  Sat Aug 27 11:50:13 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Sat, 27 Aug 2011 20:50:13 +0200
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E591E3F.6030709@pobox.com>
References: <4E56C5A5.2050500@geomatys.fr>
	<CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>
	<4E5919C3.7010806@geomatys.fr> <4E591E3F.6030709@pobox.com>
Message-ID: <4E593C65.2070802@geomatys.fr>

Le 27/08/11 18:41, Frank Warmerdam a écrit :
>  From my point of view you should go ahead.  Please also update the
> ChangeLog file to mention your fixes to the old bindings and additions
> as you apply them.

Thanks. I will process in two steps. I just commited the new C code and 3 new 
Java files, keeping the previous C code and Java classes unchanged. In the next 
commit (tentatively tomorrow), I will update the previous Java classes. Finally 
I will edit the change log when I will be done.

Please let me know if there is any issue with the new C code in jniproj.c.

     Martin



From martin.desruisseaux at geomatys.fr  Sat Aug 27 14:32:02 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Sat, 27 Aug 2011 23:32:02 +0200
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E593C65.2070802@geomatys.fr>
References: <4E56C5A5.2050500@geomatys.fr>
	<CA+YzLBdBuXxv2YJ3tBMZS8o2LteC+E4XLA0KA3t8TRUWLJA_5w@mail.gmail.com>
	<4E5919C3.7010806@geomatys.fr> <4E591E3F.6030709@pobox.com>
	<4E593C65.2070802@geomatys.fr>
Message-ID: <4E596252.30308@geomatys.fr>

Hello all

An example of Proj.4 usage in Java has been documented there:

http://www.geoapi.org/geoapi-proj4/index.html

Only the first example is relevant to Proj.4. The second example is an 
abstraction level on top of it.

As a side note, GeoAPI provides a "conformance" module which can be used for 
testing arbitrary implementations of GeoAPI interfaces. Every points used for 
those tests come from documented sources like EPSG or national mapping agencies 
(see for example 
http://www.geoapi.org/geoapi-conformance/apidocs/org/opengis/test/referencing/ParameterizedTransformTest.html#testMercator1SP%28%29). 
I have run those tests on Proj.4 and got the expected results with centimetric 
precision, except:

   * Cassini-Soldner for which I had to relax the tolerance threshold to 2 metres
     (note: this is the same in Geotoolkit.org, which is derived from Proj.4 code
     anyway)

   * EPSG:31300 (Belge 1972 / Belge Lambert 72) which seems to be 745 km away
     in Easting compared to the example point given by the EPSG database. I don't
     know if the error come from my misunderstanding of Proj.4 (I get the expected
     result with Geotoolkit.org). Steps to verify in the EPSG database:
       - Go to http://www.epsg-registry.org/
       - Click on "Retrieve by code", enter 9803
       - Select the " Lambert Conic Conformal (2SP Belgium)" method
       - Click on "Example" on the bottom right side.

     Regards,

         Martin



From martin.desruisseaux at geomatys.fr  Sun Aug 28 06:48:25 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Sun, 28 Aug 2011 15:48:25 +0200
Subject: [Proj] Axis order for CRS created from EPSG code
Message-ID: <4E5A4729.1060200@geomatys.fr>

Hello all

Currently, building a Proj.4 PJ structure from a definition string like 
"+init=epsg:4326" produces a CRS with (/longitude/,/latitude/) axis order. Using 
the "+init=epsg:4326 +axis=neu" definition string produce the 
(/latitude/,/longitude/) axis order expected by EPSG. I would like to know what 
are the plan for the 4.8 release: do you plan to provide some way to build a CRS 
including the "+axis=neu" part from an EPSG code, or is it left to the user?

It is not a request for change, this is just for knowing if users (or 
geoapi-wrappers) shall handle the axis order parameter on their side or if 
Proj.4 plans to take care of that.

     Regards,

         Martin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110828/e0224a45/attachment.html>

From EMiller at dfg.ca.gov  Mon Aug 29 08:41:21 2011
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Mon, 29 Aug 2011 08:41:21 -0700
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E56F172.5030706@geomatys.fr>
References: <4E56C5A5.2050500@geomatys.fr>
	<4E56760E.95FD.00E4.0@dfg.ca.gov> <4E56F172.5030706@geomatys.fr>
Message-ID: <4E5B50B1.95FD.00E4.0@dfg.ca.gov>

>>> On 8/25/2011 at 6:05 PM, Martin Desruisseaux
<martin.desruisseaux at geomatys.fr>
wrote:
> Le 26/08/11 01:19, Eric Miller a écrit :
>> I had a good laugh about the C code doing array bounds checking. 
Really, if 
> you're wrapping a native library, you should be doing some argument 
> validation before passing it along.
> This is true that array bound checkings is not part of C/C++
tradition. 
> However 
> the JNI bindings are just a facade for Java applications - ignored by
C/C++ 
> applications -, and array bound checkings are part of Java tradition.
As a 
> rule, 
> it should be impossible (in theory) for a user to crash the Java
Virtual 
> Machine 
> even if he misuses a method. The fact that the method is native
rather than 
> pure 
> Java is invisible from an API point of view (this details does not
appear in 
> the 
> generated javadoc), so the user expects those methods to behave like
any 
> ordinary Java method.

It's not so much an issue of "tradition" as the ANSI C language has no
mechanism to determine an array's length at runtime.  So, in C, you can
check that the pointer is not NULL, and you can check that the array
size parameter is not negative.  However, you cannot verify that the
size parameter is actually correct.  If you could, you wouldn't need it.
 But, what is the correct behavior if a pointer argument is null or an
array size is negative?  Call abort()?  Would that still crash the JVM?
-- 

Eric G. Miller
Staff Programmer
CA Dept. of Fish & Game




From martin.desruisseaux at geomatys.fr  Mon Aug 29 09:04:13 2011
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Mon, 29 Aug 2011 18:04:13 +0200
Subject: [Proj] New proposal of JNI bindings for Proj.4
In-Reply-To: <4E5B50B1.95FD.00E4.0@dfg.ca.gov>
References: <4E56C5A5.2050500@geomatys.fr> <4E56760E.95FD.00E4.0@dfg.ca.gov>
	<4E56F172.5030706@geomatys.fr> <4E5B50B1.95FD.00E4.0@dfg.ca.gov>
Message-ID: <4E5BB87D.3070300@geomatys.fr>

Le 29/08/11 17:41, Eric Miller a écrit :
> But, what is the correct behavior if a pointer argument is null or an array 
> size is negative? Call abort()? Would that still crash the JVM? 

Calling exit() has been reported to stop the JVM (I didn't tested myself). I 
presume that it is the same for abort().

Inside a JNI function, if the arguments were provided by the user who invoked 
the function from the Java side, the correct behavior is to throw a Java 
exception (NullPointerException or IndexOutOfBoundsException). JNI functions 
have a JNIEnv argument which allows interaction with the JVM. So we can throw an 
exception from JNI code as below:

         jclass c = (*env)->FindClass(env, "java/lang/NullPointerException");
         if (c) (*env)->ThrowNew(env, c, "/Put some error message here./");
         return; // We need to exit from the C/C++ function.


Of course this apply only to JNI functions. The "normal" C library uses other 
mechanisms (typically no check - or if they check, an error code returned as an 
int).

     Martin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20110829/4e6256a8/attachment.html>

