From a.furieri at lqt.it  Wed May  1 04:26:42 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Wed, 01 May 2019 13:26:42 +0200
Subject: [PROJ] question about EPSG:3003
Message-ID: <2937eae7ba5b5c897637ca5c3300c335@lqt.it>

I notice an unpleasant regression in the proj-string returned by
proj_as_proj_string() for EPSG:3003 Monte Mario / Italy zone 1
in all previous versions, accordingly to the string returned by
calling the GDAL function OSRExportToProj4(), this was defined
as follows:

+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=1500000 +y_0=0 \
+ellps=intl +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68 \
+units=m +no_defs

but in PROJ.6 the string returned by calling proj_as_proj_string()
is now:

+proj=tmerc +lat_0=0 +lon_0=9 +k=0.9996 +x_0=1500000 +y_0=0 \
+ellps=intl +units=m +no_defs +type=crs

as you can notice, the +towgs84 member has been suppressed,
and the sad practical consequence is that any transformation
based on the above proj-string (as e.g. from EPSG:4326 to
EPSG:3003) is now shifted by about 75 metres (at least, this
is true on Tuscany).

if I remember well after so many years, PROJ.4/GDAL initially
supported a definition for 3003 lacking the +towgs84 member,
and this caused endless troubles to all italian users.
but since 2012 (more or less) PROJ.4/GDAL started supporting
a revised proj-string including the +towgs84 member, and it
was an highly appreciated improvement.
now PROJ.6 seems to mark a bad regression to the dark past.

note: this is not at all an issue for new SpatiaLite versions
fully based on PROJ.6, because in this case ST_Transform()
will use by default the CRS definitions retrieved from the
PROJ.6 own SQLite database.
but nevertheless a very dangerous scenario exists.
imagine some SpatiaLite database created by a recent
version based on PROJ.6
in this case the "spatial_ref_sys" table will be
populated by inserting the proj-strings returned
by proj_as_proj_string().
if such a database will be connected in a second
time to some earlier version of SpatiaLite still
based on old PROJ.4 (a not at all uncommon practice
in the  peculiar world of spatialite) any call to
ST_Transform() will then be based on the proj-strings
stored into "spatial_ref_sys", and any transformation
to/from srid=3003 will be inexorably affected by
severe shifts.

any idea/comment/suggestion about this ?

bye Sandro

p.s. the same identical issue affects srids
3004, 23032 and 23033

From even.rouault at spatialys.com  Wed May  1 07:49:29 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 May 2019 16:49:29 +0200
Subject: [PROJ] question about EPSG:3003
In-Reply-To: <2937eae7ba5b5c897637ca5c3300c335@lqt.it>
References: <2937eae7ba5b5c897637ca5c3300c335@lqt.it>
Message-ID: <1829306.zSBhB8xkyi@even-i700>

Hi Sandro,

First, if you instanciate with proj_create() / proj_create_from_database() and 
export with proj_as_proj_string(), you'll never get a towgs84 clause.
Since the CRS by itself has no transformation clause.
However if you look at the output of the projinfo utility or 
OSRImportFromEPSG(), you may, sometimes, get a towgs84 clause when exporting 
to PROJ string (e.g with EPSG:4322 / WGS72), because they use the 
proj_crs_create_bound_crs_to_WGS84() function which tries to find the most 
precise transformation from the CRS to EPSG:4326, and, that's the important 
point, which is valid for the whole area of use of the CRS.

For EPSG:3003, there are however 3 possibilities (you can ignore the last one 
in the below output), none of which cover the whole area of use of the 
projected CRS.

$ src/projinfo -s EPSG:3003 -t EPSG:4326 --spatial-test intersects --summary
Candidate operations found: 4
unknown id, Inverse of Italy zone 1 + Monte Mario to WGS 84 (4), 4 m, Italy - 
mainland
unknown id, Inverse of Italy zone 1 + Monte Mario to WGS 84 (2), 4 m, Italy - 
Sardinia onshore
unknown id, Inverse of Italy zone 1 + Monte Mario to WGS 84 (11), 10 m, Italy 
- Sicily Strait west of 13Â°E
unknown id, Inverse of Italy zone 1 + Ballpark geographic offset from Monte 
Mario to WGS 84, unknown accuracy, World, has ballpark transformation

Previous PROJ version hard-coded the transformation that has the largest area 
of use, but that's not necessarily ideal in all use cases (Sardinia or Sicily)

So, this is intended behaviour. I'm campaigning here and on all relevants 
channels: "With PROJ 6, PROJ strings to express CRS are very suboptimal. They 
should be restricted to express a transformation pipeline"

If you want Spatialite to have the same behaviour as before regarding 
generation of PROJ strings, you could possibly use the 
proj_create_operations() API to list the possible transformations, by setting 
proj_operation_factory_context_set_spatial_criterion(PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION) 
on the factory_ctx, pickup the one that has the largest area of use, create 
the final bound CRS with that transformation with proj_crs_create_bound_crs(), 
and export it to a PROJ string.
Admitedly, we could have a releaxed proj_crs_create_bound_crs_to_WGS84() 
implementation in PROJ itself to do that, but I'm not sure if we really need 
to replicate/encourage past suboptimal behaviour.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mdsumner at gmail.com  Thu May  2 18:32:40 2019
From: mdsumner at gmail.com (Michael Sumner)
Date: Fri, 3 May 2019 11:32:40 +1000
Subject: [PROJ] PROJ >=5.0.0 on Travis CI
Message-ID: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>

Hello, I'm trying  to install PROJ 5.0.0 or above with a Travis configuration.

The only way I can get it to work is to build from source - does
anyone know a ppa/apt pathway to get PROJ >=5.0.0 that works in a
.travis.yml?

Thank you,

Mike.


-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

From nyall.dawson at gmail.com  Thu May  2 18:37:58 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 3 May 2019 11:37:58 +1000
Subject: [PROJ] Getting "proj" and "datum" for a CRS
Message-ID: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>

Hi list,

Next question:

If I have a crs created from a proj string like:

+proj=tmerc +lat_0=0 +lon_0=102 +k=0.9999 +x_0=500000 +y_0=0 +ellps=WGS84
+units=m +no_defs +type=crs

1. How can I get the "tmerc" acronym from the proj API? If I
call proj_crs_get_coordoperation and
then proj_coordoperation_get_method_info I can retrieve the method name,
but this is a long version of this value (ie. ."Transverse Mercator", not
the tmerc acronym)

2. How can I get the ellipsoid/datum value? Again, I can
call proj_get_ellipsoid to get an ellipsoid, and from that I've been
using proj_get_id_auth_name/proj_get_id_code. But this only sometimes gives
a value, and ideally I'm trying to retrieve the "WGS84" value used in the
original proj string.

(I'm trying to use the official proj methods to retrieve these values -
without resorting to regex parsing)

3. Using proj_as_proj_string sometimes results in errors like:
"proj_as_proj_string: Unsupported conversion method: Lambert Conic
Conformal (West Orientated)". I'm guessing this indicates that there's NO
way of representing that projection using proj strings, and I'm wasting my
time if I try to work around this?

Nyall
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190503/ffef4630/attachment.html>

From sebastic at xs4all.nl  Thu May  2 20:58:41 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 3 May 2019 05:58:41 +0200
Subject: [PROJ] PROJ >=5.0.0 on Travis CI
In-Reply-To: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>
References: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>
Message-ID: <f2cf5835-31d4-28b0-6562-62921a5ebb89@xs4all.nl>

On 5/3/19 3:32 AM, Michael Sumner wrote:
> The only way I can get it to work is to build from source - does
> anyone know a ppa/apt pathway to get PROJ >=5.0.0 that works in a
> .travis.yml?

Rebuild the proj package for Ubuntu and host in your own repo or PPA,
and add this repo/PPA to Travis.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From schwehr at gmail.com  Thu May  2 23:13:54 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 2 May 2019 23:13:54 -0700
Subject: [PROJ] PROJ >=5.0.0 on Travis CI
In-Reply-To: <f2cf5835-31d4-28b0-6562-62921a5ebb89@xs4all.nl>
References: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>
 <f2cf5835-31d4-28b0-6562-62921a5ebb89@xs4all.nl>
Message-ID: <CACmBxyvQ+VhJ2VETVzg5Kon04dWCaNJU1djOOim66As3JoQPfg@mail.gmail.com>

Another alternative:

I am using 19.04 disco via docker to get proj 5.2.0.  However, support for
19.04 won't last that long, so I'll have to switch to 19.10 by the end of
this year and eventually to 20.4 LTS.

https://github.com/dwcaress/MB-System/blob/master/.travis.yml
https://launchpad.net/ubuntu/disco/+source/proj
https://www.ubuntu.com/about/release-cycle

You could also use debian testing.  I might suggest avoiding debian
unstable and exp.

https://tracker.debian.org/pkg/proj

On Thu, May 2, 2019 at 8:58 PM Sebastiaan Couwenberg <sebastic at xs4all.nl>
wrote:

> On 5/3/19 3:32 AM, Michael Sumner wrote:
> > The only way I can get it to work is to build from source - does
> > anyone know a ppa/apt pathway to get PROJ >=5.0.0 that works in a
> > .travis.yml?
>
> Rebuild the proj package for Ubuntu and host in your own repo or PPA,
> and add this repo/PPA to Travis.
>
> Kind Regards,
>
> Bas
>
> --
>  GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190502/ca3e1af1/attachment.html>

From kreve at sdfe.dk  Thu May  2 23:52:18 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 3 May 2019 06:52:18 +0000
Subject: [PROJ] Getting "proj" and "datum" for a CRS
In-Reply-To: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
References: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF16AA74@S000014.PROD.SITAD.DK>

Nyall,

For 1, try giving proj_pj_info() a go. I am not sure that it will work in all situations (a compound CRS will probably not behave as you might want/expect). Thereâs currently not a similar function for retrieving the ellipsoid id, but it can be added to proj_pj_info() if needed. You are welcome to submit a PR with such a change (if you are quick it can be part of 6.1.0).

/Kristian

Fra: PROJ <proj-bounces at lists.osgeo.org> PÃ¥ vegne af Nyall Dawson
Sendt: 3. maj 2019 03:38
Til: PROJ <proj at lists.osgeo.org>
Emne: [PROJ] Getting "proj" and "datum" for a CRS

Hi list,

Next question:

If I have a crs created from a proj string like:

+proj=tmerc +lat_0=0 +lon_0=102 +k=0.9999 +x_0=500000 +y_0=0 +ellps=WGS84 +units=m +no_defs +type=crs

1. How can I get the "tmerc" acronym from the proj API? If I call proj_crs_get_coordoperation and then proj_coordoperation_get_method_info I can retrieve the method name, but this is a long version of this value (ie. ."Transverse Mercator", not the tmerc acronym)

2. How can I get the ellipsoid/datum value? Again, I can call proj_get_ellipsoid to get an ellipsoid, and from that I've been using proj_get_id_auth_name/proj_get_id_code. But this only sometimes gives a value, and ideally I'm trying to retrieve the "WGS84" value used in the original proj string.

(I'm trying to use the official proj methods to retrieve these values - without resorting to regex parsing)

3. Using proj_as_proj_string sometimes results in errors like: "proj_as_proj_string: Unsupported conversion method: Lambert Conic Conformal (West Orientated)". I'm guessing this indicates that there's NO way of representing that projection using proj strings, and I'm wasting my time if I try to work around this?

Nyall

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190503/06873606/attachment-0001.html>

From even.rouault at spatialys.com  Fri May  3 00:11:26 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 May 2019 09:11:26 +0200
Subject: [PROJ] Getting "proj" and "datum" for a CRS
In-Reply-To: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
References: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
Message-ID: <3214398.hFUZWan4pX@even-i700>

On vendredi 3 mai 2019 11:37:58 CEST Nyall Dawson wrote:
> Hi list,
> 
> Next question:
> 
> If I have a crs created from a proj string like:
> 
> +proj=tmerc +lat_0=0 +lon_0=102 +k=0.9999 +x_0=500000 +y_0=0 +ellps=WGS84
> +units=m +no_defs +type=crs
> 
> 1. How can I get the "tmerc" acronym from the proj API? If I
> call proj_crs_get_coordoperation and
> then proj_coordoperation_get_method_info I can retrieve the method name,
> but this is a long version of this value (ie. ."Transverse Mercator", not
> the tmerc acronym)
> 
> 2. How can I get the ellipsoid/datum value? Again, I can
> call proj_get_ellipsoid to get an ellipsoid, and from that I've been
> using proj_get_id_auth_name/proj_get_id_code. But this only sometimes gives
> a value, and ideally I'm trying to retrieve the "WGS84" value used in the
> original proj string.
> 
> (I'm trying to use the official proj methods to retrieve these values -
> without resorting to regex parsing)

As Kristian said, there's no such methods.

> 
> 3. Using proj_as_proj_string sometimes results in errors like:
> "proj_as_proj_string: Unsupported conversion method: Lambert Conic
> Conformal (West Orientated)". I'm guessing this indicates that there's NO
> way of representing that projection using proj strings, and I'm wasting my
> time if I try to work around this?

Yes, there are a few projection methods in the EPSG dataset which aren't 
supported by PROJ

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri May  3 00:48:41 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 May 2019 09:48:41 +0200
Subject: [PROJ] Getting "proj" and "datum" for a CRS
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF16AA74@S000014.PROD.SITAD.DK>
References: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
 <2E885BB293AF0448A0181138489E9A0EAF16AA74@S000014.PROD.SITAD.DK>
Message-ID: <2616559.WBx6YCxVml@even-i700>

On vendredi 3 mai 2019 06:52:18 CEST Kristian Evers wrote:
> Nyall,
> 
> For 1, try giving proj_pj_info() a go. I am not sure that it will work in
> all situations (a compound CRS will probably not behave as you might
> want/expect). Thereâs currently not a similar function for retrieving the
> ellipsoid id, but it can be added to proj_pj_info() if needed. You are
> welcome to submit a PR with such a change (if you are quick it can be part
> of 6.1.0).

I'd note that adding a new member to PJ_PROJ_INFO will change the ABI in a 
incompatible manner. Will/would require a libtool 'current' bump


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri May  3 01:30:05 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 May 2019 10:30:05 +0200
Subject: [PROJ] PROJ >=5.0.0 on Travis CI
In-Reply-To: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>
References: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>
Message-ID: <5924028.6rNbr8qSpt@even-i700>

On vendredi 3 mai 2019 11:32:40 CEST Michael Sumner wrote:
> Hello, I'm trying  to install PROJ 5.0.0 or above with a Travis
> configuration.
> 
> The only way I can get it to work is to build from source - does
> anyone know a ppa/apt pathway to get PROJ >=5.0.0 that works in a
> .travis.yml?

A possibility is to build from source + ccache + enabling Travis caching of 
$HOME/.ccache + ./configure --disable-static . That should keep the time spent 
in PROJ building to a few seconds generally.

https://github.com/OSGeo/proj.4/blob/master/.travis.yml#L9

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From trey.stafford at nsidc.org  Fri May  3 10:23:17 2019
From: trey.stafford at nsidc.org (Trey Stafford)
Date: Fri, 3 May 2019 11:23:17 -0600
Subject: [PROJ] Transforming between ITRF realizations
Message-ID: <2efdb276-87b3-d1ee-9ac1-0b995d205c1b@nsidc.org>

Hello,

I have a number of elevation datasets that each use a different ITRF 
realization. The coordinates in these datasets are referenced to the 
WGS84 ellipsoid. An example lon, lat, elev(meters above ellipsoid) tuple 
would be:

-117.61748591770593, 59.496749040316935, 329.39612

According to the proj4 documentation on Helmert transformations 
(https://proj4.org/operations/transformations/helmert.html), I should be 
able to use something like this to convert between ITRF2000 and ITRF93:

proj +proj=helmert +convention=position_vector +x=0.0127 +y=0.0065 
+z=-0.0209 +s=0.00195 +dx=-0.0029 +dy=-0.0002 +dz=-0.0006 +ds=0.00001 
+rx=-0.00039 +ry=0.00080 +rz=-0.00114 +drx=-0.00011 +dry=-0.00019 
+drz=0.00007 +t_epoch=1988.0

However, entering my coordinates yield the following result:

0.05Â Â Â  -0.01 329.39612

I've used proj4 previously, but not to do transformations between 
different ITRF realizations. I suspect I am missing something, but I 
have not had revelations yet. Any suggestions or insight would be 
greatly appreciated!

Thanks,

Trey Stafford


From alansnow21 at gmail.com  Fri May  3 11:01:01 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Fri, 3 May 2019 13:01:01 -0500
Subject: [PROJ] Transforming between ITRF realizations
In-Reply-To: <2efdb276-87b3-d1ee-9ac1-0b995d205c1b@nsidc.org>
References: <2efdb276-87b3-d1ee-9ac1-0b995d205c1b@nsidc.org>
Message-ID: <CAGybdFRTgLy6m4LDqEWFaG4ia9HG7FMz+fSMVSKc-WEDyU=4uQ@mail.gmail.com>

Hi Trey,

I tried it with pyproj and I got one answer:
>>> from pyproj import Transformer
>>> trans = Transformer.from_pipeline("+init=ITRF2000:ITRF93")
>>> trans.transform(-117.61748, 59.4967, 329.396)
(-111.83893294174032, 59.90053033616967, 330.56817290107665)

Then I used the `cct` tool and it seems to be slightly different:
$ cct --version
cct: Rel. 6.1.0, September 1st, 2019
$ cct +init=ITRF2000:ITRF93
-117.61748, 59.4967, 329.396
    -117.6048        59.5032      329.3751           inf

Do you have a result you are expecting?
Alan

On Fri, May 3, 2019 at 12:33 PM Trey Stafford <trey.stafford at nsidc.org>
wrote:

> Hello,
>
> I have a number of elevation datasets that each use a different ITRF
> realization. The coordinates in these datasets are referenced to the
> WGS84 ellipsoid. An example lon, lat, elev(meters above ellipsoid) tuple
> would be:
>
> -117.61748591770593, 59.496749040316935, 329.39612
>
> According to the proj4 documentation on Helmert transformations
> (https://proj4.org/operations/transformations/helmert.html), I should be
> able to use something like this to convert between ITRF2000 and ITRF93:
>
> proj +proj=helmert +convention=position_vector +x=0.0127 +y=0.0065
> +z=-0.0209 +s=0.00195 +dx=-0.0029 +dy=-0.0002 +dz=-0.0006 +ds=0.00001
> +rx=-0.00039 +ry=0.00080 +rz=-0.00114 +drx=-0.00011 +dry=-0.00019
> +drz=0.00007 +t_epoch=1988.0
>
> However, entering my coordinates yield the following result:
>
> 0.05    -0.01 329.39612
>
> I've used proj4 previously, but not to do transformations between
> different ITRF realizations. I suspect I am missing something, but I
> have not had revelations yet. Any suggestions or insight would be
> greatly appreciated!
>
> Thanks,
>
> Trey Stafford
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Alan Snow
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190503/1c396573/attachment.html>

From even.rouault at spatialys.com  Fri May  3 11:58:32 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 May 2019 20:58:32 +0200
Subject: [PROJ] Transforming between ITRF realizations
In-Reply-To: <CAGybdFRTgLy6m4LDqEWFaG4ia9HG7FMz+fSMVSKc-WEDyU=4uQ@mail.gmail.com>
References: <2efdb276-87b3-d1ee-9ac1-0b995d205c1b@nsidc.org>
 <CAGybdFRTgLy6m4LDqEWFaG4ia9HG7FMz+fSMVSKc-WEDyU=4uQ@mail.gmail.com>
Message-ID: <2125492.g5U2aLyDd3@even-i700>

On vendredi 3 mai 2019 13:01:01 CEST Alan Snow wrote:
> Hi Trey,
> 
> I tried it with pyproj and I got one answer:
> >>> from pyproj import Transformer
> >>> trans = Transformer.from_pipeline("+init=ITRF2000:ITRF93")
> >>> trans.transform(-117.61748, 59.4967, 329.396)
> 
> (-111.83893294174032, 59.90053033616967, 330.56817290107665)
> 
> Then I used the `cct` tool and it seems to be slightly different:
> $ cct --version
> cct: Rel. 6.1.0, September 1st, 2019
> $ cct +init=ITRF2000:ITRF93
> -117.61748, 59.4967, 329.396
>     -117.6048        59.5032      329.3751           inf
> 
> Do you have a result you are expecting?

None of the above make sense (not sure why you don't get the same result as 
pyproj as with cct. You must perform some additional conversion: unit ?). For 
transformations between ITRF realizations, the difference between the input 
and output coordinates should be very small (typically of the order of one 
metre or less, ie in the range of 1e-6 to 1e-5 degree)

The +init=ITRF2000:ITRF93 definition uses a +proj=helmert operation which 
operates in the cartesian/geocentric coordinate space. So you need to convert 
from geographic to geocentric coordinates first.

$ echo "-117.61748, 59.4967, 329.396" | src/cct -d 7 +proj=pipeline \
  +step +proj=unitconvert +xy_in=deg +xy_out=rad \
  +step +proj=cart +ellps=GRS80 \
  +step +init=ITRF2000:ITRF93 \
  +step +inv +proj=cart +ellps=GRS80 \
  +step +proj=unitconvert +xy_in=rad +xy_out=deg

 -117.6174799     59.4967002   329.3845529           inf

Note also that being a time-dependent operation, you should generally supply 
the observation time as a 4th coordinate. If you do not do so, +proj=helmert 
will assume that the observation time is the same as the +t_epoch parameter, 
here 1988.

You can also get the same result with PROJ 6 using the EPSG dataset with:

echo "59.4967 -117.61748 329.396 1988" | src/cs2cs -f "%.7f" ITRF2000 ITRF93
59.4967002	-117.6174799 329.3845529 1988

ITRF2000 will resolve to EPSG:7909 (ITRF2000 Geographic3D CRS) and ITRF93 to 
EPSG:7905 (ITRF93 Geographic3D CRS).
Note the lat, long order due to using EPSG definitions.
The explicit 1988 here is needed since otherwise it would default to 0 (bug I 
just fixed in PROJ master / 6.1dev)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From trey.stafford at nsidc.org  Fri May  3 13:10:37 2019
From: trey.stafford at nsidc.org (Trey Stafford)
Date: Fri, 3 May 2019 14:10:37 -0600
Subject: [PROJ] Transforming between ITRF realizations
In-Reply-To: <2125492.g5U2aLyDd3@even-i700>
References: <2efdb276-87b3-d1ee-9ac1-0b995d205c1b@nsidc.org>
 <CAGybdFRTgLy6m4LDqEWFaG4ia9HG7FMz+fSMVSKc-WEDyU=4uQ@mail.gmail.com>
 <2125492.g5U2aLyDd3@even-i700>
Message-ID: <e889cc60-ac3f-ca1b-459d-dcbf0f9c9c36@nsidc.org>

All,

Thanks for the feedback, this is super helpful!

I was definitely missing the conversion to geocentric coordinates. Note 
that the proj4 docs do actually have a discussion about using pipelines 
for exactly this purpose, which I neglected to see before submitting 
this question: https://proj4.org/usage/transformation.html

The only thing that I think needs to be changed in Even's example for my 
use case is the ellipsoid that is used. Instead of GRS80, my data are 
referenced to WGS84.

I will also adjust my input to use the observation time as the fourth 
parameter. Each of my observations does have a datetime associated with 
it, so that should be easy enough to do.

I'm going to do a bit more reading to ensure I understand each of these 
steps, but I think I have a better grasp now than I did!

Thanks again, this is much appreciated!

Trey

On 5/3/19 12:58 PM, Even Rouault wrote:
> On vendredi 3 mai 2019 13:01:01 CEST Alan Snow wrote:
>> Hi Trey,
>>
>> I tried it with pyproj and I got one answer:
>>>>> from pyproj import Transformer
>>>>> trans = Transformer.from_pipeline("+init=ITRF2000:ITRF93")
>>>>> trans.transform(-117.61748, 59.4967, 329.396)
>> (-111.83893294174032, 59.90053033616967, 330.56817290107665)
>>
>> Then I used the `cct` tool and it seems to be slightly different:
>> $ cct --version
>> cct: Rel. 6.1.0, September 1st, 2019
>> $ cct +init=ITRF2000:ITRF93
>> -117.61748, 59.4967, 329.396
>>      -117.6048        59.5032      329.3751           inf
>>
>> Do you have a result you are expecting?
> None of the above make sense (not sure why you don't get the same result as
> pyproj as with cct. You must perform some additional conversion: unit ?). For
> transformations between ITRF realizations, the difference between the input
> and output coordinates should be very small (typically of the order of one
> metre or less, ie in the range of 1e-6 to 1e-5 degree)
>
> The +init=ITRF2000:ITRF93 definition uses a +proj=helmert operation which
> operates in the cartesian/geocentric coordinate space. So you need to convert
> from geographic to geocentric coordinates first.
>
> $ echo "-117.61748, 59.4967, 329.396" | src/cct -d 7 +proj=pipeline \
>    +step +proj=unitconvert +xy_in=deg +xy_out=rad \
>    +step +proj=cart +ellps=GRS80 \
>    +step +init=ITRF2000:ITRF93 \
>    +step +inv +proj=cart +ellps=GRS80 \
>    +step +proj=unitconvert +xy_in=rad +xy_out=deg
>
>   -117.6174799     59.4967002   329.3845529           inf
>
> Note also that being a time-dependent operation, you should generally supply
> the observation time as a 4th coordinate. If you do not do so, +proj=helmert
> will assume that the observation time is the same as the +t_epoch parameter,
> here 1988.
>
> You can also get the same result with PROJ 6 using the EPSG dataset with:
>
> echo "59.4967 -117.61748 329.396 1988" | src/cs2cs -f "%.7f" ITRF2000 ITRF93
> 59.4967002	-117.6174799 329.3845529 1988
>
> ITRF2000 will resolve to EPSG:7909 (ITRF2000 Geographic3D CRS) and ITRF93 to
> EPSG:7905 (ITRF93 Geographic3D CRS).
> Note the lat, long order due to using EPSG definitions.
> The explicit 1988 here is needed since otherwise it would default to 0 (bug I
> just fixed in PROJ master / 6.1dev)
>
> Even
>

From alansnow21 at gmail.com  Sat May  4 11:03:21 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Sat, 4 May 2019 13:03:21 -0500
Subject: [PROJ] Transforming between ITRF realizations
In-Reply-To: <e889cc60-ac3f-ca1b-459d-dcbf0f9c9c36@nsidc.org>
References: <2efdb276-87b3-d1ee-9ac1-0b995d205c1b@nsidc.org>
 <CAGybdFRTgLy6m4LDqEWFaG4ia9HG7FMz+fSMVSKc-WEDyU=4uQ@mail.gmail.com>
 <2125492.g5U2aLyDd3@even-i700>
 <e889cc60-ac3f-ca1b-459d-dcbf0f9c9c36@nsidc.org>
Message-ID: <CAGybdFS8YynHRqSCAaGnsF-WY2ZRW_xngXcZHbxfQzuVDULVtQ@mail.gmail.com>

Thanks for the clarification Even, that helped make this much more clear. I
have much to learn!

It seems everything works properly in pyproj with the year added and
upgrading to the newest version of PROJ.
Just an update.
>>> from pyproj import Transformer

Testing the correct solution for this thread:
>>> proj_str = (
...     "+proj=pipeline "
...     "+step +proj=unitconvert +xy_in=deg +xy_out=rad "
...     "+step +proj=cart +ellps=WGS84 "
...     "+step +init=ITRF2000:ITRF93 "
...     "+step +inv +proj=cart +ellps=WGS84 "
...     "+step +proj=unitconvert +xy_in=rad +xy_out=deg"
... )
>>> trans = Transformer.from_pipeline(proj_str)
>>> trans.transform(-117.61748591770593, 59.496749040316935, 329.39612,
1988)
(-117.61748584159756, 59.49674923319888, 329.3846729239449, 1988.0)

Just testing the cs2cs functionality (needed to add support for ITRF
initialization in pyproj - PR for that submitted):
>>> crs_trans = Transformer.from_crs("ITRF2000", "ITRF93")
>>> crs_trans.transform(59.496749040316935, -117.61748591770593, 329.39612,
1988)
(59.49674923319888, -117.61748584159756, 329.3846729239449, 1988.0)

The updated version of the idea from earlier with strange results:
>>> trans = Transformer.from_pipeline("+init=ITRF2000:ITRF93")
>>> trans.transform(-117.61748591770593, 59.496749040316935, 329.39612, 0)
(-111.83893885919258, 59.900579376362764, 330.5682929011372, 0.0)
>>> trans.transform(-117.61748591770593, 59.496749040316935, 329.39612,
1988)
(-117.60478454066292, 59.50325042920626, 329.37522098600806, 1988.0)

Very informative thread.

Best,
Alan

On Fri, May 3, 2019 at 3:10 PM Trey Stafford <trey.stafford at nsidc.org>
wrote:

> All,
>
> Thanks for the feedback, this is super helpful!
>
> I was definitely missing the conversion to geocentric coordinates. Note
> that the proj4 docs do actually have a discussion about using pipelines
> for exactly this purpose, which I neglected to see before submitting
> this question: https://proj4.org/usage/transformation.html
>
> The only thing that I think needs to be changed in Even's example for my
> use case is the ellipsoid that is used. Instead of GRS80, my data are
> referenced to WGS84.
>
> I will also adjust my input to use the observation time as the fourth
> parameter. Each of my observations does have a datetime associated with
> it, so that should be easy enough to do.
>
> I'm going to do a bit more reading to ensure I understand each of these
> steps, but I think I have a better grasp now than I did!
>
> Thanks again, this is much appreciated!
>
> Trey
>
> On 5/3/19 12:58 PM, Even Rouault wrote:
> > On vendredi 3 mai 2019 13:01:01 CEST Alan Snow wrote:
> >> Hi Trey,
> >>
> >> I tried it with pyproj and I got one answer:
> >>>>> from pyproj import Transformer
> >>>>> trans = Transformer.from_pipeline("+init=ITRF2000:ITRF93")
> >>>>> trans.transform(-117.61748, 59.4967, 329.396)
> >> (-111.83893294174032, 59.90053033616967, 330.56817290107665)
> >>
> >> Then I used the `cct` tool and it seems to be slightly different:
> >> $ cct --version
> >> cct: Rel. 6.1.0, September 1st, 2019
> >> $ cct +init=ITRF2000:ITRF93
> >> -117.61748, 59.4967, 329.396
> >>      -117.6048        59.5032      329.3751           inf
> >>
> >> Do you have a result you are expecting?
> > None of the above make sense (not sure why you don't get the same result
> as
> > pyproj as with cct. You must perform some additional conversion: unit
> ?). For
> > transformations between ITRF realizations, the difference between the
> input
> > and output coordinates should be very small (typically of the order of
> one
> > metre or less, ie in the range of 1e-6 to 1e-5 degree)
> >
> > The +init=ITRF2000:ITRF93 definition uses a +proj=helmert operation which
> > operates in the cartesian/geocentric coordinate space. So you need to
> convert
> > from geographic to geocentric coordinates first.
> >
> > $ echo "-117.61748, 59.4967, 329.396" | src/cct -d 7 +proj=pipeline \
> >    +step +proj=unitconvert +xy_in=deg +xy_out=rad \
> >    +step +proj=cart +ellps=GRS80 \
> >    +step +init=ITRF2000:ITRF93 \
> >    +step +inv +proj=cart +ellps=GRS80 \
> >    +step +proj=unitconvert +xy_in=rad +xy_out=deg
> >
> >   -117.6174799     59.4967002   329.3845529           inf
> >
> > Note also that being a time-dependent operation, you should generally
> supply
> > the observation time as a 4th coordinate. If you do not do so,
> +proj=helmert
> > will assume that the observation time is the same as the +t_epoch
> parameter,
> > here 1988.
> >
> > You can also get the same result with PROJ 6 using the EPSG dataset with:
> >
> > echo "59.4967 -117.61748 329.396 1988" | src/cs2cs -f "%.7f" ITRF2000
> ITRF93
> > 59.4967002    -117.6174799 329.3845529 1988
> >
> > ITRF2000 will resolve to EPSG:7909 (ITRF2000 Geographic3D CRS) and
> ITRF93 to
> > EPSG:7905 (ITRF93 Geographic3D CRS).
> > Note the lat, long order due to using EPSG definitions.
> > The explicit 1988 here is needed since otherwise it would default to 0
> (bug I
> > just fixed in PROJ master / 6.1dev)
> >
> > Even
> >
>


-- 
Alan Snow
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190504/9f9ea5cb/attachment.html>

From markus.metz.giswork at gmail.com  Sun May  5 13:24:05 2019
From: markus.metz.giswork at gmail.com (Markus Metz)
Date: Sun, 5 May 2019 22:24:05 +0200
Subject: [PROJ] Transforming between ITRF realizations
In-Reply-To: <2125492.g5U2aLyDd3@even-i700>
References: <2efdb276-87b3-d1ee-9ac1-0b995d205c1b@nsidc.org>
 <CAGybdFRTgLy6m4LDqEWFaG4ia9HG7FMz+fSMVSKc-WEDyU=4uQ@mail.gmail.com>
 <2125492.g5U2aLyDd3@even-i700>
Message-ID: <CAG+h=FHjY9n+HeURmHTT9DH__OdHvS=yfEQDnmZqaDZcP2NmoA@mail.gmail.com>

On Fri, May 3, 2019 at 8:58 PM Even Rouault <even.rouault at spatialys.com>
wrote:
>
> On vendredi 3 mai 2019 13:01:01 CEST Alan Snow wrote:
[...]
>
> The +init=ITRF2000:ITRF93 definition uses a +proj=helmert operation which
> operates in the cartesian/geocentric coordinate space. So you need to
convert
> from geographic to geocentric coordinates first.
>
> $ echo "-117.61748, 59.4967, 329.396" | src/cct -d 7 +proj=pipeline \
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad \
>   +step +proj=cart +ellps=GRS80 \
>   +step +init=ITRF2000:ITRF93 \
>   +step +inv +proj=cart +ellps=GRS80 \
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg

that means we (developers) need to check with proj_angular_input() if such
a unit conversion is needed? AFAIU, units are now degrees as in EPSG:4326,
and in this case a conversion to radians is no longer required, as in
proj-4.

Markus M
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190505/88d26028/attachment.html>

From mdsumner at gmail.com  Sun May  5 17:31:23 2019
From: mdsumner at gmail.com (Michael Sumner)
Date: Mon, 6 May 2019 10:31:23 +1000
Subject: [PROJ] PROJ >=5.0.0 on Travis CI
In-Reply-To: <CACmBxyvQ+VhJ2VETVzg5Kon04dWCaNJU1djOOim66As3JoQPfg@mail.gmail.com>
References: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>
 <f2cf5835-31d4-28b0-6562-62921a5ebb89@xs4all.nl>
 <CACmBxyvQ+VhJ2VETVzg5Kon04dWCaNJU1djOOim66As3JoQPfg@mail.gmail.com>
Message-ID: <CAAcGz9-vJtvwVF7wmron-59CZCCr0c5mpZmRC86BHwOaotaTqA@mail.gmail.com>

Excellent, thanks for the explanation and examples - it really helps
me understand the status of these repos.

Cheers, MIke.

On Fri, May 3, 2019 at 4:14 PM Kurt Schwehr <schwehr at gmail.com> wrote:
>
> Another alternative:
>
> I am using 19.04 disco via docker to get proj 5.2.0.  However, support for 19.04 won't last that long, so I'll have to switch to 19.10 by the end of this year and eventually to 20.4 LTS.
>
> https://github.com/dwcaress/MB-System/blob/master/.travis.yml
> https://launchpad.net/ubuntu/disco/+source/proj
> https://www.ubuntu.com/about/release-cycle
>
> You could also use debian testing.  I might suggest avoiding debian unstable and exp.
>
> https://tracker.debian.org/pkg/proj
>
> On Thu, May 2, 2019 at 8:58 PM Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>>
>> On 5/3/19 3:32 AM, Michael Sumner wrote:
>> > The only way I can get it to work is to build from source - does
>> > anyone know a ppa/apt pathway to get PROJ >=5.0.0 that works in a
>> > .travis.yml?
>>
>> Rebuild the proj package for Ubuntu and host in your own repo or PPA,
>> and add this repo/PPA to Travis.
>>
>> Kind Regards,
>>
>> Bas
>>
>> --
>>  GPG Key ID: 4096R/6750F10AE88D4AF1
>> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
> --
> --
> http://schwehr.org



-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

From mdsumner at gmail.com  Sun May  5 17:31:54 2019
From: mdsumner at gmail.com (Michael Sumner)
Date: Mon, 6 May 2019 10:31:54 +1000
Subject: [PROJ] PROJ >=5.0.0 on Travis CI
In-Reply-To: <5924028.6rNbr8qSpt@even-i700>
References: <CAAcGz9-WWK-=6_JQ2ePQrVPCihO1LGmeZ-SZUyvdkEg6aXtLYA@mail.gmail.com>
 <5924028.6rNbr8qSpt@even-i700>
Message-ID: <CAAcGz9887J-ZbsCnnOyok=KJLiZSybegM5GrAvLQZDu5BLk7nQ@mail.gmail.com>

Thanks Even, very helpful.

Cheers, Mike.

On Fri, May 3, 2019 at 6:30 PM Even Rouault <even.rouault at spatialys.com> wrote:
>
> On vendredi 3 mai 2019 11:32:40 CEST Michael Sumner wrote:
> > Hello, I'm trying  to install PROJ 5.0.0 or above with a Travis
> > configuration.
> >
> > The only way I can get it to work is to build from source - does
> > anyone know a ppa/apt pathway to get PROJ >=5.0.0 that works in a
> > .travis.yml?
>
> A possibility is to build from source + ccache + enabling Travis caching of
> $HOME/.ccache + ./configure --disable-static . That should keep the time spent
> in PROJ building to a few seconds generally.
>
> https://github.com/OSGeo/proj.4/blob/master/.travis.yml#L9
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com



-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com

From kreve at sdfe.dk  Sun May  5 23:24:56 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 6 May 2019 06:24:56 +0000
Subject: [PROJ] PROJ 6.1.0RC1
Message-ID: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>

I have prepared candidates for the upcoming releases of PROJ 6.1.0 and proj-datumgrid-europe-1.3.

Download the archives here:

https://download.osgeo.org/proj/proj-6.1.0RC1.tar.gz (https://download.osgeo.org/proj/proj-6.1.0RC1.tar.gz.md5)
https://download.osgeo.org/proj/proj-6.1.0RC1.zip (https://download.osgeo.org/proj/proj-6.1.0RC1.zip.md5)

https://download.osgeo.org/proj/proj-datumgrid-europe-1.3RC1.tar.gz
https://download.osgeo.org/proj/proj-datumgrid-europe-1.3RC1.zip


Please test the release candidates and report back any problems you may find. If no issues
are discovered I plan to call the vote for promotion to final release on Monday May 13th with
a targeted release date at May 15th.

/Kristian


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/103581eb/attachment.html>

From sebastic at xs4all.nl  Mon May  6 00:42:04 2019
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Mon, 06 May 2019 09:42:04 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
Message-ID: <7135d605fffb2df8e87ad602e0a6abcd@xs4all.nl>

[Resending with compressed attachment]

On 2019-05-06 08:24, Kristian Evers wrote:
> Please test the release candidates and report back any problems you
> may find.

The tests for the RDNAP datumgrid [0] still fail with 6.1.0-rc1.

The height values are exceed the allowed margin. See the attachment.

This is the biggest regression since PROJ 5.2.0 I've encountered.

[0] https://lists.osgeo.org/pipermail/proj/2019-March/008313.html

Kind Regards,

Bas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testrdtrans2008.log.gz
Type: application/x-gzip
Size: 3416 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/e00d4eef/attachment.bin>

From kreve at sdfe.dk  Mon May  6 01:08:44 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 6 May 2019 08:08:44 +0000
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <7135d605fffb2df8e87ad602e0a6abcd@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <7135d605fffb2df8e87ad602e0a6abcd@xs4all.nl>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF176157@S000014.PROD.SITAD.DK>

>From the previous thread it seems to be a difficult problem without a clear
Solution. Looking at the test output though it seems as if the vertical shift
isn't  applied. Whether that is because of the issues discussed previously or
it is a problem in finding the naptrans2008.gtx grid on the system I can't
tell from the log file. 

The log file is also reporting that the epsg init file fails to load:

	pj_open_lib(epsg): call fopen(/usr/share/proj/epsg) - failed

So, is this simply an incorrect setting of PROJ_LIB or is it still the same
not so simple issue as reported previously?

/Kristian

-----Oprindelig meddelelse-----
Fra: PROJ <proj-bounces at lists.osgeo.org> PÃ¥ vegne af Bas Couwenberg
Sendt: 6. maj 2019 09:42
Til: proj at lists.osgeo.org
Emne: Re: [PROJ] PROJ 6.1.0RC1

[Resending with compressed attachment]

On 2019-05-06 08:24, Kristian Evers wrote:
> Please test the release candidates and report back any problems you
> may find.

The tests for the RDNAP datumgrid [0] still fail with 6.1.0-rc1.

The height values are exceed the allowed margin. See the attachment.

This is the biggest regression since PROJ 5.2.0 I've encountered.

[0] https://lists.osgeo.org/pipermail/proj/2019-March/008313.html

Kind Regards,

Bas

From sebastic at xs4all.nl  Mon May  6 01:29:53 2019
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Mon, 06 May 2019 10:29:53 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF176157@S000014.PROD.SITAD.DK>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <7135d605fffb2df8e87ad602e0a6abcd@xs4all.nl>
 <2E885BB293AF0448A0181138489E9A0EAF176157@S000014.PROD.SITAD.DK>
Message-ID: <f82c260ef6feff6551875805840a1e3d@xs4all.nl>

On 2019-05-06 10:08, Kristian Evers wrote:
> From the previous thread it seems to be a difficult problem without a 
> clear
> Solution. Looking at the test output though it seems as if the vertical 
> shift
> isn't  applied. Whether that is because of the issues discussed 
> previously or
> it is a problem in finding the naptrans2008.gtx grid on the system I 
> can't
> tell from the log file.
> 
> The log file is also reporting that the epsg init file fails to load:
> 
> 	pj_open_lib(epsg): call fopen(/usr/share/proj/epsg) - failed

This is expected, because the epsg init file no longer exist for PROJ 6.

The minimal epsg init file is also moved out of the way to prevent it 
from being used, this file was used with prior versions that only 
supporting a single path in PROJ_LIB.

> So, is this simply an incorrect setting of PROJ_LIB or is it still the 
> same
> not so simple issue as reported previously?

It's probably the not so simple issue.

IIRC epsg:4258 is interpreted as a Geographic 2D CRS which likely causes 
the 3D component to be ignored.

The projinfo output is not something I can make sense of, it is as 
follows:

$ PROJ_LIB=.:/usr/share/proj projinfo -s EPSG:4258 -t rdnap:rdnap
target CRS: parsing of user string failed: crs not found

$ PROJ_LIB=.:/usr/share/proj projinfo -s EPSG:4258 -t "+proj=sterea 
+lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 
+x_0=155000 +y_0=463000 +ellps=bessel +nadgrids=rdtrans2008.gsb 
+geoidgrids=naptrans2008.gtx +units=m +no_defs +type=crs"
Candidate operations found: 1
-------------------------------------
Operation nÂ°1:

unknown id, unknown + unknown to WGS84 + Inverse of ETRS89 to WGS 84 (1) 
+ Transformation from unknown to ETRS89 (ballpark vertical 
transformation, without ellipsoid height to vertical height correction), 
unknown accuracy, Europe - ETRS89, has ballpark transformation

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +inv +proj=hgridshift 
+grids=rdtrans2008.gsb +step +proj=sterea +lat_0=52.1561605555556 
+lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 
+ellps=bessel

WKT2_2018 string:
COORDINATEOPERATION["unknown + unknown to WGS84 + Inverse of ETRS89 to 
WGS 84 (1) + Transformation from unknown to ETRS89 (ballpark vertical 
transformation, without ellipsoid height to vertical height 
correction)",
     SOURCECRS[
         GEOGCRS["ETRS89",
             DATUM["European Terrestrial Reference System 1989",
                 ELLIPSOID["GRS 1980",6378137,298.257222101,
                     LENGTHUNIT["metre",1]]],
             PRIMEM["Greenwich",0,
                 ANGLEUNIT["degree",0.0174532925199433]],
             CS[ellipsoidal,2],
                 AXIS["geodetic latitude (Lat)",north,
                     ORDER[1],
                     ANGLEUNIT["degree",0.0174532925199433]],
                 AXIS["geodetic longitude (Lon)",east,
                     ORDER[2],
                     ANGLEUNIT["degree",0.0174532925199433]],
             ID["EPSG",4258]]],
     TARGETCRS[
         COMPOUNDCRS["unknown",
             BOUNDCRS[
                 SOURCECRS[
                     PROJCRS["unknown",
                         BASEGEOGCRS["unknown",
                             DATUM["Unknown based on Bessel 1841 
ellipsoid",
                                 ELLIPSOID["Bessel 
1841",6377397.155,299.1528128,
                                     LENGTHUNIT["metre",1,
                                         ID["EPSG",9001]]]],
                             PRIMEM["Greenwich",0,
                                 ANGLEUNIT["degree",0.0174532925199433],
                                 ID["EPSG",8901]]],
                         CONVERSION["unknown",
                             METHOD["Oblique Stereographic",
                                 ID["EPSG",9809]],
                             PARAMETER["Latitude of natural 
origin",52.1561605555556,
                                 ANGLEUNIT["degree",0.0174532925199433],
                                 ID["EPSG",8801]],
                             PARAMETER["Longitude of natural 
origin",5.38763888888889,
                                 ANGLEUNIT["degree",0.0174532925199433],
                                 ID["EPSG",8802]],
                             PARAMETER["Scale factor at natural 
origin",0.9999079,
                                 SCALEUNIT["unity",1],
                                 ID["EPSG",8805]],
                             PARAMETER["False easting",155000,
                                 LENGTHUNIT["metre",1],
                                 ID["EPSG",8806]],
                             PARAMETER["False northing",463000,
                                 LENGTHUNIT["metre",1],
                                 ID["EPSG",8807]]],
                         CS[Cartesian,2],
                             AXIS["(E)",east,
                                 ORDER[1],
                                 LENGTHUNIT["metre",1,
                                     ID["EPSG",9001]]],
                             AXIS["(N)",north,
                                 ORDER[2],
                                 LENGTHUNIT["metre",1,
                                     ID["EPSG",9001]]]]],
                 TARGETCRS[
                     GEOGCRS["WGS 84",
                         DATUM["World Geodetic System 1984",
                             ELLIPSOID["WGS 84",6378137,298.257223563,
                                 LENGTHUNIT["metre",1]]],
                         PRIMEM["Greenwich",0,
                             ANGLEUNIT["degree",0.0174532925199433]],
                         CS[ellipsoidal,2],
                             AXIS["latitude",north,
                                 ORDER[1],
                                 ANGLEUNIT["degree",0.0174532925199433]],
                             AXIS["longitude",east,
                                 ORDER[2],
                                 ANGLEUNIT["degree",0.0174532925199433]],
                         ID["EPSG",4326]]],
                 ABRIDGEDTRANSFORMATION["unknown to WGS84",
                     METHOD["NTv2",
                         ID["EPSG",9615]],
                     PARAMETERFILE["Latitude and longitude difference 
file","rdtrans2008.gsb",
                         ID["EPSG",8656]]]],
             BOUNDCRS[
                 SOURCECRS[
                     VERTCRS["unknown",
                         VDATUM["unknown"],
                         CS[vertical,1],
                             AXIS["gravity-related height (H)",up,
                                 LENGTHUNIT["metre",1,
                                     ID["EPSG",9001]]]]],
                 TARGETCRS[
                     GEOGCRS["WGS 84",
                         DATUM["World Geodetic System 1984",
                             ELLIPSOID["WGS 84",6378137,298.257223563,
                                 LENGTHUNIT["metre",1]]],
                         PRIMEM["Greenwich",0,
                             ANGLEUNIT["degree",0.0174532925199433]],
                         CS[ellipsoidal,3],
                             AXIS["latitude",north,
                                 ORDER[1],
                                 ANGLEUNIT["degree",0.0174532925199433]],
                             AXIS["longitude",east,
                                 ORDER[2],
                                 ANGLEUNIT["degree",0.0174532925199433]],
                             AXIS["ellipsoidal height",up,
                                 ORDER[3],
                                 LENGTHUNIT["metre",1]],
                         ID["EPSG",4979]]],
                 ABRIDGEDTRANSFORMATION["unknown to WGS84 ellipsoidal 
height",
                     METHOD["GravityRelatedHeight to Geographic3D"],
                     PARAMETERFILE["Geoid (height correction) model 
file","naptrans2008.gtx",
                         ID["EPSG",8666]]]]]],
     METHOD["PROJ-based operation method (approximate): +proj=pipeline 
+step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg 
+xy_out=rad +step +inv +proj=hgridshift +grids=rdtrans2008.gsb +step 
+proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel"],
     USAGE[
         SCOPE["unknown"],
         AREA["Europe - ETRS89"],
         BBOX[32.88,-16.1,84.17,40.18]]]

Kind Regards,

Bas

From even.rouault at spatialys.com  Mon May  6 02:29:27 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 May 2019 11:29:27 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <f82c260ef6feff6551875805840a1e3d@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <2E885BB293AF0448A0181138489E9A0EAF176157@S000014.PROD.SITAD.DK>
 <f82c260ef6feff6551875805840a1e3d@xs4all.nl>
Message-ID: <12485440.H61UMpZYa6@even-i700>

Bas,

> IIRC epsg:4258 is interpreted as a Geographic 2D CRS which likely causes
> the 3D component to be ignored.

Yes, you should use EPSG:4937 (ETRS89 Geographic 3D CRS), but that will not 
solve the issue with the Z value. The issue here is that in the rdnap:rdnap 
string, the +geoidgrids=naptrans2008.gtx implies a transformation between 
WGS84 3D and the vertical CRS implied by naptrans2008.gtx. But you want to 
transform between ETRS89 3D and that vertical CRS. As there is no 
transformation registered in the EPSG dataset between WGS84 3D and ETRS89 3D 
(there is one only on the 2D part), PROJ cannot use the vertical grid

What works however is completely dropping the use of rdnap:rdnap and using 
EPSG:28992+5709 instead, that is "Amersfoort / RD New + NAP height", as there 
is a transformation registered between ETRS89 and NAP height, which uses the 
naptrans2008.gtx grid

$ echo "53.160753042 4.824761912 42.8614" | \
      PROJ_LIB=$PWD:data src/cs2cs -f "%.4f" EPSG:4937 EPSG:28992+5709
117380.1203	575040.3399 0.9985

Which is close to what you get with PROJ 5.2.0 with
cs2cs -r  -f %.4f +init=epsg:4258 +to +init=rdnap:rdnap:
117380.1203	575040.3398 1.0000

> 
> The projinfo output is not something I can make sense of, it is as
> follows:
> 
> $ PROJ_LIB=.:/usr/share/proj projinfo -s EPSG:4258 -t rdnap:rdnap
> target CRS: parsing of user string failed: crs not found

Note: you can use +init=rdnap:rdnap to resolved in the rdnap file.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Mon May  6 03:29:26 2019
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Mon, 06 May 2019 12:29:26 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <12485440.H61UMpZYa6@even-i700>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <2E885BB293AF0448A0181138489E9A0EAF176157@S000014.PROD.SITAD.DK>
 <f82c260ef6feff6551875805840a1e3d@xs4all.nl> <12485440.H61UMpZYa6@even-i700>
Message-ID: <549ea89d476d077e7d2d591b17edb367@xs4all.nl>

On 2019-05-06 11:29, Even Rouault wrote:
>> IIRC epsg:4258 is interpreted as a Geographic 2D CRS which likely 
>> causes
>> the 3D component to be ignored.
> 
> Yes, you should use EPSG:4937 (ETRS89 Geographic 3D CRS), but that will 
> not
> solve the issue with the Z value. The issue here is that in the 
> rdnap:rdnap
> string, the +geoidgrids=naptrans2008.gtx implies a transformation 
> between
> WGS84 3D and the vertical CRS implied by naptrans2008.gtx. But you want 
> to
> transform between ETRS89 3D and that vertical CRS. As there is no
> transformation registered in the EPSG dataset between WGS84 3D and 
> ETRS89 3D
> (there is one only on the 2D part), PROJ cannot use the vertical grid
> 
> What works however is completely dropping the use of rdnap:rdnap and 
> using
> EPSG:28992+5709 instead, that is "Amersfoort / RD New + NAP height", as 
> there
> is a transformation registered between ETRS89 and NAP height, which 
> uses the
> naptrans2008.gtx grid
> 
> $ echo "53.160753042 4.824761912 42.8614" | \
>       PROJ_LIB=$PWD:data src/cs2cs -f "%.4f" EPSG:4937 EPSG:28992+5709
> 117380.1203	575040.3399 0.9985
> 
> Which is close to what you get with PROJ 5.2.0 with
> cs2cs -r  -f %.4f +init=epsg:4258 +to +init=rdnap:rdnap:
> 117380.1203	575040.3398 1.0000

Using epsg:4937 & epsg:28992+5709 doesn't fix the test failures, while 
the debug output is more extensive, I don't see naptrans2008.gtx being 
used, only rdtrans2008.gsb.

See the attachment.

>> 
>> The projinfo output is not something I can make sense of, it is as
>> follows:
>> 
>> $ PROJ_LIB=.:/usr/share/proj projinfo -s EPSG:4258 -t rdnap:rdnap
>> target CRS: parsing of user string failed: crs not found
> 
> Note: you can use +init=rdnap:rdnap to resolved in the rdnap file.

Thanks for the tip. The syntax needs to be changed to include +type=crs 
I guess, because it still fails:

$ PROJ_LIB=.:/usr/share/proj projinfo -s EPSG:4258 -t +init=rdnap:rdnap
target CRS string is not a CRS

With the updated rdnap init file:

cat rdnap
# RDNAP with NTv2 and VDatum
<rdnap> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel 
+nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m +no_defs 
+type=crs <>

# RD with NTv2 only
<rd> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel 
+nadgrids=rdtrans2008.gsb +units=m +no_defs +type=crs <>

We indeed do get results:

$ PROJ_LIB=.:/usr/share/proj projinfo -s EPSG:4258 -t +init=rdnap:rdnap 
| head -8
Candidate operations found: 1
-------------------------------------
Operation nÂ°1:

unknown id, unknown + unknown to WGS84 + Inverse of ETRS89 to WGS 84 (1) 
+ Transformation from unknown to ETRS89 (ballpark vertical 
transformation, without ellipsoid height to vertical height correction), 
unknown accuracy, Europe - ETRS89, has ballpark transformation

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +inv +proj=hgridshift 
+grids=rdtrans2008.gsb +step +proj=sterea +lat_0=52.1561605555556 
+lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 
+ellps=bessel


That leads to the question: How backwards compatible is +type=crs?

Kind Regards,

Bas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testrdnaptrans2008_epsg4937-epsg28992+5709.log.gz
Type: application/x-gzip
Size: 14895 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/09370c8c/attachment-0001.bin>

From even.rouault at spatialys.com  Mon May  6 03:59:21 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 May 2019 12:59:21 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <549ea89d476d077e7d2d591b17edb367@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <12485440.H61UMpZYa6@even-i700> <549ea89d476d077e7d2d591b17edb367@xs4all.nl>
Message-ID: <6711366.ifcjhh6ZSf@even-i700>

>>  The issue here is that in the
> > rdnap:rdnap
> > string, the +geoidgrids=naptrans2008.gtx implies a transformation
> > between
> > WGS84 3D and the vertical CRS implied by naptrans2008.gtx. But you want
> > to
> > transform between ETRS89 3D and that vertical CRS. As there is no
> > transformation registered in the EPSG dataset between WGS84 3D and
> > ETRS89 3D
> > (there is one only on the 2D part), PROJ cannot use the vertical grid

I've prepared a fix in https://github.com/OSGeo/proj.4/pull/1454 for that 
particular case (it turns out that something in the monster I created still 
manages to use the 2D ETRS89<-->WGS84 transformation):

$ src/projinfo -s EPSG:4937 -t "+proj=sterea +lat_0=52.15616055555555 
+lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel 
+nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m +type=crs 
+no_defs" -o PROJ

Candidate operations found: 1
-------------------------------------
Operation nÂ°1:

unknown id, unknown + unknown to WGS84 + Inverse of ETRS89 to WGS 84 (1) + 
unknown to WGS84 ellipsoidal height + Inverse of ETRS89 to WGS 84 (1), unknown 
accuracy, Europe - ETRS89, at least one grid missing

PROJ string:
+proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad +step 
+proj=axisswap +order=2,1 +step +inv +proj=vgridshift +grids=naptrans2008.gtx 
+multiplier=1 +step +inv +proj=hgridshift +grids=rdtrans2008.gsb +step 
+proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 +k=0.9999079 
+x_0=155000 +y_0=463000 +ellps=bessel

So both grids are used.

> 
> Using epsg:4937 & epsg:28992+5709 doesn't fix the test failures, while
> the debug output is more extensive, I don't see naptrans2008.gtx being
> used, only rdtrans2008.gsb.

OK, I see in the log that you use
Exec:   cs2cs -r +init=epsg:4937 +to +init=epsg:28992+5709 -f %.4f

Just try (without the -r flag and the +init=epsg: prefixes):
cs2cs EPSG:4937 EPSG:28992+5709 -f %.4f

using the +init=epsg: syntax will go in a compatibility mode where the CRS 
will be expanded as a PROJ string as was done in the past, and thus you loose  
information about datums.

> Thanks for the tip. The syntax needs to be changed to include +type=crs
> I guess, because it still fails:

Yes, you need to add +type=crs to disambiguish the case where PROJ strings 
express CRS or coordinate operations

> That leads to the question: How backwards compatible is +type=crs?

Older PROJ versions should happily ignore it.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Mon May  6 04:51:38 2019
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Mon, 06 May 2019 13:51:38 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <6711366.ifcjhh6ZSf@even-i700>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <12485440.H61UMpZYa6@even-i700> <549ea89d476d077e7d2d591b17edb367@xs4all.nl>
 <6711366.ifcjhh6ZSf@even-i700>
Message-ID: <952dc01eb621eb17f0715c27a16b7057@xs4all.nl>

On 2019-05-06 12:59, Even Rouault wrote:
>>>  The issue here is that in the
>> > rdnap:rdnap
>> > string, the +geoidgrids=naptrans2008.gtx implies a transformation
>> > between
>> > WGS84 3D and the vertical CRS implied by naptrans2008.gtx. But you want
>> > to
>> > transform between ETRS89 3D and that vertical CRS. As there is no
>> > transformation registered in the EPSG dataset between WGS84 3D and
>> > ETRS89 3D
>> > (there is one only on the 2D part), PROJ cannot use the vertical grid
> 
> I've prepared a fix in https://github.com/OSGeo/proj.4/pull/1454 for 
> that
> particular case (it turns out that something in the monster I created 
> still
> manages to use the 2D ETRS89<-->WGS84 transformation):
> 
> $ src/projinfo -s EPSG:4937 -t "+proj=sterea +lat_0=52.15616055555555
> +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 
> +ellps=bessel
> +nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m 
> +type=crs
> +no_defs" -o PROJ
> 
> Candidate operations found: 1
> -------------------------------------
> Operation nÂ°1:
> 
> unknown id, unknown + unknown to WGS84 + Inverse of ETRS89 to WGS 84 
> (1) +
> unknown to WGS84 ellipsoidal height + Inverse of ETRS89 to WGS 84 (1), 
> unknown
> accuracy, Europe - ETRS89, at least one grid missing
> 
> PROJ string:
> +proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad +step
> +proj=axisswap +order=2,1 +step +inv +proj=vgridshift 
> +grids=naptrans2008.gtx
> +multiplier=1 +step +inv +proj=hgridshift +grids=rdtrans2008.gsb +step
> +proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 
> +k=0.9999079
> +x_0=155000 +y_0=463000 +ellps=bessel
> 
> So both grids are used.

This change should have no impact when using EPSG:28992+5709 instead of 
+init=rdnap:rdnap, right?

>> Using epsg:4937 & epsg:28992+5709 doesn't fix the test failures, while
>> the debug output is more extensive, I don't see naptrans2008.gtx being
>> used, only rdtrans2008.gsb.
> 
> OK, I see in the log that you use
> Exec:   cs2cs -r +init=epsg:4937 +to +init=epsg:28992+5709 -f %.4f
> 
> Just try (without the -r flag and the +init=epsg: prefixes):
> cs2cs EPSG:4937 EPSG:28992+5709 -f %.4f
> 
> using the +init=epsg: syntax will go in a compatibility mode where the 
> CRS
> will be expanded as a PROJ string as was done in the past, and thus you 
> loose
> information about datums.

Removing the cs2cs args and +init= prefix result in the gtx being used, 
but the magin is still too large.

See the attachment.

>> Thanks for the tip. The syntax needs to be changed to include 
>> +type=crs
>> I guess, because it still fails:
> 
> Yes, you need to add +type=crs to disambiguish the case where PROJ 
> strings
> express CRS or coordinate operations
> 
>> That leads to the question: How backwards compatible is +type=crs?
> 
> Older PROJ versions should happily ignore it.

Thanks for the clarification. For now I've updated the test script to 
use EPSG:28992+5709 instead of +init=rdnap:rdnap, using the latter only 
for PROJ < 6.

Kind Regards,

Bas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testrdnaptrans2008_epsg4937-epsg28992+5709_no+init.log.gz
Type: application/x-gzip
Size: 17768 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/104835ad/attachment-0001.bin>

From even.rouault at spatialys.com  Mon May  6 06:05:20 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 May 2019 15:05:20 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <952dc01eb621eb17f0715c27a16b7057@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <6711366.ifcjhh6ZSf@even-i700> <952dc01eb621eb17f0715c27a16b7057@xs4all.nl>
Message-ID: <3709561.KbI1hIUyIF@even-i700>

> This change should have no impact when using EPSG:28992+5709 instead of
> +init=rdnap:rdnap, right?

yes, no impact

> Removing the cs2cs args and +init= prefix result in the gtx being used,
> but the magin is still too large.
> 
> See the attachment.

ok, so this is on

Test:   10 edge_rd
Exec:   cs2cs EPSG:28992+5709 +to EPSG:4937 -f %.9f
Input:  50000.4500 335999.6700
[...]
Output: 51.003976841	3.891248343 44.739810857
Expect: 51.003976532	3.891247830
Latitude exceeds 1e-08 degrees: 3.08999993592352e-07
Longitude exceeds 1e-08 degrees: 5.12999999813246e-07

With proj 5.2.0:
$ echo "50000.4500 335999.6700" | ~/proj/install-proj-5.2.0/bin/cs2cs  
+init=rdnap:rdnap +to +init=epsg:4258 -f %.9f
3.891248343	51.003976842 44.740002097

And with proj master/6.1
$ echo "50000.4500 335999.6700" | PROJ_LIB=$PWD:data src/cs2cs EPSG:28992+5709 
+to EPSG:4937 -f %.9f
51.003976841	3.891248343 44.739810857

So for lat,long I get almost the same values with both PROJ versions (1e-9 deg 
difference on latitude). Perhaps the test expected result should be updated ?

Even
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Mon May  6 06:22:44 2019
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Mon, 06 May 2019 15:22:44 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <3709561.KbI1hIUyIF@even-i700>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <6711366.ifcjhh6ZSf@even-i700> <952dc01eb621eb17f0715c27a16b7057@xs4all.nl>
 <3709561.KbI1hIUyIF@even-i700>
Message-ID: <63d302e85dc40634965dae80c1e5cb16@xs4all.nl>

On 2019-05-06 15:05, Even Rouault wrote:
>> Removing the cs2cs args and +init= prefix result in the gtx being 
>> used,
>> but the magin is still too large.
>> 
>> See the attachment.
> 
> ok, so this is on
> 
> Test:   10 edge_rd
> Exec:   cs2cs EPSG:28992+5709 +to EPSG:4937 -f %.9f
> Input:  50000.4500 335999.6700
> [...]
> Output: 51.003976841	3.891248343 44.739810857
> Expect: 51.003976532	3.891247830
> Latitude exceeds 1e-08 degrees: 3.08999993592352e-07
> Longitude exceeds 1e-08 degrees: 5.12999999813246e-07
> 
> With proj 5.2.0:
> $ echo "50000.4500 335999.6700" | ~/proj/install-proj-5.2.0/bin/cs2cs
> +init=rdnap:rdnap +to +init=epsg:4258 -f %.9f
> 3.891248343	51.003976842 44.740002097
> 
> And with proj master/6.1
> $ echo "50000.4500 335999.6700" | PROJ_LIB=$PWD:data src/cs2cs 
> EPSG:28992+5709
> +to EPSG:4937 -f %.9f
> 51.003976841	3.891248343 44.739810857
> 
> So for lat,long I get almost the same values with both PROJ versions 
> (1e-9 deg
> difference on latitude). Perhaps the test expected result should be 
> updated ?

Tests 07 - 10 are already handled differently, the "Use of RDTRANS2008 
and NAPTRANS2008.pdf" [0] documents the following:

"
    Points 07 - 10 are outside the region where interpolation between
    either the NLGEO2004 geoid or the RD correction grid points is
    possible. RD is defined only within the region enclosed by the
    following points (in RD), outside this region RD coordinates can
    be computed, but the output should be handled with care.

    Corners of the validity region for RD:
    ââââââââââ¬âââââââââ
    â  x (m) â  y (m) â
    ââââââââââ¼âââââââââ¤
    â 140000 â 630000 â
    â 100000 â 600000 â
    â  80000 â 500000 â
    â  -8000 â 390000 â
    â  -8000 â 335000 â
    â 100000 â 335000 â
    â 160000 â 288000 â
    â 220000 â 288000 â
    â 301000 â 450000 â
    â 301000 â 615000 â
    â 260000 â 630000 â
    ââââââââââ´âââââââââ
"

The other tests (01 - 06) should all pass with values within the allowed 
margin of those expected.

Appendix 2 of the PDF documents the following:

"
  The transformation between ETRS89 and RD/NAP procedure should be tested 
in both directions. The
  rdtrans2008.gsb consists of one parent grid and one child grid, the 
naptrans2008.gtx consists of one
  grid, the bounding boxes of the grids, in Bessel-1841 geographic 
coordinates, are given by:

                      NTv2-parent grid  NTv2-child grid  VDatum-grid
  Latitude Minimum    50Â° 30â 00.000â   50Â° 30â 00.000â  50Â° 30â 00.000â
  Latitude Maximum    55Â° 50â 00.000â   54Â° 00â 00.000â  55Â° 50â 00.000â
  Latitude Interval   00Â° 05â 00.000â   00Â° 00â 30.000â  00Â° 00â 30.000â
  Longitude Minimum   02Â° 30â 00.000â   03Â° 00â 00.000â  02Â° 30â 00.000â
  Longitude Maximum   07Â° 40â 00.000â   07Â° 40â 00.000â  07Â° 40â 00.000â
  Longitude Interval  00Â° 05â 00.000â   00Â° 00â 30.000â  00Â° 01â 00.000â

  The coordinates below are computed with the RDNAPTRANSTM2008. the 
differences when using the
  rdtrans2008.gsb and naptrans2008.gtx grids should not exceed, except 
for point 10 (see limitation 2)
  of the rdtrans2008 NTv2-grid):

  RD x and y coordinates:                      0.001 meters
  NAP heights and ETRS89 ellipsoidal heights:  0.001 meters
  ETRS89 latitude and longitude:               0.00000001 degrees
"

This margin was not exceeded with PROJ 5.2.0 (for tests 01 - 06).

[0] 
https://salsa.debian.org/debian-gis-team/proj-rdnap/blob/debian/2008-8/Use%20of%20RDTRANS2008%20and%20NAPTRANS2008.pdf

Kind Regards,

Bas

From sebastic at xs4all.nl  Mon May  6 08:41:02 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Mon, 6 May 2019 17:41:02 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <63d302e85dc40634965dae80c1e5cb16@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <6711366.ifcjhh6ZSf@even-i700> <952dc01eb621eb17f0715c27a16b7057@xs4all.nl>
 <3709561.KbI1hIUyIF@even-i700> <63d302e85dc40634965dae80c1e5cb16@xs4all.nl>
Message-ID: <2186e294-c6b3-f2d5-3143-3325436297f3@xs4all.nl>

On 5/6/19 3:22 PM, Bas Couwenberg wrote:
> This margin was not exceeded with PROJ 5.2.0 (for tests 01 - 06).

For comparison, see the output of the test script for 5.2.0 & 6.1.0rc1
in the attachments.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testrdnaptrans2008_proj-5.2.0.log
Type: text/x-log
Size: 6857 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/35b054d9/attachment-0003.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testrdnaptrans2008_proj-5.2.0_6.1.0rc1.diff
Type: text/x-patch
Size: 10683 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/35b054d9/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testrdnaptrans2008_proj-6.1.0rc1.log
Type: text/x-log
Size: 6318 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/35b054d9/attachment-0005.bin>

From even.rouault at spatialys.com  Mon May  6 11:02:48 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 May 2019 20:02:48 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <63d302e85dc40634965dae80c1e5cb16@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <3709561.KbI1hIUyIF@even-i700> <63d302e85dc40634965dae80c1e5cb16@xs4all.nl>
Message-ID: <1647036.gua8cZ8sNb@even-i700>

...OK, I didn't realize that the failures where not necessarily at the end of the log file...

1) So one failure is:
""""
Test:   01 Texel
Exec:   cs2cs EPSG:4937 +to EPSG:28992+5709 -f %.4f
Input:  53.160753042 4.824761912 42.8614

Output: 117380.1203	575040.3399 0.9985
Expect: 117380.1200	575040.3400 1.0000
NAP exceeds 0.001 meters: 0.00149999999999995
Test FAILED: From ETRS89 to RD/NAP - 01 Texel
"""

I will save you the details and headaches, but the gist of the issue was that the vertical transformation
and horizontal transformation where applied in the wrong order.
There were 2 separate causes:
- the EPSG dataset doesn't register the interpolationCRS for "ETRS89 to NAP height (1)" vertical transformation (naptrans2008.gtx).
  According to the PDF you provided, this must be the Amersfoort datum. As this information is missing, the code assumes that
  the horizontal CRS to use for vertical transformation is ETRS89.
- The code didn't take properly into account the interpolationCRS for such geog3D <--> compoundCRS transformations

I've addressed both issues by the followup commit
https://github.com/OSGeo/proj.4/pull/1454/commits/ae16cff6877a39903cd049491fbb1d96a4149a96
of
https://github.com/OSGeo/proj.4/pull/1454

With that I now get

echo "53.160753042 4.824761912 42.8614" | PROJ_LIB=$PWD:data src/cs2cs -f %.15f EPSG:4937 +to EPSG:7415
117380.120258881375776	575040.339879254694097 1.000069467784584

(instead of the custom compoundCRS "EPSG:28992+5709", you can equivalently use the registered compoundCRS of the EPSG database "EPSG:7415")

2) For
"""
Test:   07 No_rd&geoid
Exec:   cs2cs EPSG:28992+5709 +to EPSG:4937 -f %.9f
Input:  100000.6700 300000.8900

Output: 50.687420379	4.608971888 0.000000000
Expect: 50.687420405	4.608971812
Latitude exceeds 1e-08 degrees: 2.59999950458223e-08
Longitude exceeds 1e-08 degrees: 7.60000000710193e-08
Test FAILED: From RD/NAP to ETRS89 - 07 No_rd&geoid (Expected output overriden: *	* ^-?(\d+\.\d+|inf)$)
"""

PROJ will indeed detect that the point is outside of the RD grid, and then it will use
the EPSG:15739 "Amersfoort to ETRS89 (3)" Helmert-based transformation. 

$ echo "100000.6700 300000.8900 0" | src/cct -d 9 +proj=pipeline +step +inv +proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +step +proj=push +v_3 +step +proj=cart +ellps=bessel +step +proj=helmert +x=565.2369 +y=50.0087 +z=465.658 +rx=0.406857330322398 +ry=-0.350732676542563 +rz=1.8703473836068 +s=4.0812 +convention=coordinate_frame +step +inv +proj=cart +ellps=GRS80 +step +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1
 50.687420379    4.608971888   0.000000000           inf

I'm not sure how they get their expected result. It should be noted that proj 5.2.0 fails to transform in that case:
$ echo "100000.6700 300000.8900" |  ~/proj/install-proj-5.2.0/bin/cs2cs -f %.15f +init=rdnap:rdnap +to +init=epsg:4258 
Rel. 5.2.0, September 15th, 2018
<cs2cs>: while processing file: <stdin>, line 1
pj_transform(): point not within available datum shift grids
*	* inf

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon May  6 11:41:10 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 May 2019 20:41:10 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <1647036.gua8cZ8sNb@even-i700>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <63d302e85dc40634965dae80c1e5cb16@xs4all.nl> <1647036.gua8cZ8sNb@even-i700>
Message-ID: <1615688.sebsmEfybB@even-i700>

>- the EPSG dataset doesn't register the interpolationCRS for "ETRS89 to NAP
> height (1)" vertical transformation (naptrans2008.gtx). According to the
> PDF you provided, this must be the Amersfoort datum. As this information is
> missing, the code assumes that the horizontal CRS to use for vertical
> transformation is ETRS89. 

OK, I just submitted a change request to EPSG for that. But I then realized 
that currently the EPSG database itself doesn't even have a column for the 
interpolationCRS. This is a PROJ-only addition when I aligned the database 
model on ISO-19111. So I guess that the manual patching I did will remain for 
some time until EPSG upgrades their data model.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Mon May  6 12:21:13 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Mon, 6 May 2019 21:21:13 +0200
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <1647036.gua8cZ8sNb@even-i700>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <3709561.KbI1hIUyIF@even-i700> <63d302e85dc40634965dae80c1e5cb16@xs4all.nl>
 <1647036.gua8cZ8sNb@even-i700>
Message-ID: <dba28590-f29c-1595-8a10-7fd9228b0e1e@xs4all.nl>

On 5/6/19 8:02 PM, Even Rouault wrote:
> ...OK, I didn't realize that the failures where not necessarily at the end of the log file...
> 
> 1) So one failure is:
> """"
> Test:   01 Texel
> Exec:   cs2cs EPSG:4937 +to EPSG:28992+5709 -f %.4f
> Input:  53.160753042 4.824761912 42.8614
> 
> Output: 117380.1203	575040.3399 0.9985
> Expect: 117380.1200	575040.3400 1.0000
> NAP exceeds 0.001 meters: 0.00149999999999995
> Test FAILED: From ETRS89 to RD/NAP - 01 Texel
> """
> 
> I will save you the details and headaches, but the gist of the issue was that the vertical transformation
> and horizontal transformation where applied in the wrong order.
> There were 2 separate causes:
> - the EPSG dataset doesn't register the interpolationCRS for "ETRS89 to NAP height (1)" vertical transformation (naptrans2008.gtx).
>   According to the PDF you provided, this must be the Amersfoort datum. As this information is missing, the code assumes that
>   the horizontal CRS to use for vertical transformation is ETRS89.
> - The code didn't take properly into account the interpolationCRS for such geog3D <--> compoundCRS transformations
> 
> I've addressed both issues by the followup commit
> https://github.com/OSGeo/proj.4/pull/1454/commits/ae16cff6877a39903cd049491fbb1d96a4149a96
> of
> https://github.com/OSGeo/proj.4/pull/1454
> 
> With that I now get
> 
> echo "53.160753042 4.824761912 42.8614" | PROJ_LIB=$PWD:data src/cs2cs -f %.15f EPSG:4937 +to EPSG:7415
> 117380.120258881375776	575040.339879254694097 1.000069467784584
> 
> (instead of the custom compoundCRS "EPSG:28992+5709", you can equivalently use the registered compoundCRS of the EPSG database "EPSG:7415")

That has become quite an impressive PR, thanks!

> 2) For
> """
> Test:   07 No_rd&geoid
> Exec:   cs2cs EPSG:28992+5709 +to EPSG:4937 -f %.9f
> Input:  100000.6700 300000.8900
> 
> Output: 50.687420379	4.608971888 0.000000000
> Expect: 50.687420405	4.608971812
> Latitude exceeds 1e-08 degrees: 2.59999950458223e-08
> Longitude exceeds 1e-08 degrees: 7.60000000710193e-08
> Test FAILED: From RD/NAP to ETRS89 - 07 No_rd&geoid (Expected output overriden: *	* ^-?(\d+\.\d+|inf)$)
> """
> 
> PROJ will indeed detect that the point is outside of the RD grid, and then it will use
> the EPSG:15739 "Amersfoort to ETRS89 (3)" Helmert-based transformation. 
> 
> $ echo "100000.6700 300000.8900 0" | src/cct -d 9 +proj=pipeline +step +inv +proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +step +proj=push +v_3 +step +proj=cart +ellps=bessel +step +proj=helmert +x=565.2369 +y=50.0087 +z=465.658 +rx=0.406857330322398 +ry=-0.350732676542563 +rz=1.8703473836068 +s=4.0812 +convention=coordinate_frame +step +inv +proj=cart +ellps=GRS80 +step +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1
>  50.687420379    4.608971888   0.000000000           inf
> 
> I'm not sure how they get their expected result. It should be noted that proj 5.2.0 fails to transform in that case:
> $ echo "100000.6700 300000.8900" |  ~/proj/install-proj-5.2.0/bin/cs2cs -f %.15f +init=rdnap:rdnap +to +init=epsg:4258 
> Rel. 5.2.0, September 15th, 2018
> <cs2cs>: while processing file: <stdin>, line 1
> pj_transform(): point not within available datum shift grids
> *	* inf

Like test 10 edge_rd, there are coordinates in the output, but exceeding
the margin is ignored to allow the test to succeed. Because as the PDF
documents: "... outside this region RD coordinates can be computed, but
the output should be handled with care.". I don't consider this
indications of issues in proj unlike the failures of the tests within
the RD region. Many thanks for fixing those!

I've added a patch with the changes from #1454 to the proj Debian
package, and with that all the tests succeed again.

Once Travis is happy about the changes, those changes will be included
in RC2?

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From alansnow21 at gmail.com  Mon May  6 16:08:59 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Mon, 6 May 2019 18:08:59 -0500
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <dba28590-f29c-1595-8a10-7fd9228b0e1e@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <3709561.KbI1hIUyIF@even-i700>
 <63d302e85dc40634965dae80c1e5cb16@xs4all.nl> <1647036.gua8cZ8sNb@even-i700>
 <dba28590-f29c-1595-8a10-7fd9228b0e1e@xs4all.nl>
Message-ID: <CAGybdFQP1vbPdRJksABdFhJB=gH-f1nwM8pBxVLuia_LjWFOwQ@mail.gmail.com>

I tested RC1 with pyproj and all of our tests pass with the current
version. Thanks!

On Mon, May 6, 2019 at 2:21 PM Sebastiaan Couwenberg <sebastic at xs4all.nl>
wrote:

> On 5/6/19 8:02 PM, Even Rouault wrote:
> > ...OK, I didn't realize that the failures where not necessarily at the
> end of the log file...
> >
> > 1) So one failure is:
> > """"
> > Test:   01 Texel
> > Exec:   cs2cs EPSG:4937 +to EPSG:28992+5709 -f %.4f
> > Input:  53.160753042 4.824761912 42.8614
> >
> > Output: 117380.1203   575040.3399 0.9985
> > Expect: 117380.1200   575040.3400 1.0000
> > NAP exceeds 0.001 meters: 0.00149999999999995
> > Test FAILED: From ETRS89 to RD/NAP - 01 Texel
> > """
> >
> > I will save you the details and headaches, but the gist of the issue was
> that the vertical transformation
> > and horizontal transformation where applied in the wrong order.
> > There were 2 separate causes:
> > - the EPSG dataset doesn't register the interpolationCRS for "ETRS89 to
> NAP height (1)" vertical transformation (naptrans2008.gtx).
> >   According to the PDF you provided, this must be the Amersfoort datum.
> As this information is missing, the code assumes that
> >   the horizontal CRS to use for vertical transformation is ETRS89.
> > - The code didn't take properly into account the interpolationCRS for
> such geog3D <--> compoundCRS transformations
> >
> > I've addressed both issues by the followup commit
> >
> https://github.com/OSGeo/proj.4/pull/1454/commits/ae16cff6877a39903cd049491fbb1d96a4149a96
> > of
> > https://github.com/OSGeo/proj.4/pull/1454
> >
> > With that I now get
> >
> > echo "53.160753042 4.824761912 42.8614" | PROJ_LIB=$PWD:data src/cs2cs
> -f %.15f EPSG:4937 +to EPSG:7415
> > 117380.120258881375776        575040.339879254694097 1.000069467784584
> >
> > (instead of the custom compoundCRS "EPSG:28992+5709", you can
> equivalently use the registered compoundCRS of the EPSG database
> "EPSG:7415")
>
> That has become quite an impressive PR, thanks!
>
> > 2) For
> > """
> > Test:   07 No_rd&geoid
> > Exec:   cs2cs EPSG:28992+5709 +to EPSG:4937 -f %.9f
> > Input:  100000.6700 300000.8900
> >
> > Output: 50.687420379  4.608971888 0.000000000
> > Expect: 50.687420405  4.608971812
> > Latitude exceeds 1e-08 degrees: 2.59999950458223e-08
> > Longitude exceeds 1e-08 degrees: 7.60000000710193e-08
> > Test FAILED: From RD/NAP to ETRS89 - 07 No_rd&geoid (Expected output
> overriden: *     * ^-?(\d+\.\d+|inf)$)
> > """
> >
> > PROJ will indeed detect that the point is outside of the RD grid, and
> then it will use
> > the EPSG:15739 "Amersfoort to ETRS89 (3)" Helmert-based transformation.
> >
> > $ echo "100000.6700 300000.8900 0" | src/cct -d 9 +proj=pipeline +step
> +inv +proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889
> +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +step +proj=push +v_3
> +step +proj=cart +ellps=bessel +step +proj=helmert +x=565.2369 +y=50.0087
> +z=465.658 +rx=0.406857330322398 +ry=-0.350732676542563 +rz=1.8703473836068
> +s=4.0812 +convention=coordinate_frame +step +inv +proj=cart +ellps=GRS80
> +step +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step
> +proj=axisswap +order=2,1
> >  50.687420379    4.608971888   0.000000000           inf
> >
> > I'm not sure how they get their expected result. It should be noted that
> proj 5.2.0 fails to transform in that case:
> > $ echo "100000.6700 300000.8900" |  ~/proj/install-proj-5.2.0/bin/cs2cs
> -f %.15f +init=rdnap:rdnap +to +init=epsg:4258
> > Rel. 5.2.0, September 15th, 2018
> > <cs2cs>: while processing file: <stdin>, line 1
> > pj_transform(): point not within available datum shift grids
> > *     * inf
>
> Like test 10 edge_rd, there are coordinates in the output, but exceeding
> the margin is ignored to allow the test to succeed. Because as the PDF
> documents: "... outside this region RD coordinates can be computed, but
> the output should be handled with care.". I don't consider this
> indications of issues in proj unlike the failures of the tests within
> the RD region. Many thanks for fixing those!
>
> I've added a patch with the changes from #1454 to the proj Debian
> package, and with that all the tests succeed again.
>
> Once Travis is happy about the changes, those changes will be included
> in RC2?
>
> Kind Regards,
>
> Bas
>
> --
>  GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Alan Snow
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190506/688c0f23/attachment.html>

From nyall.dawson at gmail.com  Mon May  6 16:15:43 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 7 May 2019 09:15:43 +1000
Subject: [PROJ] Getting "proj" and "datum" for a CRS
In-Reply-To: <2616559.WBx6YCxVml@even-i700>
References: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
 <2E885BB293AF0448A0181138489E9A0EAF16AA74@S000014.PROD.SITAD.DK>
 <2616559.WBx6YCxVml@even-i700>
Message-ID: <CAB28Asi6bq3hgPNHGCrpTEsBhmKiS_9s8AX6kUOv6yCJuXpe+w@mail.gmail.com>

On Fri, 3 May 2019 at 17:48, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On vendredi 3 mai 2019 06:52:18 CEST Kristian Evers wrote:
> > Nyall,
> >
> > For 1, try giving proj_pj_info() a go. I am not sure that it will work in
> > all situations (a compound CRS will probably not behave as you might
> > want/expect). Thereâs currently not a similar function for retrieving the
> > ellipsoid id, but it can be added to proj_pj_info() if needed. You are
> > welcome to submit a PR with such a change (if you are quick it can be part
> > of 6.1.0).
>
> I'd note that adding a new member to PJ_PROJ_INFO will change the ABI in a
> incompatible manner. Will/would require a libtool 'current' bump

So is this a -1 on this change? I'm conscious the deadline is closing
for 6.1....

At the moment I'm wondering if I'll need to just resort to a regex to
get this property (argh!) as I'd need that as a fallback for proj 6.0
in any case.

Nyall



>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From even.rouault at spatialys.com  Tue May  7 02:37:53 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 May 2019 11:37:53 +0200
Subject: [PROJ] Getting "proj" and "datum" for a CRS
In-Reply-To: <CAB28Asi6bq3hgPNHGCrpTEsBhmKiS_9s8AX6kUOv6yCJuXpe+w@mail.gmail.com>
References: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
 <2616559.WBx6YCxVml@even-i700>
 <CAB28Asi6bq3hgPNHGCrpTEsBhmKiS_9s8AX6kUOv6yCJuXpe+w@mail.gmail.com>
Message-ID: <2398561.Ift7hR7aMJ@even-i700>

> > I'd note that adding a new member to PJ_PROJ_INFO will change the ABI in a
> > incompatible manner. Will/would require a libtool 'current' bump
> 
> So is this a -1 on this change? I'm conscious the deadline is closing
> for 6.1....

I'm indifferent. Was mostly to bring that to the attention of Kristian.

> 
> At the moment I'm wondering if I'll need to just resort to a regex to
> get this property (argh!) 

In an ideal world, QGIS should avoid messing directly with PROJ strings (I 
guess this is for some backward compatibility reason regarding QGIS API). 
Especially regarding extracting elements from them. Treating the whole string 
as an opaque string might be acceptable, although not the most precise 
representation compared to using WKT or directly the EPSG:XXXX representation 
when available (I know I repeat myself on this, but this is for the education 
of the crowds :-))

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From alexander.njemz at mondula.com  Tue May  7 05:36:16 2019
From: alexander.njemz at mondula.com (Alexander Njemz)
Date: Tue, 07 May 2019 14:36:16 +0200
Subject: [PROJ] Possible error with +datum=potsdam and PROJ >= 5.0.0
Message-ID: <1557232576.8574.31.camel@mondula.com>

Hi,

we noticed differences in transforming geographic data from EPSG:31468
to WGS 84 using ST_Transform on different PostGIS installations and it
seems to come from different PROJ versions. 

For example, we have a point from CAD drawings of the Nuremberg subway
network with the coordinates 4435877.4477166822 5475816.0547993957, so
we know it must be on the train tracks.

Converting this point using PROJ 4.9.3 gives us this point [1] with the
coordinates 11.1148165905971 49.4159011654427 and using PROJ 5.0.1
gives us this point [2] with the coordinates 11.1161576118633
49.4169712194789. However, updating the proj4text in the
spatial_ref_sys table for the srid 31468 from 

+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam
+units=m +no_defs

to

+proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel 
on the PostGIS installation with version 5.0.1 of PROJ again gives
correct results.

PROJ version >= 5.0.0 seems to incorrectly handle conversions using
+datum=potsdam. From [3] one can download test data to verify correct
conversion from DHDN / GK to ETRS89 / UTM. Testing conversion of the
value in line 7 of the downloadable CSV file [4] the results for PROJ
version 4.9.3 and versions >= 5.0.0 differ. I have executed the
following command using PROJ versions 4.9.3, 5.0.0, 5.1.0, and 6.0.0

echo 4395886.918912 5819485.694352 | cs2cs +proj=tmerc +lat_0=0
+lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam +units=m +no_defs +to
+init=epsg:25832

The output for 4.9.3 is:

599474.76	5817502.61 42.57

The output for the other versions is:

599559.03	5817663.04 0.00

Is this a bug in PROJ? And if so, what would be the recommended
workaround?

Kind Regards,


Alexander Njemz



[1]	https://www.google.de/maps/place/49%C2%B024'57.2%22N+11%C2%B
006'53.3%22E/@49.4158889,11.1126169,751m/data=!3m2!1e3!4b1!4m5!3m4!1s0x
0:0x0!8m2!3d49.4159012!4d11.1148166

[2]	https://www.google.de/maps/place/49%C2%B025'01.1%22N+11%C2%B
006'58.2%22E/@49.4169722,11.113978,750m/data=!3m2!1e3!4b1!4m5!3m4!1s0x0
:0x0!8m2!3d49.4169712!4d11.1161576

[3]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/de_dhdn2etr
s_beta.php

[4]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2007tes
tdaten.csv


-- 
------------------------------------
Alexander Njemz
Mondula GmbH

GeschÃ¤ftsfÃ¼hrer Michael Looft, Dr. Jan F. Ortmann
Amtsgericht Hamburg HRB 68092
Gerichtsstand Hamburg

Behringstrasse 28 a, H1, OG2,
22765 Hamburg
fon: ++49 (0)40 - 35 70 33 - 00
fon: ++49 (0)40 - 35 70 33 - 12

mailto:alexander.njemz at mondula.com
mailto:office at mondula.com
http://www.mondula.com
------------------------------------
Diese Email enthÃ¤lt vertrauliche und/oder rechtlich geschÃ¼tzte
Informationen. Wenn Sie nicht der richtige Adressat sind oder diese
Email irrtÃ¼mlich erhalten haben, informieren Sie bitte sofort den
Absender und vernichten Sie diese Mail. Das unerlaubte Kopieren sowie
die unbefugte Weitergabe der Mail ist  nicht gestattet.
------------------------------------
This e-mail may contain confidential and/or privileged information. If
you are not the intended recipient (or have received this e-mail in
error) please notify the sender immediatley and destroy this e-mail.
Any unauthorised copying, disclosure or distribution of the material in
this e-mail is strictly forbidden.
------------------------------------

From kreve at sdfe.dk  Tue May  7 05:48:41 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 7 May 2019 12:48:41 +0000
Subject: [PROJ] Getting "proj" and "datum" for a CRS
In-Reply-To: <2398561.Ift7hR7aMJ@even-i700>
References: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
 <2616559.WBx6YCxVml@even-i700>
 <CAB28Asi6bq3hgPNHGCrpTEsBhmKiS_9s8AX6kUOv6yCJuXpe+w@mail.gmail.com>
 <2398561.Ift7hR7aMJ@even-i700>
Message-ID: <F9A1EAAE-0E68-4512-AD85-76998754D9AA@sdfe.dk>



> On 7 May 2019, at 11:37, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>>> I'd note that adding a new member to PJ_PROJ_INFO will change the ABI in a
>>> incompatible manner. Will/would require a libtool 'current' bump
>> 
>> So is this a -1 on this change? I'm conscious the deadline is closing
>> for 6.1....
> 
> I'm indifferent. Was mostly to bring that to the attention of Kristian.
> 

Thanks :-) I am of the opinion that we should avoid incompatible changes for
this release. When suggested adding more to PJ_PROJ_INFO I didnât realize
that it would affect the ABI.

In addition, after having giving this some more though I think there must be a
better way to deal with this problem. A generic function that can returns all
parameters that make up a PJ object would be preferable. A wrapper for
pj_param() would do the trick but a better way likely exists. 


>> 
>> At the moment I'm wondering if I'll need to just resort to a regex to
>> get this property (argh!) 
> 
> In an ideal world, QGIS should avoid messing directly with PROJ strings (I 
> guess this is for some backward compatibility reason regarding QGIS API). 
> Especially regarding extracting elements from them. Treating the whole string 
> as an opaque string might be acceptable, although not the most precise 
> representation compared to using WKT or directly the EPSG:XXXX representation 
> when available (I know I repeat myself on this, but this is for the education 
> of the crowds :-))
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From kreve at sdfe.dk  Tue May  7 05:50:33 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 7 May 2019 12:50:33 +0000
Subject: [PROJ] PROJ 6.1.0RC1
In-Reply-To: <dba28590-f29c-1595-8a10-7fd9228b0e1e@xs4all.nl>
References: <D9BDDB50-11B3-421B-8EA1-A44D6159300B@sdfe.dk>
 <3709561.KbI1hIUyIF@even-i700> <63d302e85dc40634965dae80c1e5cb16@xs4all.nl>
 <1647036.gua8cZ8sNb@even-i700>
 <dba28590-f29c-1595-8a10-7fd9228b0e1e@xs4all.nl>
Message-ID: <81DC8B15-8C80-4346-B27F-812C43C32631@sdfe.dk>



On 6 May 2019, at 21:21, Sebastiaan Couwenberg <sebastic at xs4all.nl<mailto:sebastic at xs4all.nl>> wrote:

On 5/6/19 8:02 PM, Even Rouault wrote:
...OK, I didn't realize that the failures where not necessarily at the end of the log file...

1) So one failure is:
""""
Test:   01 Texel
Exec:   cs2cs EPSG:4937 +to EPSG:28992+5709 -f %.4f
Input:  53.160753042 4.824761912 42.8614

Output: 117380.1203 575040.3399 0.9985
Expect: 117380.1200 575040.3400 1.0000
NAP exceeds 0.001 meters: 0.00149999999999995
Test FAILED: From ETRS89 to RD/NAP - 01 Texel
"""

I will save you the details and headaches, but the gist of the issue was that the vertical transformation
and horizontal transformation where applied in the wrong order.
There were 2 separate causes:
- the EPSG dataset doesn't register the interpolationCRS for "ETRS89 to NAP height (1)" vertical transformation (naptrans2008.gtx).
 According to the PDF you provided, this must be the Amersfoort datum. As this information is missing, the code assumes that
 the horizontal CRS to use for vertical transformation is ETRS89.
- The code didn't take properly into account the interpolationCRS for such geog3D <--> compoundCRS transformations

I've addressed both issues by the followup commit
https://github.com/OSGeo/proj.4/pull/1454/commits/ae16cff6877a39903cd049491fbb1d96a4149a96
of
https://github.com/OSGeo/proj.4/pull/1454

With that I now get

echo "53.160753042 4.824761912 42.8614" | PROJ_LIB=$PWD:data src/cs2cs -f %.15f EPSG:4937 +to EPSG:7415
117380.120258881375776 575040.339879254694097 1.000069467784584

(instead of the custom compoundCRS "EPSG:28992+5709", you can equivalently use the registered compoundCRS of the EPSG database "EPSG:7415")

That has become quite an impressive PR, thanks!

2) For
"""
Test:   07 No_rd&geoid
Exec:   cs2cs EPSG:28992+5709 +to EPSG:4937 -f %.9f
Input:  100000.6700 300000.8900

Output: 50.687420379 4.608971888 0.000000000
Expect: 50.687420405 4.608971812
Latitude exceeds 1e-08 degrees: 2.59999950458223e-08
Longitude exceeds 1e-08 degrees: 7.60000000710193e-08
Test FAILED: From RD/NAP to ETRS89 - 07 No_rd&geoid (Expected output overriden: * * ^-?(\d+\.\d+|inf)$)
"""

PROJ will indeed detect that the point is outside of the RD grid, and then it will use
the EPSG:15739 "Amersfoort to ETRS89 (3)" Helmert-based transformation.

$ echo "100000.6700 300000.8900 0" | src/cct -d 9 +proj=pipeline +step +inv +proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +step +proj=push +v_3 +step +proj=cart +ellps=bessel +step +proj=helmert +x=565.2369 +y=50.0087 +z=465.658 +rx=0.406857330322398 +ry=-0.350732676542563 +rz=1.8703473836068 +s=4.0812 +convention=coordinate_frame +step +inv +proj=cart +ellps=GRS80 +step +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1
50.687420379    4.608971888   0.000000000           inf

I'm not sure how they get their expected result. It should be noted that proj 5.2.0 fails to transform in that case:
$ echo "100000.6700 300000.8900" |  ~/proj/install-proj-5.2.0/bin/cs2cs -f %.15f +init=rdnap:rdnap +to +init=epsg:4258
Rel. 5.2.0, September 15th, 2018
<cs2cs>: while processing file: <stdin>, line 1
pj_transform(): point not within available datum shift grids
* * inf

Like test 10 edge_rd, there are coordinates in the output, but exceeding
the margin is ignored to allow the test to succeed. Because as the PDF
documents: "... outside this region RD coordinates can be computed, but
the output should be handled with care.". I don't consider this
indications of issues in proj unlike the failures of the tests within
the RD region. Many thanks for fixing those!

I've added a patch with the changes from #1454 to the proj Debian
package, and with that all the tests succeed again.

Once Travis is happy about the changes, those changes will be included
in RC2?

Yes, Even merged the PR earlier today. Iâll release RC2 later today.


Kind Regards,

Bas

--
GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190507/618c5d8d/attachment-0001.html>

From martin.desruisseaux at geomatys.com  Tue May  7 06:20:31 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Tue, 7 May 2019 15:20:31 +0200
Subject: [PROJ] Getting "proj" and "datum" for a CRS
In-Reply-To: <F9A1EAAE-0E68-4512-AD85-76998754D9AA@sdfe.dk>
References: <CAB28AsjgOoK=cSjLz5UmJcDDvxAJjavvtGt-tFeZME7M=X1oMQ@mail.gmail.com>
 <2616559.WBx6YCxVml@even-i700>
 <CAB28Asi6bq3hgPNHGCrpTEsBhmKiS_9s8AX6kUOv6yCJuXpe+w@mail.gmail.com>
 <2398561.Ift7hR7aMJ@even-i700> <F9A1EAAE-0E68-4512-AD85-76998754D9AA@sdfe.dk>
Message-ID: <af3e170c-a40e-792b-5670-747908d1e395@geomatys.com>

Le 07/05/2019 Ã  14:48, Kristian Evers a Ã©critÂ :
> In addition, after having giving this some more though I think there
> must be a better way to deal with this problem. A generic function
> that can returns all parameters that make up a PJ object would be
> preferable. A wrapper for pj_param() would do the trick but a better
> way likely exists.

An array of OperationParameterValue provided by
SingleOperation.parameterValue method? (ISO 19111 figure 16). I do not
know if PROJ6 already implements those classes, but that would be an ISO
approach if PROJ wishes to continue that path.

Â Â Â  Martin



From kreve at sdfe.dk  Tue May  7 12:13:49 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 7 May 2019 19:13:49 +0000
Subject: [PROJ] PROJ 6.1.0RC2
Message-ID: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>

A few issues were found in PROJ 6.1.0RC1, so here is RC2:

https://download.osgeo.org/proj/proj-6.1.0RC2.tar.gz (https://download.osgeo.org/proj/proj-6.1.0RC2.tar.gz.md5)
https://download.osgeo.org/proj/proj-6.1.0RC2.zip (https://download.osgeo.org/proj/proj-6.1.0RC2.zip.md5)

I hope that this is the final release candidate. I still expect to call a vote for
promotion to final release on May 13th.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190507/86e9c5e4/attachment.html>

From even.rouault at spatialys.com  Tue May  7 12:46:25 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 May 2019 21:46:25 +0200
Subject: [PROJ] Possible error with +datum=potsdam and PROJ >= 5.0.0
In-Reply-To: <1557232576.8574.31.camel@mondula.com>
References: <1557232576.8574.31.camel@mondula.com>
Message-ID: <1972503.zc54LGQKl6@even-i700>

Alexander,

In PROJ 4.9.3 and earlier, +datum=potsdam expanded to 
+ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7

In PROJ 5.0.0 and later, +datum=postdam was changed to expand to
+ellps=bessel +nadgrids=@BETA2007.gsb

That is it will use the more precise BETA2007.gsb grid rather than the towgs84 
clause, but this require the grid to be installed alongside other PROJ grids. 
If not present, then no datum shift is done, hence the result you see.

So with PROJ 5.0.0 and later, you could get the same result as PROJ 4.9.3 if 
you don't have the grid installed, by replacing "+datum=potsdam" with
"+ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7"
(I don't understand why you'd get a correct result with just +ellps=bessel 
without a +towgs84 or +nadgrids. That doesn't make sense to me)

With proj 5.2.0

$ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" +proj=tmerc +lat_0=0 
+lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel 
+towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7 +to +init=epsg:25832
599474.7609	5817502.6096 42.5689

With proj 6, things will work transparently:

- with BETA2007.gdb installed, you get exactly the result from the .csv file:

$ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" EPSG:31464 EPSG:25832
599474.9342	5817502.6270 0.0000

- without it installed, it fallbacks to the Helmert transformation

$ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" EPSG:31464 EPSG:25832
599474.7609	5817502.6096 0.0000

Even


> Hi,
> 
> we noticed differences in transforming geographic data from EPSG:31468
> to WGS 84 using ST_Transform on different PostGIS installations and it
> seems to come from different PROJ versions.
> 
> For example, we have a point from CAD drawings of the Nuremberg subway
> network with the coordinates 4435877.4477166822 5475816.0547993957, so
> we know it must be on the train tracks.
> 
> Converting this point using PROJ 4.9.3 gives us this point [1] with the
> coordinates 11.1148165905971 49.4159011654427 and using PROJ 5.0.1
> gives us this point [2] with the coordinates 11.1161576118633
> 49.4169712194789. However, updating the proj4text in the
> spatial_ref_sys table for the srid 31468 from
> 
> +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam
> +units=m +no_defs
> 
> to
> 
> +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel
> on the PostGIS installation with version 5.0.1 of PROJ again gives
> correct results.
> 
> PROJ version >= 5.0.0 seems to incorrectly handle conversions using
> +datum=potsdam. From [3] one can download test data to verify correct
> conversion from DHDN / GK to ETRS89 / UTM. Testing conversion of the
> value in line 7 of the downloadable CSV file [4] the results for PROJ
> version 4.9.3 and versions >= 5.0.0 differ. I have executed the
> following command using PROJ versions 4.9.3, 5.0.0, 5.1.0, and 6.0.0
> 
> echo 4395886.918912 5819485.694352 | cs2cs +proj=tmerc +lat_0=0
> +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam +units=m +no_defs +to
> +init=epsg:25832
> 
> The output for 4.9.3 is:
> 
> 599474.76	5817502.61 42.57
> 
> The output for the other versions is:
> 
> 599559.03	5817663.04 0.00
> 
> Is this a bug in PROJ? And if so, what would be the recommended
> workaround?
> 
> Kind Regards,
> 
> 
> Alexander Njemz
> 
> 
> 
> [1]	https://www.google.de/maps/place/49%C2%B024'57.2%22N+11%C2%B
> 006'53.3%22E/@49.4158889,11.1126169,751m/data=!3m2!1e3!4b1!4m5!3m4!1s0x
> 0:0x0!8m2!3d49.4159012!4d11.1148166
> 
> [2]	https://www.google.de/maps/place/49%C2%B025'01.1%22N+11%C2%B
> 006'58.2%22E/@49.4169722,11.113978,750m/data=!3m2!1e3!4b1!4m5!3m4!1s0x0
> 
> :0x0!8m2!3d49.4169712!4d11.1161576
> 
> [3]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/de_dhdn2etr
> s_beta.php
> 
> [4]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2007tes
> tdaten.csv


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue May  7 12:52:12 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 May 2019 21:52:12 +0200
Subject: [PROJ] Possible error with +datum=potsdam and PROJ >= 5.0.0
In-Reply-To: <1972503.zc54LGQKl6@even-i700>
References: <1557232576.8574.31.camel@mondula.com>
 <1972503.zc54LGQKl6@even-i700>
Message-ID: <12689001.qSS7IDtPmD@even-i700>

Actually, I realize there must be something fishy with your PROJ installation. 
The BETA2007.gsb grid is part of the
https://download.osgeo.org/proj/proj-datumgrid-1.8.zip package which is 
normally installed together with PROJ with usual binary distributions, so the 
changed to expanding to +nadgrids=@BETA2007.gsb was reasonable.
If you compile PROJ from source, you must unzip its content in
${proj_install_prefix}/share/proj

> Alexander,
> 
> In PROJ 4.9.3 and earlier, +datum=potsdam expanded to
> +ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7
> 
> In PROJ 5.0.0 and later, +datum=postdam was changed to expand to
> +ellps=bessel +nadgrids=@BETA2007.gsb
> 
> That is it will use the more precise BETA2007.gsb grid rather than the
> towgs84 clause, but this require the grid to be installed alongside other
> PROJ grids. If not present, then no datum shift is done, hence the result
> you see.
> 
> So with PROJ 5.0.0 and later, you could get the same result as PROJ 4.9.3 if
> you don't have the grid installed, by replacing "+datum=potsdam" with
> "+ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7"
> (I don't understand why you'd get a correct result with just +ellps=bessel
> without a +towgs84 or +nadgrids. That doesn't make sense to me)
> 
> With proj 5.2.0
> 
> $ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" +proj=tmerc
> +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel
> +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7 +to +init=epsg:25832
> 599474.7609	5817502.6096 42.5689
> 
> With proj 6, things will work transparently:
> 
> - with BETA2007.gdb installed, you get exactly the result from the .csv
> file:
> 
> $ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" EPSG:31464
> EPSG:25832 599474.9342	5817502.6270 0.0000
> 
> - without it installed, it fallbacks to the Helmert transformation
> 
> $ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" EPSG:31464
> EPSG:25832 599474.7609	5817502.6096 0.0000
> 
> Even
> 
> > Hi,
> > 
> > we noticed differences in transforming geographic data from EPSG:31468
> > to WGS 84 using ST_Transform on different PostGIS installations and it
> > seems to come from different PROJ versions.
> > 
> > For example, we have a point from CAD drawings of the Nuremberg subway
> > network with the coordinates 4435877.4477166822 5475816.0547993957, so
> > we know it must be on the train tracks.
> > 
> > Converting this point using PROJ 4.9.3 gives us this point [1] with the
> > coordinates 11.1148165905971 49.4159011654427 and using PROJ 5.0.1
> > gives us this point [2] with the coordinates 11.1161576118633
> > 49.4169712194789. However, updating the proj4text in the
> > spatial_ref_sys table for the srid 31468 from
> > 
> > +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam
> > +units=m +no_defs
> > 
> > to
> > 
> > +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel
> > on the PostGIS installation with version 5.0.1 of PROJ again gives
> > correct results.
> > 
> > PROJ version >= 5.0.0 seems to incorrectly handle conversions using
> > +datum=potsdam. From [3] one can download test data to verify correct
> > conversion from DHDN / GK to ETRS89 / UTM. Testing conversion of the
> > value in line 7 of the downloadable CSV file [4] the results for PROJ
> > version 4.9.3 and versions >= 5.0.0 differ. I have executed the
> > following command using PROJ versions 4.9.3, 5.0.0, 5.1.0, and 6.0.0
> > 
> > echo 4395886.918912 5819485.694352 | cs2cs +proj=tmerc +lat_0=0
> > +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam +units=m +no_defs +to
> > +init=epsg:25832
> > 
> > The output for 4.9.3 is:
> > 
> > 599474.76	5817502.61 42.57
> > 
> > The output for the other versions is:
> > 
> > 599559.03	5817663.04 0.00
> > 
> > Is this a bug in PROJ? And if so, what would be the recommended
> > workaround?
> > 
> > Kind Regards,
> > 
> > 
> > Alexander Njemz
> > 
> > 
> > 
> > [1]	https://www.google.de/maps/place/49%C2%B024'57.2%22N+11%C2%B
> > 006'53.3%22E/@49.4158889,11.1126169,751m/data=!3m2!1e3!4b1!4m5!3m4!1s0x
> > 0:0x0!8m2!3d49.4159012!4d11.1148166
> > 
> > [2]	https://www.google.de/maps/place/49%C2%B025'01.1%22N+11%C2%B
> > 006'58.2%22E/@49.4169722,11.113978,750m/data=!3m2!1e3!4b1!4m5!3m4!1s0x0
> > 
> > :0x0!8m2!3d49.4169712!4d11.1161576
> > 
> > [3]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/de_dhdn2etr
> > s_beta.php
> > 
> > [4]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2007tes
> > tdaten.csv


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Tue May  7 14:51:53 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 7 May 2019 14:51:53 -0700
Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav files?
Message-ID: <CACmBxytj1pE5wWTXLYctJoRuYV8KLOZZWtqp=bgphoRkmvz2og@mail.gmail.com>

Hi all,

I figured I should ask here too if anyone know what the correct projection
is for the Sandwell .img grids from http://topex.ucsd.edu.  I'm trying to
keep the files in their original projections as I switch them to geotiffs.
I've asked David Sandwell directly too if he knows.

This works, but warps the data first:

gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gtest2.grd -T1 -D
gdal_translate -a_srs EPSG:4326 test2.grd test2.tif
gdalinfo test2.tif  # Results look believable
gdal_translate topo-18-1-epsg4326.tif topo-18-1-epsg4326-deflate.tif -co
COMPRESS=DEFLATE -co PREDICTOR=3

Then imported into QGIS or Earth Engine as a normal user, things line up
pretty well.

    https://code.earthengine.google.com/f43c8b13bafa26fd8c7f83ce9a919f6e


I'd rather do it more like this:

gmt img2grd -V -R-180/180/-80/80 topo_18.1.img
-Gspherical-mercator-proj.grd -T1 -D -M
img2grd: Expects topo_18.1.img to be 21600 by 17280 pixels spanning
0/360.0/-80.738009/80.738009.
img2grd: To fit [averaged] input, your topo_18.1.img is adjusted to
-R-180/180/-80.0023237126/80.0023237126.
img2grd: The output grid size will be 21600 by 16752 pixels.
img2grd: Created 21600 by 16752 Mercatorized grid file.  Min, Max values
are -10914  8550

gives this which doesn't work as is:

gdalinfo spherical-mercator-proj.grd
Driver: netCDF/Network Common Data Format
Files: spherical-mercator-proj.grd
Size is 21600, 16752
Coordinate System is `'
Origin = (0.000000000000000,279.199999999999989)
Pixel Size = (0.016666666666667,-0.016666666666667)
Metadata:
  NC_GLOBAL#Conventions=COARDS, CF-1.5
  NC_GLOBAL#description=Spherical Mercator Projected with -Jm1
-R0/360/-80.0023237126/80.0023237126
  NC_GLOBAL#GMT_version=5.4.3 (r19528) [64-bit]

Should I be using one of 54004 or 41001?  e.g.
https://epsg.io/?q=spherical+mercator

Thanks!
-kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190507/9dea0069/attachment.html>

From jmfluis at gmail.com  Tue May  7 18:52:11 2019
From: jmfluis at gmail.com (jmfluis at gmail.com)
Date: Wed, 8 May 2019 02:52:11 +0100
Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav
	files?
In-Reply-To: <CACmBxytj1pE5wWTXLYctJoRuYV8KLOZZWtqp=bgphoRkmvz2og@mail.gmail.com>
References: <CACmBxytj1pE5wWTXLYctJoRuYV8KLOZZWtqp=bgphoRkmvz2og@mail.gmail.com>
Message-ID: <007501d50540$a762bf10$f6283d30$@gmail.com>

The IMG grids are spherical Mercator inches so there is likely no EPSG or WKT that represents that. But you can do all the work in GMT.

 

1- Convert to netcdf, maintaining the Merc projection, but change the origin to (0,0) (it was in the LL corner). Thatâs the role of -C

 

img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd -T1 -D -M -C

 

2- Edit the header to convert the inches to Mercator meters. The grid above has x_min = -180; x_max = 180.

And that corresponds to 6378137 *2pi = 4.007501668557849e7  meters. So we can compute a scale factor of 

 

111319.49079327358 = 6378137 *2pi / 360

 

and apply it to the region in degrees.

 

[-180 180 -139.6 139.6] .* 111319.49079327358 = -20037508.3427892 20037508.3427892 -15540200.914741 15540200.914741

 

So finaly use grdedit to change the limits and assign it a proj4 string describing the projection

 

grdedit spherical-mercator-proj.grd -R-20037508.3427892/20037508.3427892/-15540200.914741/15540200.914741 -J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 +units=m +no_defs"

 

You can now confirm with gdalinfo

 

C:\v>gdalinfo spherical-mercator-proj.grd

Warning 1: dimension #1 (x) is not a Longitude/X dimension.

Warning 1: dimension #0 (y) is not a Latitude/Y dimension.

Driver: netCDF/Network Common Data Format

Files: spherical-mercator-proj.grd

Size is 21600, 16752

Coordinate System is:

PROJCS["unnamed",

    GEOGCS["unnamed ellipse",

        DATUM["unknown",

            SPHEROID["unnamed",6378137,0]],

        PRIMEM["Greenwich",0],

        UNIT["degree",0.0174532925199433]],

    PROJECTION["Mercator_1SP"],

    PARAMETER["central_meridian",0],

    PARAMETER["scale_factor",1],

    PARAMETER["false_easting",0],

    PARAMETER["false_northing",0],

    UNIT["Meter",1]]

Origin = (-20037148.342789199000000,15540200.914741000000000)

Pixel Size = (1855.324846554555500,-1855.324846554560700)

Metadata:

  grid_mapping#spatial_ref=PROJCS["unnamed",

    GEOGCS["unnamed ellipse",

        DATUM["unknown",

            SPHEROID["unnamed",6378137,0]],

        PRIMEM["Greenwich",0],

        UNIT["degree",0.0174532925199433]],

    PROJECTION["Mercator_1SP"],

    PARAMETER["central_meridian",0],

    PARAMETER["scale_factor",1],

    PARAMETER["false_easting",0],

    PARAMETER["false_northing",0],

    UNIT["Meter",1]]

  NC_GLOBAL#Conventions=CF-1.7

  NC_GLOBAL#description=Spherical Mercator Projected with -Jm1 -R-180/180/-80.0023237126/80.0023237126

  NC_GLOBAL#GMT_version=6.0.0_bcb87fa-dirty_2019.05.07 [64-bit] [MP]

  NC_GLOBAL#history=img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd -T1 -D -M -C

  NC_GLOBAL#node_offset=1

  NC_GLOBAL#title=Data from Altimetry

  x#actual_range={-20037148.3427892,20037868.3427892}

  x#long_name=x_units

  y#actual_range={-15540200.914741,15540200.914741}

  y#long_name=y_units

  z#actual_range={-10914,8550}

  z#grid_mapping=grid_mapping

  z#long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on img file and -S.

  z#_FillValue=-1.#IND

Corner Coordinates:

Upper Left  (-20037148.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)

Lower Left  (-20037148.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)

Upper Right (20037868.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)

Lower Right (20037868.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)

Center      (     360.000,       0.000) (  0d 0'11.64"E,  0d 0' 0.01"N)

Band 1 Block=21600x1 Type=Float32, ColorInterp=Undefined

  NoData Value=nan

  Metadata:

    actual_range={-10914,8550}

    grid_mapping=grid_mapping

    long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on img file and -S.

    NETCDF_VARNAME=z

    _FillValue=-1.#IND

 

 

Joaquim

(with Paulâs help for the scaling factor)

 

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Kurt Schwehr
Sent: Tuesday, May 7, 2019 10:52 PM
To: PROJ <proj at lists.osgeo.org>
Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav files?

 

Hi all,

 

I figured I should ask here too if anyone know what the correct projection is for the Sandwell .img grids from http://topex.ucsd.edu.  I'm trying to keep the files in their original projections as I switch them to geotiffs.  I've asked David Sandwell directly too if he knows.

 

This works, but warps the data first:

 

gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gtest2.grd -T1 -D

gdal_translate -a_srs EPSG:4326 test2.grd test2.tif

gdalinfo test2.tif  # Results look believable

gdal_translate topo-18-1-epsg4326.tif topo-18-1-epsg4326-deflate.tif -co COMPRESS=DEFLATE -co PREDICTOR=3

 

Then imported into QGIS or Earth Engine as a normal user, things line up pretty well.

 

    https://code.earthengine.google.com/f43c8b13bafa26fd8c7f83ce9a919f6e

 

 

I'd rather do it more like this:

 

gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gspherical-mercator-proj.grd -T1 -D -M

img2grd: Expects topo_18.1.img to be 21600 by 17280 pixels spanning 0/360.0/-80.738009/80.738009.

img2grd: To fit [averaged] input, your topo_18.1.img is adjusted to -R-180/180/-80.0023237126/80.0023237126.

img2grd: The output grid size will be 21600 by 16752 pixels.

img2grd: Created 21600 by 16752 Mercatorized grid file.  Min, Max values are -10914  8550

 

gives this which doesn't work as is:

 

gdalinfo spherical-mercator-proj.grd

Driver: netCDF/Network Common Data Format

Files: spherical-mercator-proj.grd

Size is 21600, 16752

Coordinate System is `'

Origin = (0.000000000000000,279.199999999999989)

Pixel Size = (0.016666666666667,-0.016666666666667)

Metadata:

  NC_GLOBAL#Conventions=COARDS, CF-1.5

  NC_GLOBAL#description=Spherical Mercator Projected with -Jm1 -R0/360/-80.0023237126/80.0023237126

  NC_GLOBAL#GMT_version=5.4.3 (r19528) [64-bit]

 

Should I be using one of 54004 or 41001?  e.g. https://epsg.io/?q=spherical+mercator

 

Thanks!

-kurt

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190508/e6dbe2c6/attachment-0001.html>

From a.furieri at lqt.it  Wed May  8 02:14:19 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Wed, 08 May 2019 11:14:19 +0200
Subject: [PROJ] =?utf-8?b?UFJPSiA2LjEuMFJDMjogaXQncyBhIGJ1ZyA/?=
In-Reply-To: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
Message-ID: <34d36c900f1a87830a2f7b0dc672b755@lqt.it>

the following C code snippet raises an unexpected exception:

PJ *p1;
PJ *p2;
PJ_CONTEXT *ctx = proj_create_context();
p1 = proj_create_crs_to_crs(ctx, "EPSG:4326", "EPSG:3003", NULL);
p2 = proj_normalize_for_visualization(ctx, p1);

proj_normalize_for_visualization:
Object is not a CoordinateOperation created with proj_create_crs_to_crs

bye Sandro

From even.rouault at spatialys.com  Wed May  8 03:01:48 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 May 2019 12:01:48 +0200
Subject: [PROJ] PROJ 6.1.0RC2: it's a bug ?
In-Reply-To: <34d36c900f1a87830a2f7b0dc672b755@lqt.it>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <34d36c900f1a87830a2f7b0dc672b755@lqt.it>
Message-ID: <4011250.X5elrayOQx@even-i700>

On mercredi 8 mai 2019 11:14:19 CEST a.furieri at lqt.it wrote:
> the following C code snippet raises an unexpected exception:
> 
> PJ *p1;
> PJ *p2;
> PJ_CONTEXT *ctx = proj_create_context();
> p1 = proj_create_crs_to_crs(ctx, "EPSG:4326", "EPSG:3003", NULL);
> p2 = proj_normalize_for_visualization(ctx, p1);
> 
> proj_normalize_for_visualization:
> Object is not a CoordinateOperation created with proj_create_crs_to_crs
> 

Yes, this is a bug.
I've prepared a fix for it in
https://github.com/OSGeo/proj.4/pull/1459

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From alexander.njemz at mondula.com  Wed May  8 06:46:43 2019
From: alexander.njemz at mondula.com (Alexander Njemz)
Date: Wed, 08 May 2019 15:46:43 +0200
Subject: [PROJ] Possible error with +datum=potsdam and PROJ >= 5.0.0
In-Reply-To: <12689001.qSS7IDtPmD@even-i700>
References: <1557232576.8574.31.camel@mondula.com>
 <1972503.zc54LGQKl6@even-i700> <12689001.qSS7IDtPmD@even-i700>
Message-ID: <1557323203.2980.6.camel@mondula.com>

On Tue, 2019-05-07 at 21:52 +0200, Even Rouault wrote:
> Actually, I realize there must be something fishy with your PROJ
> installation. 
> The BETA2007.gsb grid is part of the
> https://download.osgeo.org/proj/proj-datumgrid-1.8.zip package which
> is 
> normally installed together with PROJ with usual binary
> distributions, so the 
> changed to expanding to +nadgrids=@BETA2007.gsb was reasonable.
> If you compile PROJ from source, you must unzip its content in
> ${proj_install_prefix}/share/proj

Ok, thank you. That makes a lot of sense. It is a little unfortunate
that there is no warning or anything when BETA2007.gsb is not
available. 

I was using a PostGIS Docker image based on Alpine Linux and indeed,
the grid file is not there. I will try to contact the maintainer of the
PROJ package for Alpine Linux, and ask him if he could update the
package. 

Thanks again.

Best,

Alexander

> 
> > Alexander,
> > 
> > In PROJ 4.9.3 and earlier, +datum=potsdam expanded to
> > +ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7
> > 
> > In PROJ 5.0.0 and later, +datum=postdam was changed to expand to
> > +ellps=bessel +nadgrids=@BETA2007.gsb
> > 
> > That is it will use the more precise BETA2007.gsb grid rather than
> > the
> > towgs84 clause, but this require the grid to be installed alongside
> > other
> > PROJ grids. If not present, then no datum shift is done, hence the
> > result
> > you see.
> > 
> > So with PROJ 5.0.0 and later, you could get the same result as PROJ
> > 4.9.3 if
> > you don't have the grid installed, by replacing "+datum=potsdam"
> > with
> > "+ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7"
> > (I don't understand why you'd get a correct result with just
> > +ellps=bessel
> > without a +towgs84 or +nadgrids. That doesn't make sense to me)
> > 
> > With proj 5.2.0
> > 
> > $ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f"
> > +proj=tmerc
> > +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel
> > +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7 +to
> > +init=epsg:25832
> > 599474.7609	5817502.6096 42.5689
> > 
> > With proj 6, things will work transparently:
> > 
> > - with BETA2007.gdb installed, you get exactly the result from the
> > .csv
> > file:
> > 
> > $ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" EPSG:31464
> > EPSG:25832 599474.9342	5817502.6270 0.0000
> > 
> > - without it installed, it fallbacks to the Helmert transformation
> > 
> > $ echo "4395886.918912 5819485.694352" | cs2cs -f "%.4f" EPSG:31464
> > EPSG:25832 599474.7609	5817502.6096 0.0000
> > 
> > Even
> > 
> > > Hi,
> > > 
> > > we noticed differences in transforming geographic data from
> > > EPSG:31468
> > > to WGS 84 using ST_Transform on different PostGIS installations
> > > and it
> > > seems to come from different PROJ versions.
> > > 
> > > For example, we have a point from CAD drawings of the Nuremberg
> > > subway
> > > network with the coordinates 4435877.4477166822
> > > 5475816.0547993957, so
> > > we know it must be on the train tracks.
> > > 
> > > Converting this point using PROJ 4.9.3 gives us this point [1]
> > > with the
> > > coordinates 11.1148165905971 49.4159011654427 and using PROJ
> > > 5.0.1
> > > gives us this point [2] with the coordinates 11.1161576118633
> > > 49.4169712194789. However, updating the proj4text in the
> > > spatial_ref_sys table for the srid 31468 from
> > > 
> > > +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
> > > +datum=potsdam
> > > +units=m +no_defs
> > > 
> > > to
> > > 
> > > +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
> > > +ellps=bessel
> > > on the PostGIS installation with version 5.0.1 of PROJ again
> > > gives
> > > correct results.
> > > 
> > > PROJ version >= 5.0.0 seems to incorrectly handle conversions
> > > using
> > > +datum=potsdam. From [3] one can download test data to verify
> > > correct
> > > conversion from DHDN / GK to ETRS89 / UTM. Testing conversion of
> > > the
> > > value in line 7 of the downloadable CSV file [4] the results for
> > > PROJ
> > > version 4.9.3 and versions >= 5.0.0 differ. I have executed the
> > > following command using PROJ versions 4.9.3, 5.0.0, 5.1.0, and
> > > 6.0.0
> > > 
> > > echo 4395886.918912 5819485.694352 | cs2cs +proj=tmerc +lat_0=0
> > > +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +datum=potsdam +units=m
> > > +no_defs +to
> > > +init=epsg:25832
> > > 
> > > The output for 4.9.3 is:
> > > 
> > > 599474.76	5817502.61 42.57
> > > 
> > > The output for the other versions is:
> > > 
> > > 599559.03	5817663.04 0.00
> > > 
> > > Is this a bug in PROJ? And if so, what would be the recommended
> > > workaround?
> > > 
> > > Kind Regards,
> > > 
> > > 
> > > Alexander Njemz
> > > 
> > > 
> > > 
> > > [1]	https://www.google.de/maps/place/49%C2%B024'57.2%22N+1
> > > 1%C2%B
> > > 006'53.3%22E/@49.4158889,11.1126169,751m/data=!3m2!1e3!4b1!4m5!3m
> > > 4!1s0x
> > > 0:0x0!8m2!3d49.4159012!4d11.1148166
> > > 
> > > [2]	https://www.google.de/maps/place/49%C2%B025'01.1%22N+1
> > > 1%C2%B
> > > 006'58.2%22E/@49.4169722,11.113978,750m/data=!3m2!1e3!4b1!4m5!3m4
> > > !1s0x0
> > > 
> > > :0x0!8m2!3d49.4169712!4d11.1161576
> > > 
> > > [3]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/de_dh
> > > dn2etr
> > > s_beta.php
> > > 
> > > [4]	http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2
> > > 007tes
> > > tdaten.csv
> 
> 
-- 
------------------------------------
Alexander Njemz
Mondula GmbH

GeschÃ¤ftsfÃ¼hrer Michael Looft, Dr. Jan F. Ortmann
Amtsgericht Hamburg HRB 68092
Gerichtsstand Hamburg

Behringstrasse 28 a, H1, OG2,
22765 Hamburg
fon: ++49 (0)40 - 35 70 33 - 00
fon: ++49 (0)40 - 35 70 33 - 12

mailto:alexander.njemz at mondula.com
mailto:office at mondula.com
http://www.mondula.com
------------------------------------
Diese Email enthÃ¤lt vertrauliche und/oder rechtlich geschÃ¼tzte
Informationen. Wenn Sie nicht der richtige Adressat sind oder diese
Email irrtÃ¼mlich erhalten haben, informieren Sie bitte sofort den
Absender und vernichten Sie diese Mail. Das unerlaubte Kopieren sowie
die unbefugte Weitergabe der Mail ist  nicht gestattet.
------------------------------------
This e-mail may contain confidential and/or privileged information. If
you are not the intended recipient (or have received this e-mail in
error) please notify the sender immediatley and destroy this e-mail.
Any unauthorised copying, disclosure or distribution of the material in
this e-mail is strictly forbidden.
------------------------------------

From even.rouault at spatialys.com  Wed May  8 06:58:57 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 May 2019 15:58:57 +0200
Subject: [PROJ] PROJ 6.1.0RC2: it's a bug ?
In-Reply-To: <4011250.X5elrayOQx@even-i700>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <34d36c900f1a87830a2f7b0dc672b755@lqt.it> <4011250.X5elrayOQx@even-i700>
Message-ID: <2623900.Kk6HVcXu8m@even-i700>

On mercredi 8 mai 2019 12:01:48 CEST Even Rouault wrote:
> On mercredi 8 mai 2019 11:14:19 CEST a.furieri at lqt.it wrote:
> > the following C code snippet raises an unexpected exception:
> > 
> > PJ *p1;
> > PJ *p2;
> > PJ_CONTEXT *ctx = proj_create_context();
> > p1 = proj_create_crs_to_crs(ctx, "EPSG:4326", "EPSG:3003", NULL);
> > p2 = proj_normalize_for_visualization(ctx, p1);
> > 
> > proj_normalize_for_visualization:
> > Object is not a CoordinateOperation created with proj_create_crs_to_crs
> 
> Yes, this is a bug.
> I've prepared a fix for it in
> https://github.com/OSGeo/proj.4/pull/1459

merged in master and backported to 6.1

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Wed May  8 07:03:11 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 8 May 2019 14:03:11 +0000
Subject: [PROJ] PROJ 6.1.0RC2: it's a bug ?
In-Reply-To: <2623900.Kk6HVcXu8m@even-i700>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <34d36c900f1a87830a2f7b0dc672b755@lqt.it> <4011250.X5elrayOQx@even-i700>
 <2623900.Kk6HVcXu8m@even-i700>
Message-ID: <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>


> On 8 May 2019, at 15:58, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On mercredi 8 mai 2019 12:01:48 CEST Even Rouault wrote:
>> On mercredi 8 mai 2019 11:14:19 CEST a.furieri at lqt.it wrote:
>>> the following C code snippet raises an unexpected exception:
>>> 
>>> PJ *p1;
>>> PJ *p2;
>>> PJ_CONTEXT *ctx = proj_create_context();
>>> p1 = proj_create_crs_to_crs(ctx, "EPSG:4326", "EPSG:3003", NULL);
>>> p2 = proj_normalize_for_visualization(ctx, p1);
>>> 
>>> proj_normalize_for_visualization:
>>> Object is not a CoordinateOperation created with proj_create_crs_to_crs
>> 
>> Yes, this is a bug.
>> I've prepared a fix for it in
>> https://github.com/OSGeo/proj.4/pull/1459
> 
> merged in master and backported to 6.1
> 

All

That also means we will have an RC3. Iâll try to find the time to put it up tomorrow,
otherwise early on Friday. I would really like that one to be the last RC, so if you 
havenât tested RC2 yet please do so and report any issues you find.

/Kristian

> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From a.furieri at lqt.it  Wed May  8 07:36:02 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Wed, 08 May 2019 16:36:02 +0200
Subject: [PROJ] =?utf-8?b?UFJPSiA2LjEuMFJDMjogaXQncyBhIGJ1ZyA/?=
In-Reply-To: <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <34d36c900f1a87830a2f7b0dc672b755@lqt.it> <4011250.X5elrayOQx@even-i700>
 <2623900.Kk6HVcXu8m@even-i700>
 <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
Message-ID: <04a98ece0b04f759752f6794cb87ba32@lqt.it>

On Wed, 8 May 2019 14:03:11 +0000, Kristian Evers wrote:
>> On 8 May 2019, at 15:58, Even Rouault <even.rouault at spatialys.com> 
>> wrote:
>>
>> On mercredi 8 mai 2019 12:01:48 CEST Even Rouault wrote:
>>> On mercredi 8 mai 2019 11:14:19 CEST a.furieri at lqt.it wrote:
>>>> the following C code snippet raises an unexpected exception:
>>>>
>>>> PJ *p1;
>>>> PJ *p2;
>>>> PJ_CONTEXT *ctx = proj_create_context();
>>>> p1 = proj_create_crs_to_crs(ctx, "EPSG:4326", "EPSG:3003", NULL);
>>>> p2 = proj_normalize_for_visualization(ctx, p1);
>>>>
>>>> proj_normalize_for_visualization:
>>>> Object is not a CoordinateOperation created with 
>>>> proj_create_crs_to_crs
>>>
>>> Yes, this is a bug.
>>> I've prepared a fix for it in
>>> https://github.com/OSGeo/proj.4/pull/1459
>>
>> merged in master and backported to 6.1
>>
>
> All
>
> That also means we will have an RC3. Iâll try to find the time to put
> it up tomorrow,
> otherwise early on Friday. I would really like that one to be the
> last RC, so if you
> havenât tested RC2 yet please do so and report any issues you find.
>

I'm really sorry, but I've found a further issue.
proj_normalize_for_visualization crashes on default context:

PJ *p1;
PJ *p2;
p1 = proj_create_crs_to_crs(NULL, "EPSG:4326", "EPSG:3003", NULL);
p2 = proj_normalize_for_visualization(NULL, p1);

and this is what Valgrind reports:

==10039== Invalid read of size 8
==10039==    at 0x4F953CA: getDBcontext(projCtx_t*) (c_api.cpp:116)
==10039==    by 0x4F954E4: getDBcontextNoException(projCtx_t*, char 
const*) (c_api.cpp:127)
==10039==    by 0x4F95582: pj_obj_create(projCtx_t*, 
dropbox::oxygen::nn<std::shared_ptr<osgeo::proj::common::IdentifiedObject> 
 > const&) (c_api.cpp:138)
==10039==    by 0x4F9EC37: proj_normalize_for_visualization 
(c_api.cpp:6836)
==10039==    by 0x400762: main (in /home/sandro/Scaricati/test_proj)
==10039==  Address 0x20 is not stack'd, malloc'd or (recently) free'd
==10039==
==10039==
==10039== Process terminating with default action of signal 11 
(SIGSEGV): dumping core

bye Sandro


From schwehr at gmail.com  Wed May  8 08:11:17 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 8 May 2019 08:11:17 -0700
Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav
	files?
In-Reply-To: <007501d50540$a762bf10$f6283d30$@gmail.com>
References: <CACmBxytj1pE5wWTXLYctJoRuYV8KLOZZWtqp=bgphoRkmvz2og@mail.gmail.com>
 <007501d50540$a762bf10$f6283d30$@gmail.com>
Message-ID: <CACmBxyup9b74WjQHcWneYgSOJ9rOFNkr8+hcFnD-rMg9Ks01bw@mail.gmail.com>

Thanks!  I'll be investigating more today.  Monica Schwehr mentioned that
you have a different Earth radius than she was seeing in the GMT code
base.  I'll follow up on that after I get a chance to look through GMT head
and GMT 4 more.

On Tue, May 7, 2019 at 6:52 PM <jmfluis at gmail.com> wrote:

> The IMG grids are spherical Mercator inches so there is likely no EPSG or
> WKT that represents that. But you can do all the work in GMT.
>
>
>
> 1- Convert to netcdf, maintaining the Merc projection, but change the
> origin to (0,0) (it was in the LL corner). Thatâs the role of -C
>
>
>
> img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd -T1
> -D -M -C
>
>
>
> 2- Edit the header to convert the inches to Mercator meters. The grid
> above has x_min = -180; x_max = 180.
>
> And that corresponds to 6378137 *2pi = 4.007501668557849e7  meters. So we
> can compute a scale factor of
>
>
>
> 111319.49079327358 = 6378137 *2pi / 360
>
>
>
> and apply it to the region in degrees.
>
>
>
> [-180 180 -139.6 139.6] .* 111319.49079327358 = -20037508.3427892
> 20037508.3427892 -15540200.914741 15540200.914741
>
>
>
> So finaly use grdedit to change the limits and assign it a proj4 string
> describing the projection
>
>
>
> grdedit spherical-mercator-proj.grd
> -R-20037508.3427892/20037508.3427892/-15540200.914741/15540200.914741
> -J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 +units=m
> +no_defs"
>
>
>
> You can now confirm with gdalinfo
>
>
>
> C:\v>gdalinfo spherical-mercator-proj.grd
>
> Warning 1: dimension #1 (x) is not a Longitude/X dimension.
>
> Warning 1: dimension #0 (y) is not a Latitude/Y dimension.
>
> Driver: netCDF/Network Common Data Format
>
> Files: spherical-mercator-proj.grd
>
> Size is 21600, 16752
>
> Coordinate System is:
>
> PROJCS["unnamed",
>
>     GEOGCS["unnamed ellipse",
>
>         DATUM["unknown",
>
>             SPHEROID["unnamed",6378137,0]],
>
>         PRIMEM["Greenwich",0],
>
>         UNIT["degree",0.0174532925199433]],
>
>     PROJECTION["Mercator_1SP"],
>
>     PARAMETER["central_meridian",0],
>
>     PARAMETER["scale_factor",1],
>
>     PARAMETER["false_easting",0],
>
>     PARAMETER["false_northing",0],
>
>     UNIT["Meter",1]]
>
> Origin = (-20037148.342789199000000,15540200.914741000000000)
>
> Pixel Size = (1855.324846554555500,-1855.324846554560700)
>
> Metadata:
>
>   grid_mapping#spatial_ref=PROJCS["unnamed",
>
>     GEOGCS["unnamed ellipse",
>
>         DATUM["unknown",
>
>             SPHEROID["unnamed",6378137,0]],
>
>         PRIMEM["Greenwich",0],
>
>         UNIT["degree",0.0174532925199433]],
>
>     PROJECTION["Mercator_1SP"],
>
>     PARAMETER["central_meridian",0],
>
>     PARAMETER["scale_factor",1],
>
>     PARAMETER["false_easting",0],
>
>     PARAMETER["false_northing",0],
>
>     UNIT["Meter",1]]
>
>   NC_GLOBAL#Conventions=CF-1.7
>
>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1
> -R-180/180/-80.0023237126/80.0023237126
>
>   NC_GLOBAL#GMT_version=6.0.0_bcb87fa-dirty_2019.05.07 [64-bit] [MP]
>
>   NC_GLOBAL#history=img2grd -R-180/180/-80/80 topo_19.1.img
> -Gspherical-mercator-proj.grd -T1 -D -M -C
>
>   NC_GLOBAL#node_offset=1
>
>   NC_GLOBAL#title=Data from Altimetry
>
>   x#actual_range={-20037148.3427892,20037868.3427892}
>
>   x#long_name=x_units
>
>   y#actual_range={-15540200.914741,15540200.914741}
>
>   y#long_name=y_units
>
>   z#actual_range={-10914,8550}
>
>   z#grid_mapping=grid_mapping
>
>   z#long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on img
> file and -S.
>
>   z#_FillValue=-1.#IND
>
> Corner Coordinates:
>
> Upper Left  (-20037148.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>
> Lower Left  (-20037148.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>
> Upper Right (20037868.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>
> Lower Right (20037868.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>
> Center      (     360.000,       0.000) (  0d 0'11.64"E,  0d 0' 0.01"N)
>
> Band 1 Block=21600x1 Type=Float32, ColorInterp=Undefined
>
>   NoData Value=nan
>
>   Metadata:
>
>     actual_range={-10914,8550}
>
>     grid_mapping=grid_mapping
>
>     long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on img
> file and -S.
>
>     NETCDF_VARNAME=z
>
>     _FillValue=-1.#IND
>
>
>
>
>
> Joaquim
>
> (with Paulâs help for the scaling factor)
>
>
>
> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Kurt Schwehr
> *Sent:* Tuesday, May 7, 2019 10:52 PM
> *To:* PROJ <proj at lists.osgeo.org>
> *Subject:* [PROJ] Projection for Sandwell et al.'s topex topo and grav
> files?
>
>
>
> Hi all,
>
>
>
> I figured I should ask here too if anyone know what the correct projection
> is for the Sandwell .img grids from http://topex.ucsd.edu.  I'm trying to
> keep the files in their original projections as I switch them to geotiffs.
> I've asked David Sandwell directly too if he knows.
>
>
>
> This works, but warps the data first:
>
>
>
> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gtest2.grd -T1 -D
>
> gdal_translate -a_srs EPSG:4326 test2.grd test2.tif
>
> gdalinfo test2.tif  # Results look believable
>
> gdal_translate topo-18-1-epsg4326.tif topo-18-1-epsg4326-deflate.tif -co
> COMPRESS=DEFLATE -co PREDICTOR=3
>
>
>
> Then imported into QGIS or Earth Engine as a normal user, things line up
> pretty well.
>
>
>
>     https://code.earthengine.google.com/f43c8b13bafa26fd8c7f83ce9a919f6e
>
>
>
>
>
> I'd rather do it more like this:
>
>
>
> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img
> -Gspherical-mercator-proj.grd -T1 -D -M
>
> img2grd: Expects topo_18.1.img to be 21600 by 17280 pixels spanning
> 0/360.0/-80.738009/80.738009.
>
> img2grd: To fit [averaged] input, your topo_18.1.img is adjusted to
> -R-180/180/-80.0023237126/80.0023237126.
>
> img2grd: The output grid size will be 21600 by 16752 pixels.
>
> img2grd: Created 21600 by 16752 Mercatorized grid file.  Min, Max values
> are -10914  8550
>
>
>
> gives this which doesn't work as is:
>
>
>
> gdalinfo spherical-mercator-proj.grd
>
> Driver: netCDF/Network Common Data Format
>
> Files: spherical-mercator-proj.grd
>
> Size is 21600, 16752
>
> Coordinate System is `'
>
> Origin = (0.000000000000000,279.199999999999989)
>
> Pixel Size = (0.016666666666667,-0.016666666666667)
>
> Metadata:
>
>   NC_GLOBAL#Conventions=COARDS, CF-1.5
>
>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1
> -R0/360/-80.0023237126/80.0023237126
>
>   NC_GLOBAL#GMT_version=5.4.3 (r19528) [64-bit]
>
>
>
> Should I be using one of 54004 or 41001?  e.g.
> https://epsg.io/?q=spherical+mercator
>
>
>
> Thanks!
>
> -kurt
>
>
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190508/cbc21120/attachment-0001.html>

From even.rouault at spatialys.com  Wed May  8 08:37:54 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 May 2019 17:37:54 +0200
Subject: [PROJ] PROJ 6.1.0RC2: it's a bug ?
In-Reply-To: <04a98ece0b04f759752f6794cb87ba32@lqt.it>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
 <04a98ece0b04f759752f6794cb87ba32@lqt.it>
Message-ID: <3469824.Ep6E309OtG@even-i700>

> I'm really sorry, but I've found a further issue.

No need to be sorry. Thanks for the report. Fixed

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed May  8 09:05:45 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 May 2019 18:05:45 +0200
Subject: [PROJ] PROJ 6.1.0RC2: it's a bug ?
In-Reply-To: <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <2623900.Kk6HVcXu8m@even-i700> <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
Message-ID: <14555884.uZYWouBG0N@even-i700>

> All
> 
> That also means we will have an RC3. Iâll try to find the time to put it up
> tomorrow,
 otherwise early on Friday. I would really like that one to be
> the last RC, so if you havenât tested RC2 yet please do so and report any
> issues you find. 

Kristian,

I've also just added the Belgian bd72lb72_etrs89lb08.gsb grid per
https://github.com/OSGeo/proj-datumgrid/pull/50, so ideally proj-datumgrid-
europe should be recreated.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Wed May  8 09:07:53 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 8 May 2019 16:07:53 +0000
Subject: [PROJ] PROJ 6.1.0RC2: it's a bug ?
In-Reply-To: <14555884.uZYWouBG0N@even-i700>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <2623900.Kk6HVcXu8m@even-i700>
 <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
 <14555884.uZYWouBG0N@even-i700>
Message-ID: <031D3D7B-B7EB-4062-A078-43C8E601273E@sdfe.dk>



> On 8 May 2019, at 18:05, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> All
>> 
>> That also means we will have an RC3. Iâll try to find the time to put it up
>> tomorrow,
> otherwise early on Friday. I would really like that one to be
>> the last RC, so if you havenât tested RC2 yet please do so and report any
>> issues you find. 
> 
> Kristian,
> 
> I've also just added the Belgian bd72lb72_etrs89lb08.gsb grid per
> https://github.com/OSGeo/proj-datumgrid/pull/50, so ideally proj-datumgrid-
> europe should be recreated.

Yeah, I just noticed. Iâll make sure to add an RC2 of the Europe grid package.

/Kristian

> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From jmfluis at gmail.com  Wed May  8 09:44:32 2019
From: jmfluis at gmail.com (J Luis)
Date: Wed, 8 May 2019 17:44:32 +0100
Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav
	files?
In-Reply-To: <CACmBxyup9b74WjQHcWneYgSOJ9rOFNkr8+hcFnD-rMg9Ks01bw@mail.gmail.com>
References: <CACmBxytj1pE5wWTXLYctJoRuYV8KLOZZWtqp=bgphoRkmvz2og@mail.gmail.com>
 <007501d50540$a762bf10$f6283d30$@gmail.com>
 <CACmBxyup9b74WjQHcWneYgSOJ9rOFNkr8+hcFnD-rMg9Ks01bw@mail.gmail.com>
Message-ID: <CAE_VgzNXDsBFoqNLNthCUp-0uub6Sc6hF6mSUv0Li_2VSM-ASQ@mail.gmail.com>

Right, I used a radius from a proj4 string that I had here but I'm
realizing that 6378137 is WGS's 84 major axis. OK, I should have used the
proj
 sphere a=6370997.0
(or the GMT's 6371008.7714, but that would make no difference as long as we
calculate the scale factor with one and use that same one in the proj
string)
With it, and recomputing the scale factor, you should use

grdedit spherical-mercator-proj.grd
-R-20015077.3712426/20015077.3712426/-15522804.4501415/15522804.4501415
-J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m
+no_defs"

However, I realized that grdedit is doing something to the limits that I
need to understand better. See that it slightly changed the XX limits that
we provided. x_min & x_max are no longer symetric, but y_min,max are.

C:\v>grdinfo spherical-mercator-proj.grd
spherical-mercator-proj.grd: Title: Data from Altimetry
spherical-mercator-proj.grd: Command: img2grd -R-180/180/-80/80
topo_19.1.img -Gspherical-mercator-proj.grd -T1 -D -M -C
spherical-mercator-proj.grd: Remark: Spherical Mercator Projected with -Jm1
-R-180/180/-80.0023237126/80.0023237126
spherical-mercator-proj.grd: Pixel node registration used [Cartesian grid]
spherical-mercator-proj.grd: Grid file format: nf = GMT netCDF format
(32-bit float), CF-1.7
spherical-mercator-proj.grd: x_min: -20014717.3712 x_max: 20015437.3712
x_inc: 1853.24790474 name:  n_columns: 21600
spherical-mercator-proj.grd: y_min: -15522804.4501 y_max: 15522804.4501
y_inc: 1853.24790474 name:  n_rows: 16752


On Wed, May 8, 2019 at 4:11 PM Kurt Schwehr <schwehr at gmail.com> wrote:

> Thanks!  I'll be investigating more today.  Monica Schwehr mentioned that
> you have a different Earth radius than she was seeing in the GMT code
> base.  I'll follow up on that after I get a chance to look through GMT head
> and GMT 4 more.
>
> On Tue, May 7, 2019 at 6:52 PM <jmfluis at gmail.com> wrote:
>
>> The IMG grids are spherical Mercator inches so there is likely no EPSG or
>> WKT that represents that. But you can do all the work in GMT.
>>
>>
>>
>> 1- Convert to netcdf, maintaining the Merc projection, but change the
>> origin to (0,0) (it was in the LL corner). Thatâs the role of -C
>>
>>
>>
>> img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd -T1
>> -D -M -C
>>
>>
>>
>> 2- Edit the header to convert the inches to Mercator meters. The grid
>> above has x_min = -180; x_max = 180.
>>
>> And that corresponds to 6378137 *2pi = 4.007501668557849e7  meters. So we
>> can compute a scale factor of
>>
>>
>>
>> 111319.49079327358 = 6378137 *2pi / 360
>>
>>
>>
>> and apply it to the region in degrees.
>>
>>
>>
>> [-180 180 -139.6 139.6] .* 111319.49079327358 = -20037508.3427892
>> 20037508.3427892 -15540200.914741 15540200.914741
>>
>>
>>
>> So finaly use grdedit to change the limits and assign it a proj4 string
>> describing the projection
>>
>>
>>
>> grdedit spherical-mercator-proj.grd
>> -R-20037508.3427892/20037508.3427892/-15540200.914741/15540200.914741
>> -J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 +units=m
>> +no_defs"
>>
>>
>>
>> You can now confirm with gdalinfo
>>
>>
>>
>> C:\v>gdalinfo spherical-mercator-proj.grd
>>
>> Warning 1: dimension #1 (x) is not a Longitude/X dimension.
>>
>> Warning 1: dimension #0 (y) is not a Latitude/Y dimension.
>>
>> Driver: netCDF/Network Common Data Format
>>
>> Files: spherical-mercator-proj.grd
>>
>> Size is 21600, 16752
>>
>> Coordinate System is:
>>
>> PROJCS["unnamed",
>>
>>     GEOGCS["unnamed ellipse",
>>
>>         DATUM["unknown",
>>
>>             SPHEROID["unnamed",6378137,0]],
>>
>>         PRIMEM["Greenwich",0],
>>
>>         UNIT["degree",0.0174532925199433]],
>>
>>     PROJECTION["Mercator_1SP"],
>>
>>     PARAMETER["central_meridian",0],
>>
>>     PARAMETER["scale_factor",1],
>>
>>     PARAMETER["false_easting",0],
>>
>>     PARAMETER["false_northing",0],
>>
>>     UNIT["Meter",1]]
>>
>> Origin = (-20037148.342789199000000,15540200.914741000000000)
>>
>> Pixel Size = (1855.324846554555500,-1855.324846554560700)
>>
>> Metadata:
>>
>>   grid_mapping#spatial_ref=PROJCS["unnamed",
>>
>>     GEOGCS["unnamed ellipse",
>>
>>         DATUM["unknown",
>>
>>             SPHEROID["unnamed",6378137,0]],
>>
>>         PRIMEM["Greenwich",0],
>>
>>         UNIT["degree",0.0174532925199433]],
>>
>>     PROJECTION["Mercator_1SP"],
>>
>>     PARAMETER["central_meridian",0],
>>
>>     PARAMETER["scale_factor",1],
>>
>>     PARAMETER["false_easting",0],
>>
>>     PARAMETER["false_northing",0],
>>
>>     UNIT["Meter",1]]
>>
>>   NC_GLOBAL#Conventions=CF-1.7
>>
>>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1
>> -R-180/180/-80.0023237126/80.0023237126
>>
>>   NC_GLOBAL#GMT_version=6.0.0_bcb87fa-dirty_2019.05.07 [64-bit] [MP]
>>
>>   NC_GLOBAL#history=img2grd -R-180/180/-80/80 topo_19.1.img
>> -Gspherical-mercator-proj.grd -T1 -D -M -C
>>
>>   NC_GLOBAL#node_offset=1
>>
>>   NC_GLOBAL#title=Data from Altimetry
>>
>>   x#actual_range={-20037148.3427892,20037868.3427892}
>>
>>   x#long_name=x_units
>>
>>   y#actual_range={-15540200.914741,15540200.914741}
>>
>>   y#long_name=y_units
>>
>>   z#actual_range={-10914,8550}
>>
>>   z#grid_mapping=grid_mapping
>>
>>   z#long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on
>> img file and -S.
>>
>>   z#_FillValue=-1.#IND
>>
>> Corner Coordinates:
>>
>> Upper Left  (-20037148.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>>
>> Lower Left  (-20037148.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>>
>> Upper Right (20037868.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>>
>> Lower Right (20037868.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>>
>> Center      (     360.000,       0.000) (  0d 0'11.64"E,  0d 0' 0.01"N)
>>
>> Band 1 Block=21600x1 Type=Float32, ColorInterp=Undefined
>>
>>   NoData Value=nan
>>
>>   Metadata:
>>
>>     actual_range={-10914,8550}
>>
>>     grid_mapping=grid_mapping
>>
>>     long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on
>> img file and -S.
>>
>>     NETCDF_VARNAME=z
>>
>>     _FillValue=-1.#IND
>>
>>
>>
>>
>>
>> Joaquim
>>
>> (with Paulâs help for the scaling factor)
>>
>>
>>
>> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Kurt Schwehr
>> *Sent:* Tuesday, May 7, 2019 10:52 PM
>> *To:* PROJ <proj at lists.osgeo.org>
>> *Subject:* [PROJ] Projection for Sandwell et al.'s topex topo and grav
>> files?
>>
>>
>>
>> Hi all,
>>
>>
>>
>> I figured I should ask here too if anyone know what the correct
>> projection is for the Sandwell .img grids from http://topex.ucsd.edu.
>> I'm trying to keep the files in their original projections as I switch them
>> to geotiffs.  I've asked David Sandwell directly too if he knows.
>>
>>
>>
>> This works, but warps the data first:
>>
>>
>>
>> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gtest2.grd -T1 -D
>>
>> gdal_translate -a_srs EPSG:4326 test2.grd test2.tif
>>
>> gdalinfo test2.tif  # Results look believable
>>
>> gdal_translate topo-18-1-epsg4326.tif topo-18-1-epsg4326-deflate.tif -co
>> COMPRESS=DEFLATE -co PREDICTOR=3
>>
>>
>>
>> Then imported into QGIS or Earth Engine as a normal user, things line up
>> pretty well.
>>
>>
>>
>>     https://code.earthengine.google.com/f43c8b13bafa26fd8c7f83ce9a919f6e
>>
>>
>>
>>
>>
>> I'd rather do it more like this:
>>
>>
>>
>> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img
>> -Gspherical-mercator-proj.grd -T1 -D -M
>>
>> img2grd: Expects topo_18.1.img to be 21600 by 17280 pixels spanning
>> 0/360.0/-80.738009/80.738009.
>>
>> img2grd: To fit [averaged] input, your topo_18.1.img is adjusted to
>> -R-180/180/-80.0023237126/80.0023237126.
>>
>> img2grd: The output grid size will be 21600 by 16752 pixels.
>>
>> img2grd: Created 21600 by 16752 Mercatorized grid file.  Min, Max values
>> are -10914  8550
>>
>>
>>
>> gives this which doesn't work as is:
>>
>>
>>
>> gdalinfo spherical-mercator-proj.grd
>>
>> Driver: netCDF/Network Common Data Format
>>
>> Files: spherical-mercator-proj.grd
>>
>> Size is 21600, 16752
>>
>> Coordinate System is `'
>>
>> Origin = (0.000000000000000,279.199999999999989)
>>
>> Pixel Size = (0.016666666666667,-0.016666666666667)
>>
>> Metadata:
>>
>>   NC_GLOBAL#Conventions=COARDS, CF-1.5
>>
>>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1
>> -R0/360/-80.0023237126/80.0023237126
>>
>>   NC_GLOBAL#GMT_version=5.4.3 (r19528) [64-bit]
>>
>>
>>
>> Should I be using one of 54004 or 41001?  e.g.
>> https://epsg.io/?q=spherical+mercator
>>
>>
>>
>> Thanks!
>>
>> -kurt
>>
>>
>>
>
>
> --
> --
> http://schwehr.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190508/8909f443/attachment-0001.html>

From schwehr at gmail.com  Wed May  8 10:50:48 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 8 May 2019 10:50:48 -0700
Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav
	files?
In-Reply-To: <CAE_VgzNXDsBFoqNLNthCUp-0uub6Sc6hF6mSUv0Li_2VSM-ASQ@mail.gmail.com>
References: <CACmBxytj1pE5wWTXLYctJoRuYV8KLOZZWtqp=bgphoRkmvz2og@mail.gmail.com>
 <007501d50540$a762bf10$f6283d30$@gmail.com>
 <CACmBxyup9b74WjQHcWneYgSOJ9rOFNkr8+hcFnD-rMg9Ks01bw@mail.gmail.com>
 <CAE_VgzNXDsBFoqNLNthCUp-0uub6Sc6hF6mSUv0Li_2VSM-ASQ@mail.gmail.com>
Message-ID: <CACmBxyvZDA0-co7Fnxpbt_1KL2vgiJnwKnPTRMJsXHCimEvA3g@mail.gmail.com>

Thanks Joaquim.

I'll see if I can get that in and visualized.  I'm having a challenge with
alignment with a hill shaded background.

Life is extra fun that src/Ellipsoids.txt was replace by by
gmt_ellipsoids.h back in January:

git log --all --full-history -- src/Ellipsoids.txt

I think I'm able to trace what is going on:

./src/gmt_ellipsoids.h: {"Sphere", 1984, 6371008.7714, 0},

egrep 'Jm|Sphere|grdproject' src/img/img2grd.c
 * preserving the Mercator projection (gmtdefaults PROJ_ELLIPSOID = Sphere)
 * and height of the (spherical) Mercator map with -Rww/ee/ss/nn and -Jm1.
/* Set up header with Mercatorized dimensions assuming -Jm1  */
snprintf (Merc->header->x_units, GMT_GRID_UNIT_LEN80, "Spherical Mercator
projected Longitude, -Jm1, length from %.12g", left);
snprintf (Merc->header->y_units, GMT_GRID_UNIT_LEN80, "Spherical Mercator
projected Latitude, -Jm1, length from %.12g", bottom);
snprintf (Merc->header->remark, GMT_GRID_REMARK_LEN160, "Spherical Mercator
Projected with -Jm1 -R%.12g/%.12g/%.12g/%.12g", wesn[XLO], wesn[XHI],
south2, north2);
GMT_Report (API, GMT_MSG_LONG_VERBOSE, "Undo the implicit spherical
Mercator -Jm1i projection.\n");
/* Preparing source and destination for GMT_grdproject */
/* a. Register the Mercator grid to be the source read by GMT_grdproject by
passing a pointer */
GMT_Report (API, GMT_MSG_DEBUG, "Open Mercator Grid as grdproject virtual
input\n");
/* b. If -E: Register a grid struct Geo to be the destination allocated and
written to by GMT_grdproject, else write to -G<file> */
GMT_Report (API, GMT_MSG_DEBUG, "Register memory Grid container as
grdproject output\n");
sprintf (cmd, "-R%g/%g/%g/%g -Jm1i -I %s -G%s --PROJ_ELLIPSOID=Sphere
--PROJ_LENGTH_UNIT=inch --GMT_HISTORY=false", west, east, south2, north2,
input, output);
GMT_Report (API, GMT_MSG_DEBUG, "Calling grdproject %s.\n", cmd);
if (GMT_Call_Module (API, "grdproject", GMT_MODULE_CMD, cmd)!= GMT_NOERROR)
{ /* Inverse project the grid or fail */
/* a. Register the Geographic grid returned by GMT_grdproject to be the
source read by GMT_grdsample by passing a pointer */
GMT_Report (API, GMT_MSG_DEBUG, "Read Geo Grid container as grdproject
virtual output\n");

On Wed, May 8, 2019 at 9:44 AM J Luis <jmfluis at gmail.com> wrote:

>
> Right, I used a radius from a proj4 string that I had here but I'm
> realizing that 6378137 is WGS's 84 major axis. OK, I should have used the
> proj
>  sphere a=6370997.0
> (or the GMT's 6371008.7714, but that would make no difference as long as
> we calculate the scale factor with one and use that same one in the proj
> string)
> With it, and recomputing the scale factor, you should use
>
> grdedit spherical-mercator-proj.grd
> -R-20015077.3712426/20015077.3712426/-15522804.4501415/15522804.4501415
> -J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m
> +no_defs"
>
> However, I realized that grdedit is doing something to the limits that I
> need to understand better. See that it slightly changed the XX limits that
> we provided. x_min & x_max are no longer symetric, but y_min,max are.
>
> C:\v>grdinfo spherical-mercator-proj.grd
> spherical-mercator-proj.grd: Title: Data from Altimetry
> spherical-mercator-proj.grd: Command: img2grd -R-180/180/-80/80
> topo_19.1.img -Gspherical-mercator-proj.grd -T1 -D -M -C
> spherical-mercator-proj.grd: Remark: Spherical Mercator Projected with
> -Jm1 -R-180/180/-80.0023237126/80.0023237126
> spherical-mercator-proj.grd: Pixel node registration used [Cartesian grid]
> spherical-mercator-proj.grd: Grid file format: nf = GMT netCDF format
> (32-bit float), CF-1.7
> spherical-mercator-proj.grd: x_min: -20014717.3712 x_max: 20015437.3712
> x_inc: 1853.24790474 name:  n_columns: 21600
> spherical-mercator-proj.grd: y_min: -15522804.4501 y_max: 15522804.4501
> y_inc: 1853.24790474 name:  n_rows: 16752
>
>
> On Wed, May 8, 2019 at 4:11 PM Kurt Schwehr <schwehr at gmail.com> wrote:
>
>> Thanks!  I'll be investigating more today.  Monica Schwehr mentioned that
>> you have a different Earth radius than she was seeing in the GMT code
>> base.  I'll follow up on that after I get a chance to look through GMT head
>> and GMT 4 more.
>>
>> On Tue, May 7, 2019 at 6:52 PM <jmfluis at gmail.com> wrote:
>>
>>> The IMG grids are spherical Mercator inches so there is likely no EPSG
>>> or WKT that represents that. But you can do all the work in GMT.
>>>
>>>
>>>
>>> 1- Convert to netcdf, maintaining the Merc projection, but change the
>>> origin to (0,0) (it was in the LL corner). Thatâs the role of -C
>>>
>>>
>>>
>>> img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd
>>> -T1 -D -M -C
>>>
>>>
>>>
>>> 2- Edit the header to convert the inches to Mercator meters. The grid
>>> above has x_min = -180; x_max = 180.
>>>
>>> And that corresponds to 6378137 *2pi = 4.007501668557849e7  meters. So
>>> we can compute a scale factor of
>>>
>>>
>>>
>>> 111319.49079327358 = 6378137 *2pi / 360
>>>
>>>
>>>
>>> and apply it to the region in degrees.
>>>
>>>
>>>
>>> [-180 180 -139.6 139.6] .* 111319.49079327358 = -20037508.3427892
>>> 20037508.3427892 -15540200.914741 15540200.914741
>>>
>>>
>>>
>>> So finaly use grdedit to change the limits and assign it a proj4 string
>>> describing the projection
>>>
>>>
>>>
>>> grdedit spherical-mercator-proj.grd
>>> -R-20037508.3427892/20037508.3427892/-15540200.914741/15540200.914741
>>> -J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 +units=m
>>> +no_defs"
>>>
>>>
>>>
>>> You can now confirm with gdalinfo
>>>
>>>
>>>
>>> C:\v>gdalinfo spherical-mercator-proj.grd
>>>
>>> Warning 1: dimension #1 (x) is not a Longitude/X dimension.
>>>
>>> Warning 1: dimension #0 (y) is not a Latitude/Y dimension.
>>>
>>> Driver: netCDF/Network Common Data Format
>>>
>>> Files: spherical-mercator-proj.grd
>>>
>>> Size is 21600, 16752
>>>
>>> Coordinate System is:
>>>
>>> PROJCS["unnamed",
>>>
>>>     GEOGCS["unnamed ellipse",
>>>
>>>         DATUM["unknown",
>>>
>>>             SPHEROID["unnamed",6378137,0]],
>>>
>>>         PRIMEM["Greenwich",0],
>>>
>>>         UNIT["degree",0.0174532925199433]],
>>>
>>>     PROJECTION["Mercator_1SP"],
>>>
>>>     PARAMETER["central_meridian",0],
>>>
>>>     PARAMETER["scale_factor",1],
>>>
>>>     PARAMETER["false_easting",0],
>>>
>>>     PARAMETER["false_northing",0],
>>>
>>>     UNIT["Meter",1]]
>>>
>>> Origin = (-20037148.342789199000000,15540200.914741000000000)
>>>
>>> Pixel Size = (1855.324846554555500,-1855.324846554560700)
>>>
>>> Metadata:
>>>
>>>   grid_mapping#spatial_ref=PROJCS["unnamed",
>>>
>>>     GEOGCS["unnamed ellipse",
>>>
>>>         DATUM["unknown",
>>>
>>>             SPHEROID["unnamed",6378137,0]],
>>>
>>>         PRIMEM["Greenwich",0],
>>>
>>>         UNIT["degree",0.0174532925199433]],
>>>
>>>     PROJECTION["Mercator_1SP"],
>>>
>>>     PARAMETER["central_meridian",0],
>>>
>>>     PARAMETER["scale_factor",1],
>>>
>>>     PARAMETER["false_easting",0],
>>>
>>>     PARAMETER["false_northing",0],
>>>
>>>     UNIT["Meter",1]]
>>>
>>>   NC_GLOBAL#Conventions=CF-1.7
>>>
>>>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1
>>> -R-180/180/-80.0023237126/80.0023237126
>>>
>>>   NC_GLOBAL#GMT_version=6.0.0_bcb87fa-dirty_2019.05.07 [64-bit] [MP]
>>>
>>>   NC_GLOBAL#history=img2grd -R-180/180/-80/80 topo_19.1.img
>>> -Gspherical-mercator-proj.grd -T1 -D -M -C
>>>
>>>   NC_GLOBAL#node_offset=1
>>>
>>>   NC_GLOBAL#title=Data from Altimetry
>>>
>>>   x#actual_range={-20037148.3427892,20037868.3427892}
>>>
>>>   x#long_name=x_units
>>>
>>>   y#actual_range={-15540200.914741,15540200.914741}
>>>
>>>   y#long_name=y_units
>>>
>>>   z#actual_range={-10914,8550}
>>>
>>>   z#grid_mapping=grid_mapping
>>>
>>>   z#long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on
>>> img file and -S.
>>>
>>>   z#_FillValue=-1.#IND
>>>
>>> Corner Coordinates:
>>>
>>> Upper Left  (-20037148.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>>>
>>> Lower Left  (-20037148.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>>>
>>> Upper Right (20037868.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>>>
>>> Lower Right (20037868.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>>>
>>> Center      (     360.000,       0.000) (  0d 0'11.64"E,  0d 0' 0.01"N)
>>>
>>> Band 1 Block=21600x1 Type=Float32, ColorInterp=Undefined
>>>
>>>   NoData Value=nan
>>>
>>>   Metadata:
>>>
>>>     actual_range={-10914,8550}
>>>
>>>     grid_mapping=grid_mapping
>>>
>>>     long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on
>>> img file and -S.
>>>
>>>     NETCDF_VARNAME=z
>>>
>>>     _FillValue=-1.#IND
>>>
>>>
>>>
>>>
>>>
>>> Joaquim
>>>
>>> (with Paulâs help for the scaling factor)
>>>
>>>
>>>
>>> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Kurt Schwehr
>>> *Sent:* Tuesday, May 7, 2019 10:52 PM
>>> *To:* PROJ <proj at lists.osgeo.org>
>>> *Subject:* [PROJ] Projection for Sandwell et al.'s topex topo and grav
>>> files?
>>>
>>>
>>>
>>> Hi all,
>>>
>>>
>>>
>>> I figured I should ask here too if anyone know what the correct
>>> projection is for the Sandwell .img grids from http://topex.ucsd.edu.
>>> I'm trying to keep the files in their original projections as I switch them
>>> to geotiffs.  I've asked David Sandwell directly too if he knows.
>>>
>>>
>>>
>>> This works, but warps the data first:
>>>
>>>
>>>
>>> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gtest2.grd -T1 -D
>>>
>>> gdal_translate -a_srs EPSG:4326 test2.grd test2.tif
>>>
>>> gdalinfo test2.tif  # Results look believable
>>>
>>> gdal_translate topo-18-1-epsg4326.tif topo-18-1-epsg4326-deflate.tif -co
>>> COMPRESS=DEFLATE -co PREDICTOR=3
>>>
>>>
>>>
>>> Then imported into QGIS or Earth Engine as a normal user, things line up
>>> pretty well.
>>>
>>>
>>>
>>>     https://code.earthengine.google.com/f43c8b13bafa26fd8c7f83ce9a919f6e
>>>
>>>
>>>
>>>
>>>
>>> I'd rather do it more like this:
>>>
>>>
>>>
>>> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img
>>> -Gspherical-mercator-proj.grd -T1 -D -M
>>>
>>> img2grd: Expects topo_18.1.img to be 21600 by 17280 pixels spanning
>>> 0/360.0/-80.738009/80.738009.
>>>
>>> img2grd: To fit [averaged] input, your topo_18.1.img is adjusted to
>>> -R-180/180/-80.0023237126/80.0023237126.
>>>
>>> img2grd: The output grid size will be 21600 by 16752 pixels.
>>>
>>> img2grd: Created 21600 by 16752 Mercatorized grid file.  Min, Max values
>>> are -10914  8550
>>>
>>>
>>>
>>> gives this which doesn't work as is:
>>>
>>>
>>>
>>> gdalinfo spherical-mercator-proj.grd
>>>
>>> Driver: netCDF/Network Common Data Format
>>>
>>> Files: spherical-mercator-proj.grd
>>>
>>> Size is 21600, 16752
>>>
>>> Coordinate System is `'
>>>
>>> Origin = (0.000000000000000,279.199999999999989)
>>>
>>> Pixel Size = (0.016666666666667,-0.016666666666667)
>>>
>>> Metadata:
>>>
>>>   NC_GLOBAL#Conventions=COARDS, CF-1.5
>>>
>>>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1
>>> -R0/360/-80.0023237126/80.0023237126
>>>
>>>   NC_GLOBAL#GMT_version=5.4.3 (r19528) [64-bit]
>>>
>>>
>>>
>>> Should I be using one of 54004 or 41001?  e.g.
>>> https://epsg.io/?q=spherical+mercator
>>>
>>>
>>>
>>> Thanks!
>>>
>>> -kurt
>>>
>>>
>>>
>>
>>
>> --
>> --
>> http://schwehr.org
>>
>

-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190508/a8e6f8ac/attachment-0001.html>

From jmfluis at gmail.com  Wed May  8 11:01:51 2019
From: jmfluis at gmail.com (Joaquim Luis)
Date: Wed, 8 May 2019 19:01:51 +0100
Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav
	files?
In-Reply-To: <CACmBxyvZDA0-co7Fnxpbt_1KL2vgiJnwKnPTRMJsXHCimEvA3g@mail.gmail.com>
References: <CACmBxytj1pE5wWTXLYctJoRuYV8KLOZZWtqp=bgphoRkmvz2og@mail.gmail.com>
 <007501d50540$a762bf10$f6283d30$@gmail.com>
 <CACmBxyup9b74WjQHcWneYgSOJ9rOFNkr8+hcFnD-rMg9Ks01bw@mail.gmail.com>
 <CAE_VgzNXDsBFoqNLNthCUp-0uub6Sc6hF6mSUv0Li_2VSM-ASQ@mail.gmail.com>
 <CACmBxyvZDA0-co7Fnxpbt_1KL2vgiJnwKnPTRMJsXHCimEvA3g@mail.gmail.com>
Message-ID: <B81F086E-A708-47BD-8CC7-A6A579B5E0F7@gmail.com>

Kurt, Iâll be away for a couple hours so cannot test this, but if the limits change in the grdedit step are wrong I suspect you can split into two steps:
1 change only the -R
2. Add the project info with the -J part. 

Sent from my iDedo

No dia 08/05/2019, Ã s 18:50, Kurt Schwehr <schwehr at gmail.com> escreveu:

> Thanks Joaquim.  
> 
> I'll see if I can get that in and visualized.  I'm having a challenge with alignment with a hill shaded background.
> 
> Life is extra fun that src/Ellipsoids.txt was replace by by gmt_ellipsoids.h back in January:
> 
> git log --all --full-history -- src/Ellipsoids.txt
> 
> I think I'm able to trace what is going on:
> 
> ./src/gmt_ellipsoids.h:		{"Sphere", 1984, 6371008.7714, 0},
> 
> egrep 'Jm|Sphere|grdproject' src/img/img2grd.c
>  * preserving the Mercator projection (gmtdefaults PROJ_ELLIPSOID = Sphere)
>  * and height of the (spherical) Mercator map with -Rww/ee/ss/nn and -Jm1.
> 	/* Set up header with Mercatorized dimensions assuming -Jm1  */
> 		snprintf (Merc->header->x_units, GMT_GRID_UNIT_LEN80, "Spherical Mercator projected Longitude, -Jm1, length from %.12g", left);
> 		snprintf (Merc->header->y_units, GMT_GRID_UNIT_LEN80, "Spherical Mercator projected Latitude, -Jm1, length from %.12g", bottom);
> 		snprintf (Merc->header->remark, GMT_GRID_REMARK_LEN160, "Spherical Mercator Projected with -Jm1 -R%.12g/%.12g/%.12g/%.12g", wesn[XLO], wesn[XHI], south2, north2);
> 	GMT_Report (API, GMT_MSG_LONG_VERBOSE, "Undo the implicit spherical Mercator -Jm1i projection.\n");
> 	/* Preparing source and destination for GMT_grdproject */
> 	/* a. Register the Mercator grid to be the source read by GMT_grdproject by passing a pointer */
> 	GMT_Report (API, GMT_MSG_DEBUG, "Open Mercator Grid as grdproject virtual input\n");
> 	/* b. If -E: Register a grid struct Geo to be the destination allocated and written to by GMT_grdproject, else write to -G<file> */
> 		GMT_Report (API, GMT_MSG_DEBUG, "Register memory Grid container as grdproject output\n");
> 	sprintf (cmd, "-R%g/%g/%g/%g -Jm1i -I %s -G%s --PROJ_ELLIPSOID=Sphere --PROJ_LENGTH_UNIT=inch --GMT_HISTORY=false", west, east, south2, north2, input, output);
> 	GMT_Report (API, GMT_MSG_DEBUG, "Calling grdproject %s.\n", cmd);
> 	if (GMT_Call_Module (API, "grdproject", GMT_MODULE_CMD, cmd)!= GMT_NOERROR) {	/* Inverse project the grid or fail */
> 		/* a. Register the Geographic grid returned by GMT_grdproject to be the source read by GMT_grdsample by passing a pointer */
> 		GMT_Report (API, GMT_MSG_DEBUG, "Read Geo Grid container as grdproject virtual output\n");
> 
>> On Wed, May 8, 2019 at 9:44 AM J Luis <jmfluis at gmail.com> wrote:
>> 
>> Right, I used a radius from a proj4 string that I had here but I'm realizing that 6378137 is WGS's 84 major axis. OK, I should have used the proj
>>  sphere a=6370997.0
>> (or the GMT's 6371008.7714, but that would make no difference as long as we calculate the scale factor with one and use that same one in the proj string)
>> With it, and recomputing the scale factor, you should use
>> 
>> grdedit spherical-mercator-proj.grd -R-20015077.3712426/20015077.3712426/-15522804.4501415/15522804.4501415 -J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
>> 
>> However, I realized that grdedit is doing something to the limits that I need to understand better. See that it slightly changed the XX limits that we provided. x_min & x_max are no longer symetric, but y_min,max are.
>> 
>> C:\v>grdinfo spherical-mercator-proj.grd
>> spherical-mercator-proj.grd: Title: Data from Altimetry
>> spherical-mercator-proj.grd: Command: img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd -T1 -D -M -C
>> spherical-mercator-proj.grd: Remark: Spherical Mercator Projected with -Jm1 -R-180/180/-80.0023237126/80.0023237126
>> spherical-mercator-proj.grd: Pixel node registration used [Cartesian grid]
>> spherical-mercator-proj.grd: Grid file format: nf = GMT netCDF format (32-bit float), CF-1.7
>> spherical-mercator-proj.grd: x_min: -20014717.3712 x_max: 20015437.3712 x_inc: 1853.24790474 name:  n_columns: 21600
>> spherical-mercator-proj.grd: y_min: -15522804.4501 y_max: 15522804.4501 y_inc: 1853.24790474 name:  n_rows: 16752
>> 
>> 
>>> On Wed, May 8, 2019 at 4:11 PM Kurt Schwehr <schwehr at gmail.com> wrote:
>>> Thanks!  I'll be investigating more today.  Monica Schwehr mentioned that you have a different Earth radius than she was seeing in the GMT code base.  I'll follow up on that after I get a chance to look through GMT head and GMT 4 more.
>>> 
>>>> On Tue, May 7, 2019 at 6:52 PM <jmfluis at gmail.com> wrote:
>>>> The IMG grids are spherical Mercator inches so there is likely no EPSG or WKT that represents that. But you can do all the work in GMT.
>>>> 
>>>>  
>>>> 
>>>> 1- Convert to netcdf, maintaining the Merc projection, but change the origin to (0,0) (it was in the LL corner). Thatâs the role of -C
>>>> 
>>>>  
>>>> 
>>>> img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd -T1 -D -M -C
>>>> 
>>>>  
>>>> 
>>>> 2- Edit the header to convert the inches to Mercator meters. The grid above has x_min = -180; x_max = 180.
>>>> 
>>>> And that corresponds to 6378137 *2pi = 4.007501668557849e7  meters. So we can compute a scale factor of
>>>> 
>>>>  
>>>> 
>>>> 111319.49079327358 = 6378137 *2pi / 360
>>>> 
>>>>  
>>>> 
>>>> and apply it to the region in degrees.
>>>> 
>>>>  
>>>> 
>>>> [-180 180 -139.6 139.6] .* 111319.49079327358 = -20037508.3427892 20037508.3427892 -15540200.914741 15540200.914741
>>>> 
>>>>  
>>>> 
>>>> So finaly use grdedit to change the limits and assign it a proj4 string describing the projection
>>>> 
>>>>  
>>>> 
>>>> grdedit spherical-mercator-proj.grd -R-20037508.3427892/20037508.3427892/-15540200.914741/15540200.914741 -J"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 +units=m +no_defs"
>>>> 
>>>>  
>>>> 
>>>> You can now confirm with gdalinfo
>>>> 
>>>>  
>>>> 
>>>> C:\v>gdalinfo spherical-mercator-proj.grd
>>>> 
>>>> Warning 1: dimension #1 (x) is not a Longitude/X dimension.
>>>> 
>>>> Warning 1: dimension #0 (y) is not a Latitude/Y dimension.
>>>> 
>>>> Driver: netCDF/Network Common Data Format
>>>> 
>>>> Files: spherical-mercator-proj.grd
>>>> 
>>>> Size is 21600, 16752
>>>> 
>>>> Coordinate System is:
>>>> 
>>>> PROJCS["unnamed",
>>>> 
>>>>     GEOGCS["unnamed ellipse",
>>>> 
>>>>         DATUM["unknown",
>>>> 
>>>>             SPHEROID["unnamed",6378137,0]],
>>>> 
>>>>         PRIMEM["Greenwich",0],
>>>> 
>>>>         UNIT["degree",0.0174532925199433]],
>>>> 
>>>>     PROJECTION["Mercator_1SP"],
>>>> 
>>>>     PARAMETER["central_meridian",0],
>>>> 
>>>>     PARAMETER["scale_factor",1],
>>>> 
>>>>     PARAMETER["false_easting",0],
>>>> 
>>>>     PARAMETER["false_northing",0],
>>>> 
>>>>     UNIT["Meter",1]]
>>>> 
>>>> Origin = (-20037148.342789199000000,15540200.914741000000000)
>>>> 
>>>> Pixel Size = (1855.324846554555500,-1855.324846554560700)
>>>> 
>>>> Metadata:
>>>> 
>>>>   grid_mapping#spatial_ref=PROJCS["unnamed",
>>>> 
>>>>     GEOGCS["unnamed ellipse",
>>>> 
>>>>         DATUM["unknown",
>>>> 
>>>>             SPHEROID["unnamed",6378137,0]],
>>>> 
>>>>         PRIMEM["Greenwich",0],
>>>> 
>>>>         UNIT["degree",0.0174532925199433]],
>>>> 
>>>>     PROJECTION["Mercator_1SP"],
>>>> 
>>>>     PARAMETER["central_meridian",0],
>>>> 
>>>>     PARAMETER["scale_factor",1],
>>>> 
>>>>     PARAMETER["false_easting",0],
>>>> 
>>>>     PARAMETER["false_northing",0],
>>>> 
>>>>     UNIT["Meter",1]]
>>>> 
>>>>   NC_GLOBAL#Conventions=CF-1.7
>>>> 
>>>>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1 -R-180/180/-80.0023237126/80.0023237126
>>>> 
>>>>   NC_GLOBAL#GMT_version=6.0.0_bcb87fa-dirty_2019.05.07 [64-bit] [MP]
>>>> 
>>>>   NC_GLOBAL#history=img2grd -R-180/180/-80/80 topo_19.1.img -Gspherical-mercator-proj.grd -T1 -D -M -C
>>>> 
>>>>   NC_GLOBAL#node_offset=1
>>>> 
>>>>   NC_GLOBAL#title=Data from Altimetry
>>>> 
>>>>   x#actual_range={-20037148.3427892,20037868.3427892}
>>>> 
>>>>   x#long_name=x_units
>>>> 
>>>>   y#actual_range={-15540200.914741,15540200.914741}
>>>> 
>>>>   y#long_name=y_units
>>>> 
>>>>   z#actual_range={-10914,8550}
>>>> 
>>>>   z#grid_mapping=grid_mapping
>>>> 
>>>>   z#long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on img file and -S.
>>>> 
>>>>   z#_FillValue=-1.#IND
>>>> 
>>>> Corner Coordinates:
>>>> 
>>>> Upper Left  (-20037148.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>>>> 
>>>> Lower Left  (-20037148.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>>>> 
>>>> Upper Right (20037868.343,15540200.915) (179d59'48.36"W, 80d 0' 8.37"N)
>>>> 
>>>> Lower Right (20037868.343,-15540200.915) (179d59'48.36"W, 80d 0' 8.37"S)
>>>> 
>>>> Center      (     360.000,       0.000) (  0d 0'11.64"E,  0d 0' 0.01"N)
>>>> 
>>>> Band 1 Block=21600x1 Type=Float32, ColorInterp=Undefined
>>>> 
>>>>   NoData Value=nan
>>>> 
>>>>   Metadata:
>>>> 
>>>>     actual_range={-10914,8550}
>>>> 
>>>>     grid_mapping=grid_mapping
>>>> 
>>>>     long_name=meters, mGal, Eotvos, micro-radians or Myr, depending on img file and -S.
>>>> 
>>>>     NETCDF_VARNAME=z
>>>> 
>>>>     _FillValue=-1.#IND
>>>> 
>>>>  
>>>> 
>>>>  
>>>> 
>>>> Joaquim
>>>> 
>>>> (with Paulâs help for the scaling factor)
>>>> 
>>>>  
>>>> 
>>>> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Kurt Schwehr
>>>> Sent: Tuesday, May 7, 2019 10:52 PM
>>>> To: PROJ <proj at lists.osgeo.org>
>>>> Subject: [PROJ] Projection for Sandwell et al.'s topex topo and grav files?
>>>> 
>>>>  
>>>> 
>>>> Hi all,
>>>> 
>>>>  
>>>> 
>>>> I figured I should ask here too if anyone know what the correct projection is for the Sandwell .img grids from http://topex.ucsd.edu.  I'm trying to keep the files in their original projections as I switch them to geotiffs.  I've asked David Sandwell directly too if he knows.
>>>> 
>>>>  
>>>> 
>>>> This works, but warps the data first:
>>>> 
>>>>  
>>>> 
>>>> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gtest2.grd -T1 -D
>>>> 
>>>> gdal_translate -a_srs EPSG:4326 test2.grd test2.tif
>>>> 
>>>> gdalinfo test2.tif  # Results look believable
>>>> 
>>>> gdal_translate topo-18-1-epsg4326.tif topo-18-1-epsg4326-deflate.tif -co COMPRESS=DEFLATE -co PREDICTOR=3
>>>> 
>>>>  
>>>> 
>>>> Then imported into QGIS or Earth Engine as a normal user, things line up pretty well.
>>>> 
>>>>  
>>>> 
>>>>     https://code.earthengine.google.com/f43c8b13bafa26fd8c7f83ce9a919f6e
>>>> 
>>>>  
>>>> 
>>>>  
>>>> 
>>>> I'd rather do it more like this:
>>>> 
>>>>  
>>>> 
>>>> gmt img2grd -V -R-180/180/-80/80 topo_18.1.img  -Gspherical-mercator-proj.grd -T1 -D -M
>>>> 
>>>> img2grd: Expects topo_18.1.img to be 21600 by 17280 pixels spanning 0/360.0/-80.738009/80.738009.
>>>> 
>>>> img2grd: To fit [averaged] input, your topo_18.1.img is adjusted to -R-180/180/-80.0023237126/80.0023237126.
>>>> 
>>>> img2grd: The output grid size will be 21600 by 16752 pixels.
>>>> 
>>>> img2grd: Created 21600 by 16752 Mercatorized grid file.  Min, Max values are -10914  8550
>>>> 
>>>>  
>>>> 
>>>> gives this which doesn't work as is:
>>>> 
>>>>  
>>>> 
>>>> gdalinfo spherical-mercator-proj.grd
>>>> 
>>>> Driver: netCDF/Network Common Data Format
>>>> 
>>>> Files: spherical-mercator-proj.grd
>>>> 
>>>> Size is 21600, 16752
>>>> 
>>>> Coordinate System is `'
>>>> 
>>>> Origin = (0.000000000000000,279.199999999999989)
>>>> 
>>>> Pixel Size = (0.016666666666667,-0.016666666666667)
>>>> 
>>>> Metadata:
>>>> 
>>>>   NC_GLOBAL#Conventions=COARDS, CF-1.5
>>>> 
>>>>   NC_GLOBAL#description=Spherical Mercator Projected with -Jm1 -R0/360/-80.0023237126/80.0023237126
>>>> 
>>>>   NC_GLOBAL#GMT_version=5.4.3 (r19528) [64-bit]
>>>> 
>>>>  
>>>> 
>>>> Should I be using one of 54004 or 41001?  e.g. https://epsg.io/?q=spherical+mercator
>>>> 
>>>>  
>>>> 
>>>> Thanks!
>>>> 
>>>> -kurt
>>>> 
>>>>  
>>>> 
>>> 
>>> 
>>> -- 
>>> --
>>> http://schwehr.org
> 
> 
> -- 
> --
> http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190508/df5bba0b/attachment-0001.html>

From a.furieri at lqt.it  Thu May  9 00:36:50 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Thu, 09 May 2019 09:36:50 +0200
Subject: [PROJ] PROJ 6.1.0RC2: trivial glitch
Message-ID: <e3bf18523b4bd67cde7312a36906afb1@lqt.it>

pj_release wrongly reports:

Rel. 6.1.0, September 1st, 2019

bye Sandro

From kreve at sdfe.dk  Thu May  9 00:42:28 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 9 May 2019 07:42:28 +0000
Subject: [PROJ] PROJ 6.1.0RC2: trivial glitch
In-Reply-To: <e3bf18523b4bd67cde7312a36906afb1@lqt.it>
References: <e3bf18523b4bd67cde7312a36906afb1@lqt.it>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF180F26@S000014.PROD.SITAD.DK>

God dammit! Thanks, I'm on it :-)

/Kristian

-----Oprindelig meddelelse-----
Fra: PROJ <proj-bounces at lists.osgeo.org> PÃ¥ vegne af a.furieri at lqt.it
Sendt: 9. maj 2019 09:37
Til: proj at lists.osgeo.org
Emne: [PROJ] PROJ 6.1.0RC2: trivial glitch

pj_release wrongly reports:

Rel. 6.1.0, September 1st, 2019

bye Sandro
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From kreve at sdfe.dk  Thu May  9 14:34:52 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 9 May 2019 21:34:52 +0000
Subject: [PROJ] PROJ 6.1.0RC2: it's a bug ?
In-Reply-To: <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
References: <6E0FE36F-6E0B-42CF-A3F3-A535CC0548A8@sdfe.dk>
 <34d36c900f1a87830a2f7b0dc672b755@lqt.it> <4011250.X5elrayOQx@even-i700>
 <2623900.Kk6HVcXu8m@even-i700> <535F1918-60BD-4767-9200-81CC0980F398@sdfe.dk>
Message-ID: <B99A3329-E573-4966-BD70-011D775EF023@sdfe.dk>



On 8 May 2019, at 16:03, Kristian Evers <kreve at sdfe.dk<mailto:kreve at sdfe.dk>> wrote:


On 8 May 2019, at 15:58, Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> wrote:

On mercredi 8 mai 2019 12:01:48 CEST Even Rouault wrote:
On mercredi 8 mai 2019 11:14:19 CEST a.furieri at lqt.it<mailto:a.furieri at lqt.it> wrote:
the following C code snippet raises an unexpected exception:

PJ *p1;
PJ *p2;
PJ_CONTEXT *ctx = proj_create_context();
p1 = proj_create_crs_to_crs(ctx, "EPSG:4326", "EPSG:3003", NULL);
p2 = proj_normalize_for_visualization(ctx, p1);

proj_normalize_for_visualization:
Object is not a CoordinateOperation created with proj_create_crs_to_crs

Yes, this is a bug.
I've prepared a fix for it in
https://github.com/OSGeo/proj.4/pull/1459

merged in master and backported to 6.1


All

That also means we will have an RC3. Iâll try to find the time to put it up tomorrow,
otherwise early on Friday. I would really like that one to be the last RC, so if you
havenât tested RC2 yet please do so and report any issues you find.


I just tried to upload RC3 but unfortunately I get a âpermission deniedâ message back
from download.osgeo.org<http://download.osgeo.org> so that isnât happening now. It seems that the server has been
moved. Possibly my privileges hasnât been migrated to the new server. Is someone in the
know about this?

I will try again tomorrow morning - hopefully it works without further complications.


/Kristian

--
Spatialys - Geospatial professional services
http://www.spatialys.com<http://www.spatialys.com/>
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190509/48d58c0e/attachment.html>

From kreve at sdfe.dk  Fri May 10 05:41:09 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 10 May 2019 12:41:09 +0000
Subject: [PROJ] PROJ 6.1.0RC3
Message-ID: <B3C1DB89-275E-462F-BD56-1C883E7AC1E9@sdfe.dk>

After a few issues were found in PROJ 6.1.0RC2 I have now prepared a third release candidate. Grab it here:

https://download.osgeo.org/proj/proj-6.1.0RC3.tar.gz (https://download.osgeo.org/proj/proj-6.1.0RC3.tar.gz.md5)
https://download.osgeo.org/proj/proj-6.1.0RC3.zip (https://download.osgeo.org/proj/proj-6.1.0RC3.zip.md5)

A new release candidate for the proj-datumgrid-europe 1.3 package is also available:

https://download.osgeo.org/proj/proj-datumgrid-europe-1.3RC2.tar.gz
https://download.osgeo.org/proj/proj-datumgrid-europe-1.3RC2.zip

As always, please test the release candidates and report any issues you encounter.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190510/2a013452/attachment.html>

From a.furieri at lqt.it  Sat May 11 04:09:23 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Sat, 11 May 2019 13:09:23 +0200
Subject: [PROJ] PROJ 6.1.0RC3
In-Reply-To: <B3C1DB89-275E-462F-BD56-1C883E7AC1E9@sdfe.dk>
References: <B3C1DB89-275E-462F-BD56-1C883E7AC1E9@sdfe.dk>
Message-ID: <4aee2fd4f381645ff9793311d8cefa05@lqt.it>

On Fri, 10 May 2019 12:41:09 +0000, Kristian Evers wrote:
> As always, please test the release candidates and report any issues
> you encounter.
>

Hi Kristian,

from my tests it works nicely on both Linux and Windows-MinGW

bye Sandro

From kreve at sdfe.dk  Sat May 11 05:41:32 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sat, 11 May 2019 12:41:32 +0000
Subject: [PROJ] PROJ 6.1.0RC3
In-Reply-To: <4aee2fd4f381645ff9793311d8cefa05@lqt.it>
References: <B3C1DB89-275E-462F-BD56-1C883E7AC1E9@sdfe.dk>
 <4aee2fd4f381645ff9793311d8cefa05@lqt.it>
Message-ID: <7362ABEF-A496-4914-92B5-A62E57F1EEC2@sdfe.dk>

Thanks Sandro, your testing has been very valuable this time a round.

Also big thanks to Bas for raising the RDNAP issue again so a proper fix good be made.

/Kristian

> On 11 May 2019, at 13:09, a.furieri at lqt.it wrote:
> 
> On Fri, 10 May 2019 12:41:09 +0000, Kristian Evers wrote:
>> As always, please test the release candidates and report any issues
>> you encounter.
>> 
> 
> Hi Kristian,
> 
> from my tests it works nicely on both Linux and Windows-MinGW
> 
> bye Sandro
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From nyall.dawson at gmail.com  Sat May 11 21:47:00 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sun, 12 May 2019 14:47:00 +1000
Subject: [PROJ] How to match a proj string to the db?
Message-ID: <CAB28AshPnM2=5ee6hGQOtvrCNS481y-OJKa+JUgJM7wC=o6vEA@mail.gmail.com>

Hi list

Still fighting with transitioning QGIS to proj 6. (Honestly, I wonder
if this task will ever end...!)

If I have a proj string (say +proj=longlat +datum=WGS84 +no_defs
+type=crs), how can I match this back to an authority/code from proj's
db?

proj_identify doesn't seem to be capable of this (maybe by design? The
dox say: "This is implemented for GeodeticCRS, ProjectedCRS,
VerticalCRS and CompoundCRS"). The dox for proj_identify also have a
cryptic note "The candidate CRSs are either hard-coded, or looked in
the database when authorityFactory is not null." What exactly does
this mean? I can't see where authorityFactory is specified, or a hard
coded list of candidates is specified either... Is this outdated
documentation?

Nyall

From even.rouault at spatialys.com  Sun May 12 00:09:47 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 12 May 2019 09:09:47 +0200
Subject: [PROJ] How to match a proj string to the db?
In-Reply-To: <CAB28AshPnM2=5ee6hGQOtvrCNS481y-OJKa+JUgJM7wC=o6vEA@mail.gmail.com>
References: <CAB28AshPnM2=5ee6hGQOtvrCNS481y-OJKa+JUgJM7wC=o6vEA@mail.gmail.com>
Message-ID: <17908246.aErUBKJ08S@even-i700>

Hi Nyall,

> If I have a proj string (say +proj=longlat +datum=WGS84 +no_defs
> +type=crs), how can I match this back to an authority/code from proj's
> db?

You just hit a bug. The issue is that instanciating from PROJ string for a 
GeographicCRS like the above creates a long,lat coordinate system, whereas 
EPSG:4326 is lat,long. I've just fixed this in master and 6.1 branches by 
setting a flag to indicate that CRS identification must be axis order 
tolerant.

> 
> proj_identify doesn't seem to be capable of this (maybe by design? The
> dox say: "This is implemented for GeodeticCRS, ProjectedCRS,
> VerticalCRS and CompoundCRS"). The dox for proj_identify also have a
> cryptic note "The candidate CRSs are either hard-coded, or looked in
> the database when authorityFactory is not null." What exactly does
> this mean? I can't see where authorityFactory is specified, or a hard
> coded list of candidates is specified either... Is this outdated
> documentation?

The later part is a copy&paste from the corresponding C++ which in clearer 
terms translate to "when the database is available". Also fixed.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Sun May 12 00:21:25 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sun, 12 May 2019 17:21:25 +1000
Subject: [PROJ] How to match a proj string to the db?
In-Reply-To: <17908246.aErUBKJ08S@even-i700>
References: <CAB28AshPnM2=5ee6hGQOtvrCNS481y-OJKa+JUgJM7wC=o6vEA@mail.gmail.com>
 <17908246.aErUBKJ08S@even-i700>
Message-ID: <CAB28AsiqKA2sziQ0JGAFXXumVBjNL9npwweK7qCgc4-Q2hDOQw@mail.gmail.com>

On Sun, 12 May 2019 at 17:09, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi Nyall,
>
> > If I have a proj string (say +proj=longlat +datum=WGS84 +no_defs
> > +type=crs), how can I match this back to an authority/code from proj's
> > db?
>
> You just hit a bug. The issue is that instanciating from PROJ string for a
> GeographicCRS like the above creates a long,lat coordinate system, whereas
> EPSG:4326 is lat,long. I've just fixed this in master and 6.1 branches by
> setting a flag to indicate that CRS identification must be axis order
> tolerant.
>

Great -- thanks for the confirmation and quick response!

> >
> > proj_identify doesn't seem to be capable of this (maybe by design? The
> > dox say: "This is implemented for GeodeticCRS, ProjectedCRS,
> > VerticalCRS and CompoundCRS"). The dox for proj_identify also have a
> > cryptic note "The candidate CRSs are either hard-coded, or looked in
> > the database when authorityFactory is not null." What exactly does
> > this mean? I can't see where authorityFactory is specified, or a hard
> > coded list of candidates is specified either... Is this outdated
> > documentation?
>
> The later part is a copy&paste from the corresponding C++ which in clearer
> terms translate to "when the database is available". Also fixed.

What about the "hard-coded" part of the text? What exactly does this
mean? I can't see anyway to specify this list of hard-coded
candidates.

Nyall



>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From nyall.dawson at gmail.com  Sun May 12 03:25:52 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sun, 12 May 2019 20:25:52 +1000
Subject: [PROJ] How to match a proj string to the db?
In-Reply-To: <CAB28AsiqKA2sziQ0JGAFXXumVBjNL9npwweK7qCgc4-Q2hDOQw@mail.gmail.com>
References: <CAB28AshPnM2=5ee6hGQOtvrCNS481y-OJKa+JUgJM7wC=o6vEA@mail.gmail.com>
 <17908246.aErUBKJ08S@even-i700>
 <CAB28AsiqKA2sziQ0JGAFXXumVBjNL9npwweK7qCgc4-Q2hDOQw@mail.gmail.com>
Message-ID: <CAB28Asg=J1mkpL9Oitt3o9uL8XTcJ6jH4KNk39QySb0eqKSOXA@mail.gmail.com>

On Sun, 12 May 2019 at 17:21, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>
> On Sun, 12 May 2019 at 17:09, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > Hi Nyall,
> >
> > > If I have a proj string (say +proj=longlat +datum=WGS84 +no_defs
> > > +type=crs), how can I match this back to an authority/code from proj's
> > > db?
> >
> > You just hit a bug. The issue is that instanciating from PROJ string for a
> > GeographicCRS like the above creates a long,lat coordinate system, whereas
> > EPSG:4326 is lat,long. I've just fixed this in master and 6.1 branches by
> > setting a flag to indicate that CRS identification must be axis order
> > tolerant.
> >
>
> Great -- thanks for the confirmation and quick response!

I've just tested with master, and I'm still struggling here.

PJ* crs = proj_create( 0, "+proj=longlat +datum=WGS84 +no_defs +type=crs")
if ( PJ_OBJ_LIST *crsList = proj_identify( 0, crs, nullptr, nullptr,
&confidence ) )
{
 // never reached, regardless of proj string
}

Should proj_identify work ok in this situation?

Nyall





> > http://www.spatialys.com

From nyall.dawson at gmail.com  Sun May 12 15:38:47 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 13 May 2019 08:38:47 +1000
Subject: [PROJ] Definition of EPSG:4164
Message-ID: <CAB28Asghe2UUDnKJ8r_j-NK+t7eww=ppSnRMwEm64uXMHg7PAw@mail.gmail.com>

Hi list,

On proj master, running "projinfo EPSG:4164" results in the output (as
expected) of:

PROJ.4 string:
+proj=longlat +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +no_defs +type=crs

Yet, running the code:

PJ* crs = proj_create_from_database( 0, "EPSG", "4164",
PJ_CATEGORY_CRS, false, nullptr );
const char* projstring = proj_as_proj_string( 0, crs, PJ_PROJ_4, nullptr);

results in "+proj=longlat +ellps=krass +no_defs +type=crs", with no
towgs84 param.

What am I missing here?

Nyall

From even.rouault at spatialys.com  Sun May 12 18:46:10 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 May 2019 03:46:10 +0200
Subject: [PROJ] Definition of EPSG:4164
In-Reply-To: <CAB28Asghe2UUDnKJ8r_j-NK+t7eww=ppSnRMwEm64uXMHg7PAw@mail.gmail.com>
References: <CAB28Asghe2UUDnKJ8r_j-NK+t7eww=ppSnRMwEm64uXMHg7PAw@mail.gmail.com>
Message-ID: <1643977.lEy5myefm7@even-i700>

On lundi 13 mai 2019 08:38:47 CEST Nyall Dawson wrote:
> Hi list,
> 
> On proj master, running "projinfo EPSG:4164" results in the output (as
> expected) of:
> 
> PROJ.4 string:
> +proj=longlat +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +no_defs +type=crs
> 
> Yet, running the code:
> 
> PJ* crs = proj_create_from_database( 0, "EPSG", "4164",
> PJ_CATEGORY_CRS, false, nullptr );
> const char* projstring = proj_as_proj_string( 0, crs, PJ_PROJ_4, nullptr);
> 
> results in "+proj=longlat +ellps=krass +no_defs +type=crs", with no
> towgs84 param.
> 
> What am I missing here?
> 

projinfo does indeed a little more work by calling  
proj_crs_create_bound_crs_to_WGS84() which makes en effort to retrieve a 
towgs84 clause when it is possible to add one (this one is defined in 
proj_experimental.h, which should rather be understood as "proj advanced") 
first.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sun May 12 18:54:30 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 May 2019 03:54:30 +0200
Subject: [PROJ] How to match a proj string to the db?
In-Reply-To: <CAB28Asg=J1mkpL9Oitt3o9uL8XTcJ6jH4KNk39QySb0eqKSOXA@mail.gmail.com>
References: <CAB28AshPnM2=5ee6hGQOtvrCNS481y-OJKa+JUgJM7wC=o6vEA@mail.gmail.com>
 <CAB28AsiqKA2sziQ0JGAFXXumVBjNL9npwweK7qCgc4-Q2hDOQw@mail.gmail.com>
 <CAB28Asg=J1mkpL9Oitt3o9uL8XTcJ6jH4KNk39QySb0eqKSOXA@mail.gmail.com>
Message-ID: <2800892.B47oEphnmE@even-i700>

On dimanche 12 mai 2019 20:25:52 CEST Nyall Dawson wrote:
> PJ* crs = proj_create( 0, "+proj=longlat +datum=WGS84 +no_defs +type=crs")
> if ( PJ_OBJ_LIST *crsList = proj_identify( 0, crs, nullptr, nullptr,
> &confidence ) )
> {
>  // never reached, regardless of proj string
> }

Hum, works for me. Is PROJ_LIB properly set ?


> What about the "hard-coded" part of the text? What exactly does this
> mean? I can't see anyway to specify this list of hard-coded
> candidates.

No, it means that there are a few CRS whose definitions is hard coded and so 
identify() might be able to identiy them even if the database is not 
available. But you can ignore that implementation detail.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Sun May 12 19:02:15 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 13 May 2019 12:02:15 +1000
Subject: [PROJ] Definition of EPSG:4164
In-Reply-To: <1643977.lEy5myefm7@even-i700>
References: <CAB28Asghe2UUDnKJ8r_j-NK+t7eww=ppSnRMwEm64uXMHg7PAw@mail.gmail.com>
 <1643977.lEy5myefm7@even-i700>
Message-ID: <CAB28AsgiLOPZD-j-6pmAR_+fMq--LMASYH0RSxogiWYGkravMw@mail.gmail.com>

On Mon, 13 May 2019 at 11:46, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On lundi 13 mai 2019 08:38:47 CEST Nyall Dawson wrote:
> > Hi list,
> >
> > On proj master, running "projinfo EPSG:4164" results in the output (as
> > expected) of:
> >
> > PROJ.4 string:
> > +proj=longlat +ellps=krass +towgs84=-76,-138,67,0,0,0,0 +no_defs +type=crs
> >
> > Yet, running the code:
> >
> > PJ* crs = proj_create_from_database( 0, "EPSG", "4164",
> > PJ_CATEGORY_CRS, false, nullptr );
> > const char* projstring = proj_as_proj_string( 0, crs, PJ_PROJ_4, nullptr);
> >
> > results in "+proj=longlat +ellps=krass +no_defs +type=crs", with no
> > towgs84 param.
> >
> > What am I missing here?
> >
>
> projinfo does indeed a little more work by calling
> proj_crs_create_bound_crs_to_WGS84() which makes en effort to retrieve a
> towgs84 clause when it is possible to add one (this one is defined in
> proj_experimental.h, which should rather be understood as "proj advanced")
> first.

So should we always be calling proj_crs_create_bound_crs_to_WGS84 (if
I'm trying to get a proj string which matches the official
definition)? When would we *not* want to use this method?

Nyall

From even.rouault at spatialys.com  Sun May 12 19:42:51 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 May 2019 04:42:51 +0200
Subject: [PROJ] Definition of EPSG:4164
In-Reply-To: <CAB28AsgiLOPZD-j-6pmAR_+fMq--LMASYH0RSxogiWYGkravMw@mail.gmail.com>
References: <CAB28Asghe2UUDnKJ8r_j-NK+t7eww=ppSnRMwEm64uXMHg7PAw@mail.gmail.com>
 <1643977.lEy5myefm7@even-i700>
 <CAB28AsgiLOPZD-j-6pmAR_+fMq--LMASYH0RSxogiWYGkravMw@mail.gmail.com>
Message-ID: <19974990.OQRTOpyl4i@even-i700>

> So should we always be calling proj_crs_create_bound_crs_to_WGS84 (if
> I'm trying to get a proj string which matches the official
> definition)? When would we *not* want to use this method?

Not sure if there's really an "official" definition, but if you want to 
approach past behaviour as much as possible, yes, you should use it. There 
should not be any disavantage with using it.
Note however that you will not always get the same results as before. See one 
of my recent exchange with Sandro Furieri about EPSG:3003

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Sun May 12 21:14:23 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 13 May 2019 14:14:23 +1000
Subject: [PROJ] How to match a proj string to the db?
In-Reply-To: <2800892.B47oEphnmE@even-i700>
References: <CAB28AshPnM2=5ee6hGQOtvrCNS481y-OJKa+JUgJM7wC=o6vEA@mail.gmail.com>
 <CAB28AsiqKA2sziQ0JGAFXXumVBjNL9npwweK7qCgc4-Q2hDOQw@mail.gmail.com>
 <CAB28Asg=J1mkpL9Oitt3o9uL8XTcJ6jH4KNk39QySb0eqKSOXA@mail.gmail.com>
 <2800892.B47oEphnmE@even-i700>
Message-ID: <CAB28AsjJsg9rJR7AQCvPS78p2+1ATdcyV4Xy1zBNjK4eCeXBQA@mail.gmail.com>

On Mon, 13 May 2019 at 11:54, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On dimanche 12 mai 2019 20:25:52 CEST Nyall Dawson wrote:
> > PJ* crs = proj_create( 0, "+proj=longlat +datum=WGS84 +no_defs +type=crs")
> > if ( PJ_OBJ_LIST *crsList = proj_identify( 0, crs, nullptr, nullptr,
> > &confidence ) )
> > {
> >  // never reached, regardless of proj string
> > }
>
> Hum, works for me. Is PROJ_LIB properly set ?

Sorry for the noise, false alarm. It *is* working correctly now!

Nyall

From kreve at sdfe.dk  Mon May 13 02:34:52 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 13 May 2019 09:34:52 +0000
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>

PSC Members,

I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
The motion will be concluded May 15th.

I'll start with my +1.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190513/8bc644e8/attachment.html>

From even.rouault at spatialys.com  Mon May 13 04:59:52 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 May 2019 06:59:52 -0500
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
Message-ID: <4029471.Hz7oO4ii96@even-i700>

On lundi 13 mai 2019 09:34:52 CDT Kristian Evers wrote:
> PSC Members,
> 
> I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
> The motion will be concluded May 15th.
> 
> I'll start with my +1.

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From alansnow21 at gmail.com  Mon May 13 05:36:28 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Mon, 13 May 2019 07:36:28 -0500
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <4029471.Hz7oO4ii96@even-i700>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
 <4029471.Hz7oO4ii96@even-i700>
Message-ID: <CAGybdFQuTYKRxRaVafSza+mTqjekg2-XUDPR73ZLj2iEfq_YsA@mail.gmail.com>

It should be noted that proj_identify does not filter by auth_name (I
raised an issue about that). Everything else works great ð. So, if that
capability is not a deal breaker, should be fine to proceed with the
release.

On Mon, May 13, 2019, 7:00 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 13 mai 2019 09:34:52 CDT Kristian Evers wrote:
> > PSC Members,
> >
> > I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
> > The motion will be concluded May 15th.
> >
> > I'll start with my +1.
>
> +1 Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190513/0371899c/attachment-0001.html>

From howard at hobu.co  Mon May 13 07:01:07 2019
From: howard at hobu.co (Howard Butler)
Date: Mon, 13 May 2019 09:01:07 -0500
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <CAGybdFQuTYKRxRaVafSza+mTqjekg2-XUDPR73ZLj2iEfq_YsA@mail.gmail.com>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
 <4029471.Hz7oO4ii96@even-i700>
 <CAGybdFQuTYKRxRaVafSza+mTqjekg2-XUDPR73ZLj2iEfq_YsA@mail.gmail.com>
Message-ID: <75771C13-0E78-4E28-B257-611BB824EB7C@hobu.co>

+1 

Howard

> On May 13, 2019, at 7:36 AM, Alan Snow <alansnow21 at gmail.com> wrote:
> 
> It should be noted that proj_identify does not filter by auth_name (I raised an issue about that). Everything else works great ð. So, if that capability is not a deal breaker, should be fine to proceed with the release.
> 
>> On Mon, May 13, 2019, 7:00 AM Even Rouault <even.rouault at spatialys.com> wrote:
>> On lundi 13 mai 2019 09:34:52 CDT Kristian Evers wrote:
>> > PSC Members,
>> > 
>> > I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
>> > The motion will be concluded May 15th.
>> > 
>> > I'll start with my +1.
>> 
>> +1 Even
>> 
>> -- 
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190513/6850d1b3/attachment.html>

From even.rouault at spatialys.com  Mon May 13 07:53:35 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 May 2019 09:53:35 -0500
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <CAGybdFQuTYKRxRaVafSza+mTqjekg2-XUDPR73ZLj2iEfq_YsA@mail.gmail.com>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
 <4029471.Hz7oO4ii96@even-i700>
 <CAGybdFQuTYKRxRaVafSza+mTqjekg2-XUDPR73ZLj2iEfq_YsA@mail.gmail.com>
Message-ID: <10185713.f3TNzdBiyc@even-i700>

On lundi 13 mai 2019 07:36:28 CDT Alan Snow wrote:
> It should be noted that proj_identify does not filter by auth_name (I
> raised an issue about that). Everything else works great ð. So, if that
> capability is not a deal breaker, should be fine to proceed with the
> release.

I've just issued a pull request ( https://github.com/OSGeo/proj.4/pull/1466 ) 
to fix it.
I don't think that is a release blocker though. The bug was already in 6.0. 
There will always been known and unknown bugs in any release we issue...

A possible workaround is to export the CRS to identify as a PROJ string, 
create a new CRS object from it, and identify it by restricting to the EPSG 
authoriy name (of course you'll loose some information). Or a bit better, but 
more involved, export as WKT, remove the ID/AUTHORITY node, and identify.

Even

> 
> On Mon, May 13, 2019, 7:00 AM Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > On lundi 13 mai 2019 09:34:52 CDT Kristian Evers wrote:
> > > PSC Members,
> > > 
> > > I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
> > > The motion will be concluded May 15th.
> > > 
> > > I'll start with my +1.
> > 
> > +1 Even
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com
> > _______________________________________________
> > PROJ mailing list
> > PROJ at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/proj


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From knudsen.thomas at gmail.com  Mon May 13 10:51:10 2019
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Mon, 13 May 2019 18:51:10 +0100
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
Message-ID: <CAH0YoENTLYiYi_Z5jm3_94+JPaPKALHgHw7HRk7UK5oU6RCZ+g@mail.gmail.com>

+1

man. 13. maj 2019 11.10 skrev Kristian Evers <kreve at sdfe.dk>:

> PSC Members,
>
>
>
> I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
>
> The motion will be concluded May 15th.
>
>
>
> Iâll start with my +1.
>
>
>
> /Kristian
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190513/ea331c3e/attachment.html>

From alansnow21 at gmail.com  Mon May 13 14:23:05 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Mon, 13 May 2019 16:23:05 -0500
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <CAH0YoENTLYiYi_Z5jm3_94+JPaPKALHgHw7HRk7UK5oU6RCZ+g@mail.gmail.com>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
 <CAH0YoENTLYiYi_Z5jm3_94+JPaPKALHgHw7HRk7UK5oU6RCZ+g@mail.gmail.com>
Message-ID: <CAGybdFR3FNEDVqXexk5dA=hro-ozhn9H_=RwRm8JWpK1q00RKQ@mail.gmail.com>

Nice work Even, thanks!

+1

On Mon, May 13, 2019, 12:51 PM Thomas Knudsen <knudsen.thomas at gmail.com>
wrote:

> +1
>
> man. 13. maj 2019 11.10 skrev Kristian Evers <kreve at sdfe.dk>:
>
>> PSC Members,
>>
>>
>>
>> I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
>>
>> The motion will be concluded May 15th.
>>
>>
>>
>> Iâll start with my +1.
>>
>>
>>
>> /Kristian
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190513/a83fd535/attachment.html>

From nyall.dawson at gmail.com  Mon May 13 16:10:26 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 14 May 2019 09:10:26 +1000
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
Message-ID: <CAB28AsieRe0qKA741=Z-fy+hkZGRWs+Z6+CqLYTu8ej6N-JWLQ@mail.gmail.com>

On Mon, 13 May 2019 at 20:10, Kristian Evers <kreve at sdfe.dk> wrote:
>
> PSC Members,
>
>
>
> I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
>
> The motion will be concluded May 15th.
>
>
>
> Iâll start with my +1.

It's looking good for me, and is passing all the QGIS unit tests too now!

Nyall

From nyall.dawson at gmail.com  Mon May 13 16:13:10 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 14 May 2019 09:13:10 +1000
Subject: [PROJ] Sincere thanks!
Message-ID: <CAB28AsisAbimd7zg9rZiEgRN0PxjMXXpk5GgHGJN6=M=aTGbzA@mail.gmail.com>

Hi proj list,

I feel like it would be remiss of me not to acknowledge just how
helpful and responsive this list (and the proj development team) have
been to all my recent questions and confusions.

You've been fantastic, and have gone well and truly above any possible
expectations from an open-source community(*).

So, many many thanks for all your assistance and hard work on this
project. It's definitely noticed and appreciated!

Nyall




* Who would be totally within their rights to just say "read the code,
figure this out for yourself"

From alansnow21 at gmail.com  Mon May 13 17:36:02 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Mon, 13 May 2019 19:36:02 -0500
Subject: [PROJ] Sincere thanks!
In-Reply-To: <CAB28AsisAbimd7zg9rZiEgRN0PxjMXXpk5GgHGJN6=M=aTGbzA@mail.gmail.com>
References: <CAB28AsisAbimd7zg9rZiEgRN0PxjMXXpk5GgHGJN6=M=aTGbzA@mail.gmail.com>
Message-ID: <CAGybdFSAAZqWKSr7QYoz5_Z5Z1dtEE4NZZ4ca99Q3zJR-mk-og@mail.gmail.com>

I can second that thought! Y'all are great!

On Mon, May 13, 2019, 6:13 PM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> Hi proj list,
>
> I feel like it would be remiss of me not to acknowledge just how
> helpful and responsive this list (and the proj development team) have
> been to all my recent questions and confusions.
>
> You've been fantastic, and have gone well and truly above any possible
> expectations from an open-source community(*).
>
> So, many many thanks for all your assistance and hard work on this
> project. It's definitely noticed and appreciated!
>
> Nyall
>
>
>
>
> * Who would be totally within their rights to just say "read the code,
> figure this out for yourself"
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190513/75e24afa/attachment.html>

From jochem.lesparre at kadaster.nl  Mon May 13 23:25:27 2019
From: jochem.lesparre at kadaster.nl (Jochem)
Date: Mon, 13 May 2019 23:25:27 -0700 (MST)
Subject: [PROJ] CRS job opportunity
Message-ID: <1557815127677-0.post@n6.nabble.com>

Please allow me to share a vacancy at Kadaster (National Mapping Agency of
the Netherlands) on coordinate reference systems en transformations. We are
looking for a geodesist with in-depth knowledge of GNSS data processing: 
Full text of vacancy
<https://www.werkenbijhetkadaster.nl/vacature?vacancy=16681>  .




--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From kreve at sdfe.dk  Wed May 15 09:47:18 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 15 May 2019 16:47:18 +0000
Subject: [PROJ] Motion: Promote 6.1.0RC3 to final release
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EAF18BF46@S000014.PROD.SITAD.DK>
Message-ID: <5DC8CCCB-7C40-485A-8B59-8F92047D91D7@sdfe.dk>

Motion passed with +1âs from Howard, Even, Thomas and myself.

Expect a release announcement within the next couple of hours.

/Kristian

On 13 May 2019, at 11:34, Kristian Evers <kreve at sdfe.dk<mailto:kreve at sdfe.dk>> wrote:

PSC Members,

I hereby motion that PROJ 6.1.0RC3 be promoted to final release.
The motion will be concluded May 15th.

Iâll start with my +1.

/Kristian
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190515/9939ae6f/attachment.html>

From kreve at sdfe.dk  Wed May 15 11:36:26 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 15 May 2019 18:36:26 +0000
Subject: [PROJ] Announcing PROJ 6.1.0
Message-ID: <70029616-41C6-4C10-A906-5BE32B4401CC@sdfe.dk>

On behalf of the PROJ development team I am happy to announce
the release of PROJ 6.1.0. This release includes both bug fixes and
new features (see the release notes below for details).

Download the source distribution here:

  https://download.osgeo.org/proj/proj-6.1.0.tar.gz
  https://download.osgeo.org/proj/proj-6.1.0.zip


In addition to the new version of PROJ we are also releasing new version
of the datum grid package covering Europe which includes new grids for
Belgium and France. Download the package here:


  https://download.osgeo.org/proj/proj-datumgrid-europe-1.3.tar.gz
  https://download.osgeo.org/proj/proj-datumgrid-europe-1.3.zip



6.1.0 Release Notes
-------------------

 Updates
 -------

 o Include custom ellipsoid definitions from QGIS (#1337)

 o Add "-k ellipsoid" option to projinfo (#1338)

 o Make cs2cs support 4D coordinates (#1355)

 o WKT2 parser: update to OGC 18-010r6 (#1360 #1366)

 o Update internal version of googletest to v1.8.1 (#1361)

 o Database update: EPSG v9.6.2 (#1462), IGNF v3.0.3, ESRI 10.7.0
   and add operation_version column (#1368)

 o Add proj_normalize_for_visualization() that attempts to apply axis
   ordering as used by most GIS applications and PROJ <6 (#1387)

 o Added noop operation (#1391)

 o Paths set by user take priority over PROJ_LIB for search paths (#1398)

 o Reduced database size (#1438)

 o add support for compoundCRS and concatenatedOperation named from
   their components (#1441)

 Bug fixes
 ---------

 o Have gie return non-zero code when file can't be opened (#1312)

 o CMake cross-compilation fix (#1316)

 o Use 1st eccentricity instead of 2nd eccentricity in Molodensky (#1324)

 o Make sure to include grids when doing Geocentric to CompoundCRS with
   nadgrids+geoidgrids transformations (#1326)

 o Handle coordinates outside of bbox better (#1333)

 o Enable system error messages in command line automatically in builds (#1336)

 o Make sure to install projinfo man page with CMake (#1347)

 o Add data dir to pkg-config file proj.pc (#1348)

 o Fix GCC 9 warning about useless std::move() (#1352)

 o Grid related fixes (#1369)

 o Make sure that ISO19111 C++ code sets pj_errno on errors (#1405)

 o vgridshift: handle longitude wrap-around for grids with 360deg
   longitude extent (#1429)

 o proj/cs2cs: validate value of -f parameter to avoid potential crashes (#1434)

 o Many division by zero and similar bug fixes found by OSS Fuzz.


From kreve at sdfe.dk  Thu May 16 00:50:07 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 16 May 2019 07:50:07 +0000
Subject: [PROJ] Update on OSGeo Incubation
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF194EA9@S000014.PROD.SITAD.DK>

All,

PROJ was recently accepted into the OSGeo incubation program [0]. The first task for the project is to fill out the incubation checklist. I've added it to the wiki on GitHub [1]. I have started filling it out myself but so far I have only made it through a third of it. I plan to finish this soon but should someone have the urge to step in and give a helping hand, please feel free.

/Kristian

[0] https://lists.osgeo.org/pipermail/incubator/2019-May/003854.html
[1] https://github.com/OSGeo/proj.4/wiki/Incubation-checklist
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190516/f719e533/attachment.html>

From Didier.Richard at ign.fr  Sat May 18 03:00:20 2019
From: Didier.Richard at ign.fr (Didier Richard)
Date: Sat, 18 May 2019 10:00:20 +0000
Subject: [PROJ] [PROJ 6.1.0] Tests failed on vertical grid shift for France
 mainland onshore
Message-ID: <D4387E9F6EBB5244B21A09D84C0D41B0010CD3272F@mailex1.ign.fr>

Hi all,

While running make check after a fresh install, the following error appeared :

...
============================================
Running ../../test/cli/testprojinfo using ../../src/projinfo:
============================================
diff testprojinfo_out with testprojinfo_out.dist
--- testprojinfo_out    2019-05-18 10:52:56.203561622 +0200
+++ ../../test/cli/testprojinfo_out.dist        2019-05-06 07:12:09.000000000 +0200
@@ -762,18 +762,18 @@
 -------------------------------------
 Operation nÂ°1:
 
-INVERSE(DERIVED_FROM(EPSG)):8371, Inverse of RGF93 to NGF IGN69 height (2), 0.02 m, France - mainland onshore
+INVERSE(DERIVED_FROM(EPSG)):8885, Inverse of RGF93 to NGF IGN69 height (3), 0.01 m, France - mainland onshore
 
 PROJ string:
-+proj=vgridshift +grids=RAF09.gtx +multiplier=1
++proj=vgridshift +grids=RAF18.gtx +multiplier=1
 
 -------------------------------------
 Operation nÂ°2:
 
-INVERSE(DERIVED_FROM(EPSG)):8885, Inverse of RGF93 to NGF IGN69 height (3), 0.01 m, France - mainland onshore
+INVERSE(DERIVED_FROM(EPSG)):8371, Inverse of RGF93 to NGF IGN69 height (2), 0.02 m, France - mainland onshore
 
 PROJ string:
-+proj=vgridshift +grids=RAF18.gtx +multiplier=1
++proj=vgridshift +grids=RAF09.gtx +multiplier=1
 
 -------------------------------------
 Operation nÂ°3:

PROBLEMS HAVE OCCURRED
test file testprojinfo_out saved


RAF18.gtx is related to France mainland onshore while RAF09.gtx is related to French Antilla.

Looking at sql files :

sql/grid_transformation.sql:INSERT INTO "grid_transformation" VALUES('EPSG','8371','RGF93 to NGF IGN69 height (2)',NULL,NULL,'EPSG','1073','Geographic3D to GravityRelatedHeight (IGN2009)','EPSG','4965','EPSG','5720','EPSG','1326',0.02,'EPSG','8666','Geoid (height correction) model file','RAF09.mnt',NULL,NULL,NULL,NULL,NULL,NULL,'IGN Fra 09',0);
sql/grid_transformation.sql:INSERT INTO "grid_transformation" VALUES('EPSG','8885','RGF93 to NGF IGN69 height (3)',NULL,NULL,'EPSG','1073','Geographic3D to GravityRelatedHeight (IGN2009)','EPSG','4965','EPSG','5720','EPSG','1326',0.01,'EPSG','8666','Geoid (height correction) model file','RAF18.tac',NULL,NULL,NULL,NULL,NULL,NULL,'IGN Fra 18',0);

sql/supersession.sql:INSERT INTO "supersession" VALUES('grid_transformation','EPSG','8371','grid_transformation','EPSG','8885','EPSG');

-- Remove supression entry of EPSG:8371 ("RGF93 to NGF IGN69 height (2)", using RAF09.mnt) by
-- EPSG:8885 ("RGF93 to NGF IGN69 height (3)", using RAF18.tac), since
-- we have only RAF09.mnt in proj-datumgrid-europe
-- Our code to remove superseded operations should probably take into account grid availability
DELETE FROM "supersession" WHERE superseded_table_name = 'grid_transformation' AND
                                 superseded_auth_name = 'EPSG' AND
                                 superseded_code = '8371' AND
                                 replacement_table_name = 'grid_transformation' AND
                                 replacement_auth_name = 'EPSG' AND
                                 replacement_code = '8885' AND
                                 source = 'EPSG';

There seams to have no difference between these lines in 6.0.0 and 6.10 sql files.
Any idea ?

Best regards,
--
RICHARD Didier - Chef du Centre de CompÃ©tences Technologies des SystÃ¨mes d'Information
http://fr.linkedin.com/pub/didier-richard/98/2a3/a8/ - https://www.osgeo.org/member/didier/
IGN/Direction des Sciences et Technologies de l'Information/ENSG GÃ©omatique
6/8 avenue Blaise Pascal - BP Champs-sur-Marne - 77455 MARNE-LA-VALLÃE CEDEX 2
TÃ©l : +33 (0) 1 43 98 83 23


From even.rouault at spatialys.com  Sat May 18 11:18:24 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 18 May 2019 13:18:24 -0500
Subject: [PROJ] [PROJ 6.1.0] Tests failed on vertical grid shift for
	France mainland onshore
In-Reply-To: <D4387E9F6EBB5244B21A09D84C0D41B0010CD3272F@mailex1.ign.fr>
References: <D4387E9F6EBB5244B21A09D84C0D41B0010CD3272F@mailex1.ign.fr>
Message-ID: <155826228.6JWVZsbcDy@even-i700>

Hi Didier,

I assume that you have run the tests with the RAF09.gtx file present and not 
the RAF18.gtx one ?
If so the failure is expected. 'make check' will run fine with just the 
default proj-datumgrid is installed, but the presence of other grids might 
cause changes in results. If the new grid RAF18.gtx from proj-datumgrid-
europe-1.3 is present, you'll get also a slightly different result. Nothing to 
worry about.

> RAF18.gtx is related to France mainland onshore while RAF09.gtx is related
> to French Antilla.

Hum, not according to the EPSG dataset... Both are registered against 
EPSG:1326 area of use 'France - mainland onshore'. Maybe you are confusing 
RAF09.gtx (the former version of RAF18.gtx) with RGAF09 which is indeed for 
French Antilla.

> -- Remove supression entry of EPSG:8371 ("RGF93 to NGF IGN69 height (2)",
> using RAF09.mnt) by -- EPSG:8885 ("RGF93 to NGF IGN69 height (3)", using
> RAF18.tac), since -- we have only RAF09.mnt in proj-datumgrid-europe
> -- Our code to remove superseded operations should probably take into
> account grid availability DELETE FROM "supersession" WHERE
> superseded_table_name = 'grid_transformation' AND superseded_auth_name =
> 'EPSG' AND superseded_code = '8371' AND
>                                  replacement_table_name =
> 'grid_transformation' AND replacement_auth_name = 'EPSG' AND
> replacement_code = '8885' AND
>                                  source = 'EPSG';
> 

The above entry dates back indeed to PROJ 6.0 / proj-datumgrid-europe-1.2 when 
there was only the RAF09.gtx grid available, and not RAF18. The removal of 
this deprecation entry doesn't hurt by itself, although it is no longer be 
necessary. So I've just removed it in master.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Sun May 19 20:15:55 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 20 May 2019 13:15:55 +1000
Subject: [PROJ] Converting coordinates between different ellipsoids...
	possible? valid?
Message-ID: <CAB28Asj_JKhDKt_B+Pvx0G0bi7njUgQA1__ZXZN6gRVAUTm1HQ@mail.gmail.com>

Hey list,

If I attempt to create a transform using proj_create_crs_to_crs, with
the source proj string "+proj=longlat +datum=WGS84 +no_defs" and dest
proj string "+proj=longlat +a=2632345 +no_defs", I get the error
"internal_proj_create_operations: Source and target ellipsoid do not
belong to the same celestial body".

My question is -- should this be allowed? It worked ok in previous
proj versions, and it's a common situation in QGIS which I'm having
issues fixing after the v6 port.

Or is it violating some rule of transformation? How can I reproduce
the proj 4 behaviour here?

Cheers,
Nyall

From kreve at sdfe.dk  Mon May 20 00:26:54 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 20 May 2019 07:26:54 +0000
Subject: [PROJ] Converting coordinates between different
	ellipsoids...	possible? valid?
In-Reply-To: <CAB28Asj_JKhDKt_B+Pvx0G0bi7njUgQA1__ZXZN6gRVAUTm1HQ@mail.gmail.com>
References: <CAB28Asj_JKhDKt_B+Pvx0G0bi7njUgQA1__ZXZN6gRVAUTm1HQ@mail.gmail.com>
Message-ID: <F6637588-025F-42D5-A46C-9C039C9A1002@sdfe.dk>

Nyall,

This is basically the same question as you asked a few months ago:
https://lists.osgeo.org/pipermail/proj/2019-March/008390.html

Not sure exactly what celestial body you are trying to map this time,
but the problem remains the same: WGS84 is a CRS belonging to Earth,
that canât meaningfully be transformed to a CRS on another
planet/moon/asteroid/whatever.

You can convert between different ellipsoids but does it make sense when one
has a radius 3 times larger than the other? Anyway, hereâs how:

echo 12 56 0 0 | cct +proj=pipeline +step +proj=cart +ellps=WGS84 +step +proj=cart +R=2632345 +inv
12.0000000000   55.8213634673  3731132.8860        0.0000

Notice the height of the original point flying 3700 km above the ground on
the new ellipsoid.

Can you explain in which scenarios you need to do the transformation
you are asking for? That might make it easier to advise you.

/Kristian

On 20 May 2019, at 05:15, Nyall Dawson <nyall.dawson at gmail.com<mailto:nyall.dawson at gmail.com>> wrote:

Hey list,

If I attempt to create a transform using proj_create_crs_to_crs, with
the source proj string "+proj=longlat +datum=WGS84 +no_defs" and dest
proj string "+proj=longlat +a=2632345 +no_defs", I get the error
"internal_proj_create_operations: Source and target ellipsoid do not
belong to the same celestial body".

My question is -- should this be allowed? It worked ok in previous
proj versions, and it's a common situation in QGIS which I'm having
issues fixing after the v6 port.

Or is it violating some rule of transformation? How can I reproduce
the proj 4 behaviour here?

Cheers,
Nyall
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190520/ea799052/attachment.html>

From even.rouault at spatialys.com  Mon May 20 00:45:27 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 20 May 2019 09:45:27 +0200
Subject: [PROJ] Converting coordinates between different ellipsoids...
	possible? valid?
In-Reply-To: <CAB28Asj_JKhDKt_B+Pvx0G0bi7njUgQA1__ZXZN6gRVAUTm1HQ@mail.gmail.com>
References: <CAB28Asj_JKhDKt_B+Pvx0G0bi7njUgQA1__ZXZN6gRVAUTm1HQ@mail.gmail.com>
Message-ID: <4562422.yPs0FIbpSn@even-i700>

On lundi 20 mai 2019 13:15:55 CEST Nyall Dawson wrote:
> Hey list,
> 
> If I attempt to create a transform using proj_create_crs_to_crs, with
> the source proj string "+proj=longlat +datum=WGS84 +no_defs" and dest
> proj string "+proj=longlat +a=2632345 +no_defs", I get the error
> "internal_proj_create_operations: Source and target ellipsoid do not
> belong to the same celestial body".
> 
> My question is -- should this be allowed? It worked ok in previous
> proj versions, and it's a common situation in QGIS

Not for real world use cases, but for some artificial unit cases, right ?

> Or is it violating some rule of transformation? How can I reproduce
> the proj 4 behaviour here?

I think we discussed this before. Basically there's a new check that prevents 
doing non sensical transformations. No workaround than disabling the check in 
code

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Mon May 20 22:00:27 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 21 May 2019 15:00:27 +1000
Subject: [PROJ] Converting coordinates between different ellipsoids...
 possible? valid?
In-Reply-To: <4562422.yPs0FIbpSn@even-i700>
References: <CAB28Asj_JKhDKt_B+Pvx0G0bi7njUgQA1__ZXZN6gRVAUTm1HQ@mail.gmail.com>
 <4562422.yPs0FIbpSn@even-i700>
Message-ID: <CAB28Asj1GjZbq-tvt3rb6ARk0h+3qkzFymTZWKEcnhP9Xny1Bw@mail.gmail.com>

On Mon, 20 May 2019 at 17:45, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On lundi 20 mai 2019 13:15:55 CEST Nyall Dawson wrote:
> > Hey list,
> >
> > If I attempt to create a transform using proj_create_crs_to_crs, with
> > the source proj string "+proj=longlat +datum=WGS84 +no_defs" and dest
> > proj string "+proj=longlat +a=2632345 +no_defs", I get the error
> > "internal_proj_create_operations: Source and target ellipsoid do not
> > belong to the same celestial body".
> >
> > My question is -- should this be allowed? It worked ok in previous
> > proj versions, and it's a common situation in QGIS
>
> Not for real world use cases, but for some artificial unit cases, right ?
>
> > Or is it violating some rule of transformation? How can I reproduce
> > the proj 4 behaviour here?
>
> I think we discussed this before. Basically there's a new check that prevents
> doing non sensical transformations. No workaround than disabling the check in
> code

Thanks for the direction (not being sarcastic, you definitely pointed
fingers back at the non-proj code being at fault, which it was).  This
invalid transform was the result of some no-longer-correct assumptions
that crs objects can always be represented by a proj string or unique
auth/code combo.

Nyall

>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From nyall.dawson at gmail.com  Mon May 20 23:51:48 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 21 May 2019 16:51:48 +1000
Subject: [PROJ] Transformation failure -- valid?
Message-ID: <CAB28AsiMCa27oAxwhNEifphF-UjvBi21+ijXHmusYYqajv_wTg@mail.gmail.com>

Hi list,

Another one from me. Attempting to reproject from WGS84 to web mercator:

PJ* crs = proj_create_crs_to_crs( 0, "+proj=longlat +datum=WGS84
+no_defs", "+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0
+y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs")
PK* res = proj_normalize_for_visualization( 0, crs );

Throws an error -61 when trying to reproject the coordinate -68.2 /
70.8 using res.

What am I missing?

Nyall

From nyall.dawson at gmail.com  Tue May 21 00:02:24 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 21 May 2019 17:02:24 +1000
Subject: [PROJ] IAU2000 CRS definitions
Message-ID: <CAB28AsgnoeFE4NYqUM5EpqZ11RctNOdWe=gx-OGhPsXCXdGQTg@mail.gmail.com>

Hi list,

I see quite a lot of "IAU2000" CRS definitions on
https://www.spatialreference.org/ref/?page=4&search=iau which are not
available in the proj database.

Is there any plans to integrate these systems into proj?

Nyall

From even.rouault at spatialys.com  Tue May 21 02:46:24 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 21 May 2019 11:46:24 +0200
Subject: [PROJ] IAU2000 CRS definitions
In-Reply-To: <CAB28AsgnoeFE4NYqUM5EpqZ11RctNOdWe=gx-OGhPsXCXdGQTg@mail.gmail.com>
References: <CAB28AsgnoeFE4NYqUM5EpqZ11RctNOdWe=gx-OGhPsXCXdGQTg@mail.gmail.com>
Message-ID: <6811257.KMmtMQ7PRB@even-i700>

On mardi 21 mai 2019 17:02:24 CEST Nyall Dawson wrote:
> Hi list,
> 
> I see quite a lot of "IAU2000" CRS definitions on
> https://www.spatialreference.org/ref/?page=4&search=iau which are not
> available in the proj database.
> 
> Is there any plans to integrate these systems into proj?

As part of this past thread
http://osgeo-org.1560.x6.nabble.com/PROJ-Proj-6-API-questions-td5398663i20.html
Trent Hare from USGS replied they were working to integrate IAU2000 codes
(but the message probably didn't reach the list if he's not subscribed)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue May 21 02:55:34 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 21 May 2019 11:55:34 +0200
Subject: [PROJ] Transformation failure -- valid?
In-Reply-To: <CAB28AsiMCa27oAxwhNEifphF-UjvBi21+ijXHmusYYqajv_wTg@mail.gmail.com>
References: <CAB28AsiMCa27oAxwhNEifphF-UjvBi21+ijXHmusYYqajv_wTg@mail.gmail.com>
Message-ID: <2913401.czin2OlTO6@even-i700>

On mardi 21 mai 2019 16:51:48 CEST Nyall Dawson wrote:
> Hi list,
> 
> Another one from me. Attempting to reproject from WGS84 to web mercator:
> 
> PJ* crs = proj_create_crs_to_crs( 0, "+proj=longlat +datum=WGS84
> +no_defs", "+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0
> +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs")
> PK* res = proj_normalize_for_visualization( 0, crs );
> 
> Throws an error -61 when trying to reproject the coordinate -68.2 /
> 70.8 using res.
> 
> What am I missing?

Works for me:

#include "proj.h"
#include <stdio.h>

int main()
{
    PJ* crs = proj_create_crs_to_crs( 0,
        "+proj=longlat +datum=WGS84 +no_defs",
        "+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 
+k=1 +units=m +nadgrids=@null +wktext +no_defs",
        0);
    PJ* res = proj_normalize_for_visualization( 0, crs );
    PJ_COORD c;
    c.xyz.x = -68.2;
    c.xyz.y = 70.8;
    c.xyz.z = 0;
    c =  proj_trans(res, PJ_FWD, c);
    printf("%f %f\n", c.xy.x, c.xy.y);
    printf("%d\n", proj_errno(res));
    return 0;
}


ouputs

-7591989.272101 11334231.572082
0

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From dr.yann.chemin at gmail.com  Tue May 21 02:57:33 2019
From: dr.yann.chemin at gmail.com (Yann Chemin)
Date: Tue, 21 May 2019 11:57:33 +0200
Subject: [PROJ] IAU2000 CRS definitions
In-Reply-To: <CALFmHhu4Yc52v1tQBUgRNEECgGZFkLbZhY1fP8bcyZ0ZLsJgKw@mail.gmail.com>
References: <CAB28AsgnoeFE4NYqUM5EpqZ11RctNOdWe=gx-OGhPsXCXdGQTg@mail.gmail.com>
 <CALFmHhu4Yc52v1tQBUgRNEECgGZFkLbZhY1fP8bcyZ0ZLsJgKw@mail.gmail.com>
Message-ID: <CAF+Qy58r3toPQ7c8Dt27EM+dD-H8YyeTtShR9CPwYGLHPuFNCw@mail.gmail.com>

+1 to Nyall's email.

is there a way we could help integrating those in PROJ/GDAL?

Thanks,
Yann

---------- Forwarded message ---------
> From: Nyall Dawson <nyall.dawson at gmail.com>
> Date: Tue, May 21, 2019 at 9:02 AM
> Subject: [PROJ] IAU2000 CRS definitions
> To: PROJ <proj at lists.osgeo.org>
>
>
> Hi list,
>
> I see quite a lot of "IAU2000" CRS definitions on
> https://www.spatialreference.org/ref/?page=4&search=iau which are not
> available in the proj database.
>
> Is there any plans to integrate these systems into proj?
>
> Nyall
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190521/db17eb23/attachment.html>

From dr.yann.chemin at gmail.com  Wed May 22 00:34:32 2019
From: dr.yann.chemin at gmail.com (Yann Chemin)
Date: Wed, 22 May 2019 09:34:32 +0200
Subject: [PROJ] Fwd: [EXTERNAL] Re:  IAU2000 CRS definitions
In-Reply-To: <CAB6t5t8jgyEjJgDm8godadrq2kp4OV3W6h_GyZKRT75Cfoi66w@mail.gmail.com>
References: <CAB28AsgnoeFE4NYqUM5EpqZ11RctNOdWe=gx-OGhPsXCXdGQTg@mail.gmail.com>
 <CALFmHhu4Yc52v1tQBUgRNEECgGZFkLbZhY1fP8bcyZ0ZLsJgKw@mail.gmail.com>
 <CAF+Qy58r3toPQ7c8Dt27EM+dD-H8YyeTtShR9CPwYGLHPuFNCw@mail.gmail.com>
 <CAB6t5t8jgyEjJgDm8godadrq2kp4OV3W6h_GyZKRT75Cfoi66w@mail.gmail.com>
Message-ID: <CAF+Qy58SoAWULuz8Hs0FKN7zVP6RdOSmnq3hsZcxPGjRNA0big@mail.gmail.com>

FYI
Forwarding Trent answer to the list.

----------
Dr. Yann Chemin
+33 7 83 85 5234
JRC, Ispra, IT



---------- Forwarded message ---------
From: Hare, Trent <thare at usgs.gov>
Date: Tue, 21 May 2019 at 17:27
Subject: Re: [EXTERNAL] Re: [PROJ] IAU2000 CRS definitions
To: Yann Chemin <dr.yann.chemin at gmail.com>
Cc: <proj at lists.osgeo.org>


Yann,


*>>What is the status of IAU integration in GDAL?  *
  Not much to update. I have been busy with supporting PDS (and learning
PDS4). Even has created a great start for both a raster and vector/table PDS4
driver in GDAL <https://www.gdal.org/frmt_pds4.html>. And also busy
supporting a camera model environment
<https://www.hou.usra.edu/meetings/planetdata2019/pdf/7019.pdf> based on
the CSM API (to be presented at the upcoming 4th Planetary Data Workshop
<https://www.hou.usra.edu/meetings/planetdata2019/>).

Anyway, paths forward for IAU integration into GDAL. All of which I could
use help with.

(1) validate major update to "create_IAU2000.py
<https://github.com/USGS-Astrogeology/GDAL_scripts/blob/master/OGC_IAU2000_WKT_v2/Source_Python/create_IAU2000.py>"
(by J-Christophe) and re-release WKT projection files to GitHub. This is a
script to take the IAU published radius values and create the WTK
projection files (per IAU-code) and initFile for proj4 can be created. We
had to clarify the use of Reference_Meridian = 0.0 for both WKT1 and WKT2.
You can wade through this confusing issue here:
https://github.com/USGS-Astrogeology/GDAL_scripts/issues/34  . That should
be *all resolved* in the latest version of the Python script and we can now
move forward.

(2) Update script to create for what GDAL needs. Here is what is required
(email from Even),
"""
Just provide the data as .sql scripts to be inserted in the database in
https://github.com/OSGeo/proj.4/tree/master/data/sql

Either manually, or through an import script that generates them from other
sources, like done for:
- EPSG: https://github.com/OSGeo/proj.4/blob/master/scripts/build_db.py
- ESRI:
https://github.com/OSGeo/proj.4/blob/master/scripts/build_db_from_esri.py
- IGNF:
https://github.com/OSGeo/proj.4/blob/master/scripts/build_db_create_ignf_from_xml.py

The database schema is in:
https://github.com/OSGeo/proj.4/blob/master/data/sql/proj_db_table_defs.sql

"""

(3. longer-term). Lastly, I'm not sure what to do with spatialreference.org.
I keep hearing it has been deprecated, so no updates, but it keeps hanging
around. :-). If we need a new registry we can help stand something up (or
maybe just use Github?). But, I would still like our codes to head over to
the OGC CRS resolver (not sure the status for that effort though) - see:
http://external.opengeospatial.org/twiki_public/CRSdefinitionResolver  But
... by forcing the date in the name (e.g. IAU2000, IAU2015), I sort-of
messed up RESTful "versioning" which should look more like (for Mars 49900
using the 2000 report would be something like "/def/crs/IAU/2000/49900"
*not* "/def/crs/IAU2000/49900"). I guess for the resolver website we could
just split the IAU and year...?

I would love to see progress made on this front - so again, I would welcome
the help!

thanks,
Trent

Also, as a reminder, J-Christophe, also has a fork of Mapserver (on his
github site) with IAU projection code support. We need to test that too (as
have used Mapserver for years
<http://planetarygis.blogspot.com/2014/09/tips-to-interact-with-astros-wms-maps.html>
and
embarrassingly default to EPSG:4326! Fortunately degrees are degrees but
not a good precedence for us to use all these years).




On Tue, May 21, 2019 at 2:57 AM Yann Chemin <dr.yann.chemin at gmail.com>
wrote:

> +1 to Nyall's email.
>
> is there a way we could help integrating those in PROJ/GDAL?
>
> Thanks,
> Yann
>
> ---------- Forwarded message ---------
>> From: Nyall Dawson <nyall.dawson at gmail.com>
>> Date: Tue, May 21, 2019 at 9:02 AM
>> Subject: [PROJ] IAU2000 CRS definitions
>> To: PROJ <proj at lists.osgeo.org>
>>
>>
>> Hi list,
>>
>> I see quite a lot of "IAU2000" CRS definitions on
>> https://www.spatialreference.org/ref/?page=4&search=iau which are not
>> available in the proj database.
>>
>> Is there any plans to integrate these systems into proj?
>>
>> Nyall
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190522/bba341cb/attachment.html>

From djsuson at gmail.com  Thu May 23 10:14:52 2019
From: djsuson at gmail.com (Daniel Suson)
Date: Thu, 23 May 2019 12:14:52 -0500
Subject: [PROJ] Newbie question on projections
Message-ID: <25df1c24-4be9-e466-2b54-2e0c0aac1e0f@gmail.com>

I have a project that takes spherical maps (either Terrestrial or 
astronomical) as its input. The inputted data is stored in a "flat" 
360x180 (scaled up or down depending upon the resolution) 2-D array. As 
an early step in the process I then display the map in one of the basic 
projections (currently Mollweide, but I would like to support others). I 
am hoping that I can use PROJ4 to transform this into another 2-D array 
that can then be passed into the display routines.

 1. Is this something that PROJ4 can do?
 2. If so, can this capability be called as a library function from
    within the program?
 3. If not, is there another library I should consider to support this need?

Thank you for your help with this.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190523/14a9f0da/attachment.html>

From pramsey at cleverelephant.ca  Thu May 23 10:42:49 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 23 May 2019 10:42:49 -0700
Subject: [PROJ] Newbie question on projections
In-Reply-To: <25df1c24-4be9-e466-2b54-2e0c0aac1e0f@gmail.com>
References: <25df1c24-4be9-e466-2b54-2e0c0aac1e0f@gmail.com>
Message-ID: <3EAA2C56-FFB3-41C1-A321-7B202FAEAA5B@cleverelephant.ca>

Proj will convert double arrays of longitude/latitudes into Mollweide, if thatâs the question? Itâll also convert into a whole zoo of other interesting global projections, if youâre looking for alternatives. It can be called as a library https://proj4.org/development/quickstart.html <https://proj4.org/development/quickstart.html>

> On May 23, 2019, at 10:14 AM, Daniel Suson <djsuson at gmail.com> wrote:
> 
> I have a project that takes spherical maps (either Terrestrial or astronomical) as its input. The inputted data is stored in a "flat" 360x180 (scaled up or down depending upon the resolution) 2-D array. As an early step in the process I then display the map in one of the basic projections (currently Mollweide, but I would like to support others). I am hoping that I can use PROJ4 to transform this into another 2-D array that can then be passed into the display routines.
> 
> Is this something that PROJ4 can do?
> If so, can this capability be called as a library function from within the program?
> If not, is there another library I should consider to support this need?
> Thank you for your help with this.
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190523/5fd853ff/attachment.html>

From alansnow21 at gmail.com  Thu May 23 10:54:27 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Thu, 23 May 2019 12:54:27 -0500
Subject: [PROJ] Newbie question on projections
In-Reply-To: <3EAA2C56-FFB3-41C1-A321-7B202FAEAA5B@cleverelephant.ca>
References: <25df1c24-4be9-e466-2b54-2e0c0aac1e0f@gmail.com>
 <3EAA2C56-FFB3-41C1-A321-7B202FAEAA5B@cleverelephant.ca>
Message-ID: <CAGybdFTFUnUJ5=h35w01Fa6uMfeKttQQLX+SvVFTE039RtTb4g@mail.gmail.com>

Depending on your end goal, I would recommend using GDAL to reproject 2D
data. This will resample your data from a 2D grid in one projection to a 2D
grid in a new projection.
https://www.gdal.org/gdalwarp.html

If you are a Python user, I would recommend:
https://corteva.github.io/rioxarray/html/examples/reproject.html
https://rasterio.readthedocs.io/en/stable/topics/reproject.html

Hopefully this helps,
Alan

On Thu, May 23, 2019 at 12:42 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Proj will convert double arrays of longitude/latitudes into Mollweide, if
> thatâs the question? Itâll also convert into a whole zoo of other
> interesting global projections, if youâre looking for alternatives. It can
> be called as a library https://proj4.org/development/quickstart.html
>
> On May 23, 2019, at 10:14 AM, Daniel Suson <djsuson at gmail.com> wrote:
>
> I have a project that takes spherical maps (either Terrestrial or
> astronomical) as its input. The inputted data is stored in a "flat" 360x180
> (scaled up or down depending upon the resolution) 2-D array. As an early
> step in the process I then display the map in one of the basic projections
> (currently Mollweide, but I would like to support others). I am hoping that
> I can use PROJ4 to transform this into another 2-D array that can then be
> passed into the display routines.
>
>    1. Is this something that PROJ4 can do?
>    2. If so, can this capability be called as a library function from
>    within the program?
>    3. If not, is there another library I should consider to support this
>    need?
>
> Thank you for your help with this.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Alan Snow
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190523/d2e17827/attachment.html>

From mateusz at loskot.net  Thu May 23 11:39:41 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 23 May 2019 20:39:41 +0200
Subject: [PROJ] [wiki] Building with VS 2017, 2019 and vcpkg
Message-ID: <CABUeae_RgD2Hr0ojPMYAaOQZtAr+sxjkU-ruS1Jg+HDTcSLHxQ@mail.gmail.com>

Hi,

FYI, I have been using a very basic setup to build and test PROJ
on Windows using VS 2017 and 2019.

If anyone interested, I described the procedure on the Wiki

https://github.com/OSGeo/proj.4/wiki/Building-with-VS-and-vcpkg

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From nyall.dawson at gmail.com  Thu May 23 15:37:42 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 24 May 2019 08:37:42 +1000
Subject: [PROJ] Transformation failure -- valid?
In-Reply-To: <2913401.czin2OlTO6@even-i700>
References: <CAB28AsiMCa27oAxwhNEifphF-UjvBi21+ijXHmusYYqajv_wTg@mail.gmail.com>
 <2913401.czin2OlTO6@even-i700>
Message-ID: <CAB28AsiyEvsSQce0ZAMDA=rrM7ygmw+qj8+Yh9cM4eyvJsTEMQ@mail.gmail.com>

On Tue, 21 May 2019 at 19:55, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On mardi 21 mai 2019 16:51:48 CEST Nyall Dawson wrote:
> > Hi list,
> >
> > Another one from me. Attempting to reproject from WGS84 to web mercator:
> >
> > PJ* crs = proj_create_crs_to_crs( 0, "+proj=longlat +datum=WGS84
> > +no_defs", "+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0
> > +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs")
> > PK* res = proj_normalize_for_visualization( 0, crs );
> >
> > Throws an error -61 when trying to reproject the coordinate -68.2 /
> > 70.8 using res.
> >
> > What am I missing?
>
> Works for me:

This was a silly error on my part -- I had some extra test code in
between creation of the crs and the proj_trans call which was raising
an error, and I'd omitted a call to proj_errno_reset to clear the
error afterwards. So the -61 error was actually coming from the
earlier call, and not the proj_trans one.

Nyall

From nyall.dawson at gmail.com  Thu May 23 20:45:23 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 24 May 2019 13:45:23 +1000
Subject: [PROJ] Obtaining possible transformation pipelines
Message-ID: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>

Hi list,

So, I think I'm finally onto the last piece of the QGIS proj 4 -> 6
puzzle. I think I've got the way forward here, but I'm after
confirmation that this is the right path to take.

The situation is:

- In current QGIS versions (proj 4 builds), a custom table of datum
transforms exists. This table maps src -> dest crs pairs via a
corresponding grid shift file. E.g. 4283 -> 7844 has entries for
GDA94_GDA2020_conformal_and_distortion.gsb and
GDA94_GDA2020_conformal.gsb.

- There's potentially multiple rows in this table per src/dest pair,
representing each of the different paths for transforming between
these systems

- Depending on users settings, either the "best" (an extremely loose
definition - basically the first non-deprecated path!) is selected
from this table when first transforming between a pair of systems, OR
users are shown a dialog listing all available pathways and they can
make a manual selection from these. (Settings are stored in projects,
with an option to save as the default choice on a particular install).

- This transformation is used for all future operations between those
two coordinate systems in that project

Now, obviously under proj 6 we want to dump all that, and use proj 6's
(far) superior intelligence and db to handle this. I would still like
to be able to (optionally) present users with a list of possible
transformation pathways which they can select from though.

Currently, I'm thinking of doing this by:

- Using proj_create_operations to obtain a list of the possible
transforms between a source/dest reference system

- Either using proj_get_name or proj_as_wkt as a way to represent
these transforms and present them to users (or is there a nicer
approach? The names I've encountered tend to be vague, e.g. "Inverse
of Vicgrid + GDA94 to GDA2020 (1) + Vicgrid"/"Inverse of Vicgrid +
GDA94 to GDA2020 (2) + Vicgrid", yet the wkt string is overly lengthy
and complex for most users).

- I'll use proj_coordoperation_get_accuracy as a way of showing users
the accuracy of the operations, and proj_is_deprecated to highlight
deprecated ones.

- I'll use proj_operation_factory_context_set_grid_availability_use
with either PROJ_GRID_AVAILABILITY_IGNORED or
PROJ_GRID_AVAILABILITY_USED_FOR_SORTING so that users can see
transforms which they are missing the grids for, and highlight these
differently in the gui (and block their use)

- I'll confirm grid availability using
proj_coordoperation_is_instantiable, and
proj_coordoperation_get_grid_used in order to show the grid details
(and download url) to users

- After users have selected their desired pipeline, I'll store the
WKT2 2018 representation of this. For future transformations between
that pair of coordinate systems (inside that project), I'll use
proj_create with the stored wkt2 string to create a transformation
using the desired pathway.

Questions:

- Does this approach seem reasonable? Is there anything I'm
misunderstanding, or better ways I could approach this?

- I never seem to obtain any deprecated results using
proj_create_operations -- are these filtered in the operation factory
context by default? If so, is there a way to enable them?

- From my tests it looks fine, but I'd love double-confirmation that
this approach will correctly handle transformations which require
pivots, such as Vicgrid GDA94 -> Vicgrid GDA2020.

Many thanks!
Nyall

From even.rouault at spatialys.com  Fri May 24 00:44:36 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 May 2019 09:44:36 +0200
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
Message-ID: <5592558.TuqljXIB6I@even-i700>

Nyall,

> 
> - Either using proj_get_name or proj_as_wkt as a way to represent
> these transforms and present them to users (or is there a nicer
> approach? The names I've encountered tend to be vague, e.g. "Inverse
> of Vicgrid + GDA94 to GDA2020 (1) + Vicgrid"/"Inverse of Vicgrid +
> GDA94 to GDA2020 (2) + Vicgrid", yet the wkt string is overly lengthy
> and complex for most users).

No better suggestion.

> 
> - I'll use proj_coordoperation_get_accuracy as a way of showing users
> the accuracy of the operations, and proj_is_deprecated to highlight
> deprecated ones.

You'll never get deprecated coordinate operations when using 
proj_create_operations(). They are automatically removed (deprecated == broken 
in EPSG terms. Which is different from superseded). You can only get 
deprecated objects by querying them explicitly by code.

> 
> - I'll use proj_operation_factory_context_set_grid_availability_use
> with either PROJ_GRID_AVAILABILITY_IGNORED or
> PROJ_GRID_AVAILABILITY_USED_FOR_SORTING so that users can see
> transforms which they are missing the grids for, and highlight these
> differently in the gui (and block their use)

Sounds good

> 
> - I'll confirm grid availability using
> proj_coordoperation_is_instantiable, and
> proj_coordoperation_get_grid_used in order to show the grid details
> (and download url) to users

Sounds good

> 
> - After users have selected their desired pipeline, I'll store the
> WKT2 2018 representation of this. For future transformations between
> that pair of coordinate systems (inside that project), I'll use
> proj_create with the stored wkt2 string to create a transformation
> using the desired pathway.

Storing the PROJ string would also be reasonable (PROJ strings for coordinate 
operations are lossless for the purpose of transforming coordinates), but the 
WKT2 2018 representation will give you a more traceable way. That said, I will 
not guarantee at 100% that the WKT2 2018 representation of the whole pipeline 
can be roundtripped in all situations, so I'd suggest perhaps:

1) export the coord op as PROJ string
2) export the coord op as WKT2_2018 and instanciate it as a PJ with 
proj_create()
3) export the PJ of 2) as PROJ string, and compare (string equality) with 1). 
If they match you can use the WKT2_2018 just fine. Otherwise use the PROJ 
string of 1) (and report such cases so that we can check if that can be 
improved)

> - I never seem to obtain any deprecated results using
> proj_create_operations -- are these filtered in the operation factory
> context by default? If so, is there a way to enable them?

See above. Removal of them is hardcoded.

> - From my tests it looks fine, but I'd love double-confirmation that
> this approach will correctly handle transformations which require
> pivots, such as Vicgrid GDA94 -> Vicgrid GDA2020.

Sounds good.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Fri May 24 03:26:26 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 24 May 2019 20:26:26 +1000
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <5592558.TuqljXIB6I@even-i700>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <5592558.TuqljXIB6I@even-i700>
Message-ID: <CAB28AshmK8_MvghZcBOPKXgaFTZBj1UOph4tcGS9-A6suA=C7Q@mail.gmail.com>

On Fri, 24 May 2019 at 17:44, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > - I'll use proj_coordoperation_get_accuracy as a way of showing users
> > the accuracy of the operations, and proj_is_deprecated to highlight
> > deprecated ones.
>
> You'll never get deprecated coordinate operations when using
> proj_create_operations(). They are automatically removed (deprecated == broken
> in EPSG terms. Which is different from superseded). You can only get
> deprecated objects by querying them explicitly by code.

Ok, makes sense. I'll remove that filter and checkbox for proj 6 builds.


> > - After users have selected their desired pipeline, I'll store the
> > WKT2 2018 representation of this. For future transformations between
> > that pair of coordinate systems (inside that project), I'll use
> > proj_create with the stored wkt2 string to create a transformation
> > using the desired pathway.
>
> Storing the PROJ string would also be reasonable (PROJ strings for coordinate
> operations are lossless for the purpose of transforming coordinates), but the
> WKT2 2018 representation will give you a more traceable way. That said, I will
> not guarantee at 100% that the WKT2 2018 representation of the whole pipeline
> can be roundtripped in all situations, so I'd suggest perhaps:
>
> 1) export the coord op as PROJ string
> 2) export the coord op as WKT2_2018 and instanciate it as a PJ with
> proj_create()
> 3) export the PJ of 2) as PROJ string, and compare (string equality) with 1).
> If they match you can use the WKT2_2018 just fine. Otherwise use the PROJ
> string of 1) (and report such cases so that we can check if that can be
> improved)

Reading this sounds like I'm best off just to use the proj strings and
be done with it. But I was under the impression that not all CRSes
could be represented as a proj string? (e.g. EPSG:2218). Is it still
possible to represent operations from crses like EPS:2218 to proj
strings with loss?



> > - From my tests it looks fine, but I'd love double-confirmation that
> > this approach will correctly handle transformations which require
> > pivots, such as Vicgrid GDA94 -> Vicgrid GDA2020.

I'm seeing something I can't explain here.

Using this code to list operations from EPSG:3111 to EPSG:7899, I see
(as expected) 3 results, all using GDA94->GDA2020 as a pivot:

  PJ *crs1 = proj_create_from_database( pjContext, "EPSG", "3111",
PJ_CATEGORY_CRS, false, nullptr );
  PJ *crs2 = proj_create_from_database( pjContext, "EPSG", "7899",
PJ_CATEGORY_CRS, false, nullptr );
  PJ_OPERATION_FACTORY_CONTEXT *operationContext =
proj_create_operation_factory_context( pjContext, nullptr );
  proj_operation_factory_context_set_grid_availability_use( pjContext,
operationContext, PROJ_GRID_AVAILABILITY_IGNORED );
  PJ_OBJ_LIST *ops = proj_create_operations( pjContext, crs1, crs2,
operationContext );

Results in:

Inverse of Vicgrid + GDA94 to GDA2020 (1) + Vicgrid
+proj=pipeline +step +inv +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36
+lat_2=-38 +x_0=2500000 +y_0=2500000 +ellps=GRS80 +step +proj=push
+v_3 +step +proj=cart +ellps=GRS80 +step +proj=helmert +x=0.06155
+y=-0.01087 +z=-0.04019 +rx=-0.0394924 +ry=-0.0327221 +rz=-0.0328979
+s=-0.009994 +convention=coordinate_frame +step +inv +proj=cart
+ellps=GRS80 +step +proj=pop +v_3 +step +proj=lcc +lat_0=-37
+lon_0=145 +lat_1=-36 +lat_2=-38 +x_0=2500000 +y_0=2500000
+ellps=GRS80

Inverse of Vicgrid + GDA94 to GDA2020 (2) + Vicgrid
+proj=pipeline +step +inv +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36
+lat_2=-38 +x_0=2500000 +y_0=2500000 +ellps=GRS80 +step
+proj=hgridshift +grids=GDA94_GDA2020_conformal_and_distortion.gsb
+step +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36 +lat_2=-38
+x_0=2500000 +y_0=2500000 +ellps=GRS80

Inverse of Vicgrid + GDA94 to GDA2020 (3) + Vicgrid
+proj=pipeline +step +inv +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36
+lat_2=-38 +x_0=2500000 +y_0=2500000 +ellps=GRS80 +step
+proj=hgridshift +grids=GDA94_GDA2020_conformal.gsb +step +proj=lcc
+lat_0=-37 +lon_0=145 +lat_1=-36 +lat_2=-38 +x_0=2500000 +y_0=2500000
+ellps=GRS80

BUT... listing operations directly from GDA94 (EPSG:4283) to GDA2020
(EPSG:7844) only gives one result:

GDA94 to GDA2020 (1)
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert
+xy_in=deg +xy_out=rad +step +proj=push +v_3 +step +proj=cart
+ellps=GRS80 +step +proj=helmert +x=0.06155 +y=-0.01087 +z=-0.04019
+rx=-0.0394924 +ry=-0.0327221 +rz=-0.0328979 +s=-0.009994
+convention=coordinate_frame +step +inv +proj=cart +ellps=GRS80 +step
+proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step
+proj=axisswap +order=2,1

Why aren't the options using using the
GDA94_GDA2020_conformal_and_distoration.gsb and
GDA94_GDA2020_conformal.gsb listed here?

And as a follow up question -- when checking the accuracy of the 3
pipelines given from EPSG:3111 to EPSG:7899,
proj_coordoperation_get_accuracy reports that the transforms using the
grid shift files only have an accuracy of 0.05m, vs 0.01m for the
non-grid pipeline (counter to my expectations). How is this accuracy
derived?

Nyall


>
> Sounds good.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From even.rouault at spatialys.com  Fri May 24 03:48:00 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 May 2019 12:48:00 +0200
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <CAB28AshmK8_MvghZcBOPKXgaFTZBj1UOph4tcGS9-A6suA=C7Q@mail.gmail.com>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <5592558.TuqljXIB6I@even-i700>
 <CAB28AshmK8_MvghZcBOPKXgaFTZBj1UOph4tcGS9-A6suA=C7Q@mail.gmail.com>
Message-ID: <2647733.h637UnaKup@even-i700>

> > Storing the PROJ string would also be reasonable (PROJ strings for
> > coordinate operations are lossless for the purpose of transforming
> > coordinates), but the WKT2 2018 representation will give you a more
> > traceable way. That said, I will not guarantee at 100% that the WKT2 2018
> > representation of the whole pipeline can be roundtripped in all
> > situations, so I'd suggest perhaps:
> > 
> > 1) export the coord op as PROJ string
> > 2) export the coord op as WKT2_2018 and instanciate it as a PJ with
> > proj_create()
> > 3) export the PJ of 2) as PROJ string, and compare (string equality) with
> > 1). If they match you can use the WKT2_2018 just fine. Otherwise use the
> > PROJ string of 1) (and report such cases so that we can check if that can
> > be improved)
> 
> Reading this sounds like I'm best off just to use the proj strings and
> be done with it. But I was under the impression that not all CRSes
> could be represented as a proj string? (e.g. EPSG:2218). Is it still
> possible to represent operations from crses like EPS:2218 to proj
> strings with loss?

PROJ strings can accurately represent coordinate operations (even between CRS 
that can't be themselves losslessly represented as PROJ strings).

> I'm seeing something I can't explain here.
> 
> Using this code to list operations from EPSG:3111 to EPSG:7899, I see
> (as expected) 3 results, all using GDA94->GDA2020 as a pivot:
> 
>   PJ *crs1 = proj_create_from_database( pjContext, "EPSG", "3111",
> PJ_CATEGORY_CRS, false, nullptr );
>   PJ *crs2 = proj_create_from_database( pjContext, "EPSG", "7899",
> PJ_CATEGORY_CRS, false, nullptr );
>   PJ_OPERATION_FACTORY_CONTEXT *operationContext =
> proj_create_operation_factory_context( pjContext, nullptr );
>   proj_operation_factory_context_set_grid_availability_use( pjContext,
> operationContext, PROJ_GRID_AVAILABILITY_IGNORED );
>   PJ_OBJ_LIST *ops = proj_create_operations( pjContext, crs1, crs2,
> operationContext );
> 
> Results in:
> 
> Inverse of Vicgrid + GDA94 to GDA2020 (1) + Vicgrid
> +proj=pipeline +step +inv +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36
> +lat_2=-38 +x_0=2500000 +y_0=2500000 +ellps=GRS80 +step +proj=push
> +v_3 +step +proj=cart +ellps=GRS80 +step +proj=helmert +x=0.06155
> +y=-0.01087 +z=-0.04019 +rx=-0.0394924 +ry=-0.0327221 +rz=-0.0328979
> +s=-0.009994 +convention=coordinate_frame +step +inv +proj=cart
> +ellps=GRS80 +step +proj=pop +v_3 +step +proj=lcc +lat_0=-37
> +lon_0=145 +lat_1=-36 +lat_2=-38 +x_0=2500000 +y_0=2500000
> +ellps=GRS80
> 
> Inverse of Vicgrid + GDA94 to GDA2020 (2) + Vicgrid
> +proj=pipeline +step +inv +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36
> +lat_2=-38 +x_0=2500000 +y_0=2500000 +ellps=GRS80 +step
> +proj=hgridshift +grids=GDA94_GDA2020_conformal_and_distortion.gsb
> +step +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36 +lat_2=-38
> +x_0=2500000 +y_0=2500000 +ellps=GRS80
> 
> Inverse of Vicgrid + GDA94 to GDA2020 (3) + Vicgrid
> +proj=pipeline +step +inv +proj=lcc +lat_0=-37 +lon_0=145 +lat_1=-36
> +lat_2=-38 +x_0=2500000 +y_0=2500000 +ellps=GRS80 +step
> +proj=hgridshift +grids=GDA94_GDA2020_conformal.gsb +step +proj=lcc
> +lat_0=-37 +lon_0=145 +lat_1=-36 +lat_2=-38 +x_0=2500000 +y_0=2500000
> +ellps=GRS80
> 
> BUT... listing operations directly from GDA94 (EPSG:4283) to GDA2020
> (EPSG:7844) only gives one result:
> 
> GDA94 to GDA2020 (1)
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert
> +xy_in=deg +xy_out=rad +step +proj=push +v_3 +step +proj=cart
> +ellps=GRS80 +step +proj=helmert +x=0.06155 +y=-0.01087 +z=-0.04019
> +rx=-0.0394924 +ry=-0.0327221 +rz=-0.0328979 +s=-0.009994
> +convention=coordinate_frame +step +inv +proj=cart +ellps=GRS80 +step
> +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step
> +proj=axisswap +order=2,1
> 
> Why aren't the options using using the
> GDA94_GDA2020_conformal_and_distoration.gsb and
> GDA94_GDA2020_conformal.gsb listed here?

Because you don't use 

proj_operation_factory_context_set_spatial_criterion(pjContext, 
operationContext,
PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION)

hint: if you had tried with projinfo, it would have advised you about that ;-)

The reason is that for EPSG:3111 to EPSG:7899, the area of use is "small", so
there are 3 possible datum shift operations whose area of use covers the area 
of use of the CRSs.
However, when using GDA94 -> GDA2020, the area of use of those CRS is much 
larger, and there's only the Helmert-based transformation that covers the 
whole area. If you specify PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION (or "--
spatial-test intersects" with projinfo), you ask PROJ to return coordinate 
operations whose area of use intersects at least partially with the one of the 
CRS, but do not necessarily cover them completely.

> 
> And as a follow up question -- when checking the accuracy of the 3
> pipelines given from EPSG:3111 to EPSG:7899,
> proj_coordoperation_get_accuracy reports that the transforms using the
> grid shift files only have an accuracy of 0.05m, vs 0.01m for the
> non-grid pipeline (counter to my expectations). How is this accuracy
> derived?

Directly from the EPSG dataset. Strangely enough, the accuracy advertized for 
those grids is 0.05m , whereas the one of the Helmert base transformation is 
0.01m. If you don't believe me, check EPSG:8048 and EPSG:8446 in
https://www.epsg-registry.org/


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Sun May 26 18:37:46 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 27 May 2019 11:37:46 +1000
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <2647733.h637UnaKup@even-i700>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <5592558.TuqljXIB6I@even-i700>
 <CAB28AshmK8_MvghZcBOPKXgaFTZBj1UOph4tcGS9-A6suA=C7Q@mail.gmail.com>
 <2647733.h637UnaKup@even-i700>
Message-ID: <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>

On Fri, 24 May 2019 at 20:48, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > Why aren't the options using using the
> > GDA94_GDA2020_conformal_and_distoration.gsb and
> > GDA94_GDA2020_conformal.gsb listed here?
>
> Because you don't use
>
> proj_operation_factory_context_set_spatial_criterion(pjContext,
> operationContext,
> PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION)
>
> hint: if you had tried with projinfo, it would have advised you about that ;-)
>
> The reason is that for EPSG:3111 to EPSG:7899, the area of use is "small", so
> there are 3 possible datum shift operations whose area of use covers the area
> of use of the CRSs.
> However, when using GDA94 -> GDA2020, the area of use of those CRS is much
> larger, and there's only the Helmert-based transformation that covers the
> whole area. If you specify PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION (or "--
> spatial-test intersects" with projinfo), you ask PROJ to return coordinate
> operations whose area of use intersects at least partially with the one of the
> CRS, but do not necessarily cover them completely.

Thanks -- this was exactly what I was missing.

>
> >
> > And as a follow up question -- when checking the accuracy of the 3
> > pipelines given from EPSG:3111 to EPSG:7899,
> > proj_coordoperation_get_accuracy reports that the transforms using the
> > grid shift files only have an accuracy of 0.05m, vs 0.01m for the
> > non-grid pipeline (counter to my expectations). How is this accuracy
> > derived?
>
> Directly from the EPSG dataset. Strangely enough, the accuracy advertized for
> those grids is 0.05m , whereas the one of the Helmert base transformation is
> 0.01m. If you don't believe me, check EPSG:8048 and EPSG:8446 in
> https://www.epsg-registry.org/

Odd. I suspect this was due to a misinterpretation of
http://www.icsm.gov.au/sites/default/files/DatumMattersT1FactSheet.pdf
. I'll find out what's required to get this fixed.

(hopefully) my last question:

If I have a proj string representing a coordinate operation, is there
any way to determine what grids are required for using it when those
grids are NOT available for use on the system?

Elsewhere I've used using proj_coordoperation_get_grid_used_count, but
this requires an existing coordinate operation object. Attempting to
create the (not available) coordinate operation using proj_create
fails with "Error -38: failed to load datum shift file". So as far as
I can see, there's no current way in API to determine the actual list
of missing grids which is preventing creation of a coordinate
operation. Or am I missing something?

Nyall

From kreve at sdfe.dk  Mon May 27 00:42:17 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 27 May 2019 07:42:17 +0000
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <5592558.TuqljXIB6I@even-i700>
 <CAB28AshmK8_MvghZcBOPKXgaFTZBj1UOph4tcGS9-A6suA=C7Q@mail.gmail.com>
 <2647733.h637UnaKup@even-i700>
 <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF1C68A8@S000014.PROD.SITAD.DK>

Nyall,

I think you can use proj_coordoperation_get_grid_used() for that:

https://proj4.org/development/reference/functions.html#_CPPv433proj_coordoperation_get_grid_usedP10PJ_CONTEXTPK2PJiPPKcPPKcPPKcPPKcPiPiPi

/Kristian

-----Oprindelig meddelelse-----
Fra: PROJ <proj-bounces at lists.osgeo.org> PÃ¥ vegne af Nyall Dawson
Sendt: 27. maj 2019 03:38
Til: Even Rouault <even.rouault at spatialys.com>
Cc: PROJ <proj at lists.osgeo.org>
Emne: Re: [PROJ] Obtaining possible transformation pipelines

On Fri, 24 May 2019 at 20:48, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > Why aren't the options using using the
> > GDA94_GDA2020_conformal_and_distoration.gsb and
> > GDA94_GDA2020_conformal.gsb listed here?
>
> Because you don't use
>
> proj_operation_factory_context_set_spatial_criterion(pjContext,
> operationContext,
> PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION)
>
> hint: if you had tried with projinfo, it would have advised you about that ;-)
>
> The reason is that for EPSG:3111 to EPSG:7899, the area of use is "small", so
> there are 3 possible datum shift operations whose area of use covers the area
> of use of the CRSs.
> However, when using GDA94 -> GDA2020, the area of use of those CRS is much
> larger, and there's only the Helmert-based transformation that covers the
> whole area. If you specify PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION (or "--
> spatial-test intersects" with projinfo), you ask PROJ to return coordinate
> operations whose area of use intersects at least partially with the one of the
> CRS, but do not necessarily cover them completely.

Thanks -- this was exactly what I was missing.

>
> >
> > And as a follow up question -- when checking the accuracy of the 3
> > pipelines given from EPSG:3111 to EPSG:7899,
> > proj_coordoperation_get_accuracy reports that the transforms using the
> > grid shift files only have an accuracy of 0.05m, vs 0.01m for the
> > non-grid pipeline (counter to my expectations). How is this accuracy
> > derived?
>
> Directly from the EPSG dataset. Strangely enough, the accuracy advertized for
> those grids is 0.05m , whereas the one of the Helmert base transformation is
> 0.01m. If you don't believe me, check EPSG:8048 and EPSG:8446 in
> https://www.epsg-registry.org/

Odd. I suspect this was due to a misinterpretation of
http://www.icsm.gov.au/sites/default/files/DatumMattersT1FactSheet.pdf
. I'll find out what's required to get this fixed.

(hopefully) my last question:

If I have a proj string representing a coordinate operation, is there
any way to determine what grids are required for using it when those
grids are NOT available for use on the system?

Elsewhere I've used using proj_coordoperation_get_grid_used_count, but
this requires an existing coordinate operation object. Attempting to
create the (not available) coordinate operation using proj_create
fails with "Error -38: failed to load datum shift file". So as far as
I can see, there's no current way in API to determine the actual list
of missing grids which is preventing creation of a coordinate
operation. Or am I missing something?

Nyall
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From nyall.dawson at gmail.com  Mon May 27 01:34:54 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 27 May 2019 18:34:54 +1000
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF1C68A8@S000014.PROD.SITAD.DK>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <5592558.TuqljXIB6I@even-i700>
 <CAB28AshmK8_MvghZcBOPKXgaFTZBj1UOph4tcGS9-A6suA=C7Q@mail.gmail.com>
 <2647733.h637UnaKup@even-i700>
 <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>
 <2E885BB293AF0448A0181138489E9A0EAF1C68A8@S000014.PROD.SITAD.DK>
Message-ID: <CAB28Ashm_ArtDtM-yCk1T4V05S3X9A2-TYzF+25KW5W9rrY3=w@mail.gmail.com>

On Mon, 27 May 2019 at 17:42, Kristian Evers <kreve at sdfe.dk> wrote:
>
> Nyall,
>
> I think you can use proj_coordoperation_get_grid_used() for that:
>
> https://proj4.org/development/reference/functions.html#_CPPv433proj_coordoperation_get_grid_usedP10PJ_CONTEXTPK2PJiPPKcPPKcPPKcPPKcPiPiPi

I can't use that one, because it requires an existing coordoperation
object, and I can't make the coordoperation when the grid doesn't
exist...

Nyall

>
> /Kristian
>
> -----Oprindelig meddelelse-----
> Fra: PROJ <proj-bounces at lists.osgeo.org> PÃ¥ vegne af Nyall Dawson
> Sendt: 27. maj 2019 03:38
> Til: Even Rouault <even.rouault at spatialys.com>
> Cc: PROJ <proj at lists.osgeo.org>
> Emne: Re: [PROJ] Obtaining possible transformation pipelines
>
> On Fri, 24 May 2019 at 20:48, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > > Why aren't the options using using the
> > > GDA94_GDA2020_conformal_and_distoration.gsb and
> > > GDA94_GDA2020_conformal.gsb listed here?
> >
> > Because you don't use
> >
> > proj_operation_factory_context_set_spatial_criterion(pjContext,
> > operationContext,
> > PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION)
> >
> > hint: if you had tried with projinfo, it would have advised you about that ;-)
> >
> > The reason is that for EPSG:3111 to EPSG:7899, the area of use is "small", so
> > there are 3 possible datum shift operations whose area of use covers the area
> > of use of the CRSs.
> > However, when using GDA94 -> GDA2020, the area of use of those CRS is much
> > larger, and there's only the Helmert-based transformation that covers the
> > whole area. If you specify PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION (or "--
> > spatial-test intersects" with projinfo), you ask PROJ to return coordinate
> > operations whose area of use intersects at least partially with the one of the
> > CRS, but do not necessarily cover them completely.
>
> Thanks -- this was exactly what I was missing.
>
> >
> > >
> > > And as a follow up question -- when checking the accuracy of the 3
> > > pipelines given from EPSG:3111 to EPSG:7899,
> > > proj_coordoperation_get_accuracy reports that the transforms using the
> > > grid shift files only have an accuracy of 0.05m, vs 0.01m for the
> > > non-grid pipeline (counter to my expectations). How is this accuracy
> > > derived?
> >
> > Directly from the EPSG dataset. Strangely enough, the accuracy advertized for
> > those grids is 0.05m , whereas the one of the Helmert base transformation is
> > 0.01m. If you don't believe me, check EPSG:8048 and EPSG:8446 in
> > https://www.epsg-registry.org/
>
> Odd. I suspect this was due to a misinterpretation of
> http://www.icsm.gov.au/sites/default/files/DatumMattersT1FactSheet.pdf
> . I'll find out what's required to get this fixed.
>
> (hopefully) my last question:
>
> If I have a proj string representing a coordinate operation, is there
> any way to determine what grids are required for using it when those
> grids are NOT available for use on the system?
>
> Elsewhere I've used using proj_coordoperation_get_grid_used_count, but
> this requires an existing coordinate operation object. Attempting to
> create the (not available) coordinate operation using proj_create
> fails with "Error -38: failed to load datum shift file". So as far as
> I can see, there's no current way in API to determine the actual list
> of missing grids which is preventing creation of a coordinate
> operation. Or am I missing something?
>
> Nyall
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From kreve at sdfe.dk  Mon May 27 02:07:54 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 27 May 2019 09:07:54 +0000
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <CAB28Ashm_ArtDtM-yCk1T4V05S3X9A2-TYzF+25KW5W9rrY3=w@mail.gmail.com>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <5592558.TuqljXIB6I@even-i700>
 <CAB28AshmK8_MvghZcBOPKXgaFTZBj1UOph4tcGS9-A6suA=C7Q@mail.gmail.com>
 <2647733.h637UnaKup@even-i700>
 <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>
 <2E885BB293AF0448A0181138489E9A0EAF1C68A8@S000014.PROD.SITAD.DK>
 <CAB28Ashm_ArtDtM-yCk1T4V05S3X9A2-TYzF+25KW5W9rrY3=w@mail.gmail.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF1C89CD@S000014.PROD.SITAD.DK>

I'm not sure this will work for your particular use case (since you are instantiating
a PJ from a proj-string), but there is proj_operation_factory_context_set_grid_availability_use
which allow you to ignore unavailable grids when creating PJ objects from using a
PJ_OPERATION_FACTORY_CONTEXT. Here's an example from the tests:

https://github.com/OSGeo/proj.4/blob/d67203a6f76a74f5ac029ff052dbcc72e3b59624/test/unit/test_c_api.cpp#L1316-L1351

which may guide you in the right direction.

/Kristian

-----Oprindelig meddelelse-----
Fra: Nyall Dawson <nyall.dawson at gmail.com> 
Sendt: 27. maj 2019 10:35
Til: Kristian Evers <kreve at sdfe.dk>
Cc: Even Rouault <even.rouault at spatialys.com>; PROJ <proj at lists.osgeo.org>
Emne: Re: [PROJ] Obtaining possible transformation pipelines

On Mon, 27 May 2019 at 17:42, Kristian Evers <kreve at sdfe.dk> wrote:
>
> Nyall,
>
> I think you can use proj_coordoperation_get_grid_used() for that:
>
> https://proj4.org/development/reference/functions.html#_CPPv433proj_coordoperation_get_grid_usedP10PJ_CONTEXTPK2PJiPPKcPPKcPPKcPPKcPiPiPi

I can't use that one, because it requires an existing coordoperation
object, and I can't make the coordoperation when the grid doesn't
exist...

Nyall

>
> /Kristian
>
> -----Oprindelig meddelelse-----
> Fra: PROJ <proj-bounces at lists.osgeo.org> PÃ¥ vegne af Nyall Dawson
> Sendt: 27. maj 2019 03:38
> Til: Even Rouault <even.rouault at spatialys.com>
> Cc: PROJ <proj at lists.osgeo.org>
> Emne: Re: [PROJ] Obtaining possible transformation pipelines
>
> On Fri, 24 May 2019 at 20:48, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > > Why aren't the options using using the
> > > GDA94_GDA2020_conformal_and_distoration.gsb and
> > > GDA94_GDA2020_conformal.gsb listed here?
> >
> > Because you don't use
> >
> > proj_operation_factory_context_set_spatial_criterion(pjContext,
> > operationContext,
> > PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION)
> >
> > hint: if you had tried with projinfo, it would have advised you about that ;-)
> >
> > The reason is that for EPSG:3111 to EPSG:7899, the area of use is "small", so
> > there are 3 possible datum shift operations whose area of use covers the area
> > of use of the CRSs.
> > However, when using GDA94 -> GDA2020, the area of use of those CRS is much
> > larger, and there's only the Helmert-based transformation that covers the
> > whole area. If you specify PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION (or "--
> > spatial-test intersects" with projinfo), you ask PROJ to return coordinate
> > operations whose area of use intersects at least partially with the one of the
> > CRS, but do not necessarily cover them completely.
>
> Thanks -- this was exactly what I was missing.
>
> >
> > >
> > > And as a follow up question -- when checking the accuracy of the 3
> > > pipelines given from EPSG:3111 to EPSG:7899,
> > > proj_coordoperation_get_accuracy reports that the transforms using the
> > > grid shift files only have an accuracy of 0.05m, vs 0.01m for the
> > > non-grid pipeline (counter to my expectations). How is this accuracy
> > > derived?
> >
> > Directly from the EPSG dataset. Strangely enough, the accuracy advertized for
> > those grids is 0.05m , whereas the one of the Helmert base transformation is
> > 0.01m. If you don't believe me, check EPSG:8048 and EPSG:8446 in
> > https://www.epsg-registry.org/
>
> Odd. I suspect this was due to a misinterpretation of
> http://www.icsm.gov.au/sites/default/files/DatumMattersT1FactSheet.pdf
> . I'll find out what's required to get this fixed.
>
> (hopefully) my last question:
>
> If I have a proj string representing a coordinate operation, is there
> any way to determine what grids are required for using it when those
> grids are NOT available for use on the system?
>
> Elsewhere I've used using proj_coordoperation_get_grid_used_count, but
> this requires an existing coordinate operation object. Attempting to
> create the (not available) coordinate operation using proj_create
> fails with "Error -38: failed to load datum shift file". So as far as
> I can see, there's no current way in API to determine the actual list
> of missing grids which is preventing creation of a coordinate
> operation. Or am I missing something?
>
> Nyall
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From even.rouault at spatialys.com  Mon May 27 10:23:27 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 May 2019 19:23:27 +0200
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <2647733.h637UnaKup@even-i700>
 <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>
Message-ID: <2504239.03DJOSp5H5@even-i700>

> If I have a proj string representing a coordinate operation, is there
> any way to determine what grids are required for using it when those
> grids are NOT available for use on the system?

I don't think so. As you find out, PROJ will refuse to instanciate a 
coordinate operation from a PROJ string that has a grids not present on the 
system.

Asthere are not so many ways of expressing grids in PROJ grids, basically you 
could look for +grids=xxxxx

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From multiquadric at gmail.com  Tue May 28 15:44:27 2019
From: multiquadric at gmail.com (David Fogel)
Date: Tue, 28 May 2019 15:44:27 -0700
Subject: [PROJ] PROJ.6 6.1.0 on macOS 10.14 w/o pkgsrc
Message-ID: <64435ac7-8451-c173-a1ec-e86ccec7256e@gmail.com>

Hi,

Thought to share a build experience with PROJ.6 6.1.0 on macOS Mojave 
(10.14) natively. A change in "configure" was required. I also passed 
extra variables to "configure". Let's call this a sanity check ahead of 
a bug report? Soonest I can generate diffs is at then end of this week.

In "configure" the test for the presence/absence of SQLite3 seems to 
always fail. In other words, absent pkgsrc, regardless of whetherÂ  
SQLITE3_CFLAGS and SQLITE3_LIBS are defined or not, the results are the 
same.Â  I have not, yet, installed pkgsrc.

To successfully compile, I also had to tease the right results out of 
configure. Notably, I pointed to SQLite3 twice.

$ ./configure -prefix=/opt/proj-6.1.0 
SQLITE3_CFLAGS=-I/opt/sqlite-3.28.0/include 
SQLITE3_LIBS=-L/opt/sqlite-3.28.0/lib -lsqlite3 CC=gcc -arch x86_64 
CXX=g++ -arch x86_64 CPP=gcc -E CXXCPP=g++ -E 
CPPFLAGS=-I/opt/sqlite-3.28.0/include LDFLAGS=-L/opt/sqlite-3.28.0/lib 
-lsqlite3

Other subtleties may not apply, such as the SQLite3 build.

Tests passed.

If the "tests" for pkgsrc, and then SQLITE3_CFLAGS and SQLITE3_LIBS 
definitions failed on macOS, then it is possible they will fail on 
"Unix/Linux" as well. Possible? Plausible?

Thanks,

= David


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190528/b44daf45/attachment.html>

From cdelancy at blackfangtechnologies.com  Tue May 28 20:49:47 2019
From: cdelancy at blackfangtechnologies.com (Craig Delancy)
Date: Wed, 29 May 2019 03:49:47 +0000
Subject: [PROJ] Has anyone build PROJ on Windows? Could I pay you to show me
	how?
Message-ID: <BN6PR17MB12502DFE5AD0B5C7D780B6C9C71F0@BN6PR17MB1250.namprd17.prod.outlook.com>

I am desperately trying to build GDAL 3.0 on windows. PROJ4 6.0 is required. Because I cannot build PROJ, I cannot build GDAL. I am willing to pay for someone to join me in a Skype or Discord call, and give me instructions. Name your price.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/782aeb8f/attachment.html>

From a.furieri at lqt.it  Tue May 28 22:40:20 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Wed, 29 May 2019 07:40:20 +0200
Subject: [PROJ]
 =?utf-8?q?Has_anyone_build_PROJ_on_Windows=3F_Could_I_pay_?=
 =?utf-8?q?you_to_show_me_how=3F?=
In-Reply-To: <BN6PR17MB12502DFE5AD0B5C7D780B6C9C71F0@BN6PR17MB1250.namprd17.prod.outlook.com>
References: <BN6PR17MB12502DFE5AD0B5C7D780B6C9C71F0@BN6PR17MB1250.namprd17.prod.outlook.com>
Message-ID: <86c4e0eae27b84d5e2060ec7a9010240@lqt.it>

On Wed, 29 May 2019 03:49:47 +0000, Craig Delancy wrote:
> I am desperately trying to build GDAL 3.0 on windows. PROJ4 6.0 is
> required. Because I cannot build PROJ, I cannot build GDAL. I am
> willing to pay for someone to join me in a Skype or Discord call, and
> give me instructions. Name your price.
>

Hi Craig,

there is no need to pay; a detailed how-to guide is freely
available for building PROJ 6.1 on Windows using MSYS2
(a Linux-like command shell) and MinGW64 (porting of the
renown gcc compiler for Windows platforms).

please read:

http://www.gaia-gis.it/gaia-sins/mingw32_how_to.html#libproj
(to get the 32-bit library)

or

http://www.gaia-gis.it/gaia-sins/mingw64_how_to.html#libproj
(to get the 64-bit library)

if you haven't yet installed MSYS2 and MinGW64 on your system
you can find a quick how-to from here:

http://www.gaia-gis.it/gaia-sins/mingw32_how_to.html#env

http://www.gaia-gis.it/gaia-sins/mingw64_how_to.html

bye Sandro

From roger.oberholtzer at gmail.com  Tue May 28 23:36:33 2019
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 29 May 2019 08:36:33 +0200
Subject: [PROJ] Has anyone build PROJ on Windows? Could I pay you to
	show me how?
In-Reply-To: <BN6PR17MB12502DFE5AD0B5C7D780B6C9C71F0@BN6PR17MB1250.namprd17.prod.outlook.com>
References: <BN6PR17MB12502DFE5AD0B5C7D780B6C9C71F0@BN6PR17MB1250.namprd17.prod.outlook.com>
Message-ID: <52A0CD38-A430-465B-8238-BC3A4FD65992@gmail.com>

I maintain proj for multiple platform on the opensuse build service. There is a 64- and 32-bit build for windows. I use it in my own software. Look at build.opensuse.org. Btw, there are also builds of 6.1.0 for many Linux versions maintained by me there. A windows build will arrive shortly (time...). 

You can search the site for packages. I can send a direct link when Iâm back in the office if that fails. 

Roger 

> On 29 May 2019, at 05:49, Craig Delancy <cdelancy at blackfangtechnologies.com> wrote:
> 
> I am desperately trying to build GDAL 3.0 on windows. PROJ4 6.0 is required. Because I cannot build PROJ, I cannot build GDAL. I am willing to pay for someone to join me in a Skype or Discord call, and give me instructions. Name your price.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/4de20738/attachment.html>

From jmfluis at gmail.com  Wed May 29 02:43:20 2019
From: jmfluis at gmail.com (J Luis)
Date: Wed, 29 May 2019 10:43:20 +0100
Subject: [PROJ] Has anyone build PROJ on Windows? Could I pay you to
 show me how?
In-Reply-To: <52A0CD38-A430-465B-8238-BC3A4FD65992@gmail.com>
References: <BN6PR17MB12502DFE5AD0B5C7D780B6C9C71F0@BN6PR17MB1250.namprd17.prod.outlook.com>
 <52A0CD38-A430-465B-8238-BC3A4FD65992@gmail.com>
Message-ID: <CAE_VgzP52v5Vve7YopLLuJ-+tE9g_eCUrfO3BhL4AAQhvcj5HA@mail.gmail.com>

Craig,

I build sqlite with these commands. Please find attached the .def file that
you'll also need

cl /c sqlite3.c /nologo /MD /Ox /DSQLITE_ENABLE_COLUMN_METADATA
/DSQLITE_ENABLE_RTREE
link /out:sqlite3.dll /implib:sqlite3.lib /def:sqlite3.def /dll
/MACHINE:X64 sqlite3.obj

Joaquim





On Wed, May 29, 2019 at 7:36 AM Roger Oberholtzer <
roger.oberholtzer at gmail.com> wrote:

> I maintain proj for multiple platform on the opensuse build service. There
> is a 64- and 32-bit build for windows. I use it in my own software. Look at
> build.opensuse.org. Btw, there are also builds of 6.1.0 for many Linux
> versions maintained by me there. A windows build will arrive shortly
> (time...).
>
> You can search the site for packages. I can send a direct link when Iâm
> back in the office if that fails.
>
> Roger
>
> On 29 May 2019, at 05:49, Craig Delancy <
> cdelancy at blackfangtechnologies.com> wrote:
>
> I am desperately trying to build GDAL 3.0 on windows. PROJ4 6.0 is
> required. Because I cannot build PROJ, I cannot build GDAL. I am willing to
> pay for someone to join me in a Skype or Discord call, and give me
> instructions. Name your price.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/0655a830/attachment-0001.html>
-------------- next part --------------
EXPORTS 
sqlite3_aggregate_context
sqlite3_aggregate_count
sqlite3_auto_extension
sqlite3_backup_finish
sqlite3_backup_init
sqlite3_backup_pagecount
sqlite3_backup_remaining
sqlite3_backup_step
sqlite3_bind_blob
sqlite3_bind_blob64
sqlite3_bind_double
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_null
sqlite3_bind_parameter_count
sqlite3_bind_parameter_index
sqlite3_bind_parameter_name
sqlite3_bind_pointer
sqlite3_bind_text
sqlite3_bind_text16
sqlite3_bind_text64
sqlite3_bind_value
sqlite3_bind_zeroblob
sqlite3_bind_zeroblob64
sqlite3_blob_bytes
sqlite3_blob_close
sqlite3_blob_open
sqlite3_blob_read
sqlite3_blob_reopen
sqlite3_blob_write
sqlite3_busy_handler
sqlite3_busy_timeout
sqlite3_cancel_auto_extension
sqlite3_changes
sqlite3_clear_bindings
sqlite3_close
sqlite3_close_v2
sqlite3_collation_needed
sqlite3_collation_needed16
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_bytes16
sqlite3_column_count
sqlite3_column_database_name
sqlite3_column_database_name16
sqlite3_column_decltype
sqlite3_column_decltype16
sqlite3_column_double
sqlite3_column_int
sqlite3_column_int64
sqlite3_column_name
sqlite3_column_name16
sqlite3_column_origin_name
sqlite3_column_origin_name16
sqlite3_column_table_name
sqlite3_column_table_name16
sqlite3_column_text
sqlite3_column_text16
sqlite3_column_type
sqlite3_column_value
sqlite3_commit_hook
sqlite3_compileoption_get
sqlite3_compileoption_used
sqlite3_complete
sqlite3_complete16
sqlite3_config
sqlite3_context_db_handle
sqlite3_create_collation
sqlite3_create_collation_v2
sqlite3_create_collation16
sqlite3_create_function
sqlite3_create_function_v2
sqlite3_create_function16
sqlite3_create_module
sqlite3_create_module_v2
sqlite3_data_count
sqlite3_data_directory
sqlite3_db_cacheflush
sqlite3_db_config
sqlite3_db_filename
sqlite3_db_handle
sqlite3_db_mutex
sqlite3_db_readonly
sqlite3_db_release_memory
sqlite3_db_status
sqlite3_declare_vtab
sqlite3_enable_load_extension
sqlite3_enable_shared_cache
sqlite3_errcode
sqlite3_errmsg
sqlite3_errmsg16
sqlite3_errstr
sqlite3_exec
sqlite3_expanded_sql
sqlite3_expired
sqlite3_extended_errcode
sqlite3_extended_result_codes
sqlite3_file_control
sqlite3_finalize
sqlite3_free
sqlite3_free_table
sqlite3_get_autocommit
sqlite3_get_auxdata
sqlite3_get_table
sqlite3_global_recover
sqlite3_initialize
sqlite3_interrupt
sqlite3_last_insert_rowid
sqlite3_libversion
sqlite3_libversion_number
sqlite3_limit
sqlite3_load_extension
sqlite3_log
sqlite3_malloc
sqlite3_malloc64
sqlite3_memory_alarm
sqlite3_memory_highwater
sqlite3_memory_used
sqlite3_mprintf
sqlite3_msize
sqlite3_mutex_alloc
sqlite3_mutex_enter
sqlite3_mutex_free
sqlite3_mutex_leave
sqlite3_mutex_try
sqlite3_next_stmt
sqlite3_open
sqlite3_open_v2
sqlite3_open16
sqlite3_os_end
sqlite3_os_init
sqlite3_overload_function
sqlite3_prepare
sqlite3_prepare_v2
sqlite3_prepare_v3
sqlite3_prepare16
sqlite3_prepare16_v2
sqlite3_prepare16_v3
sqlite3_profile
sqlite3_progress_handler
sqlite3_randomness
sqlite3_realloc
sqlite3_realloc64
sqlite3_release_memory
sqlite3_reset
sqlite3_reset_auto_extension
sqlite3_result_blob
sqlite3_result_blob64
sqlite3_result_double
sqlite3_result_error
sqlite3_result_error_code
sqlite3_result_error_nomem
sqlite3_result_error_toobig
sqlite3_result_error16
sqlite3_result_int
sqlite3_result_int64
sqlite3_result_null
sqlite3_result_pointer
sqlite3_result_subtype
sqlite3_result_text
sqlite3_result_text16
sqlite3_result_text16be
sqlite3_result_text16le
sqlite3_result_text64
sqlite3_result_value
sqlite3_result_zeroblob
sqlite3_result_zeroblob64
sqlite3_rollback_hook
sqlite3_rtree_geometry_callback
sqlite3_rtree_query_callback
sqlite3_set_authorizer
sqlite3_set_auxdata
sqlite3_set_last_insert_rowid
sqlite3_shutdown
sqlite3_sleep
sqlite3_snprintf
sqlite3_soft_heap_limit
sqlite3_soft_heap_limit64
sqlite3_sourceid
sqlite3_sql
sqlite3_status
sqlite3_status64
sqlite3_step
sqlite3_stmt_busy
sqlite3_stmt_readonly
sqlite3_stmt_status
sqlite3_strglob
sqlite3_stricmp
sqlite3_strlike
sqlite3_strnicmp
sqlite3_system_errno
sqlite3_table_column_metadata
sqlite3_temp_directory
sqlite3_test_control
sqlite3_thread_cleanup
sqlite3_threadsafe
sqlite3_total_changes
sqlite3_trace
sqlite3_trace_v2
sqlite3_transfer_bindings
sqlite3_update_hook
sqlite3_uri_boolean
sqlite3_uri_int64
sqlite3_uri_parameter
sqlite3_user_data
sqlite3_value_blob
sqlite3_value_bytes
sqlite3_value_bytes16
sqlite3_value_double
sqlite3_value_dup
sqlite3_value_free
sqlite3_value_int
sqlite3_value_int64
sqlite3_value_nochange
sqlite3_value_numeric_type
sqlite3_value_pointer
sqlite3_value_subtype
sqlite3_value_text
sqlite3_value_text16
sqlite3_value_text16be
sqlite3_value_text16le
sqlite3_value_type
sqlite3_version
sqlite3_vfs_find
sqlite3_vfs_register
sqlite3_vfs_unregister
sqlite3_vmprintf
sqlite3_vsnprintf
sqlite3_vtab_collation
sqlite3_vtab_config
sqlite3_vtab_nochange
sqlite3_vtab_on_conflict
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint
sqlite3_wal_checkpoint_v2
sqlite3_wal_hook
sqlite3_win32_is_nt
sqlite3_win32_mbcs_to_utf8
sqlite3_win32_mbcs_to_utf8_v2
sqlite3_win32_set_directory
sqlite3_win32_sleep
sqlite3_win32_unicode_to_utf8
sqlite3_win32_utf8_to_mbcs
sqlite3_win32_utf8_to_mbcs_v2
sqlite3_win32_utf8_to_unicode
sqlite3_win32_write_debug

From andrew.bell.ia at gmail.com  Wed May 29 11:19:11 2019
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 29 May 2019 14:19:11 -0400
Subject: [PROJ] Error Building Docs
Message-ID: <CACJ51z0uemzO13=Djjpk2S=CUBmy=e5G6rLvaFpaTa39VhXWbw@mail.gmail.com>

I'm getting an error building the documentation:

$ make dirhtml
...
reading sources... [ 11%] development/reference/cpp/cpp_general
Warning, treated as error:
/Users/acbell/proj.4/docs/source/development/reference/cpp/common.rst:6:doxygennamespace:
Cannot find file: /Users/acbell/proj.4/docs/build/xml/index.xml

Can someone tell me what I need to do to fix this?

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/b0ba2ad1/attachment.html>

From even.rouault at spatialys.com  Wed May 29 11:53:24 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 May 2019 20:53:24 +0200
Subject: [PROJ] Error Building Docs
In-Reply-To: <CACJ51z0uemzO13=Djjpk2S=CUBmy=e5G6rLvaFpaTa39VhXWbw@mail.gmail.com>
References: <CACJ51z0uemzO13=Djjpk2S=CUBmy=e5G6rLvaFpaTa39VhXWbw@mail.gmail.com>
Message-ID: <1565034.PU9hLgNtYb@even-i700>

On mercredi 29 mai 2019 14:19:11 CEST Andrew Bell wrote:
> I'm getting an error building the documentation:
> 
> $ make dirhtml
> ...
> reading sources... [ 11%] development/reference/cpp/cpp_general
> Warning, treated as error:
> /Users/acbell/proj.4/docs/source/development/reference/cpp/common.rst:6:doxy
> gennamespace: Cannot find file:
> /Users/acbell/proj.4/docs/build/xml/index.xml
> 
> Can someone tell me what I need to do to fix this?

Look at the 'html:' target in docs/Makefile. You probably need to replicate 
the hacks done for it in the 'dirhtml:' target


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Wed May 29 12:00:24 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 29 May 2019 21:00:24 +0200
Subject: [PROJ] Error Building Docs
In-Reply-To: <CACJ51z0uemzO13=Djjpk2S=CUBmy=e5G6rLvaFpaTa39VhXWbw@mail.gmail.com>
References: <CACJ51z0uemzO13=Djjpk2S=CUBmy=e5G6rLvaFpaTa39VhXWbw@mail.gmail.com>
Message-ID: <20190529190024.gagskgxfgak44cc2@DEV604.cadcorp.net>

On 19-05-29 14:19:11, Andrew Bell wrote:
>I'm getting an error building the documentation:
>
>$ make dirhtml
>...
>reading sources... [ 11%] development/reference/cpp/cpp_general
>Warning, treated as error:
>/Users/acbell/proj.4/docs/source/development/reference/cpp/common.rst:6:doxygennamespace:
>Cannot find file: /Users/acbell/proj.4/docs/build/xml/index.xml

Unlike html target [1], the dirhtml [2] does not seem to be depending on the
target running doxygen to generate the XML.

>
>Can someone tell me what I need to do to fix this?

Run make html first? Or ../scripts/doxygen.sh [3]

[1] https://github.com/OSGeo/proj.4/blob/master/docs/Makefile#L60
[2] https://github.com/OSGeo/proj.4/blob/master/docs/Makefile#L71
[3] https://github.com/OSGeo/proj.4/blob/master/docs/Makefile#L55

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
Fingerprint=C081 EA1B 4AFB 7C19 38BA  9C88 928D 7C2A BB2A C1F2

From resistance_is_futile at hotmail.com  Wed May 29 12:31:23 2019
From: resistance_is_futile at hotmail.com (A)
Date: Wed, 29 May 2019 19:31:23 +0000
Subject: [PROJ] Anyone have success using cmake to build proj.4 version
 6.1.0 with visual studio 2017
Message-ID: <BYAPR06MB41037F17FFE3D82F87EEEF4AD11F0@BYAPR06MB4103.namprd06.prod.outlook.com>

In an effort to reduce our software licensing costs, I have been tasked into looking at the level of effort required to remove our dependency on a commercial vendor's SDK and replace it with something else. Preliminary investigations indicate that PROJ.4 version 6.x may fit the bill. However, I have been struggling to get PROJ.4 to build successfully. We are a Windows shop and our custom built applications run in this OS environment. Unfortunately we do not have the luxury of porting all our apps to Linux at this time.

Has anyone successfully built PROJ v6.1.0 using cmake and visual studio 2017 on Windows 10? I have followed the instructions on the PROJ.4 website, but with no luck. After installing sqlite3 and extracting the proj-6.1.0.tar archive, I ran cmake. This is my command line.

cmake -DSQLITE3_INCLUDE_DIR=C:\temp\sqlite3 -DSQLITE3_LIBARARY=C:\temp\sqlite3\sqlite3.dll -G "Visual Studio 15 2017 Win64" ..

There are several fatal errors. Here are a few of them from the CMakeError.log.

fatal error C1083: Cannot open include file: 'dlfcn.h': No such file or directory
fatal error C1083: Cannot open include file: 'jni.h': No such file or directory
fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory

These are the versions of the tools I am using.

Windows 10 Enterprise v10.0.17134 Build 17134
cmake version 3.14.4
sqlite3 version 3.29.0
Visual Studio 2017 v15.9.12

In fact, v6.0.0 and v5.2.0 also reported the same cmake errors. I even tried Visual Studio 2013 (also with no luck)

However, I was able to build PROJ.4 v4.9.3 successfully. Unfortunately to continue my evaluation, I need to test the WKT string capabilities of the proj_create function. Only version 6.x supports this WKT functionality.

Further, I did read through the mail archives and came across a thread posted by a.furieri, but the replier's answer was to use MinGW64 and MYSY2. I would prefer to stick with cmake and VS2017.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/da3ca885/attachment.html>

From kristianevers at gmail.com  Wed May 29 12:37:12 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 29 May 2019 21:37:12 +0200
Subject: [PROJ] Anyone have success using cmake to build proj.4 version
 6.1.0 with visual studio 2017
In-Reply-To: <BYAPR06MB41037F17FFE3D82F87EEEF4AD11F0@BYAPR06MB4103.namprd06.prod.outlook.com>
References: <BYAPR06MB41037F17FFE3D82F87EEEF4AD11F0@BYAPR06MB4103.namprd06.prod.outlook.com>
Message-ID: <55EB2282-1910-477A-8CD6-510564A23641@gmail.com>

Try having a look at Mateuszâ howto: https://github.com/OSGeo/proj.4/wiki/Building-with-VS-and-vcpkg <https://github.com/OSGeo/proj.4/wiki/Building-with-VS-and-vcpkg>

/Kristian

> On 29 May 2019, at 21:31, A <resistance_is_futile at hotmail.com> wrote:
> 
> In an effort to reduce our software licensing costs, I have been tasked into looking at the level of effort required to remove our dependency on a commercial vendor's SDK and replace it with something else. Preliminary investigations indicate that PROJ.4 version 6.x may fit the bill. However, I have been struggling to get PROJ.4 to build successfully. We are a Windows shop and our custom built applications run in this OS environment. Unfortunately we do not have the luxury of porting all our apps to Linux at this time.
> 
> Has anyone successfully built PROJ v6.1.0 using cmake and visual studio 2017 on Windows 10? I have followed the instructions on the PROJ.4 website, but with no luck. After installing sqlite3 and extracting the proj-6.1.0.tar archive, I ran cmake. This is my command line.
> 
> cmake -DSQLITE3_INCLUDE_DIR=C:\temp\sqlite3 -DSQLITE3_LIBARARY=C:\temp\sqlite3\sqlite3.dll -G "Visual Studio 15 2017 Win64" ..
> 
> There are several fatal errors. Here are a few of them from the CMakeError.log.
> 
> fatal error C1083: Cannot open include file: 'dlfcn.h': No such file or directory
> fatal error C1083: Cannot open include file: 'jni.h': No such file or directory
> fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory
> 
> These are the versions of the tools I am using.
> 
> Windows 10 Enterprise v10.0.17134 Build 17134
> cmake version 3.14.4
> sqlite3 version 3.29.0
> Visual Studio 2017 v15.9.12
> 
> In fact, v6.0.0 and v5.2.0 also reported the same cmake errors. I even tried Visual Studio 2013 (also with no luck)
> 
> However, I was able to build PROJ.4 v4.9.3 successfully. Unfortunately to continue my evaluation, I need to test the WKT string capabilities of the proj_create function. Only version 6.x supports this WKT functionality.
> 
> Further, I did read through the mail archives and came across a thread posted by a.furieri, but the replier's answer was to use MinGW64 and MYSY2. I would prefer to stick with cmake and VS2017.
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/ea5c91c6/attachment-0001.html>

From resistance_is_futile at hotmail.com  Wed May 29 12:50:33 2019
From: resistance_is_futile at hotmail.com (A)
Date: Wed, 29 May 2019 19:50:33 +0000
Subject: [PROJ] Anyone have success using cmake to build proj.4 version
 6.1.0 with visual studio 2017
In-Reply-To: <55EB2282-1910-477A-8CD6-510564A23641@gmail.com>
References: <BYAPR06MB41037F17FFE3D82F87EEEF4AD11F0@BYAPR06MB4103.namprd06.prod.outlook.com>,
 <55EB2282-1910-477A-8CD6-510564A23641@gmail.com>
Message-ID: <BYAPR06MB41035A2B2B3B3F0EAD37C365D11F0@BYAPR06MB4103.namprd06.prod.outlook.com>

Hi Kristian,

I will have a look at the link you provided. After googling for days, I'm surprised your link did not show up in my search results. I do appreciate your responding to my query so quickly. Thank you.

Regards,
rifhc

Try having a look at Mateuszâ howto: https://github.com/OSGeo/proj.4/wiki/Building-with-VS-and-vcpkg

/Kristian

On 29 May 2019, at 21:31, A <resistance_is_futile at hotmail.com<mailto:resistance_is_futile at hotmail.com>> wrote:

In an effort to reduce our software licensing costs, I have been tasked into looking at the level of effort required to remove our dependency on a commercial vendor's SDK and replace it with something else. Preliminary investigations indicate that PROJ.4 version 6.x may fit the bill. However, I have been struggling to get PROJ.4 to build successfully. We are a Windows shop and our custom built applications run in this OS environment. Unfortunately we do not have the luxury of porting all our apps to Linux at this time.

Has anyone successfully built PROJ v6.1.0 using cmake and visual studio 2017 on Windows 10? I have followed the instructions on the PROJ.4 website, but with no luck. After installing sqlite3 and extracting the proj-6.1.0.tar archive, I ran cmake. This is my command line.

cmake -DSQLITE3_INCLUDE_DIR=C:\temp\sqlite3 -DSQLITE3_LIBARARY=C:\temp\sqlite3\sqlite3.dll -G "Visual Studio 15 2017 Win64" ..

There are several fatal errors. Here are a few of them from the CMakeError.log.

fatal error C1083: Cannot open include file: 'dlfcn.h': No such file or directory
fatal error C1083: Cannot open include file: 'jni.h': No such file or directory
fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory

These are the versions of the tools I am using.

Windows 10 Enterprise v10.0.17134 Build 17134
cmake version 3.14.4
sqlite3 version 3.29.0
Visual Studio 2017 v15.9.12

In fact, v6.0.0 and v5.2.0 also reported the same cmake errors. I even tried Visual Studio 2013 (also with no luck)

However, I was able to build PROJ.4 v4.9.3 successfully. Unfortunately to continue my evaluation, I need to test the WKT string capabilities of the proj_create function. Only version 6.x supports this WKT functionality.

Further, I did read through the mail archives and came across a thread posted by a.furieri, but the replier's answer was to use MinGW64 and MYSY2. I would prefer to stick with cmake and VS2017.

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/faf69a50/attachment.html>

From mateusz at loskot.net  Wed May 29 12:55:20 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 29 May 2019 21:55:20 +0200
Subject: [PROJ] Anyone have success using cmake to build proj.4 version
 6.1.0 with visual studio 2017
In-Reply-To: <BYAPR06MB41035A2B2B3B3F0EAD37C365D11F0@BYAPR06MB4103.namprd06.prod.outlook.com>
References: <BYAPR06MB41037F17FFE3D82F87EEEF4AD11F0@BYAPR06MB4103.namprd06.prod.outlook.com>
 <55EB2282-1910-477A-8CD6-510564A23641@gmail.com>
 <BYAPR06MB41035A2B2B3B3F0EAD37C365D11F0@BYAPR06MB4103.namprd06.prod.outlook.com>
Message-ID: <CABUeae_hdbZfi0PMF82YHMV+59zicvXeE+pxZN5GtCfpt-z9pA@mail.gmail.com>

On Wed, 29 May 2019 at 21:50, A <resistance_is_futile at hotmail.com> wrote:
>
> Hi Kristian,
>
> I will have a look at the link you provided. After googling for days,
> I'm surprised your link did not show up in my search results.
> I do appreciate your responding to my query so quickly.

If an open source project of your interest uses Travis CI,
AppVeyor, Azure Pipelines, etc., first inspect how it
builds itself on those CI services

https://github.com/OSGeo/proj.4/blob/master/appveyor.yml#L22-L44

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From resistance_is_futile at hotmail.com  Wed May 29 13:29:40 2019
From: resistance_is_futile at hotmail.com (A)
Date: Wed, 29 May 2019 20:29:40 +0000
Subject: [PROJ] Anyone have success using cmake to build proj.4 version
 6.1.0 with visual studio 2017
In-Reply-To: <CABUeae_hdbZfi0PMF82YHMV+59zicvXeE+pxZN5GtCfpt-z9pA@mail.gmail.com>
References: <BYAPR06MB41037F17FFE3D82F87EEEF4AD11F0@BYAPR06MB4103.namprd06.prod.outlook.com>
 <55EB2282-1910-477A-8CD6-510564A23641@gmail.com>
 <BYAPR06MB41035A2B2B3B3F0EAD37C365D11F0@BYAPR06MB4103.namprd06.prod.outlook.com>,
 <CABUeae_hdbZfi0PMF82YHMV+59zicvXeE+pxZN5GtCfpt-z9pA@mail.gmail.com>
Message-ID: <BYAPR06MB4103910B391A7F8F2EDF378ED11F0@BYAPR06MB4103.namprd06.prod.outlook.com>

Hi Mateusz,

After looking at the links you and Kristian sent and with some tweaking, I was able to build version PROJ 6.1.0. Woo Hoo! Now the hard part comes, coming up with a level of effort for my managers. Thank you for your help!

Regards,
rifhc


________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Mateusz Loskot <mateusz at loskot.net>
Sent: May 29, 2019 1:55 PM
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Anyone have success using cmake to build proj.4 version 6.1.0 with visual studio 2017

On Wed, 29 May 2019 at 21:50, A <resistance_is_futile at hotmail.com> wrote:
>
> Hi Kristian,
>
> I will have a look at the link you provided. After googling for days,
> I'm surprised your link did not show up in my search results.
> I do appreciate your responding to my query so quickly.

If an open source project of your interest uses Travis CI,
AppVeyor, Azure Pipelines, etc., first inspect how it
builds itself on those CI services

https://github.com/OSGeo/proj.4/blob/master/appveyor.yml#L22-L44

Best regards,
--
Mateusz Loskot, http://mateusz.loskot.net
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190529/a7d71508/attachment-0001.html>

From howard at hobu.co  Thu May 30 08:12:34 2019
From: howard at hobu.co (Howard Butler)
Date: Thu, 30 May 2019 10:12:34 -0500
Subject: [PROJ] proj4.org -> proj.org migration
Message-ID: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>

All,

It's good to have friends in high places. Paul Ramsey was able to encourage the owner of proj.org <http://proj.org/> to donate the domain to our cause. The domain has been transferred to the OSGeo registrar and is currently in finalization at this time. Once that is complete (in the next few days), we can begin our transition from proj4.org <http://proj4.org/> to proj.org <http://proj.org/> if the PSC is supportive of such a migration. I know I am!

I propose that we keep another GH page up at https://proj4.org <https://proj4.org/> that 301s -> https://proj.org <https://proj.org/> for quite a while, and we adapt the CNAME of our current proj-docs repo to proj.org <http://proj.org/>.  Hopefully the transition does not need to be any rougher than that. If we need an RFC and vote to do this, someone chime in and we can do so, but I think the sentiment is we've wanted proj.org <http://proj.org/> all along and we are very glad to get it.

Thanks again to Paul Ramsey and the contributor of the domain (Paul can name him if that is ok). We really appreciate it!

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190530/1244ba0f/attachment.html>

From kristianevers at gmail.com  Thu May 30 08:27:28 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Thu, 30 May 2019 17:27:28 +0200
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
Message-ID: <57CE10A9-5AFC-4B53-AC00-C5D67989D257@gmail.com>

This is fantastic news! Thank you guys for working on this. Definitely a +1 from me. Although I donât think an RFC is needed - this is in line with the rebranding to PROJ thatâs been ongoing for a couple of years already.

I agree that a redirect from proj4.org <http://proj4.org/> is necessary. This would also be a good occasion to rename the GitHub repository from proj.4 to PROJ. According to [0] any old links will be redirected to the new URL of the repository.

/Kristian

[0] https://help.github.com/en/articles/renaming-a-repository <https://help.github.com/en/articles/renaming-a-repository>

> On 30 May 2019, at 17:12, Howard Butler <howard at hobu.co> wrote:
> 
> All,
> 
> It's good to have friends in high places. Paul Ramsey was able to encourage the owner of proj.org <http://proj.org/> to donate the domain to our cause. The domain has been transferred to the OSGeo registrar and is currently in finalization at this time. Once that is complete (in the next few days), we can begin our transition from proj4.org <http://proj4.org/> to proj.org <http://proj.org/> if the PSC is supportive of such a migration. I know I am!
> 
> I propose that we keep another GH page up at https://proj4.org <https://proj4.org/> that 301s -> https://proj.org <https://proj.org/> for quite a while, and we adapt the CNAME of our current proj-docs repo to proj.org <http://proj.org/>.  Hopefully the transition does not need to be any rougher than that. If we need an RFC and vote to do this, someone chime in and we can do so, but I think the sentiment is we've wanted proj.org <http://proj.org/> all along and we are very glad to get it.
> 
> Thanks again to Paul Ramsey and the contributor of the domain (Paul can name him if that is ok). We really appreciate it!
> 
> Howard
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190530/2c100b47/attachment.html>

From even.rouault at spatialys.com  Thu May 30 08:27:50 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 May 2019 17:27:50 +0200
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
Message-ID: <4831166.2TGW1aFtS9@even-i700>

> Once that is complete (in the next few days), we
> can begin our transition from proj4.org <http://proj4.org/> to proj.org
> <http://proj.org/> if the PSC is supportive of such a migration. I know I
> am!

A big +1


> If we need an RFC and vote to do this, someone chime
> in and we can do so, but I think the sentiment is we've wanted proj.org
> <http://proj.org/> all along and we are very glad to get it.

Seems overkill


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Thu May 30 09:25:57 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 30 May 2019 18:25:57 +0200
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
Message-ID: <20190530162557.ltskeghrxlvycuu7@DEV604.cadcorp.net>

On 19-05-30 10:12:34, Howard Butler wrote:
>All,
>
>It's good to have friends in high places. Paul Ramsey was able to encourage the
>owner of proj.org <http://proj.org/> to donate the domain to our cause.

Paul, thank you!

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
Fingerprint=C081 EA1B 4AFB 7C19 38BA  9C88 928D 7C2A BB2A C1F2

From knudsen.thomas at gmail.com  Thu May 30 09:26:49 2019
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Thu, 30 May 2019 18:26:49 +0200
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
Message-ID: <CAH0YoEPwMhHJjjOYLQM7nj6Q-ZmG-fQA6o5ZRAQFZtScnA9XsA@mail.gmail.com>

Fantastic news and a huge +1 from me!

tor. 30. maj 2019 17.12 skrev Howard Butler <howard at hobu.co>:

> All,
>
> It's good to have friends in high places. Paul Ramsey was able to
> encourage the owner of proj.org to donate the domain to our cause. The
> domain has been transferred to the OSGeo registrar and is currently in
> finalization at this time. Once that is complete (in the next few days), we
> can begin our transition from proj4.org to proj.org if the PSC is
> supportive of such a migration. I know I am!
>
> I propose that we keep another GH page up at https://proj4.org that 301s
> -> https://proj.org for quite a while, and we adapt the CNAME of our
> current proj-docs repo to proj.org.  Hopefully the transition does not
> need to be any rougher than that. If we need an RFC and vote to do this,
> someone chime in and we can do so, but I think the sentiment is we've
> wanted proj.org all along and we are very glad to get it.
>
> Thanks again to Paul Ramsey and the contributor of the domain (Paul can
> name him if that is ok). We really appreciate it!
>
> Howard
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190530/18f845f5/attachment.html>

From nyall.dawson at gmail.com  Thu May 30 20:12:46 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 31 May 2019 13:12:46 +1000
Subject: [PROJ] Catching error from proj_create_operations
Message-ID: <CAB28AshsJO-+5yNJknV09qAE5ZUeSq2uHHS-UUibv3+GQDkEXw@mail.gmail.com>

Hi list,

What's the correct way to get errors as a result of a
proj_create_operations call? When trying to create a (deliberately)
bad operation, I can see on the console that proj throws a nice
descriptive warning:

"internal_proj_create_operations: Source and target ellipsoid do not
belong to the same celestial body"

And, as expected, the function returns a nullptr. I'm trying to
retrieve this descriptive error string for display to users, but can't
work out how to do this. I can't use proj_errno, since I don't have a
object to retrieve from. And if I try to retrieve from the context
using proj_context_errno, I just get a -61 "generic error of unknown
origin" message.

Any suggestions?

Nyall

From alansnow21 at gmail.com  Thu May 30 20:55:46 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Thu, 30 May 2019 22:55:46 -0500
Subject: [PROJ] Catching error from proj_create_operations
In-Reply-To: <CAB28AshsJO-+5yNJknV09qAE5ZUeSq2uHHS-UUibv3+GQDkEXw@mail.gmail.com>
References: <CAB28AshsJO-+5yNJknV09qAE5ZUeSq2uHHS-UUibv3+GQDkEXw@mail.gmail.com>
Message-ID: <CAGybdFTRoZzwd_K1bvUa0dKBqR-C8Buet91h6Wa9HD_Y9fnj+Q@mail.gmail.com>

In pyproj, we use a custom log function to catch the error log messages:
https://github.com/pyproj4/pyproj/blob/0221652c4cce274d72b0a82305d82c13e4b0535b/pyproj/_datadir.pyx#L9

And pass the custom function into `proj_log_func`:
https://github.com/pyproj4/pyproj/blob/0221652c4cce274d72b0a82305d82c13e4b0535b/pyproj/_datadir.pyx#L35

Hope this helps,
Alan


On Thu, May 30, 2019, 10:13 PM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> Hi list,
>
> What's the correct way to get errors as a result of a
> proj_create_operations call? When trying to create a (deliberately)
> bad operation, I can see on the console that proj throws a nice
> descriptive warning:
>
> "internal_proj_create_operations: Source and target ellipsoid do not
> belong to the same celestial body"
>
> And, as expected, the function returns a nullptr. I'm trying to
> retrieve this descriptive error string for display to users, but can't
> work out how to do this. I can't use proj_errno, since I don't have a
> object to retrieve from. And if I try to retrieve from the context
> using proj_context_errno, I just get a -61 "generic error of unknown
> origin" message.
>
> Any suggestions?
>
> Nyall
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190530/11dc8427/attachment.html>

From nyall.dawson at gmail.com  Thu May 30 21:05:38 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 31 May 2019 14:05:38 +1000
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <2504239.03DJOSp5H5@even-i700>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <2647733.h637UnaKup@even-i700>
 <CAB28AsiQxHQEkPViyWk+8idcmaRxdCaWkubko9sNzpAjgpF=Lg@mail.gmail.com>
 <2504239.03DJOSp5H5@even-i700>
Message-ID: <CAB28AsjwNExWDu989ZsbvkbE_dtcLfj1A+MnBpZC2vMZwBuHAA@mail.gmail.com>

On Tue, 28 May 2019 at 03:23, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > If I have a proj string representing a coordinate operation, is there
> > any way to determine what grids are required for using it when those
> > grids are NOT available for use on the system?
>
> I don't think so. As you find out, PROJ will refuse to instanciate a
> coordinate operation from a PROJ string that has a grids not present on the
> system.
>
> Asthere are not so many ways of expressing grids in PROJ grids, basically you
> could look for +grids=xxxxx

That's what I was originally thinking could be a fallback option. But
then, I can't see any way to get the detailed metadata relating to a
grid except for proj_coordoperation_get_grid_used. So even if I
captured the grid name from the proj string, I still can't determine
the url and package name, etc relating to that grid. (or can I?)

What I'm aiming to do is take a proj coordinate operation string
stored in a project file, and show a nice warning to users if it can't
be used locally, along with the links to download the missing grid
files.

Nyall

From even.rouault at spatialys.com  Fri May 31 02:06:39 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 31 May 2019 11:06:39 +0200
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <CAB28AsjwNExWDu989ZsbvkbE_dtcLfj1A+MnBpZC2vMZwBuHAA@mail.gmail.com>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <2504239.03DJOSp5H5@even-i700>
 <CAB28AsjwNExWDu989ZsbvkbE_dtcLfj1A+MnBpZC2vMZwBuHAA@mail.gmail.com>
Message-ID: <2015820.M6qpn9m4ML@even-i700>

On vendredi 31 mai 2019 14:05:38 CEST Nyall Dawson wrote:
> On Tue, 28 May 2019 at 03:23, Even Rouault <even.rouault at spatialys.com> 
wrote:
> > > If I have a proj string representing a coordinate operation, is there
> > > any way to determine what grids are required for using it when those
> > > grids are NOT available for use on the system?
> > 
> > I don't think so. As you find out, PROJ will refuse to instanciate a
> > coordinate operation from a PROJ string that has a grids not present on
> > the
> > system.
> > 
> > Asthere are not so many ways of expressing grids in PROJ grids, basically
> > you could look for +grids=xxxxx
> 
> That's what I was originally thinking could be a fallback option. But
> then, I can't see any way to get the detailed metadata relating to a
> grid except for proj_coordoperation_get_grid_used. So even if I
> captured the grid name from the proj string, I still can't determine
> the url and package name, etc relating to that grid. (or can I?)

In the C++ API, you have DatabaseContext::lookForGridInfo() that would cover 
this. Would need to be exposed in the C API.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Fri May 31 03:50:43 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 31 May 2019 20:50:43 +1000
Subject: [PROJ] Obtaining possible transformation pipelines
In-Reply-To: <2015820.M6qpn9m4ML@even-i700>
References: <CAB28AsjH-BqUDSfQzDTpL=mV+VwY129Jo40i_gLp+gd_1X7Ptw@mail.gmail.com>
 <2504239.03DJOSp5H5@even-i700>
 <CAB28AsjwNExWDu989ZsbvkbE_dtcLfj1A+MnBpZC2vMZwBuHAA@mail.gmail.com>
 <2015820.M6qpn9m4ML@even-i700>
Message-ID: <CAB28Asg6XT8erQ7f_OvcJq1OtR3LbBK5TBQotYH0XPYtYGTO2A@mail.gmail.com>

On Fri, 31 May 2019 at 19:06, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On vendredi 31 mai 2019 14:05:38 CEST Nyall Dawson wrote:
> > On Tue, 28 May 2019 at 03:23, Even Rouault <even.rouault at spatialys.com>
> wrote:
> > > > If I have a proj string representing a coordinate operation, is there
> > > > any way to determine what grids are required for using it when those
> > > > grids are NOT available for use on the system?
> > >
> > > I don't think so. As you find out, PROJ will refuse to instanciate a
> > > coordinate operation from a PROJ string that has a grids not present on
> > > the
> > > system.
> > >
> > > Asthere are not so many ways of expressing grids in PROJ grids, basically
> > > you could look for +grids=xxxxx
> >
> > That's what I was originally thinking could be a fallback option. But
> > then, I can't see any way to get the detailed metadata relating to a
> > grid except for proj_coordoperation_get_grid_used. So even if I
> > captured the grid name from the proj string, I still can't determine
> > the url and package name, etc relating to that grid. (or can I?)
>
> In the C++ API, you have DatabaseContext::lookForGridInfo() that would cover
> this. Would need to be exposed in the C API.

Thanks, PR at https://github.com/OSGeo/proj.4/pull/1494

Nyall

From howard at hobu.co  Fri May 31 14:03:18 2019
From: howard at hobu.co (Howard Butler)
Date: Fri, 31 May 2019 16:03:18 -0500
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <CAH0YoEPwMhHJjjOYLQM7nj6Q-ZmG-fQA6o5ZRAQFZtScnA9XsA@mail.gmail.com>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
 <CAH0YoEPwMhHJjjOYLQM7nj6Q-ZmG-fQA6o5ZRAQFZtScnA9XsA@mail.gmail.com>
Message-ID: <0AC6E15C-4518-4E01-992D-53346E8BB6B4@hobu.co>

All,

I have made the described migration changes, and DNS is currently in the process of sifting. 

http://proj.org/ <http://proj.org/> should work until the SSL certs from GitHub are all issued.

I will check back in 6 hours. 

Howard

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190531/2e48d3a4/attachment.html>

From alansnow21 at gmail.com  Fri May 31 14:19:06 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Fri, 31 May 2019 16:19:06 -0500
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <0AC6E15C-4518-4E01-992D-53346E8BB6B4@hobu.co>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
 <CAH0YoEPwMhHJjjOYLQM7nj6Q-ZmG-fQA6o5ZRAQFZtScnA9XsA@mail.gmail.com>
 <0AC6E15C-4518-4E01-992D-53346E8BB6B4@hobu.co>
Message-ID: <CAGybdFQLtjtiUHzNaAvcsrqysUQjaDrHFJKRd-mywttA2tUUiA@mail.gmail.com>

This is great. What is the plan for the timing of renaming the github repo
to PROJ?

On Fri, May 31, 2019 at 4:03 PM Howard Butler <howard at hobu.co> wrote:

> All,
>
> I have made the described migration changes, and DNS is currently in the
> process of sifting.
>
> http://proj.org/ should work until the SSL certs from GitHub are all
> issued.
>
> I will check back in 6 hours.
>
> Howard
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Alan Snow
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190531/d29a0813/attachment.html>

From mwtoews at gmail.com  Fri May 31 21:00:57 2019
From: mwtoews at gmail.com (Mike Taves)
Date: Sat, 1 Jun 2019 16:00:57 +1200
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <CAGybdFQLtjtiUHzNaAvcsrqysUQjaDrHFJKRd-mywttA2tUUiA@mail.gmail.com>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
 <CAH0YoEPwMhHJjjOYLQM7nj6Q-ZmG-fQA6o5ZRAQFZtScnA9XsA@mail.gmail.com>
 <0AC6E15C-4518-4E01-992D-53346E8BB6B4@hobu.co>
 <CAGybdFQLtjtiUHzNaAvcsrqysUQjaDrHFJKRd-mywttA2tUUiA@mail.gmail.com>
Message-ID: <CAM2FmMpYJQC5o1E9ce1dRy6bSamR+VpVifZP7_zQGyDR6U2NYQ@mail.gmail.com>

On Sat, 1 Jun 2019 at 09:19, Alan Snow <alansnow21 at gmail.com> wrote:
>
> This is great. What is the plan for the timing of renaming the github repo to PROJ?

I think GitHub repos can be renamed without too much disruption to forks.

Similar question: will the project name remain as PROJ.4, or rename to
PROJ to align with the current website and software name?

