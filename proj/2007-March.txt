From ovv at hetnet.nl  Thu Mar  1 00:10:36 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 01 Mar 2007 09:10:36 +0100
Subject: [Proj] Dubai Palm Island Projection
In-Reply-To: <434b51c30702270612t1bb1524od3d7fffeb5e32c4b@mail.gmail.com>
Message-ID: <C20C490C.AECB%ovv@hetnet.nl>

> From: "Andreas Rappensperger" <andreas.rappensperger at googlemail.com>
> Date: Tue, 27 Feb 2007 15:12:05 +0100
> Subject: [Proj] Dubai Palm Island Projection

> I have the following problem. I would like to rotate the Dubai Palm Island so
> that the palm stand vertical. The rotation point should be the middle point
> of the Palm. In Dubai usually the DLTM projection is used.
...
> Now I tried to define my own coordinate system with the following parameter:
> # DP Dubai Palm (DLTM rotated by -49 degree)
> proj=omerc lat_0=25.095311 lonc=55.137296 alpha=-49.0000000
> k=1.000000 x_0=500000.000 y_0=0.000 ellps=WGS84 units=m
> But it does not work. I have created a test. I have taken two points
> Bottom of the Palm: 55.154200° 25.102206°
> Top of the Palm: 55.122691° 25.126338°
...

Try the no_rot option, then you'll stay in u,v coordinates, which are with
respect to the central line.
With your data I got an angle of -0.93 deg (atan2 of top minus bottom u,v
coordinates). That's nice because the geodesic azimuth angle between
top->bottom is not -49 deg but actually -49.923 deg.




From Kristian.Thy at atkinsglobal.com  Thu Mar  1 04:43:40 2007
From: Kristian.Thy at atkinsglobal.com (Thy, Kristian)
Date: Thu, 1 Mar 2007 13:43:40 +0100
Subject: [Proj] how to compare 2 proj4 definitions? or: how to
	normalizeproj4 definition?
In-Reply-To: <45E5FF46.8040909@pobox.com>
Message-ID: <CE2BE61DABB9384A934BD4E648DFDA37C755B4@EXCVS1.rdg.bane.dk>

From: Frank Warmerdam
> I believe Sergey is looking for a way of comparing PROJ.4 projection
> definitions to see if they are equivelent.  By normalization he means
> putting the coordinate system definition into a "normalized form" such
> that two equivelent coordinate system definitions will have the same
> string representation.  I'm not sure if this is a proper use 
> of the word normalize, but it was at least clear to me.

I think "canonical representation" is the term we're looking for.

Kristian  


This email and any attached files are confidential and copyright protected. If you are not the addressee, any dissemination of this communication is strictly prohibited. Unless otherwise expressly agreed in writing, nothing stated in this communication shall be legally binding.

The ultimate parent company of the Atkins Group is WS Atkins plc.  Registered in England No. 1885586.  Registered Office Woodcote Grove, Ashley Road, Epsom, Surrey KT18 5BW.

Consider the environment. Please don't print this e-mail unless you really need to. 



From sena at hurd.homeunix.org  Thu Mar  1 04:36:05 2007
From: sena at hurd.homeunix.org (Sergey Spiridonov)
Date: Thu, 01 Mar 2007 13:36:05 +0100
Subject: [Proj] Re: how to compare 2 proj4 definitions? or: how to
 normalizeproj4 definition?
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>
References: <onmgb4-jcn.ln1@legba.gamic.com>
	<4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>
Message-ID: <mutib4-tb9.ln1@legba.gamic.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, Ed

Ed McNierney wrote:
> I made a mild effort at this task a few years ago and gave up.  I had

May be you still have some sources which I can use to start from? Even
if it is not perfect, it will be easier for me and can save some resources.

> The chief difficulty is in determining whether two very similar
> parameter values are supposed to be identical.  Is 0.9997 the same as
> 0.999721, just rounded, or is it supposed to be a different number?

May be there it makes sense to have possibility to specify the level of
exactness of comparision for every group of parameters?

Like user-configurable "epsilon" 0.001 degree for lat/lon, 0.01 meter
for x_0/y_0 with some good default values?

Any other ideas?

PS Sorry if my English cause misundersanding...
- --
Best regards, Sergey Spiridonov
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF5si0J3NEeIx4r3YRAqj2AJ9O6UzFCvHqYUVKNnr2xbIUTQjsFwCePql0
9lT+zTKVMJdDbqkdOSj8aVc=
=8bMq
-----END PGP SIGNATURE-----



From sena at hurd.homeunix.org  Thu Mar  1 04:52:09 2007
From: sena at hurd.homeunix.org (Sergey Spiridonov)
Date: Thu, 01 Mar 2007 13:52:09 +0100
Subject: [Proj] Re: another approach
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>
References: <onmgb4-jcn.ln1@legba.gamic.com>
	<4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>
Message-ID: <qsuib4-bc9.ln1@legba.gamic.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

Another approach I can think of is having set of key points (let's say
5-20) on the Earth (lat,lon), which will be projected in both
projections which are compared. Than the resulting map coordinates can
be compared. If projections are the same, map coordinates of the
projected points will be also the same. If projections differ, thanwell,
map coordinates should be also different? (if set is good enough?)

What do you think about this?
- --
Best regards, Sergey Spiridonov
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF5sx5J3NEeIx4r3YRAkdAAJ4wgCt3dupGGLpmggwfNjxXcIT2UACfXM1F
noX6tHdY3DZtKt5A19FPtCw=
=OJnt
-----END PGP SIGNATURE-----



From ed at topozone.com  Thu Mar  1 06:26:55 2007
From: ed at topozone.com (Ed McNierney)
Date: Thu, 1 Mar 2007 09:26:55 -0500
Subject: [Proj] Re: how to compare 2 proj4 definitions? or: how to
	normalizeproj4 definition?
In-Reply-To: <mutib4-tb9.ln1@legba.gamic.com>
References: <onmgb4-jcn.ln1@legba.gamic.com><4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>
	<mutib4-tb9.ln1@legba.gamic.com>
Message-ID: <4BF377919225F449BB097CB76FFE9BC801987ECE@ptolemy.topozone.com>

Sergey -

I never generated any code - I simply worked on trying to define the
problem.  The problem with a user-configurable "epsilon" value is
whether that is what the creator of the definition intended.  We can
provide tools for the user to adjust, but it's hard for the user to
determine whether they did the right thing or simply succeeded in
forcing two DIFFERENT definitions together.  But having some kind of
tolerance value will certainly be needed if you want to consider 3.28
and 3.281 as both being the "same" multiplier when converting meters to
feet.

If possible, I think using the EPSG database is helpful.  If you can
determine that a given PROJ definition is congruent to some EPSG code,
and that another PROJ definition is also congruent to that EPSG code,
then you can conclude that they should be treated as the same
definition.

	- Ed

Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
Phone: +1 (978) 251-4242
Fax: +1 (978) 251-1396
ed at topozone.com 

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Sergey Spiridonov
Sent: Thursday, March 01, 2007 7:36 AM
To: proj at lists.maptools.org
Subject: [Proj] Re: how to compare 2 proj4 definitions? or: how to
normalizeproj4 definition?

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, Ed

Ed McNierney wrote:
> I made a mild effort at this task a few years ago and gave up.  I had

May be you still have some sources which I can use to start from? Even
if it is not perfect, it will be easier for me and can save some
resources.

> The chief difficulty is in determining whether two very similar 
> parameter values are supposed to be identical.  Is 0.9997 the same as 
> 0.999721, just rounded, or is it supposed to be a different number?

May be there it makes sense to have possibility to specify the level of
exactness of comparision for every group of parameters?

Like user-configurable "epsilon" 0.001 degree for lat/lon, 0.01 meter
for x_0/y_0 with some good default values?

Any other ideas?

PS Sorry if my English cause misundersanding...
- --
Best regards, Sergey Spiridonov
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF5si0J3NEeIx4r3YRAqj2AJ9O6UzFCvHqYUVKNnr2xbIUTQjsFwCePql0
9lT+zTKVMJdDbqkdOSj8aVc=
=8bMq
-----END PGP SIGNATURE-----

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From warmerdam at pobox.com  Thu Mar  1 06:50:30 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 01 Mar 2007 09:50:30 -0500
Subject: [Proj] Re: another approach
In-Reply-To: <qsuib4-bc9.ln1@legba.gamic.com>
References: <onmgb4-jcn.ln1@legba.gamic.com>
	<4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>
	<qsuib4-bc9.ln1@legba.gamic.com>
Message-ID: <45E6E836.30205@pobox.com>

Sergey Spiridonov wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi,
> 
> Another approach I can think of is having set of key points (let's say
> 5-20) on the Earth (lat,lon), which will be projected in both
> projections which are compared. Than the resulting map coordinates can
> be compared. If projections are the same, map coordinates of the
> projected points will be also the same. If projections differ, thanwell,
> map coordinates should be also different? (if set is good enough?)
> 
> What do you think about this?

Sergey,

As long as you can ensure that the sample points are in the domain of validity
of the coordinate system, and that they are representative (ie. well dispersed)
then this would be good.  But even knowing the domain of a coordinate system
is hard to do systematically (ie. without apriori knowledge about the
coordinate system).  This is especially true when using coordinate systems
with datum shift files that only apply to particular regions.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From richard.greenwood at gmail.com  Thu Mar  1 19:24:01 2007
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Thu, 1 Mar 2007 20:24:01 -0700
Subject: [Proj] Re: how to compare 2 proj4 definitions? or: how to
	normalizeproj4 definition?
In-Reply-To: <4BF377919225F449BB097CB76FFE9BC801987ECE@ptolemy.topozone.com>
References: <onmgb4-jcn.ln1@legba.gamic.com>
	<4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>
	<mutib4-tb9.ln1@legba.gamic.com>
	<4BF377919225F449BB097CB76FFE9BC801987ECE@ptolemy.topozone.com>
Message-ID: <ae9185aa0703011924p5d130a3aof4c4354152d5523f@mail.gmail.com>

On 3/1/07, Ed McNierney <ed at topozone.com> wrote:
> Sergey -
>
> I never generated any code - I simply worked on trying to define the
> problem.  The problem with a user-configurable "epsilon" value is
> whether that is what the creator of the definition intended.  We can
> provide tools for the user to adjust, but it's hard for the user to
> determine whether they did the right thing or simply succeeded in
> forcing two DIFFERENT definitions together.  But having some kind of
> tolerance value will certainly be needed if you want to consider 3.28
> and 3.281 as both being the "same" multiplier when converting meters to
> feet.

Seems like what would be better would be to compare the results of a
transformation using the two different sets of parameters that you are
comparing. For example, if you wanted to determine if two definitions
were identical (or similar enough) you would transform the same point
coordinates to longlat wgs84 using the two definitions, and then
compare the results to determine if they were close enough to meet
your needs. Obviously you would need to pick a test point that was
within the realm of the defined coordinate system, and ideally you
would pick  several points.

What's close enough varies wildly between different users needs.

Rich

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From proj at cwilson.fastmail.fm  Fri Mar  2 14:03:45 2007
From: proj at cwilson.fastmail.fm (Charles Wilson)
Date: Fri, 02 Mar 2007 17:03:45 -0500
Subject: [Proj] Various fixes and improvements for mingw/cygwin builds
Message-ID: <45E89F41.3030800@cwilson.fastmail.fm>

[sorry if this post shows up multiple times; I'm having some trouble 
with my mailer...]

INTRODUCTION
===========================================================

This sequence of modifications and patches:
   (1) eliminates the requirement that proj clients
       use --enable-runtime-pseudo-relocs on cygwin/mingw
   (2) uses and extends Sergey Spiridonov's patch to
       add the geod functions to the library
       (a) extends: adds the geod functions to proj_api.h
           in a "clean" way, and eliminates the private
           header geodesic.h
   (3) enables the tests to run successfully when building
       proj outside the source tree.
   (4) Additional changes to support cygwin/mingw

The modified proj distribution has been tested successfully
on Cygwin, MinGW, and Linux.  In each case, test27, test83,
and testvarious pass (didn't have ntv2.gsb for the other
test).

An expanded version of this message and the actual patch have been 
entered as bugzilla #1496:
http://bugzilla.remotesensing.org/show_bug.cgi?id=1496

depends on Sergey Spiridonov's #1378:
http://bugzilla.remotesensing.org/show_bug.cgi?id=1378

LIMITATIONS
===========================================================

(1) I have not updated the Makefile.vc framework
(2) I have not tested or built the jni interfaces, nor
     the com/ or wince/ contributed stuff in CVS.
(3) I did not bump the version number of the library from its current
     value of 5:2:5. According to 
http://www.gnu.org/software/libtool/manual.html#Updating-version-info
     that should only be done immediately before a public
     release (e.g. 4.5.1).  The changes here (actually,
     it's Sergey Spiridonov's patch that did it) only
     add new entry points to the library, so assuming no
     further changes the next version number should be
     6:0:6.

[ snipped a bunch of stuff, including various "non-patch" changes, like 
file renames, moves, and removals.  See the attachment to the bugzilla 
entry ]

I hope that this patch (and Mr. Spiridonov's) can be considered for 
application or further discussion.

-- 
Charles Wilson
proj maintainer for the cygwin platform



CHANGELOG
===========================================================
Describes only the changes in the main patch, but does not
describe the changes induced by the instructions above,
such as file renames or autoreconf effects.


2007-02-18  Charles Wilson  <...>

     * Makefile.am: add new subdirectory apps, and
     m4 directory for aclocal.
     * apps/Makefile.am: new file
     * apps/cs2cs.c: include proj_config.h
     * apps/emess.c: include proj_config.h
     * apps/geod.c: include proj_config.h. Do not
     include geodesic.h.
     * apps/nad2bin.c: include proj_config.h. Change
     signature of main().
     * apps/nad2nad.c: include proj_config.h. Change
     signature of main().
     * apps/proj.c: include proj_config.h. Use Win32
     file open modes on cygwin. Flush output when
     appropriate.
     * configure.ac: declare build-aux directory. Do
     variable substitution on test scripts. Add apps/Makefile
     to output list. Add other support for building on
     cygwin/mingw.
     * nad/Makefile.am: Add support for building outside of
     source tree. Adapt to the utility programs' new
     location.
     * nad/test27.in: Add support for building outside of
     source tree. Add workaround for MinGW/MSys oddities.
     * nad/test83.in: ditto
     * nad/testntv2.in: Add support for building outside of
     source tree. Add explanatory note for usage.
     * nad/testvarious.in: ditto
     * src/Makefile.am: remove applications. Add support for
     cygwin/mingw (including custom exports file). Remove
     geodesic.h.
     * src/geod_for.c: do not include geodesic.h. Use projGeodesic
     typedef from proj_api.h instead of directly using GEODESIC_T*.
     * src/geod_inv.c: ditto
     * src/geod_set.c: ditto.  Also, remove all references to
     emess() in favor of setting pj_errno.
     * src/pj_gridinfo.c: use same format for both parent and id.
     * src/pj_init.c: Add ugly hack to work around strange
     MSys/MinGW behavior. See detailed notes within file.
     * src/pj_open_lib.c: Add more sophisticated support for Win32-
     style pathnames.
     * src/pj_strerrno.c: include proj_config.h. Add new error
     codes from geod_set.c.
     * src/proj.def: add previously missing symbols nad_init, nad_cvt,
     pj_release.  Add new symbols arising from inclusion of geod
     functions within library.
     * src/proj_api.h: Add typedef for projGeodesic/GEODESIC_T*,
     following pattern of projPJ/PJ*. Add declarations for geod
     functions.
     * src/proj_config.h.in: autoheader updates.
     * src/projects.h: moved definition of GEODESIC_T from geodesic.h
     (and eliminated geodesic.h).


From andreas.rappensperger at googlemail.com  Mon Mar  5 06:03:55 2007
From: andreas.rappensperger at googlemail.com (Andreas Rappensperger)
Date: Mon, 5 Mar 2007 15:03:55 +0100
Subject: [Proj] Dubai Palm Island Projection
In-Reply-To: <C20C490C.AECB%ovv@hetnet.nl>
References: <434b51c30702270612t1bb1524od3d7fffeb5e32c4b@mail.gmail.com>
	<C20C490C.AECB%ovv@hetnet.nl>
Message-ID: <434b51c30703050603r1a713df1qb886178360844def@mail.gmail.com>

2007/3/1, Oscar van Vlijmen <ovv at hetnet.nl>:
>
> > From: "Andreas Rappensperger" <andreas.rappensperger at googlemail.com>
> > Date: Tue, 27 Feb 2007 15:12:05 +0100
> > Subject: [Proj] Dubai Palm Island Projection
>
> > I have the following problem. I would like to rotate the Dubai Palm
> Island so
> > that the palm stand vertical. The rotation point should be the middle
> point
> > of the Palm. In Dubai usually the DLTM projection is used.
> ...
> > Now I tried to define my own coordinate system with the following
> parameter:
> > # DP Dubai Palm (DLTM rotated by -49 degree)
> > proj=omerc lat_0=25.095311 lonc=55.137296 alpha=-49.0000000
> > k=1.000000 x_0=500000.000 y_0=0.000 ellps=WGS84 units=m
> > But it does not work. I have created a test. I have taken two points
> > Bottom of the Palm: 55.154200° 25.102206°
> > Top of the Palm: 55.122691° 25.126338°
> ...
>
> Try the no_rot option, then you'll stay in u,v coordinates, which are with
> respect to the central line.
> With your data I got an angle of -0.93 deg (atan2 of top minus bottom u,v
> coordinates). That's nice because the geodesic azimuth angle between
> top->bottom is not -49 deg but actually -49.923 deg.



Thanks a lot Oscar. The "no_rot" parameter was very helpful for me.
I am using these parameters for me Dubai Palm projection now:

   - ·               proj=omerc
   - ·               lat_0=25.095311
   - ·               lonc=55.137296
   - ·               alpha=-49.5
   - ·               k=1.000000
   - ·               x_0=100000.000
   - ·               y_0=100000.000
   - ·               ellps=WGS84
   - ·               units=m
   - ·               no_rot

But now I am facing with another problem.
I have got a satellite image projected in DLTM with this tfw file
parameters.

   - 1.00000000000000
   - 0.00000000000000
   - 0.00000000000000
   - -1.00000000000000
   - 474701.80520413298000
   - 2782373.47255233210000

Now I have transformed the upper left corner to WGS84 and then to my Dubai
Palm Jumeirah (DPJ) coordinate system.

   - DLTM: 474701.805  2782373.472
   - WGS84: 55.082433 25.147108
   - DPJ: 107933.554 100771.284

Then I have rotated the image though the middle point by 49.5° with GIMP and
created a new tfw file with the upper left corner in DPJ system. With these
two file I have created a web mapping sever with the rotated image.

The Problem is now when I take any point of the rotated image and transform
it back to WGS84 then it is completely wrong. I have transformed the bottom,
top, left and right point of the palm and it seams that the coordinates in
the still rotated in WGS84.

Do you have an idea what I did wrong?

Should I use the towgs84 parameter?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070305/db15b5ad/attachment.html>

From ovv at hetnet.nl  Mon Mar  5 11:15:50 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Mon, 05 Mar 2007 20:15:50 +0100
Subject: [Proj] Dubai Palm Island Projection
In-Reply-To: <434b51c30703050603r1a713df1qb886178360844def@mail.gmail.com>
Message-ID: <C2122AF5.B052%ovv@hetnet.nl>

> From: "Andreas Rappensperger"
> Date: Mon, 5 Mar 2007 15:03:55 +0100
> Subject: Re: [Proj] Dubai Palm Island Projection

> But now I am facing with another problem.
....
> The Problem is now when I take any point of the rotated image and transform
> it back to WGS84 then it is completely wrong. I have transformed the bottom,
> top, left and right point of the palm and it seams that the coordinates in the
> still rotated in WGS84.

I have no idea what could be wrong. PROJ is symmetrical in its forward -
inverse omerc operations, even if you use no_rot in both cases.

> Should I use the towgs84 parameter?
No, this is for datum transformation, say from ellipsoid 1 to ellipsoid 2.
 



From uwe.schmitz at lverma.nrw.de  Wed Mar  7 03:46:55 2007
From: uwe.schmitz at lverma.nrw.de (Uwe Schmitz)
Date: Wed, 7 Mar 2007 11:46:55 +0000 (UTC)
Subject: [Proj] Gridshifts give slightly wrong results
Message-ID: <loom.20070307T124344-785@post.gmane.org>

Hello,

I've upgraded from proj-4.4.7 to 4.5.0 and
notice a slight difference of my transformation
results when grid shifts are involved. 

Executing the command:
cs2cs -f "%.12f" \
      +proj=latlong +ellps=bessel +nadgrids=./BETA2007.gsb \
   +to \
      +proj=latlong +ellps=GRS80
7.483333333333E 53.500000000000N

results in 
7.482506019176  53.498461143331 0.000000000000   # 4.4.7 correct!
7.482506019176  53.498461144236 0.000067942776   # 4.5.0

Through debugging I found out, that now (V4.5.0) there
is an additional step converting the geodetic coordinates
to geocentric an back again. This is caused by the different
ellipsoids.

IMO, this is a bug, because the datum shift is completely
done by adding the shift values.

Regards
Uwe




From paul-grass at stjohnspoint.co.uk  Wed Mar  7 04:19:45 2007
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Wed, 7 Mar 2007 12:19:45 +0000 (GMT)
Subject: [Proj] Gridshifts give slightly wrong results
In-Reply-To: <loom.20070307T124344-785@post.gmane.org>
References: <loom.20070307T124344-785@post.gmane.org>
Message-ID: <Pine.LNX.4.62.0703071216170.27437@agrippa.ukshells.co.uk>

Hello Uwe

On Wed, 7 Mar 2007, Uwe Schmitz wrote:

> Hello,
>
> I've upgraded from proj-4.4.7 to 4.5.0 and
> notice a slight difference of my transformation
> results when grid shifts are involved.
>
> Executing the command:
> cs2cs -f "%.12f" \
>      +proj=latlong +ellps=bessel +nadgrids=./BETA2007.gsb \
>   +to \
>      +proj=latlong +ellps=GRS80
> 7.483333333333E 53.500000000000N
>
> results in
> 7.482506019176  53.498461143331 0.000000000000   # 4.4.7 correct!
> 7.482506019176  53.498461144236 0.000067942776   # 4.5.0
>
> Through debugging I found out, that now (V4.5.0) there
> is an additional step converting the geodetic coordinates
> to geocentric an back again. This is caused by the different
> ellipsoids.

What happens if you add +towgs84=0,0,0 to the second projection 
definition? That might stop it trying to do an ellipsoid conversion. Have 
to admit though that I am quite hazy on how this works in PROJ.

> IMO, this is a bug, because the datum shift is completely
> done by adding the shift values.

Is this relevant? http://bugzilla.remotesensing.org/show_bug.cgi?id=368
Particularly Frank's comments right at the end?

Paul



From maurerj at nsidc.org  Thu Mar  8 14:41:26 2007
From: maurerj at nsidc.org (John Maurer)
Date: Thu, 08 Mar 2007 15:41:26 -0700
Subject: [Proj] PROJ.4 and latest EPSG (v 6.12)?
Message-ID: <45F09116.1080107@nsidc.org>

Dear PROJ.4,
The latest EPSG Geodetic Parameter Dataset was released as version 6.12 
on February 8, 2007: http://www.epsg.org/Geodetic.html. There are 
several new polar projections that I would like to support in my "Atlas 
of the Cryosphere" MapServer application (http://nsidc.org/data/atlas) 
but need the updated EPSG file for PROJ.4 and MapServer to find them. 
Examples of some of these new EPSG codes include 19865 to 19869. It 
appears that the latest version of PROJ.4 (4.5.0) does not contain these 
new EPSG codes, and I was wondering when these might get incorporated or 
how I might add their PROJ.4 definitions to our epsg file? Thanks for 
your help!
Best Regards,
John Maurer

-- 
John Maurer
Web/Database Applications Engineer
National Snow and Ice Data Center (NSIDC)
University of Colorado at Boulder
http://cires.colorado.edu/~maurerj
+1-303-735-5316




From warmerdam at pobox.com  Thu Mar  8 18:44:59 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 08 Mar 2007 21:44:59 -0500
Subject: [Proj] PROJ.4 and latest EPSG (v 6.12)?
In-Reply-To: <45F09116.1080107@nsidc.org>
References: <45F09116.1080107@nsidc.org>
Message-ID: <45F0CA2B.6040609@pobox.com>

John Maurer wrote:
> Dear PROJ.4,
> The latest EPSG Geodetic Parameter Dataset was released as version 6.12 
> on February 8, 2007: http://www.epsg.org/Geodetic.html. There are 
> several new polar projections that I would like to support in my "Atlas 
> of the Cryosphere" MapServer application (http://nsidc.org/data/atlas) 
> but need the updated EPSG file for PROJ.4 and MapServer to find them. 
> Examples of some of these new EPSG codes include 19865 to 19869. It 
> appears that the latest version of PROJ.4 (4.5.0) does not contain these 
> new EPSG codes, and I was wondering when these might get incorporated or 
> how I might add their PROJ.4 definitions to our epsg file? Thanks for 
> your help!

John,

I'm afraid there is no dependable pattern to when I'll get around to
upgrading PROJ/libgeotiff/GDAL/PostGIS to a new EPSG release.  You can
manually add them to your local epsg init file in the meantime.

I would hope to have issue a new release with up to date EPSG files
within 3 months, but no guarantees.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From sena at hurd.homeunix.org  Fri Mar  9 01:37:42 2007
From: sena at hurd.homeunix.org (Sergey Spiridonov)
Date: Fri, 09 Mar 2007 10:37:42 +0100
Subject: [Proj] Re: how to compare 2 proj4 definitions? or: how to normalize
 proj4 definition?
In-Reply-To: <onmgb4-jcn.ln1@legba.gamic.com>
References: <onmgb4-jcn.ln1@legba.gamic.com>
Message-ID: <7gm7c4-uaq.ln1@legba.gamic.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I found workaround for my application so I will not work on this problem
soon.

For somebody who would like to implement it, I will recommend the
following way:

Compare +proj=<def> option and, if they are equal, project several
points (each projection type can have its own subset) and compare
results using predefined (but user-configurable) exactness.

In case there will be need to improve comparision speed, projection
signature can be created. Projection signature should include projection
type and projected coordinates (already rounded to the certain exactness).
- --
Best regards, Sergey Spiridonov
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF8SrmJ3NEeIx4r3YRAn/ZAJwN7Jgv56O+t5QIXaNapFtcfcrz8gCZAaNR
SrbF2rNr3BDphLNxDMOOvWk=
=eZaX
-----END PGP SIGNATURE-----



From ovv at hetnet.nl  Fri Mar  9 05:02:25 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Fri, 09 Mar 2007 14:02:25 +0100
Subject: [Proj] PROJ.4 and latest EPSG (v 6.12)?
In-Reply-To: <45F0CA2B.6040609@pobox.com>
Message-ID: <C2171971.B14C%ovv@hetnet.nl>

> From: Frank Warmerdam
> Date: Thu, 08 Mar 2007 21:44:59 -0500
> Subject: Re: [Proj] PROJ.4 and latest EPSG (v 6.12)?
> 
> John Maurer wrote:
>> Dear PROJ.4,
>> The latest EPSG Geodetic Parameter Dataset was released as version 6.12
>> on February 8, 2007: http://www.epsg.org/Geodetic.html. There are
>> several new polar projections that I would like to support in my "Atlas
>> of the Cryosphere" MapServer application (http://nsidc.org/data/atlas)
>> but need the updated EPSG file for PROJ.4 and MapServer to find them.
>> Examples of some of these new EPSG codes include 19865 to 19869. It
>> appears that the latest version of PROJ.4 (4.5.0) does not contain these
>> new EPSG codes, and I was wondering when these might get incorporated or
>> how I might add their PROJ.4 definitions to our epsg file? Thanks for
>> your help!
> 
> John,
> 
> I'm afraid there is no dependable pattern to when I'll get around to
> upgrading PROJ/libgeotiff/GDAL/PostGIS to a new EPSG release.  You can
> manually add them to your local epsg init file in the meantime.
> 
> I would hope to have issue a new release with up to date EPSG files
> within 3 months, but no guarantees.

This is not gonna be easy.
The projections in question are:
* 9829  Polar Stereographic (variant B)
* 9821  Lambert Azimuthal Equal Area (Spherical)
* 9834  Lambert Cylindrical Equal Area (Spherical)

Polar Stereographic Variant B is currently supported by the EPSG conversion
scripts mr. Warmerdam uses.

The other two projections are perhaps somewhat problematic.
The EPSG coordoperationmethod codes 9821, 9834 mentioned above are supported
by PROJ, but the EPSG coord_op_code numbers 19867...9 mr. Maurer refers to
are modified projections for the EASE-Grid. If you don't need grid row &
column numbers, then probably the parameter values mentioned in the EPSG
database can be used.
See:
<http://www.ncgia.ucsb.edu/globalgrids-book/ease_grid/>





From landa.martin at gmail.com  Mon Mar 12 06:08:58 2007
From: landa.martin at gmail.com (Martin Landa)
Date: Mon, 12 Mar 2007 14:08:58 +0100
Subject: [Proj] pj_utils.c -- code duplication
Message-ID: <f8fe65c40703120608qd181502x1533a622879bb4a@mail.gmail.com>

Hi,

I don't know PROJ.4 library so well but it seems to me there is code
duplication in pj_utils.c, see the attached patch.

Best regards, Martin

-- 
Martin Landa <landa.martin at gmail.com> * http://gama.fsv.cvut.cz/~landa *
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pj-utils.diff
Type: application/octet-stream
Size: 782 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070312/0bfc4f8a/attachment.obj>

From uwe.schmitz at lverma.nrw.de  Tue Mar 13 05:19:18 2007
From: uwe.schmitz at lverma.nrw.de (Uwe Schmitz)
Date: Tue, 13 Mar 2007 12:19:18 +0000 (UTC)
Subject: [Proj] Re: Gridshifts give slightly wrong results
References: <loom.20070307T124344-785@post.gmane.org>
	<Pine.LNX.4.62.0703071216170.27437@agrippa.ukshells.co.uk>
Message-ID: <loom.20070313T131141-625@post.gmane.org>

> 

<comment>
   I've send the following response to Paul and the list
   but it doen't show up here, because I'm not a valid
   member of the list, I think.
   Now I post it through gmane, so it doesn't get lost...
</comment>

Paul,

> 
> > Hello,
> >
> > I've upgraded from proj-4.4.7 to 4.5.0 and
> > notice a slight difference of my transformation
> > results when grid shifts are involved.
> >
> > Executing the command:
> > cs2cs -f "%.12f" \
> >      +proj=latlong +ellps=bessel +nadgrids=./BETA2007.gsb \
> >   +to \
> >      +proj=latlong +ellps=GRS80
> > 7.483333333333E 53.500000000000N
> >
> > results in
> > 7.482506019176  53.498461143331 0.000000000000   # 4.4.7 correct!
> > 7.482506019176  53.498461144236 0.000067942776   # 4.5.0
> >
> > Through debugging I found out, that now (V4.5.0) there
> > is an additional step converting the geodetic coordinates
> > to geocentric an back again. This is caused by the different
> > ellipsoids.
> 
> What happens if you add +towgs84=0,0,0 to the second projection 
> definition? That might stop it trying to do an ellipsoid 
> conversion. Have 
> to admit though that I am quite hazy on how this works in PROJ.
> 
thank you for the suggestion, but there is no effect on the 
result. If I understand the code correctly, the geodetic to
geocentric conversion takes place, if two distinct non-wgs84 
ellipsoids are involved?!

> > IMO, this is a bug, because the datum shift is completely
> > done by adding the shift values.
> 
> Is this relevant? 
> http://bugzilla.remotesensing.org/show_bug.cgi?id=368
> Particularly Frank's comments right at the end?
> 
Yes it's interesting, but unfortunately doesn't really help :-(


Thank you for responding
Uwe




From hamish_nospam at yahoo.com  Mon Mar 19 01:34:59 2007
From: hamish_nospam at yahoo.com (Hamish)
Date: Mon, 19 Mar 2007 20:34:59 +1200
Subject: [Proj] Fw: [ gpsdrive ] Google maps projection
Message-ID: <20070319203459.162344bb.hamish_nospam@yahoo.com>

[general interest fwd from the GPSDrive mailing list --H]

-----------------------------------------------------------

Begin forwarded message:

Date: Sun, 18 Mar 2007 06:50:44 +0000 (GMT)
From: Ian Haylock <haylocki at yahoo co uk>
To: gpsdrive at lists gpsdrivers org
Subject: [ gpsdrive ] Google maps projection


Found this interesting page, which may help someone work out the correct
projection for googles maps

http://cfis.savagexi.com/articles/2006/05/03/google-maps-deconstructed

Cheers, Ian

_______________________________________________
GPSdrive mailing list
GPSdrive at lists gpsdrivers org
http://lists.gpsdrivers.org/mailman/listinfo/gpsdrive


From jhhal at wmdata.com  Thu Mar 22 12:03:33 2007
From: jhhal at wmdata.com (Hallgren Johan E)
Date: Thu, 22 Mar 2007 20:03:33 +0100
Subject: [Proj] Could not load proj.dll
Message-ID: <D93CFEAA72FA764885CC1FDA94A1D89C028A21A3@WMRI000166.corp.wmdata.net>

Hello

 

I have created a web-application under DOTNET 2.0 and IIS using proj.dll
(the proj.dll is old and NOT compiled under DOTNET 2.0). It runes fine
on my computer but when I deploy it to a Windows Server 2003 it fails
when call the DllImport. 

[DllImport(@"Proj.dll", EntryPoint="pj_init_plus")]

 

The error message is Could not load dll, not found...

 

My guess is that there is some sequrity issue. Does anyone have clue
what it could be about? The only dependency is MSVCR71.dll. I don't know
if that could be a problem?

 

Does we always need the manifest-file in DOTNET 2.0?

 

Could it be something with the acount running IIS?

 

/Johan


___________________________________


Johan Hallgren


 

WM-data a LogicaCMG company 

Pelle Bergs backe 3

Box 1938, 791 19 Falun

Tel: 023-547 46 (int: +46-2354746)

Mobil: 070-588 44 28 (int: +46-705884428)

johan.e.hallgren at wmdata.com
<BLOCKED::mailto:johan.e.hallgren at wmdata.com> 

http://www.wmdata.se
<BLOCKED::/exchweb/bin/redir.asp?URL=http://www.wmdata.se/> 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070322/6bf99cb7/attachment.html>

From szekerest at gmail.com  Thu Mar 22 12:39:22 2007
From: szekerest at gmail.com (Tamas Szekeres)
Date: Thu, 22 Mar 2007 20:39:22 +0100
Subject: [Proj] Re: Could not load proj.dll
In-Reply-To: <D93CFEAA72FA764885CC1FDA94A1D89C028A21A3@WMRI000166.corp.wmdata.net>
References: <AcdstMm7ArS1b6UaRbG1DsVtklY14w==>
	<D93CFEAA72FA764885CC1FDA94A1D89C028A21A3@WMRI000166.corp.wmdata.net>
Message-ID: <f3b73b7d0703221239g2459eb46ub5a355db257ad68a@mail.gmail.com>

Would you check whether

http://mapserver.gis.umn.edu/docs/howto/mapscriptcscompile#unable-to-load-dll-mapscript

applies to your problem?


Tamas



2007/3/22, Hallgren Johan E <jhhal at wmdata.com>:
>
>
>
>
> Hello
>
>
>
> I have created a web-application under DOTNET 2.0 and IIS using proj.dll
> (the proj.dll is old and NOT compiled under DOTNET 2.0). It runes fine on my
> computer but when I deploy it to a Windows Server 2003 it fails when call
> the DllImport.
>
> [DllImport(@"Proj.dll", EntryPoint="pj_init_plus")]
>
>
>
> The error message is Could not load dll, not found…
>
>
>
> My guess is that there is some sequrity issue. Does anyone have clue what it
> could be about? The only dependency is MSVCR71.dll. I don't know if that
> could be a problem?
>
>
>
> Does we always need the manifest-file in DOTNET 2.0?
>
>
>
> Could it be something with the acount running IIS?
>
>
>
> /Johan
> ___________________________________
> Johan Hallgren
>
>
>
>
>
> WM-data a LogicaCMG company
>
>
> Pelle Bergs backe 3
>
>
> Box 1938, 791 19 Falun
>
>
>
> Tel: 023-547 46 (int: +46-2354746)
>
> Mobil: 070-588 44 28 (int: +46-705884428)
>
>
> johan.e.hallgren at wmdata.com
>
>
> http://www.wmdata.se
>
>



From EMiller at dfg.ca.gov  Thu Mar 22 14:52:33 2007
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Thu, 22 Mar 2007 14:52:33 -0700
Subject: [Proj] Could not load proj.dll
In-Reply-To: <D93CFEAA72FA764885CC1FDA94A1D89C028A21A3@WMRI000166.corp.wmdata.net>
References: <D93CFEAA72FA764885CC1FDA94A1D89C028A21A3@WMRI000166.corp.wmdata.net>
Message-ID: <4602983E.95FD.00E4.0@dfg.ca.gov>

I believe MSVCR71.dll is installed on Windows Server 2003 out of the box
so that shouldn't be the problem.  I have a vague recollection of
running into the same problem at one point and forget what I did to fix
it.  I think it was a file permissions problem.

I have an ASP.NET 2.0 webservice based on proj that runs on Windows
Server 2003 boxes.  I specifically compiled proj.dll with VS.NET (2003)
to avoid the MSVCR80.dll and related manifest issues.  So, that
shouldn't be your problem.

>>> On 3/22/2007 at 12:03 PM, "Hallgren Johan E" <jhhal at wmdata.com>
wrote:
> Hello
> 
>  
> 
> I have created a web-application under DOTNET 2.0 and IIS using
proj.dll
> (the proj.dll is old and NOT compiled under DOTNET 2.0). It runes
fine
> on my computer but when I deploy it to a Windows Server 2003 it
fails
> when call the DllImport. 
> 
> [DllImport(@"Proj.dll", EntryPoint="pj_init_plus")]
> 
>  
> 
> The error message is Could not load dll, not found...
> 
>  
> 
> My guess is that there is some sequrity issue. Does anyone have clue
> what it could be about? The only dependency is MSVCR71.dll. I don't
know
> if that could be a problem?
> 
>  
> 
> Does we always need the manifest-file in DOTNET 2.0?
> 
>  
> 
> Could it be something with the acount running IIS?
> 
>  
> 
> /Johan
> 
> 
> ___________________________________
> 
> 
> Johan Hallgren
> 
> 
>  
> 
> WM-data a LogicaCMG company 
> 
> Pelle Bergs backe 3
> 
> Box 1938, 791 19 Falun
> 
> Tel: 023-547 46 (int: +46-2354746)
> 
> Mobil: 070-588 44 28 (int: +46-705884428)
> 
> johan.e.hallgren at wmdata.com 
> <BLOCKED::mailto:johan.e.hallgren at wmdata.com> 
> 
> http://www.wmdata.se 
> <BLOCKED::/exchweb/bin/redir.asp?URL=http://www.wmdata.se/> 
> 
>  


From jhhal at wmdata.com  Fri Mar 23 03:12:12 2007
From: jhhal at wmdata.com (Hallgren Johan E)
Date: Fri, 23 Mar 2007 11:12:12 +0100
Subject: [Proj] Could not load proj.dll
References: <D93CFEAA72FA764885CC1FDA94A1D89C028A21A3@WMRI000166.corp.wmdata.net>
	<4602983E.95FD.00E4.0@dfg.ca.gov>
Message-ID: <D93CFEAA72FA764885CC1FDA94A1D89C028A22AB@WMRI000166.corp.wmdata.net>

It was the MSVCR71.dll that could not be found. It had to be copied from
the windows directory.

Thanks
Johan
___________________________________


Johan Hallgren

 
WM-data a LogicaCMG company 
Pelle Bergs backe 3
Box 1938, 791 19 Falun
Tel: 023-547 46 (int: +46-2354746)

Mobil: 070-588 44 28 (int: +46-705884428)

johan.e.hallgren at wmdata.com
http://www.wmdata.se
-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Eric Miller
Sent: den 22 mars 2007 22:53
To: Tamas Szekeres; proj at lists.maptools.org
Subject: Re: [Proj] Could not load proj.dll

I believe MSVCR71.dll is installed on Windows Server 2003 out of the box
so that shouldn't be the problem.  I have a vague recollection of
running into the same problem at one point and forget what I did to fix
it.  I think it was a file permissions problem.

I have an ASP.NET 2.0 webservice based on proj that runs on Windows
Server 2003 boxes.  I specifically compiled proj.dll with VS.NET (2003)
to avoid the MSVCR80.dll and related manifest issues.  So, that
shouldn't be your problem.

>>> On 3/22/2007 at 12:03 PM, "Hallgren Johan E" <jhhal at wmdata.com>
wrote:
> Hello
> 
>  
> 
> I have created a web-application under DOTNET 2.0 and IIS using
proj.dll
> (the proj.dll is old and NOT compiled under DOTNET 2.0). It runes
fine
> on my computer but when I deploy it to a Windows Server 2003 it
fails
> when call the DllImport. 
> 
> [DllImport(@"Proj.dll", EntryPoint="pj_init_plus")]
> 
>  
> 
> The error message is Could not load dll, not found...
> 
>  
> 
> My guess is that there is some sequrity issue. Does anyone have clue
> what it could be about? The only dependency is MSVCR71.dll. I don't
know
> if that could be a problem?
> 
>  
> 
> Does we always need the manifest-file in DOTNET 2.0?
> 
>  
> 
> Could it be something with the acount running IIS?
> 
>  
> 
> /Johan
> 
> 
> ___________________________________
> 
> 
> Johan Hallgren
> 
> 
>  
> 
> WM-data a LogicaCMG company 
> 
> Pelle Bergs backe 3
> 
> Box 1938, 791 19 Falun
> 
> Tel: 023-547 46 (int: +46-2354746)
> 
> Mobil: 070-588 44 28 (int: +46-705884428)
> 
> johan.e.hallgren at wmdata.com 
> <BLOCKED::mailto:johan.e.hallgren at wmdata.com> 
> 
> http://www.wmdata.se 
> <BLOCKED::/exchweb/bin/redir.asp?URL=http://www.wmdata.se/> 
> 
>  
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From uwe.schmitz at lverma.nrw.de  Fri Mar 23 03:41:50 2007
From: uwe.schmitz at lverma.nrw.de (Uwe Schmitz)
Date: Fri, 23 Mar 2007 10:41:50 +0000 (UTC)
Subject: [Proj] Re: Gridshifts give slightly wrong results
References: <loom.20070307T124344-785@post.gmane.org>
	<Pine.LNX.4.62.0703071216170.27437@agrippa.ukshells.co.uk>
	<loom.20070313T131141-625@post.gmane.org>
Message-ID: <loom.20070323T114043-717@post.gmane.org>

I've filed this as a bug: Ticket #1531

Regards
Uwe




From patrick.giraudoux at univ-fcomte.fr  Sun Mar 25 23:22:29 2007
From: patrick.giraudoux at univ-fcomte.fr (Patrick Giraudoux)
Date: Mon, 26 Mar 2007 08:22:29 +0200
Subject: [Proj] trouble transforming corine landcover raster projection
 Lambert laea to lcc
Message-ID: <460766A5.4040402@univ-fcomte.fr>

Dear listers

I am using GRASS which is grounded, to my knowledge, on proj.4 for 
projection transformation. Within a location called corineurope I have 
extracted a subset of the corine landcover 2000 data set 100m resolution 
(whose projection is given below). This subset corresponds to a window 
including the Franche-Comte region (geographical sense). I have created 
another location in a French coordinate system called "Lambert II 
etendu", the region (GRASS sense) including the whole country.

However,  what I get  is just the following sequence:

GRASS 6.0.2 (franceLIIe):~ > r.proj input=fc location=corineurope 
mapset=giraudoux output=fc

Input Projection Parameters: +proj=laea +lat_0=52.0000000000 
+lon_0=10.0000000000 +a=6378137 +rf=298.257222101 +no_defs
Input Unit Factor: 1

Output Projection Parameters: +proj=lcc +lat_0=46.8000000000 
+lat_1=45.8989188889 +lat_2=47.6960144444 +lon_0=2.3372291667 
+x_0=600000.0000000000 +y_0=2200000.0000000000 +a=6378249.145 
+rf=293.465 +no_defs +towgs84=-168.000,-60.000,320.000
Output Unit Factor: 1
ERROR: Input map is outside current region
GRASS 6.0.2 (franceLIIe):~ >

The error message is clear, but after many checks about projection and 
region definitions, I cannot find what is wrong.

Any suggestion appreciated.

Thanks in advance,

Patrick Giraudoux


Input map:


GRASS 6.0.2 (corineurope):~ > g.proj -p
-PROJ_INFO-------------------------------------------------
name       : Lambert Azimuthal Equal Area
proj       : laea
ellps      : grs80
a          : 6378137.0000000000
es         : 0.0066943800
f          : 298.2572221010
lat_0      : 52.0000000000
lon_0      : 10.0000000000
-PROJ_UNITS------------------------------------------------
unit       : meter
units      : meters
meters     : 1.0
GRASS 6.0.2 (corineurope):~ >


GRASS 6.0.2 (corineurope):~ > g.region -p
projection: 99 (Lambert Azimuthal Equal Area)
zone:       0
datum:      ** unknown (default: WGS84) **
ellipsoid:  grs80
north:      2781245
south:      2571341
west:       3952172
east:       4110683
nsres:      100.00190567
ewres:      100.00694006
rows:       2099
cols:       1585
GRASS 6.0.2 (corineurope):~ >


import location:

GRASS 6.0.2 (franceLIIe):~ > g.proj -p
-PROJ_INFO-------------------------------------------------
name       : Lambert Conformal Conic
datum      : ntf
towgs84    : -168.000,-60.000,320.000
proj       : lcc
ellps      : clark80
a          : 6378249.1449999996
es         : 0.0068035113
f          : 293.4650000000
lat_0      : 46.8000000000
lat_1      : 45.8989188889
lat_2      : 47.6960144444
lon_0      : 2.3372291667
x_0        : 600000.0000000000
y_0        : 2200000.0000000000
-PROJ_UNITS------------------------------------------------
unit       : meter
units      : meters
meters     : 1.0

GRASS 6.0.2 (franceLIIe):~ > g.region -p
projection: 99 (Lambert Conformal Conic)
zone:       0
datum:      ntf
ellipsoid:  clark80
north:      2677442
south:      1620430
west:       47679
east:       1197823
nsres:      100.00113529
ewres:      100.00382575
rows:       10570
cols:       11501
GRASS 6.0.2 (franceLIIe):~ >












From patrick.giraudoux at univ-fcomte.fr  Mon Mar 26 09:28:44 2007
From: patrick.giraudoux at univ-fcomte.fr (Patrick Giraudoux)
Date: Mon, 26 Mar 2007 18:28:44 +0200
Subject: [Proj] trouble transforming corine landcover raster projection
	Lambert laea to lcc
In-Reply-To: <20070326223050.16dfc17c.hamish_nospam@yahoo.com>
References: <460766A5.4040402@univ-fcomte.fr>
	<20070326223050.16dfc17c.hamish_nospam@yahoo.com>
Message-ID: <4607F4BC.7090304@univ-fcomte.fr>

Dear Hamish and Yves,

Results OK on one hand and screwed up on the other:

> In the corineurope location try
>
> g.region rast=fc
>
>
> and then go back into your franceLIIe mapset and try again.
has not been conclusive, BUT
> another trick is in your source location (corine) zoom around your map
> and run v.in.region to make a box, then in Lambert location use v.proj
> to import the box, then "g.region vect=box" to get the zoom ready for
> the raster map.
Worked excellent...

So definitely one can go a step further with this improved definition of 
GRASS regions (thanks for the trick, will be most helpful, Hamish),

HOWEVER,

The raster obtained failed to fall into the right coordinate range... 
which may well fit with Yves' remark:
> This not a lambert 2 etendu region. 1 000 000 diffents to the west (I may be wrong)
I am a bit loosing my mind on that. The shapefiles given by BD carto 
have a coordinate range and projections given to be "Lambert II etendu" 
(eg Besancon is 2256000 880000) and corine landcover has Lambert 
Azimutal Equal Area. I have parametrized projections from indications 
given on Corine and IGN notices respectively. To sum up, within the 
Corine Land Cover I have got this region for the Franche-Comte window:

GRASS 6.0.2 (corineurope):~ > g.region -p
projection: 99 (Lambert Azimuthal Equal Area)
zone:       0
datum:      ** unknown (default: WGS84) **
ellipsoid:  grs80
north:      2781245
south:      2571341
west:       3952172
east:       4110683
nsres:      100.00190567
ewres:      100.00694006
rows:       2099
cols:       1585

An acceptable window in for France in Lambert II etendu would be
north:      2677442
south:      1620430
west:       47679
east:       1197823

When I project from what I believe to be Corine Land Cover to what I 
believe to be Lambert II etendu, I get this region for the Franche-Comte 
region:

GRASS 6.0.2 (franceLambertIIe):~ > g.region -p
projection: 99 (Lambert Conformal Conic)
zone:       0
datum:      ** unknown (default: WGS84) **
ellipsoid:  clark80
north:      5781377.23822138
south:      5575874.90520341
west:       5197476.01104252
east:       5391683.44065733
nsres:      100.00113529
ewres:      100.00382575
rows:       2055
cols:       1942

Which is really crazy...

Any suggestion welcome,

Best regards,

Patrick







Hamish a écrit :
> Patrick Giraudoux wrote:
>   
>> GRASS 6.0.2 (franceLIIe):~ > r.proj input=fc location=corineurope 
>> mapset=giraudoux output=fc
>>     
>
>
> In the corineurope location try
>
> g.region rast=fc
>
>
> and then go back into your franceLIIe mapset and try again.
>
>
> another trick is in your source location (corine) zoom around your map
> and run v.in.region to make a box, then in Lambert location use v.proj
> to import the box, then "g.region vect=box" to get the zoom ready for
> the raster map.
>
>
> good luck,
> Hamish
>
>
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070326/021eb546/attachment.html>

From mkennedy2 at earthlink.net  Mon Mar 26 16:47:11 2007
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Mon, 26 Mar 2007 16:47:11 -0700 (GMT-07:00)
Subject: [Proj] Re: trouble transforming corine landcover raster projection
Message-ID: <30626348.1174952831838.JavaMail.root@elwamui-darkeyed.atl.sa.earthlink.net>

Patrick,

For LAEA, I have two more parameters: 

false easting: 4321000.0
false northing: 3210000.0

When I use that definition in ArcMap, the extents you report are in France, at least!

Melita

-- 
Melita Kennedy
Product Specialist
ESRI, Inc.

>----------------------------------------------------------------------
>
>Date: Mon, 26 Mar 2007 08:22:29 +0200
>From: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>Subject: [Proj] trouble transforming corine landcover raster
>	projection Lambert laea to lcc
>To: proj at lists.maptools.org
>
>Dear listers
>
>I am using GRASS which is grounded, to my knowledge, on proj.4 for 
>projection transformation. Within a location called corineurope I have 
>extracted a subset of the corine landcover 2000 data set 100m resolution 
>(whose projection is given below). This subset corresponds to a window 
>including the Franche-Comte region (geographical sense). I have created 
>another location in a French coordinate system called "Lambert II 
>etendu", the region (GRASS sense) including the whole country.
>
>However,  what I get  is just the following sequence:
>
>GRASS 6.0.2 (franceLIIe):~ > r.proj input=fc location=corineurope 
>mapset=giraudoux output=fc
>
>Input Projection Parameters: +proj=laea +lat_0=52.0000000000 
>+lon_0=10.0000000000 +a=6378137 +rf=298.257222101 +no_defs
>Input Unit Factor: 1
>
>Output Projection Parameters: +proj=lcc +lat_0=46.8000000000 
>+lat_1=45.8989188889 +lat_2=47.6960144444 +lon_0=2.3372291667 
>+x_0=600000.0000000000 +y_0=2200000.0000000000 +a=6378249.145 
>+rf=293.465 +no_defs +towgs84=-168.000,-60.000,320.000
>Output Unit Factor: 1
>ERROR: Input map is outside current region
>GRASS 6.0.2 (franceLIIe):~ >
>
>The error message is clear, but after many checks about projection and 
>region definitions, I cannot find what is wrong.
>
>Any suggestion appreciated.
>
>Thanks in advance,
>
>Patrick Giraudoux
>
>
>Input map:
>
>
>GRASS 6.0.2 (corineurope):~ > g.proj -p
>-PROJ_INFO-------------------------------------------------
>name       : Lambert Azimuthal Equal Area
>proj       : laea
>ellps      : grs80
>a          : 6378137.0000000000
>es         : 0.0066943800
>f          : 298.2572221010
>lat_0      : 52.0000000000
>lon_0      : 10.0000000000
>-PROJ_UNITS------------------------------------------------
>unit       : meter
>units      : meters
>meters     : 1.0
>GRASS 6.0.2 (corineurope):~ >
>
>
>GRASS 6.0.2 (corineurope):~ > g.region -p
>projection: 99 (Lambert Azimuthal Equal Area)
>zone:       0
>datum:      ** unknown (default: WGS84) **
>ellipsoid:  grs80
>north:      2781245
>south:      2571341
>west:       3952172
>east:       4110683
>nsres:      100.00190567
>ewres:      100.00694006
>rows:       2099
>cols:       1585
>GRASS 6.0.2 (corineurope):~ >
>
>
>import location:
>
>GRASS 6.0.2 (franceLIIe):~ > g.proj -p
>-PROJ_INFO-------------------------------------------------
>name       : Lambert Conformal Conic
>datum      : ntf
>towgs84    : -168.000,-60.000,320.000
>proj       : lcc
>ellps      : clark80
>a          : 6378249.1449999996
>es         : 0.0068035113
>f          : 293.4650000000
>lat_0      : 46.8000000000
>lat_1      : 45.8989188889
>lat_2      : 47.6960144444
>lon_0      : 2.3372291667
>x_0        : 600000.0000000000
>y_0        : 2200000.0000000000
>-PROJ_UNITS------------------------------------------------
>unit       : meter
>units      : meters
>meters     : 1.0
>
>GRASS 6.0.2 (franceLIIe):~ > g.region -p
>projection: 99 (Lambert Conformal Conic)
>zone:       0
>datum:      ntf
>ellipsoid:  clark80
>north:      2677442
>south:      1620430
>west:       47679
>east:       1197823
>nsres:      100.00113529
>ewres:      100.00382575
>rows:       10570
>cols:       11501
>GRASS 6.0.2 (franceLIIe):~ >



From massimodisasha at yahoo.it  Mon Mar 26 18:02:41 2007
From: massimodisasha at yahoo.it (Massimo Di Stefano)
Date: Tue, 27 Mar 2007 03:02:41 +0200
Subject: [Proj] wgs point (lat-lon 'degres' to N-E 'metric')
Message-ID: <E0F0A32D-405B-4722-B187-B3820B1E713C@yahoo.it>


hi,

i've a lat-lon data (wgs)
like :

4051.1749  N   01415.5317   E

is in proj a method to transform this data in
a metric format ?


thanks for any suggestion about.

Massimo.


From awilliams at rapidmap.com  Mon Mar 26 22:47:12 2007
From: awilliams at rapidmap.com (Andrew Williams)
Date: Tue, 27 Mar 2007 15:47:12 +1000
Subject: [Proj] wgs point (lat-lon 'degres' to N-E 'metric')
Message-ID: <CFE1D6CAE2D44343BF58E308C1C7EC648E1C89@rmg-server03.rmg.local>

Massimo,
This looks like an NMEA GPS format. Eg DDDMM.mmmmm

You might need to re-format the values to something like decimal degrees
(DDD.dddddddddd) or DD MM SS.ss to use proj for the conversion.

Regards
Andrew 

-----Original Message-----
From: Massimo Di Stefano [mailto:massimodisasha at yahoo.it] 
Sent: Tuesday, March 27, 2007 11:03 AM
To: proj at lists.maptools.org
Subject: [Proj] wgs point (lat-lon 'degres' to N-E 'metric')


hi,

i've a lat-lon data (wgs)
like :

4051.1749  N   01415.5317   E

is in proj a method to transform this data in a metric format ?


thanks for any suggestion about.

Massimo.
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj





From scott.ellington at goisc.com  Tue Mar 27 08:10:04 2007
From: scott.ellington at goisc.com (Scott Ellington)
Date: Tue, 27 Mar 2007 11:10:04 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84:
	question
Message-ID: <C261C1FB2368ED4782686F3D5BD161869117D9@goisc-ex.goisc.com>

Hello,

I am trying to use mapserver to reproject some data I have so that it
will display on top of Microsoft's Virtual Earth.  VE uses a Mercator
projection with a spherical ellipsoid.  Details here:

http://msdn2.microsoft.com/en-us/library/bb259689.aspx

Unfortunately, I am having trouble working out the science behind
getting this reprojection working.  I have put together a set of proj
parameters to describe the output VE projection as so:

+proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0
+x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs

And my input data is in WGS84 lat/long:

+proj=latlong +datum=WGS84

However, specifying this as the input and output projection causes my
data to shift downward about 10 minutes of latitude.  I ran some tests
from the command line:

$ proj +proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
+lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs
-84 30
-9350837.23     3503549.84  <---- This is correct

$ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
+a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0
+units=m +towgs84=0,0,0 +no_defs
-84 30
-9350837.23     3482183.15 -5312.58 <--- Not correct.  Y value is
shifted downward

Yet, if I tell proj that my input data is already based on a spherical
ellipsoid, it works:

$ cs2cs +proj=latlong +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
+lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs +to +proj=merc
+ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0
+y_0=0 +k=1.0 +units=m +no_defs
-84 30
-9350837.23     3503549.84 0.00 <-- correct

So my workaround has been to specify the input projection in mapserver
as spherical, when it is not, it is WGS84.  My question is this:  Why is
it necessary to do this?  Is there another way to write this cs2cs
reprojection which will allow me to correctly specify my input
projection?

Thanks in advance,

Scott Ellington




From massimodisasha at yahoo.it  Tue Mar 27 11:22:53 2007
From: massimodisasha at yahoo.it (Massimo Di Stefano)
Date: Tue, 27 Mar 2007 20:22:53 +0200
Subject: [Proj] wgs point (lat-lon 'NMEA' to N-E 'metric') "was (lat-lon
	'degres' to N-E 'metric')"
In-Reply-To: <200703271703.l2RH2J24014572@duke.maptools.org>
References: <200703271703.l2RH2J24014572@duke.maptools.org>
Message-ID: <E77D81C6-4AC6-42D1-A2CC-9748DD9F2C7C@yahoo.it>

Yes it is a NMEA gps output

i'm tring to red it directly from a seria device,

reformat it in a rght format readable by proj
can i trasnfor it from :

4051.1749  N   01415.5317   E

to

40 51 17.49 N  014 15 53.17


that isn't the same of:

40.511749  N   014.155317   E

right?
(sorry for this basilar question!)


have you any suggestion/comment to
read directly the NMEA format in proj !

i'm playing with awk or other bash command to reformat this...
but i'm a newbie student...:-)
...  have you any suggestion about ?

thanks,

Massimo






Il giorno 27/mar/07, alle ore 19:03, proj-request at lists.maptools.org  
ha scritto:

> Massimo,
> This looks like an NMEA GPS format. Eg DDDMM.mmmmm
>
> You might need to re-format the values to something like decimal  
> degrees
> (DDD.dddddddddd) or DD MM SS.ss to use proj for the conversion.
>
> Regards
> Andrew



From EMiller at dfg.ca.gov  Tue Mar 27 12:08:05 2007
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Tue, 27 Mar 2007 12:08:05 -0700
Subject: [Proj] wgs point (lat-lon 'NMEA' to N-E 'metric') "was
	(lat-lon 'degres' to N-E 'metric')"
In-Reply-To: <E77D81C6-4AC6-42D1-A2CC-9748DD9F2C7C@yahoo.it>
References: <200703271703.l2RH2J24014572@duke.maptools.org>
	<E77D81C6-4AC6-42D1-A2CC-9748DD9F2C7C@yahoo.it>
Message-ID: <46090939.95FD.00E4.0@dfg.ca.gov>

Lots of people have written interfaces for NMEA compliant devices. 
Unless you're doing it for educational reasons, you might have a look at
the GPS software listed on freegis.org.

There are 60 minutes in a degree and 60 seconds in a minute.  Just like
telling time (more or less).  So,

	4051.1749 N  --> 40 51.1749 N --> 40.852915 N 

http://en.wikipedia.org/wiki/Geographic_coordinate_system 


>>> On 3/27/2007 at 11:22 AM, Massimo Di Stefano
<massimodisasha at yahoo.it> wrote:
> Yes it is a NMEA gps output
> 
> i'm tring to red it directly from a seria device,
> 
> reformat it in a rght format readable by proj
> can i trasnfor it from :
> 
> 4051.1749  N   01415.5317   E
> 
> to
> 
> 40 51 17.49 N  014 15 53.17
> 
> 
> that isn't the same of:
> 
> 40.511749  N   014.155317   E
> 
> right?
> (sorry for this basilar question!)
> 
> 
> have you any suggestion/comment to
> read directly the NMEA format in proj !
> 
> i'm playing with awk or other bash command to reformat this...
> but i'm a newbie student...:-)
> ...  have you any suggestion about ?
> 
> thanks,
> 
> Massimo
> 
> 
> 
> 
> 
> 
> Il giorno 27/mar/07, alle ore 19:03, proj-request at lists.maptools.org 

> ha scritto:
> 
>> Massimo,
>> This looks like an NMEA GPS format. Eg DDDMM.mmmmm
>>
>> You might need to re-format the values to something like decimal  
>> degrees
>> (DDD.dddddddddd) or DD MM SS.ss to use proj for the conversion.
>>
>> Regards
>> Andrew
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj


From ovv at hetnet.nl  Tue Mar 27 12:35:45 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 27 Mar 2007 21:35:45 +0200
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84:
	question
In-Reply-To: <C261C1FB2368ED4782686F3D5BD161869117D9@goisc-ex.goisc.com>
Message-ID: <C22F3EB1.B60B%ovv@hetnet.nl>

> From: "Scott Ellington"
> Date: Tue, 27 Mar 2007 11:10:04 -0400
> Subject: [Proj] mercator projection to spherical ellipsoid from WGS84:
> question


> $ proj +proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
> +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs
> -84 30
> -9350837.23     3503549.84  <---- This is correct
> 
> $ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
> +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0
> +units=m +towgs84=0,0,0 +no_defs
> -84 30
> -9350837.23     3482183.15 -5312.58 <--- Not correct.  Y value is
> shifted downward
> 
> Yet, if I tell proj that my input data is already based on a spherical
> ellipsoid, it works:
> 
> $ cs2cs +proj=latlong +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
> +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs +to +proj=merc
> +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0
> +y_0=0 +k=1.0 +units=m +no_defs
> -84 30
> -9350837.23     3503549.84 0.00 <-- correct
> 
> ...... My question is this:  Why is
> it necessary to do this?  Is there another way to write this cs2cs
> reprojection which will allow me to correctly specify my input
> projection?

It is possible to do mighty strange things with cs2cs, possibly even without
knowing it.
I can reproduce your "incorrect" numbers with the following procedure.

Take lon=-84, lat=30 deg. Put them on the WGS84 ellipsoid and convert to
geocentric coordinates with an ellipsoidal procedure.
Now set a sphere with a = 6378137 m and convert the geocentric coordinates
back to lat, lon on this sphere with a spherical procedure.
Then use these lat, lon to project with a spherical mercator projection.
I got indeed:
easting, northing, height = -9350837.227, 3482183.153, -5312.580

Remedy: do not use +towgs84=0,0,0 in your spherical case.





From scott.ellington at goisc.com  Tue Mar 27 13:04:18 2007
From: scott.ellington at goisc.com (Scott Ellington)
Date: Tue, 27 Mar 2007 16:04:18 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from
	WGS84:question
References: <C22F3EB1.B60B%ovv@hetnet.nl>
Message-ID: <C261C1FB2368ED4782686F3D5BD16186911810@goisc-ex.goisc.com>

Hi, 

I meant "correct" as in renders correctly on the map.  I should have
specified that.

As for your suggestion to remove the towgs parameter, on proj 4.4.9,
this does nothing

$ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
+a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0
+units=m +towgs84=0,0,0 +no_defs
-84 30
-9350837.23     3482183.15 -5312.58

$ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
+a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0
+units=m +no_defs
-84 30
-9350837.23     3482183.15 -5312.58

Proj 4.4.6 however, does:

$ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
+a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0
+units=m +towgs84=0,0,0 +no_defs
-84 30
-9350837.23     3482183.15 -5312.58

$ ./cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
+a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0
+units=m +no_defs
-84 30
-9350837.23     3503549.84 0.000

I believe that something has changed in the way proj handles ellipsoid
conversions. Basically, I would like to find a way to avoid this
conversion without the hack of specifying that the ellipsoids are the
same.


Thanks,
Scott

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Oscar van Vlijmen
Sent: Tuesday, March 27, 2007 3:36 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] mercator projection to spherical ellipsoid from
WGS84:question

> From: "Scott Ellington"
> Date: Tue, 27 Mar 2007 11:10:04 -0400
> Subject: [Proj] mercator projection to spherical ellipsoid from WGS84:
> question


> $ proj +proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
> +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs
> -84 30
> -9350837.23     3503549.84  <---- This is correct
> 
> $ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
> +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0
> +units=m +towgs84=0,0,0 +no_defs
> -84 30
> -9350837.23     3482183.15 -5312.58 <--- Not correct.  Y value is
> shifted downward
> 
> Yet, if I tell proj that my input data is already based on a spherical
> ellipsoid, it works:
> 
> $ cs2cs +proj=latlong +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
> +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs +to +proj=merc
> +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0
> +y_0=0 +k=1.0 +units=m +no_defs
> -84 30
> -9350837.23     3503549.84 0.00 <-- correct
> 
> ...... My question is this:  Why is
> it necessary to do this?  Is there another way to write this cs2cs
> reprojection which will allow me to correctly specify my input
> projection?

It is possible to do mighty strange things with cs2cs, possibly even
without
knowing it.
I can reproduce your "incorrect" numbers with the following procedure.

Take lon=-84, lat=30 deg. Put them on the WGS84 ellipsoid and convert to
geocentric coordinates with an ellipsoidal procedure.
Now set a sphere with a = 6378137 m and convert the geocentric
coordinates
back to lat, lon on this sphere with a spherical procedure.
Then use these lat, lon to project with a spherical mercator projection.
I got indeed:
easting, northing, height = -9350837.227, 3482183.153, -5312.580

Remedy: do not use +towgs84=0,0,0 in your spherical case.



_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From mkennedy2 at earthlink.net  Tue Mar 27 18:28:35 2007
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Tue, 27 Mar 2007 18:28:35 -0700 (GMT-07:00)
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84
Message-ID: <4653132.1175045315827.JavaMail.root@elwamui-norfolk.atl.sa.earthlink.net>

Scott,

The reason why you got different results in cs2cs the first time is because you set the input datum to wgs84 and you provided datum transformation parameters in +towgs84=0,0,0. The code did this: 

1. Input degrees were converted to XYZ (3D Cartesian) using wgs84 ellipsoid parameters
2. Datum transformation performed - no change because the parameters were zeroes
3. Output XYZ values converted to decimal degrees using sphere parameters 
4. Output degrees projected to Mercator

This causes a latitude shift that you won't see if the datum transformation code is bypassed or you set the input ellipsoid/sphere to match the output. 

Melita 

------------------------------
Date: Tue, 27 Mar 2007 11:10:04 -0400
From: "Scott Ellington" <scott.ellington at goisc.com>
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84:
	question
To: <proj at lists.maptools.org>

Hello,

I am trying to use mapserver to reproject some data I have so that it
will display on top of Microsoft's Virtual Earth.  VE uses a Mercator
projection with a spherical ellipsoid.  Details here:

http://msdn2.microsoft.com/en-us/library/bb259689.aspx

Unfortunately, I am having trouble working out the science behind
getting this reprojection working.  I have put together a set of proj
parameters to describe the output VE projection as so:

+proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0
+x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs

And my input data is in WGS84 lat/long:

+proj=latlong +datum=WGS84

However, specifying this as the input and output projection causes my
data to shift downward about 10 minutes of latitude.  I ran some tests
from the command line:

$ proj +proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
+lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs
-84 30
-9350837.23     3503549.84  <---- This is correct

$ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
+a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0
+k=1.0
+units=m +towgs84=0,0,0 +no_defs
-84 30
-9350837.23     3482183.15 -5312.58 <--- Not correct.  Y value is
shifted downward

Yet, if I tell proj that my input data is already based on a spherical
ellipsoid, it works:

$ cs2cs +proj=latlong +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
+lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs +to +proj=merc
+ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0
+y_0=0 +k=1.0 +units=m +no_defs
-84 30
-9350837.23     3503549.84 0.00 <-- correct

So my workaround has been to specify the input projection in mapserver
as spherical, when it is not, it is WGS84.  My question is this:  Why is
it necessary to do this?  Is there another way to write this cs2cs
reprojection which will allow me to correctly specify my input
projection?

Thanks in advance,

Scott Ellington
------------------------------



From hamish_nospam at yahoo.com  Tue Mar 27 22:53:36 2007
From: hamish_nospam at yahoo.com (Hamish)
Date: Wed, 28 Mar 2007 17:53:36 +1200
Subject: [Proj] wgs point (lat-lon 'NMEA' to N-E 'metric') "was (lat-lon
	'degres' to N-E 'metric')"
In-Reply-To: <46090939.95FD.00E4.0@dfg.ca.gov>
References: <200703271703.l2RH2J24014572@duke.maptools.org>
	<E77D81C6-4AC6-42D1-A2CC-9748DD9F2C7C@yahoo.it>
	<46090939.95FD.00E4.0@dfg.ca.gov>
Message-ID: <20070328175336.0b7129c3.hamish_nospam@yahoo.com>

Eric Miller wrote:
> Lots of people have written interfaces for NMEA compliant devices. 
> Unless you're doing it for educational reasons, you might have a look
> at the GPS software listed on freegis.org.

specifically Gpsd:  http://gpsd.berlios.de


as for 
> 4051.1749 N  --> 40 51.1749 N --> 40.852915 N 

if data is fixed width you might add "cut" to awk,

lat_deg=`echo "$input" | cut -c1-2`
lat_min=`echo "$input" | cut -c3-9`
lat_hem=`echo "$input" | cut -c11`

lat_dm="${lat_deg}d${lat_min}${lat_hem}"

$ echo $lat_dm
40d51.1749N


which proj might be happy with.



Hamish


From massimodisasha at yahoo.it  Wed Mar 28 03:43:20 2007
From: massimodisasha at yahoo.it (Massimo Di Stefano)
Date: Wed, 28 Mar 2007 12:43:20 +0200
Subject: [Proj] (no subject)
Message-ID: <14A3649F-BE0B-4BE6-B95E-93E5F4945A36@yahoo.it>

hi using a string like :

var="4051.1749|01415.5317"; echo "${var:0:2} ${var:2:2} ${var:5:2}.$ 
{var:7:2} ${var:10:3} ${var:13:2} ${var:16:2}.${var:18:2}"

i've reformatted the NMEA output to :

40 51 17.49 014 15 53.17


what is the right way
  to translate this coords
into a wgs "metric"  coordinate
... i'm using a grass location "wgs"

projection: 1 (UTM)
zone:       33
datum:      wgs84
ellipsoid:  wgs84


thanks for any suggestion,

Massimo


Il giorno 27/mar/07, alle ore 20:22, Massimo Di Stefano ha scritto:


> Yes it is a NMEA gps output
>
> i'm tring to red it directly from a seria device,
>
> reformat it in a rght format readable by proj
> can i trasnfor it from :
>
> 4051.1749  N   01415.5317   E
>
> to
>
> 40 51 17.49 N  014 15 53.17
>
>
> that isn't the same of:
>
> 40.511749  N   014.155317   E
>
> right?
> (sorry for this basilar question!)
>
>
> have you any suggestion/comment to
> read directly the NMEA format in proj !
>
> i'm playing with awk or other bash command to reformat this...
> but i'm a newbie student...:-)
> ...  have you any suggestion about ?
>
> thanks,
>
> Massimo
>
>
>
>
>
>
> Il giorno 27/mar/07, alle ore 19:03, proj- 
> request at lists.maptools.org ha scritto:
>
>
>> Massimo,
>> This looks like an NMEA GPS format. Eg DDDMM.mmmmm
>>
>> You might need to re-format the values to something like decimal  
>> degrees
>> (DDD.dddddddddd) or DD MM SS.ss to use proj for the conversion.
>>
>> Regards
>> Andrew
>>
>
>




From massimodisasha at yahoo.it  Wed Mar 28 03:44:13 2007
From: massimodisasha at yahoo.it (Massimo Di Stefano)
Date: Wed, 28 Mar 2007 12:44:13 +0200
Subject: [Proj] Re: wgs point (lat-lon 'NMEA' to N-E 'metric')  
Message-ID: <B70F8F48-BCBC-4F94-A0DB-602CAB037DF3@yahoo.it>

hi using a string like :

var="4051.1749|01415.5317"; echo "${var:0:2} ${var:2:2} ${var:5:2}.$ 
{var:7:2} ${var:10:3} ${var:13:2} ${var:16:2}.${var:18:2}"

i've reformatted the NMEA output to :

40 51 17.49 014 15 53.17


what is the right way
  to translate this coords
into a wgs "metric"  coordinate
... i'm using a grass location "wgs"

projection: 1 (UTM)
zone:       33
datum:      wgs84
ellipsoid:  wgs84


thanks for any suggestion,

Massimo


Il giorno 27/mar/07, alle ore 20:22, Massimo Di Stefano ha scritto:



> Yes it is a NMEA gps output
>
> i'm tring to red it directly from a seria device,
>
> reformat it in a rght format readable by proj
> can i trasnfor it from :
>
> 4051.1749  N   01415.5317   E
>
> to
>
> 40 51 17.49 N  014 15 53.17
>
>
> that isn't the same of:
>
> 40.511749  N   014.155317   E
>
> right?
> (sorry for this basilar question!)
>
>
> have you any suggestion/comment to
> read directly the NMEA format in proj !
>
> i'm playing with awk or other bash command to reformat this...
> but i'm a newbie student...:-)
> ...  have you any suggestion about ?
>
> thanks,
>
> Massimo
>
>
>
>
>
>
> Il giorno 27/mar/07, alle ore 19:03, proj- 
> request at lists.maptools.org ha scritto:
>
>
>
>> Massimo,
>> This looks like an NMEA GPS format. Eg DDDMM.mmmmm
>>
>> You might need to re-format the values to something like decimal  
>> degrees
>> (DDD.dddddddddd) or DD MM SS.ss to use proj for the conversion.
>>
>> Regards
>> Andrew
>>
>>
>
>
>





From scott.ellington at goisc.com  Wed Mar 28 05:53:53 2007
From: scott.ellington at goisc.com (Scott Ellington)
Date: Wed, 28 Mar 2007 08:53:53 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84
References: <4653132.1175045315827.JavaMail.root@elwamui-norfolk.atl.sa.earthlink.net>
Message-ID: <C261C1FB2368ED4782686F3D5BD16186911825@goisc-ex.goisc.com>

Hi,

Thanks for your response.  As I replied earlier, it appears in the latest versions of proj that you cannot avoid the datum transformation simply by removing the towgs84 parameter.  I am wondering if there is now a way to avoid the datum transformation without setting the input ellipsoid to match the output...

Scott

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Melita Kennedy
Sent: Tuesday, March 27, 2007 9:29 PM
To: proj at lists.maptools.org
Subject: Re: [Proj] mercator projection to spherical ellipsoid from WGS84

Scott,

The reason why you got different results in cs2cs the first time is because you set the input datum to wgs84 and you provided datum transformation parameters in +towgs84=0,0,0. The code did this: 

1. Input degrees were converted to XYZ (3D Cartesian) using wgs84 ellipsoid parameters
2. Datum transformation performed - no change because the parameters were zeroes
3. Output XYZ values converted to decimal degrees using sphere parameters 
4. Output degrees projected to Mercator

This causes a latitude shift that you won't see if the datum transformation code is bypassed or you set the input ellipsoid/sphere to match the output. 

Melita 

------------------------------
Date: Tue, 27 Mar 2007 11:10:04 -0400
From: "Scott Ellington" <scott.ellington at goisc.com>
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84:
	question
To: <proj at lists.maptools.org>

Hello,

I am trying to use mapserver to reproject some data I have so that it
will display on top of Microsoft's Virtual Earth.  VE uses a Mercator
projection with a spherical ellipsoid.  Details here:

http://msdn2.microsoft.com/en-us/library/bb259689.aspx

Unfortunately, I am having trouble working out the science behind
getting this reprojection working.  I have put together a set of proj
parameters to describe the output VE projection as so:

+proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0
+x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs

And my input data is in WGS84 lat/long:

+proj=latlong +datum=WGS84

However, specifying this as the input and output projection causes my
data to shift downward about 10 minutes of latitude.  I ran some tests
from the command line:

$ proj +proj=merc +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
+lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs
-84 30
-9350837.23     3503549.84  <---- This is correct

$ cs2cs +proj=latlong +datum=WGS84 +to +proj=merc +ellps=sphere
+a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0
+k=1.0
+units=m +towgs84=0,0,0 +no_defs
-84 30
-9350837.23     3482183.15 -5312.58 <--- Not correct.  Y value is
shifted downward

Yet, if I tell proj that my input data is already based on a spherical
ellipsoid, it works:

$ cs2cs +proj=latlong +ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0
+lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +no_defs +to +proj=merc
+ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0
+y_0=0 +k=1.0 +units=m +no_defs
-84 30
-9350837.23     3503549.84 0.00 <-- correct

So my workaround has been to specify the input projection in mapserver
as spherical, when it is not, it is WGS84.  My question is this:  Why is
it necessary to do this?  Is there another way to write this cs2cs
reprojection which will allow me to correctly specify my input
projection?

Thanks in advance,

Scott Ellington
------------------------------

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From roger at opq.se  Wed Mar 28 07:04:19 2007
From: roger at opq.se (Roger Oberholtzer)
Date: Wed, 28 Mar 2007 16:04:19 +0200
Subject: [Proj] ED50 from C API
Message-ID: <1175090659.16920.47.camel@acme.pacific>

I would like to convert WGS84 lat/longs from a GPS receiver into
northings and eastings in ED50, fixed in UTM zone 30N. I have tried the
following, but the results are always 100-150 meters off from what I
expect. What have I missed? I based this in the ESRI file in proj 4.4.9

Initialization (error checking removed here for clarity):

        // From GPS WGS84
        fromProj = pj_init_plus( "+proj=latlong "
                                                "+ellps=WGS84 "
                                                "+towgs84=0,0,0 "
                                                "+no_defs"):

        // To ED50
        toProj   = pj_init_plus( "+proj=utm "
                                                "+ellps=intl "
                                                "+zone=30 "
                                                "+units=m "
                                                "+no_defs"):

The call for each location:

        lng = LONG * DEGREE_TO_RADIAN;
        lat = LAT  * DEGREE_TO_RADIAN;
        alt = 0; // We do not give this a height

        pj_transform(fromProj, toProj, 1, 0, &lng, &lat, &alt);

For example: 

Input WGS84: lat=37.57508059 lng=-0.93032997 alt=0.00000000

Obtains: Easting=682771.459 Northing=4160841.260

But I am expecting: Easting=682876.090 Northing=4160892.020 

There is a difference in location of 116.293 meters.

The error is in the initialization step. I suspect it is something that
is not in the ESRI file that I need to add when doing this from the C
API. But what?

-- 
Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Tel: Int +46 8-615 60 20
Fax: Int +46 8-31 42 23



From warmerdam at pobox.com  Wed Mar 28 10:58:39 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 28 Mar 2007 13:58:39 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84
In-Reply-To: <C261C1FB2368ED4782686F3D5BD16186911825@goisc-ex.goisc.com>
References: <4653132.1175045315827.JavaMail.root@elwamui-norfolk.atl.sa.earthlink.net>
	<C261C1FB2368ED4782686F3D5BD16186911825@goisc-ex.goisc.com>
Message-ID: <460AACCF.5040409@pobox.com>

Scott Ellington wrote:
> Hi,
> 
> Thanks for your response.  As I replied earlier, it appears in the latest
> versions of proj that you cannot avoid the datum transformation simply by
> removing the towgs84 parameter.  I am wondering if there is now a way to
> avoid the datum transformation without setting the input ellipsoid to match
> the output...

Scott,

I don't think there is in a single cs2cs command, but if you really just want
to go from one projection to it's corresponding lat/long, and then from that
lat/long to projected coordinates on another datum/ellipsoid without doing
anything to the lat/long values, then you should chain it as two operations.

eg.
cs2cs +proj=utm +zone=11 +datum=WGS84 +to +proj=latlong +datum=WGS84
  | cs2cs +proj=latlong +ellps=sphere +to +proj=merc +ellps=sphere

This accurately represents what you want to do.  It could also be done
with two proj commands instead of using cs2cs.

I do think the whole issue of what cs2cs does to get from one datum/ellipsoid
to another when there is no useful transformation information needs to be
revisited.  It is causing no end of problems.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From scott.ellington at goisc.com  Wed Mar 28 10:14:55 2007
From: scott.ellington at goisc.com (Scott Ellington)
Date: Wed, 28 Mar 2007 13:14:55 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84
References: <4653132.1175045315827.JavaMail.root@elwamui-norfolk.atl.sa.earthlink.net><C261C1FB2368ED4782686F3D5BD16186911825@goisc-ex.goisc.com>
	<460AACCF.5040409@pobox.com>
Message-ID: <C261C1FB2368ED4782686F3D5BD16186911854@goisc-ex.goisc.com>

Hi Frank,

Thanks for responding.  Unfortunately, the issue manifests itself in mapserver so I don't think I can chain two commands together.

As for revisiting this issue, I think this would be helpful.  At the very least, I'd like the ability to avoid the datum transform as it used to be possible to do.  I can file a bug to keep this on the radar if you'd like.

Thanks,
Scott

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
Sent: Wednesday, March 28, 2007 1:59 PM
To: PROJ.4 and general Projections Discussions
Cc: Melita Kennedy
Subject: Re: [Proj] mercator projection to spherical ellipsoid from WGS84

Scott Ellington wrote:
> Hi,
> 
> Thanks for your response.  As I replied earlier, it appears in the latest
> versions of proj that you cannot avoid the datum transformation simply by
> removing the towgs84 parameter.  I am wondering if there is now a way to
> avoid the datum transformation without setting the input ellipsoid to match
> the output...

Scott,

I don't think there is in a single cs2cs command, but if you really just want
to go from one projection to it's corresponding lat/long, and then from that
lat/long to projected coordinates on another datum/ellipsoid without doing
anything to the lat/long values, then you should chain it as two operations.

eg.
cs2cs +proj=utm +zone=11 +datum=WGS84 +to +proj=latlong +datum=WGS84
  | cs2cs +proj=latlong +ellps=sphere +to +proj=merc +ellps=sphere

This accurately represents what you want to do.  It could also be done
with two proj commands instead of using cs2cs.

I do think the whole issue of what cs2cs does to get from one datum/ellipsoid
to another when there is no useful transformation information needs to be
revisited.  It is causing no end of problems.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From warmerdam at pobox.com  Wed Mar 28 11:58:47 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 28 Mar 2007 14:58:47 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84
In-Reply-To: <C261C1FB2368ED4782686F3D5BD16186911854@goisc-ex.goisc.com>
References: <4653132.1175045315827.JavaMail.root@elwamui-norfolk.atl.sa.earthlink.net><C261C1FB2368ED4782686F3D5BD16186911825@goisc-ex.goisc.com>
	<460AACCF.5040409@pobox.com>
	<C261C1FB2368ED4782686F3D5BD16186911854@goisc-ex.goisc.com>
Message-ID: <460ABAE7.2000504@pobox.com>

Scott Ellington wrote:
> Hi Frank,
> 
> Thanks for responding.  Unfortunately, the issue manifests itself in
> mapserver so I don't think I can chain two commands together.
> 
> As for revisiting this issue, I think this would be helpful.  At the very
> least, I'd like the ability to avoid the datum transform as it used to be
> possible to do.  I can file a bug to keep this on the radar if you'd like.

Scott,

I see what you mean.  OK, file a ticket against PROJ.4.

I'm interested in suggestions from the community on what pj_datum_transform()
ought to do when the source and destination coordinate systems have different
ellipsoids, but one, the other, or both lack a definition of how to get
to WGS84.

Currently the code looks like this, which I hope is reasonably understandable
based on function names and comments.

int pj_datum_transform( PJ *srcdefn, PJ *dstdefn,
                         long point_count, int point_offset,
                         double *x, double *y, double *z )

{
     double      src_a, src_es, dst_a, dst_es;
     int         z_is_temp = FALSE;

     pj_errno = 0;

/* -------------------------------------------------------------------- */
/*      Short cut if the datums are identical.                          */
/* -------------------------------------------------------------------- */
     if( pj_compare_datums( srcdefn, dstdefn ) )
         return 0;

     src_a = srcdefn->a;
     src_es = srcdefn->es;

     dst_a = dstdefn->a;
     dst_es = dstdefn->es;

/* -------------------------------------------------------------------- */
/*      Create a temporary Z array if one is not provided.              */
/* -------------------------------------------------------------------- */
     if( z == NULL )
     {
         int	bytes = sizeof(double) * point_count * point_offset;
         z = (double *) pj_malloc(bytes);
         memset( z, 0, bytes );
         z_is_temp = TRUE;
     }

#define CHECK_RETURN {if( pj_errno != 0 && (pj_errno > 0 || 
transient_error[-pj_errno] == 0) ) { if( z_is_temp ) pj_dalloc(z); return 
pj_errno; }}

/* -------------------------------------------------------------------- */
/*	If this datum requires grid shifts, then apply it to geodetic   */
/*      coordinates.                                                    */
/* -------------------------------------------------------------------- */
     if( srcdefn->datum_type == PJD_GRIDSHIFT )
     {
         pj_apply_gridshift( pj_param(srcdefn->params,"snadgrids").s, 0,
                             point_count, point_offset, x, y, z );
         CHECK_RETURN;

         src_a = SRS_WGS84_SEMIMAJOR;
         src_es = SRS_WGS84_ESQUARED;
     }

     if( dstdefn->datum_type == PJD_GRIDSHIFT )
     {
         dst_a = SRS_WGS84_SEMIMAJOR;
         dst_es = SRS_WGS84_ESQUARED;
     }

/* ==================================================================== */
/*      Do we need to go through geocentric coordinates?                */
/* ==================================================================== */
     if( src_es != dst_es || src_a != dst_a
         || srcdefn->datum_type == PJD_3PARAM
         || srcdefn->datum_type == PJD_7PARAM
         || dstdefn->datum_type == PJD_3PARAM
         || dstdefn->datum_type == PJD_7PARAM)
     {
/* -------------------------------------------------------------------- */
/*      Convert to geocentric coordinates.                              */
/* -------------------------------------------------------------------- */
         pj_geodetic_to_geocentric( src_a, src_es,
                                    point_count, point_offset, x, y, z );
         CHECK_RETURN;

/* -------------------------------------------------------------------- */
/*      Convert between datums.                                         */
/* -------------------------------------------------------------------- */
         if( srcdefn->datum_type == PJD_3PARAM
             || srcdefn->datum_type == PJD_7PARAM )
         {
             pj_geocentric_to_wgs84( srcdefn, point_count, point_offset,x,y,z);
             CHECK_RETURN;
         }

         if( dstdefn->datum_type == PJD_3PARAM
             || dstdefn->datum_type == PJD_7PARAM )
         {
             pj_geocentric_from_wgs84( dstdefn, point_count,point_offset,x,y,z);
             CHECK_RETURN;
         }

/* -------------------------------------------------------------------- */
/*      Convert back to geodetic coordinates.                           */
/* -------------------------------------------------------------------- */
         pj_geocentric_to_geodetic( dst_a, dst_es,
                                    point_count, point_offset, x, y, z );
         CHECK_RETURN;
     }

/* -------------------------------------------------------------------- */
/*      Apply grid shift to destination if required.                    */
/* -------------------------------------------------------------------- */
     if( dstdefn->datum_type == PJD_GRIDSHIFT )
     {
         pj_apply_gridshift( pj_param(dstdefn->params,"snadgrids").s, 1,
                             point_count, point_offset, x, y, z );
         CHECK_RETURN;
     }

     if( z_is_temp )
         pj_dalloc( z );

     return 0;
}

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From scott.ellington at goisc.com  Wed Mar 28 13:13:57 2007
From: scott.ellington at goisc.com (Scott Ellington)
Date: Wed, 28 Mar 2007 16:13:57 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84
References: <4653132.1175045315827.JavaMail.root@elwamui-norfolk.atl.sa.earthlink.net><C261C1FB2368ED4782686F3D5BD16186911825@goisc-ex.goisc.com><460AACCF.5040409@pobox.com><C261C1FB2368ED4782686F3D5BD16186911854@goisc-ex.goisc.com>
	<460ABAE7.2000504@pobox.com>
Message-ID: <C261C1FB2368ED4782686F3D5BD1618691187C@goisc-ex.goisc.com>

Filed:

http://bugzilla.remotesensing.org/show_bug.cgi?id=1533

Scott

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
Sent: Wednesday, March 28, 2007 2:59 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] mercator projection to spherical ellipsoid from WGS84

Scott Ellington wrote:
> Hi Frank,
> 
> Thanks for responding.  Unfortunately, the issue manifests itself in
> mapserver so I don't think I can chain two commands together.
> 
> As for revisiting this issue, I think this would be helpful.  At the very
> least, I'd like the ability to avoid the datum transform as it used to be
> possible to do.  I can file a bug to keep this on the radar if you'd like.

Scott,

I see what you mean.  OK, file a ticket against PROJ.4.

I'm interested in suggestions from the community on what pj_datum_transform()
ought to do when the source and destination coordinate systems have different
ellipsoids, but one, the other, or both lack a definition of how to get
to WGS84.

Currently the code looks like this, which I hope is reasonably understandable
based on function names and comments.

int pj_datum_transform( PJ *srcdefn, PJ *dstdefn,
                         long point_count, int point_offset,
                         double *x, double *y, double *z )

{
     double      src_a, src_es, dst_a, dst_es;
     int         z_is_temp = FALSE;

     pj_errno = 0;

/* -------------------------------------------------------------------- */
/*      Short cut if the datums are identical.                          */
/* -------------------------------------------------------------------- */
     if( pj_compare_datums( srcdefn, dstdefn ) )
         return 0;

     src_a = srcdefn->a;
     src_es = srcdefn->es;

     dst_a = dstdefn->a;
     dst_es = dstdefn->es;

/* -------------------------------------------------------------------- */
/*      Create a temporary Z array if one is not provided.              */
/* -------------------------------------------------------------------- */
     if( z == NULL )
     {
         int	bytes = sizeof(double) * point_count * point_offset;
         z = (double *) pj_malloc(bytes);
         memset( z, 0, bytes );
         z_is_temp = TRUE;
     }

#define CHECK_RETURN {if( pj_errno != 0 && (pj_errno > 0 || 
transient_error[-pj_errno] == 0) ) { if( z_is_temp ) pj_dalloc(z); return 
pj_errno; }}

/* -------------------------------------------------------------------- */
/*	If this datum requires grid shifts, then apply it to geodetic   */
/*      coordinates.                                                    */
/* -------------------------------------------------------------------- */
     if( srcdefn->datum_type == PJD_GRIDSHIFT )
     {
         pj_apply_gridshift( pj_param(srcdefn->params,"snadgrids").s, 0,
                             point_count, point_offset, x, y, z );
         CHECK_RETURN;

         src_a = SRS_WGS84_SEMIMAJOR;
         src_es = SRS_WGS84_ESQUARED;
     }

     if( dstdefn->datum_type == PJD_GRIDSHIFT )
     {
         dst_a = SRS_WGS84_SEMIMAJOR;
         dst_es = SRS_WGS84_ESQUARED;
     }

/* ==================================================================== */
/*      Do we need to go through geocentric coordinates?                */
/* ==================================================================== */
     if( src_es != dst_es || src_a != dst_a
         || srcdefn->datum_type == PJD_3PARAM
         || srcdefn->datum_type == PJD_7PARAM
         || dstdefn->datum_type == PJD_3PARAM
         || dstdefn->datum_type == PJD_7PARAM)
     {
/* -------------------------------------------------------------------- */
/*      Convert to geocentric coordinates.                              */
/* -------------------------------------------------------------------- */
         pj_geodetic_to_geocentric( src_a, src_es,
                                    point_count, point_offset, x, y, z );
         CHECK_RETURN;

/* -------------------------------------------------------------------- */
/*      Convert between datums.                                         */
/* -------------------------------------------------------------------- */
         if( srcdefn->datum_type == PJD_3PARAM
             || srcdefn->datum_type == PJD_7PARAM )
         {
             pj_geocentric_to_wgs84( srcdefn, point_count, point_offset,x,y,z);
             CHECK_RETURN;
         }

         if( dstdefn->datum_type == PJD_3PARAM
             || dstdefn->datum_type == PJD_7PARAM )
         {
             pj_geocentric_from_wgs84( dstdefn, point_count,point_offset,x,y,z);
             CHECK_RETURN;
         }

/* -------------------------------------------------------------------- */
/*      Convert back to geodetic coordinates.                           */
/* -------------------------------------------------------------------- */
         pj_geocentric_to_geodetic( dst_a, dst_es,
                                    point_count, point_offset, x, y, z );
         CHECK_RETURN;
     }

/* -------------------------------------------------------------------- */
/*      Apply grid shift to destination if required.                    */
/* -------------------------------------------------------------------- */
     if( dstdefn->datum_type == PJD_GRIDSHIFT )
     {
         pj_apply_gridshift( pj_param(dstdefn->params,"snadgrids").s, 1,
                             point_count, point_offset, x, y, z );
         CHECK_RETURN;
     }

     if( z_is_temp )
         pj_dalloc( z );

     return 0;
}

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From massimodisasha at yahoo.it  Wed Mar 28 13:21:16 2007
From: massimodisasha at yahoo.it (Massimo Di Stefano)
Date: Wed, 28 Mar 2007 22:21:16 +0200
Subject: [Proj] Re: wgs point (lat-lon 'NMEA' to N-E 'metric')  
In-Reply-To: <200703281252.l2SCpmwn013406@duke.maptools.org>
References: <200703281252.l2SCpmwn013406@duke.maptools.org>
Message-ID: <A7F2402E-E393-4DBF-9913-DBCE40B0A998@yahoo.it>

Hi Hamish

Hi Eric

thanks for your time !


sorry for my distraction :-(
i know that i must divide the minute /60

... i modified my string to :


var="4051.1749|01415.5317"; lat="`echo \"(${var:2:2}.${var:5:2}${var: 
7:2} /60)"|bc -l`" ;lon="`echo \"(${var:13:2}.${var:16:2}${var:18:2} / 
60)"|bc -l`";echo "${var:0:2}$lat  ${var:10:3}$lon"

40.85291500000000000000  014.25886166666666666666

- are this coordinates  good for a proj conversion ?

if it is ...
can you suggest me a proj string to change from degres to metric  
coordinates ?

again:
... the proj conversion produce as result
a   LAT  -  LON   point

but grass reads the points (v.in.ascii)
as
LON - LAT

so i need to revert the order  of coordinates ($Lat  $Lon) > ($Lon   
$Lat)
  (right?)

p.s.
i prefer do not use gpsd, so i can write a module without external  
dependencies.
i know that gpsd is a really good software for this purpose!



Il giorno 28/mar/07, alle ore 14:52,  Hamish  
<hamish_nospam at yahoo.com> ha scritto:

> as for
>> 4051.1749 N  --> 40 51.1749 N --> 40.852915 N
>
> if data is fixed width you might add "cut" to awk,
>
> lat_deg=`echo "$input" | cut -c1-2`
> lat_min=`echo "$input" | cut -c3-9`
> lat_hem=`echo "$input" | cut -c11`
>
> lat_dm="${lat_deg}d${lat_min}${lat_hem}"
>
> $ echo $lat_dm
> 40d51.1749N
>
>
> which proj might be happy with.



From hamish_nospam at yahoo.com  Wed Mar 28 23:19:13 2007
From: hamish_nospam at yahoo.com (Hamish)
Date: Thu, 29 Mar 2007 18:19:13 +1200
Subject: [Proj] Re: wgs point (lat-lon 'NMEA' to N-E 'metric')
In-Reply-To: <A7F2402E-E393-4DBF-9913-DBCE40B0A998@yahoo.it>
References: <200703281252.l2SCpmwn013406@duke.maptools.org>
	<A7F2402E-E393-4DBF-9913-DBCE40B0A998@yahoo.it>
Message-ID: <20070329181913.6ea3ebcc.hamish_nospam@yahoo.com>

Massimo Di Stefano wrote:
> ... the proj conversion produce as result
> a   LAT  -  LON   point
> 
> but grass reads the points (v.in.ascii)
> as
> LON - LAT


v.in.ascii "standard mode" (ascii vector format): needs "x y" format.
(lon lat)

v.in.ascii "points mode" (e.g. .csv file): x,y data can be in any data
column, any order. use x= and y= to set which column each is in.


> so i need to revert the order of coordinates ($Lat  $Lon) > ($Lon > $Lat)
>   (right?)

echo "$data" | awk '{print $2 " " $1}'


Hamish


From roger at opq.se  Thu Mar 29 03:40:04 2007
From: roger at opq.se (Roger Oberholtzer)
Date: Thu, 29 Mar 2007 12:40:04 +0200
Subject: [Proj] ED50 from C API
In-Reply-To: <1175090659.16920.47.camel@acme.pacific>
References: <1175090659.16920.47.camel@acme.pacific>
Message-ID: <1175164806.6648.47.camel@acme.pacific>

Let me ask this another way:

proj has definitions for many conversions in the 'esri' file that that
it provides. These definitions appear to be used as changes from some
default initial settings. I say that as many say very little. The rest
must be specified elsewhere. When I want to add a new conversion via the
C API, I expect I could start by looking for an existing definition in
the 'esri' file. As the list can probably tell, each time I find I need
to add a new conversion, I never get it right and then ask the list.
Each time the corrections seem (to me) to be different. So, I am missing
some important part of the puzzle. Does no one else on the list use the
C API very much?

On Wed, 2007-03-28 at 16:04 +0200, Roger Oberholtzer wrote:
> I would like to convert WGS84 lat/longs from a GPS receiver into
> northings and eastings in ED50, fixed in UTM zone 30N. I have tried the
> following, but the results are always 100-150 meters off from what I
> expect. What have I missed? I based this in the ESRI file in proj 4.4.9
> 
> Initialization (error checking removed here for clarity):
> 
>         // From GPS WGS84
>         fromProj = pj_init_plus( "+proj=latlong "
>                                                 "+ellps=WGS84 "
>                                                 "+towgs84=0,0,0 "
>                                                 "+no_defs"):
> 
>         // To ED50
>         toProj   = pj_init_plus( "+proj=utm "
>                                                 "+ellps=intl "
>                                                 "+zone=30 "
>                                                 "+units=m "
>                                                 "+no_defs"):
> 
> The call for each location:
> 
>         lng = LONG * DEGREE_TO_RADIAN;
>         lat = LAT  * DEGREE_TO_RADIAN;
>         alt = 0; // We do not give this a height
> 
>         pj_transform(fromProj, toProj, 1, 0, &lng, &lat, &alt);
> 
> For example: 
> 
> Input WGS84: lat=37.57508059 lng=-0.93032997 alt=0.00000000
> 
> Obtains: Easting=682771.459 Northing=4160841.260
> 
> But I am expecting: Easting=682876.090 Northing=4160892.020 
> 
> There is a difference in location of 116.293 meters.
> 
> The error is in the initialization step. I suspect it is something that
> is not in the ESRI file that I need to add when doing this from the C
> API. But what?
> 
-- 
Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Tel: Int +46 8-615 60 20
Fax: Int +46 8-31 42 23



From EMiller at dfg.ca.gov  Thu Mar 29 09:05:27 2007
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Thu, 29 Mar 2007 09:05:27 -0700
Subject: [Proj] ED50 from C API
In-Reply-To: <1175164806.6648.47.camel@acme.pacific>
References: <1175090659.16920.47.camel@acme.pacific>
	<1175164806.6648.47.camel@acme.pacific>
Message-ID: <460B816C.95FD.00E4.0@dfg.ca.gov>

I don't know about the "esri" file, but you have two different ellipsoids and no information to convert between the different models.  Don't you need a datum or towwg84 parameter for the ED50 definition?  I think the ED50 towgs84 parameters are missing because there is more than one candidate.  See, http://crs.bkg.bund.de/crs-eu/

There isn't really much difference between using cs2cs and pj_transform.  The init strings are the same.  Same for proj and pj_fwd/pj_inv.

>>> On 3/29/2007 at 3:40 AM, Roger Oberholtzer <roger at opq.se> wrote:
> Let me ask this another way:
> 
> proj has definitions for many conversions in the 'esri' file that that
> it provides. These definitions appear to be used as changes from some
> default initial settings. I say that as many say very little. The rest
> must be specified elsewhere. When I want to add a new conversion via the
> C API, I expect I could start by looking for an existing definition in
> the 'esri' file. As the list can probably tell, each time I find I need
> to add a new conversion, I never get it right and then ask the list.
> Each time the corrections seem (to me) to be different. So, I am missing
> some important part of the puzzle. Does no one else on the list use the
> C API very much?
> 
> On Wed, 2007-03-28 at 16:04 +0200, Roger Oberholtzer wrote:
>> I would like to convert WGS84 lat/longs from a GPS receiver into
>> northings and eastings in ED50, fixed in UTM zone 30N. I have tried the
>> following, but the results are always 100-150 meters off from what I
>> expect. What have I missed? I based this in the ESRI file in proj 4.4.9
>> 
>> Initialization (error checking removed here for clarity):
>> 
>>         // From GPS WGS84
>>         fromProj = pj_init_plus( "+proj=latlong "
>>                                                 "+ellps=WGS84 "
>>                                                 "+towgs84=0,0,0 "
>>                                                 "+no_defs"):
>> 
>>         // To ED50
>>         toProj   = pj_init_plus( "+proj=utm "
>>                                                 "+ellps=intl "
>>                                                 "+zone=30 "
>>                                                 "+units=m "
>>                                                 "+no_defs"):
>> 
>> The call for each location:
>> 
>>         lng = LONG * DEGREE_TO_RADIAN;
>>         lat = LAT  * DEGREE_TO_RADIAN;
>>         alt = 0; // We do not give this a height
>> 
>>         pj_transform(fromProj, toProj, 1, 0, &lng, &lat, &alt);
>> 
>> For example: 
>> 
>> Input WGS84: lat=37.57508059 lng=-0.93032997 alt=0.00000000
>> 
>> Obtains: Easting=682771.459 Northing=4160841.260
>> 
>> But I am expecting: Easting=682876.090 Northing=4160892.020 
>> 
>> There is a difference in location of 116.293 meters.
>> 
>> The error is in the initialization step. I suspect it is something that
>> is not in the ESRI file that I need to add when doing this from the C
>> API. But what?
>> 
> -- 
> Roger Oberholtzer
> 
> OPQ Systems / Ramböll RST
> 
> Ramböll Sverige AB
> Kapellgränd 7
> P.O. Box 4205
> SE-102 65 Stockholm, Sweden
> 
> Tel: Int +46 8-615 60 20
> Fax: Int +46 8-31 42 23
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj




From roger at opq.se  Thu Mar 29 23:32:20 2007
From: roger at opq.se (Roger Oberholtzer)
Date: Fri, 30 Mar 2007 08:32:20 +0200
Subject: [Proj] ED50 from C API
In-Reply-To: <460B816C.95FD.00E4.0@dfg.ca.gov>
References: <1175090659.16920.47.camel@acme.pacific>
	<1175164806.6648.47.camel@acme.pacific>
	<460B816C.95FD.00E4.0@dfg.ca.gov>
Message-ID: <1175236341.24932.14.camel@acme.pacific>

On Thu, 2007-03-29 at 09:05 -0700, Eric Miller wrote:
> I don't know about the "esri" file, but you have two different ellipsoids and no information to convert between the different models.  Don't you need a datum or towwg84 parameter for the ED50 definition?  I think the ED50 towgs84 parameters are missing because there is more than one candidate.  See, http://crs.bkg.bund.de/crs-eu/
> 
> There isn't really much difference between using cs2cs and pj_transform.  The init strings are the same.  Same for proj and pj_fwd/pj_inv.

I have since tried a few ED50 definitions to see which is closest to the
target locations:

"+towgs84=-87,-98,-121 "     // "EUROPEAN 1950, Mean"

"+towgs84=-87,-96,-120 "     // "EUROPEAN 1950, Western Europe"

"+towgs84=-84,-107,-120 "       // "EUROPEAN 1950, Portugal &
Spain" (best)

"+towgs84=-86,-98,-119 "     // "EUROPEAN 1979"

The best is "+towgs84=-84,-107,-120 ", which gets me to within 5 meters.
Still too far, but better.

It still remains a mystery to me how anyone actually uses the esri file
when it is quite often incomplete. To the point it does not work at all.
Especially for a conversion as 'big' as one used for all roads in Spain.

Perhaps proj needs its own file that contains complete working
definitions? proj is a great library. But without proper definitions is
is less useful than it could be. I understand the complexity of the
thing since so many things can be converted into so many things,
resulting in a zillion combinations. But there must be something
possible. Or is the solution staring me in the face and I just don't see
it? Do all users of proj make all the definitions locally (read
"reinvent the wheel")?

> >>> On 3/29/2007 at 3:40 AM, Roger Oberholtzer <roger at opq.se> wrote:
> > Let me ask this another way:
> > 
> > proj has definitions for many conversions in the 'esri' file that that
> > it provides. These definitions appear to be used as changes from some
> > default initial settings. I say that as many say very little. The rest
> > must be specified elsewhere. When I want to add a new conversion via the
> > C API, I expect I could start by looking for an existing definition in
> > the 'esri' file. As the list can probably tell, each time I find I need
> > to add a new conversion, I never get it right and then ask the list.
> > Each time the corrections seem (to me) to be different. So, I am missing
> > some important part of the puzzle. Does no one else on the list use the
> > C API very much?
> > 
> > On Wed, 2007-03-28 at 16:04 +0200, Roger Oberholtzer wrote:
> >> I would like to convert WGS84 lat/longs from a GPS receiver into
> >> northings and eastings in ED50, fixed in UTM zone 30N. I have tried the
> >> following, but the results are always 100-150 meters off from what I
> >> expect. What have I missed? I based this in the ESRI file in proj 4.4.9
> >> 
> >> Initialization (error checking removed here for clarity):
> >> 
> >>         // From GPS WGS84
> >>         fromProj = pj_init_plus( "+proj=latlong "
> >>                                                 "+ellps=WGS84 "
> >>                                                 "+towgs84=0,0,0 "
> >>                                                 "+no_defs"):
> >> 
> >>         // To ED50
> >>         toProj   = pj_init_plus( "+proj=utm "
> >>                                                 "+ellps=intl "
> >>                                                 "+zone=30 "
> >>                                                 "+units=m "
> >>                                                 "+no_defs"):
> >> 
> >> The call for each location:
> >> 
> >>         lng = LONG * DEGREE_TO_RADIAN;
> >>         lat = LAT  * DEGREE_TO_RADIAN;
> >>         alt = 0; // We do not give this a height
> >> 
> >>         pj_transform(fromProj, toProj, 1, 0, &lng, &lat, &alt);
> >> 
> >> For example: 
> >> 
> >> Input WGS84: lat=37.57508059 lng=-0.93032997 alt=0.00000000
> >> 
> >> Obtains: Easting=682771.459 Northing=4160841.260
> >> 
> >> But I am expecting: Easting=682876.090 Northing=4160892.020 
> >> 
> >> There is a difference in location of 116.293 meters.
> >> 
> >> The error is in the initialization step. I suspect it is something that
> >> is not in the ESRI file that I need to add when doing this from the C
> >> API. But what?
> >> 
> > -- 
> > Roger Oberholtzer
> > 
> > OPQ Systems / Ramböll RST
> > 
> > Ramböll Sverige AB
> > Kapellgränd 7
> > P.O. Box 4205
> > SE-102 65 Stockholm, Sweden
> > 
> > Tel: Int +46 8-615 60 20
> > Fax: Int +46 8-31 42 23
> > 
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org 
> > http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-- 
Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Tel: Int +46 8-615 60 20
Fax: Int +46 8-31 42 23



From warmerdam at pobox.com  Fri Mar 30 09:23:59 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 30 Mar 2007 12:23:59 -0400
Subject: [Proj] ED50 from C API
In-Reply-To: <1175236341.24932.14.camel@acme.pacific>
References: <1175090659.16920.47.camel@acme.pacific>
	<1175164806.6648.47.camel@acme.pacific>
	<460B816C.95FD.00E4.0@dfg.ca.gov>
	<1175236341.24932.14.camel@acme.pacific>
Message-ID: <460D399F.5060605@pobox.com>

Roger Oberholtzer wrote:
> On Thu, 2007-03-29 at 09:05 -0700, Eric Miller wrote:
>> I don't know about the "esri" file, but you have two different ellipsoids and no information to convert between the different models.  Don't you need a datum or towwg84 parameter for the ED50 definition?  I think the ED50 towgs84 parameters are missing because there is more than one candidate.  See, http://crs.bkg.bund.de/crs-eu/
>>
>> There isn't really much difference between using cs2cs and pj_transform.  The init strings are the same.  Same for proj and pj_fwd/pj_inv.
> 
> I have since tried a few ED50 definitions to see which is closest to the
> target locations:
> 
> "+towgs84=-87,-98,-121 "     // "EUROPEAN 1950, Mean"
> 
> "+towgs84=-87,-96,-120 "     // "EUROPEAN 1950, Western Europe"
> 
> "+towgs84=-84,-107,-120 "       // "EUROPEAN 1950, Portugal &
> Spain" (best)
> 
> "+towgs84=-86,-98,-119 "     // "EUROPEAN 1979"
> 
> The best is "+towgs84=-84,-107,-120 ", which gets me to within 5 meters.
> Still too far, but better.
> 
> It still remains a mystery to me how anyone actually uses the esri file
> when it is quite often incomplete. To the point it does not work at all.
> Especially for a conversion as 'big' as one used for all roads in Spain.

Roger,

I'm afraid I haven't been following this thread closely.  Is this incomplete
in the sense of missing the datum shift, or missing the actual projection
definition?

The "esri" file was a bulk translation I did some time ago and is not,
to the best of my knowledge, widely used.  Nor have I done much review
of it.  There may have been errors in translation beyond the fact that
the bulk translator doesn't know how to handle some projections.

> Perhaps proj needs its own file that contains complete working
> definitions? proj is a great library. But without proper definitions is
> is less useful than it could be. I understand the complexity of the
> thing since so many things can be converted into so many things,
> resulting in a zillion combinations. But there must be something
> possible. Or is the solution staring me in the face and I just don't see
> it? Do all users of proj make all the definitions locally (read
> "reinvent the wheel")?

It has several files with definitions, but it is important to be able
to relate coordinate systems in PROJ with coordinate systems in other
software, or according to well known standards like EPSG.

And there is generally no single agreed on best datum shift solution
for a given datum so it is hard to handle this in an authoritative way.

I share your frustration, but PROJ trying to produce an authoritative
and complete set of coordinate systems on it's own is not practical!

I do think anyone wanting precision in transformations from an unusual
datum to WGS84 needs to be very aware of what datum shift parameters
are being used.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From warmerdam at pobox.com  Fri Mar 30 16:18:31 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 30 Mar 2007 19:18:31 -0400
Subject: [Proj] mercator projection to spherical ellipsoid from WGS84
In-Reply-To: <C261C1FB2368ED4782686F3D5BD1618691187C@goisc-ex.goisc.com>
References: <4653132.1175045315827.JavaMail.root@elwamui-norfolk.atl.sa.earthlink.net><C261C1FB2368ED4782686F3D5BD16186911825@goisc-ex.goisc.com><460AACCF.5040409@pobox.com><C261C1FB2368ED4782686F3D5BD16186911854@goisc-ex.goisc.com>
	<460ABAE7.2000504@pobox.com>
	<C261C1FB2368ED4782686F3D5BD1618691187C@goisc-ex.goisc.com>
Message-ID: <460D9AC7.4090303@pobox.com>

Folks,

To follow up on this, I have discovered a solution!    The solution
is to add +nadgrids=@null to the mercator translation.

eg.
warmerda at amd64[122]% cs2cs +proj=latlong +datum=WGS84 +to +proj=merc
+ellps=sphere +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0
+k=1.0 +units=m +nadgrids=@null +no_defs
-84 30
-9350837.23     3503549.84 -0.00

What this does is tell PROJ.4 to use the grid shift fill "null" to
convert lat/long coordinates on this datum/ellipse to WGS84.  The null file
applies no shift, and prefixing it with "@" tells PROJ.4 to proceed without
error after applying no change if the grid shift file can't be found.

I have added an entry in the FAQ on this (it may not be on the web site yet):

  http://proj.maptools.org/faq.html#sphere_as_wgs84

Let me know if people have suggested rewording.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From nabble at souiki.org  Sat Mar 31 15:59:45 2007
From: nabble at souiki.org (Zindine)
Date: Sat, 31 Mar 2007 15:59:45 -0700 (PDT)
Subject: [Proj] Tansverse Mercator South Oriented question
Message-ID: <9773150.post@talk.nabble.com>


I have the PROJCS below defined and it does not get validated by OGR. 

I receive the error: OGRERR_UNSUPPORTED_SRS. 

It was simply defined as follow: 

	OGRSpatialReference    oTMSO;
	oTMSO.SetProjCS("TMSO Zone 29 / WGS84");
	oTMSO.SetWellKnownGeogCS( "WGS84" );
	oTMSO.SetTMSO(0,29,1,0,0);


Can anyone help me find the error? Thanks. 


PROJCS[
		"unnamed"
		,GEOGCS[
			"WGS 84"
			,DATUM[
				"WGS_1984"
				,SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]]
				,TOWGS84[0,0,0,0,0,0,0]
				,AUTHORITY["EPSG","6326"]
			]
			,PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]]
			,UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9108"]]
			,AXIS["Lat",NORTH]
			,AXIS["Long",EAST]
			,AUTHORITY["EPSG","4326"]
		]
		,PROJECTION["Transverse_Mercator_South_Orientated"]
		,PARAMETER["latitude_of_origin",0]
		,PARAMETER["central_meridian",29]
		,PARAMETER["scale_factor",1]
		,PARAMETER["false_easting",0]
		,PARAMETER["false_northing",0]
]
-- 
View this message in context: http://www.nabble.com/Tansverse-Mercator-South-Oriented-question-tf3499417.html#a9773150
Sent from the PROJ.4 mailing list archive at Nabble.com.



