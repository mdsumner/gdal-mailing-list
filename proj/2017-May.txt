From thomas at itruesch.ch  Thu May 11 08:39:22 2017
From: thomas at itruesch.ch (=?iso-8859-1?Q?R=FCesch_Thomas?=)
Date: Thu, 11 May 2017 15:39:22 +0000
Subject: [Proj] WG: VB Net wrapper Proj.4
Message-ID: <6d59164bfa7441ad8bd1e7afc169003b@ITR-EX01.itr.ch>

Hi Eric

I'm upgrading my 32Bit application with an old proj_fw.dll to a 64Bit application.
So I found the Link to your VB Wrappers, but I was not able to download the Files
I found this link: http://ftp.dfg.ca.gov/Public/BDB/Tools/proj4/proj_api.zip

Is there a new link or is my firewall the problem

Thank you very much
Best regards
Thomas



IT Rüesch GmbH
Thomas Rüesch, Dachlissen 23, 8932 Mettmenstetten
079 266 60 14
www.itruesch.ch<http://www.itruesch.ch>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170511/08137a25/attachment.html>

From sebastic at xs4all.nl  Thu May 11 08:47:29 2017
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 11 May 2017 17:47:29 +0200
Subject: [Proj] WG: VB Net wrapper Proj.4
In-Reply-To: <6d59164bfa7441ad8bd1e7afc169003b@ITR-EX01.itr.ch>
References: <6d59164bfa7441ad8bd1e7afc169003b@ITR-EX01.itr.ch>
Message-ID: <65f271dd-3001-c30c-af65-a64f8802e0b9@xs4all.nl>

On 05/11/2017 05:39 PM, Rüesch Thomas wrote:
> I found this link: http://ftp.dfg.ca.gov/Public/BDB/Tools/proj4/proj_api.zip

That host is no longer available, but the file was archived:

 http://web.archive.org/web/*/http://ftp.dfg.ca.gov/Public/BDB/Tools/proj4/proj_api.zip

Kind regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1


From thomas at itruesch.ch  Thu May 11 09:14:41 2017
From: thomas at itruesch.ch (=?iso-8859-1?Q?R=FCesch_Thomas?=)
Date: Thu, 11 May 2017 16:14:41 +0000
Subject: [Proj] WG: VB Net wrapper Proj.4
In-Reply-To: <65f271dd-3001-c30c-af65-a64f8802e0b9@xs4all.nl>
References: <6d59164bfa7441ad8bd1e7afc169003b@ITR-EX01.itr.ch>
	<65f271dd-3001-c30c-af65-a64f8802e0b9@xs4all.nl>
Message-ID: <b32490d873c641c8adb78e6e6654d806@ITR-EX01.itr.ch>

Hi Bas
Thank you for the fast answer.
I got the file, which uses proj 4.4.6. with 32Bit
Is the a newer Version of the wrapper dll or one with 64 bit support?

Best regards
Thomas



IT Rüesch GmbH
Thomas Rüesch, Dachlissen 23, 8932 Mettmenstetten
079 266 60 14
www.itruesch.ch

-----Ursprüngliche Nachricht-----
Von: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] Im Auftrag von Sebastiaan Couwenberg
Gesendet: Donnerstag, 11. Mai 2017 17:47
An: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Betreff: Re: [Proj] WG: VB Net wrapper Proj.4

On 05/11/2017 05:39 PM, Rüesch Thomas wrote:
> I found this link: 
> http://ftp.dfg.ca.gov/Public/BDB/Tools/proj4/proj_api.zip

That host is no longer available, but the file was archived:

 http://web.archive.org/web/*/http://ftp.dfg.ca.gov/Public/BDB/Tools/proj4/proj_api.zip

Kind regards,

Bas

--
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1 _______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From even.rouault at spatialys.com  Sat May 20 14:06:21 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 20 May 2017 23:06:21 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
Message-ID: <3969021.hgAjN9nOUb@even-i700>

Hi,

OSS-Fuzz is Continuous Fuzzing for Open Source Software :
https://github.com/google/oss-fuzz/  (it has a good intro on what it consists of)

Basically OSS Fuzz checkouts the source code repo every day, builds it, runs fuzzing tools
on test program you create, files bugs when it finds some and notify developers,
and close them automatically once it has verified that a fix has been pushed to the repo
(within one or two days)

I've experimented in integrating proj.4 with it (after having used it successfully
in GDAL since more than one week)

If you have Docker installed, you can test it locally with :

git clone --branch=add_proj git at github.com:rouault/oss-fuzz.git
cd oss-fuzz
export PROJECT_NAME=proj4
python infra/helper.py build_image $PROJECT_NAME
# or --sanitizer undefined
python infra/helper.py build_fuzzers --sanitizer address $PROJECT_NAME
python infra/helper.py run_fuzzer $PROJECT_NAME standard_fuzzer

See https://github.com/google/oss-fuzz/blob/master/docs/new_project_guide.md for more details.

In a few seconds, it has found 2 issues for which I have a PR ready;
https://github.com/OSGeo/proj.4/pull/516
It is likely that more are pending...

The integration in OSS Fuzz is in 2 parts :
- a few new files to Google OSS Fuzz repository, mostly to mention the
proj.4 code source repo and bootstrap the build with fuzzers
https://github.com/google/oss-fuzz/compare/master...rouault:add_proj

- a few new files to proj.4 repository with the code to run under the fuzzer:
https://github.com/OSGeo/proj.4/compare/master...rouault:ossfuzz
I've create a simple fuzzer, fuzzers/standard_fuzzer.cpp, that checks that there
are 3 lines in the random (*) input provided by the fuzzer code to our code ,
takes the first one as a potential source proj.4 string, the second one as a
potential target proj.4 string, the third one as a potential pair of coordinates and
runs pj_transform() on it.
And that's it (we don't really care about the return of pj_transform() itself). If none of the above
crashes, raises undefined behaviour, leaks memory, allocates tons of memory or takes forever
to complete, things are good. Otherwise oss fuzz will raise a bug.
It would be easy to add fuzzer targets similar to the above to test other parts of the API.

QUESTION 1:
Are people happy if we submit 
https://github.com/google/oss-fuzz/compare/master...rouault:add_proj?expand=1
to Google - if they accept it since they are still in beta for now -, so they run it on
their clusters ? (actually the projects/proj4/Dockerfile will be modified to point to
proj.4 master instead of my clone, once I've merged my proj.4 ossfuzz branch to master)

If they don't accept it yet, we can also merge my proj.4 ossfuzz branch to master and
people interested can follow the above procedure to run it locally on their machine.

I've put Howard and Kristian in the CC list of bug notifications that will be privately accessible
in the first 90 days of their discovery.

QUESTION 2 to Howard and Kristian :
Please confirm you are interested in being CC'ed of bugs, and
tell me if the email I put is associated with a Google email account (if not, you
will not be able to access the bug details / bug list) :
https://github.com/google/oss-fuzz/compare/master...rouault:add_proj?expand=1#diff-76deaed2c7f4f80693f34903d9f7ae34
(actually I had an issue when I did the GDAL integration: it seems the email must be
a Google email, not just associated with a Google account)

If other proj.4 developers are interested, tell me and give me your Google email.

Even


(*) not so random input since the fuzzers are quite smart to build a relevant dictionnary, but
it is also possible to feed it with a relevant initial dictionnary too. For example we could
put some grid names, proj parameter names, etc...

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170520/027f52cb/attachment.html>

From kreve at sdfe.dk  Sat May 20 23:32:51 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Sun, 21 May 2017 06:32:51 +0000
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E99FDA7F0@S000014.PROD.SITAD.DK>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FDA7F0@S000014.PROD.SITAD.DK>
Message-ID: <2E885BB293AF0448A0181138489E9A0E99FDB81C@S000014.PROD.SITAD.DK>

Good stuff, Even! Glad you took the time to set it up.

Q1: Yes. I am happy with integrating PROJ.4 with OSS-Fuzz.

Q2: I'd like to be on the CC list. I dont' think I have my work email attached to my google account, so please change my address to kristianevers at gmail.com<mailto:kristianevers at gmail.com> instead.

It is a quite impressive thing google have created here. It is also quite elaborate, so it will probably take a while before I fully understand how it works.

/Kristian
________________________________
Fra: Even Rouault [even.rouault at spatialys.com]
Sendt: 20. maj 2017 23:06
Til: proj at lists.maptools.org<mailto:proj at lists.maptools.org>
Emne: Submitting proj.4 to Google OSS Fuzz ?

Hi,



OSS-Fuzz is Continuous Fuzzing for Open Source Software :

https://github.com/google/oss-fuzz/ (it has a good intro on what it consists of)



Basically OSS Fuzz checkouts the source code repo every day, builds it, runs fuzzing tools

on test program you create, files bugs when it finds some and notify developers,

and close them automatically once it has verified that a fix has been pushed to the repo

(within one or two days)



I've experimented in integrating proj.4 with it (after having used it successfully

in GDAL since more than one week)



If you have Docker installed, you can test it locally with :



git clone --branch=add_proj git at github.com:rouault/oss-fuzz.git<mailto:git at github.com:rouault/oss-fuzz.git>

cd oss-fuzz

export PROJECT_NAME=proj4

python infra/helper.py build_image $PROJECT_NAME

# or --sanitizer undefined

python infra/helper.py build_fuzzers --sanitizer address $PROJECT_NAME

python infra/helper.py run_fuzzer $PROJECT_NAME standard_fuzzer



See https://github.com/google/oss-fuzz/blob/master/docs/new_project_guide.md for more details.



In a few seconds, it has found 2 issues for which I have a PR ready;

https://github.com/OSGeo/proj.4/pull/516

It is likely that more are pending...



The integration in OSS Fuzz is in 2 parts :

- a few new files to Google OSS Fuzz repository, mostly to mention the

proj.4 code source repo and bootstrap the build with fuzzers

https://github.com/google/oss-fuzz/compare/master...rouault:add_proj



- a few new files to proj.4 repository with the code to run under the fuzzer:

https://github.com/OSGeo/proj.4/compare/master...rouault:ossfuzz

I've create a simple fuzzer, fuzzers/standard_fuzzer.cpp, that checks that there

are 3 lines in the random (*) input provided by the fuzzer code to our code ,

takes the first one as a potential source proj.4 string, the second one as a

potential target proj.4 string, the third one as a potential pair of coordinates and

runs pj_transform() on it.

And that's it (we don't really care about the return of pj_transform() itself). If none of the above

crashes, raises undefined behaviour, leaks memory, allocates tons of memory or takes forever

to complete, things are good. Otherwise oss fuzz will raise a bug.

It would be easy to add fuzzer targets similar to the above to test other parts of the API.



QUESTION 1:

Are people happy if we submit

https://github.com/google/oss-fuzz/compare/master...rouault:add_proj?expand=1

to Google - if they accept it since they are still in beta for now -, so they run it on

their clusters ? (actually the projects/proj4/Dockerfile will be modified to point to

proj.4 master instead of my clone, once I've merged my proj.4 ossfuzz branch to master)



If they don't accept it yet, we can also merge my proj.4 ossfuzz branch to master and

people interested can follow the above procedure to run it locally on their machine.



I've put Howard and Kristian in the CC list of bug notifications that will be privately accessible

in the first 90 days of their discovery.



QUESTION 2 to Howard and Kristian :

Please confirm you are interested in being CC'ed of bugs, and

tell me if the email I put is associated with a Google email account (if not, you

will not be able to access the bug details / bug list) :

https://github.com/google/oss-fuzz/compare/master...rouault:add_proj?expand=1#diff-76deaed2c7f4f80693f34903d9f7ae34

(actually I had an issue when I did the GDAL integration: it seems the email must be

a Google email, not just associated with a Google account)



If other proj.4 developers are interested, tell me and give me your Google email.



Even





(*) not so random input since the fuzzers are quite smart to build a relevant dictionnary, but

it is also possible to feed it with a relevant initial dictionnary too. For example we could

put some grid names, proj parameter names, etc...



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170521/b3416127/attachment.html>

From even.rouault at spatialys.com  Mon May 22 08:43:48 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 22 May 2017 17:43:48 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <3969021.hgAjN9nOUb@even-i700>
References: <3969021.hgAjN9nOUb@even-i700>
Message-ID: <1677326.L5sh3zmAEX@even-i700>

Hi,
> 
> OSS-Fuzz is Continuous Fuzzing for Open Source Software :
> https://github.com/google/oss-fuzz/  (it has a good intro on what it
> consists of)

Good news: proj.4 has just been accepted into OSS Fuzz !

https://bugs.chromium.org/p/oss-fuzz/issues/list?q=proj4 should be populated in a few 
hours...

For those wanting to tackle bugs, have a look at
https://github.com/OSGeo/proj.4/blob/master/test/fuzzers/README.TXT
for the procedure I suggest to follow.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170522/c9cd0232/attachment.html>

From kreve at sdfe.dk  Tue May 23 01:49:29 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 23 May 2017 08:49:29 +0000
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <1677326.L5sh3zmAEX@even-i700>
References: <3969021.hgAjN9nOUb@even-i700> <1677326.L5sh3zmAEX@even-i700>
Message-ID: <2E885BB293AF0448A0181138489E9A0E99FDF1A9@S000014.PROD.SITAD.DK>

Even,

Good news, indeed. And a bunch of bugs has already been found!

I am trying to reproduce them on my own system and struggling a bit on how. If I understand correctly I am supposed to compile the fuzzing target like so:

> g++ -g -std=c++11 standard_fuzzer.cpp -o standard_fuzzer -DSTANDALONE ../../src/.libs/libproj.a -lpthread

And then run the executable with the reproducer testcase file from OSS-Fuzz. After a bit of modification I got the standard_fuzzer working on my system (win7+mingw), but I don't know how to interpret the output when I run the program against the testcase. Everything seem to exit gracefully with return code 0. Is this normal or should I expect the program to crash in a noisy way?

/Kristian

Fra: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] På vegne af Even Rouault
Sendt: 22. maj 2017 17:44
Til: proj at lists.maptools.org
Emne: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?


Hi,

>

> OSS-Fuzz is Continuous Fuzzing for Open Source Software :

> https://github.com/google/oss-fuzz/ (it has a good intro on what it

> consists of)



Good news: proj.4 has just been accepted into OSS Fuzz !



https://bugs.chromium.org/p/oss-fuzz/issues/list?q=proj4 should be populated in a few hours...



For those wanting to tackle bugs, have a look at

https://github.com/OSGeo/proj.4/blob/master/test/fuzzers/README.TXT

for the procedure I suggest to follow.



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/22678265/attachment.html>

From even.rouault at spatialys.com  Tue May 23 02:29:01 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 May 2017 11:29:01 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E99FDF1A9@S000014.PROD.SITAD.DK>
References: <3969021.hgAjN9nOUb@even-i700> <1677326.L5sh3zmAEX@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FDF1A9@S000014.PROD.SITAD.DK>
Message-ID: <4453657.PEmC9RItfz@even-i700>

On mardi 23 mai 2017 08:49:29 CEST Kristian Evers wrote:
> Even,
> 
> Good news, indeed. And a bunch of bugs has already been found!
> 
> I am trying to reproduce them on my own system and struggling a bit on how. If I 
understand correctly I am supposed to compile the fuzzing target like so:
> > g++ -g -std=c++11 standard_fuzzer.cpp -o standard_fuzzer -DSTANDALONE
> > ../../src/.libs/libproj.a -lpthread
> And then run the executable with the reproducer testcase file from OSS-Fuzz.
> After a bit of modification I got the standard_fuzzer working on my system
> (win7+mingw), but I don't know how to interpret the output when I run the
> program against the testcase. Everything seem to exit gracefully with
> return code 0. Is this normal or should I expect the program to crash in a
> noisy way?

Kristian,

You may get obvious crashes in some cases, but some errors are memory leaks or more 
subtle memory misuses that will generally not result in a crash. I wouldn't use Windows to 
debug that (or perhaps with DrMemory ?) , but rather Linux + Valgrind
Or try building with -fsanitize=address,undefined in CFLAGS and LDFLAGS (that's what OSS 
Fuzz uses to detect issues) if they are supported on mingw

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/e0ee167f/attachment.html>

From even.rouault at spatialys.com  Tue May 23 02:55:33 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 May 2017 11:55:33 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <4453657.PEmC9RItfz@even-i700>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FDF1A9@S000014.PROD.SITAD.DK>
	<4453657.PEmC9RItfz@even-i700>
Message-ID: <3289556.yk58drF2v4@even-i700>

On mardi 23 mai 2017 11:29:01 CEST Even Rouault wrote:
> On mardi 23 mai 2017 08:49:29 CEST Kristian Evers wrote:
> > Even,
> > 
> > Good news, indeed. And a bunch of bugs has already been found!
> > 
> > I am trying to reproduce them on my own system and struggling a bit on
> > how. If I
> understand correctly I am supposed to compile the fuzzing target like so:
> > > g++ -g -std=c++11 standard_fuzzer.cpp -o standard_fuzzer -DSTANDALONE
> > > ../../src/.libs/libproj.a -lpthread
> > 
> > And then run the executable with the reproducer testcase file from
> > OSS-Fuzz. After a bit of modification I got the standard_fuzzer working
> > on my system (win7+mingw), but I don't know how to interpret the output
> > when I run the program against the testcase. Everything seem to exit
> > gracefully with return code 0. Is this normal or should I expect the
> > program to crash in a noisy way?
> 
> Kristian,
> 
> You may get obvious crashes in some cases, but some errors are memory leaks
> or more subtle memory misuses that will generally not result in a crash. I
> wouldn't use Windows to debug that (or perhaps with DrMemory ?) , but
> rather Linux + Valgrind Or try building with -fsanitize=address,undefined
> in CFLAGS and LDFLAGS (that's what OSS Fuzz uses to detect issues) if they
> are supported on mingw

I see a number of division by zero issues are reported. From my experience now with GDAL 
and OSS Fuzz, a number of them will not cause runtime crash. For example, when it is a 
floating point division by zero (contrary to integer division by zero which lead to crash). 
Apparently -fsanitize=undefined considers this as undefined behaviour.
I haven't looked at the details of the issues but perhaps we lack some validation of 
parameters and should probably refuse crazy values at pj_init() time (although I can see some 
validation done in pj_ell_set). More generally we should try to validate what we can at 
initialization time rather than in the forward or reverse methods of projections.

More generally I'd expect we have a lack of rubustness regarding those rather pedantic 
undefined behaviour warnings when feeding infinity, NaN and other such inputs either in 
proj.4 string or in coordinates (but given the way the fuzzer likely works, I don't think it is 
likely to try feeding "nan" or "inf" strings in the fuzzed input since nothing in the code 
compares against those strings. Perhas they should be added in a dictionary to make them 
more likely if we want to test for that)
It is also possible to whitelist / blacklist the type of sanitizers we want to use.
See the 'sanitizers' attribute of the project.yaml file: https://github.com/google/oss-fuzz/
blob/master/docs/new_project_guide.md

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/857b4a7f/attachment.html>

From kreve at sdfe.dk  Tue May 23 03:50:52 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 23 May 2017 10:50:52 +0000
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <3289556.yk58drF2v4@even-i700>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FDF1A9@S000014.PROD.SITAD.DK>
	<4453657.PEmC9RItfz@even-i700> <3289556.yk58drF2v4@even-i700>
Message-ID: <2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>

Even,

Windows is what I have on hand at work, so there's that... I am sure everything is a lot smoother on Linux. I'll try a bit more on windows and see if it is usable or not. I might modify the code slightly if my effort turn out successful.

I was specifically looking at one of the Division by zero errors (1801) and expected a proper crash, but as you have experienced with GDAL, nothing really happened. Better testing and rejection of input values are definitely a good place to start.

How is the fuzzer generating the input values? Completely at random, or does it somehow get help with setting up the proj-strings?

/Kristian


Fra: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] På vegne af Even Rouault
Sendt: 23. maj 2017 11:56
Til: proj at lists.maptools.org
Emne: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?


On mardi 23 mai 2017 11:29:01 CEST Even Rouault wrote:

> On mardi 23 mai 2017 08:49:29 CEST Kristian Evers wrote:

> > Even,

> >

> > Good news, indeed. And a bunch of bugs has already been found!

> >

> > I am trying to reproduce them on my own system and struggling a bit on

> > how. If I

> understand correctly I am supposed to compile the fuzzing target like so:

> > > g++ -g -std=c++11 standard_fuzzer.cpp -o standard_fuzzer -DSTANDALONE

> > > ../../src/.libs/libproj.a -lpthread

> >

> > And then run the executable with the reproducer testcase file from

> > OSS-Fuzz. After a bit of modification I got the standard_fuzzer working

> > on my system (win7+mingw), but I don't know how to interpret the output

> > when I run the program against the testcase. Everything seem to exit

> > gracefully with return code 0. Is this normal or should I expect the

> > program to crash in a noisy way?

>

> Kristian,

>

> You may get obvious crashes in some cases, but some errors are memory leaks

> or more subtle memory misuses that will generally not result in a crash. I

> wouldn't use Windows to debug that (or perhaps with DrMemory ?) , but

> rather Linux + Valgrind Or try building with -fsanitize=address,undefined

> in CFLAGS and LDFLAGS (that's what OSS Fuzz uses to detect issues) if they

> are supported on mingw



I see a number of division by zero issues are reported. From my experience now with GDAL and OSS Fuzz, a number of them will not cause runtime crash. For example, when it is a floating point division by zero (contrary to integer division by zero which lead to crash). Apparently -fsanitize=undefined considers this as undefined behaviour.

I haven't looked at the details of the issues but perhaps we lack some validation of parameters and should probably refuse crazy values at pj_init() time (although I can see some validation done in pj_ell_set). More generally we should try to validate what we can at initialization time rather than in the forward or reverse methods of projections.



More generally I'd expect we have a lack of rubustness regarding those rather pedantic undefined behaviour warnings when feeding infinity, NaN and other such inputs either in proj.4 string or in coordinates (but given the way the fuzzer likely works, I don't think it is likely to try feeding "nan" or "inf" strings in the fuzzed input since nothing in the code compares against those strings. Perhas they should be added in a dictionary to make them more likely if we want to test for that)

It is also possible to whitelist / blacklist the type of sanitizers we want to use.

See the 'sanitizers' attribute of the project.yaml file: https://github.com/google/oss-fuzz/blob/master/docs/new_project_guide.md



Even





--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/a6b9e5ef/attachment.html>

From schwehr at gmail.com  Tue May 23 05:12:29 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 23 May 2017 05:12:29 -0700
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FDF1A9@S000014.PROD.SITAD.DK>
	<4453657.PEmC9RItfz@even-i700> <3289556.yk58drF2v4@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
Message-ID: <CACmBxyvW354Ea-4ie15gMCcHbe0WexkmvrRGN5magd-FT1YObg@mail.gmail.com>

Kristian,

Thanks for joining OSS Fuzz.  I'm not on that team at Google, but I have
been doing a lot of fuzzing at Google in the last year.  Specifically GDAL
and Kakadu with a touch of GEOS.
https://github.com/schwehr/gdal-autotest2/tree/master/cpp   I live in a
space where code gets a ton of craziness sent at it at high volumns, so I
really appreciate the work you all are doing.

The very definition of undefined behavior means that the compiler is
allowed to do literally whatever it wants.  Common compilers usually try to
give you some value that will keep things moving forward... that makes them
especially difficult to find :(

If you are allowed to use docker (or anything else that will host a virtual
os) on your work machine, that can give you a linux environment where it
will be easier to find some of these.   I know that's often explicitly not
allowed at many places.

It definitely helps to be able to add extra logic and rerun with the same
ASAN setup.

You might also consider the free tier with Google Compute Engine or any of
the other cloud providers like Amazon/RedHat/etc.  I only really know
anything about the Google offerings since that's where I work, but the f1
micro instance is enough to checkout a copy of proj.4 and do some
debugging.  Just know that builds won't be particularly fast.

-Kurt
Engineer at Google

On Tue, May 23, 2017 at 3:50 AM, Kristian Evers <kreve at sdfe.dk> wrote:

> Even,
>
>
>
> Windows is what I have on hand at work, so there’s that… I am sure
> everything is a lot smoother on Linux. I’ll try a bit more on windows and
> see if it is usable or not. I might modify the code slightly if my effort
> turn out successful.
>
>
>
> I was specifically looking at one of the Division by zero errors (1801)
> and expected a proper crash, but as you have experienced with GDAL, nothing
> really happened. Better testing and rejection of input values are
> definitely a good place to start.
>
>
>
> How is the fuzzer generating the input values? Completely at random, or
> does it somehow get help with setting up the proj-strings?
>
>
>
> /Kristian
>
>
>
>
>
> *Fra:* proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.
> maptools.org] *På vegne af *Even Rouault
> *Sendt:* 23. maj 2017 11:56
> *Til:* proj at lists.maptools.org
> *Emne:* Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?
>
>
>
> On mardi 23 mai 2017 11:29:01 CEST Even Rouault wrote:
>
> > On mardi 23 mai 2017 08:49:29 CEST Kristian Evers wrote:
>
> > > Even,
>
> > >
>
> > > Good news, indeed. And a bunch of bugs has already been found!
>
> > >
>
> > > I am trying to reproduce them on my own system and struggling a bit on
>
> > > how. If I
>
> > understand correctly I am supposed to compile the fuzzing target like so:
>
> > > > g++ -g -std=c++11 standard_fuzzer.cpp -o standard_fuzzer -DSTANDALONE
>
> > > > ../../src/.libs/libproj.a -lpthread
>
> > >
>
> > > And then run the executable with the reproducer testcase file from
>
> > > OSS-Fuzz. After a bit of modification I got the standard_fuzzer working
>
> > > on my system (win7+mingw), but I don't know how to interpret the output
>
> > > when I run the program against the testcase. Everything seem to exit
>
> > > gracefully with return code 0. Is this normal or should I expect the
>
> > > program to crash in a noisy way?
>
> >
>
> > Kristian,
>
> >
>
> > You may get obvious crashes in some cases, but some errors are memory
> leaks
>
> > or more subtle memory misuses that will generally not result in a crash.
> I
>
> > wouldn't use Windows to debug that (or perhaps with DrMemory ?) , but
>
> > rather Linux + Valgrind Or try building with -fsanitize=address,undefined
>
> > in CFLAGS and LDFLAGS (that's what OSS Fuzz uses to detect issues) if
> they
>
> > are supported on mingw
>
>
>
> I see a number of division by zero issues are reported. From my experience
> now with GDAL and OSS Fuzz, a number of them will not cause runtime crash.
> For example, when it is a floating point division by zero (contrary to
> integer division by zero which lead to crash). Apparently
> -fsanitize=undefined considers this as undefined behaviour.
>
> I haven't looked at the details of the issues but perhaps we lack some
> validation of parameters and should probably refuse crazy values at
> pj_init() time (although I can see some validation done in pj_ell_set).
> More generally we should try to validate what we can at initialization time
> rather than in the forward or reverse methods of projections.
>
>
>
> More generally I'd expect we have a lack of rubustness regarding those
> rather pedantic undefined behaviour warnings when feeding infinity, NaN and
> other such inputs either in proj.4 string or in coordinates (but given the
> way the fuzzer likely works, I don't think it is likely to try feeding
> "nan" or "inf" strings in the fuzzed input since nothing in the code
> compares against those strings. Perhas they should be added in a
> dictionary to make them more likely if we want to test for that)
>
> It is also possible to whitelist / blacklist the type of sanitizers we
> want to use.
>
> See the 'sanitizers' attribute of the project.yaml file:
> https://github.com/google/oss-fuzz/blob/master/docs/new_project_guide.md
>
>
>
> Even
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/2e0c09e3/attachment.html>

From knudsen.thomas at gmail.com  Tue May 23 05:16:41 2017
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Tue, 23 May 2017 14:16:41 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FDF1A9@S000014.PROD.SITAD.DK>
	<4453657.PEmC9RItfz@even-i700> <3289556.yk58drF2v4@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
Message-ID: <CAH0YoEPO88kU9L=hf7qwbixXoqM1p2cxf=oeSCqsX3+BMRpXXg@mail.gmail.com>

In IEEE754 arithmetic, division by zero results in +/- infinity, not by a
crash.

Hence, crashes are only expected if dividing by integer zero, as
demonstrated below:

$ cat IEEE754_division_by_zero.c

#include <stdio.h>

int main (void) {
  double dresult, dzero = 0, dten = 10;
    int    iresult, izero = 0, iten = 10;
  puts ("Dividing by double zero");
  dresult = dten / dzero;
  printf ("dresult = %g\n", dresult);
  puts ("Dividing by integer zero");
  iresult = iten / izero;
  printf ("iresult = %d\n", iresult);
}

$ gcc ieee754division_by_zero.c
$ a
Dividing by double zero
dresult = 1.#INF
Dividing by integer zero

$

2017-05-23 12:50 GMT+02:00 Kristian Evers <kreve at sdfe.dk>:

> Even,
>
>
>
> Windows is what I have on hand at work, so there’s that… I am sure
> everything is a lot smoother on Linux. I’ll try a bit more on windows and
> see if it is usable or not. I might modify the code slightly if my effort
> turn out successful.
>
>
>
> I was specifically looking at one of the Division by zero errors (1801)
> and expected a proper crash, but as you have experienced with GDAL, nothing
> really happened. Better testing and rejection of input values are
> definitely a good place to start.
>
>
>
> How is the fuzzer generating the input values? Completely at random, or
> does it somehow get help with setting up the proj-strings?
>
>
>
> /Kristian
>
>
>
>
>
> *Fra:* proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.
> maptools.org] *På vegne af *Even Rouault
> *Sendt:* 23. maj 2017 11:56
> *Til:* proj at lists.maptools.org
> *Emne:* Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?
>
>
>
> On mardi 23 mai 2017 11:29:01 CEST Even Rouault wrote:
>
> > On mardi 23 mai 2017 08:49:29 CEST Kristian Evers wrote:
>
> > > Even,
>
> > >
>
> > > Good news, indeed. And a bunch of bugs has already been found!
>
> > >
>
> > > I am trying to reproduce them on my own system and struggling a bit on
>
> > > how. If I
>
> > understand correctly I am supposed to compile the fuzzing target like so:
>
> > > > g++ -g -std=c++11 standard_fuzzer.cpp -o standard_fuzzer -DSTANDALONE
>
> > > > ../../src/.libs/libproj.a -lpthread
>
> > >
>
> > > And then run the executable with the reproducer testcase file from
>
> > > OSS-Fuzz. After a bit of modification I got the standard_fuzzer working
>
> > > on my system (win7+mingw), but I don't know how to interpret the output
>
> > > when I run the program against the testcase. Everything seem to exit
>
> > > gracefully with return code 0. Is this normal or should I expect the
>
> > > program to crash in a noisy way?
>
> >
>
> > Kristian,
>
> >
>
> > You may get obvious crashes in some cases, but some errors are memory
> leaks
>
> > or more subtle memory misuses that will generally not result in a crash.
> I
>
> > wouldn't use Windows to debug that (or perhaps with DrMemory ?) , but
>
> > rather Linux + Valgrind Or try building with -fsanitize=address,undefined
>
> > in CFLAGS and LDFLAGS (that's what OSS Fuzz uses to detect issues) if
> they
>
> > are supported on mingw
>
>
>
> I see a number of division by zero issues are reported. From my experience
> now with GDAL and OSS Fuzz, a number of them will not cause runtime crash.
> For example, when it is a floating point division by zero (contrary to
> integer division by zero which lead to crash). Apparently
> -fsanitize=undefined considers this as undefined behaviour.
>
> I haven't looked at the details of the issues but perhaps we lack some
> validation of parameters and should probably refuse crazy values at
> pj_init() time (although I can see some validation done in pj_ell_set).
> More generally we should try to validate what we can at initialization time
> rather than in the forward or reverse methods of projections.
>
>
>
> More generally I'd expect we have a lack of rubustness regarding those
> rather pedantic undefined behaviour warnings when feeding infinity, NaN and
> other such inputs either in proj.4 string or in coordinates (but given the
> way the fuzzer likely works, I don't think it is likely to try feeding
> "nan" or "inf" strings in the fuzzed input since nothing in the code
> compares against those strings. Perhas they should be added in a
> dictionary to make them more likely if we want to test for that)
>
> It is also possible to whitelist / blacklist the type of sanitizers we
> want to use.
>
> See the 'sanitizers' attribute of the project.yaml file:
> https://github.com/google/oss-fuzz/blob/master/docs/new_project_guide.md
>
>
>
> Even
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/a1b9ec0c/attachment.html>

From even.rouault at spatialys.com  Tue May 23 05:30:17 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 May 2017 14:30:17 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
References: <3969021.hgAjN9nOUb@even-i700> <3289556.yk58drF2v4@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
Message-ID: <3048581.HWmMCVghyO@even-i700>

On mardi 23 mai 2017 10:50:52 CEST Kristian Evers wrote:
> Even,
> 
> Windows is what I have on hand at work, so there's that... I am sure
> everything is a lot smoother on Linux. I'll try a bit more on windows and
> see if it is usable or not. I might modify the code slightly if my effort
> turn out successful.

Perhaps you can install VirtualBox and a Ubuntu/whatever distro image in it ? But for some of 
the errors the log is in the ticket is already a good start.

> 
> I was specifically looking at one of the Division by zero errors (1801) and
> expected a proper crash, but as you have experienced with GDAL, nothing
> really happened.

Yes this is a floating point division. On Intel-like CPUs, floating point divisions by zero don't 
raise exceptions by default.

> Better testing and rejection of input values are
> definitely a good place to start.
> 
> How is the fuzzer generating the input values? Completely at random, or does
> it somehow get help with setting up the proj-strings?

No, not completely at random, that's all the interest ! It instruments the code during 
compilation and at runtime observes which branches are taken or not given the input. So it 
favors new inputs that increase code coverage. I suspect also there's some instrumentation 
of strcmp(x, "SOME_LITERAL") calls to add SOME_LITERAL in the dictionary. When you 
locally run oss-fuzz and you look at the logs, it is obvious it detects the basic elements of a 
proj.4 strings like "init", parameter names and projection names.

> 
> /Kristian
> 
> 
> Fra: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] På vegne af Even Rouault Sendt:
> 23. maj 2017 11:56
> Til: proj at lists.maptools.org
> Emne: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?
> 
> On mardi 23 mai 2017 11:29:01 CEST Even Rouault wrote:
> > On mardi 23 mai 2017 08:49:29 CEST Kristian Evers wrote:
> > > Even,
> > > 
> > > 
> > > 
> > > Good news, indeed. And a bunch of bugs has already been found!
> > > 
> > > 
> > > 
> > > I am trying to reproduce them on my own system and struggling a bit on
> > > 
> > > how. If I
> > 
> > understand correctly I am supposed to compile the fuzzing target like so:
> > > > g++ -g -std=c++11 standard_fuzzer.cpp -o standard_fuzzer -DSTANDALONE
> > > > 
> > > > ../../src/.libs/libproj.a -lpthread
> > > 
> > > And then run the executable with the reproducer testcase file from
> > > 
> > > OSS-Fuzz. After a bit of modification I got the standard_fuzzer working
> > > 
> > > on my system (win7+mingw), but I don't know how to interpret the output
> > > 
> > > when I run the program against the testcase. Everything seem to exit
> > > 
> > > gracefully with return code 0. Is this normal or should I expect the
> > > 
> > > program to crash in a noisy way?
> > 
> > Kristian,
> > 
> > 
> > 
> > You may get obvious crashes in some cases, but some errors are memory
> > leaks
> > 
> > or more subtle memory misuses that will generally not result in a crash. I
> > 
> > wouldn't use Windows to debug that (or perhaps with DrMemory ?) , but
> > 
> > rather Linux + Valgrind Or try building with -fsanitize=address,undefined
> > 
> > in CFLAGS and LDFLAGS (that's what OSS Fuzz uses to detect issues) if they
> > 
> > are supported on mingw
> 
> I see a number of division by zero issues are reported. From my experience
> now with GDAL and OSS Fuzz, a number of them will not cause runtime crash.
> For example, when it is a floating point division by zero (contrary to
> integer division by zero which lead to crash). Apparently
> -fsanitize=undefined considers this as undefined behaviour.
> 
> I haven't looked at the details of the issues but perhaps we lack some
> validation of parameters and should probably refuse crazy values at
> pj_init() time (although I can see some validation done in pj_ell_set).
> More generally we should try to validate what we can at initialization time
> rather than in the forward or reverse methods of projections.
> 
> 
> 
> More generally I'd expect we have a lack of rubustness regarding those
> rather pedantic undefined behaviour warnings when feeding infinity, NaN and
> other such inputs either in proj.4 string or in coordinates (but given the
> way the fuzzer likely works, I don't think it is likely to try feeding
> "nan" or "inf" strings in the fuzzed input since nothing in the code
> compares against those strings. Perhas they should be added in a dictionary
> to make them more likely if we want to test for that)
> 
> It is also possible to whitelist / blacklist the type of sanitizers we want
> to use.
> 
> See the 'sanitizers' attribute of the project.yaml file:
> https://github.com/google/oss-fuzz/blob/master/docs/new_project_guide.md
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/88bb5bb2/attachment.html>

From even.rouault at spatialys.com  Tue May 23 05:49:15 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 May 2017 14:49:15 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <CAH0YoEPO88kU9L=hf7qwbixXoqM1p2cxf=oeSCqsX3+BMRpXXg@mail.gmail.com>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
	<CAH0YoEPO88kU9L=hf7qwbixXoqM1p2cxf=oeSCqsX3+BMRpXXg@mail.gmail.com>
Message-ID: <2261799.0CsEkMQfSe@even-i700>

On mardi 23 mai 2017 14:16:41 CEST Thomas Knudsen wrote:
> In IEEE754 arithmetic, division by zero results in +/- infinity, not by a
> crash.
> 
> Hence, crashes are only expected if dividing by integer zero, as
> demonstrated below:
> 
> $ cat IEEE754_division_by_zero.c
> 
> #include <stdio.h>
> 
> int main (void) {
>   double dresult, dzero = 0, dten = 10;
>     int    iresult, izero = 0, iten = 10;
>   puts ("Dividing by double zero");
>   dresult = dten / dzero;
>   printf ("dresult = %g\n", dresult);
>   puts ("Dividing by integer zero");
>   iresult = iten / izero;
>   printf ("iresult = %d\n", iresult);
> }
> 
> $ gcc ieee754division_by_zero.c
> $ a
> Dividing by double zero
> dresult = 1.#INF
> Dividing by integer zero

https://stackoverflow.com/questions/3004095/division-by-zero-undefined-behavior-or-implementation-defined-in-c-and-or-c
has some interesting references.

So it would seem that according to the C standard, division by zero, either in integer
or floating-point case is undefined behaviour. And that's what -fsanitize=undefined must
check.

In practice on Intel-like CPUs, the behaviour is what you mention above,
but could potentially be different on other architectures, or with a compiler that would
implement the C standard in an extreme way (like "crash everytime we encounter
a situation that is 'unspecified bheaviour' in the standard")

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/15e15cb8/attachment.html>

From kreve at sdfe.dk  Tue May 23 06:41:50 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 23 May 2017 13:41:50 +0000
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2261799.0CsEkMQfSe@even-i700>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE0301@S000014.PROD.SITAD.DK>
	<CAH0YoEPO88kU9L=hf7qwbixXoqM1p2cxf=oeSCqsX3+BMRpXXg@mail.gmail.com>
	<2261799.0CsEkMQfSe@even-i700>
Message-ID: <2E885BB293AF0448A0181138489E9A0E99FE0484@S000014.PROD.SITAD.DK>

Kurt, Even,

Thanks for your suggestions. Very helpful. I do have access to a Linux server 
and if necessary I can work on that. It is just slightly inconvenient when on the move etc.


I must say, it is a very impressive piece software google has created! 
Although it is a bit hard to grasp the finer details :-) I think I can fix some
of the discovered issues just from looking at the report, as you suggest, Even.


The only way to triggers OSS-Fuzz to test code is to commit on the master-branch, correct?

/Kristian


From even.rouault at spatialys.com  Tue May 23 07:09:27 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 May 2017 16:09:27 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E99FE0484@S000014.PROD.SITAD.DK>
References: <3969021.hgAjN9nOUb@even-i700> <2261799.0CsEkMQfSe@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE0484@S000014.PROD.SITAD.DK>
Message-ID: <2824459.mg0UZqK6FH@even-i700>

On mardi 23 mai 2017 13:41:50 CEST Kristian Evers wrote:
> Kurt, Even,
> 
> Thanks for your suggestions. Very helpful. I do have access to a Linux
> server and if necessary I can work on that. It is just slightly
> inconvenient when on the move etc.
> 
> 
> I must say, it is a very impressive piece software google has created!
> Although it is a bit hard to grasp the finer details :-) I think I can fix
> some of the discovered issues just from looking at the report, as you
> suggest, Even.
> 
> 
> The only way to triggers OSS-Fuzz to test code is to commit on the
> master-branch, correct?

That's the most convenient. You can run OSS-Fuzz locally as instructed in proj.4 tests/fuzzers/
README.TXT (but you need Linux and Docker for that), and there you could point the oss-
fuzz/projects/proj4/Dockerfile to a branch of yours (that's how I tested it before submitting 
it)

> 
> /Kristian
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/c7818469/attachment.html>

From kreve at sdfe.dk  Tue May 23 07:24:11 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 23 May 2017 14:24:11 +0000
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2824459.mg0UZqK6FH@even-i700>
References: <3969021.hgAjN9nOUb@even-i700> <2261799.0CsEkMQfSe@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE0484@S000014.PROD.SITAD.DK>
	<2824459.mg0UZqK6FH@even-i700>
Message-ID: <2E885BB293AF0448A0181138489E9A0E99FE04DB@S000014.PROD.SITAD.DK>

> That's the most convenient. You can run OSS-Fuzz locally as instructed in proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for that), and there you could point the oss-fuzz/projects/proj4/Dockerfile to a branch of yours (that's how I tested it before submitting it)

Yeah, I figured. It would be super cool if you could trigger OSS-Fuzz targeting a specific bug via a pull request. Maybe that will be possible in the future...

Thanks for the help. I will try to run OSS-Fuzz locally to confirm fixes before I commit them to master.

Kristian

Fra: Even Rouault [mailto:even.rouault at spatialys.com]
Sendt: 23. maj 2017 16:09
Til: proj at lists.maptools.org
Cc: Kristian Evers
Emne: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?


On mardi 23 mai 2017 13:41:50 CEST Kristian Evers wrote:

> Kurt, Even,

>

> Thanks for your suggestions. Very helpful. I do have access to a Linux

> server and if necessary I can work on that. It is just slightly

> inconvenient when on the move etc.

>

>

> I must say, it is a very impressive piece software google has created!

> Although it is a bit hard to grasp the finer details :-) I think I can fix

> some of the discovered issues just from looking at the report, as you

> suggest, Even.

>

>

> The only way to triggers OSS-Fuzz to test code is to commit on the

> master-branch, correct?



That's the most convenient. You can run OSS-Fuzz locally as instructed in proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for that), and there you could point the oss-fuzz/projects/proj4/Dockerfile to a branch of yours (that's how I tested it before submitting it)



>

> /Kristian

> _______________________________________________

> Proj mailing list

> Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>

> http://lists.maptools.org/mailman/listinfo/proj





--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/fed444bc/attachment.html>

From even.rouault at spatialys.com  Tue May 23 08:23:32 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 May 2017 17:23:32 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E99FE04DB@S000014.PROD.SITAD.DK>
References: <3969021.hgAjN9nOUb@even-i700> <2824459.mg0UZqK6FH@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE04DB@S000014.PROD.SITAD.DK>
Message-ID: <4156983.OD700KQOcK@even-i700>

On mardi 23 mai 2017 14:24:11 CEST Kristian Evers wrote:
> > That's the most convenient. You can run OSS-Fuzz locally as instructed in
> > proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for that),
> > and there you could point the oss-fuzz/projects/proj4/Dockerfile to a
> > branch of yours (that's how I tested it before submitting it)
> Yeah, I figured. It would be super cool if you could trigger OSS-Fuzz
> targeting a specific bug via a pull request. Maybe that will be possible in
> the future...
> 
> Thanks for the help. I will try to run OSS-Fuzz locally to confirm fixes
> before I commit them to master.

Well, in that case that means you're running Linux, so build proj.4 with CFLAGS="-
fsanitize=undefined,address" and running the standalone standard_fuzzer should be 
sufficient (and much faster)

> 
> Kristian
> 
> Fra: Even Rouault [mailto:even.rouault at spatialys.com]
> Sendt: 23. maj 2017 16:09
> Til: proj at lists.maptools.org
> Cc: Kristian Evers
> Emne: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?
> 
> On mardi 23 mai 2017 13:41:50 CEST Kristian Evers wrote:
> > Kurt, Even,
> > 
> > 
> > 
> > Thanks for your suggestions. Very helpful. I do have access to a Linux
> > 
> > server and if necessary I can work on that. It is just slightly
> > 
> > inconvenient when on the move etc.
> > 
> > 
> > 
> > 
> > 
> > I must say, it is a very impressive piece software google has created!
> > 
> > Although it is a bit hard to grasp the finer details :-) I think I can fix
> > 
> > some of the discovered issues just from looking at the report, as you
> > 
> > suggest, Even.
> > 
> > 
> > 
> > 
> > 
> > The only way to triggers OSS-Fuzz to test code is to commit on the
> > 
> > master-branch, correct?
> 
> That's the most convenient. You can run OSS-Fuzz locally as instructed in
> proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for that),
> and there you could point the oss-fuzz/projects/proj4/Dockerfile to a
> branch of yours (that's how I tested it before submitting it)
> > /Kristian
> > 
> > _______________________________________________
> > 
> > Proj mailing list
> > 
> > Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
> > 
> > http://lists.maptools.org/mailman/listinfo/proj
> 
> --
> 
> Spatialys - Geospatial professional services
> 
> http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/0b19a293/attachment.html>

From even.rouault at spatialys.com  Tue May 23 10:51:01 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 May 2017 19:51:01 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <4156983.OD700KQOcK@even-i700>
References: <3969021.hgAjN9nOUb@even-i700>
	<2E885BB293AF0448A0181138489E9A0E99FE04DB@S000014.PROD.SITAD.DK>
	<4156983.OD700KQOcK@even-i700>
Message-ID: <8265442.mUgpA38i5W@even-i700>

On mardi 23 mai 2017 17:23:32 CEST Even Rouault wrote:
> On mardi 23 mai 2017 14:24:11 CEST Kristian Evers wrote:
> > > That's the most convenient. You can run OSS-Fuzz locally as instructed
> > > in
> > > proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for
> > > that),
> > > and there you could point the oss-fuzz/projects/proj4/Dockerfile to a
> > > branch of yours (that's how I tested it before submitting it)
> > 
> > Yeah, I figured. It would be super cool if you could trigger OSS-Fuzz
> > targeting a specific bug via a pull request. Maybe that will be possible
> > in
> > the future...
> > 
> > Thanks for the help. I will try to run OSS-Fuzz locally to confirm fixes
> > before I commit them to master.
> 
> Well, in that case that means you're running Linux, so build proj.4 with
> CFLAGS="- fsanitize=undefined,address" and running the standalone
> standard_fuzzer should be sufficient (and much faster)

Note: make sure the proj lib is built with a PROJ_LIB define that points to something valid, or 
define PROJ_LIB to point to the in-source nad directory when running standard_fuzzer as it 
can make a difference (in particular since the fuzzer might generate strings without +no_defs 
and ellipsoid values, and in that case they are valid due to nad/proj_def.dat containing 
ellps=WGS84. Whereas if you run standard_fuzzer with no valid PROJ_LIB you'll get an early 
exit due to proj_init() having failed. I've updated the example in test/fuzzers/README.TXT 
with that)

> 
> > Kristian
> > 
> > Fra: Even Rouault [mailto:even.rouault at spatialys.com]
> > Sendt: 23. maj 2017 16:09
> > Til: proj at lists.maptools.org
> > Cc: Kristian Evers
> > Emne: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?
> > 
> > On mardi 23 mai 2017 13:41:50 CEST Kristian Evers wrote:
> > > Kurt, Even,
> > > 
> > > 
> > > 
> > > Thanks for your suggestions. Very helpful. I do have access to a Linux
> > > 
> > > server and if necessary I can work on that. It is just slightly
> > > 
> > > inconvenient when on the move etc.
> > > 
> > > 
> > > 
> > > 
> > > 
> > > I must say, it is a very impressive piece software google has created!
> > > 
> > > Although it is a bit hard to grasp the finer details :-) I think I can
> > > fix
> > > 
> > > some of the discovered issues just from looking at the report, as you
> > > 
> > > suggest, Even.
> > > 
> > > 
> > > 
> > > 
> > > 
> > > The only way to triggers OSS-Fuzz to test code is to commit on the
> > > 
> > > master-branch, correct?
> > 
> > That's the most convenient. You can run OSS-Fuzz locally as instructed in
> > proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for that),
> > and there you could point the oss-fuzz/projects/proj4/Dockerfile to a
> > branch of yours (that's how I tested it before submitting it)
> > 
> > > /Kristian
> > > 
> > > _______________________________________________
> > > 
> > > Proj mailing list
> > > 
> > > Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
> > > 
> > > http://lists.maptools.org/mailman/listinfo/proj
> > 
> > --
> > 
> > Spatialys - Geospatial professional services
> > 
> > http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170523/f4623379/attachment.html>

From kreve at sdfe.dk  Wed May 24 06:14:42 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 24 May 2017 13:14:42 +0000
Subject: [Proj] Transformation pipelines paper
Message-ID: <2E885BB293AF0448A0181138489E9A0E99FE09D9@S000014.PROD.SITAD.DK>

All,

Thomas Knudsen and I have written a paper about the Transformation Pipelines
framework that have been introduced to PROJ.4 recently. We have submitted it
to the FIG Working Week 2017 which is held in Helsinki next week. I'll be
presenting the paper in the "Geodesy and Surveying Applications II" session on
Thursday June 1st. Please stop by and say hello if you are there.

The paper can be found at
http://www.fig.net/resources/proceedings/fig_proceedings/fig2017/papers/iss6b/ISS6B_evers_knudsen_9156.pdf
I have pasted in the abstract below.

In section 4, about transformation pipelines, we show case a few examples of
how transformation pipelines can be used. The examples all feature the new
and much improved implementation of the Helmert transform. Keeping the
lively discussion about the Helmert transform in March in mind I figure that the
paper will be of great interest to those involved in the discussion.

Happy reading,
Kristian

----------------------------------------------------------------------------------------------
TRANSFORMATION PIPELINES IN PROJ.4

For more than 2 decades, PROJ.4 has been the globally leading map projection
library for open source geospatial software. While focusing on mathematically
well-defined 2D projections from geographical to planar coordinates, PROJ.4
has nevertheless, since its introduction in the 1980s, provided limited
support for more general geodetic datum transformations, and has gradually
introduced a higher degree of support for 3D coordinate data and reference
systems.

The support has, however, been implemented over a long period of time, as
need became evident and opportunity was found, by a number of different
people, with different needs. Hence, the PROJ.4 3D support has not been the
result of neither deep geodetic, nor careful code architectural considerations.
This has resulted in a library that supports only a subset of commonly
occurring geodetic transformations. To be more specific: It supports any datum
shift that can be completed by a combination of two Helmert shifts and a
non-linear planar correction derived from interpolation in a correction grid.
While this is sufficient for most small scale mapping activities, it is not at
all sufficient for operational geodetic use, nor for many of the rapidly
emerging high accuracy geospatial applications in agriculture, construction and
transportation. To improve this situation, we have introduced a new framework
for implementation of geodetic transformations, which will appear in the next
release of the PROJ.4 library.

Before describing the details, let us first remark that most cases of geodetic
transformations can be expressed as a series of elementary operations, the
output of one operation being the input of the next. E.g. when going from UTM
zone 32, datum ED50, to UTM zone 32, datum ETRS89, one must, in the simplest
case, go through 5 steps:

1. Back-project the UTM coordinates to geographic coordinates
2. Convert the geographic coordinates to 3D cartesian geocentric coordinates
3. Apply a Helmert transformation from ED50 to ETRS89
4. Convert back from cartesian to geographic coordinates
5. Finally project the geographic coordinates to UTM zone 32 planar coordinates.

The homology between these steps and a Unix shell style pipeline is evident.
With this as its main architectural inspiration, the primary feature of our
implementation is a pipeline driver, that takes as its user supplied arguments,
a series of elementary operations, which it strings together in order to
implement the full transformation needed. Also, we have added a number of
elementary geodetic operations, including Helmert transformations, general
high order polynomial shifts and the Molodensky transformation. In anticipation
of upcoming support for full time-varying transformations, we also introduce a
4D spatiotemporal data type, and a programming interface (API) for handling this.

With these improvements in place, we assert that PROJ.4 is now well on its way
from being a mostly-map projection library, to becoming an
almost-generic-geodetic-transformation library.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170524/11bd2eab/attachment.html>

From gordon.johnston at exxonmobil.com  Wed May 24 07:50:39 2017
From: gordon.johnston at exxonmobil.com (Johnston, Gordon /C)
Date: Wed, 24 May 2017 14:50:39 +0000
Subject: [Proj] Transformation Paper @ FIG WW Helsinki
Message-ID: <fdc0cf081fc94f96b8b27be2f34b2c46@ACOEMR09.EA.XOM.com>

Kristian, I shall be there all week although my focus is on the Commission 4 activities so there may be some conflict in the schedules.

However I know there is a plan for the Comm 4/5/6 social dinner and this might be a good time to make contact if not before that.

Safe travels to Helsinki
Rgds
Gordon Johnston

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of proj-request at lists.maptools.org
Sent: Wednesday, May 24, 2017 2:15 PM
To: proj at lists.maptools.org
Subject: Proj Digest, Vol 152, Issue 9

Send Proj mailing list submissions to
	proj at lists.maptools.org

To subscribe or unsubscribe via the World Wide Web, visit
	http://lists.maptools.org/mailman/listinfo/proj
or, via email, send a message with subject or body 'help' to
	proj-request at lists.maptools.org

You can reach the person managing the list at
	proj-owner at lists.maptools.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Proj digest..."


Today's Topics:

   1. Re: Submitting proj.4 to Google OSS Fuzz ? (Even Rouault)
   2. Transformation pipelines paper (Kristian Evers)


----------------------------------------------------------------------

Message: 1
Date: Tue, 23 May 2017 19:51:01 +0200
From: Even Rouault <even.rouault at spatialys.com>
Subject: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?
To: proj at lists.maptools.org
Message-ID: <8265442.mUgpA38i5W at even-i700>
Content-Type: text/plain; charset="us-ascii"

On mardi 23 mai 2017 17:23:32 CEST Even Rouault wrote:
> On mardi 23 mai 2017 14:24:11 CEST Kristian Evers wrote:
> > > That's the most convenient. You can run OSS-Fuzz locally as instructed
> > > in
> > > proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for
> > > that),
> > > and there you could point the oss-fuzz/projects/proj4/Dockerfile to a
> > > branch of yours (that's how I tested it before submitting it)
> > 
> > Yeah, I figured. It would be super cool if you could trigger OSS-Fuzz
> > targeting a specific bug via a pull request. Maybe that will be possible
> > in
> > the future...
> > 
> > Thanks for the help. I will try to run OSS-Fuzz locally to confirm fixes
> > before I commit them to master.
> 
> Well, in that case that means you're running Linux, so build proj.4 with
> CFLAGS="- fsanitize=undefined,address" and running the standalone
> standard_fuzzer should be sufficient (and much faster)

Note: make sure the proj lib is built with a PROJ_LIB define that points to something valid, or 
define PROJ_LIB to point to the in-source nad directory when running standard_fuzzer as it 
can make a difference (in particular since the fuzzer might generate strings without +no_defs 
and ellipsoid values, and in that case they are valid due to nad/proj_def.dat containing 
ellps=WGS84. Whereas if you run standard_fuzzer with no valid PROJ_LIB you'll get an early 
exit due to proj_init() having failed. I've updated the example in test/fuzzers/README.TXT 
with that)

> 
> > Kristian
> > 
> > Fra: Even Rouault [mailto:even.rouault at spatialys.com]
> > Sendt: 23. maj 2017 16:09
> > Til: proj at lists.maptools.org
> > Cc: Kristian Evers
> > Emne: Re: [Proj] Submitting proj.4 to Google OSS Fuzz ?
> > 
> > On mardi 23 mai 2017 13:41:50 CEST Kristian Evers wrote:
> > > Kurt, Even,
> > > 
> > > 
> > > 
> > > Thanks for your suggestions. Very helpful. I do have access to a Linux
> > > 
> > > server and if necessary I can work on that. It is just slightly
> > > 
> > > inconvenient when on the move etc.
> > > 
> > > 
> > > 
> > > 
> > > 
> > > I must say, it is a very impressive piece software google has created!
> > > 
> > > Although it is a bit hard to grasp the finer details :-) I think I can
> > > fix
> > > 
> > > some of the discovered issues just from looking at the report, as you
> > > 
> > > suggest, Even.
> > > 
> > > 
> > > 
> > > 
> > > 
> > > The only way to triggers OSS-Fuzz to test code is to commit on the
> > > 
> > > master-branch, correct?
> > 
> > That's the most convenient. You can run OSS-Fuzz locally as instructed in
> > proj.4 tests/fuzzers/README.TXT (but you need Linux and Docker for that),
> > and there you could point the oss-fuzz/projects/proj4/Dockerfile to a
> > branch of yours (that's how I tested it before submitting it)
> > 
> > > /Kristian
> > > 
> > > _______________________________________________
> > > 
> > > Proj mailing list
> > > 
> > > Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
> > > 
> > > http://lists.maptools.org/mailman/listinfo/proj
> > 
> > --
> > 
> > Spatialys - Geospatial professional services
> > 
> > http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.maptools.org/pipermail/proj/attachments/20170523/f4623379/attachment-0001.htm 

------------------------------

Message: 2
Date: Wed, 24 May 2017 13:14:42 +0000
From: Kristian Evers <kreve at sdfe.dk>
Subject: [Proj] Transformation pipelines paper
To: PROJ.4 and general Projections Discussions
	<proj at lists.maptools.org>
Message-ID:
	<2E885BB293AF0448A0181138489E9A0E99FE09D9 at S000014.PROD.SITAD.DK>
Content-Type: text/plain; charset="us-ascii"

All,

Thomas Knudsen and I have written a paper about the Transformation Pipelines
framework that have been introduced to PROJ.4 recently. We have submitted it
to the FIG Working Week 2017 which is held in Helsinki next week. I'll be
presenting the paper in the "Geodesy and Surveying Applications II" session on
Thursday June 1st. Please stop by and say hello if you are there.

The paper can be found at
http://www.fig.net/resources/proceedings/fig_proceedings/fig2017/papers/iss6b/ISS6B_evers_knudsen_9156.pdf
I have pasted in the abstract below.

In section 4, about transformation pipelines, we show case a few examples of
how transformation pipelines can be used. The examples all feature the new
and much improved implementation of the Helmert transform. Keeping the
lively discussion about the Helmert transform in March in mind I figure that the
paper will be of great interest to those involved in the discussion.

Happy reading,
Kristian

----------------------------------------------------------------------------------------------
TRANSFORMATION PIPELINES IN PROJ.4

For more than 2 decades, PROJ.4 has been the globally leading map projection
library for open source geospatial software. While focusing on mathematically
well-defined 2D projections from geographical to planar coordinates, PROJ.4
has nevertheless, since its introduction in the 1980s, provided limited
support for more general geodetic datum transformations, and has gradually
introduced a higher degree of support for 3D coordinate data and reference
systems.

The support has, however, been implemented over a long period of time, as
need became evident and opportunity was found, by a number of different
people, with different needs. Hence, the PROJ.4 3D support has not been the
result of neither deep geodetic, nor careful code architectural considerations.
This has resulted in a library that supports only a subset of commonly
occurring geodetic transformations. To be more specific: It supports any datum
shift that can be completed by a combination of two Helmert shifts and a
non-linear planar correction derived from interpolation in a correction grid.
While this is sufficient for most small scale mapping activities, it is not at
all sufficient for operational geodetic use, nor for many of the rapidly
emerging high accuracy geospatial applications in agriculture, construction and
transportation. To improve this situation, we have introduced a new framework
for implementation of geodetic transformations, which will appear in the next
release of the PROJ.4 library.

Before describing the details, let us first remark that most cases of geodetic
transformations can be expressed as a series of elementary operations, the
output of one operation being the input of the next. E.g. when going from UTM
zone 32, datum ED50, to UTM zone 32, datum ETRS89, one must, in the simplest
case, go through 5 steps:

1. Back-project the UTM coordinates to geographic coordinates
2. Convert the geographic coordinates to 3D cartesian geocentric coordinates
3. Apply a Helmert transformation from ED50 to ETRS89
4. Convert back from cartesian to geographic coordinates
5. Finally project the geographic coordinates to UTM zone 32 planar coordinates.

The homology between these steps and a Unix shell style pipeline is evident.
With this as its main architectural inspiration, the primary feature of our
implementation is a pipeline driver, that takes as its user supplied arguments,
a series of elementary operations, which it strings together in order to
implement the full transformation needed. Also, we have added a number of
elementary geodetic operations, including Helmert transformations, general
high order polynomial shifts and the Molodensky transformation. In anticipation
of upcoming support for full time-varying transformations, we also introduce a
4D spatiotemporal data type, and a programming interface (API) for handling this.

With these improvements in place, we assert that PROJ.4 is now well on its way
from being a mostly-map projection library, to becoming an
almost-generic-geodetic-transformation library.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.maptools.org/pipermail/proj/attachments/20170524/11bd2eab/attachment.htm 

------------------------------

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

End of Proj Digest, Vol 152, Issue 9
************************************



From support at mnspoint.com  Sun May 28 21:34:51 2017
From: support at mnspoint.com (support at mnspoint.com)
Date: Mon, 29 May 2017 07:34:51 +0300
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <3969021.hgAjN9nOUb@even-i700>
References: <3969021.hgAjN9nOUb@even-i700>
Message-ID: <745c62dbe0072b4ee579e869351671dd@mnspoint.com>

Hello,

> QUESTION 1: 
> 
> Are people happy if we submit

basically NO, since Google is what we know! Proj.4 will be used to spy
citizens of different countries without asking them or anybody about it.
But since Proj.4 is free source code there is not much to be done .. but
I would NOT support any submitting by this list! - If they use it ..
what can we do .. but we should not support anything they do since we
know the amount of spying is connected to everything Google does (most
likely without most of the software writers knowing it, since there is a
different department (outside) that then uses those codes and adds the
spying codes).. 

Submit nothing but keep it open! (y) 

Janne.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170529/29c894c8/attachment.html>

From thy at 42.dk  Mon May 29 00:14:14 2017
From: thy at 42.dk (Kristian Thy)
Date: Mon, 29 May 2017 09:14:14 +0200
Subject: [Proj] Submitting proj.4 to Google OSS Fuzz ?
In-Reply-To: <745c62dbe0072b4ee579e869351671dd@mnspoint.com>
References: <3969021.hgAjN9nOUb@even-i700>
	<745c62dbe0072b4ee579e869351671dd@mnspoint.com>
Message-ID: <20170529071414.GB25014@42.dk>

On Mon, May 29, support at mnspoint.com wrote:
> Hello,
> 
> > QUESTION 1: 
> > 
> > Are people happy if we submit
> 
> basically NO, since Google is what we know! Proj.4 will be used to spy
> citizens of different countries without asking them or anybody about it.
> But since Proj.4 is free source code there is not much to be done .. but
> I would NOT support any submitting by this list! - If they use it ..
> what can we do .. but we should not support anything they do since we
> know the amount of spying is connected to everything Google does (most
> likely without most of the software writers knowing it, since there is a
> different department (outside) that then uses those codes and adds the
> spying codes).. 
> 
> Submit nothing but keep it open! (y) 
> 
> Janne.

Could we cut down on the hyperbole and paranoia here?

I am no fan of Google's general business practices but that does not
mean that their technical contributions and services are without merit.
The OSS Fuzzer does not do commits to Proj.4; code changes are still
under the project's full control.

Cheers,
Kristian


From even.rouault at spatialys.com  Mon May 29 15:21:40 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2017 00:21:40 +0200
Subject: [Proj] Fwd: [OSGeo-Live] Proj4 documentation
Message-ID: <1685950.APV4nt2vST@even-i700>

Hi,

Please see below help that seeks volunteers to help maintaining proj.4 documentation in 
OSGeo-Live.

Even

----------  Forwarded Message  ----------

Subject: [OSGeo-Live] Proj4 documentation
Date: lundi 29 mai 2017, 23:50:42 CEST
From: Nicolas Roelandt <roelandtn.pro at gmail.com>
To: even.rouault at spatialys.com, live-demo at lists.osgeo.org

Hi Even,


I'm coming to you on behalf of the OSGeo-Live project. We are currently
making a great spring cleaning of the projects included in OSGeo-Live. [1]
We are not enough to maintain all of them and keep the docs up to date too,
so we are downsizing.

Proj4 appeared on our radar since the software is good but the
documentation neglected.

Proj4 is still active since you made a commit a few hours / day ago.

Can you reach to the Proj4 community to help us find 2 peoples who
volunteer to maintain the docs with us ?

Can you relay this mail and ask volunteers to contact Astrid Emde [2] and
Vicky Vergara [3], so we can update our contact list and reach to them ?

As we say : "Work commitment is low, kudos and karma very high :) "


Best regards,

Nicolas Roelandt
OSGeo-Live PSC member
OSGeo-fr member

[1] https://wiki.osgeo.org/wiki/Live_GIS_Disc_Press_Release_77
[2] astrid_emde at osgeo dot org
[3] vicky at georepublic dot de

-----------------------------------------
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170530/e1c0b8b0/attachment.html>

From kreve at sdfe.dk  Tue May 30 01:24:05 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 30 May 2017 08:24:05 +0000
Subject: [Proj] Fwd: [OSGeo-Live] Proj4 documentation
In-Reply-To: <1685950.APV4nt2vST@even-i700>
References: <1685950.APV4nt2vST@even-i700>
Message-ID: <2E885BB293AF0448A0181138489E9A0E99FE2A07@S000014.PROD.SITAD.DK>

Astrid, Vicky,

Could you please share with the PROJ.4 mailing list what sort of work is expected of the volunteers? We are aware that the PROJ.4 docs need improving, and are actively working on that (albeit slowly). What else do you need for the OSGeo Liv distribution? I am sure it is easier to recruit volunteers if the task on hand is described more clearly.

Best regards,
Kristian

Fra: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] På vegne af Even Rouault
Sendt: 30. maj 2017 01:22
Til: proj at lists.maptools.org
Emne: [Proj] Fwd: [OSGeo-Live] Proj4 documentation


Hi,



Please see below help that seeks volunteers to help maintaining proj.4 documentation in OSGeo-Live.



Even



---------- Forwarded Message ----------



Subject: [OSGeo-Live] Proj4 documentation

Date: lundi 29 mai 2017, 23:50:42 CEST

From: Nicolas Roelandt <roelandtn.pro at gmail.com<mailto:roelandtn.pro at gmail.com>>

To: even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>, live-demo at lists.osgeo.org<mailto:live-demo at lists.osgeo.org>



Hi Even,





I'm coming to you on behalf of the OSGeo-Live project. We are currently

making a great spring cleaning of the projects included in OSGeo-Live. [1]

We are not enough to maintain all of them and keep the docs up to date too,

so we are downsizing.



Proj4 appeared on our radar since the software is good but the

documentation neglected.



Proj4 is still active since you made a commit a few hours / day ago.



Can you reach to the Proj4 community to help us find 2 peoples who

volunteer to maintain the docs with us ?



Can you relay this mail and ask volunteers to contact Astrid Emde [2] and

Vicky Vergara [3], so we can update our contact list and reach to them ?



As we say : "Work commitment is low, kudos and karma very high :) "





Best regards,



Nicolas Roelandt

OSGeo-Live PSC member

OSGeo-fr member



[1] https://wiki.osgeo.org/wiki/Live_GIS_Disc_Press_Release_77

[2] astrid_emde at osgeo dot org

[3] vicky at georepublic dot de



-----------------------------------------

--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170530/9c1ae190/attachment.html>

From moquet.julien at gmail.com  Tue May 30 13:10:11 2017
From: moquet.julien at gmail.com (Julien Moquet)
Date: Tue, 30 May 2017 22:10:11 +0200
Subject: [Proj] Fwd: [OSGeo-Live] Proj4 documentation
In-Reply-To: <1685950.APV4nt2vST@even-i700>
References: <1685950.APV4nt2vST@even-i700>
Message-ID: <CANigTqVj6LV0psC3R5B6TUGrp0G2kXhUfGb3cOD1R3HkWH3xyg@mail.gmail.com>

Hi Even, Nicolas,

Can you tell us what it is about exactly about proj4 documentation in OSGeo
live ?

Regards,
Julien.

2017-05-30 0:21 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> Hi,
>
>
>
> Please see below help that seeks volunteers to help maintaining proj.4
> documentation in OSGeo-Live.
>
>
>
> Even
>
>
>
> ---------- Forwarded Message ----------
>
>
>
> Subject: [OSGeo-Live] Proj4 documentation
>
> Date: lundi 29 mai 2017, 23:50:42 CEST
>
> From: Nicolas Roelandt <roelandtn.pro at gmail.com>
>
> To: even.rouault at spatialys.com, live-demo at lists.osgeo.org
>
>
>
> Hi Even,
>
>
>
>
>
> I'm coming to you on behalf of the OSGeo-Live project. We are currently
>
> making a great spring cleaning of the projects included in OSGeo-Live. [1]
>
> We are not enough to maintain all of them and keep the docs up to date too,
>
> so we are downsizing.
>
>
>
> Proj4 appeared on our radar since the software is good but the
>
> documentation neglected.
>
>
>
> Proj4 is still active since you made a commit a few hours / day ago.
>
>
>
> Can you reach to the Proj4 community to help us find 2 peoples who
>
> volunteer to maintain the docs with us ?
>
>
>
> Can you relay this mail and ask volunteers to contact Astrid Emde [2] and
>
> Vicky Vergara [3], so we can update our contact list and reach to them ?
>
>
>
> As we say : "Work commitment is low, kudos and karma very high :) "
>
>
>
>
>
> Best regards,
>
>
>
> Nicolas Roelandt
>
> OSGeo-Live PSC member
>
> OSGeo-fr member
>
>
>
> [1] https://wiki.osgeo.org/wiki/Live_GIS_Disc_Press_Release_77
>
> [2] astrid_emde at osgeo dot org
>
> [3] vicky at georepublic dot de
>
>
>
> -----------------------------------------
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170530/d8cca839/attachment.html>

From moquet.julien at gmail.com  Tue May 30 13:11:25 2017
From: moquet.julien at gmail.com (Julien Moquet)
Date: Tue, 30 May 2017 22:11:25 +0200
Subject: [Proj] Fwd: [OSGeo-Live] Proj4 documentation
In-Reply-To: <CANigTqVj6LV0psC3R5B6TUGrp0G2kXhUfGb3cOD1R3HkWH3xyg@mail.gmail.com>
References: <1685950.APV4nt2vST@even-i700>
	<CANigTqVj6LV0psC3R5B6TUGrp0G2kXhUfGb3cOD1R3HkWH3xyg@mail.gmail.com>
Message-ID: <CANigTqX43h8C+4CuTGGJa8AiXkxy3d3cFRtTJvv0wNBzQwx3wg@mail.gmail.com>

Sorry Kristian, I have just seen your question !

Regards,
Julien.

2017-05-30 22:10 GMT+02:00 Julien Moquet <moquet.julien at gmail.com>:

> Hi Even, Nicolas,
>
> Can you tell us what it is about exactly about proj4 documentation in
> OSGeo live ?
>
> Regards,
> Julien.
>
> 2017-05-30 0:21 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
>
>> Hi,
>>
>>
>>
>> Please see below help that seeks volunteers to help maintaining proj.4
>> documentation in OSGeo-Live.
>>
>>
>>
>> Even
>>
>>
>>
>> ---------- Forwarded Message ----------
>>
>>
>>
>> Subject: [OSGeo-Live] Proj4 documentation
>>
>> Date: lundi 29 mai 2017, 23:50:42 CEST
>>
>> From: Nicolas Roelandt <roelandtn.pro at gmail.com>
>>
>> To: even.rouault at spatialys.com, live-demo at lists.osgeo.org
>>
>>
>>
>> Hi Even,
>>
>>
>>
>>
>>
>> I'm coming to you on behalf of the OSGeo-Live project. We are currently
>>
>> making a great spring cleaning of the projects included in OSGeo-Live. [1]
>>
>> We are not enough to maintain all of them and keep the docs up to date
>> too,
>>
>> so we are downsizing.
>>
>>
>>
>> Proj4 appeared on our radar since the software is good but the
>>
>> documentation neglected.
>>
>>
>>
>> Proj4 is still active since you made a commit a few hours / day ago.
>>
>>
>>
>> Can you reach to the Proj4 community to help us find 2 peoples who
>>
>> volunteer to maintain the docs with us ?
>>
>>
>>
>> Can you relay this mail and ask volunteers to contact Astrid Emde [2] and
>>
>> Vicky Vergara [3], so we can update our contact list and reach to them ?
>>
>>
>>
>> As we say : "Work commitment is low, kudos and karma very high :) "
>>
>>
>>
>>
>>
>> Best regards,
>>
>>
>>
>> Nicolas Roelandt
>>
>> OSGeo-Live PSC member
>>
>> OSGeo-fr member
>>
>>
>>
>> [1] https://wiki.osgeo.org/wiki/Live_GIS_Disc_Press_Release_77
>>
>> [2] astrid_emde at osgeo dot org
>>
>> [3] vicky at georepublic dot de
>>
>>
>>
>> -----------------------------------------
>>
>> --
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170530/5e98145a/attachment.html>

From even.rouault at spatialys.com  Tue May 30 14:33:58 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2017 23:33:58 +0200
Subject: [Proj] [Live-demo]  Fwd: [OSGeo-Live] Proj4 documentation
In-Reply-To: <CAHbAjDSPEsu8Koz05joNt=vp3_W0-88-iFnHBs6RqW6PNGO0Yg@mail.gmail.com>
References: <1685950.APV4nt2vST@even-i700>
	<CANigTqX43h8C+4CuTGGJa8AiXkxy3d3cFRtTJvv0wNBzQwx3wg@mail.gmail.com>
	<CAHbAjDSPEsu8Koz05joNt=vp3_W0-88-iFnHBs6RqW6PNGO0Yg@mail.gmail.com>
Message-ID: <1669176.QG6ZeJU9dx@even-i700>

On mardi 30 mai 2017 23:21:39 CEST Nicolas Roelandt wrote:
> Hi Julien and dear PROJ.4 Community,
> 
> Regarding the PROJ.4 documentation in OSGeo-Live, there is no overview or
> quickstart at the moment.

Looking a bit, I can see MetaCRS being mentionned in
https://live.osgeo.org/en/overview/overview.html
and pointing to
https://live.osgeo.org/en/overview/metacrs_overview.html
where proj.4 is briefly mentionned.	

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170530/737251bc/attachment.html>

From even.rouault at spatialys.com  Wed May 31 13:15:27 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 31 May 2017 22:15:27 +0200
Subject: [Proj] [Live-demo]  Fwd: [OSGeo-Live] Proj4 documentation
In-Reply-To: <d880e47a-7e18-10b9-29dc-1b6d28828388@gmail.com>
References: <1685950.APV4nt2vST@even-i700> <1669176.QG6ZeJU9dx@even-i700>
	<d880e47a-7e18-10b9-29dc-1b6d28828388@gmail.com>
Message-ID: <4416803.loihJjt2tq@even-i700>

On jeudi 1 juin 2017 05:57:38 CEST Cameron Shorter wrote:
> Hi Evan,
> 
> Yes, MetaCRS was a project gathering all the Proj4 projects together.
> However, it appears that proj4 is the only project in that grouping
> which is active?
> 
> Hence my thoughts are that "MetaCRS" should be dropped from OSGeo-Live
> as a concept and "Proj4" be used instead. It would be ok to say "Proj4
> has been translated into other languages, including proj4js, ..."
> 
> Your thoughts are welcome.

Regarding what is listed currently in metacrs :
- proj4js: no opinion
- cs-map: no-opinion
- geotiff/libgeotiff:  heavily used underneath by GDAL in particular, mostly in maintaince 
mode, but can be treated as a technical dependency that doesn't require to be visible from 
users.
- proj4j: no opinion
- spatialreference.org: not maintained in years. http://epsg.io/ would be a possible 
replacement

Agreed that metacrs is probably a bit too ... meta for folks exploring OSGeo-Live content, so 
it could make sense exposing proj.4 as a standalone project.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170531/dd33ef82/attachment.html>

From martin.desruisseaux at geomatys.com  Wed May 31 16:11:47 2017
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 1 Jun 2017 01:11:47 +0200
Subject: [Proj] MetaCRS (was [OSGeo-Live] Proj4 documentation)
In-Reply-To: <4416803.loihJjt2tq@even-i700>
References: <1685950.APV4nt2vST@even-i700> <1669176.QG6ZeJU9dx@even-i700>
	<d880e47a-7e18-10b9-29dc-1b6d28828388@gmail.com>
	<4416803.loihJjt2tq@even-i700>
Message-ID: <c5bab8a1-eb46-73be-d4d0-ce4db98d270e@geomatys.com>

Hello all

Le 31/05/2017 à 22:15, Even Rouault a écrit :

> On jeudi 1 juin 2017 05:57:38 CEST Cameron Shorter wrote:
>
> > Yes, MetaCRS was a project gathering all the Proj4 projects together.
>
Actually, when the MetaCRS list started, one of its goals was to create
a test suite that could be used by any map projection library. We now
have the Geospatial integrity of geoscience software (GIGS) tests for
such purpose (http://www.iogp.org/Geomatics/#gigs), but a question could
be whether there is interest in making those tests more readily runnable.

> > However, it appears that proj4 is the only project in that grouping
> which is active?
>
I noticed that some activity happen on Proj4J outside this group, on at
least one fork created by a user on GitHub.

> - spatialreference.org: not maintained in years. http://epsg.io/ would
> be a possible replacement
>
Why not referencing the only official source instead, which is
http://epsg-registry.org/ ? The non-conform definitions (because of
difference in axis order and units of measurements) contribute to the
confusion. If the intend is to be able to give a direct link to a
specific EPSG code, this can also be done with the official registry
with URL like below:

    http://epsg-registry.org/?display=entity&urn=urn:ogc:def:crs:EPSG::27700

Regards,

Martin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20170601/e8027d47/attachment.html>

