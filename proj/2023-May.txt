From j1 at jimenezshaw.com  Tue May  2 09:45:29 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 2 May 2023 18:45:29 +0200
Subject: [PROJ] Problems with last EPSG update in Germany
In-Reply-To: <35883941-6b37-9837-785b-132dd4c1edd2@spatialys.com>
References: <CADRrdKvj+fBtb6r53Bpp4BrG7CzW2kvGFTc3n9padk=pwsSabA@mail.gmail.com>
 <8f7cb829-94db-6ba5-405a-d4799874aec9@spatialys.com>
 <CADRrdKuPcnyqSHtBs--h6yvSf368ge-7r498tUf6k=gtguigSg@mail.gmail.com>
 <35883941-6b37-9837-785b-132dd4c1edd2@spatialys.com>
Message-ID: <CADRrdKu9ah9bUaVnL5tR3d=UUciHW9PMKV=6Hw8XLcdb3d0hqQ@mail.gmail.com>

Hi

When I was going to add the Helmert transformation, I realized that there
is already something similar in proj.db:
PROJ:ETRS89_TO_ETRF2000 "ETRS89 to ETRF2000" , with all zeros.

However, if I try to go from ETRS89 (via ETRF2000) to "DHDN + DHH2016
height" it has the same output: horizontal (to DHDN, that is the big chunk)
or vertical, not both.
(There is already a transformation in proj.db: EPSG:10292
'ETRS89/DREF91/2016 to ETRF2000 (1)')

PROJ_NETWORK=ON projinfo -s EPSG:4937 -t EPSG:4314+7837 -o proj
--spatial-test intersects
Candidate operations found: 11
-------------------------------------
Operation No. 1:

unknown id, Inverse of Ballpark geographic offset from ETRS89/DREF91/2016
to ETRS89 + ETRS89/DREF91/2016 to DHHN2016 height (1) + Inverse of Ballpark
geographic offset from DHDN to ETRS89/DREF91/2016, unknown accuracy,
Germany - onshore and offshore., has ballpark transformation

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 2:

unknown id, Inverse of Null geographic offset from ETRS89 (geog2D) to
ETRS89 (geog3D) + ETRS89 to ETRF2000 + Inverse of Conversion from ETRF2000
(geocentric) to ETRF2000 (geog2D) + Inverse of ETRS89/DREF91/2016 to
ETRF2000 (1) + Inverse of Conversion from ETRS89/DREF91/2016 (geog3D) to
ETRS89/DREF91/2016 (geocentric) + ETRS89/DREF91/2016 to DHHN2016 height (1)
+ Inverse of Ballpark geographic offset from DHDN to ETRS89/DREF91/2016,
unknown accuracy, Germany - onshore and offshore., has ballpark
transformation

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +proj=cart +ellps=GRS80
  +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0.000658 +ry=-0.000208
+rz=0.000755
        +s=0 +convention=position_vector
  +step +inv +proj=cart +ellps=GRS80
  +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 3:

unknown id, Inverse of Transformation from DHHN2016 height to ETRS89
(ballpark vertical transformation, without ellipsoid height to vertical
height correction) + Inverse of DHDN to ETRS89 (8), unknown accuracy,
Germany - onshore - states of Baden-Wurtemberg, Bayern, Berlin,
Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern,
Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Sachsen,
Sachsen-Anhalt, Schleswig-Holstein, Thuringen., has ballpark transformation

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

-------------------------------------


If I use directly ETRF2000 instead of ETRS89, similar. It is not applying
vertical and horizontal transformations together.

PROJ_NETWORK=ON projinfo -s ETRF2000 -t EPSG:4314+7837 -o proj
--spatial-test intersects
Candidate operations found: 11
-------------------------------------
Operation No. 1:

unknown id, Inverse of Ballpark geographic offset from ETRS89/DREF91/2016
to ETRF2000 + ETRS89/DREF91/2016 to DHHN2016 height (1) + Inverse of
Ballpark geographic offset from DHDN to ETRS89/DREF91/2016, unknown
accuracy, Germany - onshore and offshore., has ballpark transformation

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 2:

unknown id, Inverse of Conversion from ETRF2000 (geocentric) to ETRF2000
(geog3D) + Inverse of ETRS89/DREF91/2016 to ETRF2000 (1) + Inverse of
Conversion from ETRS89/DREF91/2016 (geog3D) to ETRS89/DREF91/2016
(geocentric) + ETRS89/DREF91/2016 to DHHN2016 height (1) + Inverse of
Ballpark geographic offset from DHDN to ETRS89/DREF91/2016, unknown
accuracy, Germany - onshore and offshore., has ballpark transformation

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +proj=cart +ellps=GRS80
  +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0.000658 +ry=-0.000208
+rz=0.000755
        +s=0 +convention=position_vector
  +step +inv +proj=cart +ellps=GRS80
  +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 3:

unknown id, Inverse of Transformation from DHHN2016 height to ETRF2000
(ballpark vertical transformation, without ellipsoid height to vertical
height correction) + Inverse of ETRS89 to ETRF2000 + Inverse of DHDN to
ETRS89 (8), unknown accuracy, Germany - onshore - states of
Baden-Wurtemberg, Bayern, Berlin, Brandenburg, Bremen, Hamburg, Hessen,
Mecklenburg-Vorpommern, Niedersachsen, Nordrhein-Westfalen,
Rheinland-Pfalz, Saarland, Sachsen, Sachsen-Anhalt, Schleswig-Holstein,
Thuringen., has ballpark transformation

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

-------------------------------------

I was not expecting that. Am I missing anything?

Thanks,
Javier


On Sat, 29 Apr 2023 at 20:31, Even Rouault <even.rouault at spatialys.com>
wrote:

>
> Le 29/04/2023 ? 19:58, Javier Jimenez Shaw a ?crit :
> > Thanks Even.
> >
> > Yes, I will contact BKG.
> >
> > I was thinking on another option: defining a Helmert transformation
> > between ETRS89/DREF91/2016 and ETRS89, (probably with 0,0,0 params)
> > and some (in)accuracy, to "connect" the new system with the old ones.
> > Otherwise the "new" systems and the "old" ones are disconnected and
> > only ballpark transformations are possible. Something like
> > https://epsg.org/transformation_9703/ETRF2000-PL-to-ETRS89-1.html for
> > Poland. (https://epsg.org/search/by-name/?query=ETRF2000-PL sounds
> > very similar to
> > https://epsg.org/search/by-name?searchedTerms=ETRS89%2FDREF91%2F2016
> > but without that "link" to the "old" systems).
> > What do you think about this? Would it work?
>
> Yes that also crossed through my mind. I believe it should work (but
> beware of the limitations of PROJ inference logic of guessing at most a
> single intermediate CRS, but for doing WGS84 -> ETRS89 ->
> ETRS89/DREF91/2016, that should work). You might simulate that
> beforehand by creating such a Helmert transformation.
>
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230502/620957d9/attachment.htm>

From even.rouault at spatialys.com  Tue May  2 10:12:59 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 2 May 2023 19:12:59 +0200
Subject: [PROJ] Problems with last EPSG update in Germany
In-Reply-To: <CADRrdKu9ah9bUaVnL5tR3d=UUciHW9PMKV=6Hw8XLcdb3d0hqQ@mail.gmail.com>
References: <CADRrdKvj+fBtb6r53Bpp4BrG7CzW2kvGFTc3n9padk=pwsSabA@mail.gmail.com>
 <8f7cb829-94db-6ba5-405a-d4799874aec9@spatialys.com>
 <CADRrdKuPcnyqSHtBs--h6yvSf368ge-7r498tUf6k=gtguigSg@mail.gmail.com>
 <35883941-6b37-9837-785b-132dd4c1edd2@spatialys.com>
 <CADRrdKu9ah9bUaVnL5tR3d=UUciHW9PMKV=6Hw8XLcdb3d0hqQ@mail.gmail.com>
Message-ID: <47aa08fa-0d07-1dae-290f-fbda89fbfe6d@spatialys.com>

Javier,

so for doing ETRF2000 <--> DHDN + DHHN2016 height

What exists as relevant transformations in proj.db:
ETRF2000 <--> ETRS89/DREF91/2016: Helmert
DHHN2016 height <--> ETRS89/DREF91/2016: grid

but nothing for ETRS89/DREF91/2016 <--> DHDN

I'm not sure if having such transformation would help (I guess so though)

The "ETRS89 to ETRF2000" null Helmert transformation inserted by PROJ 
from the definition of the ETRS89 datum ensemble cannot help here, 
because, yes, we can do the horizontal and vertical steps with:

ETRF2000 --> ETRS89/DREF91/2016 --> DHHN2016 height

ETRF2000 --> ETRS89 --> DHDN

but when combining them, we're stuck because the intermediate datum 
(ETRS89/DREF91/2016 for vertical, ETRS89 for horizontal) isn't the same 
(I guess having a known transformation could help, but I'm not sure)

And even if that worked, I don't think that could be used to do ETRS89 
<--> DHDN + DHHN2016 height because of the too many inference steps 
required.

Even

Le 02/05/2023 ? 18:45, Javier Jimenez Shaw a ?crit?:
> Hi
>
> When I was going to add the Helmert transformation, I realized that 
> there is already something similar in proj.db:
> PROJ:ETRS89_TO_ETRF2000 "ETRS89 to ETRF2000" , with all zeros.
>
> However, if I try to go from ETRS89 (via ETRF2000) to "DHDN + DHH2016 
> height" it has the same output: horizontal (to DHDN, that is the big 
> chunk) or vertical, not both.
> (There is already a transformation in proj.db: EPSG:10292 
> 'ETRS89/DREF91/2016 to ETRF2000 (1)')
>
> PROJ_NETWORK=ON projinfo -s EPSG:4937 -t EPSG:4314+7837 -o proj 
> --spatial-test intersects
> Candidate operations found: 11
> -------------------------------------
> Operation No. 1:
>
> unknown id, Inverse of Ballpark geographic offset from 
> ETRS89/DREF91/2016 to ETRS89 + ETRS89/DREF91/2016 to DHHN2016 height 
> (1) + Inverse of Ballpark geographic offset from DHDN to 
> ETRS89/DREF91/2016, unknown accuracy, Germany - onshore and offshore., 
> has ballpark transformation
>
> PROJ string:
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 2:
>
> unknown id, Inverse of Null geographic offset from ETRS89 (geog2D) to 
> ETRS89 (geog3D) + ETRS89 to ETRF2000 + Inverse of Conversion from 
> ETRF2000 (geocentric) to ETRF2000 (geog2D) + Inverse of 
> ETRS89/DREF91/2016 to ETRF2000 (1) + Inverse of Conversion from 
> ETRS89/DREF91/2016 (geog3D) to ETRS89/DREF91/2016 (geocentric) + 
> ETRS89/DREF91/2016 to DHHN2016 height (1) + Inverse of Ballpark 
> geographic offset from DHDN to ETRS89/DREF91/2016, unknown accuracy, 
> Germany - onshore and offshore., has ballpark transformation
>
> PROJ string:
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +proj=cart +ellps=GRS80
> ? +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0.000658 +ry=-0.000208 
> +rz=0.000755
> ? ? ? ? +s=0 +convention=position_vector
> ? +step +inv +proj=cart +ellps=GRS80
> ? +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 3:
>
> unknown id, Inverse of Transformation from DHHN2016 height to ETRS89 
> (ballpark vertical transformation, without ellipsoid height to 
> vertical height correction) + Inverse of DHDN to ETRS89 (8), unknown 
> accuracy, Germany - onshore - states of Baden-Wurtemberg, Bayern, 
> Berlin, Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern, 
> Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, 
> Sachsen, Sachsen-Anhalt, Schleswig-Holstein, Thuringen., has ballpark 
> transformation
>
> PROJ string:
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
> -------------------------------------
>
>
> If I use directly ETRF2000 instead of ETRS89, similar. It is not 
> applying vertical and horizontal transformations together.
>
> PROJ_NETWORK=ON projinfo -s ETRF2000 -t EPSG:4314+7837 -o proj 
> --spatial-test intersects
> Candidate operations found: 11
> -------------------------------------
> Operation No. 1:
>
> unknown id, Inverse of Ballpark geographic offset from 
> ETRS89/DREF91/2016 to ETRF2000 + ETRS89/DREF91/2016 to DHHN2016 height 
> (1) + Inverse of Ballpark geographic offset from DHDN to 
> ETRS89/DREF91/2016, unknown accuracy, Germany - onshore and offshore., 
> has ballpark transformation
>
> PROJ string:
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 2:
>
> unknown id, Inverse of Conversion from ETRF2000 (geocentric) to 
> ETRF2000 (geog3D) + Inverse of ETRS89/DREF91/2016 to ETRF2000 (1) + 
> Inverse of Conversion from ETRS89/DREF91/2016 (geog3D) to 
> ETRS89/DREF91/2016 (geocentric) + ETRS89/DREF91/2016 to DHHN2016 
> height (1) + Inverse of Ballpark geographic offset from DHDN to 
> ETRS89/DREF91/2016, unknown accuracy, Germany - onshore and offshore., 
> has ballpark transformation
>
> PROJ string:
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +proj=cart +ellps=GRS80
> ? +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0.000658 +ry=-0.000208 
> +rz=0.000755
> ? ? ? ? +s=0 +convention=position_vector
> ? +step +inv +proj=cart +ellps=GRS80
> ? +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 3:
>
> unknown id, Inverse of Transformation from DHHN2016 height to ETRF2000 
> (ballpark vertical transformation, without ellipsoid height to 
> vertical height correction) + Inverse of ETRS89 to ETRF2000 + Inverse 
> of DHDN to ETRS89 (8), unknown accuracy, Germany - onshore - states of 
> Baden-Wurtemberg, Bayern, Berlin, Brandenburg, Bremen, Hamburg, 
> Hessen, Mecklenburg-Vorpommern, Niedersachsen, Nordrhein-Westfalen, 
> Rheinland-Pfalz, Saarland, Sachsen, Sachsen-Anhalt, 
> Schleswig-Holstein, Thuringen., has ballpark transformation
>
> PROJ string:
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
> -------------------------------------
>
> I was not expecting that. Am I missing anything?
>
> Thanks,
> Javier
>
>
> On Sat, 29 Apr 2023 at 20:31, Even Rouault 
> <even.rouault at spatialys.com> wrote:
>
>
>     Le 29/04/2023 ? 19:58, Javier Jimenez Shaw a ?crit?:
>     > Thanks Even.
>     >
>     > Yes, I will contact BKG.
>     >
>     > I was thinking on another option: defining a Helmert transformation
>     > between ETRS89/DREF91/2016 and ETRS89, (probably with 0,0,0 params)
>     > and some (in)accuracy, to "connect" the new system with the old
>     ones.
>     > Otherwise the "new" systems and the "old" ones are disconnected and
>     > only ballpark transformations are possible. Something like
>     >
>     https://epsg.org/transformation_9703/ETRF2000-PL-to-ETRS89-1.html for
>     > Poland. (https://epsg.org/search/by-name/?query=ETRF2000-PL sounds
>     > very similar to
>     >
>     https://epsg.org/search/by-name?searchedTerms=ETRS89%2FDREF91%2F2016
>     > but without that "link" to the "old" systems).
>     > What do you think about this? Would it work?
>
>     Yes that also crossed through my mind. I believe it should work (but
>     beware of the limitations of PROJ inference logic of guessing at
>     most a
>     single intermediate CRS, but for doing WGS84 -> ETRS89 ->
>     ETRS89/DREF91/2016, that should work). You might simulate that
>     beforehand by creating such a Helmert transformation.
>
>
>     -- 
>     http://www.spatialys.com
>     My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230502/80e4b0dc/attachment-0001.htm>

From martin.desruisseaux at geomatys.com  Wed May  3 02:00:53 2023
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Wed, 3 May 2023 11:00:53 +0200
Subject: [PROJ] PROJ / Springer Handbook of Geographic Information
In-Reply-To: <trinity-ac76305c-0400-422e-90ba-3290e520c9dc-1682401869453@3c-app-gmx-bs71>
References: <trinity-ac76305c-0400-422e-90ba-3290e520c9dc-1682401869453@3c-app-gmx-bs71>
Message-ID: <f56ae708-450f-82e2-f720-90381a6201ce@geomatys.com>

Hello Peter

Thanks for this announcement. Since this is the second time that I see 
an announcement about a GIS book on this mailing list (I do not remember 
if it was the same book) and since GeoTools is mentioned, please allows 
me to abuse this mailing list once for bringing a clarification about 
GeoTools versus GeoAPI history (with connection to PROJ), in the hope 
that it may be relevant to book writers.

In the Java world, a common way to improve interoperability and vendor 
neutrality is to define a set of standard interfaces that can be 
implemented by multiple vendors. A successful industrial example is the 
Java Database Connectivity (JDBC) interfaces. A similar thing is 
possible in C/C++ as well (e.g. ODBC), but may be more difficult to do. 
More than 20 years ago, OGC initiated a similar effort for GIS with 
interfaces in Java, IDL, COM and CORBA. Only the Java part still exists 
today (draft Python abstract classes are also proposed), now under an 
OGC standard named "GeoAPI". PROJ implements indirectly those 
interfaces, through the PROJ-JNI community project. Among the benefits 
of that, it is possible to write Java applications capable to use any 
GeoAPI implementation, and one such application is the GIGS tests. More 
information about how to execute GIGS tests with PROJ-JNI is at [1]. 
This is of potential interest to the PROJ community because the 
application reports a few GIGS test failures when executed with PROJ. I 
have not yet reported them to this mailing list because I have not yet 
investigated if they are issues with the PROJ library, or with the GIGS 
tests, or with the JNI binding between them.

Despite some usages, the OGC GeoAPI standard has not reached the 
popularity that I hoped. Personal communications with different 
developers confirmed that a major impediment to GeoAPI adoption is the 
collision of "org.opengis" package name with GeoTools. The reason for 
that collision is outside the scope of this mailing list, but I tried to 
explain the historical facts, current situation and planed actions in 
[2] for those who are interested in this part of the GIS world.

 ??? Regards,

 ??? ??? Martin

[1]https://github.com/OSGeo/PROJ-JNI/wiki/GIGS-tests
[2]https://desruisseaux.github.io/history/GeoAPI.html


Le 25/04/2023 ? 07:51, Peter L?we a ?crit?:

> Dear PROJ community,
>
> get your free copy of the Open Source GIS chapter of the Springer Handbook of Geographic Information before the paywall goes up by the end of April:https://link.springer.com/content/pdf/10.1007/978-3-030-53125-6_30.pdf
>
> The chapter covers PROJ and related tools, such as GDAL/OGR, GeoBlackLight, Geopaparazzi, GeoPython, GeoServer, GeoTools, GMT,
> GPlates, GRASS GIS, gvSIG, Java Topolgy Suite, Mapserver, leaflet, NASA WorldWind, OSGeoLive, PostGIS, QGIS and rasdaman
> ? including links to conference videos and the 1987 GRASS GIS video narrated by William Shatner (of Star Trek fame) for additional content !
>
> New: Learn how to cite PROJ by its Digital Object Identifier (DOI) to give scientific credit to the PROJ developer team:
> https://doi.org/10.5281/zenodo.5884394
>
> Kind regards,
> Peter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230503/15fbe0cd/attachment.htm>

From mail at mocnik-science.net  Wed May  3 05:23:58 2023
From: mail at mocnik-science.net (Franz-Benjamin Mocnik)
Date: Wed, 3 May 2023 14:23:58 +0200
Subject: [PROJ] =?utf-8?q?Question_about_the_=E2=80=9Ctriangulation-based?=
 =?utf-8?q?_transformations=E2=80=9D?=
Message-ID: <CB942D3A-0599-4D95-B639-E7675303F866@mocnik-science.net>

Dear PROJ list members,

I hope I may ask here a question about the use of ?triangulation-based transformations?, which are implemented in PROJ.  It is my aim to use it with QGIS, but the problem seems to lie with the way I approach PROJ.

I have created a file according to your specifications documented as part of PROJ:
http://datastore.franz-benjamin.net/my-projection-mlB4gBJk.json
It transforms EPSG:4326 coordinates to coordinates in some new coordinate system.  I have now the following questions:

(1) The following command works well:
====================================
> echo 2 1 | src/cct -z0 -t0 +proj=tinshift +file=/Users/franz-benjamin/Downloads/my-projection.json
 225850.4491    123074.6957        0.0000        0.0000
====================================

(2) The following does not work:
====================================
> src/proj +proj=tinshift +file=/Users/franz-benjamin/Downloads/my-projection.json
Rel. 8.1.1, September 1st, 2021
<proj>:
can't initialize operations that take non-angular input coordinates
program abnormally terminated
====================================
I have also tried it with the most current version, and it does not work either.  Any idea?

(3) In QGIS (v3.20.2), I go to Settings->Options to then enter a user defined CRS with the Proj String ?+proj=tinshift +file=/Users/franz-benjamin/Downloads/my-projection.json?.  When I press validate, it says:
====================================
This proj projection definition is not valid:
proj_create: invalid value for file
====================================
This QGIS version uses PROJ 8.1.1, hence the choice of the PROJ version in (2).  Any idea why it does not work?

(4) I am unsure about which ?output_crs? to specify in the my-projection.json file because I am using my own CRS.  I just set it to ?EPSG:3395? to use *some* CRS, but also ?My CRS? and ?EPSG_4326? do not work.  Any idea what I should enter here?


I tried many different options, parameters, google searches, etc. but could not find any way to make it work under QGIS.  Do you have some idea of what I am doing wrong?  I would really be thankful if you could push me in the right direction.  Thank you!  I have tried for two days but could not find any solution.

Thank you in advance for your appreciated help!

Kind regards,
Franz-Benjamin

--
Dr Franz-Benjamin Mocnik
Assistant Professor

Faculty of Geo-Information Science and Earth Observation (ITC), University of Twente
PO Box 217, Drienerlolaan 5, 7500 AE Enschede, the Netherlands
Gebouw Langezijds 19, Hallenweg 8, 7522 NH Enschede, the Netherlands (visiting)

room 1344
phone +31 53 489-9360
www.mocnik-science.net
franz-benjamin.mocnik at utwente.nl
mail at mocnik-science.net


From even.rouault at spatialys.com  Wed May  3 05:39:25 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 3 May 2023 14:39:25 +0200
Subject: [PROJ] 
 =?utf-8?q?Question_about_the_=E2=80=9Ctriangulation-based?=
 =?utf-8?q?_transformations=E2=80=9D?=
In-Reply-To: <CB942D3A-0599-4D95-B639-E7675303F866@mocnik-science.net>
References: <CB942D3A-0599-4D95-B639-E7675303F866@mocnik-science.net>
Message-ID: <d796c264-8f60-7ce7-a1f4-cf9857503021@spatialys.com>


Le 03/05/2023 ? 14:23, Franz-Benjamin Mocnik a ?crit?:
> Dear PROJ list members,
>
> I hope I may ask here a question about the use of ?triangulation-based transformations?, which are implemented in PROJ.  It is my aim to use it with QGIS, but the problem seems to lie with the way I approach PROJ.
>
> I have created a file according to your specifications documented as part of PROJ:
> http://datastore.franz-benjamin.net/my-projection-mlB4gBJk.json
> It transforms EPSG:4326 coordinates to coordinates in some new coordinate system.  I have now the following questions:
>
> (1) The following command works well:
> ====================================
>> echo 2 1 | src/cct -z0 -t0 +proj=tinshift +file=/Users/franz-benjamin/Downloads/my-projection.json
>   225850.4491    123074.6957        0.0000        0.0000
> ====================================
>
> (2) The following does not work:
> ====================================
>> src/proj +proj=tinshift +file=/Users/franz-benjamin/Downloads/my-projection.json
Yes, this is expected. "proj" is a historical utility that works only 
with map projections, not fancier transformations like tinshift. You 
need to use cct for that.
> Rel. 8.1.1, September 1st, 2021
> <proj>:
> can't initialize operations that take non-angular input coordinates
> program abnormally terminated
> ====================================
> I have also tried it with the most current version, and it does not work either.  Any idea?
>
> (3) In QGIS (v3.20.2), I go to Settings->Options to then enter a user defined CRS with the Proj String ?+proj=tinshift +file=/Users/franz-benjamin/Downloads/my-projection.json?.  When I press validate, it says:
> ====================================
> This proj projection definition is not valid:
> proj_create: invalid value for file
> ====================================
> This QGIS version uses PROJ 8.1.1, hence the choice of the PROJ version in (2).  Any idea why it does not work?

Yes, QGIS requires PROJ.4 strings of CRS.? The tinshift operation is to 
define a transformation between 2 CRS, not to define a CRS.

You can use tinshift in QGIS but this is more complicated than that. You 
need to define in proj.db a transformation between 2 CRS using tinshift, 
and then QGIS should be able to use that transformation. Examples of how 
to define such transformations are in 
https://github.com/OSGeo/PROJ/blob/master/data/sql/other_transformation_custom.sql

You'll also need to add records to define your new CRS. Cf 
https://github.com/OSGeo/PROJ/blob/master/data/sql/projected_crs.sql if 
it is a projected CRS.

>
> (4) I am unsure about which ?output_crs? to specify in the my-projection.json file because I am using my own CRS.  I just set it to ?EPSG:3395? to use *some* CRS, but also ?My CRS? and ?EPSG_4326? do not work.  Any idea what I should enter here?
The new CRS you'll define
>
>
> I tried many different options, parameters, google searches, etc. but could not find any way to make it work under QGIS.  Do you have some idea of what I am doing wrong?  I would really be thankful if you could push me in the right direction.  Thank you!  I have tried for two days but could not find any solution.
>
> Thank you in advance for your appreciated help!
>
> Kind regards,
> Franz-Benjamin
>
> --
> Dr Franz-Benjamin Mocnik
> Assistant Professor
>
> Faculty of Geo-Information Science and Earth Observation (ITC), University of Twente
> PO Box 217, Drienerlolaan 5, 7500 AE Enschede, the Netherlands
> Gebouw Langezijds 19, Hallenweg 8, 7522 NH Enschede, the Netherlands (visiting)
>
> room 1344
> phone +31 53 489-9360
> www.mocnik-science.net
> franz-benjamin.mocnik at utwente.nl
> mail at mocnik-science.net
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From j1 at jimenezshaw.com  Wed May  3 10:33:06 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 3 May 2023 19:33:06 +0200
Subject: [PROJ] Projection with angle
Message-ID: <CADRrdKuA8ddz=y2q685QrMeMY8UXM0ozZ7q-eDsH7LvF=oX1tw@mail.gmail.com>

Hi

Is there any projected CRS in PROJ, where I can set an angle with the
"north" (or something kind of equivalent) as a parameter of the projection?
The only one I found is Oblique Transverse Mercator, but I have some
numerical problems with it.
I would like to try a different one if there is any available.
I need a CRS that I can express as a PROJCRS in WKT.

Thank you,
Javier.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230503/0f7e9945/attachment.htm>

From cjmce at lsu.edu  Wed May  3 10:35:12 2023
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Wed, 3 May 2023 17:35:12 +0000
Subject: [PROJ] Projection with angle
In-Reply-To: <CADRrdKuA8ddz=y2q685QrMeMY8UXM0ozZ7q-eDsH7LvF=oX1tw@mail.gmail.com>
References: <CADRrdKuA8ddz=y2q685QrMeMY8UXM0ozZ7q-eDsH7LvF=oX1tw@mail.gmail.com>
Message-ID: <DM8P221MB030907325EAA735B10C276DDA86C9@DM8P221MB0309.NAMP221.PROD.OUTLOOK.COM>

Try Laborde projection of Madagascar or Rosenmunde (sp?) of Switzerland

Get Outlook for iOS<https://aka.ms/o0ukef>
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Javier Jimenez Shaw <j1 at jimenezshaw.com>
Sent: Wednesday, May 3, 2023 12:33:06 PM
To: proj <PROJ at lists.osgeo.org>
Subject: [PROJ] Projection with angle

Hi

Is there any projected CRS in PROJ, where I can set an angle with the "north" (or something kind of equivalent) as a parameter of the projection?
The only one I found is Oblique Transverse Mercator, but I have some numerical problems with it.
I would like to try a different one if there is any available.
I need a CRS that I can express as a PROJCRS in WKT.

Thank you,
Javier.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230503/a0bdd782/attachment-0001.htm>

From jagoncal at gmail.com  Wed May  3 16:26:44 2023
From: jagoncal at gmail.com (=?UTF-8?Q?Jose_Gon=C3=A7alves?=)
Date: Thu, 4 May 2023 00:26:44 +0100
Subject: [PROJ] Projection with angle
In-Reply-To: <CADRrdKuA8ddz=y2q685QrMeMY8UXM0ozZ7q-eDsH7LvF=oX1tw@mail.gmail.com>
References: <CADRrdKuA8ddz=y2q685QrMeMY8UXM0ozZ7q-eDsH7LvF=oX1tw@mail.gmail.com>
Message-ID: <CALHLaOTwYMJ=1DSR=ZZBF1LTbHh8yKUkKh44hKjziS1DoLOmnA@mail.gmail.com>

You can use the Lambert Conformal Conic projection with a central longitude
far from the projected area. You must choose one or two standard parallels
in your area. For example, if you are projecting points (0E,35N) and
(0E,45N) and use standard parallel 40N and a central longitude of 60E:

proj +ellps=GRS80 +proj=lcc +lat_1=40 +lon_0=60

you get:

-5091780.82     1225856.77
-4398673.66     2095115.48

The projection makes a rotation of the meridian proportional to the
longitude difference from the central longitude. You can choose +lon_0
according to the rotation you want. Check the formula in some documentation
about the LCC projection, or try it empirically.

Regards

Jos? Gon?alves




Em qua., 3 de mai. de 2023 ?s 18:33, Javier Jimenez Shaw <j1 at jimenezshaw.com>
escreveu:

> Hi
>
> Is there any projected CRS in PROJ, where I can set an angle with the
> "north" (or something kind of equivalent) as a parameter of the projection?
> The only one I found is Oblique Transverse Mercator, but I have some
> numerical problems with it.
> I would like to try a different one if there is any available.
> I need a CRS that I can express as a PROJCRS in WKT.
>
> Thank you,
> Javier.
>
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230504/e1283779/attachment.htm>

From j1 at jimenezshaw.com  Mon May  8 02:50:54 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 8 May 2023 11:50:54 +0200
Subject: [PROJ] Problems with last EPSG update in Germany
In-Reply-To: <47aa08fa-0d07-1dae-290f-fbda89fbfe6d@spatialys.com>
References: <CADRrdKvj+fBtb6r53Bpp4BrG7CzW2kvGFTc3n9padk=pwsSabA@mail.gmail.com>
 <8f7cb829-94db-6ba5-405a-d4799874aec9@spatialys.com>
 <CADRrdKuPcnyqSHtBs--h6yvSf368ge-7r498tUf6k=gtguigSg@mail.gmail.com>
 <35883941-6b37-9837-785b-132dd4c1edd2@spatialys.com>
 <CADRrdKu9ah9bUaVnL5tR3d=UUciHW9PMKV=6Hw8XLcdb3d0hqQ@mail.gmail.com>
 <47aa08fa-0d07-1dae-290f-fbda89fbfe6d@spatialys.com>
Message-ID: <CADRrdKs_9XJFGTJzfBOGHL4TUY44ymspjHa0g=BRwdvH5j9F-w@mail.gmail.com>

Thanks Even

Finally I am patching the db to "undeprecate" the transformation EPSG:9925,
with a worse accuracy. It produces the same outputs as 9.2.0.
Let's see what can we conclude with BKG/AdV about it.

Cheers,
Javier

On Tue, 2 May 2023 at 19:12, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier,
>
> so for doing ETRF2000 <--> DHDN + DHHN2016 height
>
> What exists as relevant transformations in proj.db:
> ETRF2000 <--> ETRS89/DREF91/2016: Helmert
> DHHN2016 height <--> ETRS89/DREF91/2016: grid
>
> but nothing for ETRS89/DREF91/2016 <--> DHDN
>
> I'm not sure if having such transformation would help (I guess so though)
>
> The "ETRS89 to ETRF2000" null Helmert transformation inserted by PROJ from
> the definition of the ETRS89 datum ensemble cannot help here, because, yes,
> we can do the horizontal and vertical steps with:
>
> ETRF2000 --> ETRS89/DREF91/2016 --> DHHN2016 height
>
> ETRF2000 --> ETRS89 --> DHDN
>
> but when combining them, we're stuck because the intermediate datum
> (ETRS89/DREF91/2016 for vertical, ETRS89 for horizontal) isn't the same (I
> guess having a known transformation could help, but I'm not sure)
>
> And even if that worked, I don't think that could be used to do ETRS89
> <--> DHDN + DHHN2016 height because of the too many inference steps
> required.
>
> Even
> Le 02/05/2023 ? 18:45, Javier Jimenez Shaw a ?crit :
>
> Hi
>
> When I was going to add the Helmert transformation, I realized that there
> is already something similar in proj.db:
> PROJ:ETRS89_TO_ETRF2000 "ETRS89 to ETRF2000" , with all zeros.
>
> However, if I try to go from ETRS89 (via ETRF2000) to "DHDN + DHH2016
> height" it has the same output: horizontal (to DHDN, that is the big chunk)
> or vertical, not both.
> (There is already a transformation in proj.db: EPSG:10292
> 'ETRS89/DREF91/2016 to ETRF2000 (1)')
>
> PROJ_NETWORK=ON projinfo -s EPSG:4937 -t EPSG:4314+7837 -o proj
> --spatial-test intersects
> Candidate operations found: 11
> -------------------------------------
> Operation No. 1:
>
> unknown id, Inverse of Ballpark geographic offset from ETRS89/DREF91/2016
> to ETRS89 + ETRS89/DREF91/2016 to DHHN2016 height (1) + Inverse of Ballpark
> geographic offset from DHDN to ETRS89/DREF91/2016, unknown accuracy,
> Germany - onshore and offshore., has ballpark transformation
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 2:
>
> unknown id, Inverse of Null geographic offset from ETRS89 (geog2D) to
> ETRS89 (geog3D) + ETRS89 to ETRF2000 + Inverse of Conversion from ETRF2000
> (geocentric) to ETRF2000 (geog2D) + Inverse of ETRS89/DREF91/2016 to
> ETRF2000 (1) + Inverse of Conversion from ETRS89/DREF91/2016 (geog3D) to
> ETRS89/DREF91/2016 (geocentric) + ETRS89/DREF91/2016 to DHHN2016 height (1)
> + Inverse of Ballpark geographic offset from DHDN to ETRS89/DREF91/2016,
> unknown accuracy, Germany - onshore and offshore., has ballpark
> transformation
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +proj=cart +ellps=GRS80
>   +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0.000658 +ry=-0.000208
> +rz=0.000755
>         +s=0 +convention=position_vector
>   +step +inv +proj=cart +ellps=GRS80
>   +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 3:
>
> unknown id, Inverse of Transformation from DHHN2016 height to ETRS89
> (ballpark vertical transformation, without ellipsoid height to vertical
> height correction) + Inverse of DHDN to ETRS89 (8), unknown accuracy,
> Germany - onshore - states of Baden-Wurtemberg, Bayern, Berlin,
> Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern,
> Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Sachsen,
> Sachsen-Anhalt, Schleswig-Holstein, Thuringen., has ballpark transformation
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
>
>
> If I use directly ETRF2000 instead of ETRS89, similar. It is not applying
> vertical and horizontal transformations together.
>
> PROJ_NETWORK=ON projinfo -s ETRF2000 -t EPSG:4314+7837 -o proj
> --spatial-test intersects
> Candidate operations found: 11
> -------------------------------------
> Operation No. 1:
>
> unknown id, Inverse of Ballpark geographic offset from ETRS89/DREF91/2016
> to ETRF2000 + ETRS89/DREF91/2016 to DHHN2016 height (1) + Inverse of
> Ballpark geographic offset from DHDN to ETRS89/DREF91/2016, unknown
> accuracy, Germany - onshore and offshore., has ballpark transformation
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 2:
>
> unknown id, Inverse of Conversion from ETRF2000 (geocentric) to ETRF2000
> (geog3D) + Inverse of ETRS89/DREF91/2016 to ETRF2000 (1) + Inverse of
> Conversion from ETRS89/DREF91/2016 (geog3D) to ETRS89/DREF91/2016
> (geocentric) + ETRS89/DREF91/2016 to DHHN2016 height (1) + Inverse of
> Ballpark geographic offset from DHDN to ETRS89/DREF91/2016, unknown
> accuracy, Germany - onshore and offshore., has ballpark transformation
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +proj=cart +ellps=GRS80
>   +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0.000658 +ry=-0.000208
> +rz=0.000755
>         +s=0 +convention=position_vector
>   +step +inv +proj=cart +ellps=GRS80
>   +step +inv +proj=vgridshift +grids=GCG2016.txt +multiplier=1
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 3:
>
> unknown id, Inverse of Transformation from DHHN2016 height to ETRF2000
> (ballpark vertical transformation, without ellipsoid height to vertical
> height correction) + Inverse of ETRS89 to ETRF2000 + Inverse of DHDN to
> ETRS89 (8), unknown accuracy, Germany - onshore - states of
> Baden-Wurtemberg, Bayern, Berlin, Brandenburg, Bremen, Hamburg, Hessen,
> Mecklenburg-Vorpommern, Niedersachsen, Nordrhein-Westfalen,
> Rheinland-Pfalz, Saarland, Sachsen, Sachsen-Anhalt, Schleswig-Holstein,
> Thuringen., has ballpark transformation
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
>
> I was not expecting that. Am I missing anything?
>
> Thanks,
> Javier
>
>
> On Sat, 29 Apr 2023 at 20:31, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>>
>> Le 29/04/2023 ? 19:58, Javier Jimenez Shaw a ?crit :
>> > Thanks Even.
>> >
>> > Yes, I will contact BKG.
>> >
>> > I was thinking on another option: defining a Helmert transformation
>> > between ETRS89/DREF91/2016 and ETRS89, (probably with 0,0,0 params)
>> > and some (in)accuracy, to "connect" the new system with the old ones.
>> > Otherwise the "new" systems and the "old" ones are disconnected and
>> > only ballpark transformations are possible. Something like
>> > https://epsg.org/transformation_9703/ETRF2000-PL-to-ETRS89-1.html for
>> > Poland. (https://epsg.org/search/by-name/?query=ETRF2000-PL sounds
>> > very similar to
>> > https://epsg.org/search/by-name?searchedTerms=ETRS89%2FDREF91%2F2016
>> > but without that "link" to the "old" systems).
>> > What do you think about this? Would it work?
>>
>> Yes that also crossed through my mind. I believe it should work (but
>> beware of the limitations of PROJ inference logic of guessing at most a
>> single intermediate CRS, but for doing WGS84 -> ETRS89 ->
>> ETRS89/DREF91/2016, that should work). You might simulate that
>> beforehand by creating such a Helmert transformation.
>>
>>
>> --
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>>
>> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230508/d0957eba/attachment.htm>

From j1 at jimenezshaw.com  Mon May  8 08:29:51 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 8 May 2023 17:29:51 +0200
Subject: [PROJ] 40 years of PROJ ?!
Message-ID: <CADRrdKsy9ovTYfw9OtVoZf7uaYy1m=6=m4O6ZDJpdY9dK9_Zgw@mail.gmail.com>

Hi

Today talking with Jos? Luis, he noticed in the webpage that PROJ copyright
is 40 years old
? Copyright 1983-2023.
That's is a round number!

Congrats to everybody involved in that.

Let's celebrate it in FOSS4G.

Cheers,
Javier.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230508/31adf2a2/attachment-0001.htm>

From neteler at osgeo.org  Mon May  8 10:25:05 2023
From: neteler at osgeo.org (Markus Neteler)
Date: Mon, 8 May 2023 19:25:05 +0200
Subject: [PROJ] 40 years of PROJ ?!
In-Reply-To: <CADRrdKsy9ovTYfw9OtVoZf7uaYy1m=6=m4O6ZDJpdY9dK9_Zgw@mail.gmail.com>
References: <CADRrdKsy9ovTYfw9OtVoZf7uaYy1m=6=m4O6ZDJpdY9dK9_Zgw@mail.gmail.com>
Message-ID: <CALFmHhuMVauCs6_3vPvRocA5KM9AG6VhTRqQfLbhhB-s8RnM0g@mail.gmail.com>

Hi,

Javier Jimenez Shaw <j1 at jimenezshaw.com> schrieb am Mo., 8. Mai 2023, 17:30:

> Hi
>
> Today talking with Jos? Luis, he noticed in the webpage that PROJ
> copyright is 40 years old
> ? Copyright 1983-2023.
> That's is a round number!
>

Yes!

And we celebrate the same for the GRASS GIS project:

https://grasswiki.osgeo.org/wiki/GRASS_Community_Meeting_Prague_2023


> Congrats to everybody involved in that.
>

Congrats!


> Let's celebrate it in FOSS4G.
>
> Cheers,
> Javier.
>
>
Cheers,
Markus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230508/384cca81/attachment.htm>

From dominik.vogt at gmx.de  Mon May 15 13:33:11 2023
From: dominik.vogt at gmx.de (Dominik Vogt)
Date: Mon, 15 May 2023 21:33:11 +0100
Subject: [PROJ] Help with transformation of GPS coordinates to TK25
Message-ID: <ZGKXByuiGAiowSac@localhost>

I've been trying to write a script (Linux command line) that
translates GPS coordinates coming from an Android phone to TK25
sheets in Germany.  As far as I understand:

 * The Android GPS uses epsg:4326 which is also used by Openstreetmap.
   Well, at least putting the coordinates from the device in a marker
   to osm results in the expected position.

   https://www.openstreetmap.org/?mlat=...&mlon=...

 * There is a German page that can do various transformations (for
   botanical mappibg), and the author says that he manually
   compared the borders of the TK quadrants in the online map with
   his printed sheets on paper.

     https://www.orchids.de/haynold/koordinatenermittler2/

   (First select "Karten usw.", then check "Me?tischblatt" and
   "Quadranten", then click "ausblenden".  This show the grid when
   zooming into the map enough.  Second, press the "K" button on the
   left and select "Me?tischblatt-Quadrant".  The pointer should now
   show the TK25 quadrant it's pointing into.

 * The author also says that the TK quadrants are calculated from
   epsg:4314 coordinates.

 * As far as I understand, TK25 divides each degree into ten sheets
   in W-E-direction and six in N-S-direction and is aligned to whole
   degrees.

Are these assumptions correct?

--

So, I use this shell code (zsh) to do the conversion:

-- snip --
bessel_to_tk () {
	local LAT
	local LON
	local TKLAT
	local TKLON
	local TK
	local Q

	while read LAT LON REST; do
		if echo "$LAT$LON" | grep -q "[^0-9.]"; then
			echo "N/A"
		else
			TKLAT="$[560 - 10 * LAT]"
			TKLON="$[6 * LON - 34]"
			TK="$[${TKLAT%.*} * 100 + ${TKLON%.*}]"
			Q=1
			test x"${TKLAT:#*.[5-9]*}" = x && Q="$[Q + 2]"
			test x"${TKLON:#*.[5-9]*}" = x && Q="$[Q + 1]"
			echo "$TK/$Q"
		fi
	done
}

cs2cs +init=epsg:4326 +to +init=epsg:4314 -f "%.12f" |
bessel_to_tk
-- snip --

This fails near borders; for example the north of the Kissinger
Heide near Augsburg is in TK25 7731/2 according to the mentioned
web page by more than 250 m:

  https://www.openstreetmap.org/?mlat=48.2958411471918&mlon=10.9570727683604

But the conversion puts it in 7631/4:

  https://www.openstreetmap.org/?mlat=48.2958411471918&mlon=10.9570727683604

 $ echo 48.2958411471918 10.9570727683604 | ./script
 7631/4

So, _where_ is the offset coming from?  I really don't know how to
fix this?

--

 $ proj
 Rel. 7.2.1, January 1st, 2021

Ciao

Dominik ^_^  ^_^

--

Dominik Vogt

From support at mnspoint.com  Tue May 16 03:25:36 2023
From: support at mnspoint.com (support at mnspoint.com)
Date: Tue, 16 May 2023 13:25:36 +0300
Subject: [PROJ] Help with transformation of GPS coordinates to TK25
In-Reply-To: <ZGKXByuiGAiowSac@localhost>
References: <ZGKXByuiGAiowSac@localhost>
Message-ID: <61a3cac817fa0abcca86e649eec371c7@mnspoint.com>

Hello,

don't assume anything else but that everything given has errors.

If you get some offset where it should not be, you have either

1) Wrong datum.
2) Missing datum.
3) Datum where datum should not be.
4) GPS coordinates are actually in WGS84 (but not told so). [fix your 
GPS]
5) GPS coordinates are actually in some datum (but not told so). [fix 
your GPS]
6) Try to google the right datum for that area and use it instead.
7) Some wrong parameter (many possibilities)
8) etc.

Mostly it is a datum error ... you are using wrong datum in some point 
of the conversion or assuming something that is not true.

Usually modern GPS's give coordinates in WGS84 datum by default (so 
assume that). And then convert those to TK25 datum. If the device is 
preset to Germany then it most likely uses some modern datum like 
Gauss-Krueger (zone 2, 3, 4 or 5) or UTM (zone 32 or 33). Then you have 
to convert for example UTM 32 -> TK 25. Looks like a datum error.

Janne.

-------------------------
> So, _where_ is the offset coming from?  I really don't know how to
> fix this?

From j1 at jimenezshaw.com  Wed May 17 06:53:39 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 17 May 2023 15:53:39 +0200
Subject: [PROJ] Unexpected no NADCON5 transformations
Message-ID: <CADRrdKvEcaMbu8jZmZeDST=ONwOMxk-fZShERVviT7RfT8HSOQ@mail.gmail.com>

Hi devs,

I was going to get an order of magnitude of NADCON5 transformations added
in PROJ 9.2.0 (+ PROJ-data), and I found that they are not always applied.
As they are datum transformations, I would assume that they are independent
of the vertical system, but maybe I am wrong.

Going from WGS84(3D) to NAD83(2011) + NAVD88 height produces different
horizontal values than the input (what I expected)

$ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4979 EPSG:6318+5703 -d 8
39.99999330 -99.99999115 25.47826194

However any other combination using 2D+vert or 3D is not changing the
horizontal coordinates.

$ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4326+5773 EPSG:6319 -d 8
40.00000000 -100.00000000 -25.05249596
$ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4979 EPSG:6319 -d 8
40.00000000 -100.00000000 0.00000000
$ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4326+5773 EPSG:6318+5703 -d
8
40.00000000 -100.00000000 -0.49709511

Enabling the debug messages, the first case is clearly looking for the
nadcon5 grids. The other 3 are not.

Is that expected?

Thanks.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230517/331250d0/attachment.htm>

From even.rouault at spatialys.com  Wed May 17 09:02:48 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 17 May 2023 18:02:48 +0200
Subject: [PROJ] Unexpected no NADCON5 transformations
In-Reply-To: <CADRrdKvEcaMbu8jZmZeDST=ONwOMxk-fZShERVviT7RfT8HSOQ@mail.gmail.com>
References: <CADRrdKvEcaMbu8jZmZeDST=ONwOMxk-fZShERVviT7RfT8HSOQ@mail.gmail.com>
Message-ID: <b0847f16-62ad-ce1e-8124-0f0f33060d2b@spatialys.com>

Hi Javier,

this is complicated... Assuming that PROJ is going to get consistent 
results for all those variations of complex transformations is a pipe dream

The use of NADCON5 for the EPSG:4979 to EPSG:6318+5703 is actually a bit 
dubious, but not totally unexpected given what there is in the DB and 
the logic of PROJ. When looking at all transformations returned by 
projinfo, there is "Inverse of NAD83(2011) to WGS 84 (1) + NAD83(2011) 
to NAVD88 height (3)" which uses Geoid 2018 and a no-op transformation 
between NAD23(2011) and WGS 84, whose total accuracy (remainder the way 
we synthetize total accuracy from individual transformations is quite 
naive, by adding individual accuracies) is 2.015 m. What is selected 
given the point you transform is Inverse of NAD83(HARN) to WGS 84 (3) + 
NAD83(HARN) to NAVD88 height (6) + NAD83(HARN) to NAD83(2011) (NADCON5, 
CONUS) using Geoid 1999, a Helmert transformation to go from WGS 84 to 
NAD83 (HARN) and the NAD83(HARN) to NAD83(2011) concatenated operation 
chaining 3 NADCON5 grids, whose total accuracy is 1.14 m, hence its 
selection

For EPSG:4326+5773 to EPSG:6319, what is selected is "Inverse of WGS 84 
to EGM96 height (1) + Inverse of NAD83(2011) to WGS 84 (1)" which uses 
the EGM96 grid + the no-op tranfomration between NAD23(2011) and WGS 84. 
Why no NADCON5 grids here ? Because when transforming between a compound 
CRS and a geographic 3D CRS, PROJ looks for all transformations 
involving the vertical CRS (here EGM96 height), and tries to find a 
relationsihp between the geographic CRS/datum of the vertical 
transformation and the geographic CRS/datum of the source and target 
transformations. Here the EGM96 transformation uses WGS84 as the 
interpolation CRS, which matches the source CRS, and there is a known 
transformation between that interpolation CRS and the target CRS.

If one applies that logic to the first situation EPSG:4979 to 
EPSG:6318+5703, things are much more complicated because EPSG:5703 
NAVD88 height has transformations using different geoids and NAD83(xxx) 
variants as interpolation CRS, hence the wild list of transformations 
PROJ has to explore and synthetize.

EPSG:4979 to EPSG:6319 uses the direct "Inverse of NAD83(2011) to WGS 84 
(1)" transformation. When there is a direct transformation, PROJ doesn't 
try, at least by default, to find more convoluted transformation paths.

EPSG:4326+5773 to EPSG:6318+5703 uses "Inverse of WGS 84 to EGM96 height 
(1) + Inverse of NAD83(2011) to WGS 84 (1) + NAD83(2011) to NAVD88 
height (3)", that is EGM96 grid + no-op WGS84<-->NAD83(2011) + 
Geoid2018. Very reasonable. Compound to Compound is one of the most 
complicated case, with different heuristics applied. Here I suspect what 
triggers is the "use the geographic 3D CRS of the source CRS as a 
candidate intermediate for the first step" and "use the geographic 3D 
CRS of the target CRS as a candidate intermediate for the last step", 
and so this goes through the EPSG:4326+5773 -> EPSG:4979? and 
EPSG:6319->EPSG:6318+5703, and connect EPSG:4979 and EPSG:6319

What is certainly true is that in some of those inferences code paths, 
PROJ takes sometimes shortcuts as soon as it has managed to obtained 
reasonable transformation steps (ie no ballpark) from the first 
heuristics it tries, otherwise in the most complicated cases, the 
combinatorics explodes.

Even

Le 17/05/2023 ? 15:53, Javier Jimenez Shaw a ?crit?:
> Hi devs,
>
> I was going to get an order of magnitude of NADCON5 transformations 
> added in PROJ 9.2.0 (+ PROJ-data), and I found that they are not 
> always applied.
> As they are datum transformations, I would assume that they are 
> independent of the vertical system, but maybe I am wrong.
>
> Going from WGS84(3D) to NAD83(2011) + NAVD88 height produces different 
> horizontal values than the input (what I expected)
>
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4979 EPSG:6318+5703 -d 8
> 39.99999330 -99.99999115 25.47826194
>
> However any other combination using 2D+vert or 3D is not changing the 
> horizontal coordinates.
>
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4326+5773 EPSG:6319 -d 8
> 40.00000000 -100.00000000 -25.05249596
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4979 EPSG:6319 -d 8
> 40.00000000 -100.00000000 0.00000000
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4326+5773 
> EPSG:6318+5703 -d 8
> 40.00000000 -100.00000000 -0.49709511
>
> Enabling the debug messages, the first case is clearly looking for the 
> nadcon5 grids. The other 3 are not.
>
> Is that expected?
>
> Thanks.
>
> .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230517/0aa8acc5/attachment.htm>

From j1 at jimenezshaw.com  Wed May 17 10:14:44 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 17 May 2023 19:14:44 +0200
Subject: [PROJ] Unexpected no NADCON5 transformations
In-Reply-To: <b0847f16-62ad-ce1e-8124-0f0f33060d2b@spatialys.com>
References: <CADRrdKvEcaMbu8jZmZeDST=ONwOMxk-fZShERVviT7RfT8HSOQ@mail.gmail.com>
 <b0847f16-62ad-ce1e-8124-0f0f33060d2b@spatialys.com>
Message-ID: <CADRrdKv4RuEAarDZriSauAPJM6Z8ctW3Lwa5iKAHh=mYc8tXxQ@mail.gmail.com>

Thanks Even for the detailed explanation. This is a labyrinth of
transformations.

Looks like the main culprit this time is "NAD83(2011) to WGS 84 (1), 2.0
m", that being a "not very accurate" transformation, is used in some cases
directly. If the "--accuracy" option is set to 1.9, then it tries the other
ones! (but of course, this is something very specific to this case)

The problem is that many data providers "use" WGS84 (as you know, I am not
a fan of it). In some cases with a vertical CRS, sometimes without. NMEA
messages directly include a geoid height in the elevation (I do not know
which model they use, really). So if the firmware wants to use ellipsoidal
heights, has to explicitly do the maths (if I am wrong here, I will
appreciate an explanation). That makes us "assume" that some devices
provide coordinates in EPSG:4979, and some in EPSG:4326+5773.

Cheers,
Javier

On Wed, 17 May 2023 at 18:02, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Javier,
>
> this is complicated... Assuming that PROJ is going to get consistent
> results for all those variations of complex transformations is a pipe dream
>
> The use of NADCON5 for the EPSG:4979 to EPSG:6318+5703 is actually a bit
> dubious, but not totally unexpected given what there is in the DB and the
> logic of PROJ. When looking at all transformations returned by projinfo,
> there is "Inverse of NAD83(2011) to WGS 84 (1) + NAD83(2011) to NAVD88
> height (3)" which uses Geoid 2018 and a no-op transformation between
> NAD23(2011) and WGS 84, whose total accuracy (remainder the way we
> synthetize total accuracy from individual transformations is quite naive,
> by adding individual accuracies) is 2.015 m. What is selected given the
> point you transform is Inverse of NAD83(HARN) to WGS 84 (3) + NAD83(HARN)
> to NAVD88 height (6) + NAD83(HARN) to NAD83(2011) (NADCON5, CONUS) using
> Geoid 1999, a Helmert transformation to go from WGS 84 to NAD83 (HARN) and
> the NAD83(HARN) to NAD83(2011) concatenated operation chaining 3 NADCON5
> grids, whose total accuracy is 1.14 m, hence its selection
>
> For EPSG:4326+5773 to EPSG:6319, what is selected is "Inverse of WGS 84 to
> EGM96 height (1) + Inverse of NAD83(2011) to WGS 84 (1)" which uses the
> EGM96 grid + the no-op tranfomration between NAD23(2011) and WGS 84. Why no
> NADCON5 grids here ? Because when transforming between a compound CRS and a
> geographic 3D CRS, PROJ looks for all transformations involving the
> vertical CRS (here EGM96 height), and tries to find a relationsihp between
> the geographic CRS/datum of the vertical transformation and the geographic
> CRS/datum of the source and target transformations. Here the EGM96
> transformation uses WGS84 as the interpolation CRS, which matches the
> source CRS, and there is a known transformation between that interpolation
> CRS and the target CRS.
>
> If one applies that logic to the first situation EPSG:4979 to
> EPSG:6318+5703, things are much more complicated because EPSG:5703 NAVD88
> height has transformations using different geoids and NAD83(xxx) variants
> as interpolation CRS, hence the wild list of transformations PROJ has to
> explore and synthetize.
>
> EPSG:4979 to EPSG:6319 uses the direct "Inverse of NAD83(2011) to WGS 84
> (1)" transformation. When there is a direct transformation, PROJ doesn't
> try, at least by default, to find more convoluted transformation paths.
>
> EPSG:4326+5773 to EPSG:6318+5703 uses "Inverse of WGS 84 to EGM96 height
> (1) + Inverse of NAD83(2011) to WGS 84 (1) + NAD83(2011) to NAVD88 height
> (3)", that is EGM96 grid + no-op WGS84<-->NAD83(2011) + Geoid2018. Very
> reasonable. Compound to Compound is one of the most complicated case, with
> different heuristics applied. Here I suspect what triggers is the "use the
> geographic 3D CRS of the source CRS as a candidate intermediate for the
> first step" and "use the geographic 3D CRS of the target CRS as a candidate
> intermediate for the last step", and so this goes through the
> EPSG:4326+5773 -> EPSG:4979  and EPSG:6319->EPSG:6318+5703, and connect
> EPSG:4979 and EPSG:6319
>
> What is certainly true is that in some of those inferences code paths,
> PROJ takes sometimes shortcuts as soon as it has managed to obtained
> reasonable transformation steps (ie no ballpark) from the first heuristics
> it tries, otherwise in the most complicated cases, the combinatorics
> explodes.
>
> Even
> Le 17/05/2023 ? 15:53, Javier Jimenez Shaw a ?crit :
>
> Hi devs,
>
> I was going to get an order of magnitude of NADCON5 transformations added
> in PROJ 9.2.0 (+ PROJ-data), and I found that they are not always applied.
> As they are datum transformations, I would assume that they are
> independent of the vertical system, but maybe I am wrong.
>
> Going from WGS84(3D) to NAD83(2011) + NAVD88 height produces different
> horizontal values than the input (what I expected)
>
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4979 EPSG:6318+5703 -d 8
> 39.99999330 -99.99999115 25.47826194
>
> However any other combination using 2D+vert or 3D is not changing the
> horizontal coordinates.
>
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4326+5773 EPSG:6319 -d 8
> 40.00000000 -100.00000000 -25.05249596
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4979 EPSG:6319 -d 8
> 40.00000000 -100.00000000 0.00000000
> $ echo 40 -100 0 | PROJ_NETWORK=ON ./cs2cs EPSG:4326+5773 EPSG:6318+5703
> -d 8
> 40.00000000 -100.00000000 -0.49709511
>
> Enabling the debug messages, the first case is clearly looking for the
> nadcon5 grids. The other 3 are not.
>
> Is that expected?
>
> Thanks.
>
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230517/a1a7fa96/attachment.htm>

From gdt at lexort.com  Sat May 20 16:18:29 2023
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 20 May 2023 19:18:29 -0400
Subject: [PROJ] Unexpected no NADCON5 transformations
In-Reply-To: <CADRrdKv4RuEAarDZriSauAPJM6Z8ctW3Lwa5iKAHh=mYc8tXxQ@mail.gmail.com>
 (Javier Jimenez Shaw's message of "Wed, 17 May 2023 19:14:44 +0200")
References: <CADRrdKvEcaMbu8jZmZeDST=ONwOMxk-fZShERVviT7RfT8HSOQ@mail.gmail.com>
 <b0847f16-62ad-ce1e-8124-0f0f33060d2b@spatialys.com>
 <CADRrdKv4RuEAarDZriSauAPJM6Z8ctW3Lwa5iKAHh=mYc8tXxQ@mail.gmail.com>
Message-ID: <rmir0razj5m.fsf@s1.lexort.com>

Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:

> The problem is that many data providers "use" WGS84 (as you know, I am not
> a fan of it).

I think you will have to remediate the provider's use of an ensemble by
relabeling to WGS84(G2159) or equivalently ITRF2014, and then transform
selection will (should...) make more sense.  Very likely the data is not
actually in an ensemble :-)

> In some cases with a vertical CRS, sometimes without. NMEA messages
> directly include a geoid height in the elevation (I do not know which
> model they use, really).

I dug into this earlier, and the quick summary is:

  WGS84 Ellipsoidal Height is well defined (for any realization)

  WGS84 Orthometric Height is also well defined.  I think it's height
  above the reference surface actually, but in practice it is the height
  as computed from HAE by a specific geoid model which varies by
  realization.  Recent realizations specify EGM2008, and EGM2020 is
  threatened to arrive soon.  Early realizations specify EGM96.

  NMEA gives the elevation (height above geoid) and the geoid
  separation.  But in practice the receiver first computes HAE, and then
  does a lookup of geoid separation using a receiver-specific coarse
  model.  As far as I can tell almost all navigation-type receivers,
  even things that you might expect to be better like the u-blox F9P,
  use a 15 degree (degree not minute!!) version of EGM96, which can
  differ by 4m from the reference full-term EGM2008 model, at least
  around me (Boston).  Most of the difference is due to coarse
  interpolation rather than the improved model in EGM2008; the full
  EGM96 model is vastly closer.  It then subtracts the two to get
  elevation, thus imposing the error in the geoid model lookup on the
  elevations.  Nobody notices because autonomous or even WAAS elevations
  are poor, and survey usage avoids this, it seems to me.

  One can back out the reported geoid separation from the altitude to
  get HAE, and then go from there, processing more reasonably.  And, if
  wanting NAVD88 not use EGM96/EGM2008 at all.  (I am unaware of
  transforms from WGS84 Orthometric Height to NAVD88, other than going
  to WGS84 HAE, then NAD83(2011) HAE, and then via a hybrid geoid
  e.g. GEOID18 to NAVD88.)

  IMHO the only sane thing to do if you care about height being right is
  to immediately back out the receiver's geoid model and then ignore
  that model.


I do wonder if using WGS84+some_height is causing different processing
when transforming, because NAD83(1986) is a 2D CRS, while later NAD83
are 3D.  But I can't give any coherent rationale at the moment.

> So if the firmware wants to use ellipsoidal heights, has to explicitly
> do the maths (if I am wrong here, I will appreciate an
> explanation). That makes us "assume" that some devices provide
> coordinates in EPSG:4979, and some in EPSG:4326+5773.

With caveats, yes:

  All receivers that speak NMEA I have seen have a very poor version of
  EGM96.

  Surveying practice seems to be to use XYZ or LLh directly, not via
  NMEA.  But you are talking about NMEA.

  <rant>No receiver provides actually coordinates in the WGS84 ensemble.
  They provide coordinates in the realization currently in use by the
  control segment, if doing autonomous positioning.  From the date the
  data was collected, you can determine the particular realization.</>

  Most receivers are multi-constellation, and I have not seen any
  detailed, believable information about how they do datum processing.
  My default assumption is that they basically operate in recent WGS84
  == recent ITRF == recent Galileo ~== recent BDS frames, with a known
  transform to recent PZ90, but that is me guessing.  <rant>Yet, people
  still attribute this output as WGS84(ensemble).</>

  Receivers are often using SBAS, in which case coordinates are no
  longer in WGS84, but in the reference frame of the differential
  service, which is typically some recent ITRF, but often hard to pin
  down, at least for the US WAAS.  (RTK is of course in a variety of
  frames, as a fundamentally differential technique.)

From kristianevers at gmail.com  Wed May 24 12:19:34 2023
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 24 May 2023 21:19:34 +0200
Subject: [PROJ] PROJ 9.2.1RC1 & PROJ-data 1.14RC1
Message-ID: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>

All,

It?s soon time for another round of PROJ and PROJ-data releases, so in preparation for the final
releases I have uploaded release candidates for both packages.

Download the archives here:

https://download.osgeo.org/proj/proj-9.2.1RC1.tar.gz
https://download.osgeo.org/proj/proj-9.2.1RC1.zip

https://download.osgeo.org/proj/proj-data-1.14RC1.tar.gz
https://download.osgeo.org/proj/proj-data-1.14RC1.zip


The PROJ release includes updates to the database contents and bug fixes. See the release notes below.

The PROJ-data release adds the following transformations grids:

- German Hessen grids
- Canadian RGNC15 grids
- Danish grids for a number of older CRS's

Please test the release candidates and report any issues you may find with them. Either here
on the mailing list or on GitHub.

/Kristian

??????????????????

9.2.1 Release Notes
-------------------

 Database updates
 --------

 o Add alias for old ESRI datum/CRS names of EPSG:8353
   S_JTSK_JTSK03_Krovak_East_North (#3678)

 o Pseudo Mercator now supported with IAU CRS's (#3645)

 o Updated to EPSG 10.088 (#3731)

 Bug fixes
 ----------

 o Fixed build errors with Cygwin (#3642)

 o PROJ string CRS parser: make sure that PROJ arguments of the rotated
   string are kept in the WKT representation (#3656)

 o Fix slowness on proj_trans() when doing WGS 84 <--> NAD83 conversions (#3661)

 o vgridshift/gridshift: accept hydroid_height as valid band description (#3675)

 o WKT/PROJJSON: import/export accuracy of ConcatenatedOperation (#3676)

 o Coordinate operation factory: count identified concatenated operations as a
   single step (#3677)

 o EngineeringCRS: make proj_create_engineering_crs() set a datum name
   and relax isEquivalentTo() comparisons (#3685)

 o PROJJSON: fix import/export of integer parameter value, and deal with
   interpolation CRS parameters in conversions (#3695)

 o  CMake: avoid imbalanced cmake_policy push/pop if TIFF or CURL dependency
    cannot be found (#3697)
 
 o  proj_create_crs_to_crs(): restore transformation selection behaviour
    of PROJ 9.1 when grids are missing (#3707)

 o  ESRI WKT: improve roundtrip of name and definition for UPS WGS84 CRS (#3720)

 o CRS instanciation from PROJ.4 string: set 'Unknown based on XXXX ellipsoid'
   datum name when instanciating from known +a, +rf (#3727)

 o  cs2cs / proj_create_crs_to_crs(): fix regression with geocentric CRS (#3729)

 o  proj_trans(): set PROJ_ERR_COORD_TRANSFM_NO_OPERATION error when failing
    in ONLY_BEST=YES mode (#3730)

 o  tinshift: raise maximum size of JSON file to 100 MB (#3736)
 

From alansnow21 at gmail.com  Wed May 24 17:46:25 2023
From: alansnow21 at gmail.com (Alan Snow)
Date: Wed, 24 May 2023 19:46:25 -0500
Subject: [PROJ] PROJ 9.2.1RC1 & PROJ-data 1.14RC1
In-Reply-To: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
References: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
Message-ID: <CAGybdFTKoE+MbHcJmTF0MrMukEJNkZyePd6MAjCbDO53jQW4gA@mail.gmail.com>

All pyproj tests pass with 9.2.1RC1.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230524/d8046554/attachment.htm>

From sebastic at xs4all.nl  Wed May 24 21:00:05 2023
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 25 May 2023 06:00:05 +0200
Subject: [PROJ] PROJ 9.2.1RC1 & PROJ-data 1.14RC1
In-Reply-To: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
References: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
Message-ID: <d5ac3ca1-e20b-53f7-d819-74748c933b11@xs4all.nl>

On 5/24/23 21:19, Kristian Evers wrote:
> Please test the release candidates and report any issues you may find with them. Either here
> on the mailing list or on GitHub.
There seems to be a copy/paste issue in README.DATA:

 
https://github.com/OSGeo/PROJ-data/commit/134e82a37a35982ed8a74d876b9999e8f575d1d7#diff-cd7bf297537759126480f6030d566d18e63596cb62649101180869a9bdd72740

Kind Regards,

Bas

-- 
  GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1


From martin.desruisseaux at geomatys.com  Thu May 25 04:15:31 2023
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 25 May 2023 13:15:31 +0200
Subject: [PROJ] Add trivial support for EPSG:1026 operation method?
Message-ID: <98ec7ccf-97ac-68a6-5479-414a70d2f6ee@geomatys.com>

Hello all

PROJ does not seem to support the following operation method at this time:

  * EPSG:1026 ? Mercator (Spherical)
    https://epsg.org/coord-operation-method_1026/Mercator-Spherical.html

Would it be possible to add it? (I can contribute a patch if I get some 
guidance about which file to edit). The implementation can be very trivial:

 1. If the ellipsoid is not a sphere, raise an error.
 2. Otherwise treat as synonymous of EPSG:1024 ? Popular Visualisation
    Pseudo Mercator.

Step 1 could be replaced by the radius of the conformal sphere as 
suggested by EPSG, but the above trivial implementation would be 
sufficient for now for the purpose described below.

The rational for adding EPSG:1026 support would be for the definition of 
extra-terrestrial CRS. For compatibility with existing software, some 
members of the OGC Planetary working group want to use the 
Pseudo-Mercator projection. However many extra-terrestrial CRS are 
defined on a sphere rather than an ellipsoid. In that particular case, 
Pseudo-Mercator (EPSG:1024) is mathematically equivalent to Spherical 
Mercator (EPSG:1026). The CRS could use former, but I would encourage 
the planetary group to use the latter because it carries a semantic 
difference. The EPSG guidance notes warns the reader about the problems 
of Pseudo-Mercator (non-conformal, etc.). However those issues do not 
apply when the datum uses a sphere. The EPSG guidance notes do not 
mention that fact maybe because Pseudo-Mercator has been introduced for 
use with ellipsoids and is useless on spheres (because the existing 
classical Mercator projection was already doing the exact same thing). 
The use of Pseudo-Mercator on a sphere may give to non-experts the false 
impression that Pseudo-Mercator problems still apply, while actually it 
got the properties of a classical Mercator projection, in particular the 
fact that it become a conformal projection. Using "Mercator (Spherical)" 
operation method instead makes that fact clearer. Given that the 
implementation can be trivial ? identical to Pseudo-Mercator with only a 
check for making sure that the datum uses a sphere ? it seems to me that 
it would be a reasonable addition to what can be expected from software 
(not only PROJ), and that the gain in semantic value is worthy.

 ??? Martin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230525/6a1ad836/attachment.htm>

From even.rouault at spatialys.com  Thu May 25 05:56:30 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 25 May 2023 14:56:30 +0200
Subject: [PROJ] Add trivial support for EPSG:1026 operation method?
In-Reply-To: <98ec7ccf-97ac-68a6-5479-414a70d2f6ee@geomatys.com>
References: <98ec7ccf-97ac-68a6-5479-414a70d2f6ee@geomatys.com>
Message-ID: <633ee859-a1a6-2131-d105-ef10291814a2@spatialys.com>

Hi,

I've implemented this in https://github.com/OSGeo/PROJ/pull/3741

Even

Le 25/05/2023 ? 13:15, Martin Desruisseaux a ?crit?:
>
> Hello all
>
> PROJ does not seem to support the following operation method at this time:
>
>   * EPSG:1026 ? Mercator (Spherical)
>     https://epsg.org/coord-operation-method_1026/Mercator-Spherical.html
>
> Would it be possible to add it? (I can contribute a patch if I get 
> some guidance about which file to edit). The implementation can be 
> very trivial:
>
>  1. If the ellipsoid is not a sphere, raise an error.
>  2. Otherwise treat as synonymous of EPSG:1024 ? Popular Visualisation
>     Pseudo Mercator.
>
> Step 1 could be replaced by the radius of the conformal sphere as 
> suggested by EPSG, but the above trivial implementation would be 
> sufficient for now for the purpose described below.
>
> The rational for adding EPSG:1026 support would be for the definition 
> of extra-terrestrial CRS. For compatibility with existing software, 
> some members of the OGC Planetary working group want to use the 
> Pseudo-Mercator projection. However many extra-terrestrial CRS are 
> defined on a sphere rather than an ellipsoid. In that particular case, 
> Pseudo-Mercator (EPSG:1024) is mathematically equivalent to Spherical 
> Mercator (EPSG:1026). The CRS could use former, but I would encourage 
> the planetary group to use the latter because it carries a semantic 
> difference. The EPSG guidance notes warns the reader about the 
> problems of Pseudo-Mercator (non-conformal, etc.). However those 
> issues do not apply when the datum uses a sphere. The EPSG guidance 
> notes do not mention that fact maybe because Pseudo-Mercator has been 
> introduced for use with ellipsoids and is useless on spheres (because 
> the existing classical Mercator projection was already doing the exact 
> same thing). The use of Pseudo-Mercator on a sphere may give to 
> non-experts the false impression that Pseudo-Mercator problems still 
> apply, while actually it got the properties of a classical Mercator 
> projection, in particular the fact that it become a conformal 
> projection. Using "Mercator (Spherical)" operation method instead 
> makes that fact clearer. Given that the implementation can be trivial 
> ? identical to Pseudo-Mercator with only a check for making sure that 
> the datum uses a sphere ? it seems to me that it would be a reasonable 
> addition to what can be expected from software (not only PROJ), and 
> that the gain in semantic value is worthy.
>
> ??? Martin
>
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230525/9e6829bc/attachment-0001.htm>

From martin.desruisseaux at geomatys.com  Thu May 25 06:14:09 2023
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 25 May 2023 15:14:09 +0200
Subject: [PROJ] Add trivial support for EPSG:1026 operation method?
In-Reply-To: <633ee859-a1a6-2131-d105-ef10291814a2@spatialys.com>
References: <98ec7ccf-97ac-68a6-5479-414a70d2f6ee@geomatys.com>
 <633ee859-a1a6-2131-d105-ef10291814a2@spatialys.com>
Message-ID: <4b935521-fbd9-156d-7076-1b32b59869c3@geomatys.com>

Le 25/05/2023 ? 14:56, Even Rouault a ?crit?:

> I've implemented this in https://github.com/OSGeo/PROJ/pull/3741
>
Wow, that was quick! Thank you very much!

 ??? Martin



From howard at hobu.co  Thu May 25 08:37:09 2023
From: howard at hobu.co (Howard Butler)
Date: Thu, 25 May 2023 10:37:09 -0500
Subject: [PROJ] Motion: Migrate proj.org to ReadTheDocs
In-Reply-To: <BEF62B3F-2359-42D5-9777-8C4A6DFFD932@hobu.co>
References: <16A9CDD0-F6FD-46EB-A9F2-189FE3F9CC77@hobu.co>
 <BEF62B3F-2359-42D5-9777-8C4A6DFFD932@hobu.co>
Message-ID: <1CFC620E-48CD-4E35-9772-D1F994FD8AAF@hobu.co>



> On Mar 3, 2023, at 7:51 AM, Howard Butler <howard at hobu.co> wrote:
> 
> 
> 
>> On Feb 3, 2023, at 1:00 PM, Howard Butler <howard at hobu.co> wrote:
>> 
>> All,
>> 
>> I would like to motion to migrate proj.org from our self-managed GitHub Pages-based deployment to one based on ReadTheDocs (RTD). The new deployment will host multi-versioned content all the way back to 5.0 thanks to Mike Taves. 
> 
> Declaring this motion passed with +1s from KurtS, KristianE, EvenR, CharkesK, and AlanS.
> 
> RTD Gold membership has moving through the bureaucratic plumbing thanks to Mike Smith, and we should be ready to complete the DNS migration this week or next.

Following up on this, I will initiate the migration of proj.org <http://proj.org/>'s DNS to ReadTheDocs this weekend. Thanks to everyone who contributed, especially Mike Taves.

Howard

From nicolas.bellaiche at ign.fr  Fri May 26 11:54:34 2023
From: nicolas.bellaiche at ign.fr (Nicolas Bellaiche)
Date: Fri, 26 May 2023 20:54:34 +0200 (CEST)
Subject: [PROJ] Migrating to PROJ-9
Message-ID: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>

Hi all, 

I'm migrating my C++ code from PROJ4 to PROJ9 and I meet a worrying issue with the computation. Some of my regress tests don't pass so I've tested with cs2cs and gets the same difference: 



PROJ4 

echo [ callto:652760.73700000 | 652760.73700000 ] [ callto:7033791.24300000 43 | 7033791.24300000 43 ] .64200000 | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93: 

4070327.25 [ callto:166078.93 4891298.61 | 166078.93 4891298.61 ] 




PROJ7 or PROJ9 

echo [ callto:652760.73700000 | 652760.73700000 ] [ callto:7033791.24300000 43 | 7033791.24300000 43 ] .64200000 | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93: 

4070355.05 [ callto:166080.07 4891332.24 | 166080.07 4891332.24 ] 






I suspect that PROJ7 and PROJ9 don't read properly the geoid file but I'm not sure. Someone can help me tracking and fixing this problem? 

Thanks, 

Nicolas Bellaiche 
Institut G?ographique National France 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230526/214e5097/attachment.htm>

From even.rouault at spatialys.com  Fri May 26 12:46:00 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 26 May 2023 21:46:00 +0200
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
Message-ID: <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>

Hi,

I get the expected 4070327.25 166078.93 4891298.61 result with proj 
6.0.0, 7.2.1, 9.2.0 and master

There's no grid involved in this operation, just inverse LCC projection 
on the RGF93 datum

I also tried to reproduce your issue if the PROJ < 6 IGNF file is found 
in the PROJ resource path(s) (non nominal situation - this file is not 
needed any more, and will generally lead to suboptimal results. Its 
content is included in the proj.db file), but even with that I get the 
expected result. So no idea why you get wrong results

Even


Le 26/05/2023 ? 20:54, Nicolas Bellaiche a ?crit?:
> Hi all,
>
> I'm migrating my C++ code from PROJ4 to PROJ9 and I meet a worrying 
> issue with the computation. Some of my regress tests don't pass so 
> I've tested with cs2cs and gets the same difference:
>
> PROJ4
>
> echo652760.73700000 <callto:652760.73700000>7033791.24300000 43 
> <callto:7033791.24300000 43>.64200000 | cs2cs +init=IGNF:LAMB93 +to 
> +init=IGNF:RGF93:
>
> 4070327.25166078.93 4891298.61 <callto:166078.93 4891298.61>
>
>
> PROJ7 or PROJ9
>
> echo652760.73700000 <callto:652760.73700000>7033791.24300000 43 
> <callto:7033791.24300000 43>.64200000 | cs2cs +init=IGNF:LAMB93 +to 
> +init=IGNF:RGF93:
>
> 4070355.05166080.07 4891332.24 <callto:166080.07 4891332.24>
>
>
>
>
> I suspect that PROJ7 and PROJ9 don't read properly the geoid file but 
> I'm not sure. Someone can help me tracking and fixing this problem?
>
> Thanks,
>
> Nicolas Bellaiche
> Institut G?ographique National France
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230526/d5176f95/attachment-0001.htm>

From even.rouault at spatialys.com  Fri May 26 12:50:27 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 26 May 2023 21:50:27 +0200
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
Message-ID: <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>

Ah, and you should avoid using the "+init=" prefix. This is a deprecated 
legacy syntax that doesn't enforce axis order of the CRS definition 
(without practical consequence for IGNF: CRS since they use "GIS 
friendly" axis order)

To help debugging this, please provide the output of:

PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93 -o PROJ

On my system I get:

pj_open_lib(proj.ini): call 
fopen(/home/even/proj/install-proj-master/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call 
fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded
Candidate operations found: 1
-------------------------------------
Operation No. 1:

unknown id, Inverse of LAMBERT-93 + Conversion from RGF93 geographiques 
(dms) to RGF93 cartesiennes geocentriques, 0 m, World

PROJ string:
+proj=pipeline
 ? +step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49 +x_0=700000
 ??????? +y_0=6600000 +ellps=GRS80
 ? +step +proj=cart +ellps=GRS80

Le 26/05/2023 ? 21:46, Even Rouault a ?crit?:
>
> Hi,
>
> I get the expected 4070327.25 166078.93 4891298.61 result with proj 
> 6.0.0, 7.2.1, 9.2.0 and master
>
> There's no grid involved in this operation, just inverse LCC 
> projection on the RGF93 datum
>
> I also tried to reproduce your issue if the PROJ < 6 IGNF file is 
> found in the PROJ resource path(s) (non nominal situation - this file 
> is not needed any more, and will generally lead to suboptimal results. 
> Its content is included in the proj.db file), but even with that I get 
> the expected result. So no idea why you get wrong results
>
> Even
>
>
> Le 26/05/2023 ? 20:54, Nicolas Bellaiche a ?crit?:
>> Hi all,
>>
>> I'm migrating my C++ code from PROJ4 to PROJ9 and I meet a worrying 
>> issue with the computation. Some of my regress tests don't pass so 
>> I've tested with cs2cs and gets the same difference:
>>
>> PROJ4
>>
>> echo652760.73700000 <callto:652760.73700000>7033791.24300000 43 
>> <callto:7033791.24300000 43>.64200000 | cs2cs +init=IGNF:LAMB93 +to 
>> +init=IGNF:RGF93:
>>
>> 4070327.25166078.93 4891298.61 <callto:166078.93 4891298.61>
>>
>>
>> PROJ7 or PROJ9
>>
>> echo652760.73700000 <callto:652760.73700000>7033791.24300000 43 
>> <callto:7033791.24300000 43>.64200000 | cs2cs +init=IGNF:LAMB93 +to 
>> +init=IGNF:RGF93:
>>
>> 4070355.05166080.07 4891332.24 <callto:166080.07 4891332.24>
>>
>>
>>
>>
>> I suspect that PROJ7 and PROJ9 don't read properly the geoid file but 
>> I'm not sure. Someone can help me tracking and fixing this problem?
>>
>> Thanks,
>>
>> Nicolas Bellaiche
>> Institut G?ographique National France
>>
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230526/9b9d5b24/attachment.htm>

From howard at hobu.co  Sat May 27 05:11:15 2023
From: howard at hobu.co (Howard Butler)
Date: Sat, 27 May 2023 07:11:15 -0500
Subject: [PROJ] Motion: Migrate proj.org to ReadTheDocs
In-Reply-To: <1CFC620E-48CD-4E35-9772-D1F994FD8AAF@hobu.co>
References: <16A9CDD0-F6FD-46EB-A9F2-189FE3F9CC77@hobu.co>
 <BEF62B3F-2359-42D5-9777-8C4A6DFFD932@hobu.co>
 <1CFC620E-48CD-4E35-9772-D1F994FD8AAF@hobu.co>
Message-ID: <2ADD9538-056B-48BD-9294-1180749C78B9@hobu.co>



> On May 25, 2023, at 10:37 AM, Howard Butler <howard at hobu.co> wrote:
> 
> 
> 
>> On Mar 3, 2023, at 7:51 AM, Howard Butler <howard at hobu.co> wrote:
>> 
>> 
>> 
>>> On Feb 3, 2023, at 1:00 PM, Howard Butler <howard at hobu.co> wrote:
>>> 
>>> All,
>>> 
>>> I would like to motion to migrate proj.org from our self-managed GitHub Pages-based deployment to one based on ReadTheDocs (RTD). The new deployment will host multi-versioned content all the way back to 5.0 thanks to Mike Taves. 
>> 
>> Declaring this motion passed with +1s from KurtS, KristianE, EvenR, CharkesK, and AlanS.
>> 
>> RTD Gold membership has moving through the bureaucratic plumbing thanks to Mike Smith, and we should be ready to complete the DNS migration this week or next.
> 
> Following up on this, I will initiate the migration of proj.org <http://proj.org/>'s DNS to ReadTheDocs this weekend. Thanks to everyone who contributed, especially Mike Taves.

The DNS change has been implemented, and if you visit https://proj.org <https://proj.org/> you should be getting the version being generated and built by ReadTheDocs.

Please file tickets for any issues as a result of this change.

Howard

From nicolas.bellaiche at ign.fr  Tue May 30 05:35:11 2023
From: nicolas.bellaiche at ign.fr (Nicolas Bellaiche)
Date: Tue, 30 May 2023 14:35:11 +0200 (CEST)
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
 <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
Message-ID: <548128917.8241640.1685450111770.JavaMail.zimbra@ign.fr>



Bonjour M. Rouault, 




Voil? ce que j'obtiens: 




PROJ9: 




Release % PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93 -o PROJ 







pj_open_lib(proj.ini): call fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.ini) - succeeded 

pj_open_lib(proj.db): call fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.db) - succeeded 

Candidate operations found: 1 

------------------------------------- 

Operation No. 1: 




unknown id, Inverse of LAMBERT-93 + Conversion from RGF93 geographiques (dms) to RGF93 cartesiennes geocentriques, 0 m, World 




PROJ string: 

+proj=pipeline 

+step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49 +x_0=700000 

+y_0=6600000 +ellps=GRS80 

+step +proj=cart +ellps=GRS80 







Release % echo 652760.73700000 7033791.24300000 43.64200000 | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93 

4070355.05 166080.07 4891332.24 







Release % echo $PROJ_DATA 

/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad 






Release % echo $PROJ_LIB 

/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad 







je ne vois pas de diff?rence. Je n'ai pas le d?but d'une id?e de comment identifier le probl?me... 




N. 







De: "Even Rouault" <even.rouault at spatialys.com> 
?: "proj" <proj at lists.osgeo.org> 
Envoy?: Vendredi 26 Mai 2023 21:50:27 
Objet: Re: [PROJ] Migrating to PROJ-9 



Ah, and you should avoid using the "+init=" prefix. This is a deprecated legacy syntax that doesn't enforce axis order of the CRS definition (without practical consequence for IGNF: CRS since they use "GIS friendly" axis order) 


To help debugging this, please provide the output of: 


PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93 -o PROJ 


On my system I get: 


pj_open_lib(proj.ini): call fopen(/home/even/proj/install-proj-master/share/proj/proj.ini) - succeeded 
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded 
Candidate operations found: 1 
------------------------------------- 
Operation No. 1: 

unknown id, Inverse of LAMBERT-93 + Conversion from RGF93 geographiques (dms) to RGF93 cartesiennes geocentriques, 0 m, World 

PROJ string: 
+proj=pipeline 
+step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49 +x_0=700000 
+y_0=6600000 +ellps=GRS80 
+step +proj=cart +ellps=GRS80 

Le 26/05/2023 ? 21:46, Even Rouault a ?crit : 




Hi, 

I get the expected 4070327.25 166078.93 4891298.61 result with proj 6.0.0, 7.2.1, 9.2.0 and master 

There's no grid involved in this operation, just inverse LCC projection on the RGF93 datum 

I also tried to reproduce your issue if the PROJ < 6 IGNF file is found in the PROJ resource path(s) (non nominal situation - this file is not needed any more, and will generally lead to suboptimal results. Its content is included in the proj.db file), but even with that I get the expected result. So no idea why you get wrong results 


Even 


Le 26/05/2023 ? 20:54, Nicolas Bellaiche a ?crit : 

BQ_BEGIN

Hi all, 

I'm migrating my C++ code from PROJ4 to PROJ9 and I meet a worrying issue with the computation. Some of my regress tests don't pass so I've tested with cs2cs and gets the same difference: 



PROJ4 

echo 652760.73700000 7033791.24300000 43 .64200000 | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93: 

4070327.25 166078.93 4891298.61 




PROJ7 or PROJ9 

echo 652760.73700000 7033791.24300000 43 .64200000 | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93: 

4070355.05 166080.07 4891332.24 






I suspect that PROJ7 and PROJ9 don't read properly the geoid file but I'm not sure. Someone can help me tracking and fixing this problem? 

Thanks, 

Nicolas Bellaiche 
Institut G?ographique National France 

_______________________________________________
PROJ mailing list [ mailto:PROJ at lists.osgeo.org | PROJ at lists.osgeo.org ] [ https://lists.osgeo.org/mailman/listinfo/proj | https://lists.osgeo.org/mailman/listinfo/proj ] 



-- [ http://www.spatialys.com/ | http://www.spatialys.com ] My software is free, but my time generally not. 

_______________________________________________
PROJ mailing list [ mailto:PROJ at lists.osgeo.org | PROJ at lists.osgeo.org ] [ https://lists.osgeo.org/mailman/listinfo/proj | https://lists.osgeo.org/mailman/listinfo/proj ] 

BQ_END

-- [ http://www.spatialys.com/ | http://www.spatialys.com ] My software is free, but my time generally not. 

_______________________________________________ 
PROJ mailing list 
PROJ at lists.osgeo.org 
https://lists.osgeo.org/mailman/listinfo/proj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/beb2ee49/attachment-0001.htm>

From even.rouault at spatialys.com  Tue May 30 05:44:43 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2023 14:44:43 +0200
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <548128917.8241640.1685450111770.JavaMail.zimbra@ign.fr>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
 <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
 <548128917.8241640.1685450111770.JavaMail.zimbra@ign.fr>
Message-ID: <970cf960-fa23-e465-a8c1-63ef030831b3@spatialys.com>

Weird indeed:

and what about trying directly the pipeline with cct :

echo 652760.73700000 7033791.24300000 43.64200000 | cct +proj=pipeline 
+step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49 
+x_0=700000 +y_0=6600000 +ellps=GRS80 +step +proj=cart +ellps=GRS80

you should get:

 ?4070327.2514??? 166078.9321? 4891298.6149?????????? inf

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From kristianevers at gmail.com  Tue May 30 10:41:01 2023
From: kristianevers at gmail.com (Kristian Evers)
Date: Tue, 30 May 2023 19:41:01 +0200
Subject: [PROJ] PROJ 9.2.1RC1 & PROJ-data 1.14RC1
In-Reply-To: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
References: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
Message-ID: <558404C5-171F-45B4-8A6B-5E6447E587AC@gmail.com>

A few minor details were reported with PROJ-data 1.14RC1 so I have prepared
and uploaded PROJ-data 1.14RC2 which fixes the problems. Link below.

https://download.osgeo.org/proj/proj-data-1.14RC2.tar.gz <https://download.osgeo.org/proj/proj-data-1.14RC2.tar.gz>
https://download.osgeo.org/proj/proj-data-1.14RC2.zip <https://download.osgeo.org/proj/proj-data-1.14RC2.zip>

Thanks to Bas for noticing the problems and supplying fixes.


Since the fixes for the PROJ-data package were minor and no issues has been reported
with the PROJ release candidate I?ll go ahead straight away and motion that both release
candidates be promoted to their final versions. I?ll start with my +1.

/Kristian

> On 24 May 2023, at 21.19, Kristian Evers <kristianevers at gmail.com> wrote:
> 
> All,
> 
> It?s soon time for another round of PROJ and PROJ-data releases, so in preparation for the final
> releases I have uploaded release candidates for both packages.
> 
> Download the archives here:
> 
> https://download.osgeo.org/proj/proj-9.2.1RC1.tar.gz
> https://download.osgeo.org/proj/proj-9.2.1RC1.zip
> 
> https://download.osgeo.org/proj/proj-data-1.14RC1.tar.gz
> https://download.osgeo.org/proj/proj-data-1.14RC1.zip
> 
> 
> The PROJ release includes updates to the database contents and bug fixes. See the release notes below.
> 
> The PROJ-data release adds the following transformations grids:
> 
> - German Hessen grids
> - Canadian RGNC15 grids
> - Danish grids for a number of older CRS's
> 
> Please test the release candidates and report any issues you may find with them. Either here
> on the mailing list or on GitHub.
> 
> /Kristian
> 
> ??????????????????
> 
> 9.2.1 Release Notes
> -------------------
> 
> Database updates
> --------
> 
> o Add alias for old ESRI datum/CRS names of EPSG:8353
>   S_JTSK_JTSK03_Krovak_East_North (#3678)
> 
> o Pseudo Mercator now supported with IAU CRS's (#3645)
> 
> o Updated to EPSG 10.088 (#3731)
> 
> Bug fixes
> ----------
> 
> o Fixed build errors with Cygwin (#3642)
> 
> o PROJ string CRS parser: make sure that PROJ arguments of the rotated
>   string are kept in the WKT representation (#3656)
> 
> o Fix slowness on proj_trans() when doing WGS 84 <--> NAD83 conversions (#3661)
> 
> o vgridshift/gridshift: accept hydroid_height as valid band description (#3675)
> 
> o WKT/PROJJSON: import/export accuracy of ConcatenatedOperation (#3676)
> 
> o Coordinate operation factory: count identified concatenated operations as a
>   single step (#3677)
> 
> o EngineeringCRS: make proj_create_engineering_crs() set a datum name
>   and relax isEquivalentTo() comparisons (#3685)
> 
> o PROJJSON: fix import/export of integer parameter value, and deal with
>   interpolation CRS parameters in conversions (#3695)
> 
> o  CMake: avoid imbalanced cmake_policy push/pop if TIFF or CURL dependency
>    cannot be found (#3697)
> 
> o  proj_create_crs_to_crs(): restore transformation selection behaviour
>    of PROJ 9.1 when grids are missing (#3707)
> 
> o  ESRI WKT: improve roundtrip of name and definition for UPS WGS84 CRS (#3720)
> 
> o CRS instanciation from PROJ.4 string: set 'Unknown based on XXXX ellipsoid'
>   datum name when instanciating from known +a, +rf (#3727)
> 
> o  cs2cs / proj_create_crs_to_crs(): fix regression with geocentric CRS (#3729)
> 
> o  proj_trans(): set PROJ_ERR_COORD_TRANSFM_NO_OPERATION error when failing
>    in ONLY_BEST=YES mode (#3730)
> 
> o  tinshift: raise maximum size of JSON file to 100 MB (#3736)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/7d05dd46/attachment.htm>

From nicolas.bellaiche at ign.fr  Tue May 30 10:46:49 2023
From: nicolas.bellaiche at ign.fr (Nicolas Bellaiche)
Date: Tue, 30 May 2023 19:46:49 +0200 (CEST)
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
 <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
Message-ID: <400922225.8539012.1685468809744.JavaMail.zimbra@ign.fr>

Hi all, 

Is there any reason why the deprecated syntax "+init=" doesn't give the same result as the new syntax? 



echo 3356123.5400 1303218.3090 5247430.6050 | ./cs2cs IGNF:RGR92 +to IGNF:REUN47 

3353420.95 1304075.02 5248935.14 







echo 3356123.5400 1303218.3090 5247430.6050 | ./cs2cs +init=IGNF:RGR92 +to +init=IGNF:REUN47 

3356123.54 1303218.31 5247430.61 

Thanks in advance for your answers, 

N. 

De: "Even Rouault" <even.rouault at spatialys.com> 
?: "proj" <proj at lists.osgeo.org> 
Envoy?: Vendredi 26 Mai 2023 21:50:27 
Objet: Re: [PROJ] Migrating to PROJ-9 



Ah, and you should avoid using the "+init=" prefix. This is a deprecated legacy syntax that doesn't enforce axis order of the CRS definition (without practical consequence for IGNF: CRS since they use "GIS friendly" axis order) 


To help debugging this, please provide the output of: 


PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93 -o PROJ 


On my system I get: 


pj_open_lib(proj.ini): call fopen(/home/even/proj/install-proj-master/share/proj/proj.ini) - succeeded 
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded 
Candidate operations found: 1 
------------------------------------- 
Operation No. 1: 

unknown id, Inverse of LAMBERT-93 + Conversion from RGF93 geographiques (dms) to RGF93 cartesiennes geocentriques, 0 m, World 

PROJ string: 
+proj=pipeline 
+step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49 +x_0=700000 
+y_0=6600000 +ellps=GRS80 
+step +proj=cart +ellps=GRS80 

Le 26/05/2023 ? 21:46, Even Rouault a ?crit : 




Hi, 

I get the expected 4070327.25 166078.93 4891298.61 result with proj 6.0.0, 7.2.1, 9.2.0 and master 

There's no grid involved in this operation, just inverse LCC projection on the RGF93 datum 

I also tried to reproduce your issue if the PROJ < 6 IGNF file is found in the PROJ resource path(s) (non nominal situation - this file is not needed any more, and will generally lead to suboptimal results. Its content is included in the proj.db file), but even with that I get the expected result. So no idea why you get wrong results 


Even 


Le 26/05/2023 ? 20:54, Nicolas Bellaiche a ?crit : 

BQ_BEGIN

Hi all, 

I'm migrating my C++ code from PROJ4 to PROJ9 and I meet a worrying issue with the computation. Some of my regress tests don't pass so I've tested with cs2cs and gets the same difference: 



PROJ4 

echo 652760.73700000 7033791.24300000 43 .64200000 | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93: 

4070327.25 166078.93 4891298.61 




PROJ7 or PROJ9 

echo 652760.73700000 7033791.24300000 43 .64200000 | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93: 

4070355.05 166080.07 4891332.24 






I suspect that PROJ7 and PROJ9 don't read properly the geoid file but I'm not sure. Someone can help me tracking and fixing this problem? 

Thanks, 

Nicolas Bellaiche 
Institut G?ographique National France 

_______________________________________________
PROJ mailing list [ mailto:PROJ at lists.osgeo.org | PROJ at lists.osgeo.org ] [ https://lists.osgeo.org/mailman/listinfo/proj | https://lists.osgeo.org/mailman/listinfo/proj ] 



-- [ http://www.spatialys.com/ | http://www.spatialys.com ] My software is free, but my time generally not. 

_______________________________________________
PROJ mailing list [ mailto:PROJ at lists.osgeo.org | PROJ at lists.osgeo.org ] [ https://lists.osgeo.org/mailman/listinfo/proj | https://lists.osgeo.org/mailman/listinfo/proj ] 

BQ_END

-- [ http://www.spatialys.com/ | http://www.spatialys.com ] My software is free, but my time generally not. 

_______________________________________________ 
PROJ mailing list 
PROJ at lists.osgeo.org 
https://lists.osgeo.org/mailman/listinfo/proj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/1c077ede/attachment-0001.htm>

From even.rouault at spatialys.com  Tue May 30 10:48:17 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2023 19:48:17 +0200
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <889940692.8524263.1685467485664.JavaMail.zimbra@ign.fr>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
 <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
 <548128917.8241640.1685450111770.JavaMail.zimbra@ign.fr>
 <c52a7da0-3b76-94cb-6e63-d9569449470f@spatialys.com>
 <889940692.8524263.1685467485664.JavaMail.zimbra@ign.fr>
Message-ID: <5f829fce-25e2-f52f-a5c8-82d1321b299d@spatialys.com>


Le 30/05/2023 ? 19:24, Nicolas Bellaiche a ?crit?:
>
> Ok, i kind of fixed my issue even if that's not all very clear to me.
> One of the things that I can't understand is that outdated "+init="
>
> For instance if I try to use
>
> echo 2d20\'11.5\"E46d47\'59.775\"N |./bin/projIGNF:LAMBE -Swithout the 
> +init= syntaxI get
>
>
> proj_create: unrecognized format / unknown name
>
> Rel. 9.1.1, December 1st, 2022
>
> <proj>:
>
> projection initialization failure
>
> cause: Invalid PROJ string syntax
>
> program abnormally terminated
>
>
> Is it normal?
>
Maybe? the old proj utility works with coordinate operations, actually 
only map projections, but not CRS definitions. In PROJ 4.x era, there 
was no such distinction. IGNF:LAMBE is a CRS definition now. Furthermore 
the proj utility has not been updated to resolve objects by code/names. 
(with the +init= prefix, proj errors out with "can't initialize 
operations that take non-angular input coordinates" for me. likely some 
mismatch between radian vs degree input expectations). I presume it 
could be enhanced to work with projected CRS definitions, although it is 
not totally clear to me what should be the expectations regarding 
input/output axis order.

Even

>
> Sincerely,
>
>
> N.B.
>
>
> ------------------------------------------------------------------------
> *De: *"Even Rouault" <even.rouault at spatialys.com>
> *?: *"Nicolas Bellaiche" <nicolas.bellaiche at ign.fr>
> *Cc: *"proj" <proj at lists.osgeo.org>
> *Envoy?: *Mardi 30 Mai 2023 14:43:03
> *Objet: *Re: [PROJ] Migrating to PROJ-9
>
> Weird indeed:
>
> and what about trying directly the pipeline with cct :
>
> echo 652760.73700000 7033791.24300000 43.64200000 | cct +proj=pipeline 
> +step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49 
> +x_0=700000 +y_0=6600000 +ellps=GRS80 +step +proj=cart +ellps=GRS80
>
> you should get:
>
> ?4070327.2514??? 166078.9321? 4891298.6149?????????? inf
>
> Le 30/05/2023 ? 14:35, Nicolas Bellaiche a ?crit?:
>
>     Bonjour M. Rouault,
>
>     *
>     *
>
>     Voil? ce que j'obtiens:
>
>     *
>     *
>
>     *PROJ9:*
>
>     *
>     *
>
>     *Release % PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93 -o PROJ*
>
>
>
>     pj_open_lib(proj.ini): call
>     fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.ini)
>     - succeeded
>
>     pj_open_lib(proj.db): call
>     fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.db)
>     - succeeded
>
>     Candidate operations found: 1
>
>     -------------------------------------
>
>     Operation No. 1:
>
>
>     unknown id, Inverse of LAMBERT-93 + Conversion from RGF93
>     geographiques (dms) to RGF93 cartesiennes geocentriques, 0 m, World
>
>
>     PROJ string:
>
>     +proj=pipeline
>
>     +step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49
>     +x_0=700000
>
>     +y_0=6600000 +ellps=GRS80
>
>     +step +proj=cart +ellps=GRS80
>
>
>
>     *?Release % echo 652760.73700000 7033791.24300000 43.64200000 |
>     cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93*
>
>     4070355.05166080.07 4891332.24
>
>
>
>     *?Release % echo $PROJ_DATA*
>
>     /Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad
>
>
>     *?Release % echo $PROJ_LIB*
>
>     /Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad
>
>
>
>     je ne vois pas de diff?rence. Je n'ai pas le d?but d'une id?e de
>     comment identifier le probl?me...
>
>
>     N.
>
>
>
>
>     ------------------------------------------------------------------------
>     *De: *"Even Rouault" <even.rouault at spatialys.com>
>     <mailto:even.rouault at spatialys.com>
>     *?: *"proj" <proj at lists.osgeo.org> <mailto:proj at lists.osgeo.org>
>     *Envoy?: *Vendredi 26 Mai 2023 21:50:27
>     *Objet: *Re: [PROJ] Migrating to PROJ-9
>
>     Ah, and you should avoid using the "+init=" prefix. This is a
>     deprecated legacy syntax that doesn't enforce axis order of the
>     CRS definition (without practical consequence for IGNF: CRS since
>     they use "GIS friendly" axis order)
>
>     To help debugging this, please provide the output of:
>
>     PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93 -o PROJ
>
>     On my system I get:
>
>     pj_open_lib(proj.ini): call
>     fopen(/home/even/proj/install-proj-master/share/proj/proj.ini) -
>     succeeded
>     pj_open_lib(proj.db): call
>     fopen(/home/even/proj/install-proj-master/share/proj/proj.db) -
>     succeeded
>     Candidate operations found: 1
>     -------------------------------------
>     Operation No. 1:
>
>     unknown id, Inverse of LAMBERT-93 + Conversion from RGF93
>     geographiques (dms) to RGF93 cartesiennes geocentriques, 0 m, World
>
>     PROJ string:
>     +proj=pipeline
>     ? +step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49
>     +x_0=700000
>     ??????? +y_0=6600000 +ellps=GRS80
>     ? +step +proj=cart +ellps=GRS80
>
>     Le 26/05/2023 ? 21:46, Even Rouault a ?crit?:
>
>         Hi,
>
>         I get the expected 4070327.25 166078.93 4891298.61 result with
>         proj 6.0.0, 7.2.1, 9.2.0 and master
>
>         There's no grid involved in this operation, just inverse LCC
>         projection on the RGF93 datum
>
>         I also tried to reproduce your issue if the PROJ < 6 IGNF file
>         is found in the PROJ resource path(s) (non nominal situation -
>         this file is not needed any more, and will generally lead to
>         suboptimal results. Its content is included in the proj.db
>         file), but even with that I get the expected result. So no
>         idea why you get wrong results
>
>         Even
>
>
>         Le 26/05/2023 ? 20:54, Nicolas Bellaiche a ?crit?:
>
>             Hi all,
>
>             I'm migrating my C++ code from PROJ4 to PROJ9 and I meet a
>             worrying issue with the computation. Some of my regress
>             tests don't pass so I've tested with cs2cs and gets the
>             same difference:
>
>             PROJ4
>
>             echo652760.737000007033791.24300000 43.64200000 | cs2cs
>             +init=IGNF:LAMB93 +to +init=IGNF:RGF93:
>
>             4070327.25166078.93 4891298.61
>
>
>             PROJ7 or PROJ9
>
>             echo652760.737000007033791.24300000 43.64200000 | cs2cs
>             +init=IGNF:LAMB93 +to +init=IGNF:RGF93:
>
>             4070355.05166080.07 4891332.24
>
>
>
>
>             I suspect that PROJ7 and PROJ9 don't read properly the
>             geoid file but I'm not sure. Someone can help me tracking
>             and fixing this problem?
>
>             Thanks,
>
>             Nicolas Bellaiche
>             Institut G?ographique National France
>
>             _______________________________________________
>             PROJ mailing list
>             PROJ at lists.osgeo.org
>             https://lists.osgeo.org/mailman/listinfo/proj
>
>         -- 
>         http://www.spatialys.com
>         My software is free, but my time generally not.
>
>
>         _______________________________________________
>         PROJ mailing list
>         PROJ at lists.osgeo.org
>         https://lists.osgeo.org/mailman/listinfo/proj
>
>     -- 
>     http://www.spatialys.com
>     My software is free, but my time generally not.
>
>
>     _______________________________________________
>     PROJ mailing list
>     PROJ at lists.osgeo.org
>     https://lists.osgeo.org/mailman/listinfo/proj
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/5eee42ef/attachment-0001.htm>

From even.rouault at spatialys.com  Tue May 30 10:56:33 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2023 19:56:33 +0200
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <400922225.8539012.1685468809744.JavaMail.zimbra@ign.fr>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
 <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
 <400922225.8539012.1685468809744.JavaMail.zimbra@ign.fr>
Message-ID: <7426656c-1c20-39d1-b9b8-d901512d287a@spatialys.com>

I don't reproduce this (tried with PROJ master):

$ echo 3356123.5400 1303218.3090 5247430.6050 | PROJ_DEBUG=3 bin/cs2cs IGNF:RGR92 +to IGNF:REUN47
pj_open_lib(proj.ini): call fopen(/home/even/proj/install-proj-master/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded
Using coordinate operation RGR92 (RESEAU GEODESIQUE DE LA REUNION 1992) vers REUNION-PITON DES NEIGES as a fallback due to lack of more appropriate operations
3353420.95	1304075.02 5248935.14

$ echo 3356123.5400 1303218.3090 5247430.6050 | PROJ_DEBUG=3 bin/cs2cs +init=IGNF:RGR92 +to +init=IGNF:REUN47
pj_open_lib(proj.ini): call fopen(/home/even/proj/install-proj-master/share/proj/proj.ini) - succeeded
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded
pj_open_lib(IGNF): call fopen(IGNF) - failed
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded
pj_open_lib(IGNF): call fopen(IGNF) - failed
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded
pj_open_lib(IGNF): call fopen(IGNF) - failed
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded
pj_open_lib(IGNF): call fopen(IGNF) - failed
pj_open_lib(proj.db): call fopen(/home/even/proj/install-proj-master/share/proj/proj.db) - succeeded
Using coordinate operation RGR92 (RESEAU GEODESIQUE DE LA REUNION 1992) vers REUNION-PITON DES NEIGES as a fallback due to lack of more appropriate operations
3353420.95	1304075.02 5248935.14

$ bin/projinfo -s IGNF:RGR92 -t  IGNF:REUN47 -o PROJ
Candidate operations found: 2
-------------------------------------
Operation No. 1:

IGNF:TSG355_RGR92_REUN47, RGR92 (RESEAU GEODESIQUE DE LA REUNION 1992) vers REUNION-PITON DES NEIGES, unknown accuracy, ILE DE LA REUNION

PROJ string:
+proj=helmert +x=-789.99 +y=627.333 +z=89.685 +rx=-0.6072 +ry=-76.8019 +rz=10.568
       +s=32.2083 +convention=position_vector

-------------------------------------
Operation No. 2:

INVERSE(IGNF):TSG601_REUN47_RGR92, Inverse of REUNION-PITON DES NEIGES vers RGR92 (RESEAU GEODESIQUE DE LA REUNION 1992), unknown accuracy, ILE DE LA REUNION

PROJ string:
+proj=pipeline
   +step +inv +proj=helmert +x=789.524 +y=-626.486 +z=-89.904 +rx=0.6006
         +ry=76.7946 +rz=-10.5788 +s=-32.3241 +convention=position_vector


$ echo 3356123.5400 1303218.3090 5247430.6050 | bin/cct +proj=helmert +x=-789.99 +y=627.333 +z=89.685 +rx=-0.6072 +ry=-76.8019 +rz=10.568 +s=32.2083 +convention=position_vector
  3353420.9490   1304075.0212  5248935.1441           inf


Le 30/05/2023 ? 19:46, Nicolas Bellaiche a ?crit?:
> Hi all,
>
> Is there any reason why the deprecated syntax "+init=" ?doesn't give 
> the same result as the new syntax?
>
> echo 3356123.5400 1303218.3090 5247430.6050 | ./cs2cs IGNF:RGR92 +to 
> IGNF:REUN47
>
> 3353420.951304075.02 5248935.14
>
>
>
> echo 3356123.5400 1303218.3090 5247430.6050 | ./cs2cs +init=IGNF:RGR92 
> +to +init=IGNF:REUN47
>
> 3356123.541303218.31 5247430.61
>
>
> Thanks in advance for your answers,

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/5b083cc4/attachment.htm>

From alansnow21 at gmail.com  Tue May 30 11:01:00 2023
From: alansnow21 at gmail.com (Alan Snow)
Date: Tue, 30 May 2023 13:01:00 -0500
Subject: [PROJ] PROJ 9.2.1RC1 & PROJ-data 1.14RC1
In-Reply-To: <558404C5-171F-45B4-8A6B-5E6447E587AC@gmail.com>
References: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
 <558404C5-171F-45B4-8A6B-5E6447E587AC@gmail.com>
Message-ID: <CAGybdFSbGXYhNy_4gHpM4b6RxXW8ZcMRgtgekVXBc4RDNeBR=w@mail.gmail.com>

+1. Thank you to all who contributed!

On Tue, May 30, 2023, 12:41 PM Kristian Evers <kristianevers at gmail.com>
wrote:

> A few minor details were reported with PROJ-data 1.14RC1 so I have prepared
> and uploaded PROJ-data 1.14RC2 which fixes the problems. Link below.
>
> https://download.osgeo.org/proj/proj-data-1.14RC2.tar.gz
> https://download.osgeo.org/proj/proj-data-1.14RC2.zip
>
> Thanks to Bas for noticing the problems and supplying fixes.
>
>
> Since the fixes for the PROJ-data package were minor and no issues has
> been reported
> with the PROJ release candidate I?ll go ahead straight away and motion
> that both release
> candidates be promoted to their final versions. I?ll start with my +1.
>
> /Kristian
>
> On 24 May 2023, at 21.19, Kristian Evers <kristianevers at gmail.com> wrote:
>
> All,
>
> It?s soon time for another round of PROJ and PROJ-data releases, so in
> preparation for the final
> releases I have uploaded release candidates for both packages.
>
> Download the archives here:
>
> https://download.osgeo.org/proj/proj-9.2.1RC1.tar.gz
> https://download.osgeo.org/proj/proj-9.2.1RC1.zip
>
> https://download.osgeo.org/proj/proj-data-1.14RC1.tar.gz
> https://download.osgeo.org/proj/proj-data-1.14RC1.zip
>
>
> The PROJ release includes updates to the database contents and bug fixes.
> See the release notes below.
>
> The PROJ-data release adds the following transformations grids:
>
> - German Hessen grids
> - Canadian RGNC15 grids
> - Danish grids for a number of older CRS's
>
> Please test the release candidates and report any issues you may find with
> them. Either here
> on the mailing list or on GitHub.
>
> /Kristian
>
> ??????????????????
>
> 9.2.1 Release Notes
> -------------------
>
> Database updates
> --------
>
> o Add alias for old ESRI datum/CRS names of EPSG:8353
>   S_JTSK_JTSK03_Krovak_East_North (#3678)
>
> o Pseudo Mercator now supported with IAU CRS's (#3645)
>
> o Updated to EPSG 10.088 (#3731)
>
> Bug fixes
> ----------
>
> o Fixed build errors with Cygwin (#3642)
>
> o PROJ string CRS parser: make sure that PROJ arguments of the rotated
>   string are kept in the WKT representation (#3656)
>
> o Fix slowness on proj_trans() when doing WGS 84 <--> NAD83 conversions
> (#3661)
>
> o vgridshift/gridshift: accept hydroid_height as valid band description
> (#3675)
>
> o WKT/PROJJSON: import/export accuracy of ConcatenatedOperation (#3676)
>
> o Coordinate operation factory: count identified concatenated operations
> as a
>   single step (#3677)
>
> o EngineeringCRS: make proj_create_engineering_crs() set a datum name
>   and relax isEquivalentTo() comparisons (#3685)
>
> o PROJJSON: fix import/export of integer parameter value, and deal with
>   interpolation CRS parameters in conversions (#3695)
>
> o  CMake: avoid imbalanced cmake_policy push/pop if TIFF or CURL dependency
>    cannot be found (#3697)
>
> o  proj_create_crs_to_crs(): restore transformation selection behaviour
>    of PROJ 9.1 when grids are missing (#3707)
>
> o  ESRI WKT: improve roundtrip of name and definition for UPS WGS84 CRS
> (#3720)
>
> o CRS instanciation from PROJ.4 string: set 'Unknown based on XXXX
> ellipsoid'
>   datum name when instanciating from known +a, +rf (#3727)
>
> o  cs2cs / proj_create_crs_to_crs(): fix regression with geocentric CRS
> (#3729)
>
> o  proj_trans(): set PROJ_ERR_COORD_TRANSFM_NO_OPERATION error when failing
>    in ONLY_BEST=YES mode (#3730)
>
> o  tinshift: raise maximum size of JSON file to 100 MB (#3736)
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/deadad5e/attachment.htm>

From even.rouault at spatialys.com  Tue May 30 11:02:20 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2023 20:02:20 +0200
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <2144698104.8541824.1685469401436.JavaMail.zimbra@ign.fr>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
 <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
 <548128917.8241640.1685450111770.JavaMail.zimbra@ign.fr>
 <c52a7da0-3b76-94cb-6e63-d9569449470f@spatialys.com>
 <889940692.8524263.1685467485664.JavaMail.zimbra@ign.fr>
 <5f829fce-25e2-f52f-a5c8-82d1321b299d@spatialys.com>
 <2144698104.8541824.1685469401436.JavaMail.zimbra@ign.fr>
Message-ID: <144447fc-abd0-1e2f-eb9a-c7fb8a0f08e3@spatialys.com>

It should work at least with the API using proj_factors() since PROJ 
8.2. Cf https://github.com/OSGeo/PROJ/pull/2868 (you should likely strip 
off the +init= prefix then)

Le 30/05/2023 ? 19:56, Nicolas Bellaiche a ?crit?:
> Ok i hoped your answer would help me understanding why I can't compute 
> the scale factor properly but unfortunately it doesn't give me any idea.
> If I instantiate a PJ* with the new syntax (with proj_create), the 
> meridional_scale is not computed correctly with proj_factors, while 
> with the old "+init=" it still works.
> N.
>
>
> ------------------------------------------------------------------------
> *De: *"Even Rouault" <even.rouault at spatialys.com>
> *?: *"Nicolas Bellaiche" <nicolas.bellaiche at ign.fr>
> *Cc: *"proj" <proj at lists.osgeo.org>
> *Envoy?: *Mardi 30 Mai 2023 19:48:17
> *Objet: *Re: [PROJ] Migrating to PROJ-9
>
>
> Le 30/05/2023 ? 19:24, Nicolas Bellaiche a ?crit?:
>
>
>     Ok, i kind of fixed my issue even if that's not all very clear to me.
>     One of the things that I can't understand is that outdated "+init="
>
>     For instance if I try to use
>
>     echo 2d20\'11.5\"E46d47\'59.775\"N |./bin/projIGNF:LAMBE -Swithout
>     the +init= syntaxI get
>
>
>     proj_create: unrecognized format / unknown name
>
>     Rel. 9.1.1, December 1st, 2022
>
>     <proj>:
>
>     projection initialization failure
>
>     cause: Invalid PROJ string syntax
>
>     program abnormally terminated
>
>
>     Is it normal?
>
> Maybe? the old proj utility works with coordinate operations, actually 
> only map projections, but not CRS definitions. In PROJ 4.x era, there 
> was no such distinction. IGNF:LAMBE is a CRS definition now. 
> Furthermore the proj utility has not been updated to resolve objects 
> by code/names. (with the +init= prefix, proj errors out with "can't 
> initialize operations that take non-angular input coordinates" for me. 
> likely some mismatch between radian vs degree input expectations). I 
> presume it could be enhanced to work with projected CRS definitions, 
> although it is not totally clear to me what should be the expectations 
> regarding input/output axis order.
>
> Even
>
>
>     Sincerely,
>
>
>     N.B.
>
>
>     ------------------------------------------------------------------------
>     *De: *"Even Rouault" <even.rouault at spatialys.com>
>     <mailto:even.rouault at spatialys.com>
>     *?: *"Nicolas Bellaiche" <nicolas.bellaiche at ign.fr>
>     <mailto:nicolas.bellaiche at ign.fr>
>     *Cc: *"proj" <proj at lists.osgeo.org> <mailto:proj at lists.osgeo.org>
>     *Envoy?: *Mardi 30 Mai 2023 14:43:03
>     *Objet: *Re: [PROJ] Migrating to PROJ-9
>
>     Weird indeed:
>
>     and what about trying directly the pipeline with cct :
>
>     echo 652760.73700000 7033791.24300000 43.64200000 | cct
>     +proj=pipeline +step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44
>     +lat_2=49 +x_0=700000 +y_0=6600000 +ellps=GRS80 +step +proj=cart
>     +ellps=GRS80
>
>     you should get:
>
>     ?4070327.2514??? 166078.9321? 4891298.6149 inf
>
>     Le 30/05/2023 ? 14:35, Nicolas Bellaiche a ?crit?:
>
>         Bonjour M. Rouault,
>
>         *
>         *
>
>         Voil? ce que j'obtiens:
>
>         *
>         *
>
>         *PROJ9:*
>
>         *
>         *
>
>         *Release % PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93
>         -o PROJ*
>
>
>
>         pj_open_lib(proj.ini): call
>         fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.ini)
>         - succeeded
>
>         pj_open_lib(proj.db): call
>         fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.db)
>         - succeeded
>
>         Candidate operations found: 1
>
>         -------------------------------------
>
>         Operation No. 1:
>
>
>         unknown id, Inverse of LAMBERT-93 + Conversion from RGF93
>         geographiques (dms) to RGF93 cartesiennes geocentriques, 0 m,
>         World
>
>
>         PROJ string:
>
>         +proj=pipeline
>
>         +step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44 +lat_2=49
>         +x_0=700000
>
>         +y_0=6600000 +ellps=GRS80
>
>         +step +proj=cart +ellps=GRS80
>
>
>
>         *?Release % echo 652760.73700000 7033791.24300000 43.64200000
>         | cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93*
>
>         4070355.05166080.07 4891332.24
>
>
>
>         *?Release % echo $PROJ_DATA*
>
>         /Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad
>
>
>         *?Release % echo $PROJ_LIB*
>
>         /Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad
>
>
>
>         je ne vois pas de diff?rence. Je n'ai pas le d?but d'une id?e
>         de comment identifier le probl?me...
>
>
>         N.
>
>
>
>
>         ------------------------------------------------------------------------
>         *De: *"Even Rouault" <even.rouault at spatialys.com>
>         <mailto:even.rouault at spatialys.com>
>         *?: *"proj" <proj at lists.osgeo.org> <mailto:proj at lists.osgeo.org>
>         *Envoy?: *Vendredi 26 Mai 2023 21:50:27
>         *Objet: *Re: [PROJ] Migrating to PROJ-9
>
>         Ah, and you should avoid using the "+init=" prefix. This is a
>         deprecated legacy syntax that doesn't enforce axis order of
>         the CRS definition (without practical consequence for IGNF:
>         CRS since they use "GIS friendly" axis order)
>
>         To help debugging this, please provide the output of:
>
>         PROJ_DEBUG=3 projinfo -s IGNF:LAMB93 -t IGNF:RGF93 -o PROJ
>
>         On my system I get:
>
>         pj_open_lib(proj.ini): call
>         fopen(/home/even/proj/install-proj-master/share/proj/proj.ini)
>         - succeeded
>         pj_open_lib(proj.db): call
>         fopen(/home/even/proj/install-proj-master/share/proj/proj.db)
>         - succeeded
>         Candidate operations found: 1
>         -------------------------------------
>         Operation No. 1:
>
>         unknown id, Inverse of LAMBERT-93 + Conversion from RGF93
>         geographiques (dms) to RGF93 cartesiennes geocentriques, 0 m,
>         World
>
>         PROJ string:
>         +proj=pipeline
>         ? +step +inv +proj=lcc +lat_0=46.5 +lon_0=3 +lat_1=44
>         +lat_2=49 +x_0=700000
>         ??????? +y_0=6600000 +ellps=GRS80
>         ? +step +proj=cart +ellps=GRS80
>
>         Le 26/05/2023 ? 21:46, Even Rouault a ?crit?:
>
>             Hi,
>
>             I get the expected 4070327.25 166078.93 4891298.61 result
>             with proj 6.0.0, 7.2.1, 9.2.0 and master
>
>             There's no grid involved in this operation, just inverse
>             LCC projection on the RGF93 datum
>
>             I also tried to reproduce your issue if the PROJ < 6 IGNF
>             file is found in the PROJ resource path(s) (non nominal
>             situation - this file is not needed any more, and will
>             generally lead to suboptimal results. Its content is
>             included in the proj.db file), but even with that I get
>             the expected result. So no idea why you get wrong results
>
>             Even
>
>
>             Le 26/05/2023 ? 20:54, Nicolas Bellaiche a ?crit?:
>
>                 Hi all,
>
>                 I'm migrating my C++ code from PROJ4 to PROJ9 and I
>                 meet a worrying issue with the computation. Some of my
>                 regress tests don't pass so I've tested with cs2cs and
>                 gets the same difference:
>
>                 PROJ4
>
>                 echo652760.737000007033791.24300000 43.64200000 |
>                 cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93:
>
>                 4070327.25166078.93 4891298.61
>
>
>                 PROJ7 or PROJ9
>
>                 echo652760.737000007033791.24300000 43.64200000 |
>                 cs2cs +init=IGNF:LAMB93 +to +init=IGNF:RGF93:
>
>                 4070355.05166080.07 4891332.24
>
>
>
>
>                 I suspect that PROJ7 and PROJ9 don't read properly the
>                 geoid file but I'm not sure. Someone can help me
>                 tracking and fixing this problem?
>
>                 Thanks,
>
>                 Nicolas Bellaiche
>                 Institut G?ographique National France
>
>                 _______________________________________________
>                 PROJ mailing list
>                 PROJ at lists.osgeo.org
>                 https://lists.osgeo.org/mailman/listinfo/proj
>
>             -- 
>             http://www.spatialys.com
>             My software is free, but my time generally not.
>
>
>             _______________________________________________
>             PROJ mailing list
>             PROJ at lists.osgeo.org
>             https://lists.osgeo.org/mailman/listinfo/proj
>
>         -- 
>         http://www.spatialys.com
>         My software is free, but my time generally not.
>
>
>         _______________________________________________
>         PROJ mailing list
>         PROJ at lists.osgeo.org
>         https://lists.osgeo.org/mailman/listinfo/proj
>
>     -- 
>     http://www.spatialys.com
>     My software is free, but my time generally not.
>
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/7ed64201/attachment-0001.htm>

From even.rouault at spatialys.com  Tue May 30 11:09:54 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2023 20:09:54 +0200
Subject: [PROJ] Migrating to PROJ-9
In-Reply-To: <1776741479.8542661.1685469700826.JavaMail.zimbra@ign.fr>
References: <1554747504.7324762.1685127274306.JavaMail.zimbra@ign.fr>
 <011ed301-0b81-9d3c-f811-53cd86410274@spatialys.com>
 <ce612851-9904-ed0f-d9d8-67da7663db1f@spatialys.com>
 <400922225.8539012.1685468809744.JavaMail.zimbra@ign.fr>
 <7426656c-1c20-39d1-b9b8-d901512d287a@spatialys.com>
 <1776741479.8542661.1685469700826.JavaMail.zimbra@ign.fr>
Message-ID: <6937bc1f-f30b-b10d-9ba3-4a13e2b43a7e@spatialys.com>

(resending to right list... make sure to "reply all" so that the list 
gets copied)

Le 30/05/2023 ? 20:01, Nicolas Bellaiche a ?crit :
 >
 >
 > That's why I get:
 >
 >? echo 3356123.5400 1303218.3090 5247430.6050 | PROJ_DEBUG=3 
./bin/cs2cs IGNF:RGR92 +to IGNF:REUN47
 >
 > pj_open_lib(proj.ini): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.ini) 
- succeeded
 >
 > pj_open_lib(proj.db): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.db) 
- succeeded
 >
 >? instantiate_crs type: 10:
 >
 >? instantiate_crs type: 10:
 >
 > helmert: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
 >
 > helmert: pj_ellipsoid - final:??? ellps=GRS80
 >
 > helmert: Helmert parameters:
 >
 > helmert: x=? -789.99000? y=? 627.33300? z=? 89.68500
 >
 > helmert: rx= -0.60720? ry= -76.80190? rz= 10.56800
 >
 > helmert: s=? 32.20830? exact=0? convention=position_vector
 >
 > helmert: dx=? 0.00000? dy=? 0.00000? dz=? 0.00000
 >
 > helmert: drx= 0.00000? dry= 0.00000? drz= 0.00000
 >
 > helmert: ds=? 0.00000? t_epoch= 0.00000
 >
 > helmert: Transformation parameters for observation t_obs=0 (t_epoch=0):
 >
 > helmert: x: -789.99
 >
 > helmert: y: 627.333
 >
 > helmert: z: 89.685
 >
 > helmert: s: 3.22083e-05
 >
 > helmert: rx: -2.94379e-06
 >
 > helmert: ry: -0.000372346
 >
 > helmert: rz: 5.12351e-05
 >
 > helmert: theta: 0
 >
 > helmert: Rotation Matrix:
 >
 > helmert:?? |????? 1? -5.12351e-05? -0.000372346 |
 >
 > helmert:?? |? 5.12351e-05?????? 1?? 2.94379e-06 |
 >
 > helmert:?? |? 0.000372346? -2.94379e-06?????? 1 |
 >
 > 3353420.95 1304075.02 5248935.14
 >
 >
 >
 > =====================================================
 >
 >
 > (base) nbellaiche at MAC1709W003-2 Release % echo 3356123.5400 
1303218.3090 5247430.6050 | PROJ_DEBUG=3 ./bin/cs2cs +init=IGNF:RGR92 
+to +init=IGNF:REUN47
 >
 > pj_open_lib(proj.ini): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.ini) 
- succeeded
 >
 > pj_open_lib(proj.db): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/proj.db) 
- succeeded
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > get_init: searching cache for key: [IGNF:RGR92]
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > get_init: searching on in init files for [IGNF:RGR92]
 >
 > get_init_string: searching for section [RGR92] in init file [IGNF]
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > key=IGNF:RGR92, value: [title=Reseau geodesique Reunion 1992 
proj=geocent towgs84=0.0000,0.0000,0.0000 a=6378137.0000 
rf=298.2572221010000 units=m no_defs]
 >
 > get_init: got [title=Reseau geodesique Reunion 1992 proj=geocent 
towgs84=0.0000,0.0000,0.0000 a=6378137.0000 rf=298.2572221010000 units=m 
no_defs], paralist[0,1]: [title=Reseau,geodesique]
 >
 >? instantiate_crs type: 19:
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > get_init: searching cache for key: [IGNF:REUN47]
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > get_init: searching on in init files for [IGNF:REUN47]
 >
 > get_init_string: searching for section [REUN47] in init file [IGNF]
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > key=IGNF:REUN47, value: [title=Reunion 1947 proj=geocent 
towgs84=789.5240,-626.4860,-89.9040,0.6006,76.7946,-10.5788,-32.324100 
a=6378388.0000 rf=297.0000000000000 units=m no_defs]
 >
 > get_init: got [title=Reunion 1947 proj=geocent 
towgs84=789.5240,-626.4860,-89.9040,0.6006,76.7946,-10.5788,-32.324100 
a=6378388.0000 rf=297.0000000000000 units=m no_defs], paralist[0,1]: 
[title=Reunion,1947]
 >
 >? instantiate_crs type: 19:
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > get_init: searching cache for key: [IGNF:RGR92]
 >
 > pj_open_lib(IGNF): call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF) 
- succeeded
 >
 > get_init: searching cache for key: [IGNF:REUN47]
 >
 > noop: pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
 >
 > noop: pj_ellipsoid - final:??? ellps=GRS80
 >
 > 3356123.54 1303218.31 5247430.61
 >
 >
 >
 >

 > Does it give a hint of what's wrong?


Yes, note the call 
fopen(/Users/nbellaiche/dev/sd-externs/macosx-clang/proj-9.1.1/nad/IGNF 
. I believe I mentioned in a early response that this IGNF file should 
no longer be used in modern PROJ versions. The IGNF file apparently uses 
the towgs84 parameter of the "REUNION-PITON DES NEIGES vers RGR92 
(RESEAU GEODESIQUE DE LA REUNION 1992)" transformation. That said, I'm 
not sure which one is the best as both the one used by current PROJ 
versions (RGR92 (RESEAU GEODESIQUE DE LA REUNION 1992) vers 
REUNION-PITON DES NEIGES)) and that one could apply...


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Tue May 30 11:40:38 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 May 2023 20:40:38 +0200
Subject: [PROJ] PROJ 9.2.1RC1 & PROJ-data 1.14RC1
In-Reply-To: <558404C5-171F-45B4-8A6B-5E6447E587AC@gmail.com>
References: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
 <558404C5-171F-45B4-8A6B-5E6447E587AC@gmail.com>
Message-ID: <92532916-5219-f89f-8d57-72646a1020a5@spatialys.com>

+1 Even

Le 30/05/2023 ? 19:41, Kristian Evers a ?crit?:
> A few minor details were reported with PROJ-data 1.14RC1 so I have 
> prepared
> and uploaded PROJ-data 1.14RC2 which fixes the problems. Link below.
>
> https://download.osgeo.org/proj/proj-data-1.14RC2.tar.gz
> https://download.osgeo.org/proj/proj-data-1.14RC2.zip
>
> Thanks to Bas for noticing the problems and supplying fixes.
>
>
> Since the fixes for the PROJ-data package were minor and no issues has 
> been reported
> with the PROJ release candidate I?ll go ahead straight away and motion 
> that both release
> candidates be promoted to their final versions. I?ll start with my +1.
>
> /Kristian
>
>> On 24 May 2023, at 21.19, Kristian Evers <kristianevers at gmail.com> wrote:
>>
>> All,
>>
>> It?s soon time for another round of PROJ and PROJ-data releases, so 
>> in preparation for the final
>> releases I have uploaded release candidates for both packages.
>>
>> Download the archives here:
>>
>> https://download.osgeo.org/proj/proj-9.2.1RC1.tar.gz
>> https://download.osgeo.org/proj/proj-9.2.1RC1.zip
>>
>> https://download.osgeo.org/proj/proj-data-1.14RC1.tar.gz
>> https://download.osgeo.org/proj/proj-data-1.14RC1.zip
>>
>>
>> The PROJ release includes updates to the database contents and bug 
>> fixes. See the release notes below.
>>
>> The PROJ-data release adds the following transformations grids:
>>
>> - German Hessen grids
>> - Canadian RGNC15 grids
>> - Danish grids for a number of older CRS's
>>
>> Please test the release candidates and report any issues you may find 
>> with them. Either here
>> on the mailing list or on GitHub.
>>
>> /Kristian
>>
>> ??????????????????
>>
>> 9.2.1 Release Notes
>> -------------------
>>
>> Database updates
>> --------
>>
>> o Add alias for old ESRI datum/CRS names of EPSG:8353
>> ??S_JTSK_JTSK03_Krovak_East_North (#3678)
>>
>> o Pseudo Mercator now supported with IAU CRS's (#3645)
>>
>> o Updated to EPSG 10.088 (#3731)
>>
>> Bug fixes
>> ----------
>>
>> o Fixed build errors with Cygwin (#3642)
>>
>> o PROJ string CRS parser: make sure that PROJ arguments of the rotated
>> ??string are kept in the WKT representation (#3656)
>>
>> o Fix slowness on proj_trans() when doing WGS 84 <--> NAD83 
>> conversions (#3661)
>>
>> o vgridshift/gridshift: accept hydroid_height as valid band 
>> description (#3675)
>>
>> o WKT/PROJJSON: import/export accuracy of ConcatenatedOperation (#3676)
>>
>> o Coordinate operation factory: count identified concatenated 
>> operations as a
>> ??single step (#3677)
>>
>> o EngineeringCRS: make proj_create_engineering_crs() set a datum name
>> ??and relax isEquivalentTo() comparisons (#3685)
>>
>> o PROJJSON: fix import/export of integer parameter value, and deal with
>> ??interpolation CRS parameters in conversions (#3695)
>>
>> o ?CMake: avoid imbalanced cmake_policy push/pop if TIFF or CURL 
>> dependency
>> ???cannot be found (#3697)
>>
>> o ?proj_create_crs_to_crs(): restore transformation selection behaviour
>> ???of PROJ 9.1 when grids are missing (#3707)
>>
>> o ?ESRI WKT: improve roundtrip of name and definition for UPS WGS84 
>> CRS (#3720)
>>
>> o CRS instanciation from PROJ.4 string: set 'Unknown based on XXXX 
>> ellipsoid'
>> ??datum name when instanciating from known +a, +rf (#3727)
>>
>> o ?cs2cs / proj_create_crs_to_crs(): fix regression with geocentric 
>> CRS (#3729)
>>
>> o ?proj_trans(): set PROJ_ERR_COORD_TRANSFM_NO_OPERATION error when 
>> failing
>> ???in ONLY_BEST=YES mode (#3730)
>>
>> o ?tinshift: raise maximum size of JSON file to 100 MB (#3736)
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/96e84885/attachment.htm>

From knudsen.thomas at gmail.com  Tue May 30 13:38:18 2023
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Tue, 30 May 2023 22:38:18 +0200
Subject: [PROJ] PROJ 9.2.1RC1 & PROJ-data 1.14RC1
In-Reply-To: <558404C5-171F-45B4-8A6B-5E6447E587AC@gmail.com>
References: <6CABAFE6-66D2-407A-B394-81C3FA18163A@gmail.com>
 <558404C5-171F-45B4-8A6B-5E6447E587AC@gmail.com>
Message-ID: <CAH0YoEPse21AokFT2mXgksiQdW7JA+smxKObekK9CpvyMtRwBA@mail.gmail.com>

+1 Thomas

tir. 30. maj 2023 19.41 skrev Kristian Evers <kristianevers at gmail.com>:

> A few minor details were reported with PROJ-data 1.14RC1 so I have prepared
> and uploaded PROJ-data 1.14RC2 which fixes the problems. Link below.
>
> https://download.osgeo.org/proj/proj-data-1.14RC2.tar.gz
> https://download.osgeo.org/proj/proj-data-1.14RC2.zip
>
> Thanks to Bas for noticing the problems and supplying fixes.
>
>
> Since the fixes for the PROJ-data package were minor and no issues has
> been reported
> with the PROJ release candidate I?ll go ahead straight away and motion
> that both release
> candidates be promoted to their final versions. I?ll start with my +1.
>
> /Kristian
>
> On 24 May 2023, at 21.19, Kristian Evers <kristianevers at gmail.com> wrote:
>
> All,
>
> It?s soon time for another round of PROJ and PROJ-data releases, so in
> preparation for the final
> releases I have uploaded release candidates for both packages.
>
> Download the archives here:
>
> https://download.osgeo.org/proj/proj-9.2.1RC1.tar.gz
> https://download.osgeo.org/proj/proj-9.2.1RC1.zip
>
> https://download.osgeo.org/proj/proj-data-1.14RC1.tar.gz
> https://download.osgeo.org/proj/proj-data-1.14RC1.zip
>
>
> The PROJ release includes updates to the database contents and bug fixes.
> See the release notes below.
>
> The PROJ-data release adds the following transformations grids:
>
> - German Hessen grids
> - Canadian RGNC15 grids
> - Danish grids for a number of older CRS's
>
> Please test the release candidates and report any issues you may find with
> them. Either here
> on the mailing list or on GitHub.
>
> /Kristian
>
> ??????????????????
>
> 9.2.1 Release Notes
> -------------------
>
> Database updates
> --------
>
> o Add alias for old ESRI datum/CRS names of EPSG:8353
>   S_JTSK_JTSK03_Krovak_East_North (#3678)
>
> o Pseudo Mercator now supported with IAU CRS's (#3645)
>
> o Updated to EPSG 10.088 (#3731)
>
> Bug fixes
> ----------
>
> o Fixed build errors with Cygwin (#3642)
>
> o PROJ string CRS parser: make sure that PROJ arguments of the rotated
>   string are kept in the WKT representation (#3656)
>
> o Fix slowness on proj_trans() when doing WGS 84 <--> NAD83 conversions
> (#3661)
>
> o vgridshift/gridshift: accept hydroid_height as valid band description
> (#3675)
>
> o WKT/PROJJSON: import/export accuracy of ConcatenatedOperation (#3676)
>
> o Coordinate operation factory: count identified concatenated operations
> as a
>   single step (#3677)
>
> o EngineeringCRS: make proj_create_engineering_crs() set a datum name
>   and relax isEquivalentTo() comparisons (#3685)
>
> o PROJJSON: fix import/export of integer parameter value, and deal with
>   interpolation CRS parameters in conversions (#3695)
>
> o  CMake: avoid imbalanced cmake_policy push/pop if TIFF or CURL dependency
>    cannot be found (#3697)
>
> o  proj_create_crs_to_crs(): restore transformation selection behaviour
>    of PROJ 9.1 when grids are missing (#3707)
>
> o  ESRI WKT: improve roundtrip of name and definition for UPS WGS84 CRS
> (#3720)
>
> o CRS instanciation from PROJ.4 string: set 'Unknown based on XXXX
> ellipsoid'
>   datum name when instanciating from known +a, +rf (#3727)
>
> o  cs2cs / proj_create_crs_to_crs(): fix regression with geocentric CRS
> (#3729)
>
> o  proj_trans(): set PROJ_ERR_COORD_TRANSFM_NO_OPERATION error when failing
>    in ONLY_BEST=YES mode (#3730)
>
> o  tinshift: raise maximum size of JSON file to 100 MB (#3736)
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230530/20c1b5bb/attachment.htm>

From j1 at jimenezshaw.com  Tue May 30 15:24:52 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 31 May 2023 00:24:52 +0200
Subject: [PROJ] Esri "local" projection
Message-ID: <CADRrdKuAJU=4XN-7F4LttWrPZwk0OHdAq386VsB8r4-=rdSNig@mail.gmail.com>

Hi

Some use cases of Esri "local" projection are arriving to my desk. This
projection works in Esri software, but not in PROJ (obviously also not in
QGIS)

One example is this WKT1_ESRI

PROJCS["Hycroft001",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Local"],PARAMETER["False_Easting",13264.924],PARAMETER["False_Northing",46473.418],PARAMETER["Scale_Factor",1.00025],PARAMETER["Azimuth",15.786],PARAMETER["Longitude_Of_Center",-116.7048269],PARAMETER["Latitude_Of_Center",42.88212865],UNIT["Foot_US",0.3048006096012192]]

Looking at their documentation, it seems to be this one:
https://desktop.arcgis.com/en/arcmap/latest/map/projections/local.htm

The biggest difference I see with the Orthographic from PROJ is the Azimut
parameter. I have the impression that the azimut is just a rotation of the
axes, but it is not clear to me in the Snyder book (page 145. If you do not
have it, it is available at https://pubs.er.usgs.gov/publication/pp1395 )

Is there are alternative in PROJ?
Does it make sense to add this transformation?

Thanks
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230531/7c69641a/attachment.htm>

From even.rouault at spatialys.com  Tue May 30 15:43:20 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 31 May 2023 00:43:20 +0200
Subject: [PROJ] Esri "local" projection
In-Reply-To: <CADRrdKuAJU=4XN-7F4LttWrPZwk0OHdAq386VsB8r4-=rdSNig@mail.gmail.com>
References: <CADRrdKuAJU=4XN-7F4LttWrPZwk0OHdAq386VsB8r4-=rdSNig@mail.gmail.com>
Message-ID: <0e38d0e4-33c0-2c18-fcf7-aa367edde8f0@spatialys.com>

Javier,

I suspect you might be able to apply the azimuth by using the infamous 
+proj=ob_tran.? The tricky part will be to find on which parameter(s) of 
ob_tran (o_lat_p, o_lon_p, lon_0) to map it.

Possibly relevant, there's at least 2 different code implementations 
attempting at reproducing the Spilhaus from Esri, which include a 
azimuth parameter:

- cf https://github.com/OSGeo/PROJ/issues/1851#issuecomment-943138537

- or 
https://github.com/neocarto/bertin/blob/main/src/projections/spilhaus.js 
+ https://github.com/d3/d3-geo/blob/main/src/rotation.js

The maths ressemble those of proj=ob_tran

Even

Le 31/05/2023 ? 00:24, Javier Jimenez Shaw a ?crit?:
> Hi
>
> Some use cases of Esri "local" projection are arriving to my desk. 
> This projection works in Esri software, but not in PROJ (obviously 
> also not in QGIS)
>
> One example is this WKT1_ESRI
>
> PROJCS["Hycroft001",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Local"],PARAMETER["False_Easting",13264.924],PARAMETER["False_Northing",46473.418],PARAMETER["Scale_Factor",1.00025],PARAMETER["Azimuth",15.786],PARAMETER["Longitude_Of_Center",-116.7048269],PARAMETER["Latitude_Of_Center",42.88212865],UNIT["Foot_US",0.3048006096012192]]
>
> Looking at their documentation, it seems to be this one:
> https://desktop.arcgis.com/en/arcmap/latest/map/projections/local.htm
>
> The biggest difference I see with the Orthographic from PROJ is the 
> Azimut parameter. I have the impression that the azimut is just a 
> rotation of the axes, but it is not clear to me in the Snyder book 
> (page 145. If you do not have it, it is available at 
> https://pubs.er.usgs.gov/publication/pp1395 )
>
> Is there are alternative in PROJ?
> Does it make sense to add this transformation?
>
> Thanks
> Javier
> .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230531/cfdcdaa0/attachment.htm>

From j1 at jimenezshaw.com  Tue May 30 16:24:11 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 31 May 2023 01:24:11 +0200
Subject: [PROJ] Esri "local" projection
In-Reply-To: <0e38d0e4-33c0-2c18-fcf7-aa367edde8f0@spatialys.com>
References: <CADRrdKuAJU=4XN-7F4LttWrPZwk0OHdAq386VsB8r4-=rdSNig@mail.gmail.com>
 <0e38d0e4-33c0-2c18-fcf7-aa367edde8f0@spatialys.com>
Message-ID: <CADRrdKus03g3Dnawboo8cjztqx1R7NBUiTjMJF8hZsXfYCaaYQ@mail.gmail.com>

Thanks Even for the quick response.

Can I create a CRS as WKT with the ob_tran?


On Wed, 31 May 2023, 00:43 Even Rouault, <even.rouault at spatialys.com> wrote:

> Javier,
>
> I suspect you might be able to apply the azimuth by using the infamous
> +proj=ob_tran.  The tricky part will be to find on which parameter(s) of
> ob_tran (o_lat_p, o_lon_p, lon_0) to map it.
>
> Possibly relevant, there's at least 2 different code implementations
> attempting at reproducing the Spilhaus from Esri, which include a azimuth
> parameter:
>
> - cf https://github.com/OSGeo/PROJ/issues/1851#issuecomment-943138537
>
> - or
> https://github.com/neocarto/bertin/blob/main/src/projections/spilhaus.js
> + https://github.com/d3/d3-geo/blob/main/src/rotation.js
>
> The maths ressemble those of proj=ob_tran
>
> Even
> Le 31/05/2023 ? 00:24, Javier Jimenez Shaw a ?crit :
>
> Hi
>
> Some use cases of Esri "local" projection are arriving to my desk. This
> projection works in Esri software, but not in PROJ (obviously also not in
> QGIS)
>
> One example is this WKT1_ESRI
>
>
> PROJCS["Hycroft001",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Local"],PARAMETER["False_Easting",13264.924],PARAMETER["False_Northing",46473.418],PARAMETER["Scale_Factor",1.00025],PARAMETER["Azimuth",15.786],PARAMETER["Longitude_Of_Center",-116.7048269],PARAMETER["Latitude_Of_Center",42.88212865],UNIT["Foot_US",0.3048006096012192]]
>
> Looking at their documentation, it seems to be this one:
> https://desktop.arcgis.com/en/arcmap/latest/map/projections/local.htm
>
> The biggest difference I see with the Orthographic from PROJ is the Azimut
> parameter. I have the impression that the azimut is just a rotation of the
> axes, but it is not clear to me in the Snyder book (page 145. If you do not
> have it, it is available at https://pubs.er.usgs.gov/publication/pp1395 )
>
> Is there are alternative in PROJ?
> Does it make sense to add this transformation?
>
> Thanks
> Javier
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230531/7eea0ab1/attachment-0001.htm>

From even.rouault at spatialys.com  Tue May 30 16:33:46 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 31 May 2023 01:33:46 +0200
Subject: [PROJ] Esri "local" projection
In-Reply-To: <CADRrdKus03g3Dnawboo8cjztqx1R7NBUiTjMJF8hZsXfYCaaYQ@mail.gmail.com>
References: <CADRrdKuAJU=4XN-7F4LttWrPZwk0OHdAq386VsB8r4-=rdSNig@mail.gmail.com>
 <0e38d0e4-33c0-2c18-fcf7-aa367edde8f0@spatialys.com>
 <CADRrdKus03g3Dnawboo8cjztqx1R7NBUiTjMJF8hZsXfYCaaYQ@mail.gmail.com>
Message-ID: <c744b4b9-e8af-8b0b-fcd3-595e47cfd5f4@spatialys.com>


Le 31/05/2023 ? 01:24, Javier Jimenez Shaw a ?crit?:
> Thanks Even for the quick response.
>
> Can I create a CRS as WKT with the ob_tran?

in a PROJ-specific way, yes:

$ bin/projinfo "+proj=ob_tran +o_proj=moll +o_lon_p=40 +o_lat_p=50 
+lon_0=60 +type=crs"
PROJ.4 string:
+proj=ob_tran +o_proj=moll +o_lon_p=40 +o_lat_p=50 +lon_0=60 +type=crs

WKT2:2019 string:
PROJCRS["unknown",
 ??? BASEGEOGCRS["unknown",
 ??????? DATUM["World Geodetic System 1984",
 ??????????? ELLIPSOID["WGS 84",6378137,298.257223563,
 ??????????????? LENGTHUNIT["metre",1]],
 ??????????? ID["EPSG",6326]],
 ??????? PRIMEM["Greenwich",0,
 ??????????? ANGLEUNIT["degree",0.0174532925199433],
 ??????????? ID["EPSG",8901]]],
 ??? CONVERSION["unknown",
 ??????? METHOD["PROJ ob_tran o_proj=moll"],
 ??????? PARAMETER["o_lon_p",40,
 ??????????? ANGLEUNIT["degree",0.0174532925199433,
 ??????????????? ID["EPSG",9122]]],
 ??????? PARAMETER["o_lat_p",50,
 ??????????? ANGLEUNIT["degree",0.0174532925199433,
 ??????????????? ID["EPSG",9122]]],
 ??????? PARAMETER["lon_0",60,
 ??????????? ANGLEUNIT["degree",0.0174532925199433,
 ??????????????? ID["EPSG",9122]]]],
 ??? CS[Cartesian,2],
 ??????? AXIS["(E)",east,
 ??????????? ORDER[1],
 ??????????? LENGTHUNIT["metre",1,
 ??????????????? ID["EPSG",9001]]],
 ??????? AXIS["(N)",north,
 ??????????? ORDER[2],
 ??????????? LENGTHUNIT["metre",1,
 ??????????????? ID["EPSG",9001]]],
 ??? REMARK["PROJ CRS string: +proj=ob_tran +o_proj=moll +o_lon_p=40 
+o_lat_p=50 +lon_0=60"]]

>
>
> On Wed, 31 May 2023, 00:43 Even Rouault, <even.rouault at spatialys.com> 
> wrote:
>
>     Javier,
>
>     I suspect you might be able to apply the azimuth by using the
>     infamous +proj=ob_tran.? The tricky part will be to find on which
>     parameter(s) of ob_tran (o_lat_p, o_lon_p, lon_0) to map it.
>
>     Possibly relevant, there's at least 2 different code
>     implementations attempting at reproducing the Spilhaus from Esri,
>     which include a azimuth parameter:
>
>     - cf https://github.com/OSGeo/PROJ/issues/1851#issuecomment-943138537
>
>     - or
>     https://github.com/neocarto/bertin/blob/main/src/projections/spilhaus.js
>     + https://github.com/d3/d3-geo/blob/main/src/rotation.js
>
>     The maths ressemble those of proj=ob_tran
>
>     Even
>
>     Le 31/05/2023 ? 00:24, Javier Jimenez Shaw a ?crit?:
>>     Hi
>>
>>     Some use cases of Esri "local" projection are arriving to my
>>     desk. This projection works in Esri software, but not in PROJ
>>     (obviously also not in QGIS)
>>
>>     One example is this WKT1_ESRI
>>
>>     PROJCS["Hycroft001",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Local"],PARAMETER["False_Easting",13264.924],PARAMETER["False_Northing",46473.418],PARAMETER["Scale_Factor",1.00025],PARAMETER["Azimuth",15.786],PARAMETER["Longitude_Of_Center",-116.7048269],PARAMETER["Latitude_Of_Center",42.88212865],UNIT["Foot_US",0.3048006096012192]]
>>
>>     Looking at their documentation, it seems to be this one:
>>     https://desktop.arcgis.com/en/arcmap/latest/map/projections/local.htm
>>
>>     The biggest difference I see with the Orthographic from PROJ is
>>     the Azimut parameter. I have the impression that the azimut is
>>     just a rotation of the axes, but it is not clear to me in the
>>     Snyder book (page 145. If you do not have it, it is available at
>>     https://pubs.er.usgs.gov/publication/pp1395 )
>>
>>     Is there are alternative in PROJ?
>>     Does it make sense to add this transformation?
>>
>>     Thanks
>>     Javier
>>     .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>>
>>     _______________________________________________
>>     PROJ mailing list
>>     PROJ at lists.osgeo.org
>>     https://lists.osgeo.org/mailman/listinfo/proj
>
>     -- 
>     http://www.spatialys.com
>     My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20230531/625fe504/attachment.htm>

From djsuson at gmail.com  Tue May 30 19:06:04 2023
From: djsuson at gmail.com (Daniel Suson)
Date: Tue, 30 May 2023 21:06:04 -0500
Subject: [PROJ] problem with c++ API coding
Message-ID: <3f8a4e54-8638-0bda-36d6-0d3b92dba650@gmail.com>

I am trying to add some code into my program that will take a 180x360 
array (or some multiple that maintains a 1:2 ratio) and projects it into 
various map projections for displaying on a terminal. My program uses 
c++ code, so I'm trying to use the c++ API of PROJ. My first step is to 
define the CRS for the input data. I'm trying

crs::GeographicCRS* inputCRS = 0;
inputCRS->create(createMapNameEPSGCode("WGS 84", 4978),
datum::GeodeticReferenceFrame::create(util::createMapNameEPSGCode("World 
Geodetic System 1984", 6326),
 ??????? Ellipsoid::createSphere(createMapNameEPSGCode("WGS 84", 7030),
 ??????? common::Length(6378137))),
cs::CartesianCS::createGeocentric(common::UnitOfMeasure::METRE));

I'm including

#include <proj.h>
#include <proj/crs.hpp>
#include <proj/datum.hpp>
using namespace osgeo::proj;

My problem is that createMapNameEPSGCode is included in 
operations/oputils.hpp, which is not copied into the include directory 
when PROJ is built. Is this a problem with how PROJ was installed, or am 
I missing something regarding how to get access to this?


From gdt at lexort.com  Wed May 31 05:30:26 2023
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 31 May 2023 08:30:26 -0400
Subject: [PROJ] problem with c++ API coding
In-Reply-To: <3f8a4e54-8638-0bda-36d6-0d3b92dba650@gmail.com> (Daniel Suson's
 message of "Tue, 30 May 2023 21:06:04 -0500")
References: <3f8a4e54-8638-0bda-36d6-0d3b92dba650@gmail.com>
Message-ID: <rmisfbc4ra5.fsf@s1.lexort.com>

Daniel Suson <djsuson at gmail.com> writes:

> My problem is that createMapNameEPSGCode is included in
> operations/oputils.hpp, which is not copied into the include directory
> when PROJ is built. Is this a problem with how PROJ was installed, or
> am I missing something regarding how to get access to this?

The first question to resolve is the definition of the C++, and whether
what you want is formally part of that API.

https://proj.org/en/latest/development/reference/cpp/index.html

Searching for

  site:proj.org "createMapNameEPSGCode"

comes up empty.  So it might be that this function is not actually part
of the API.


From djsuson at gmail.com  Wed May 31 15:32:22 2023
From: djsuson at gmail.com (Daniel Suson)
Date: Wed, 31 May 2023 17:32:22 -0500
Subject: [PROJ] problem with c++ API coding
In-Reply-To: <rmisfbc4ra5.fsf@s1.lexort.com>
References: <3f8a4e54-8638-0bda-36d6-0d3b92dba650@gmail.com>
 <rmisfbc4ra5.fsf@s1.lexort.com>
Message-ID: <26167947-68b9-6423-4974-b99aa2146203@gmail.com>

Dear Gregg,

 ??? Thank you for the rapid response. Based on what you wrote I 
essentially recreated parts of the source code that already did what I 
needed but wasn't in the API. This got me to the following:

 ? util::PropertyMap crsProperty = 
util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "WGS 84")
.set(metadata::Identifier::CODESPACE_KEY, metadata::Identifier::EPSG)
.set(metadata::Identifier::CODE_KEY, 4979);
 ? util::PropertyMap datumProperty = 
util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "World 
Geodetic System 1984")
.set(metadata::Identifier::CODESPACE_KEY, metadata::Identifier::EPSG)
.set(metadata::Identifier::CODE_KEY, 6326);
 ? util::PropertyMap ellipsoidProperty = 
util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "WGS 84")
.set(metadata::Identifier::CODESPACE_KEY, metadata::Identifier::EPSG)
.set(metadata::Identifier::CODE_KEY, 7030);
 ? crs::GeodeticCRSNNPtr inputCRS = crs::GeodeticCRS::create(crsProperty,
datum::GeodeticReferenceFrame::create(datumProperty,
datum::Ellipsoid::createSphere(ellipsoidProperty,common::Length(radius)),
util::optional<std::string>(),
datum::PrimeMeridian::GREENWICH),
cs::CartesianCS::createGeocentric(common::UnitOfMeasure::METRE));
 ? util::PropertyMap mollweideProperty = 
util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "Mollweide");
 ? operation::ConversionNNPtr mollweideConversion = 
operation::Conversion::createMollweide(mollweideProperty,
common::Angle(0.0),
common::Length(0.0),
common::Length(0.0));

My next question is pretty dumb. Now that I have the input CRS and the 
conversion created, how to I take a array position (which represent 
long/lat) from the input CRS and get the converted position for the map? 
I looked at the operation API but am not familiar enough with basic GIS 
to recognize what I need.

Sincerely,

Dan

On 5/31/23 07:30, Greg Troxel wrote:
> Daniel Suson <djsuson at gmail.com> writes:
>
>> My problem is that createMapNameEPSGCode is included in
>> operations/oputils.hpp, which is not copied into the include directory
>> when PROJ is built. Is this a problem with how PROJ was installed, or
>> am I missing something regarding how to get access to this?
> The first question to resolve is the definition of the C++, and whether
> what you want is formally part of that API.
>
> https://proj.org/en/latest/development/reference/cpp/index.html
>
> Searching for
>
>    site:proj.org "createMapNameEPSGCode"
>
> comes up empty.  So it might be that this function is not actually part
> of the API.
>

From even.rouault at spatialys.com  Wed May 31 15:40:38 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 1 Jun 2023 00:40:38 +0200
Subject: [PROJ] problem with c++ API coding
In-Reply-To: <26167947-68b9-6423-4974-b99aa2146203@gmail.com>
References: <3f8a4e54-8638-0bda-36d6-0d3b92dba650@gmail.com>
 <rmisfbc4ra5.fsf@s1.lexort.com>
 <26167947-68b9-6423-4974-b99aa2146203@gmail.com>
Message-ID: <fa4aa562-8804-b49a-1960-99eefac106bd@spatialys.com>


https://proj.org/en/latest/development/quickstart_cpp.html could be of 
help, but some part of it, namely the coordinateTransformer() that 
bridges the C++ API back to the C one, are only in PROJ 9.3dev. With 
older releases, you'd need to call exportToProj() on transformation 
objects, and instanciate a PJ* from that with proj_create().

Or use the C API: https://proj.org/en/latest/development/quickstart.html


Le 01/06/2023 ? 00:32, Daniel Suson a ?crit?:
> Dear Gregg,
>
> ??? Thank you for the rapid response. Based on what you wrote I 
> essentially recreated parts of the source code that already did what I 
> needed but wasn't in the API. This got me to the following:
>
> ? util::PropertyMap crsProperty = 
> util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "WGS 84")
> .set(metadata::Identifier::CODESPACE_KEY, metadata::Identifier::EPSG)
> .set(metadata::Identifier::CODE_KEY, 4979);
> ? util::PropertyMap datumProperty = 
> util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "World 
> Geodetic System 1984")
> .set(metadata::Identifier::CODESPACE_KEY, metadata::Identifier::EPSG)
> .set(metadata::Identifier::CODE_KEY, 6326);
> ? util::PropertyMap ellipsoidProperty = 
> util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "WGS 84")
> .set(metadata::Identifier::CODESPACE_KEY, metadata::Identifier::EPSG)
> .set(metadata::Identifier::CODE_KEY, 7030);
> ? crs::GeodeticCRSNNPtr inputCRS = crs::GeodeticCRS::create(crsProperty,
> datum::GeodeticReferenceFrame::create(datumProperty,
> datum::Ellipsoid::createSphere(ellipsoidProperty,common::Length(radius)),
> util::optional<std::string>(),
> datum::PrimeMeridian::GREENWICH),
> cs::CartesianCS::createGeocentric(common::UnitOfMeasure::METRE));
> ? util::PropertyMap mollweideProperty = 
> util::PropertyMap().set(common::IdentifiedObject::NAME_KEY, "Mollweide");
> ? operation::ConversionNNPtr mollweideConversion = 
> operation::Conversion::createMollweide(mollweideProperty,
> common::Angle(0.0),
> common::Length(0.0),
> common::Length(0.0));
>
> My next question is pretty dumb. Now that I have the input CRS and the 
> conversion created, how to I take a array position (which represent 
> long/lat) from the input CRS and get the converted position for the 
> map? I looked at the operation API but am not familiar enough with 
> basic GIS to recognize what I need.
>
> Sincerely,
>
> Dan
>
> On 5/31/23 07:30, Greg Troxel wrote:
>> Daniel Suson <djsuson at gmail.com> writes:
>>
>>> My problem is that createMapNameEPSGCode is included in
>>> operations/oputils.hpp, which is not copied into the include directory
>>> when PROJ is built. Is this a problem with how PROJ was installed, or
>>> am I missing something regarding how to get access to this?
>> The first question to resolve is the definition of the C++, and whether
>> what you want is formally part of that API.
>>
>> https://proj.org/en/latest/development/reference/cpp/index.html
>>
>> Searching for
>>
>> ?? site:proj.org "createMapNameEPSGCode"
>>
>> comes up empty.? So it might be that this function is not actually part
>> of the API.
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.


