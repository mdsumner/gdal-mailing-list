From bogus@does.not.exist.com  Fri Nov 30 01:19:32 2018
From: bogus@does.not.exist.com ()
Date: Fri, 30 Nov 2018 09:19:32 -0000
Subject: No subject
Message-ID: <mailman.0.1543569576.9050.proj@lists.osgeo.org>

round about -80m east and -200m north. Those values are 'nearly' calculated 
by the first two tools. But using cs2cs there is an offset of +0.36m east and 
-212.73m north. The northing offset seems to look allright but the easting 
offset must be wrong.

So, what is the mistake I made? Wrong params for cs2cs??
Can anyone help me or even just give me a hint how to translate utm ed50 to 
utm wgs84?

Chris
-- 
Christoph Dohmen                    ChDohmen at gmx.de



From support at mnspoint.com  Thu Nov  1 04:26:15 2018
From: support at mnspoint.com (support at mnspoint.com)
Date: Thu, 01 Nov 2018 12:26:15 +0100
Subject: [Proj] cs2cs - specifying UTM zone on command line
In-Reply-To: <CA+PyowxNnbP41K-cWyTT2hA5OnDs6Xd0Ui7VUbG7ZjTpd8Y11Q@mail.gmail.com>
References: <CA+PyowxNnbP41K-cWyTT2hA5OnDs6Xd0Ui7VUbG7ZjTpd8Y11Q@mail.gmail.com>
Message-ID: <9368207b595b2f4d27be9b4e0607f1d0@mnspoint.com>

Hello, 

looks like the following quote is the main reason to avoid the "auto"
implementations unless the method used for the source material is well
known: 

"However, it is often convenient or necessary to measure a series of
locations on a single grid when some are located in two adjacent zones."


source: 

https://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system#Overlapping_grids


Janne. 

------------------------- 

Robb Main kirjoitti 2018-10-29 17:30:

> When converting many lat,long coordinates to UTM, is there some way to setup cs2cs to calculate the UTM zone based on the longitude of the source cordinate system, rather than having to specify the zone on the command line? 
> 
> What I'm looking for is something like: instead of this: 
> cs2cs +proj=latlong +data=NAD83 +to +proj=utm +zone=10 +datum=NAD27 ./input.data 
> you could instead specify: 
> 
> cs2cs +proj=latlong +data=NAD83 +to +proj=utm +zone=auto +datum=NAD27 ./input.data where 'zone=auto' might tell the algorithm to figure the zone out based on longitude of the input coordinate. This would ensure the output data would be correct, even if the input data file contains coordinates that span multiple UTM zones. 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181101/b155739b/attachment.html>

From martin.desruisseaux at geomatys.com  Thu Nov  1 05:04:24 2018
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 1 Nov 2018 13:04:24 +0100
Subject: [Proj] cs2cs - specifying UTM zone on command line
In-Reply-To: <9368207b595b2f4d27be9b4e0607f1d0@mnspoint.com>
References: <CA+PyowxNnbP41K-cWyTT2hA5OnDs6Xd0Ui7VUbG7ZjTpd8Y11Q@mail.gmail.com>
	<9368207b595b2f4d27be9b4e0607f1d0@mnspoint.com>
Message-ID: <29b16ac6-55dd-78ed-20cc-102697173cdd@geomatys.com>

Hello

Le 01/11/2018 à 12:26, support at mnspoint.com a écrit :

> looks like the following quote is the main reason to avoid the "auto"
> implementations unless the method used for the source material is well
> known:
>
> "However, it is often convenient or necessary to measure a series of
> locations on a single grid when some are located in two adjacent zones."
>
Indeed, an inconvenient of Transverse Mercator Zoned Grid System is that
it introduces discontinuities at zone borders, where a distance of one
meter suddenly represents a large change in coordinate values because of
zone change. That may be a reason (I'm just guessing) why some CRS like
EPSG:5649 simulates the grid system with a classical (non-gridded)
Transverse Mercator projection: no discontinuity "surprise" as long as
the CRS is the same. However this is valid only for the immediate
neighbour of the CRS zone.

It may be a case where there is no "fit all" solutions: both have
advantages and inconvenient, which may be why both of them are available
in EPSG database.

    Martin




From sgh at sgh.dk  Sun Nov  4 07:47:08 2018
From: sgh at sgh.dk (=?ISO-8859-1?Q?S=F8ren?= Holm)
Date: Sun, 04 Nov 2018 16:47:08 +0100
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
Message-ID: <2964467.5kfALtlyS1@koontz>

Hi

In 5.1.0 the following command worked as expected :

$ cct +init=DK:S34S  

But in 5.2.0 this happennes :

$ cct +init=DK:S34S                                                                                 
cct: Bad transformation arguments - (missing required arguments)
    'cct -h' for help


Do I need to use some other initstring  in 5.2.0 ?

-- 
Søren Holm




From even.rouault at spatialys.com  Sun Nov  4 12:51:26 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 04 Nov 2018 21:51:26 +0100
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <2964467.5kfALtlyS1@koontz>
References: <2964467.5kfALtlyS1@koontz>
Message-ID: <2548234.oWJBgjYMCR@even-i700>

Søren,

I think the issue is that the _TC32_TD32 definition in the DK file has a 
Helmert transform that lacks the convention used for rotation terms, which is 
required since PROJ 5.2. So likely adding convention=coordinate_frame would 
fix the issue (since that was what was implemented before PROJ 5.2), but I'll 
Kristian or Thomas check that this is appropriate.

Even

> Hi
> 
> In 5.1.0 the following command worked as expected :
> 
> $ cct +init=DK:S34S
> 
> But in 5.2.0 this happennes :
> 
> $ cct +init=DK:S34S
> cct: Bad transformation arguments - (missing required arguments)
>     'cct -h' for help
> 
> 
> Do I need to use some other initstring  in 5.2.0 ?


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From sgh at sgh.dk  Sun Nov  4 13:42:40 2018
From: sgh at sgh.dk (=?ISO-8859-1?Q?S=F8ren?= Holm)
Date: Sun, 04 Nov 2018 22:42:40 +0100
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <2548234.oWJBgjYMCR@even-i700>
References: <2964467.5kfALtlyS1@koontz> <2548234.oWJBgjYMCR@even-i700>
Message-ID: <40565402.AQKyZLY2mC@koontz>

Hi

Great - I look forward to the response fomr Thomas or Kristian.

Regarding the ressource files. What can be expected as far at compatability?

For my use case having new versions of the resource files be compatible with 
old proj-versions would be appropriate. For other people it might be opposite.

søndag den 4. november 2018 21.51.26 CET skrev Even Rouault:
> Søren,
> 
> I think the issue is that the _TC32_TD32 definition in the DK file has a
> Helmert transform that lacks the convention used for rotation terms, which
> is required since PROJ 5.2. So likely adding convention=coordinate_frame
> would fix the issue (since that was what was implemented before PROJ 5.2),
> but I'll Kristian or Thomas check that this is appropriate.

-- 
Søren Holm




From knudsen.thomas at gmail.com  Sun Nov  4 23:40:44 2018
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Mon, 5 Nov 2018 08:40:44 +0100
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <40565402.AQKyZLY2mC@koontz>
References: <2964467.5kfALtlyS1@koontz> <2548234.oWJBgjYMCR@even-i700>
	<40565402.AQKyZLY2mC@koontz>
Message-ID: <CAH0YoEMejhuQ905xmJ0UWH0cJYevJEX5XArMR5NV8wiPRHCD6g@mail.gmail.com>

Søren,

I suppose Even's suggestion will solve your problem - but could you please
tell  whether that is the case?
(just to avoid chasing solutions for problems already solved).

/Thomas

Den søn. 4. nov. 2018 kl. 22.44 skrev Søren Holm <sgh at sgh.dk>:

> Hi
>
> Great - I look forward to the response fomr Thomas or Kristian.
>
> Regarding the ressource files. What can be expected as far at
> compatability?
>
> For my use case having new versions of the resource files be compatible
> with
> old proj-versions would be appropriate. For other people it might be
> opposite.
>
> søndag den 4. november 2018 21.51.26 CET skrev Even Rouault:
> > Søren,
> >
> > I think the issue is that the _TC32_TD32 definition in the DK file has a
> > Helmert transform that lacks the convention used for rotation terms,
> which
> > is required since PROJ 5.2. So likely adding convention=coordinate_frame
> > would fix the issue (since that was what was implemented before PROJ
> 5.2),
> > but I'll Kristian or Thomas check that this is appropriate.
>
> --
> Søren Holm
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181105/88198f52/attachment.html>

From kreve at sdfe.dk  Sun Nov  4 23:41:48 2018
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 5 Nov 2018 07:41:48 +0000
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <40565402.AQKyZLY2mC@koontz>
References: <2964467.5kfALtlyS1@koontz> <2548234.oWJBgjYMCR@even-i700>
	<40565402.AQKyZLY2mC@koontz>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAEF1F29E@S000014.PROD.SITAD.DK>

Søren,

Yes, as Even says, it is indeed the missing +convention parameter in _TC32_TD32. Clearly I forgot to fix that before releasing the updated proj-datumgrid packages. For now replacing +transpose with +convention=coordinate_frame should fix the problem. I'll make sure to update the relevant init files. Thanks for reporting this.

Regarding compatibility, generally you should be able to expect to be able to use old resource files with newer PROJ versions. This particular case is a consequence of an unfortunate choice of default convention in the original Helmert transformation that caused PROJ to expect one convention for +proj=helmert and another for +towgs84 [0]. To fix that, and make sure that the mistake wasn't repeated by users we decommissioned the +transpose flag and introduced the mandatory +convention for the Helmert transformation. This should have been avoided in the first place, but unfortunately it wasn't. On the plus side we are now always explicit about the used rotation convention. 

/Kristian

[0] https://github.com/OSGeo/proj.4/issues/1091

-----Oprindelig meddelelse-----
Fra: proj-bounces at lists.maptools.org <proj-bounces at lists.maptools.org> På vegne af Søren Holm
Sendt: 4. november 2018 22:43
Til: Even Rouault <even.rouault at spatialys.com>
Cc: proj at lists.maptools.org
Emne: Re: [Proj] Regression 5.1.0 -> 5.2.0 ?

Hi

Great - I look forward to the response fomr Thomas or Kristian.

Regarding the ressource files. What can be expected as far at compatability?

For my use case having new versions of the resource files be compatible with 
old proj-versions would be appropriate. For other people it might be opposite.

søndag den 4. november 2018 21.51.26 CET skrev Even Rouault:
> Søren,
> 
> I think the issue is that the _TC32_TD32 definition in the DK file has a
> Helmert transform that lacks the convention used for rotation terms, which
> is required since PROJ 5.2. So likely adding convention=coordinate_frame
> would fix the issue (since that was what was implemented before PROJ 5.2),
> but I'll Kristian or Thomas check that this is appropriate.

-- 
Søren Holm


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From sgh at sgh.dk  Sun Nov  4 23:44:59 2018
From: sgh at sgh.dk (=?ISO-8859-1?Q?S=F8ren?= Holm)
Date: Mon, 05 Nov 2018 08:44:59 +0100
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <CAH0YoEMejhuQ905xmJ0UWH0cJYevJEX5XArMR5NV8wiPRHCD6g@mail.gmail.com>
References: <2964467.5kfALtlyS1@koontz> <40565402.AQKyZLY2mC@koontz>
	<CAH0YoEMejhuQ905xmJ0UWH0cJYevJEX5XArMR5NV8wiPRHCD6g@mail.gmail.com>
Message-ID: <2317513.8bK51Hvu3A@koontz>

Yes, but where exactly should I add "convention=coordinate_frame" ?

mandag den 5. november 2018 08.40.44 CET skrev Thomas Knudsen:
> Søren,
> 
> I suppose Even's suggestion will solve your problem - but could you please
> tell  whether that is the case?
> (just to avoid chasing solutions for problems already solved).
> 

-- 
Søren Holm




From kreve at sdfe.dk  Sun Nov  4 23:58:27 2018
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 5 Nov 2018 07:58:27 +0000
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <2317513.8bK51Hvu3A@koontz>
References: <2964467.5kfALtlyS1@koontz> <40565402.AQKyZLY2mC@koontz>
	<CAH0YoEMejhuQ905xmJ0UWH0cJYevJEX5XArMR5NV8wiPRHCD6g@mail.gmail.com>
	<2317513.8bK51Hvu3A@koontz>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAEF1F302@S000014.PROD.SITAD.DK>

Here:

<_TC32_TD32>
    proj=pipeline no_defs
    step proj=cart ellps=GRS80
    step proj=helmert inv
         x = -81.0703   rx = -0.48488
         y = -89.3603   ry = -0.02436
         z =-115.7526   rz = -0.41321   s = -0.540645
         convention=coordinate_frame                                         #  <--- HERE
    step proj=cart ellps=intl  inv      # Now: GEO_TD32
    step proj=utm  ellps=intl  zone=32  # And now: TC32_TD32 (UTM32 if ED50 was "perfect")


Ignore my previous comment about replacing +transpose - it's not there so can't be replaced. I think this will work for you.

/Kristian


-----Oprindelig meddelelse-----
Fra: proj-bounces at lists.maptools.org <proj-bounces at lists.maptools.org> På vegne af Søren Holm
Sendt: 5. november 2018 08:45
Til: proj at lists.maptools.org
Emne: Re: [Proj] Regression 5.1.0 -> 5.2.0 ?

Yes, but where exactly should I add "convention=coordinate_frame" ?

mandag den 5. november 2018 08.40.44 CET skrev Thomas Knudsen:
> Søren,
> 
> I suppose Even's suggestion will solve your problem - but could you please
> tell  whether that is the case?
> (just to avoid chasing solutions for problems already solved).
> 

-- 
Søren Holm


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From sgh at sgh.dk  Mon Nov  5 00:02:49 2018
From: sgh at sgh.dk (=?ISO-8859-1?Q?S=F8ren?= Holm)
Date: Mon, 05 Nov 2018 09:02:49 +0100
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAEF1F302@S000014.PROD.SITAD.DK>
References: <2964467.5kfALtlyS1@koontz> <2317513.8bK51Hvu3A@koontz>
	<2E885BB293AF0448A0181138489E9A0EAEF1F302@S000014.PROD.SITAD.DK>
Message-ID: <2276551.xSRhXTYto2@koontz>

It works! :)

mandag den 5. november 2018 08.58.27 CET skrev Kristian Evers:
> Here:
> 
> <_TC32_TD32>
>     proj=pipeline no_defs
>     step proj=cart ellps=GRS80
>     step proj=helmert inv
>          x = -81.0703   rx = -0.48488
>          y = -89.3603   ry = -0.02436
>          z =-115.7526   rz = -0.41321   s = -0.540645
>          convention=coordinate_frame                                        
> #  <--- HERE step proj=cart ellps=intl  inv      # Now: GEO_TD32
>     step proj=utm  ellps=intl  zone=32  # And now: TC32_TD32 (UTM32 if ED50
> was "perfect")
> 
> 
> Ignore my previous comment about replacing +transpose - it's not there so
> can't be replaced. I think this will work for you.
> 
> /Kristian
> 
> 
> -----Oprindelig meddelelse-----
> Fra: proj-bounces at lists.maptools.org <proj-bounces at lists.maptools.org> På
> vegne af Søren Holm Sendt: 5. november 2018 08:45
> Til: proj at lists.maptools.org
> Emne: Re: [Proj] Regression 5.1.0 -> 5.2.0 ?
> 
> Yes, but where exactly should I add "convention=coordinate_frame" ?
> 
> mandag den 5. november 2018 08.40.44 CET skrev Thomas Knudsen:
> > Søren,
> > 
> > I suppose Even's suggestion will solve your problem - but could you please
> > tell  whether that is the case?
> > (just to avoid chasing solutions for problems already solved).


-- 
Søren Holm




From kreve at sdfe.dk  Mon Nov  5 00:09:46 2018
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 5 Nov 2018 08:09:46 +0000
Subject: [Proj] Regression 5.1.0 -> 5.2.0 ?
In-Reply-To: <2276551.xSRhXTYto2@koontz>
References: <2964467.5kfALtlyS1@koontz> <2317513.8bK51Hvu3A@koontz>
	<2E885BB293AF0448A0181138489E9A0EAEF1F302@S000014.PROD.SITAD.DK>
	<2276551.xSRhXTYto2@koontz>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAEF1F357@S000014.PROD.SITAD.DK>

Awesome. Fixed in https://github.com/NordicGeodesy/NordicTransformations/commit/97de170da47d9ffc5430ce00298617c75f80085e

It will be included in the next release of proj-datumgrid-europe.

/Kristian

-----Oprindelig meddelelse-----
Fra: proj-bounces at lists.maptools.org <proj-bounces at lists.maptools.org> På vegne af Søren Holm
Sendt: 5. november 2018 09:03
Til: proj at lists.maptools.org
Emne: Re: [Proj] Regression 5.1.0 -> 5.2.0 ?

It works! :)

mandag den 5. november 2018 08.58.27 CET skrev Kristian Evers:
> Here:
> 
> <_TC32_TD32>
>     proj=pipeline no_defs
>     step proj=cart ellps=GRS80
>     step proj=helmert inv
>          x = -81.0703   rx = -0.48488
>          y = -89.3603   ry = -0.02436
>          z =-115.7526   rz = -0.41321   s = -0.540645
>          convention=coordinate_frame                                        
> #  <--- HERE step proj=cart ellps=intl  inv      # Now: GEO_TD32
>     step proj=utm  ellps=intl  zone=32  # And now: TC32_TD32 (UTM32 if ED50
> was "perfect")
> 
> 
> Ignore my previous comment about replacing +transpose - it's not there so
> can't be replaced. I think this will work for you.
> 
> /Kristian
> 
> 
> -----Oprindelig meddelelse-----
> Fra: proj-bounces at lists.maptools.org <proj-bounces at lists.maptools.org> På
> vegne af Søren Holm Sendt: 5. november 2018 08:45
> Til: proj at lists.maptools.org
> Emne: Re: [Proj] Regression 5.1.0 -> 5.2.0 ?
> 
> Yes, but where exactly should I add "convention=coordinate_frame" ?
> 
> mandag den 5. november 2018 08.40.44 CET skrev Thomas Knudsen:
> > Søren,
> > 
> > I suppose Even's suggestion will solve your problem - but could you please
> > tell  whether that is the case?
> > (just to avoid chasing solutions for problems already solved).


-- 
Søren Holm


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From nicolas.cadieux at archeotec.ca  Thu Nov  8 07:18:02 2018
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Thu, 8 Nov 2018 10:18:02 -0500
Subject: [Proj] Length of a deg in metres
Message-ID: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>

Hi,

I am writing to python code to calculate the length (in metres) of a 
degree of longitude at a certain degree of latitude.  I would like to 
take various ellipsoid in mind (WGS84, GRS80, Clarke 1866...).  The goal 
is to find the right scale (or z factor) when making slope or shade 
raster models when x and y are in long/lat and z in feet or meters.  Can 
someone point me in the right direction to do this in using Proj?  Is 
Proj the best option for this?

Thanks,

Nicolas



From sault.don at gmail.com  Thu Nov  8 09:08:19 2018
From: sault.don at gmail.com (Saulteau Don)
Date: Thu, 8 Nov 2018 10:08:19 -0700
Subject: [Proj] Length of a deg in metres
In-Reply-To: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>
References: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>
Message-ID: <CAJo0jfOzKExqWyziLCYXUcf28mPZcJ-W+_EQq_37-2mbfn6Upg@mail.gmail.com>

I'm certain someone is going to be more knowledgeable than I, but I do
sometimes go back to this answer at GIS.se to get some insight.

https://gis.stackexchange.com/a/95397/1297

The user shares some formulas for obtaining both the scale and z-factor.

For other ellipsoids (the answer uses WGS84) it's a matter of determining
the length of one degree (longitude) at the equator in metres. For WGS84
it's 111320m for example.
The longitude is from the center of the area of interest.


Donovan


On Thu, Nov 8, 2018 at 8:22 AM Nicolas Cadieux <nicolas.cadieux at archeotec.ca>
wrote:

> Hi,
>
> I am writing to python code to calculate the length (in metres) of a
> degree of longitude at a certain degree of latitude.  I would like to
> take various ellipsoid in mind (WGS84, GRS80, Clarke 1866...).  The goal
> is to find the right scale (or z factor) when making slope or shade
> raster models when x and y are in long/lat and z in feet or meters.  Can
> someone point me in the right direction to do this in using Proj?  Is
> Proj the best option for this?
>
> Thanks,
>
> Nicolas
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181108/0d928231/attachment.html>

From charles.karney at sri.com  Thu Nov  8 10:06:37 2018
From: charles.karney at sri.com (Charles Karney)
Date: Thu, 8 Nov 2018 18:06:37 +0000
Subject: [Proj] Length of a deg in metres
In-Reply-To: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>
References: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>
Message-ID: <33be2459-1ffb-fc51-4b74-a934c807b188@sri.com>

Dunno about getting the result from proj.  The formula you want is given
in

https://en.wikipedia.org/wiki/Longitude#Length_of_a_degree_of_longitude

This includes the ellipsoidal correction.

On 11/8/18 10:18 AM, Nicolas Cadieux wrote:
> Hi,
> 
> I am writing to python code to calculate the length (in metres) of a
> degree of longitude at a certain degree of latitude.  I would like to
> take various ellipsoid in mind (WGS84, GRS80, Clarke 1866...).  The goal
> is to find the right scale (or z factor) when making slope or shade
> raster models when x and y are in long/lat and z in feet or meters.  Can
> someone point me in the right direction to do this in using Proj?  Is
> Proj the best option for this?
> 
> Thanks,
> 
> Nicolas
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 

From luis.de.sousa at protonmail.ch  Fri Nov  9 02:30:20 2018
From: luis.de.sousa at protonmail.ch (=?UTF-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Fri, 09 Nov 2018 10:30:20 +0000
Subject: [Proj] Length of a deg in metres
In-Reply-To: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>
References: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>
Message-ID: <hKN2V_uIl3fbm3gpbcweGv8Vnd3Bc5zrOtWm7v6ruFqiyPPYOnxRZuyvcbZYG3H92ezJaNjYPChudEX4iCYUlw==@protonmail.ch>

Hi Nicolas,

PROJ itself relies on the GeographicLib package [0] for the computation of geodesics and rhumb lines. Since you are programming in Python, the easiest option is to use directly the GeographicLib port to Python [1].

Regards.

[0] https://geographiclib.sourceforge.io/
[1] https://pypi.org/project/geographiclib/

--
Luís Moreira de Sousa
Email: luis.de.sousa at protonmail.ch
RingID: ring:7ca91d83f4f9dec82fec9f1144b8e5c1ef2a110c
URL: https://ldesousa.github.io

Sent with ProtonMail Secure Email.

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Thursday, November 8, 2018 4:18 PM, Nicolas Cadieux <nicolas.cadieux at archeotec.ca> wrote:

> Hi,
>
> I am writing to python code to calculate the length (in metres) of a
> degree of longitude at a certain degree of latitude.  I would like to
> take various ellipsoid in mind (WGS84, GRS80, Clarke 1866...).  The goal
> is to find the right scale (or z factor) when making slope or shade
> raster models when x and y are in long/lat and z in feet or meters.  Can
> someone point me in the right direction to do this in using Proj?  Is
> Proj the best option for this?
>
> Thanks,
>
> Nicolas
>
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj




From nicolas.cadieux at archeotec.ca  Fri Nov  9 05:33:21 2018
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Fri, 9 Nov 2018 08:33:21 -0500
Subject: [Proj] Length of a deg in metres
In-Reply-To: <hKN2V_uIl3fbm3gpbcweGv8Vnd3Bc5zrOtWm7v6ruFqiyPPYOnxRZuyvcbZYG3H92ezJaNjYPChudEX4iCYUlw==@protonmail.ch>
References: <80499e80-1c83-b022-327e-fa786e414932@archeotec.ca>
	<hKN2V_uIl3fbm3gpbcweGv8Vnd3Bc5zrOtWm7v6ruFqiyPPYOnxRZuyvcbZYG3H92ezJaNjYPChudEX4iCYUlw==@protonmail.ch>
Message-ID: <10ACFB43-A0E7-43CF-B835-FCEC6F67325D@archeotec.ca>

Hi,
Thanks everyone for pointing me in useful directions.
Nicolas

> Le 9 nov. 2018 à 05:30, Luí­s Moreira de Sousa <luis.de.sousa at protonmail.ch> a écrit :
> 
> Hi Nicolas,
> 
> PROJ itself relies on the GeographicLib package [0] for the computation of geodesics and rhumb lines. Since you are programming in Python, the easiest option is to use directly the GeographicLib port to Python [1].
> 
> Regards.
> 
> [0] https://geographiclib.sourceforge.io/
> [1] https://pypi.org/project/geographiclib/
> 
> --
> Luís Moreira de Sousa
> Email: luis.de.sousa at protonmail.ch
> RingID: ring:7ca91d83f4f9dec82fec9f1144b8e5c1ef2a110c
> URL: https://ldesousa.github.io
> 
> Sent with ProtonMail Secure Email.
> 
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
>> On Thursday, November 8, 2018 4:18 PM, Nicolas Cadieux <nicolas.cadieux at archeotec.ca> wrote:
>> 
>> Hi,
>> 
>> I am writing to python code to calculate the length (in metres) of a
>> degree of longitude at a certain degree of latitude.  I would like to
>> take various ellipsoid in mind (WGS84, GRS80, Clarke 1866...).  The goal
>> is to find the right scale (or z factor) when making slope or shade
>> raster models when x and y are in long/lat and z in feet or meters.  Can
>> someone point me in the right direction to do this in using Proj?  Is
>> Proj the best option for this?
>> 
>> Thanks,
>> 
>> Nicolas
>> 
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj


From ycompanys at gmail.com  Sun Nov 11 19:13:02 2018
From: ycompanys at gmail.com (Yosem Companys)
Date: Sun, 11 Nov 2018 19:13:02 -0800
Subject: [Proj] Please Help Puerto Rico
Message-ID: <CANhci9Gv4z5sOVApLb0XqcPxLXBoeZ0pV6f1CbgoTKBaDYM5jA@mail.gmail.com>

Hi All,

Do you or someone you know have expertise crowdsourcing GIS data?

I'm currently advising Hunter College's Center for Puerto Rican Studies
("Centro") on its GIS mapping efforts
<https://centropr.hunter.cuny.edu/events-news/rebuild-puerto-rico/data-hub> in
Puerto Rico. Centro is one of just a handful of groups using GIS mapping to
help Puerto Rico.

Since Hurricane Maria's landfall in Puerto Rico, Centro's GIS mapping has
shifted from relief to recovery and reconstruction. To accelerate its
efforts, Centro would like to create a crowdsourcing platform to gather GIS
data.

I've suggested to Centro to connect with developers who have expertise in
crowdsourcing GIS data so as to avoid reinventing the wheel. To this end,
should you or someone you know have expertise developing GIS data
crowdsourcing platforms, please let me know.

Thanks,
Yosem
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181111/0a446ec8/attachment.html>

From rmain.mws at gmail.com  Tue Nov 13 12:03:11 2018
From: rmain.mws at gmail.com (Robb Main)
Date: Tue, 13 Nov 2018 15:03:11 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
Message-ID: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>

I need to convert WGS84 (lat, long) coordinates from GPS to NAD27 UTM
Eastings & Northings coordinates, primarily in Canada, in an Android
environment. To maximize accuracy of the end result, I believe the NTv2
grid corrections must be applied (though adding 13.5MB to the final
solution is not desireable).

I've looked at Proj.4 codebase, and I'm not at all sure it's the best tool
for this purpose. The JNI support for proj.4 appears to be for java support
under linux/windows/macos. GDAL uses proj.4 & appears to build for android
( https://trac.osgeo.org/gdal/wiki/BuildingForAndroid ), so it _IS_
possible (with some pain), though I'm not sure this is current info.
Regardless, GDAL is overkill for my needs, as all I need is coordinates.

I also found the proj4j library (a java port of the proj4 code -
http://svn.osgeo.org/metacrs/proj4j/trunk/src/README.html), though it looks
like it was last updated 5 years ago, and its not clear if grid support was
ever fully implemented / operational.

I found CTS ( https://github.com/orbisgis/cts ), which is a straight JAVA
library, implementing the required tranformations & supporting grids, but
there is little information / no examples on its use. Since it is pure
java, I expect it would be easier to implement in an android build
environment.

Please comment on the above if you have experience with them, or point me
in the right direction if you have some other suggestion.

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181113/69ea961d/attachment.html>

From nicolas.cadieux at archeotec.ca  Tue Nov 13 12:50:11 2018
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Tue, 13 Nov 2018 15:50:11 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
Message-ID: <072CB9E8-D94C-436D-BC0F-0772ED4E28BF@archeotec.ca>

Hi,
Comments below..

> Le 13 nov. 2018 à 15:03, Robb Main <rmain.mws at gmail.com> a écrit :
> 
> I need to convert WGS84 (lat, long) coordinates from GPS to NAD27 UTM Eastings & Northings coordinates, primarily in Canada, in an Android environment. To maximize accuracy of the end result, I believe the NTv2 grid corrections must be applied (though adding 13.5MB to the final solution is not desireable).

Yes this is correct.  The first step will be to go from WGS84 transit to NAD83(CSRS) and then to NAD27 using the grid files.  Make sure you have the last version of the grid from 
https://open.canada.ca/en/suggested-datasets/ntv2-grid-shift-files-gsb.

Perhaps the easiest way is to link the android tool to the nrcan web tools?  It depends on the availability of wifi or cell coverage.

http://webappd.geod.nrcan.gc.ca/geod/tools-outils/trx.php?locale=fr&wbdisable=true

http://webapp.geod.nrcan.gc.ca/geod/tools-outils/ntv2.php

Good luck

> 
> I've looked at Proj.4 codebase, and I'm not at all sure it's the best tool for this purpose. The JNI support for proj.4 appears to be for java support under linux/windows/macos. GDAL uses proj.4 & appears to build for android ( https://trac.osgeo.org/gdal/wiki/BuildingForAndroid ), so it _IS_ possible (with some pain), though I'm not sure this is current info. Regardless, GDAL is overkill for my needs, as all I need is coordinates. 
> 
> I also found the proj4j library (a java port of the proj4 code - http://svn.osgeo.org/metacrs/proj4j/trunk/src/README.html), though it looks like it was last updated 5 years ago, and its not clear if grid support was ever fully implemented / operational.
> 
> I found CTS ( https://github.com/orbisgis/cts ), which is a straight JAVA library, implementing the required tranformations & supporting grids, but there is little information / no examples on its use. Since it is pure java, I expect it would be easier to implement in an android build environment.
> 
> Please comment on the above if you have experience with them, or point me in the right direction if you have some other suggestion.
> 
> Thank you.
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181113/730cdecd/attachment.html>

From gdt at lexort.com  Tue Nov 13 16:07:27 2018
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 13 Nov 2018 19:07:27 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
	(Robb Main's message of "Tue, 13 Nov 2018 15:03:11 -0500")
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
Message-ID: <smu7ehg1pz4.fsf@linuxpal.mit.edu>

Robb Main <rmain.mws at gmail.com> writes:

> I need to convert WGS84 (lat, long) coordinates from GPS to NAD27 UTM
> Eastings & Northings coordinates, primarily in Canada, in an Android
> environment. To maximize accuracy of the end result, I believe the NTv2
> grid corrections must be applied (though adding 13.5MB to the final
> solution is not desireable).
>
> I've looked at Proj.4 codebase, and I'm not at all sure it's the best tool
> for this purpose. The JNI support for proj.4 appears to be for java support
> under linux/windows/macos. GDAL uses proj.4 & appears to build for android
> ( https://trac.osgeo.org/gdal/wiki/BuildingForAndroid ), so it _IS_
> possible (with some pain), though I'm not sure this is current info.
> Regardless, GDAL is overkill for my needs, as all I need is coordinates.

I realize you are heading down the java path, but:

It's quite possible to use the NDK to compile C code for android.  As an
example, the tmux package, available from

  https://f-droid.org/en/packages/com.termux/

This even includes clang so you can build C code on the phone.

It should be not super hard to add proj as a package within the termux
ecosystem, so you can install it with apt-get.

Another example is OSMAnd, which has some native code, I'm pretty sure
for routing.



From gdt at lexort.com  Tue Nov 13 16:09:19 2018
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 13 Nov 2018 19:09:19 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <072CB9E8-D94C-436D-BC0F-0772ED4E28BF@archeotec.ca> (Nicolas
	Cadieux's message of "Tue, 13 Nov 2018 15:50:11 -0500")
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
	<072CB9E8-D94C-436D-BC0F-0772ED4E28BF@archeotec.ca>
Message-ID: <smu36s41pw0.fsf@linuxpal.mit.edu>

Nicolas Cadieux <nicolas.cadieux at archeotec.ca> writes:

> Perhaps the easiest way is to link the android tool to the nrcan web
> tools?  It depends on the availability of wifi or cell coverage.

In addition to not working in remote areas (and I have used OSMAnd to
navigate in areas with no cell service, while watching apple maps on
someone's iPhone totally fail), there's another issue, which is
informing the user that their data will be sent over the web.   That
could earn your app the "tracks and reports your activity" antifeature
on f-droid :-)


From martin.desruisseaux at geomatys.com  Wed Nov 14 01:19:42 2018
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Wed, 14 Nov 2018 10:19:42 +0100
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
Message-ID: <4696d382-a310-8fd0-f00a-7c0d460b92c3@geomatys.com>

Hello Robb

I you look for a pure Java implementation, Apache Spatial Information
System (http://sis.apache.org/) can do this coordinate transformation.
Apache SIS is a source of inspiration for the new PROJ version
(https://gdalbarn.com/) in progress. Pros and cons below:

Advantages:

  * Strong emphasis on OGC and ISO standards, including GML, WKT 1 and
    2, etc.
  * Advanced features not found even in Proj.4 (late-binding
    implementation, etc.). PROJ is catching-up with gdalbarn however.
  * You can use it in a way that does not make you too dependent on this
    particular implementation, through GeoAPI interfaces.

Inconvenient:

  * Not as many projections than Proj.
  * Relatively large binary (~3 Mb) with many features not needed for
    WGS84 to NAD27 UTM transformations.
  * Depends on JAXB, which is not available by default on Android.
  * Making sure that SIS runs on Android would probably require more work.

The JAR size problem may be mitigated by trimming down the classes not
needed by your application. I think Maven Shader plugin can do that.
Since Java 9, jlink can also do that but the result is a native binary
instead than a portable Java Archive file. A Google Summer of Code
student started a port of SIS to Android (e.g. removing JAXB
dependencies), but this work has not been completed.

Let me know if you wish any additional information,

    Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181114/d1e47085/attachment.html>

From rmain.mws at gmail.com  Wed Nov 14 05:03:18 2018
From: rmain.mws at gmail.com (Robb Main)
Date: Wed, 14 Nov 2018 08:03:18 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <072CB9E8-D94C-436D-BC0F-0772ED4E28BF@archeotec.ca>
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
	<072CB9E8-D94C-436D-BC0F-0772ED4E28BF@archeotec.ca>
Message-ID: <CA+Pyowz+0q0Jcvt2WtbHbSnkNKbS_pH1aQWSkbk-v160o5WGOg@mail.gmail.com>

Thanks for the suggestion, Nicholas.

I do have the latest NTv2 gsb file (13.5MB!).

Unfortunately, I require an offline solution - internet &/or cell data
connections will often be unavailable.
For that matter, relying on the continued existence of 'governement funded'
tools might also be a concern.
Canada is not immune to arbitrary swings of the economic axe. Or they might
just move the tool to some other URL.
Either way would bork my app.
;-)



On Tue, Nov 13, 2018 at 4:02 PM Nicolas Cadieux <
nicolas.cadieux at archeotec.ca> wrote:

> Hi,
> Comments below..
>
> Le 13 nov. 2018 à 15:03, Robb Main <rmain.mws at gmail.com> a écrit :
>
> I need to convert WGS84 (lat, long) coordinates from GPS to NAD27 UTM
> Eastings & Northings coordinates, primarily in Canada, in an Android
> environment. To maximize accuracy of the end result, I believe the NTv2
> grid corrections must be applied (though adding 13.5MB to the final
> solution is not desireable).
>
>
> Yes this is correct.  The first step will be to go from WGS84 transit to NAD83(CSRS)
> and then to NAD27 using the grid files.  Make sure you have the last
> version of the grid from
> https://open.canada.ca/en/suggested-datasets/ntv2-grid-shift-files-gsb.
>
> Perhaps the easiest way is to link the android tool to the nrcan web
> tools?  It depends on the availability of wifi or cell coverage.
>
>
> http://webappd.geod.nrcan.gc.ca/geod/tools-outils/trx.php?locale=fr&wbdisable=true
>
> http://webapp.geod.nrcan.gc.ca/geod/tools-outils/ntv2.php
>
> Good luck
>
>
> I've looked at Proj.4 codebase, and I'm not at all sure it's the best tool
> for this purpose. The JNI support for proj.4 appears to be for java support
> under linux/windows/macos. GDAL uses proj.4 & appears to build for android
> ( https://trac.osgeo.org/gdal/wiki/BuildingForAndroid ), so it _IS_
> possible (with some pain), though I'm not sure this is current info.
> Regardless, GDAL is overkill for my needs, as all I need is coordinates.
>
> I also found the proj4j library (a java port of the proj4 code -
> http://svn.osgeo.org/metacrs/proj4j/trunk/src/README.html), though it
> looks like it was last updated 5 years ago, and its not clear if grid
> support was ever fully implemented / operational.
>
> I found CTS ( https://github.com/orbisgis/cts ), which is a straight JAVA
> library, implementing the required tranformations & supporting grids, but
> there is little information / no examples on its use. Since it is pure
> java, I expect it would be easier to implement in an android build
> environment.
>
> Please comment on the above if you have experience with them, or point me
> in the right direction if you have some other suggestion.
>
> Thank you.
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181114/24b5ee35/attachment.html>

From rmain.mws at gmail.com  Wed Nov 14 05:15:27 2018
From: rmain.mws at gmail.com (Robb Main)
Date: Wed, 14 Nov 2018 08:15:27 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <smu36s41pw0.fsf@linuxpal.mit.edu>
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
	<072CB9E8-D94C-436D-BC0F-0772ED4E28BF@archeotec.ca>
	<smu36s41pw0.fsf@linuxpal.mit.edu>
Message-ID: <CA+PyowwD1+gg9B4Nh3Z8COd6qGEaMmDW9a8d3qV0DGEJsVxQBw@mail.gmail.com>

Thanks for your input, Greg.

My existing app codebase is under Android Studio on Windows platform. It
already uses the NDK & JNI wrapper to integrate a support library written
in C, so I'm familiar with the process.

Given my very modest needs (WGS84 coordinates -> NAD27 UTM coordinates),
I'd like to avoid linking in a swiss-army knife, when all I need is the
tooth-pick. I'd also prefer to use a java codebase that will compile
natively (mainly for simplicity & code maintenance considerations) if its
available.

I wasn't aware of OSMAnd - thanks. However, it does not provide coordinate
conversion (which is what I require), and most of the 'detail' provided
appears to be oriented to roadmaps & urban areas. This application concerns
areas literally 'in the middle of no where'. No roads, wifi, or cell
coverage.

Best Regards.



On Tue, Nov 13, 2018 at 7:19 PM Greg Troxel <gdt at lexort.com> wrote:

> Nicolas Cadieux <nicolas.cadieux at archeotec.ca> writes:
>
> > Perhaps the easiest way is to link the android tool to the nrcan web
> > tools?  It depends on the availability of wifi or cell coverage.
>
> In addition to not working in remote areas (and I have used OSMAnd to
> navigate in areas with no cell service, while watching apple maps on
> someone's iPhone totally fail), there's another issue, which is
> informing the user that their data will be sent over the web.   That
> could earn your app the "tracks and reports your activity" antifeature
> on f-droid :-)
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181114/200d5137/attachment.html>

From rmain.mws at gmail.com  Wed Nov 14 05:51:27 2018
From: rmain.mws at gmail.com (Robb Main)
Date: Wed, 14 Nov 2018 08:51:27 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <4696d382-a310-8fd0-f00a-7c0d460b92c3@geomatys.com>
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
	<4696d382-a310-8fd0-f00a-7c0d460b92c3@geomatys.com>
Message-ID: <CA+Pyowxp-jjRJOBwepYwE8ByA3gAbco2Nxssn5g_BszYG-ET3A@mail.gmail.com>

Thanks for the pointer to Apache SIS, Martin.
I was hoping to find an operational (or easily ported) Android solution,
and less of a swiss-army knife codebase.
You covered these issues in your response, and SIS / GDAL may yet prove
usefull in the eventual solution.
I'm still hopeful that there might be a simpler solution, not yet suggested
(and that I've not yet discovered).

Best regards.
Robb.




On Wed, Nov 14, 2018 at 4:19 AM Martin Desruisseaux <
martin.desruisseaux at geomatys.com> wrote:

> Hello Robb
>
> I you look for a pure Java implementation, Apache Spatial Information
> System (http://sis.apache.org/) can do this coordinate transformation.
> Apache SIS is a source of inspiration for the new PROJ version (
> https://gdalbarn.com/) in progress. Pros and cons below:
>
> Advantages:
>
>    - Strong emphasis on OGC and ISO standards, including GML, WKT 1 and
>    2, etc.
>    - Advanced features not found even in Proj.4 (late-binding
>    implementation, etc.). PROJ is catching-up with gdalbarn however.
>    - You can use it in a way that does not make you too dependent on this
>    particular implementation, through GeoAPI interfaces.
>
> Inconvenient:
>
>    - Not as many projections than Proj.
>    - Relatively large binary (~3 Mb) with many features not needed for
>    WGS84 to NAD27 UTM transformations.
>    - Depends on JAXB, which is not available by default on Android.
>    - Making sure that SIS runs on Android would probably require more
>    work.
>
> The JAR size problem may be mitigated by trimming down the classes not
> needed by your application. I think Maven Shader plugin can do that. Since
> Java 9, jlink can also do that but the result is a native binary instead
> than a portable Java Archive file. A Google Summer of Code student started
> a port of SIS to Android (e.g. removing JAXB dependencies), but this work
> has not been completed.
>
> Let me know if you wish any additional information,
>
>     Martin
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181114/17ede063/attachment.html>

From martin.desruisseaux at geomatys.com  Wed Nov 14 05:59:13 2018
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Wed, 14 Nov 2018 14:59:13 +0100
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <CA+Pyowxp-jjRJOBwepYwE8ByA3gAbco2Nxssn5g_BszYG-ET3A@mail.gmail.com>
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
	<4696d382-a310-8fd0-f00a-7c0d460b92c3@geomatys.com>
	<CA+Pyowxp-jjRJOBwepYwE8ByA3gAbco2Nxssn5g_BszYG-ET3A@mail.gmail.com>
Message-ID: <f3624d1b-6e7b-a45d-8381-5a9c1c6f7862@geomatys.com>

Hello Rob

Le 14/11/2018 à 14:51, Robb Main a écrit :

> I was hoping to find an operational (or easily ported) Android
> solution, and less of a swiss-army knife codebase. You covered these
> issues in your response, and SIS / GDAL may yet prove usefull in the
> eventual solution. I'm still hopeful that there might be a simpler
> solution, not yet suggested (and that I've not yet discovered).
>
No problem. I'm not sure if it has been pointed out in previous replies,
but another good source is:

    https://geographiclib.sourceforge.io/

It provides both C++ and Java implementations of the same algorithm, and
part of those C++ algorithms are actually integrated into Proj.4.

    Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181114/2da03610/attachment.html>

From rmain.mws at gmail.com  Wed Nov 14 06:07:51 2018
From: rmain.mws at gmail.com (Robb Main)
Date: Wed, 14 Nov 2018 09:07:51 -0500
Subject: [Proj] WGS84 to NAD27 Coordinate conversion in Android
In-Reply-To: <f3624d1b-6e7b-a45d-8381-5a9c1c6f7862@geomatys.com>
References: <CA+PyowzWfQJ1WAHGhAVNDaRexxwww1QBbqP7Bf3UUEtdkDVyOA@mail.gmail.com>
	<4696d382-a310-8fd0-f00a-7c0d460b92c3@geomatys.com>
	<CA+Pyowxp-jjRJOBwepYwE8ByA3gAbco2Nxssn5g_BszYG-ET3A@mail.gmail.com>
	<f3624d1b-6e7b-a45d-8381-5a9c1c6f7862@geomatys.com>
Message-ID: <CA+Pyowz-9H-Ftz=c_+sC2=cSta90J+TH4+Vsd-o6bw0fkxE-ow@mail.gmail.com>

Thanks, Martin.
I had not come across that - I will definitely check it out.

I found this Android app (
https://play.google.com/store/apps/details?id=br.com.devcor.latlongconverter&hl=en
). I'm not sure what codebase he used, but his app certainly supports a
broad list of datums). The installed size is only 7.8MB, so clearly it is a
limited implementation.

Best Regards,
Robb.


On Wed, Nov 14, 2018 at 8:59 AM Martin Desruisseaux <
martin.desruisseaux at geomatys.com> wrote:

> Hello Rob
>
> Le 14/11/2018 à 14:51, Robb Main a écrit :
>
> I was hoping to find an operational (or easily ported) Android solution,
> and less of a swiss-army knife codebase. You covered these issues in your
> response, and SIS / GDAL may yet prove usefull in the eventual solution.
> I'm still hopeful that there might be a simpler solution, not yet suggested
> (and that I've not yet discovered).
>
> No problem. I'm not sure if it has been pointed out in previous replies,
> but another good source is:
>
> https://geographiclib.sourceforge.io/
>
> It provides both C++ and Java implementations of the same algorithm, and
> part of those C++ algorithms are actually integrated into Proj.4.
>
>     Martin
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181114/b793c552/attachment.html>

From even.rouault at spatialys.com  Wed Nov 14 12:15:48 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 14 Nov 2018 21:15:48 +0100
Subject: [Proj] Integration of RFC2 work with existing PROJ code: axis order
	and unit issues
Message-ID: <1745025.Itg0laP9vn@even-i700>

Hi,

Now that RFC2 implementation is ready to be merged
( https://github.com/OSGeo/proj.4/pull/1175 ), come the next steps. One of 
them will be interation in GDAL, and then libgeotiff, so there will be fixes 
and complementary work that will be done as a result of those integrations.

For PROJ itself, one of the main thing I'd like to address is the fact that we 
have now two CRS databases:
- the old one in the data/epsg and data/IGNF files
- the new one in the SQLite3 proj.db database

The new one contains the content of the old one (with some differences, like 
the EPSG database in proj.db is fresher than in the old one). So the plan is 
to kill the old 'epsg' and 'IGNF' file that are used by the +init=file:code 
syntax and go instead into the database to fetch their definitions. If no 
match is found, so for other authorities than EPSG, IGNF or ESRI currently, 
then the existing text file based mechanism would still be used.

All good ? Well, not quite. One of the main issue I foresee before doing any 
implementation is axis order. In the old epsg file, geographic CRS use the 
longitude,latitude order, whereas proj.db and the new code I've developped 
respect the axis order declared by the authority, so in the case of EPSG, 
latitude,longitude for geographic CRS. This also applies for a few projected 
CRS: 'epsg' file uses generally easting,northing order (except for a few 
Transverse Mercator South Orientated projected CRS where it uses the expected 
westing,southing order), whereas EPSG might have northing,easting order for a 
few ones, or southing,westing for a few Krovak-based CRS.

What to do ? I can see different options:

- just use the 'correct' axis order, and mark this as a breaking change. That 
is if you use +init=epsg:4326, you'd have to provide / will get latitude first

- emulate the previous axis order in an attempt of being backward compatible. 
Not necessarily easy to do since that means we have to remember somewhere the 
old axis order and add the inversion when needed in some glue code between old 
and new code. And that would undermine one of the interest of the new work to 
be more axis aware than previously.

- have some switch in proj utilies ('proj', 'cs2cs', 'cct') to specify the 
input and output order (like -input_axis=long,lat -output_axis=east,north) so 
that they can adapt user input/output to the expected axis of the CRS used.
That would still be a breaking change since existing scripts would have to add 
the new switches to preserve existing behaviour.

The same question also arises at the API level. For example,
proj_create_crs_to_crs(ctxt, "epsg:4326", "epsg:32632") currently expects the 
input to be in longitude, latitude order.

There is also the question of units. Traditionnaly, in code paths that would 
expect angular values, PROJ expects radians (frontend utilities do the 
conversion into/from degrees). The new code assume sthe unit to be the one 
declared by the coordinate system in the geographic CRS definition, ie degrees 
in 99% of the case (or grad for a couple odd & old systems like "NTF (Paris)" 
/ EPSG:4807)

Let's consider a practical example. "projinfo -s EPSG:4326 -t EPSG:4807" 
outputs a transformation pipeline which is
"
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=ntf_r93.gsb +step 
+proj=longlat +ellps=clrk80ign +pm=paris +step +proj=unitconvert +xy_in=rad 
+xy_out=grad +step +proj=axisswap +order=2,1"

The traduction in plain English of this is:
- take the input coordinate and reverse the first 2 compoments
- convert from degree to radian
- do a horizontal grid shift transformation
- apply a prime meridian shift
- convert from radian to grad
- take the ouput coordinate and reverse the first 2 compoments

That is it expects the input to be lat,long in degrees and output lat,long in 
grads, as in the offical definition of those CRS.

Should the PJ* object returned by proj_create_crs_to_crs(ctxt, "epsg:4326", 
"epsg:4807") just use that pipeline, and consequently expect the coordinates 
passed into and received from proj_trans() to also use those orders and units.

Thoughts ?

Even

PS: the database might also contain geographic CRS definitions that are 
longitude,latitude by design. For example I've added an entry for the 
OGC:CRS84, and if you do "projinfo -s OGC:CRS84 -t EPSG:4807", then the 
pipeline doesn't contain the initial axisswap operations.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From even.rouault at spatialys.com  Thu Nov 15 07:40:00 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 15 Nov 2018 16:40:00 +0100
Subject: [Proj] Integration of RFC2 work with existing PROJ code: axis order
	and unit issues
Message-ID: <CALxNk+meKgf1ykoiy1++o5UCHBpNaTDD44J6KYH7DyHMyUsjHw@mail.gmail.com>

Hi,

(resending, as apparently my yesterday message wasn't delivered)

Now that the RFC2 implementation has been merged
( https://github.com/OSGeo/proj.4/pull/1175 ), come the next steps. One of
them will be interation in GDAL, and then libgeotiff, so there will be
fixes
and complementary work that will be done as a result of those integrations.

For PROJ itself, one of the main thing I'd like to address is the fact that
we
have now two CRS databases:
- the old one in the data/epsg and data/IGNF files
- the new one in the SQLite3 proj.db database

The new one contains the content of the old one (with some differences,
like
the EPSG database in proj.db is fresher than in the old one). So the plan
is
to kill the old 'epsg' and 'IGNF' file that are used by the +init=file:code
syntax and go instead into the database to fetch their definitions. If no
match is found, so for other authorities than EPSG, IGNF or ESRI currently,
then the existing text file based mechanism would still be used.

All good ? Well, not quite. One of the main issue I foresee before doing
any
implementation is axis order. In the old epsg file, geographic CRS use the
longitude,latitude order, whereas proj.db and the new code I've developped
respect the axis order declared by the authority, so in the case of EPSG,
latitude,longitude for geographic CRS. This also applies for a few
projected
CRS: 'epsg' file uses generally easting,northing order (except for a few
Transverse Mercator South Orientated projected CRS where it uses the
expected
westing,southing order), whereas EPSG might have northing,easting order for
a
few ones, or southing,westing for a few Krovak-based CRS.

What to do ? I can see different options:

- just use the 'correct' axis order, and mark this as a breaking change.
That
is if you use +init=epsg:4326, you'd have to provide / will get latitude
first

- emulate the previous axis order in an attempt of being backward
compatible.
Not necessarily easy to do since that means we have to remember somewhere
the
old axis order and add the inversion when needed in some glue code between
old
and new code. And that would undermine one of the interest of the new work
to
be more axis aware than previously.

- have some switch in proj utilies ('proj', 'cs2cs', 'cct') to specify the
input and output order (like -input_axis=long,lat -output_axis=east,north)
so
that they can adapt user input/output to the expected axis of the CRS used.
That would still be a breaking change since existing scripts would have to
add
the new switches to preserve existing behaviour.

The same question also arises at the API level. For example,
proj_create_crs_to_crs(ctxt, "epsg:4326", "epsg:32632") currently expects
the
input to be in longitude, latitude order.

There is also the question of units. Traditionnaly, in code paths that
would
expect angular values, PROJ expects radians (frontend utilities do the
conversion into/from degrees). The new code assume sthe unit to be the one
declared by the coordinate system in the geographic CRS definition, ie
degrees
in 99% of the case (or grad for a couple odd & old systems like "NTF
(Paris)"
/ EPSG:4807)

Let's consider a practical example. "projinfo -s EPSG:4326 -t EPSG:4807"
outputs a transformation pipeline which is
"
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert
+xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=ntf_r93.gsb +step
+proj=longlat +ellps=clrk80ign +pm=paris +step +proj=unitconvert +xy_in=rad
+xy_out=grad +step +proj=axisswap +order=2,1"

The traduction in plain English of this is:
- take the input coordinate and reverse the first 2 compoments
- convert from degree to radian
- do a horizontal grid shift transformation
- apply a prime meridian shift
- convert from radian to grad
- take the ouput coordinate and reverse the first 2 compoments

That is it expects the input to be lat,long in degrees and output lat,long
in
grads, as in the offical definition of those CRS.

Should the PJ* object returned by proj_create_crs_to_crs(ctxt, "epsg:4326",
"epsg:4807") just use that pipeline, and consequently expect the
coordinates
passed into and received from proj_trans() to also use those orders and
units.

Thoughts ?

Even

PS: the database might also contain geographic CRS definitions that are
longitude,latitude by design. For example I've added an entry for the
OGC:CRS84, and if you do "projinfo -s OGC:CRS84 -t EPSG:4807", then the
pipeline doesn't contain the initial axisswap operations.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181115/1d45a440/attachment.html>

From even.rouault at spatialys.com  Fri Nov 16 13:55:57 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 16 Nov 2018 22:55:57 +0100
Subject: [Proj] Potential migration of the mailing list
Message-ID: <2425593.JcWX0ErAEP@even-i700>

Hi,

We have had issues those last days with the maptools.org server hosting this 
mailing list being blocked from sending emails, due to spam transiting through 
it. This has been unblocked for now, but it might happen again.

We have requested migration of this mailing list on the lists.osgeo.org 
infrastructure which has more knowledgeable people already handling a very 
large number of lists.

The ticket tracking this is:
https://trac.osgeo.org/osgeo/ticket/2218

We'll try to migrate as much as possible, including the existing subscriber 
list, but in case this would not be possible, you might have to subscribe 
manually to the new list. We'll try to inform you of what happens on this 
channel, but if communication here doesn't seem functional anymore, please 
refer to the above link where instructions we'll be given.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From martin.desruisseaux at geomatys.com  Sat Nov 17 02:49:39 2018
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Sat, 17 Nov 2018 11:49:39 +0100
Subject: [Proj] Integration of RFC2 work with existing PROJ code: axis
 order and unit issues
In-Reply-To: <1745025.Itg0laP9vn@even-i700>
References: <1745025.Itg0laP9vn@even-i700>
Message-ID: <6fd3c42a-2cc7-eb3d-9e84-bd6059b6fb21@geomatys.com>

Hello Even

Le 14/11/2018 à 21:15, Even Rouault a écrit :

> One of the main issue I foresee before doing any implementation is
> axis order. In the old epsg file, geographic CRS use the
> longitude,latitude order, whereas proj.db and the new code I've
> developped respect the axis order declared by the authority, so in the
> case of EPSG,latitude,longitude for geographic CRS.
>
What about the following policy?

  * "epsg" in "+init=epsg:4326" refers to axis order as declared in the
    EPSG database.
  * For axis order as used in Proj.4, one of the following choices:
      o Define a new authority name, for example "+init=proj4:4326".
      o Or append a parameter to the code, for example
        "+init=epsg:4326;axisOrder=lonlat". This proposal as been
        discussed at OGC, but I don't think it became official
        recommendation.

Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181117/99dcf788/attachment.html>

From even.rouault at spatialys.com  Sat Nov 17 11:47:11 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 17 Nov 2018 20:47:11 +0100
Subject: [Proj] Integration of RFC2 work with existing PROJ code: axis
	order and unit issues
In-Reply-To: <6fd3c42a-2cc7-eb3d-9e84-bd6059b6fb21@geomatys.com>
References: <1745025.Itg0laP9vn@even-i700>
	<6fd3c42a-2cc7-eb3d-9e84-bd6059b6fb21@geomatys.com>
Message-ID: <2627507.JH0MLbHn1u@even-i700>

Hi Martin,

> What about the following policy?
> 
>   * "epsg" in "+init=epsg:4326" refers to axis order as declared in the
>     EPSG database.
>   * For axis order as used in Proj.4, one of the following choices:
>       o Define a new authority name, for example "+init=proj4:4326".
>       o Or append a parameter to the code, for example
>         "+init=epsg:4326;axisOrder=lonlat". This proposal as been
>         discussed at OGC, but I don't think it became official
>         recommendation.

If we go for breaking backward compatibility, your proposal of embedding the 
axisOrder override in the CRS designation (could be generalized for projected 
CRS too: axisOrder=easting,northing) is rather attractive and would avoid 
adding switches to exiting utilities or extra parameters or new variants to 
existing API.

I'm not too much for creating a PROJ authority (at least for that purpose 
(*)). That would mean either to duplicate & patch a lot of existing EPSG 
definitions in the database itself, or add special code to dynamically patch 
existing official definitions. But as we support multiple authorities 
(currently EPSG, ESRI, IGNF, and possibly other we wouldn't be even aware if 
users add their own), PROJ:code could be ambiguous.

Even

(*) The PROJ authority is already used to add new CRS definitions not present 
in other authorities, or new transformations between existing CRS. For now it 
has only 4 objects :-)

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From pavel.hancar at gmail.com  Sat Nov 17 12:03:06 2018
From: pavel.hancar at gmail.com (=?UTF-8?Q?Pavel_Han=C4=8Dar?=)
Date: Sat, 17 Nov 2018 21:03:06 +0100
Subject: [Proj] latlon projection
Message-ID: <CAOK2_Rb2TmxCvYEEH2iKuM+u1F20v98Vg2iR2=Yb6dqTSD4MVQ@mail.gmail.com>

  Hello,
I am trying to understand some basic concepts of map rendering, but I've
got really confused by the fact, that "longlat" or "lonlat" are often
mentioned as a name of a projection. For example:
+proj=longlat +datum=WGS84 +no_defs

AFAIK longitude and latitude stay for a coordination system, not for a map
projection. Thus I thought it was a kind of simplification and the actual
projection must have been the Equidistant Cylindrical. But I found the
Equidistant Cylindrical being determined by "eqc" not "longlat".  So what
is the "longlat"? I ended up running `proj -lP`, but found just this:

lonlat : Lat/long (Geodetic)
latlon : Lat/long (Geodetic alias)

The only explanation is, that it is geodetic. But to me it seems it is not
any explanation, but a further specification saying it is not geocentric,
but the angles are taken from normals of the ellipsoid.

So, what projection is the "lonlat"? Or how are longitude and latitude
projected to the flat map when nothing else is specified?

 Thank you very much.

  Best wishes,
  Pavel Hančar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181117/4600de35/attachment.html>

From even.rouault at spatialys.com  Sat Nov 17 12:35:23 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 17 Nov 2018 21:35:23 +0100
Subject: [Proj] latlon projection
In-Reply-To: <CAOK2_Rb2TmxCvYEEH2iKuM+u1F20v98Vg2iR2=Yb6dqTSD4MVQ@mail.gmail.com>
References: <CAOK2_Rb2TmxCvYEEH2iKuM+u1F20v98Vg2iR2=Yb6dqTSD4MVQ@mail.gmail.com>
Message-ID: <3401783.yhQY6vJ4YA@even-i700>

On samedi 17 novembre 2018 21:03:06 CET Pavel Hančar wrote:
>   Hello,
> I am trying to understand some basic concepts of map rendering, but I've
> got really confused by the fact, that "longlat" or "lonlat" are often
> mentioned as a name of a projection. For example:
> +proj=longlat +datum=WGS84 +no_defs
> 
> AFAIK longitude and latitude stay for a coordination system, not for a map
> projection. Thus I thought it was a kind of simplification and the actual
> projection must have been the Equidistant Cylindrical. But I found the
> Equidistant Cylindrical being determined by "eqc" not "longlat".  So what
> is the "longlat"? I ended up running `proj -lP`, but found just this:
> 
> lonlat : Lat/long (Geodetic)
> latlon : Lat/long (Geodetic alias)
> 
> The only explanation is, that it is geodetic. But to me it seems it is not
> any explanation, but a further specification saying it is not geocentric,
> but the angles are taken from normals of the ellipsoid.
> 
> So, what projection is the "lonlat"? Or how are longitude and latitude
> projected to the flat map when nothing else is specified?

I'm not going to bring really new information as you pretty much figured out 
everything by yourself. Just to confirm that the 'longlat' 'projection' is not 
a projection in the official meaning of the term. In PROJ, it is basically a 
passthrough operation that doesn't change input coordinates:
- if longitudes are in the [-180,180] range, otherwise they will be by default 
wraped to it)
- and if you don't add some qualifiers that might alter its default behaviour, 
like 'pm', 'axis', 'lon_0', ...

The 'proj' keyword has even been abused/extended in PROJ 5 to designate a 
number of non-projection coordinate operations, or build transformation 
pipelines.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From luis.de.sousa at protonmail.ch  Sat Nov 17 14:51:58 2018
From: luis.de.sousa at protonmail.ch (=?UTF-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Sat, 17 Nov 2018 22:51:58 +0000
Subject: [Proj] latlon projection
In-Reply-To: <CAOK2_Rb2TmxCvYEEH2iKuM+u1F20v98Vg2iR2=Yb6dqTSD4MVQ@mail.gmail.com>
References: <CAOK2_Rb2TmxCvYEEH2iKuM+u1F20v98Vg2iR2=Yb6dqTSD4MVQ@mail.gmail.com>
Message-ID: <NDTxbzfoiwIEfj4Bme8odlwXm58iOLGpW989sdhopPZ8PPu3w-m-nAW43yZmoqOxnoQjvtN5k1GCVWHdkuU6Hg==@protonmail.ch>

Hi Pavel,

that equates to Marinus of Tyre's projection [0]. Even though PROJ itself takes it as a geodetical coordinate system, pretty much all other software (Qgis, GRASS, etc) treats it as cartographic. You should keep this in mind when computing distances or areas in this system.

Regards.

[0] https://en.m.wikipedia.org/wiki/Plate_carr%C3%A9e_projection

Sent from ProtonMail mobile

-------- Original Message --------
On 17 Nov 2018, 21:03, Pavel Hančar wrote:

>   Hello,
> I am trying to understand some basic concepts of map rendering, but I've got really confused by the fact, that "longlat" or "lonlat" are often mentioned as a name of a projection. For example:
> +proj=longlat +datum=WGS84 +no_defs
>
> AFAIK longitude and latitude stay for a coordination system, not for a map projection. Thus I thought it was a kind of simplification and the actual projection must have been the Equidistant Cylindrical. But I found the  Equidistant Cylindrical being determined by "eqc" not "longlat".  So what is the "longlat"? I ended up running `proj -lP`, but found just this:
>
> lonlat : Lat/long (Geodetic)
> latlon : Lat/long (Geodetic alias)
>
> The only explanation is, that it is geodetic. But to me it seems it is not any explanation, but a further specification saying it is not geocentric, but the angles are taken from normals of the ellipsoid.
>
> So, what projection is the "lonlat"? Or how are longitude and latitude projected to the flat map when nothing else is specified?
>
>  Thank you very much.
>
>   Best wishes,
>   Pavel Hančar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181117/5fd997a6/attachment.html>

From kreve at sdfe.dk  Sun Nov 18 01:24:12 2018
From: kreve at sdfe.dk (Kristian Evers)
Date: Sun, 18 Nov 2018 09:24:12 +0000
Subject: [Proj] Potential migration of the mailing list
In-Reply-To: <2425593.JcWX0ErAEP@even-i700>
References: <2425593.JcWX0ErAEP@even-i700>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAEF4F799@S000014.PROD.SITAD.DK>

Hi Even,

Thanks for taking care of this. I am happy to hear that it should be possible to migrate all the users to the OSGeo list.

Now that reconfiguration is at play anyway, it would be nice to change both the name ("PROJ.4 and general Projections Discussion" of the list as well as the mail subject prefix ("[Proj]"). At least I think we should align the names so that in both places it says PROJ instead of PROJ.4/Proj. It would also be nice to broaden the subject to more than just "general Projection Discussions", perhaps "general geodesy discussion"? Suggestions for better names are very welcome here :-)

/Kristian


-----Oprindelig meddelelse-----
Fra: proj-bounces at lists.maptools.org <proj-bounces at lists.maptools.org> På vegne af Even Rouault
Sendt: 16. november 2018 22:56
Til: proj at lists.maptools.org; tiff at lists.maptools.org; geotiff at lists.maptools.org; shapelib at lists.maptools.org
Emne: [Proj] Potential migration of the mailing list

Hi,

We have had issues those last days with the maptools.org server hosting this 
mailing list being blocked from sending emails, due to spam transiting through 
it. This has been unblocked for now, but it might happen again.

We have requested migration of this mailing list on the lists.osgeo.org 
infrastructure which has more knowledgeable people already handling a very 
large number of lists.

The ticket tracking this is:
https://trac.osgeo.org/osgeo/ticket/2218

We'll try to migrate as much as possible, including the existing subscriber 
list, but in case this would not be possible, you might have to subscribe 
manually to the new list. We'll try to inform you of what happens on this 
channel, but if communication here doesn't seem functional anymore, please 
refer to the above link where instructions we'll be given.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From jmckenna at gatewaygeomatics.com  Sun Nov 18 03:57:54 2018
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sun, 18 Nov 2018 07:57:54 -0400
Subject: [PROJ] Potential migration of the mailing list
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAEF4F799@S000014.PROD.SITAD.DK>
References: <2425593.JcWX0ErAEP@even-i700>
	<2E885BB293AF0448A0181138489E9A0EAEF4F799@S000014.PROD.SITAD.DK>
Message-ID: <8b4ce556-0ebe-4c74-4a55-c4b374debc53@gatewaygeomatics.com>

Hi Kristian, I made those changes to the current list.  -jeff



On 2018-11-18 5:24 AM, Kristian Evers wrote:
> Hi Even,
> 
> Thanks for taking care of this. I am happy to hear that it should be possible to migrate all the users to the OSGeo list.
> 
> Now that reconfiguration is at play anyway, it would be nice to change both the name ("PROJ.4 and general Projections Discussion" of the list as well as the mail subject prefix ("[Proj]"). At least I think we should align the names so that in both places it says PROJ instead of PROJ.4/Proj. It would also be nice to broaden the subject to more than just "general Projection Discussions", perhaps "general geodesy discussion"? Suggestions for better names are very welcome here :-)
> 
> /Kristian
> 
> 
> -----Oprindelig meddelelse-----
> Fra: proj-bounces at lists.maptools.org <proj-bounces at lists.maptools.org> På vegne af Even Rouault
> Sendt: 16. november 2018 22:56
> Til: proj at lists.maptools.org; tiff at lists.maptools.org; geotiff at lists.maptools.org; shapelib at lists.maptools.org
> Emne: [Proj] Potential migration of the mailing list
> 
> Hi,
> 
> We have had issues those last days with the maptools.org server hosting this
> mailing list being blocked from sending emails, due to spam transiting through
> it. This has been unblocked for now, but it might happen again.
> 
> We have requested migration of this mailing list on the lists.osgeo.org
> infrastructure which has more knowledgeable people already handling a very
> large number of lists.
> 
> The ticket tracking this is:
> https://trac.osgeo.org/osgeo/ticket/2218
> 
> We'll try to migrate as much as possible, including the existing subscriber
> list, but in case this would not be possible, you might have to subscribe
> manually to the new list. We'll try to inform you of what happens on this
> channel, but if communication here doesn't seem functional anymore, please
> refer to the above link where instructions we'll be given.
> 
> Best regards,
> 
> Even
> 


From pavel.hancar at gmail.com  Sun Nov 18 14:24:49 2018
From: pavel.hancar at gmail.com (=?UTF-8?Q?Pavel_Han=C4=8Dar?=)
Date: Sun, 18 Nov 2018 23:24:49 +0100
Subject: [PROJ] [Proj] latlon projection
In-Reply-To: <NDTxbzfoiwIEfj4Bme8odlwXm58iOLGpW989sdhopPZ8PPu3w-m-nAW43yZmoqOxnoQjvtN5k1GCVWHdkuU6Hg==@protonmail.ch>
References: <CAOK2_Rb2TmxCvYEEH2iKuM+u1F20v98Vg2iR2=Yb6dqTSD4MVQ@mail.gmail.com>
	<NDTxbzfoiwIEfj4Bme8odlwXm58iOLGpW989sdhopPZ8PPu3w-m-nAW43yZmoqOxnoQjvtN5k1GCVWHdkuU6Hg==@protonmail.ch>
Message-ID: <CAOK2_Raumu2x84CCe_8iVAi5V=gvt7M+Rx4iJ9dtcQyDcTkd3Q@mail.gmail.com>

  Hi Luí­s,
  Thank you for your answer. The linked article
<https://en.m.wikipedia.org/wiki/Equirectangular_projection> says the
Marinus of Tyre's projection is also called the equidistant cylindrical
projection. It implies, that the 'lonlat' and 'latlong' are just aliases
for 'eqc'. Right?  In that case I would expect to get this information
after I enter
$ proj -l=lonlat
IMHO the output
lonlat : Lat/long (Geodetic)
does not say much.

I am just a beginner, so I might be wrong, but a note saying it's an alias
for 'eqc' could improve the description listing.

Best wishes,
  Pavel

so 17. 11. 2018 v 23:52 odesílatel Luí­s Moreira de Sousa <
luis.de.sousa at protonmail.ch> napsal:

> Hi Pavel,
>
> that equates to Marinus of Tyre's projection [0]. Even though PROJ itself
> takes it as a geodetical coordinate system, pretty much all other software
> (Qgis, GRASS, etc) treats it as cartographic. You should keep this in mind
> when computing distances or areas in this system.
>
> Regards.
>
> [0] https://en.m.wikipedia.org/wiki/Plate_carr%C3%A9e_projection
>
>
> Sent from ProtonMail mobile
>
>
>
> -------- Original Message --------
> On 17 Nov 2018, 21:03, Pavel Hančar < pavel.hancar at gmail.com> wrote:
>
>
>   Hello,
> I am trying to understand some basic concepts of map rendering, but I've
> got really confused by the fact, that "longlat" or "lonlat" are often
> mentioned as a name of a projection. For example:
> +proj=longlat +datum=WGS84 +no_defs
>
> AFAIK longitude and latitude stay for a coordination system, not for a map
> projection. Thus I thought it was a kind of simplification and the actual
> projection must have been the Equidistant Cylindrical. But I found the
> Equidistant Cylindrical being determined by "eqc" not "longlat".  So what
> is the "longlat"? I ended up running `proj -lP`, but found just this:
>
> lonlat : Lat/long (Geodetic)
> latlon : Lat/long (Geodetic alias)
>
> The only explanation is, that it is geodetic. But to me it seems it is not
> any explanation, but a further specification saying it is not geocentric,
> but the angles are taken from normals of the ellipsoid.
>
> So, what projection is the "lonlat"? Or how are longitude and latitude
> projected to the flat map when nothing else is specified?
>
>  Thank you very much.
>
>   Best wishes,
>   Pavel Hančar
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181118/b237f54e/attachment.html>

From luis.de.sousa at protonmail.ch  Sun Nov 18 23:35:27 2018
From: luis.de.sousa at protonmail.ch (=?UTF-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Mon, 19 Nov 2018 07:35:27 +0000
Subject: [PROJ] [Proj] latlon projection
In-Reply-To: <CAOK2_Raumu2x84CCe_8iVAi5V=gvt7M+Rx4iJ9dtcQyDcTkd3Q@mail.gmail.com>
References: <CAOK2_Rb2TmxCvYEEH2iKuM+u1F20v98Vg2iR2=Yb6dqTSD4MVQ@mail.gmail.com>
	<NDTxbzfoiwIEfj4Bme8odlwXm58iOLGpW989sdhopPZ8PPu3w-m-nAW43yZmoqOxnoQjvtN5k1GCVWHdkuU6Hg==@protonmail.ch>
	<CAOK2_Raumu2x84CCe_8iVAi5V=gvt7M+Rx4iJ9dtcQyDcTkd3Q@mail.gmail.com>
Message-ID: <D5QU0hRVLBEie9ZIDaxdo2tuKNvyAwGD7vtmL4ntoWjnsG5TYBExoOS6AMhX6xEe6j8I8PP8fT12SUbpEz20xA==@protonmail.ch>

Hi again Pavel,

the information provided by PROJ is correct, you just need to be aware that most software interpret it in a different way. In fact a cartographic programme like QGis should not portray datasets defined in a geodetical system, and always request an explicit projection. Depending on your goal, it is possibly wiser to use a cartographic system.

Regards.

--
Luís Moreira de Sousa
Email: luis.de.sousa at protonmail.ch
RingID: ring:7ca91d83f4f9dec82fec9f1144b8e5c1ef2a110c
URL: https://ldesousa.github.io

Sent with [ProtonMail](https://protonmail.com) Secure Email.

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Sunday, 18 November 2018 23:24, Pavel Hančar <pavel.hancar at gmail.com> wrote:

>   Hi Luí­s,
>   Thank you for your answer. The [linked article](https://en.m.wikipedia.org/wiki/Equirectangular_projection) says the Marinus of Tyre's projection is also called the equidistant cylindrical projection. It implies, that the 'lonlat' and 'latlong' are just aliases for 'eqc'. Right?  In that case I would expect to get this information after I enter
> $ proj -l=lonlat
> IMHO the output
> lonlat : Lat/long (Geodetic)
> does not say much.
>
> I am just a beginner, so I might be wrong, but a note saying it's an alias for 'eqc' could improve the description listing.
>
> Best wishes,
>   Pavel
>
> so 17. 11. 2018 v 23:52 odesílatel Luí­s Moreira de Sousa <luis.de.sousa at protonmail.ch> napsal:
>
>> Hi Pavel,
>>
>> that equates to Marinus of Tyre's projection [0]. Even though PROJ itself takes it as a geodetical coordinate system, pretty much all other software (Qgis, GRASS, etc) treats it as cartographic. You should keep this in mind when computing distances or areas in this system.
>>
>> Regards.
>>
>> [0] https://en.m.wikipedia.org/wiki/Plate_carr%C3%A9e_projection
>>
>> Sent from ProtonMail mobile
>>
>> -------- Original Message --------
>> On 17 Nov 2018, 21:03, Pavel Hančar < pavel.hancar at gmail.com> wrote:
>>
>>>   Hello,
>>> I am trying to understand some basic concepts of map rendering, but I've got really confused by the fact, that "longlat" or "lonlat" are often mentioned as a name of a projection. For example:
>>> +proj=longlat +datum=WGS84 +no_defs
>>>
>>> AFAIK longitude and latitude stay for a coordination system, not for a map projection. Thus I thought it was a kind of simplification and the actual projection must have been the Equidistant Cylindrical. But I found the  Equidistant Cylindrical being determined by "eqc" not "longlat".  So what is the "longlat"? I ended up running `proj -lP`, but found just this:
>>>
>>> lonlat : Lat/long (Geodetic)
>>> latlon : Lat/long (Geodetic alias)
>>>
>>> The only explanation is, that it is geodetic. But to me it seems it is not any explanation, but a further specification saying it is not geocentric, but the angles are taken from normals of the ellipsoid.
>>>
>>> So, what projection is the "lonlat"? Or how are longitude and latitude projected to the flat map when nothing else is specified?
>>>
>>>  Thank you very much.
>>>
>>>   Best wishes,
>>>   Pavel Hančar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181119/72f07dd6/attachment.html>

From jicrbuh1 at gmail.com  Mon Nov 26 07:31:08 2018
From: jicrbuh1 at gmail.com (Chen Barnoy)
Date: Mon, 26 Nov 2018 17:31:08 +0200
Subject: [PROJ] Regarding the new API
Message-ID: <CAKF-jtKZbDcUvKFzJsKCPJBqRQs7udF+zUg7g29e5+v_vGFBoQ@mail.gmail.com>

Hi,

Regarding the new API:
If I want to transform from WGS84 geo to another projection, is there a
difference (in the performance) between using  proj_create_crs_to_crs  and
proj_create?

I would like to use the more general function proj_create_crs_to_crs, but
not sure if I should.

Cheers,
Chen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20181126/78659682/attachment.html>

From even.rouault at spatialys.com  Mon Nov 26 08:54:25 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 26 Nov 2018 17:54:25 +0100
Subject: [PROJ] Regarding the new API
In-Reply-To: <CAKF-jtKZbDcUvKFzJsKCPJBqRQs7udF+zUg7g29e5+v_vGFBoQ@mail.gmail.com>
References: <CAKF-jtKZbDcUvKFzJsKCPJBqRQs7udF+zUg7g29e5+v_vGFBoQ@mail.gmail.com>
Message-ID: <3066722.Nzg2zHh9Sv@even-i700>

On lundi 26 novembre 2018 17:31:08 CET Chen Barnoy wrote:
> Hi,
> 
> Regarding the new API:
> If I want to transform from WGS84 geo to another projection, is there a
> difference (in the performance) between using  proj_create_crs_to_crs  and
> proj_create?

In PROJ 5, proj_create_crs_to_crs() is a simpler wrapper around proj_create() 
that constructs the following string

+proj=pipeline +step +init=srid_from +inv +step +init=srid_to

and pass it to proj_create().

(things will change in PROJ 6 once the just submitted
https://github.com/OSGeo/proj.4/pull/1182 will be merged)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From even.rouault at spatialys.com  Fri Nov 30 01:55:09 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 30 Nov 2018 10:55:09 +0100
Subject: [Proj] PROJ mailing list migrated to @lists.osgeo.org
Message-ID: <1715992.J2X14QHjyo@even-i700>

Hi,

As previously announced, the PROJ mailing list is now at

proj at lists.osgeo.org

You should already have received an automatic welcome message. Please no 
longer use the old list (has been put in "emergency mode" to effectively 
disable it)

The message archive has been migrated to
https://lists.osgeo.org/pipermail/proj/

Even
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Nov 30 07:22:17 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 30 Nov 2018 16:22:17 +0100
Subject: [Proj] SRS barn: 6th status report
Message-ID: <1583030.Bc31IgOXBS@even-i700>

Hi

Please find my 6th status report at
https://erouault.blogspot.com/2018/11/srs-barn-raising-6th-report.html

Best regards,

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

