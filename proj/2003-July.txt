From bwragg at tpg.com.au  Tue Jul  1 16:37:18 2003
From: bwragg at tpg.com.au (Benjamin Wragg)
Date: Wed, 2 Jul 2003 09:07:18 +0930
Subject: [OSRS-PROJ] Problem with projecting 180,90 using Mercator
Message-ID: <000001c34029$b7682b40$0a00a8c0@mapping12>

Hi list,

I'm currently using PostGIS (which uses the proj4 library) to convert
and store some spatial data. I receive 4 coordinates in lat/long which
define the extents of a hardcopy map. I use these coordinates to create
a PostGIS feature. The next step I need to do is convert the feature to
the desired coordinate system. This works great for most features but
I've found that if a hardcopy map has been specified with coordinates
like -180,-90,180,90 (a typical map of the world) the transformation
crashes. I've questioned the PostGIS list and Paul Ramsey suggested
running cs2cs manually which is what PostGIS essentially uses for
transformations. When I run the following:

	cs2cs +proj=latlong +ellps=WGS84 +to +proj=merc +lon_0=150.0
	180 90

I get:

	* * 0.00

If I pass in any other coordinate I get values back OK.
So why is -180,-90,180,90 not being projected? Any suggestions?

Thanks,

Benjamin Wragg

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Tue Jul  1 18:08:51 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 01 Jul 2003 21:08:51 -0400
Subject: [OSRS-PROJ] Problem with projecting 180,90 using Mercator
In-Reply-To: <000001c34029$b7682b40$0a00a8c0@mapping12>
References: <000001c34029$b7682b40$0a00a8c0@mapping12>
Message-ID: <1057108131.2315.24.camel@localhost>

One VERY simple part of the problem: Mercator projection will not
project data at the Poles---latitude +-90 degrees.

The results are at an infinite distance from the equator.  Sorry.

If you need full global coverage select something like Miller or
for less distortion one of the pseudocylindricals.  Or if you
insist on Mercator reduce the latitude range to +-85 degrees.

On Tue, 2003-07-01 at 19:37, Benjamin Wragg wrote:
> Hi list,
> 
> I'm currently using PostGIS (which uses the proj4 library) to convert
> and store some spatial data. I receive 4 coordinates in lat/long which
> define the extents of a hardcopy map. I use these coordinates to create
> a PostGIS feature. The next step I need to do is convert the feature to
> the desired coordinate system. This works great for most features but
> I've found that if a hardcopy map has been specified with coordinates
> like -180,-90,180,90 (a typical map of the world) the transformation
> crashes. I've questioned the PostGIS list and Paul Ramsey suggested
> running cs2cs manually which is what PostGIS essentially uses for
> transformations. When I run the following:
> 
> 	cs2cs +proj=latlong +ellps=WGS84 +to +proj=merc +lon_0=150.0
> 	180 90
> 
> I get:
> 
> 	* * 0.00
> 
> If I pass in any other coordinate I get values back OK.
> So why is -180,-90,180,90 not being projected? Any suggestions?
> 
> Thanks,
> 
> Benjamin Wragg
> 
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From ed at topozone.com  Wed Jul  2 07:38:47 2003
From: ed at topozone.com (Ed McNierney)
Date: Wed, 2 Jul 2003 10:38:47 -0400
Subject: [OSRS-PROJ] Problem with projecting 180,90 using Mercator
Message-ID: <13858AA1A74F30419F319ACB66A9D1222BFC7B@mercator.topozone.com>

Benjamin -

In the Mercator projection the Y-coordinate is related to the tangent of the latitude, and the tangent of 90 degrees is infinite.  The longitude isn't a problem, but you can't go to 90 dgrees North or South in that projection.

You might want to look at the REAL bounding box of that hardcopy map.  If it's a Mercator source map, the northern and southern edges are NOT at 90 degrees of latitude - they're typically around 80 degrees or so.  Beyond that the paper/planet ratio starts to get uneconomical <g>.

	- Ed

Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
ed at topozone.com
(978) 251-4242 

-----Original Message-----
From: Benjamin Wragg [mailto:bwragg at tpg.com.au]
Sent: Tuesday, July 01, 2003 7:37 PM
To: osrs-proj at remotesensing.org
Subject: [OSRS-PROJ] Problem with projecting 180,90 using Mercator


Hi list,

I'm currently using PostGIS (which uses the proj4 library) to convert
and store some spatial data. I receive 4 coordinates in lat/long which
define the extents of a hardcopy map. I use these coordinates to create
a PostGIS feature. The next step I need to do is convert the feature to
the desired coordinate system. This works great for most features but
I've found that if a hardcopy map has been specified with coordinates
like -180,-90,180,90 (a typical map of the world) the transformation
crashes. I've questioned the PostGIS list and Paul Ramsey suggested
running cs2cs manually which is what PostGIS essentially uses for
transformations. When I run the following:

	cs2cs +proj=latlong +ellps=WGS84 +to +proj=merc +lon_0=150.0
	180 90

I get:

	* * 0.00

If I pass in any other coordinate I get values back OK.
So why is -180,-90,180,90 not being projected? Any suggestions?

Thanks,

Benjamin Wragg

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From alex.weidauer at huckfinn.de  Wed Jul  2 10:48:25 2003
From: alex.weidauer at huckfinn.de (Alexander Weidauer)
Date: Wed, 02 Jul 2003 19:48:25 +0200
Subject: [OSRS-PROJ]  There is a littel bug in stere
References: <13858AA1A74F30419F319ACB66A9D1222BFC7B@mercator.topozone.com>
Message-ID: <3F031AE9.8000104@huckfinn.de>

Hi folks,

I testing with gis datas for ESRI around and
use the delivered world30 grid in certain
projections for demo programs.

I no the coordinate description is stupid setted
but the bevahior of proj is really strange.

If I use

[~ !] proj +proj=stere +ellps=WGS84
-180 90
0.00    25512548.00
-180 -90
0.00    -25512548.00
-180 -180
*       *
-180 180
*       *
-180 360
*       *
-180 0     <---- but here the program crashes

The program crashes with division by zero
also in the DLL version. Any suggetions ?

Regards Alexander Weidauer

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Thu Jul  3 07:14:44 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 03 Jul 2003 10:14:44 -0400
Subject: [OSRS-PROJ] Stereographic projection error
Message-ID: <1057241684.2454.12.camel@localhost>

An email of yesterday, that I lost and can't refer to, indicated a
problem with the Stereographic projection in the Equitorial mode
(lat_0=0, default usage).

Indeed there was an error and both the X and Y coordinates were
miscaled by a factor of 2.0.

This is corrected in the next release of libproj4.  Because of the
importance of this correction, I will make a new release of libproj4
available this weekend.

The email also indicated usage of the Stereographic projection
that was in error: trying to project points that were at the
apodal point (opposite side of the earth).  Stereographic is
a member of the perspectives where the focus is at the opposite
side of the Earth from the origin and, like Mercator polar points,
points tend to infinity as you approach the focus.

Many thanks to the person who submitted the bug report.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From nhv at cape.com  Thu Jul  3 11:24:46 2003
From: nhv at cape.com (Norman Vine)
Date: Thu, 3 Jul 2003 14:24:46 -0400
Subject: [OSRS-PROJ] Stereographic projection error
In-Reply-To: <1057241684.2454.12.camel@localhost>
Message-ID: <EKEJIKAILPONGGENMBGAAENHDOAA.nhv@cape.com>

Gerald I. Evenden writes:
> 
> An email of yesterday, that I lost and can't refer to,

The message is archived here 
http://www.remotesensing.org/lists/proj_archive/msg04258.html

Norman
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Thu Jul  3 17:26:46 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 03 Jul 2003 20:26:46 -0400
Subject: [OSRS-PROJ] Confusing case of the Stereographic
Message-ID: <1057278406.2291.96.camel@localhost>

Mr. Weidauer was kind enough to send a copy of his earlier email
to OSRS-PROJ directly to me and I responded directly back to him
with additional notes on the projection problem.  My earlier
comments to OSRS-PROJ about the elliptical/equitorial Stereographic
projection error are correct.  However, I will include my
more detailed response to Weidauer here:

---------------------------------------------------------------------

Thanks for the bug report.  More notes below.

On Thu, 2003-07-03 at 12:32, Alexander Weidauer wrote:
> Hi Gerald Evenden,
> 
> Here the lost message again
> 
> I testing with GIS datas from ESRI default sets around
> and use the delivered world30 grid from a shapefile
> in certain projections for a demo program.
> 
> I know that the usage of some coordinates are stupid setted
> in response to certain projections but he bevahior of proj is
> really strange if I use the stereogrphic one .
> 
> I use fllowing sets of data:
> [~ !] proj +proj=stere +ellps=WGS84
This is equitorial mode where lat_0=0 and lon_0=0 (default values)
Apode is at 180,0 and is focus of projection.
> -180 90
> 0.00    25512548.00
above should read
0.00    12756274.00
> -180 -90
> 0.00    -25512548.00
same as above but /2.0
> -180 -180
> *       *
> -180 180
> *       *
> -180 360
> *       *
> -180   0     <---- but here the program crashes
It shouldn't but should read * * but since other the basics were
screwed up ... .
> The program crashes with division by zero only if I use zero but wit
360 
> is all ok. This happens also also in the DLL version. Any suggetions ?
> 
> Regards Alexander Weidauer

If you want to make a personal fix, go into file PJ_stere.c and look
for a line after the first "switch" statement in routine "e_forward"
then go to "case EQUIT."  The next line starts out as:

        A = 2. * P->akm1 / ...

change it to read:

        A = P->akm1 / ...

that is, remove the "2. *" part.

Sorry about this.  It seems that Snyder did not include a computational
check for the equitorial case and I followed suit.

Another good check is to compute the case for:

1' 0
1855.32 -0.00
0 1'
0.00    1842.90

where the 1' should come close to a nautical mile.

There was no correction for the inverse which would have also
been a check (feeding the forward values into the inverse).
Also -V is a good check as the projection should be shown to be
conformal.  But in this case the error version was
still conformal as the output was merely scaled (by 2) and
-V would have been no help.

Thanks again.

-------------------------------------------------------------------

-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Mon Jul  7 10:40:59 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 07 Jul 2003 13:40:59 -0400
Subject: [OSRS-PROJ] Update of libproj4 library
Message-ID: <1057599659.2420.5.camel@localhost>

A little late on my promise as I was having problems with my
mouse that ended up with it being buried in my backyard and
an new optical, cordless model installed.

Corrected version of libproj4 has been installed on:

http://members.bellatlantic.net/~vze2hc4d/proj4/

Main point is corrected version of projection stere.

Also note that this release has replaced rtodms with
pj_rtodms for naming conventions.

-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From alex.weidauer at huckfinn.de  Mon Jul  7 12:55:26 2003
From: alex.weidauer at huckfinn.de (Alexander Weidauer)
Date: Mon, 07 Jul 2003 21:55:26 +0200
Subject: [OSRS-PROJ] Confusing case of the Stereographic
References: <1057278406.2291.96.camel@localhost>
Message-ID: <3F09D02E.6000905@huckfinn.de>

Thank you

Gerald for that fast help.

Bye Alexander Weidauer

Gerald I. Evenden schrieb:
> Mr. Weidauer was kind enough to send a copy of his earlier email
> to OSRS-PROJ directly to me and I responded directly back to him
> with additional notes on the projection problem.  My earlier
> comments to OSRS-PROJ about the elliptical/equitorial Stereographic
> projection error are correct.  However, I will include my
> more detailed response to Weidauer here:
> 
> ---------------------------------------------------------------------
> 
> Thanks for the bug report.  More notes below.
> 
> On Thu, 2003-07-03 at 12:32, Alexander Weidauer wrote:
> 
>>Hi Gerald Evenden,
>>
>>Here the lost message again
>>
>>I testing with GIS datas from ESRI default sets around
>>and use the delivered world30 grid from a shapefile
>>in certain projections for a demo program.
>>
>>I know that the usage of some coordinates are stupid setted
>>in response to certain projections but he bevahior of proj is
>>really strange if I use the stereogrphic one .
>>
>>I use fllowing sets of data:
>>[~ !] proj +proj=stere +ellps=WGS84
> 
> This is equitorial mode where lat_0=0 and lon_0=0 (default values)
> Apode is at 180,0 and is focus of projection.
> 
>>-180 90
>>0.00    25512548.00
> 
> above should read
> 0.00    12756274.00
> 
>>-180 -90
>>0.00    -25512548.00
> 
> same as above but /2.0
> 
>>-180 -180
>>*       *
>>-180 180
>>*       *
>>-180 360
>>*       *
>>-180   0     <---- but here the program crashes
> 
> It shouldn't but should read * * but since other the basics were
> screwed up ... .
> 
>>The program crashes with division by zero only if I use zero but wit
> 
> 360 
> 
>>is all ok. This happens also also in the DLL version. Any suggetions ?
>>
>>Regards Alexander Weidauer
> 
> 
> If you want to make a personal fix, go into file PJ_stere.c and look
> for a line after the first "switch" statement in routine "e_forward"
> then go to "case EQUIT."  The next line starts out as:
> 
>         A = 2. * P->akm1 / ...
> 
> change it to read:
> 
>         A = P->akm1 / ...
> 
> that is, remove the "2. *" part.
> 
> Sorry about this.  It seems that Snyder did not include a computational
> check for the equitorial case and I followed suit.
> 
> Another good check is to compute the case for:
> 
> 1' 0
> 1855.32 -0.00
> 0 1'
> 0.00    1842.90
> 
> where the 1' should come close to a nautical mile.
> 
> There was no correction for the inverse which would have also
> been a check (feeding the forward values into the inverse).
> Also -V is a good check as the projection should be shown to be
> conformal.  But in this case the error version was
> still conformal as the output was merely scaled (by 2) and
> -V would have been no help.
> 
> Thanks again.
> 
> -------------------------------------------------------------------
> 


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From proj at ton.iguana.be  Tue Jul  8 08:23:22 2003
From: proj at ton.iguana.be (proj at ton.iguana.be)
Date: Tue, 8 Jul 2003 17:23:22 +0200
Subject: [OSRS-PROJ] Weirdnesses in the source code
Message-ID: <20030708172322.A21853@quasar.home.lunix>

Hi,

I'm busy transforming some of the proj code to perl, and ran into a
number of strange things.

PJ_aeqd.c
  in PROJ_HEAD, lat_0 should be lat_0=

PJ_aitoff.c
  in PROJ_HEAD, lat_1 should be lat_1=

In PJ_imw_p.c, the function loc_for
  has a parameter double *yc that never gets actually set
  (the else branch in the code has it's own local yc)
  It is however used in e_inverse, so that basically picks up random
  garbage from memory (whatever the local yc there gets as value)

PJ_lcca.c use errors 50 and 51, which don't exist. They are positive, 
so maybe they are meant to pick up plain errno values, but in that case
i don't know which ones you mean and it's not portable

PJ_ocea.c, PROJ_HEAD basically declares Sphlonc (forgotten newline)

PJ_cea.c

	if (pj_param(P->params, "tlat_ts").i &&
		(P->k0 = cos(t = pj_param(P->params, "rlat_ts").f)) < 0.) E_ERROR(-24)
	else
		t = 0.;

  P->k0 doesn't get set if pj_param(P->params, "tlat_ts").i isn't done.
  It's however used.
  For t=0 the corresponding k0 is 1, which is the default (except when
  it gets explicitely set), so maybe it's what you want. But it at least 
  deserves a comment in that case I'd say

  PS, k0 seems nowhere explained in the docs. Shouldn't it be ?

PJ_stere.c:

	P->phits = pj_param(P->params, "tlat_ts").i ?
		P->phits = pj_param(P->params, "rlat_ts").f : HALFPI;

  Not exactly a bug, but the double assign to P->hits is weird. Probably 
  meant to be:
	P->phits = pj_param(P->params, "tlat_ts").i ?
		pj_param(P->params, "rlat_ts").f : HALFPI;

PJ_vandg2.c:
  projection vandg2 itself only supports spherical, but forgets to set 
  P->es to 0 (Yeah, i know it's not used in s_forward itself)
  
PJ_mpoly.c:
  always returns (0,0), so it doesn't do anything.
  It's still linked into the final proj though.

pj_enfn and pj_authset are handled inconsistently. Sometimes the 
returncode gets checked, other times it's just assumed it will work.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From judd at seas.marine.usf.edu  Tue Jul  8 08:59:20 2003
From: judd at seas.marine.usf.edu (Judd Taylor)
Date: Tue, 8 Jul 2003 11:59:20 -0400
Subject: [OSRS-PROJ] Weirdnesses in the source code
References: <20030708172322.A21853@quasar.home.lunix>
Message-ID: <033901c34569$e4779270$cb88f783@marine.usf.edu>

Perl, eh?

I've got a pretty stable version that uses PDL::PP I've been meaning to
release out to CPAN. It works reall well and is real fast... I just need to
add a function to query the actual values that Proj is using (after
defaults, files, etc have been applied to the command line options) so I can
put in out output product metadata, but the guts are all there.

got PDL?

Running it through PDL::PP is many many many many times faster than using
any perl-level interfaces (PDL::PP generates PerlXS interfaces to the c
libraries), so if you don't have PDL, you probably should.

Here's a perl usage example (from my test script):

use strict;
use PDL;
use PDL::Transforms::Cartography::Proj4;

print "Testing forward transformation...\n";
my $proj = "+proj=merc +ellps=WGS72 +lon_0=80.25w +lat_0=30n";
print "Perl level params: \'$proj\'\n";

my $lon = double [-90.0, -95.0, -86.0];
my $lat = double [  0.0,  33.0,  77.0];

my ($x, $y) = fwd_transform($lon, $lat, $proj);
print "Inputs:\n\t\$lon = $lon\n\t\$lat = $lat\n";
print "Result:\n\t\$x = $x\n\t\$y = $y\n";

Let me know if you're interested and I'll tar it up and get it off to you--
hopefully it will save you some time.

______________________________
Judd Taylor
Systems Engineer
Institute for Marine Remote Sensing
University of South Florida
140 7th Ave. South
St Petersburg, FL 33701
(727) 553-1186
(727) 553-1103 (fax)
judd at marine.usf.edu


----- Original Message -----
From: <proj at ton.iguana.be>
To: <osrs-proj at remotesensing.org>
Sent: Tuesday, July 08, 2003 11:23 AM
Subject: [OSRS-PROJ] Weirdnesses in the source code


> Hi,
>
> I'm busy transforming some of the proj code to perl, and ran into a
> number of strange things.
>
> PJ_aeqd.c
>   in PROJ_HEAD, lat_0 should be lat_0=
>
> PJ_aitoff.c
>   in PROJ_HEAD, lat_1 should be lat_1=
>
> In PJ_imw_p.c, the function loc_for
>   has a parameter double *yc that never gets actually set
>   (the else branch in the code has it's own local yc)
>   It is however used in e_inverse, so that basically picks up random
>   garbage from memory (whatever the local yc there gets as value)
>
> PJ_lcca.c use errors 50 and 51, which don't exist. They are positive,
> so maybe they are meant to pick up plain errno values, but in that case
> i don't know which ones you mean and it's not portable
>
> PJ_ocea.c, PROJ_HEAD basically declares Sphlonc (forgotten newline)
>
> PJ_cea.c
>
> if (pj_param(P->params, "tlat_ts").i &&
> (P->k0 = cos(t = pj_param(P->params, "rlat_ts").f)) < 0.) E_ERROR(-24)
> else
> t = 0.;
>
>   P->k0 doesn't get set if pj_param(P->params, "tlat_ts").i isn't done.
>   It's however used.
>   For t=0 the corresponding k0 is 1, which is the default (except when
>   it gets explicitely set), so maybe it's what you want. But it at least
>   deserves a comment in that case I'd say
>
>   PS, k0 seems nowhere explained in the docs. Shouldn't it be ?
>
> PJ_stere.c:
>
> P->phits = pj_param(P->params, "tlat_ts").i ?
> P->phits = pj_param(P->params, "rlat_ts").f : HALFPI;
>
>   Not exactly a bug, but the double assign to P->hits is weird. Probably
>   meant to be:
> P->phits = pj_param(P->params, "tlat_ts").i ?
> pj_param(P->params, "rlat_ts").f : HALFPI;
>
> PJ_vandg2.c:
>   projection vandg2 itself only supports spherical, but forgets to set
>   P->es to 0 (Yeah, i know it's not used in s_forward itself)
>
> PJ_mpoly.c:
>   always returns (0,0), so it doesn't do anything.
>   It's still linked into the final proj though.
>
> pj_enfn and pj_authset are handled inconsistently. Sometimes the
> returncode gets checked, other times it's just assumed it will work.
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Willy.Hersman at conocophillips.com  Tue Jul  8 09:24:56 2003
From: Willy.Hersman at conocophillips.com (William Hersman)
Date: Tue, 8 Jul 2003 08:24:56 -0800
Subject: [OSRS-PROJ] Weirdnesses in the source code
Message-ID: <OF4DF7742C.DF7A89DB-ON89256D5D.0059DAE6@ppco.com>


A Perl module for Proj4 would be very useful.  If you ever release it, let
me know.

====================================
Willy Hersman
Technical Information Services
ConocoPhillips Alaska, Inc.
Email: willy.hersman at conocophillips.com




                                                                                                          
                    "Judd Taylor" <judd at seas.marine.usf.edu>                                              
                    Sent by: owner-osrs-proj at remotesensing.org                                            
                                                                                                          
                                                                                                          
                    07/08/2003 07:59 AM                                                                   
                    Any replies will be addressed to: osrs-proj                                           
                                                                                                          
                     To:   <osrs-proj at remotesensing.org>                                                  
                     cc:                                                                                  
                     Subject:    Re: [OSRS-PROJ] Weirdnesses in the source code                           
                                                                                                          




Perl, eh?

I've got a pretty stable version that uses PDL::PP I've been meaning to
release out to CPAN. It works reall well and is real fast... I just need to
add a function to query the actual values that Proj is using (after
defaults, files, etc have been applied to the command line options) so I
can
put in out output product metadata, but the guts are all there.

got PDL?

Running it through PDL::PP is many many many many times faster than using
any perl-level interfaces (PDL::PP generates PerlXS interfaces to the c
libraries), so if you don't have PDL, you probably should.

Here's a perl usage example (from my test script):

use strict;
use PDL;
use PDL::Transforms::Cartography::Proj4;

print "Testing forward transformation...\n";
my $proj = "+proj=merc +ellps=WGS72 +lon_0=80.25w +lat_0=30n";
print "Perl level params: \'$proj\'\n";

my $lon = double [-90.0, -95.0, -86.0];
my $lat = double [  0.0,  33.0,  77.0];

my ($x, $y) = fwd_transform($lon, $lat, $proj);
print "Inputs:\n\t\$lon = $lon\n\t\$lat = $lat\n";
print "Result:\n\t\$x = $x\n\t\$y = $y\n";

Let me know if you're interested and I'll tar it up and get it off to you--
hopefully it will save you some time.

______________________________
Judd Taylor
Systems Engineer
Institute for Marine Remote Sensing
University of South Florida
140 7th Ave. South
St Petersburg, FL 33701
(727) 553-1186
(727) 553-1103 (fax)
judd at marine.usf.edu


----- Original Message -----
From: <proj at ton.iguana.be>
To: <osrs-proj at remotesensing.org>
Sent: Tuesday, July 08, 2003 11:23 AM
Subject: [OSRS-PROJ] Weirdnesses in the source code


> Hi,
>
> I'm busy transforming some of the proj code to perl, and ran into a
> number of strange things.
>
> PJ_aeqd.c
>   in PROJ_HEAD, lat_0 should be lat_0=
>
> PJ_aitoff.c
>   in PROJ_HEAD, lat_1 should be lat_1=
>
> In PJ_imw_p.c, the function loc_for
>   has a parameter double *yc that never gets actually set
>   (the else branch in the code has it's own local yc)
>   It is however used in e_inverse, so that basically picks up random
>   garbage from memory (whatever the local yc there gets as value)
>
> PJ_lcca.c use errors 50 and 51, which don't exist. They are positive,
> so maybe they are meant to pick up plain errno values, but in that case
> i don't know which ones you mean and it's not portable
>
> PJ_ocea.c, PROJ_HEAD basically declares Sphlonc (forgotten newline)
>
> PJ_cea.c
>
> if (pj_param(P->params, "tlat_ts").i &&
> (P->k0 = cos(t = pj_param(P->params, "rlat_ts").f)) < 0.) E_ERROR(-24)
> else
> t = 0.;
>
>   P->k0 doesn't get set if pj_param(P->params, "tlat_ts").i isn't done.
>   It's however used.
>   For t=0 the corresponding k0 is 1, which is the default (except when
>   it gets explicitely set), so maybe it's what you want. But it at least
>   deserves a comment in that case I'd say
>
>   PS, k0 seems nowhere explained in the docs. Shouldn't it be ?
>
> PJ_stere.c:
>
> P->phits = pj_param(P->params, "tlat_ts").i ?
> P->phits = pj_param(P->params, "rlat_ts").f : HALFPI;
>
>   Not exactly a bug, but the double assign to P->hits is weird. Probably
>   meant to be:
> P->phits = pj_param(P->params, "tlat_ts").i ?
> pj_param(P->params, "rlat_ts").f : HALFPI;
>
> PJ_vandg2.c:
>   projection vandg2 itself only supports spherical, but forgets to set
>   P->es to 0 (Yeah, i know it's not used in s_forward itself)
>
> PJ_mpoly.c:
>   always returns (0,0), so it doesn't do anything.
>   It's still linked into the final proj though.
>
> pj_enfn and pj_authset are handled inconsistently. Sometimes the
> returncode gets checked, other times it's just assumed it will work.
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.




----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From proj at ton.iguana.be  Tue Jul  8 10:06:20 2003
From: proj at ton.iguana.be (Ton Hospel)
Date: Tue, 8 Jul 2003 17:06:20 +0000 (UTC)
Subject: [OSRS-PROJ] Weirdnesses in the source code
References: <20030708172322.A21853@quasar.home.lunix>
    <033901c34569$e4779270$cb88_783@marine.us_.edu>
Message-ID: <beetmc$nve$1@post.home.lunix>

In article <033901c34569$e4779270$cb88_783 at marine.us_.edu>,
	"Judd Taylor" <judd at seas.marine.usf.edu> writes:
> Perl, eh?
>
> I've got a pretty stable version that uses PDL::PP I've been meaning to
> release out to CPAN. It works reall well and is real fast... I just need to
> add a function to query the actual values that Proj is using (after
> defaults, files, etc have been applied to the command line options) so I can
> put in out output product metadata, but the guts are all there.
>
> got PDL?
>
Nope, but I just read up on it :-) Both it and your work sound interesting.

But what I'm working on is not a straightforward interface into the 
library, since the resulting module would very closely match the
C library semantics and not be very perlish.

I want to get a very OO perl-style result, but mainly auto-generated
from the proj code (so I can e.g. easily pick up any new stuff when
it gets released). Basically I've written a parser/code generator that
parses the PJ_*.c files and then spits out equivalent pure perl (for
the people who can't compile) and XS code (for speed).

And of course such an automated approach really needs to understand
the code, which is how I found all these issues.

Currently I'm concentrating on the pure perl output (actually i just
succesfully autogenerated 114 perl modules). I'm now autogenerating
test values and will fix the generator as appropiate (I expect a lot
of flaws at this point).

see http://ton.perlgolf.org/proj/ if you are curious about the current
results.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Tue Jul  8 10:15:05 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 08 Jul 2003 13:15:05 -0400
Subject: [OSRS-PROJ] Weirdnesses in the source code
In-Reply-To: <20030708172322.A21853@quasar.home.lunix>
References: <20030708172322.A21853@quasar.home.lunix>
Message-ID: <1057684505.3180.38.camel@localhost>

Thank-you for all the bug reports.  Imbedded are some comments prior
to looking in to them in detail:

On Tue, 2003-07-08 at 11:23, proj at ton.iguana.be wrote:
> Hi,
> 
> I'm busy transforming some of the proj code to perl, and ran into a
> number of strange things.

On the HEAD stuff, the second quote set is informational and does
not affect execution, but they will be fixed.

> PJ_aeqd.c
>   in PROJ_HEAD, lat_0 should be lat_0=
> 
> PJ_aitoff.c
>   in PROJ_HEAD, lat_1 should be lat_1=

Interesting.  Will look into it.
 
> In PJ_imw_p.c, the function loc_for
>   has a parameter double *yc that never gets actually set
>   (the else branch in the code has it's own local yc)
>   It is however used in e_inverse, so that basically picks up random
>   garbage from memory (whatever the local yc there gets as value)

Ah yes, I was buzz-sawing my way through this one and got a little
sloppy when it finally ran.  Will fix.  Does not affect functionality.

> PJ_lcca.c use errors 50 and 51, which don't exist. They are positive, 
> so maybe they are meant to pick up plain errno values, but in that case
> i don't know which ones you mean and it's not portable

ibid

> PJ_ocea.c, PROJ_HEAD basically declares Sphlonc (forgotten newline)

The following is apparently old code and does not match libproj4.
No longer supported.

> PJ_cea.c
> 
> 	if (pj_param(P->params, "tlat_ts").i &&
> 		(P->k0 = cos(t = pj_param(P->params, "rlat_ts").f)) < 0.) E_ERROR(-24)
> 	else
> 		t = 0.;
> 
>   P->k0 doesn't get set if pj_param(P->params, "tlat_ts").i isn't done.
>   It's however used.
>   For t=0 the corresponding k0 is 1, which is the default (except when
>   it gets explicitely set), so maybe it's what you want. But it at least 
>   deserves a comment in that case I'd say
> 
>   PS, k0 seems nowhere explained in the docs. Shouldn't it be ?

Yes, yes, foolish code.  Dumb, dumb!  A thousand lashes.

> PJ_stere.c:
> 
> 	P->phits = pj_param(P->params, "tlat_ts").i ?
> 		P->phits = pj_param(P->params, "rlat_ts").f : HALFPI;
> 
>   Not exactly a bug, but the double assign to P->hits is weird. Probably 
>   meant to be:
> 	P->phits = pj_param(P->params, "tlat_ts").i ?
> 		pj_param(P->params, "rlat_ts").f : HALFPI;

Some people are *very* picky.  ;-)  Will fix.

> PJ_vandg2.c:
>   projection vandg2 itself only supports spherical, but forgets to set 
>   P->es to 0 (Yeah, i know it's not used in s_forward itself)

Sorry, I was working on this many years ago.  Got up to the point of
putting the base material in but later got side tracked.  I will remove
it.  Interesting generalization of the polyconic but quite complicated.

> PJ_mpoly.c:
>   always returns (0,0), so it doesn't do anything.
>   It's still linked into the final proj though.

pj_enfn no longer exists.  pj_authset no longer exists.  Check
liproj4 distribution.

> pj_enfn and pj_authset are handled inconsistently. Sometimes the 
> returncode gets checked, other times it's just assumed it will work.
> ---------------------------------------

Again, many thanks for the bug reports.  I really do appreciate them.

-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From proj at ton.iguana.be  Tue Jul  8 11:00:47 2003
From: proj at ton.iguana.be (Ton Hospel)
Date: Tue, 8 Jul 2003 18:00:47 +0000 (UTC)
Subject: [OSRS-PROJ] Re: Weirdnesses in the source code
References: <20030708172322.A21853@quasar.home.lunix>
    <1057684505.3180.38.camel@localhost>
Message-ID: <bef0sf$p3f$1@post.home.lunix>

In article <1057684505.3180.38.camel at localhost>,
	"Gerald I. Evenden" <gerald.evenden at verizon.net> writes:
> The following is apparently old code and does not match libproj4.
> No longer supported.
> 
>> PJ_cea.c
>> 
>> 	if (pj_param(P->params, "tlat_ts").i &&
>> 		(P->k0 = cos(t = pj_param(P->params, "rlat_ts").f)) < 0.) E_ERROR(-24)
>> 	else
>> 		t = 0.;
>> 
>>   P->k0 doesn't get set if pj_param(P->params, "tlat_ts").i isn't done.
>>   It's however used.
>>   For t=0 the corresponding k0 is 1, which is the default (except when
>>   it gets explicitely set), so maybe it's what you want. But it at least 
>>   deserves a comment in that case I'd say
>> 
>>   PS, k0 seems nowhere explained in the docs. Shouldn't it be ?

mm, this is from ftp://ftp.remotesensing.org/pub/proj/proj-4.4.7.tar.gz
Is there anything more recent I should be looking at instead ?

> pj_enfn no longer exists.  pj_authset no longer exists.  Check
> liproj4 distribution.

I definitely must be looking at something old, since e.g. pj_authset
is used in PJ_cea.c and PJ_laea.c. Where do i find the newer 
libproj4 ? I don't see a reference to it on 
http://remotesensing.org/proj/

Or should I be looking in the CVS ?
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Tue Jul  8 11:24:15 2003
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 08 Jul 2003 14:24:15 -0400
Subject: [OSRS-PROJ] Re: Weirdnesses in the source code
In-Reply-To: <bef0sf$p3f$1@post.home.lunix>
References: <20030708172322.A21853@quasar.home.lunix>    <1057684505.3180.38.camel@localhost> <bef0sf$p3f$1@post.home.lunix>
Message-ID: <3F0B0C4F.701@pobox.com>

Ton Hospel wrote:
> mm, this is from ftp://ftp.remotesensing.org/pub/proj/proj-4.4.7.tar.gz
> Is there anything more recent I should be looking at instead ?

Ton,

proj-4.4.7 is current for the remotesensing.org releases.  Gerald
is talking about libproj4, his next generation of PROJ.4 where he
focuses on just the projection support.  At some point in the not
to distant future it is my intention to rebuild my version of PROJ.4
to use his libproj4 for projections, and add the various other
services (datum shifting, dictionary lookup, etc) on top of it.  So
as long as Gerald fixes the issues in his version they will eventually
flow into what is released through remotesensing.org.

Geralds libproj4 web site is at:
   http://members.bellatlantic.net/~vze2hc4d/proj4/

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From judd at seas.marine.usf.edu  Tue Jul  8 11:36:38 2003
From: judd at seas.marine.usf.edu (Judd Taylor)
Date: Tue, 8 Jul 2003 14:36:38 -0400
Subject: [OSRS-PROJ] Weirdnesses in the source code
Message-ID: <035a01c3457f$de1a3b10$cb88f783@marine.usf.edu>

See Below...

"Ton Hospel" <proj at ton.iguana.be> wrote in message
news:beetmc$nve$1 at post.home.lunix...
> In article <033901c34569$e4779270$cb88_783 at marine.us_.edu>,
> "Judd Taylor" <judd at seas.marine.usf.edu> writes:
> > Perl, eh?
> >
> > I've got a pretty stable version that uses PDL::PP I've been meaning to
> > release out to CPAN. It works reall well and is real fast... I just need
to
> > add a function to query the actual values that Proj is using (after
> > defaults, files, etc have been applied to the command line options) so I
can
> > put in out output product metadata, but the guts are all there.
> >
> > got PDL?
> >
> Nope, but I just read up on it :-) Both it and your work sound
interesting.
>
> But what I'm working on is not a straightforward interface into the
> library, since the resulting module would very closely match the
> C library semantics and not be very perlish.
>
> I want to get a very OO perl-style result, but mainly auto-generated
> from the proj code (so I can e.g. easily pick up any new stuff when
> it gets released). Basically I've written a parser/code generator that
> parses the PJ_*.c files and then spits out equivalent pure perl (for
> the people who can't compile) and XS code (for speed).
>
> And of course such an automated approach really needs to understand
> the code, which is how I found all these issues.
>

It is possible to do this type of thing in PDL::PP, where you write the OO
type code in a 'pp_addpm()' statement (code coes to the .pm file) and just
have the methods compiled (through PDL::PP) to call the standard C interface
for proj. I've done that sort of thing before, but I didn't have time to
make my PDL interface OO'd. It only took me about 2 days to write the
interface, which is only about 700 lines of PDL::PP. PDL::PP takes care of
annoying things like data types, memory management, array dimensions, etc...
that make writing code in c/c++ fun :)

The good thing about using the standard c interface for Proj4 is that you
don't have to know about the code, and you can reuse the shared object
library as-is without having to recompile all of it in PerlXS form (you only
need to compile the interface functions). You also don't have to
re-figure-everything-out every time you upgrade the Proj library (as long as
the exported c interface doesn't change, which it did last release...)

> Currently I'm concentrating on the pure perl output (actually i just
> succesfully autogenerated 114 perl modules). I'm now autogenerating
> test values and will fix the generator as appropiate (I expect a lot
> of flaws at this point).
>

I think you can just copy over a precompiled library and use it for users
that can't compile a PerlXS module directly... but I've never done it
before. Perlcode was not an option for me since I'm running it on huge
arrays data (some as large as 4040x5416), and speed in our application is
critical. It's being used to create mapped satellite data products from the
MODIS instrument as part of our NASA EOS DB project here at USF
(http://modis.marine.usf.edu/qc/, for some examples of output).

I'd be very interested in any test data you have (it's high on my interface
TODO list), although the way the interface is written I highly doubt there
would be any differences.

> see http://ton.perlgolf.org/proj/ if you are curious about the current
> results.

I've tarred up my interface and put it up here:
http://modis.marine.usf.edu/Proj4-1.20.tar.gz

Keep in mind anyone who downloads this that my posting this code does not
constitute a GPL release, and its use is permitted for evaluation ONLY. Any
other uses are prohibited (including redistribution). If you are interested
in using my interface in production/commercial software, just wait a little
while so I can release it GPL style (it will only take me a couple of days
to finish it when I can get back to it). Just let me know you want to use
it, and I'll see how fast I can get it done. See the README file included in
the tarball for other copyright information.

-Judd

______________________________
Judd Taylor
Manager of Information Systems
Institute for Marine Remote Sensing
University of South Florida
140 7th Ave. South
St Petersburg, FL 33701
(727) 553-1186
(727) 553-1103 (fax)
judd at marine.usf.edu

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From brapaport at sti-hawaii.com  Wed Jul  9 18:29:40 2003
From: brapaport at sti-hawaii.com (Bruce Rapaport)
Date: Wed, 9 Jul 2003 15:29:40 -1000
Subject: [OSRS-PROJ] Need to do NAD83 to NAD27 datum shift
Message-ID: <EE161571BBBAA146B454D4647DC1F4E701AC7FE3@xchange.sti-hawaii.com>

Hi,
 
I am completely new to the world of proj4. I am trying to use pj_init
and
pj_datum_transform to shift the coordinates 30.274672, -97.740330 from
NAD83 to NAD27. Please help.
 
Thanks,
 
Bruce Rapaport
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20030709/c6ba383a/attachment.html>

From dsmingus at yahoo.com  Mon Jul 14 09:52:37 2003
From: dsmingus at yahoo.com (Sharon Mingus)
Date: Mon, 14 Jul 2003 09:52:37 -0700 (PDT)
Subject: [OSRS-PROJ] lib call results differ from exec results
Message-ID: <20030714165237.61479.qmail@web14611.mail.yahoo.com>


I'm using the latest cvs libproj for transformations
of coords and am having a problem.  I wrote this test
program:

#include <proj_api.h>
#include <stdio.h>

int main( int argc, char** argv )
{
        char *parms[] = {
                "proj=aea",
                "ellps=clrk66"
        };

        projPJ pj = pj_init( 2, parms );
        if( !pj )
        {
                printf( "COULD NOT INIT\n" );
                return -1;
        }

        projXY xy;
        xy.u = atof( argv[1] ) * DEG_TO_RAD;
        xy.v = atof( argv[2] ) * DEG_TO_RAD;

        printf( "FWD " );
        xy = pj_fwd( xy, pj );

        printf( "%10.4f, %10.4f\n\n", xy.u, xy.v );
        return 1;
}

Then I do this:

$ ./proj_test -110.969 39.7621
FWD -7422073.9419, 9122801.8182

$ echo "-110.969,39.7621" | proj +proj=aea
+ellps=clrk66
-11303100.31    7467691.88,39.7621

very different resulting coordinates.  Why is this?

then I do this:

$ echo "-11303100.31    7467691.88" | ./invproj
+proj=aea +ellps=clrk66
110d58'8.4"W    0dN

Shouldn't it result with original lon/lat input?

Also, this mailing list has a search link that doesn't
work.  Is there a way to search this archive?

Thanks

__________________________________
Do you Yahoo!?
SBC Yahoo! DSL - Now only $29.95 per month!
http://sbc.yahoo.com
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Mon Jul 14 10:30:16 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 14 Jul 2003 13:30:16 -0400
Subject: [OSRS-PROJ] Weirdnesses in the source code
In-Reply-To: <1057684505.3180.38.camel@localhost>
References: <20030708172322.A21853@quasar.home.lunix>
	 <1057684505.3180.38.camel@localhost>
Message-ID: <1058203816.2418.11.camel@localhost>

The items of this previous bug list have been corrected in release
030714 at site:

http://members.bellatlantic.net/~vze2hc4d/proj4/

Again, thanks for the reports.  Keep the cards and letters coming.

On Tue, 2003-07-08 at 13:15, Gerald I. Evenden wrote:
> Thank-you for all the bug reports.  Imbedded are some comments prior
> to looking in to them in detail:
> 
> On Tue, 2003-07-08 at 11:23, proj at ton.iguana.be wrote:
> > Hi,
> > 
> > I'm busy transforming some of the proj code to perl, and ran into a
> > number of strange things.
> 
> On the HEAD stuff, the second quote set is informational and does
> not affect execution, but they will be fixed.
> 
> > PJ_aeqd.c
> >   in PROJ_HEAD, lat_0 should be lat_0=
> > 
> > PJ_aitoff.c
> >   in PROJ_HEAD, lat_1 should be lat_1=
> 
> Interesting.  Will look into it.
>  
> > In PJ_imw_p.c, the function loc_for
> >   has a parameter double *yc that never gets actually set
> >   (the else branch in the code has it's own local yc)
> >   It is however used in e_inverse, so that basically picks up random
> >   garbage from memory (whatever the local yc there gets as value)
> 
> Ah yes, I was buzz-sawing my way through this one and got a little
> sloppy when it finally ran.  Will fix.  Does not affect functionality.
> 
> > PJ_lcca.c use errors 50 and 51, which don't exist. They are positive, 
> > so maybe they are meant to pick up plain errno values, but in that case
> > i don't know which ones you mean and it's not portable
> 
> ibid
> 
> > PJ_ocea.c, PROJ_HEAD basically declares Sphlonc (forgotten newline)
> 
> The following is apparently old code and does not match libproj4.
> No longer supported.
> 
> > PJ_cea.c
> > 
> > 	if (pj_param(P->params, "tlat_ts").i &&
> > 		(P->k0 = cos(t = pj_param(P->params, "rlat_ts").f)) < 0.) E_ERROR(-24)
> > 	else
> > 		t = 0.;
> > 
> >   P->k0 doesn't get set if pj_param(P->params, "tlat_ts").i isn't done.
> >   It's however used.
> >   For t=0 the corresponding k0 is 1, which is the default (except when
> >   it gets explicitely set), so maybe it's what you want. But it at least 
> >   deserves a comment in that case I'd say
> > 
> >   PS, k0 seems nowhere explained in the docs. Shouldn't it be ?
> 
> Yes, yes, foolish code.  Dumb, dumb!  A thousand lashes.
> 
> > PJ_stere.c:
> > 
> > 	P->phits = pj_param(P->params, "tlat_ts").i ?
> > 		P->phits = pj_param(P->params, "rlat_ts").f : HALFPI;
> > 
> >   Not exactly a bug, but the double assign to P->hits is weird. Probably 
> >   meant to be:
> > 	P->phits = pj_param(P->params, "tlat_ts").i ?
> > 		pj_param(P->params, "rlat_ts").f : HALFPI;
> 
> Some people are *very* picky.  ;-)  Will fix.
> 
> > PJ_vandg2.c:
> >   projection vandg2 itself only supports spherical, but forgets to set 
> >   P->es to 0 (Yeah, i know it's not used in s_forward itself)
> 
> Sorry, I was working on this many years ago.  Got up to the point of
> putting the base material in but later got side tracked.  I will remove
> it.  Interesting generalization of the polyconic but quite complicated.
> 
> > PJ_mpoly.c:
> >   always returns (0,0), so it doesn't do anything.
> >   It's still linked into the final proj though.
> 
> pj_enfn no longer exists.  pj_authset no longer exists.  Check
> liproj4 distribution.
> 
> > pj_enfn and pj_authset are handled inconsistently. Sometimes the 
> > returncode gets checked, other times it's just assumed it will work.
> > ---------------------------------------
> 
> Again, many thanks for the bug reports.  I really do appreciate them.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Mon Jul 14 10:43:35 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 14 Jul 2003 13:43:35 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <20030714165237.61479.qmail@web14611.mail.yahoo.com>
References: <20030714165237.61479.qmail@web14611.mail.yahoo.com>
Message-ID: <1058204615.2418.21.camel@localhost>

First of all, I can't see how you can use Alber's Equal Area
conic without specifying the standard parallels.

./lproj +proj=aea +ellps=clrk66
libproj4 system
<./lproj>:
projection initialization failure
cause: conic lat_1 = -lat_2
program abnormally terminated

Is what I get on my machine.  Of course we are not using the
same basic animal but it would seem to me that the software
used should complain about the usage parameters.  Without
knowing the parallels, no computations were possible!

Out of curiosity, what programming language is used below?

On Mon, 2003-07-14 at 12:52, Sharon Mingus wrote:
> I'm using the latest cvs libproj for transformations
> of coords and am having a problem.  I wrote this test
> program:
> 
> #include <proj_api.h>
> #include <stdio.h>
> 
> int main( int argc, char** argv )
> {
>         char *parms[] = {
>                 "proj=aea",
>                 "ellps=clrk66"
>         };
> 
>         projPJ pj = pj_init( 2, parms );
>         if( !pj )
>         {
>                 printf( "COULD NOT INIT\n" );
>                 return -1;
>         }
> 
>         projXY xy;
>         xy.u = atof( argv[1] ) * DEG_TO_RAD;
>         xy.v = atof( argv[2] ) * DEG_TO_RAD;
> 
>         printf( "FWD " );
>         xy = pj_fwd( xy, pj );
> 
>         printf( "%10.4f, %10.4f\n\n", xy.u, xy.v );
>         return 1;
> }
> 
> Then I do this:
> 
> $ ./proj_test -110.969 39.7621
> FWD -7422073.9419, 9122801.8182
> 
> $ echo "-110.969,39.7621" | proj +proj=aea
> +ellps=clrk66
> -11303100.31    7467691.88,39.7621
> 
> very different resulting coordinates.  Why is this?
> 
> then I do this:
> 
> $ echo "-11303100.31    7467691.88" | ./invproj
> +proj=aea +ellps=clrk66
> 110d58'8.4"W    0dN
> 
> Shouldn't it result with original lon/lat input?
> 
> Also, this mailing list has a search link that doesn't
> work.  Is there a way to search this archive?
> 
> Thanks
> sing.org/proj for subscription, unsubscription
	...
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From dsmingus at yahoo.com  Mon Jul 14 10:57:47 2003
From: dsmingus at yahoo.com (Sharon Mingus)
Date: Mon, 14 Jul 2003 10:57:47 -0700 (PDT)
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <1058204615.2418.21.camel@localhost>
Message-ID: <20030714175747.14981.qmail@web14601.mail.yahoo.com>


--- "Gerald I. Evenden" <gerald.evenden at verizon.net>
wrote:
> First of all, I can't see how you can use Alber's
> Equal Area
> conic without specifying the standard parallels.
> 

Aren't there defaults?  I'm not a projections guru and
pumping coords into proj & pj_fwd without standard
parallels is producing results.  I'm just curious why
they are different.

> ./lproj +proj=aea +ellps=clrk66
What is "lproj"?  I don't have that as a binary.

> libproj4 system
> <./lproj>:
> projection initialization failure
> cause: conic lat_1 = -lat_2
> program abnormally terminated

This is not happening to me.

> 
> Is what I get on my machine.  Of course we are not
> using the
> same basic animal but it would seem to me that the
> software
> used should complain about the usage parameters. 
> Without
> knowing the parallels, no computations were
> possible!
> 
> Out of curiosity, what programming language is used
> below?

language = "C"

> 
> On Mon, 2003-07-14 at 12:52, Sharon Mingus wrote:
> > I'm using the latest cvs libproj for
> transformations
> > of coords and am having a problem.  I wrote this
> test
> > program:
> > 
> > #include <proj_api.h>
> > #include <stdio.h>
> > 
> > int main( int argc, char** argv )
> > {
> >         char *parms[] = {
> >                 "proj=aea",
> >                 "ellps=clrk66"
> >         };
> > 
> >         projPJ pj = pj_init( 2, parms );
> >         if( !pj )
> >         {
> >                 printf( "COULD NOT INIT\n" );
> >                 return -1;
> >         }
> > 
> >         projXY xy;
> >         xy.u = atof( argv[1] ) * DEG_TO_RAD;
> >         xy.v = atof( argv[2] ) * DEG_TO_RAD;
> > 
> >         printf( "FWD " );
> >         xy = pj_fwd( xy, pj );
> > 
> >         printf( "%10.4f, %10.4f\n\n", xy.u, xy.v
> );
> >         return 1;
> > }
> > 
> > Then I do this:
> > 
> > $ ./proj_test -110.969 39.7621
> > FWD -7422073.9419, 9122801.8182
> > 
> > $ echo "-110.969,39.7621" | proj +proj=aea
> > +ellps=clrk66
> > -11303100.31    7467691.88,39.7621
> > 
> > very different resulting coordinates.  Why is
> this?
> > 
> > then I do this:
> > 
> > $ echo "-11303100.31    7467691.88" | ./invproj
> > +proj=aea +ellps=clrk66
> > 110d58'8.4"W    0dN
> > 
> > Shouldn't it result with original lon/lat input?
> > 
> > Also, this mailing list has a search link that
> doesn't
> > work.  Is there a way to search this archive?
> > 
> > Thanks
> > sing.org/proj for subscription, unsubscription
> 	...
> -- 
> Gerald I. Evenden <gerald.evenden at verizon.net>
> 
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for
> subscription, unsubscription
> and other information.


__________________________________
Do you Yahoo!?
SBC Yahoo! DSL - Now only $29.95 per month!
http://sbc.yahoo.com
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Mon Jul 14 13:31:56 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 14 Jul 2003 16:31:56 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <20030714175747.14981.qmail@web14601.mail.yahoo.com>
References: <20030714175747.14981.qmail@web14601.mail.yahoo.com>
Message-ID: <1058214716.2838.48.camel@localhost>

First of all, I do not recall ever specifying standard parallels
for Albers.  Of course I can always be proven wrong by some ancient
distribution.

Program 'lproj' is what I distribute currently with the libproj4
library and is the same as 'proj' except that the approximation
output is omitted and there are no external default and reference
file lookups.  There may have been a "default" parallels in those
files for identifiers relating to conterminous US mapping but
nothing just for a basic projection---it would have been referred
to with a special name and not simply the projection name.
Things in these files were mostly grid reference systems.

The system you are using must be loaded with some odd macros
so as to interpret things like:

projXY xy;    ????

Hmmm, A storage declaration, maybe, but I've never seen one in
the middle of a block but, then again, I can't find a rule that
they can't be.  Verrry interesting.  Never mind.

Try specifying stardard parallels as well as central meridian
in both of your cases and see what turns up.

On Mon, 2003-07-14 at 13:57, Sharon Mingus wrote:
> --- "Gerald I. Evenden" <gerald.evenden at verizon.net>
> wrote:
> > First of all, I can't see how you can use Alber's
> > Equal Area
> > conic without specifying the standard parallels.
> > 
> 
> Aren't there defaults?  I'm not a projections guru and
> pumping coords into proj & pj_fwd without standard
> parallels is producing results.  I'm just curious why
> they are different.
> 
> > ./lproj +proj=aea +ellps=clrk66
> What is "lproj"?  I don't have that as a binary.
> 
> > libproj4 system
> > <./lproj>:
> > projection initialization failure
> > cause: conic lat_1 = -lat_2
> > program abnormally terminated
> 
> This is not happening to me.
> 
> > 
> > Is what I get on my machine.  Of course we are not
> > using the
> > same basic animal but it would seem to me that the
> > software
> > used should complain about the usage parameters. 
> > Without
> > knowing the parallels, no computations were
> > possible!
> > 
> > Out of curiosity, what programming language is used
> > below?
> 
> language = "C"
> 
> > 
> > On Mon, 2003-07-14 at 12:52, Sharon Mingus wrote:
> > > I'm using the latest cvs libproj for
	...
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Mon Jul 14 13:54:58 2003
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 14 Jul 2003 16:54:58 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <1058214716.2838.48.camel@localhost>
References: <20030714175747.14981.qmail@web14601.mail.yahoo.com> <1058214716.2838.48.camel@localhost>
Message-ID: <3F1318A2.3080002@pobox.com>

Gerald I. Evenden wrote:
> First of all, I do not recall ever specifying standard parallels
> for Albers.  Of course I can always be proven wrong by some ancient
> distribution.

Gerald / Sharon,

The PROJ.4 distributed from remotesensing.org installs a proj_def.dat
file containing:

<general>
ellps=WGS84
<>
<aea> # Conterminous U.S. map
lat_1=29.5
lat_2=45.5
<>
<lcc> # Conterminous U.S. map
lat_1=33
lat_2=45
<>
<lagrng>
W=2
<>

So, for the "aea" projection there are defaults lat_1 and lat_2 values.
I don't think I added them myself, so I imagine they come from earlier
versions distributed by Gerald, but I don't know that for a fact.  Anyways,
no longer is there a big mystery where the defaults were coming from.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From karl at kls2.com  Mon Jul 14 13:47:06 2003
From: karl at kls2.com (Karl Swartz)
Date: Mon, 14 Jul 2003 13:47:06 -0700
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <1058214716.2838.48.camel@localhost>
References: <20030714175747.14981.qmail@web14601.mail.yahoo.com> <1058214716.2838.48.camel@localhost>
Message-ID: <20030714204706.GC75205@orion.kls2.com>

> The system you are using must be loaded with some odd macros
> so as to interpret things like:
> 
> projXY xy;    ????
> 
> Hmmm, A storage declaration, maybe, but I've never seen one in
> the middle of a block but, then again, I can't find a rule that
> they can't be.

It's not legal in C, but it is in C++. and a C++ compiler can compile a
C program.

 -- Karl
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From dsmingus at yahoo.com  Mon Jul 14 16:19:11 2003
From: dsmingus at yahoo.com (Sharon Mingus)
Date: Mon, 14 Jul 2003 16:19:11 -0700 (PDT)
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <20030714204706.GC75205@orion.kls2.com>
Message-ID: <20030714231911.95577.qmail@web14602.mail.yahoo.com>


--- Karl Swartz <karl at kls2.com> wrote:
> > The system you are using must be loaded with some
> odd macros
> > so as to interpret things like:
> > 
> > projXY xy;    ????
> > 
> > Hmmm, A storage declaration, maybe, but I've never
> seen one in
> > the middle of a block but, then again, I can't
> find a rule that
> > they can't be.
> 
> It's not legal in C, but it is in C++. and a C++
> compiler can compile a
> C program.
> 
>  -- Karl
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for
> subscription, unsubscription
> and other information.


projXY is the return type of pj_fwd as defined in
proj_api.h:

projXY pj_fwd(projLP, projPJ);

so I'm just sticking with the types provided.  They're
all the same anyway I guess XY, UV, projUV, projXY,
projLP, etc. through defines.  This leads me to
another question: is there any api documentation or
examples?

Still there's the question of the pj_fwd results being
different than the proj exe results.  Now I'm not sure
if these parameters make sense, but I figured since
they're the same, they should result in equal values. 
So the new test is:

echo "-110.969,39.7621" | ./proj +proj=aea
+ellps=clrk66 +lat_1=20.0n +lat_2=60.0n +lon_0=110w
+lat_0=40n
-122731.33      -4386453.20,39.7621  

$ ./proj_test -110.969 39.7621
FWD -7043726.8331, 4640224.1375

where the modified code with new proj parameters is:

       char *parms[] = {
                "proj=aea",
                "ellps=clrk66",
                "lat_1=20.0n",
                "lat_2=60.0n"
                "lon_0=110w",
                "lat_0=40n"
        };

Well, am I doing something wrong?

Thanks

__________________________________
Do you Yahoo!?
SBC Yahoo! DSL - Now only $29.95 per month!
http://sbc.yahoo.com
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From nhv at cape.com  Mon Jul 14 16:49:23 2003
From: nhv at cape.com (Norman Vine)
Date: Mon, 14 Jul 2003 19:49:23 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <20030714231911.95577.qmail@web14602.mail.yahoo.com>
Message-ID: <EKEJIKAILPONGGENMBGAAEKOEAAA.nhv@cape.com>

Sharon Mingus writes:
> 
> --- Karl Swartz <karl at kls2.com> wrote:
> > > The system you are using must be loaded with some odd macros
> > > so as to interpret things like:
> > > 
> > > projXY xy;    ????
> > > 
> > > Hmmm, A storage declaration, maybe, but I've never
> > seen one in
> > > the middle of a block but, then again, I can't
> > find a rule that
> > > they can't be.
> > 
> > It's not legal in C, but it is in C++. and a C++
> > compiler can compile a
> > C program.
> 
> projXY is the return type of pj_fwd as defined in
> proj_api.h:
> 
> projXY pj_fwd(projLP, projPJ);

Part of the problem here is you are working with the version
from remotesensing.org which is slightly modified from the
original Proj, which Gerald wrote and still supports.

see
http://members.bellatlantic.net/~vze2hc4d/proj4/

note the difference below

< original version >
typedef struct { double u, v; }	UV;
typedef struct { double r, i; }	COMPLEX;

#ifdef PROJ_UV_TYPE
#define XY UV
#define LP UV
#else
typedef struct { double x, y; }     XY;
typedef struct { double lam, phi; } LP;
#endif

< remotesensing.org version >
#if !defined(PROJECTS_H)
    typedef struct { double u, v; } projUV;
    typedef void *projPJ;
    #define projXY projUV
    #define projLP projUV
#else
    typedef PJ *projPJ;
#   define projXY	XY
#   define projLP       LP
#endif

HTH

Norman

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Mon Jul 14 17:10:42 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 14 Jul 2003 20:10:42 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <20030714231911.95577.qmail@web14602.mail.yahoo.com>
References: <20030714231911.95577.qmail@web14602.mail.yahoo.com>
Message-ID: <1058227842.3954.23.camel@localhost>

For local execution of the runline:

echo "-110.969 39.7621"|./lproj +proj=aea +ellps=clrk66 +lat_1=20
+lat_2=60 +lon_0=110w +lat_0=40
-78175.38       -27659.27

which is a much more reasonable value for a point fairly close
to the projection origin of -110,40.

One problem is there is a "," (comma) in the input stream.
'lproj' or 'proj' only understand white-space delimiting.

As for the scanning of "default" file I must admit it was there
earlier and was always a curse.  Number one question after someone
installed the system was why it failed---most of the time the
default file could not be found.  Some setup failure.

I got rid of it but it still haunts me.
.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From glynn.clements at virgin.net  Mon Jul 14 16:17:27 2003
From: glynn.clements at virgin.net (Glynn Clements)
Date: Tue, 15 Jul 2003 00:17:27 +0100
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <20030714204706.GC75205@orion.kls2.com>
References: <20030714175747.14981.qmail@web14601.mail.yahoo.com>
	<1058214716.2838.48.camel@localhost>
	<20030714204706.GC75205@orion.kls2.com>
Message-ID: <16147.14855.825377.874830@cerise.nosuchdomain.co.uk>


Karl Swartz wrote:

> > The system you are using must be loaded with some odd macros
> > so as to interpret things like:
> > 
> > projXY xy;    ????
> > 
> > Hmmm, A storage declaration, maybe, but I've never seen one in
> > the middle of a block but, then again, I can't find a rule that
> > they can't be.
> 
> It's not legal in C, but it is in C++. and a C++ compiler can compile a
> C program.

It's also legal in C99 (the new ISO/ANSI C standard, aka C9X).

-- 
Glynn Clements <glynn.clements at virgin.net>
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Mon Jul 14 17:41:53 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 14 Jul 2003 20:41:53 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <1058227842.3954.23.camel@localhost>
References: <20030714231911.95577.qmail@web14602.mail.yahoo.com>
	 <1058227842.3954.23.camel@localhost>
Message-ID: <1058229713.3954.28.camel@localhost>

Just to beat this dead horse some more:

#include <stdio.h>
#include <stdlib.h>
#include "lib_proj.h"
	int
main(int narg, char **argl) {
	PJ *P;
	XY out;
	LP in;
	char *alist[] = {
		"proj=aea",
		"ellps=clrk66",
		"lat_1=20",
		"lat_2=60",
		"lon_0=-110",
		"lat_0=40"};

	if (!(P = pj_init(6, alist))) {
		printf("proj init failed\n");
		exit(1);
	}
	in.lam = atof(argl[1]) * DEG_TO_RAD;
	in.phi = atof(argl[2]) * DEG_TO_RAD;
	out = pj_fwd(in, P);
	printf("%s %s makes %.3f %.3f meters\n",argl[1],
			argl[2], out.x, out.y);
	exit(0);
}

After compiling and executing:

./a.out -110.969 39.7621
-110.969 39.7621 makes -78175.382 -27659.274 meters

Seems to agree pretty well.

On Mon, 2003-07-14 at 20:10, Gerald I. Evenden wrote:
> For local execution of the runline:
> 
> echo "-110.969 39.7621"|./lproj +proj=aea +ellps=clrk66 +lat_1=20
> +lat_2=60 +lon_0=110w +lat_0=40
> -78175.38       -27659.27
> 
> which is a much more reasonable value for a point fairly close
> to the projection origin of -110,40.
> 
> One problem is there is a "," (comma) in the input stream.
> 'lproj' or 'proj' only understand white-space delimiting.
> 
> As for the scanning of "default" file I must admit it was there
> earlier and was always a curse.  Number one question after someone
> installed the system was why it failed---most of the time the
> default file could not be found.  Some setup failure.
> 
> I got rid of it but it still haunts me.
> .
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From dsmingus at yahoo.com  Tue Jul 15 06:43:55 2003
From: dsmingus at yahoo.com (Sharon Mingus)
Date: Tue, 15 Jul 2003 06:43:55 -0700 (PDT)
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <1058229713.3954.28.camel@localhost>
Message-ID: <20030715134355.24806.qmail@web14602.mail.yahoo.com>

Ok, I am catching the drift here.  I was unaware of
the different versions, remotesensing.org & "classic
proj4" .  Also, I missed a comma in the parms
declaration.  Thanks for the help.

char *parms[] = {
    "proj=aea",
    "ellps=clrk66",
    "lat_1=20.0n",
    "lat_2=60.0n" // <-- multi-line literal concat
    "lon_0=110w",
    "lat_0=40n"
};

doh!

--- "Gerald I. Evenden" <gerald.evenden at verizon.net>
wrote:
> Just to beat this dead horse some more:
> 
> #include <stdio.h>
> #include <stdlib.h>
> #include "lib_proj.h"
> 	int
> main(int narg, char **argl) {
> 	PJ *P;
> 	XY out;
> 	LP in;
> 	char *alist[] = {
> 		"proj=aea",
> 		"ellps=clrk66",
> 		"lat_1=20",
> 		"lat_2=60",
> 		"lon_0=-110",
> 		"lat_0=40"};
> 
> 	if (!(P = pj_init(6, alist))) {
> 		printf("proj init failed\n");
> 		exit(1);
> 	}
> 	in.lam = atof(argl[1]) * DEG_TO_RAD;
> 	in.phi = atof(argl[2]) * DEG_TO_RAD;
> 	out = pj_fwd(in, P);
> 	printf("%s %s makes %.3f %.3f meters\n",argl[1],
> 			argl[2], out.x, out.y);
> 	exit(0);
> }
> 
> After compiling and executing:
> 
> ./a.out -110.969 39.7621
> -110.969 39.7621 makes -78175.382 -27659.274 meters
> 
> Seems to agree pretty well.
> 
> On Mon, 2003-07-14 at 20:10, Gerald I. Evenden
> wrote:
> > For local execution of the runline:
> > 
> > echo "-110.969 39.7621"|./lproj +proj=aea
> +ellps=clrk66 +lat_1=20
> > +lat_2=60 +lon_0=110w +lat_0=40
> > -78175.38       -27659.27
> > 
> > which is a much more reasonable value for a point
> fairly close
> > to the projection origin of -110,40.
> > 
> > One problem is there is a "," (comma) in the input
> stream.
> > 'lproj' or 'proj' only understand white-space
> delimiting.
> > 
> > As for the scanning of "default" file I must admit
> it was there
> > earlier and was always a curse.  Number one
> question after someone
> > installed the system was why it failed---most of
> the time the
> > default file could not be found.  Some setup
> failure.
> > 
> > I got rid of it but it still haunts me.
> > .
> -- 
> Gerald I. Evenden <gerald.evenden at verizon.net>
> 
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for
> subscription, unsubscription
> and other information.


__________________________________
Do you Yahoo!?
SBC Yahoo! DSL - Now only $29.95 per month!
http://sbc.yahoo.com
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Tue Jul 15 06:56:11 2003
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 15 Jul 2003 09:56:11 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
In-Reply-To: <20030714231911.95577.qmail@web14602.mail.yahoo.com>
References: <20030714231911.95577.qmail@web14602.mail.yahoo.com>
Message-ID: <3F1407FB.1080506@pobox.com>

Sharon Mingus wrote:
> projXY is the return type of pj_fwd as defined in
> proj_api.h:
> 
> projXY pj_fwd(projLP, projPJ);
> 
> so I'm just sticking with the types provided.  They're
> all the same anyway I guess XY, UV, projUV, projXY,
> projLP, etc. through defines.  This leads me to
> another question: is there any api documentation or
> examples?

Gerald / Sharon,

The projXY, and projUV names were put in place in proj_api.h
because it is dangerous for a package that hopes to be widely
used to define symbols as undistinguished as XY and UV, and
in fact at least one of these conflicted with something
pulled in by windows.h.

> Still there's the question of the pj_fwd results being
> different than the proj exe results.  Now I'm not sure
> if these parameters make sense, but I figured since
> they're the same, they should result in equal values. 
> So the new test is:
> 
> echo "-110.969,39.7621" | ./proj +proj=aea
> +ellps=clrk66 +lat_1=20.0n +lat_2=60.0n +lon_0=110w
> +lat_0=40n
> -122731.33      -4386453.20,39.7621  
> 
> $ ./proj_test -110.969 39.7621
> FWD -7043726.8331, 4640224.1375
> 
> where the modified code with new proj parameters is:
> 
>        char *parms[] = {
>                 "proj=aea",
>                 "ellps=clrk66",
>                 "lat_1=20.0n",
>                 "lat_2=60.0n"
>                 "lon_0=110w",
>                 "lat_0=40n"
>         };

One issue is the comma that Gerald mentioned.  It isn't
an acceptable delimeter for PROJ.4.

warmerda at gdal2200[163]% proj +proj=aea +ellps=clrk66 +lat_1=20.0n +lat_2=60.0n +lon_0=110w +lat_0=40n
-110.969,39.7621
-122731.33      -4386453.20,39.7621
-110.969 39.7621
-78175.38       -27659.27

The second more fundamental reason is that you forgot the comma
after the string "lat_2=60.0n", so that string and the next
are concatenated by the compiler.  PROJ.4 ends up essentially
discarding the lon_0 value giving different results.

I get the following results:

warmerda at gdal2200[106]% ./proj_test -110.969 39.7621
FWD -78175.3815, -27659.2741

with this form of proj_test.c:
#include "proj_api.h"
#include <stdlib.h>
#include <stdio.h>

int main( int argc, char** argv )
{
     char *parms[] = {
         "proj=aea",
         "ellps=clrk66",
         "lat_1=20.0n",
         "lat_2=60.0n",
         "lon_0=110w",
         "lat_0=40n",
         "no_defs",
         NULL
     };

     projPJ pj = pj_init( 7, parms );
     if( !pj )
     {
         printf( "COULD NOT INIT\n" );
         return -1;
     }

     projXY xy;
     xy.u = atof( argv[1] ) * DEG_TO_RAD;
     xy.v = atof( argv[2] ) * DEG_TO_RAD;

     printf( "FWD " );
     xy = pj_fwd( xy, pj );

     printf( "%10.4f, %10.4f\n\n", xy.u, xy.v );

     return 1;
}

There is a pj_init() man page distributed with PROJ.4, but there is no
other API documentation as far as I know.  Well, actually it likely also
appears in one of Geralds reports.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From judd at seas.marine.usf.edu  Tue Jul 15 07:02:06 2003
From: judd at seas.marine.usf.edu (Judd Taylor)
Date: Tue, 15 Jul 2003 10:02:06 -0400
Subject: [OSRS-PROJ] lib call results differ from exec results
References: <20030715134355.24806.qmail@web14602.mail.yahoo.com>
Message-ID: <00f301c34ad9$ad469ab0$cb88f783@marine.usf.edu>

Don't forget about the pj_init_plus() interface (or pj_free() for that
matter). You can call it like:

char* parms = "+proj=aea +ellps=clrk66 +lat_1=20.0n +lat_2=60.0n +lon_0=110w
+lat_0=40n";
if (!(P = pj_init_plus(parms) ))
{
    printf("proj init failed\n");
    exit(1);
}

and when you're done:

pj_free(P); // clear out memory

-Judd

----- Original Message -----
From: "Sharon Mingus" <dsmingus at yahoo.com>
To: <osrs-proj at remotesensing.org>
Sent: Tuesday, July 15, 2003 9:43 AM
Subject: Re: [OSRS-PROJ] lib call results differ from exec results


> Ok, I am catching the drift here.  I was unaware of
> the different versions, remotesensing.org & "classic
> proj4" .  Also, I missed a comma in the parms
> declaration.  Thanks for the help.
>
> char *parms[] = {
>     "proj=aea",
>     "ellps=clrk66",
>     "lat_1=20.0n",
>     "lat_2=60.0n" // <-- multi-line literal concat
>     "lon_0=110w",
>     "lat_0=40n"
> };
>
> doh!
>
> --- "Gerald I. Evenden" <gerald.evenden at verizon.net>
> wrote:
> > Just to beat this dead horse some more:
> >
> > #include <stdio.h>
> > #include <stdlib.h>
> > #include "lib_proj.h"
> > int
> > main(int narg, char **argl) {
> > PJ *P;
> > XY out;
> > LP in;
> > char *alist[] = {
> > "proj=aea",
> > "ellps=clrk66",
> > "lat_1=20",
> > "lat_2=60",
> > "lon_0=-110",
> > "lat_0=40"};
> >
> > if (!(P = pj_init(6, alist))) {
> > printf("proj init failed\n");
> > exit(1);
> > }
> > in.lam = atof(argl[1]) * DEG_TO_RAD;
> > in.phi = atof(argl[2]) * DEG_TO_RAD;
> > out = pj_fwd(in, P);
> > printf("%s %s makes %.3f %.3f meters\n",argl[1],
> > argl[2], out.x, out.y);
> > exit(0);
> > }
> >
> > After compiling and executing:
> >
> > ./a.out -110.969 39.7621
> > -110.969 39.7621 makes -78175.382 -27659.274 meters
> >
> > Seems to agree pretty well.
> >
> > On Mon, 2003-07-14 at 20:10, Gerald I. Evenden
> > wrote:
> > > For local execution of the runline:
> > >
> > > echo "-110.969 39.7621"|./lproj +proj=aea
> > +ellps=clrk66 +lat_1=20
> > > +lat_2=60 +lon_0=110w +lat_0=40
> > > -78175.38       -27659.27
> > >
> > > which is a much more reasonable value for a point
> > fairly close
> > > to the projection origin of -110,40.
> > >
> > > One problem is there is a "," (comma) in the input
> > stream.
> > > 'lproj' or 'proj' only understand white-space
> > delimiting.
> > >
> > > As for the scanning of "default" file I must admit
> > it was there
> > > earlier and was always a curse.  Number one
> > question after someone
> > > installed the system was why it failed---most of
> > the time the
> > > default file could not be found.  Some setup
> > failure.
> > >
> > > I got rid of it but it still haunts me.
> > > .
> > --
> > Gerald I. Evenden <gerald.evenden at verizon.net>
> >
> > ----------------------------------------
> > PROJ.4 Discussion List
> > See http://www.remotesensing.org/proj for
> > subscription, unsubscription
> > and other information.
>
>
> __________________________________
> Do you Yahoo!?
> SBC Yahoo! DSL - Now only $29.95 per month!
> http://sbc.yahoo.com
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From proj at ton.iguana.be  Sat Jul 19 09:29:05 2003
From: proj at ton.iguana.be (Ton Hospel)
Date: Sat, 19 Jul 2003 16:29:05 +0000 (UTC)
Subject: [OSRS-PROJ] Re: Weirdnesses in the source code
References: <20030708172322.A21853@quasar.home.lunix>
    <1057684505.3180.38.camel@localhost> <1058203816.2418.11.camel@localhost>
Message-ID: <bfbrkh$hgj$1@post.home.lunix>

In article <1058203816.2418.11.camel at localhost>,
	"Gerald I. Evenden" <gerald.evenden at verizon.net> writes:
> The items of this previous bug list have been corrected in release
> 030714 at site:
> 
> http://members.bellatlantic.net/~vze2hc4d/proj4/
> 
> Again, thanks for the reports.  Keep the cards and letters coming.
> 
Great. So let's note some more small details :-)

- Normally an azimuthal projection is declared as "Azi" in the PROJ_HEAD
  azimuthal/PJ_sterea.c uses "Azimuthal"
- a number of projections (cylinder/PJ_ardn_cls.c, cylinder/PJ_braun2.c, 
        cylinder/PJ_cubic.c, cylinder/PJ_mill_2.c, cylinder/PJ_mill_per.c)
  use property "NI". I asume this means "no inverse". But all other places
  use "no inv" for that (for automatic parsing NI is nicer, for humans
  "no inv" is nicer)
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul-grass at stjohnspoint.co.uk  Sat Jul 19 10:00:20 2003
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Sat, 19 Jul 2003 18:00:20 +0100 (BST)
Subject: [OSRS-PROJ] Weirdnesses in the source code
In-Reply-To: <1057684505.3180.38.camel@localhost>
References: <20030708172322.A21853@quasar.home.lunix> <1057684505.3180.38.camel@localhost>
Message-ID: <Pine.LNX.4.53.0307082204150.16609@agrippa.ukshells.co.uk>



On Tue, 8 Jul 2003, Gerald I. Evenden wrote:

> Thank-you for all the bug reports.  Imbedded are some comments prior
> to looking in to them in detail:
>
> On Tue, 2003-07-08 at 11:23, proj at ton.iguana.be wrote:
> > Hi,
> >
> > I'm busy transforming some of the proj code to perl, and ran into a
> > number of strange things.
>
> On the HEAD stuff, the second quote set is informational and does
> not affect execution, but they will be fixed.
>
> > PJ_aeqd.c
> >   in PROJ_HEAD, lat_0 should be lat_0=
> >
> > PJ_aitoff.c
> >   in PROJ_HEAD, lat_1 should be lat_1=
>

This is interesting to me as a while ago I was wondering if it was possible
to use the information in the 'second quote set' for each projection (i.e.
the output of the 'proj -lP' command) to automatically generate a list of
which parameters were required for each projection.

The motivation for this was that I was doing some work on tidying up the
way proj is used in the GRASS GIS.

Previously GRASS had its own private copy of proj4.3.3 inside the
source tree but we are now swiching over to using an external shared
library version of Frank's/remotesensing.org PROJ.4 library and would like
to abandon the internal proj code in GRASS.

The only part I am finding it difficult to deal with is the part that has
been added to GRASS that associates a list of parameters with each
projection. This is needed to allow the user to easily interactively
define all the projection parameters for the location they are working in.
The GRASS module g.setproj asks for the projection name and then
interactively prompts for each parameter, suggesting default values where
appropriate (though we could always get rid of that part; most of them are
zero anyway).

As far as I can see (though I haven't done a totally exhaustive search)
there does not seem to be anything like this internal
to libproj, except the information meant for human interpretation that Ton
is trying to parse.

I would be very interested to see this parsing code, and perhaps a C
version could be added to PROJ as a function in the future?

Paul Kelly

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Sat Jul 19 10:39:39 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 19 Jul 2003 13:39:39 -0400
Subject: [OSRS-PROJ] Weirdnesses in the source code
In-Reply-To: <Pine.LNX.4.53.0307082204150.16609@agrippa.ukshells.co.uk>
References: <20030708172322.A21853@quasar.home.lunix>
	 <1057684505.3180.38.camel@localhost>
	 <Pine.LNX.4.53.0307082204150.16609@agrippa.ukshells.co.uk>
Message-ID: <1058636379.3317.23.camel@localhost>

First of all, can we change the name of this thread.  "Weirdnesses"
is not that meaningful.

One problem with projection parameters is that several projections
have different means of expressing their control  For example,
Lam. Conformal Conic can use two parallels or one parallel and
a scale factor.

Another item is that many control factors are not explicitly
mentioned in the -lP line because they are common to all projections.
For example, ellipsoid/sphere parameters, false easting/northing, ... .

Earlier versions attempted to address this problem with the
ancillary files that contained definitions for default
parameters but was later dropped.

What I see here is the never ending debate as to how much documentation
should be placed in the library itself.  What is in there now is
minimal and what I believe is appropriate for the current library.
To add more detail and user assistance then a complex addenda
is added that would have to be tailored to various
GUI systems.  I do not feel that is part of the basic library that
tries to restrict itself to merely doing the numbers.

The -lP option is only a quick reminder to the knowledgeable user
about the parameters required and *not* an instructional tool.
To add a meaningful interface for the novice user would require
software orders of magnitude more complex than the current libproj
library.

On Sat, 2003-07-19 at 13:00, Paul Kelly wrote:
> On Tue, 8 Jul 2003, Gerald I. Evenden wrote:
> 
> > Thank-you for all the bug reports.  Imbedded are some comments prior
> > to looking in to them in detail:
> >
> > On Tue, 2003-07-08 at 11:23, proj at ton.iguana.be wrote:
> > > Hi,
> > >
> > > I'm busy transforming some of the proj code to perl, and ran into a
> > > number of strange things.
> >
> > On the HEAD stuff, the second quote set is informational and does
> > not affect execution, but they will be fixed.
> >
> > > PJ_aeqd.c
> > >   in PROJ_HEAD, lat_0 should be lat_0=
> > >
> > > PJ_aitoff.c
> > >   in PROJ_HEAD, lat_1 should be lat_1=
> >
> 
> This is interesting to me as a while ago I was wondering if it was possible
> to use the information in the 'second quote set' for each projection (i.e.
> the output of the 'proj -lP' command) to automatically generate a list of
> which parameters were required for each projection.
> 
> The motivation for this was that I was doing some work on tidying up the
> way proj is used in the GRASS GIS.
> 
> Previously GRASS had its own private copy of proj4.3.3 inside the
> source tree but we are now swiching over to using an external shared
> library version of Frank's/remotesensing.org PROJ.4 library and would like
> to abandon the internal proj code in GRASS.
> 
> The only part I am finding it difficult to deal with is the part that has
> been added to GRASS that associates a list of parameters with each
> projection. This is needed to allow the user to easily interactively
> define all the projection parameters for the location they are working in.
> The GRASS module g.setproj asks for the projection name and then
> interactively prompts for each parameter, suggesting default values where
> appropriate (though we could always get rid of that part; most of them are
> zero anyway).
> 
> As far as I can see (though I haven't done a totally exhaustive search)
> there does not seem to be anything like this internal
> to libproj, except the information meant for human interpretation that Ton
> is trying to parse.
> 
> I would be very interested to see this parsing code, and perhaps a C
> version could be added to PROJ as a function in the future?
> 
> Paul Kelly
> 
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From proj at ton.iguana.be  Sat Jul 19 15:32:51 2003
From: proj at ton.iguana.be (Ton Hospel)
Date: Sat, 19 Jul 2003 22:32:51 +0000 (UTC)
Subject: [OSRS-PROJ] Re: Weirdnesses in the source code
References: <20030708172322.A21853@quasar.home.lunix>
    <1057684505.3180.38.camel@localhost>
    <Pine.LNX.4.53.0307082204150.16609@agrippa.ukshells.co.uk>
    <1058636379.3317.23.camel@localhost>
Message-ID: <bfcguj$o7g$1@post.home.lunix>

In article <1058636379.3317.23.camel at localhost>,
	"Gerald I. Evenden" <gerald.evenden at verizon.net> writes:
> First of all, can we change the name of this thread.  "Weirdnesses"
> is not that meaningful.
>
> One problem with projection parameters is that several projections
> have different means of expressing their control  For example,
> Lam. Conformal Conic can use two parallels or one parallel and
> a scale factor.
>
> Another item is that many control factors are not explicitly
> mentioned in the -lP line because they are common to all projections.
> For example, ellipsoid/sphere parameters, false easting/northing, ... .
>
> Earlier versions attempted to address this problem with the
> ancillary files that contained definitions for default
> parameters but was later dropped.
>
> What I see here is the never ending debate as to how much documentation
> should be placed in the library itself.  What is in there now is
> minimal and what I believe is appropriate for the current library.
> To add more detail and user assistance then a complex addenda
> is added that would have to be tailored to various
> GUI systems.  I do not feel that is part of the basic library that
> tries to restrict itself to merely doing the numbers.
>
Still, this kind of information is meaningfull. E.g. I'm using it to try
to generate testcases that try to cover all meaningfull combinations, so
I indeed parse the -lP output, collect the vars mentioned there, add the
standard vars and then give them all kinds of combinations of values. I'd
rather do that then have to read the docs for each projection and then
program it by hand, even though a few things have to be handled special.
Especially since otherwise I'd have to repeat this on each new
release.

When you're using a specific transformation this kind of stuff is indeed
pretty irrelevant, but whenever you have a metaprogram that tries to
support them all, you need it. And then it gets pretty clear that this
purely human readable stuff that doesn't get compiler checked has many
imperfections :-( Fortunately I'm doing this in perl where it's pretty
easy to fudge strings and sort of "repair" it.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From proj at ton.iguana.be  Sat Jul 19 15:59:36 2003
From: proj at ton.iguana.be (Ton Hospel)
Date: Sat, 19 Jul 2003 22:59:36 +0000 (UTC)
Subject: [OSRS-PROJ] Re: Weirdnesses in the source code
References: <20030708172322.A21853@quasar.home.lunix>
    <1057684505.3180.38.camel@localhost> <1058203816.2418.11.camel@localhost>
Message-ID: <bfcigo$oji$1@post.home.lunix>

In article <1058203816.2418.11.camel at localhost>,
	"Gerald I. Evenden" <gerald.evenden at verizon.net> writes:
> The items of this previous bug list have been corrected in release
> 030714 at site:
> 
Here two other minor ones:

conic/PJ_bonne.c calculates P->en without checking the result for NULL
conic/PJ_eqdc.c calculates P->en WITH checking, then in the eliptical
case calculates it AGAIN (but now without checking).
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Sat Jul 19 16:27:42 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 19 Jul 2003 19:27:42 -0400
Subject: [OSRS-PROJ] Re: Weirdnesses in the source code
In-Reply-To: <bfcigo$oji$1@post.home.lunix>
References: <20030708172322.A21853@quasar.home.lunix>
	 <1057684505.3180.38.camel@localhost> <1058203816.2418.11.camel@localhost>
	 <bfcigo$oji$1@post.home.lunix>
Message-ID: <1058657262.4269.6.camel@localhost>

Will look into it.

Thanks.

On Sat, 2003-07-19 at 18:59, Ton Hospel wrote:
> In article <1058203816.2418.11.camel at localhost>,
> 	"Gerald I. Evenden" <gerald.evenden at verizon.net> writes:
> > The items of this previous bug list have been corrected in release
> > 030714 at site:
> > 
> Here two other minor ones:
> 
> conic/PJ_bonne.c calculates P->en without checking the result for NULL
> conic/PJ_eqdc.c calculates P->en WITH checking, then in the eliptical
> case calculates it AGAIN (but now without checking).
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Sun Jul 20 08:15:15 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 20 Jul 2003 11:15:15 -0400
Subject: [OSRS-PROJ] List archive
Message-ID: <1058714115.2375.2.camel@localhost>

I did a stupid again and lost an entry to this email group.  At least
I now know what I did wrong.

Anyway, I believe someone mentioned that there is an archive but I
can't figure out where it is.  Any help there?

Thank-you.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From nhv at cape.com  Sun Jul 20 08:24:22 2003
From: nhv at cape.com (Norman Vine)
Date: Sun, 20 Jul 2003 11:24:22 -0400
Subject: [OSRS-PROJ] List archive
In-Reply-To: <1058714115.2375.2.camel@localhost>
Message-ID: <EKEJIKAILPONGGENMBGACELMEBAA.nhv@cape.com>

Gerald I. Evenden writes:
> 
> Anyway, I believe someone mentioned that there is an archive but I
> can't figure out where it is.  Any help there?

http://www.remotesensing.org/lists/proj_archive/maillist.html

There is a link off the main page 
http://www.remotesensing.org/proj/

but it isn't immediately obvious at least to me
look for
"To review previous posts visit the web archive"

HTH

Norman

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Sun Jul 20 08:35:14 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 20 Jul 2003 11:35:14 -0400
Subject: [OSRS-PROJ] Re: Weirdnesses in the source code
In-Reply-To: <bfcigo$oji$1@post.home.lunix>
References: <20030708172322.A21853@quasar.home.lunix>
	 <1057684505.3180.38.camel@localhost> <1058203816.2418.11.camel@localhost>
	 <bfcigo$oji$1@post.home.lunix>
Message-ID: <1058715314.2375.7.camel@localhost>

Corrections will be in the next release.

The eqdc error was more severe in that allocated memory was lost
but in both cases the chance of erroneous numbers was infinitesimal.
Nothing to be concerned about for current release and earlier.

On Sat, 2003-07-19 at 18:59, Ton Hospel wrote:
> In article <1058203816.2418.11.camel at localhost>,
> 	"Gerald I. Evenden" <gerald.evenden at verizon.net> writes:
> > The items of this previous bug list have been corrected in release
> > 030714 at site:
> > 
> Here two other minor ones:
> 
> conic/PJ_bonne.c calculates P->en without checking the result for NULL
> conic/PJ_eqdc.c calculates P->en WITH checking, then in the eliptical
> case calculates it AGAIN (but now without checking).
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul-grass at stjohnspoint.co.uk  Wed Jul 23 01:24:26 2003
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Wed, 23 Jul 2003 09:24:26 +0100 (BST)
Subject: [OSRS-PROJ] remotesensing.org PROJ reading datum gridshift files unnecessarily?
In-Reply-To: <20030723092317.A569@itc.it>
References: <20030722105613.E23470@itc.it> <Pine.LNX.4.10.10307221236520.18745-100000@sjp.clara.co.uk>
 <20030723092317.A569@itc.it>
Message-ID: <Pine.LNX.4.53.0307230912340.23982@agrippa.ukshells.co.uk>

Hello Markus

On Wed, 23 Jul 2003, Markus Neteler wrote:

> Hello Paul,
>
> On Tue, Jul 22, 2003 at 12:39:30PM +0100, Paul Kelly wrote:
> > Hello Markus
> > That seems to be a problem in the new functions recently added to 5.1
> > ps.map. I will look at it in more detail later but for now I can only
> > think that perhaps it is trying to re-project points that are outside the
> > boundaries of the conus conversion grid. Try changing
> > nadgrids: conus
> > in the PROJ_INFO to
> > nadgrids: @conus
> > (I think I have the syntax right.) This is a recent addition to PROJ that
> > allows to re-project points outside the coverage area of the shift file,
> > but gives them a zero shift (instead of just failing with an error).
> >
> > However there are several things that cause the PROJ 'failed to load...'
> >  error; something else could be wrong.
>
> I found it! I was using geogrid with 10000 m assuming that "m" is
> meters, but it's "minutes" of course. After changing to 60 s (seconds)
> ps.map works well.
>
> So: RTFM... :-(
>
> Sorry for taking your time,

Still, IMHO I don't think it should have been trying to load the datum
shift file when the output co-ordinate system did not have a datum
specified, i.e. whether or not the input point is inside the region
covered by the shift file is relevant only if we are doing a datum shift,
not if just doing the inverse projection from projected co-ordinates to
lat/long. In this case I feel the PROJ pj_transform() function should just
do the inverse projection (although the fact that it refused was a useful
warning to you that something was wrong with your input values).

Maybe Frank can help (copied to PROJ list). I feel the call to
pj_datum_transform() in pj_transform() should be conditional on
( srcdefn->datum_type != PJD_UNKNOWN
  && dstdefn->datum_type != PJD_UNKNOWN )
however it is far from clear what is the obvious solution and I don't
pretend to fully understand the code there.

Paul

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul-grass at stjohnspoint.co.uk  Wed Jul 23 04:09:14 2003
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Wed, 23 Jul 2003 12:09:14 +0100 (BST)
Subject: [OSRS-PROJ] Re: [GRASS5] adding a new datum/projection?
In-Reply-To: <20030723175947.76dd5c2d.hamish_nospam@yahoo.com>
References: <20030722143351.07e79583.hamish_nospam@yahoo.com>
 <Pine.LNX.4.10.10307221410470.18745-100000@sjp.clara.co.uk>
 <20030723175947.76dd5c2d.hamish_nospam@yahoo.com>
Message-ID: <Pine.LNX.4.53.0307231126100.23982@agrippa.ukshells.co.uk>

Hello

On Wed, 23 Jul 2003, H Bowman wrote:

> Hi again --
>
>
> I've got some new data in yet another new projection, which uses its own
> new datum.
>
>
> The datum is New Zealand Geodetic Datum 2000 (NZGD2000), which is based
> on the International Terrestrial Reference Frame 1996 (ITRF96). This is
> pretty much the same as WGS84 but uses the GRS80 ellipsoid (slightly
> different flattening parameter).
>
> So as far as I understand: NZGD2k (==ITRF96) is the WGS84 datum combined
> with the GRS80 ellipsoid.

We are pushing at the limits of the accuracy of the current GRASS/PROJ
system here. I looked at the document and to me it seems that NZGD2000 is
based on the ITRS datum. It is 'realised' (which I think means a
description of the current location of the earth's plates based on
measurements from a number of stations around the world) by several ITRF
defintions, and each can be realised at any epoch (point in time).

For high accuracy you would define a shift that related each epoch to WGS84
(would change because of plate tectonics) and each would have a separate
datum entry in GRASS. It would get out of hand very quickly if these were
all included but it may be possible to use GRASS in this way if you could
get figures for the shift (for New Zealand you need ITRF96 at 2000.0
epoch). http://www.iers.org/iers/products/itrf/ looks relevant but I don't
really know.

> Except g.setproj won't let me do that, either with a new location or
> retroactively. The old 5.0.2 version asks for ellipsoid first, then
> datum, but complains when you try to mix wgs84 and grs80 and quits
> without writing anything. The latest g.setproj never gives you a chance
> to set the ellipsoid, it is chosen from your datum.

No it doesn't seem logical to do that. GRASS uses a very limited definition
of a datum which really just comes down to the ellipsoid used, so by
changing the ellipsoid you are really taking away everything the datum
stands for.

> I'm not sure if I get the correct result if I just change the ellps:
> line to grs80 in the PROJ_INFO file?

ellps: grs80
towgs84: 0,0,0

and make sure there is no 'datum' line.

> Is anything else based on ITRF96? Would it be worth adding that as a
> common denominator datum? I think the Map Grid of Australia might be in
> a similar situation (??).

It might be worth adding ITRS (International Terrestrial Reference
*System*), but to be compatible with other GIS we should probably
explicitly add New_Zealand_Geodetic_Datum_2000 and the others. But as
they are the same as far as the level of accuracy GRASS/PROJ currently
provides goes, it seems like we could end up with a lot of clutter.
However I have already done that for several countries in Europe which use
the international ellipsoid but have different datum names, so there is no
point in discriminating....


>
> see:  (102k)
> http://www.linz.govt.nz/rcs/linz/17880/difference_wgs84_nzgd2000.pdf
>
>
>
> As for the new projection, it is New Zealand Transverse Mercator (NZTM),
> which is in terms of that new NZGD2k datum.
> Details:
> Datum: NZGD2k
> Origin Latitude: 0� South
> Origin Longitude: 173� East
> False Northing: 10 000 000m N
> False Easting: 1 600 000m E
> Scale Factor: 0.9996
>
> Setting projection as tmerc and entering those terms goes smoothly.
> Should NZTM get its own projection entry or is entering by hand with the
> tmerc projection every time the way to go?

Yes that is the way to do it until GRASS has co-ordinate system support,
which I don't see happening any time soon.. you have it very easy with
New Zealand Map Grid which puts in all the parameters for you.

>
> for more details see:  (44k)
> http://www.linz.govt.nz/rcs/linz/5684/nztransverse_mercator.pdf
>
> That PDF also has a page of useful ellipsoid to grid formulae which
> might be useful to someone.
>
>
> It doesn't help much that half the country is moving 5cm/year in the
> opposite direction to the other half..

It would be useful to keep an eye out for any Free Software that handles
that level of accuracy
http://www-gpsg.mit.edu/~simon/gtgk/ has some interesting links

>
>
> thanks for any insight,

Well hopefully someone will correct the inevitable errors and
misunderstandings in what I've written above

Paul
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From B at rt.nl  Wed Jul 23 06:06:16 2003
From: B at rt.nl (Bart Adriaanse)
Date: Wed, 23 Jul 2003 15:06:16 +0200
Subject: [OSRS-PROJ] Re: [GRASS5] adding a new datum/projection?
References: <20030722143351.07e79583.hamish_nospam@yahoo.com> <Pine.LNX.4.10.10307221410470.18745-100000@sjp.clara.co.uk> <20030723175947.76dd5c2d.hamish_nospam@yahoo.com> <Pine.LNX.4.53.0307231126100.23982@agrippa.ukshells.co.uk>
Message-ID: <000d01c3511b$35337f00$2401000a@demis.nl>

Charlie,

I checked the great circle stuff, you are right that this was not the most accurate although difference generally within 1%

I replaced it with a shortened version of what you were using:

Private Function GeoDistance(Lon1 As Double, Lat1 As Double, Lon2 As Double, Lat2 As Double) As Double

'The great circle distance d between two points with coordinates {lat1,lon1} and {lat2,lon2} is given by:
'
'd = acos(Sin(Lat1) * Sin(Lat2) + Cos(Lat1) * Cos(Lat2) * Cos(Lon1 - Lon2))
'A mathematically equivalent formula, which is less subject to rounding error for short distances is:
'
'd=2*asin(sqrt((sin((lat1-lat2)/2))^2 +
'                 cos(lat1)*cos(lat2)*(sin((lon1-lon2)/2))^2))
'
' an additional check is put in to make sure the argument to asin is within the range 0-1

Const deg2rad = 1.74532925199433E-02                ' radians per degree
Const Pi = 3.14159265358979                         ' Pi
Const Radius = 6377000
Dim dLat As Double, dLon As Double

dLat = Lat2 - Lat1
dLon = Lon2 - Lon1

GeoDistance = Radius * 2 * asin(min(1, Sqr(Sin(deg2rad * dLat / 2) ^ 2 + Cos(deg2rad * Lat1) * Cos(deg2rad * Lat2) * Sin(deg2rad * dLon / 2) ^ 2)))

End Function

Private Function asin(ByVal x As Double) As Double
  asin = Atn(x / Sqr(-x * x + 1))
End Function

Private Function min(ByVal x As Double, ByVal y As Double)
  If x < y Then min = x Else min = y
End Function

The differences will be neglectable, i chose not to make my own sin2 function like you have, for simplicity's sake...
Now if we want do do this completely right the first time, i adapted the rest of it to exactly compute one pixel in the middle rather then 10% of the window, just to stick to the openGIS definition exactly:

  With mvarDisplay.Frame
    mapwidth = .xMax - .xMin
    mapheight = .yMax - .yMin
  End With
  
  With mvarDisplay.ZoomExtent
    ' extent of central pixel
    x1 = (.xMin + .xMax) / 2
    x2 = x1 + (.xMax - .xMin) / mapwidth
    y1 = (.yMin = .yMax) / 2
    y2 = y1 + (.yMax - .yMin) / mapheight
    If mvarUnitMeter = 0 Then
      ' great circle distance for lat-lon
      pixelmeters = GeoDistance(x1, y1, x2, y2)
    Else
      ' pythagoras for projected maps in meters
      pixelmeters = Sqr((mvarUnitMeter * (.xMax - .xMin)) ^ 2 + (mvarUnitMeter * (.yMax - .yMin)) ^ 2)
    End If
    
  End With
  DoGetZoomFactor = pixelmeters / 0.00025

I'll try to get a server running here today, but first i have to add the scalehints to the XML output.

Best regards,

Bart Adriaanse
Demis bv


----- Original Message ----- 
From: "Paul Kelly" <paul-grass at stjohnspoint.co.uk>
To: "H Bowman" <hamish_nospam at yahoo.com>
Cc: <grass5 at grass.itc.it>; <osrs-proj at remotesensing.org>
Sent: Wednesday, July 23, 2003 13:09
Subject: [OSRS-PROJ] Re: [GRASS5] adding a new datum/projection?


> Hello
> 
> On Wed, 23 Jul 2003, H Bowman wrote:
> 
> > Hi again --
> >
> >
> > I've got some new data in yet another new projection, which uses its own
> > new datum.
> >
> >
> > The datum is New Zealand Geodetic Datum 2000 (NZGD2000), which is based
> > on the International Terrestrial Reference Frame 1996 (ITRF96). This is
> > pretty much the same as WGS84 but uses the GRS80 ellipsoid (slightly
> > different flattening parameter).
> >
> > So as far as I understand: NZGD2k (==ITRF96) is the WGS84 datum combined
> > with the GRS80 ellipsoid.
> 
> We are pushing at the limits of the accuracy of the current GRASS/PROJ
> system here. I looked at the document and to me it seems that NZGD2000 is
> based on the ITRS datum. It is 'realised' (which I think means a
> description of the current location of the earth's plates based on
> measurements from a number of stations around the world) by several ITRF
> defintions, and each can be realised at any epoch (point in time).
> 
> For high accuracy you would define a shift that related each epoch to WGS84
> (would change because of plate tectonics) and each would have a separate
> datum entry in GRASS. It would get out of hand very quickly if these were
> all included but it may be possible to use GRASS in this way if you could
> get figures for the shift (for New Zealand you need ITRF96 at 2000.0
> epoch). http://www.iers.org/iers/products/itrf/ looks relevant but I don't
> really know.
> 
> > Except g.setproj won't let me do that, either with a new location or
> > retroactively. The old 5.0.2 version asks for ellipsoid first, then
> > datum, but complains when you try to mix wgs84 and grs80 and quits
> > without writing anything. The latest g.setproj never gives you a chance
> > to set the ellipsoid, it is chosen from your datum.
> 
> No it doesn't seem logical to do that. GRASS uses a very limited definition
> of a datum which really just comes down to the ellipsoid used, so by
> changing the ellipsoid you are really taking away everything the datum
> stands for.
> 
> > I'm not sure if I get the correct result if I just change the ellps:
> > line to grs80 in the PROJ_INFO file?
> 
> ellps: grs80
> towgs84: 0,0,0
> 
> and make sure there is no 'datum' line.
> 
> > Is anything else based on ITRF96? Would it be worth adding that as a
> > common denominator datum? I think the Map Grid of Australia might be in
> > a similar situation (??).
> 
> It might be worth adding ITRS (International Terrestrial Reference
> *System*), but to be compatible with other GIS we should probably
> explicitly add New_Zealand_Geodetic_Datum_2000 and the others. But as
> they are the same as far as the level of accuracy GRASS/PROJ currently
> provides goes, it seems like we could end up with a lot of clutter.
> However I have already done that for several countries in Europe which use
> the international ellipsoid but have different datum names, so there is no
> point in discriminating....
> 
> 
> >
> > see:  (102k)
> > http://www.linz.govt.nz/rcs/linz/17880/difference_wgs84_nzgd2000.pdf
> >
> >
> >
> > As for the new projection, it is New Zealand Transverse Mercator (NZTM),
> > which is in terms of that new NZGD2k datum.
> > Details:
> > Datum: NZGD2k
> > Origin Latitude: 0° South
> > Origin Longitude: 173° East
> > False Northing: 10 000 000m N
> > False Easting: 1 600 000m E
> > Scale Factor: 0.9996
> >
> > Setting projection as tmerc and entering those terms goes smoothly.
> > Should NZTM get its own projection entry or is entering by hand with the
> > tmerc projection every time the way to go?
> 
> Yes that is the way to do it until GRASS has co-ordinate system support,
> which I don't see happening any time soon.. you have it very easy with
> New Zealand Map Grid which puts in all the parameters for you.
> 
> >
> > for more details see:  (44k)
> > http://www.linz.govt.nz/rcs/linz/5684/nztransverse_mercator.pdf
> >
> > That PDF also has a page of useful ellipsoid to grid formulae which
> > might be useful to someone.
> >
> >
> > It doesn't help much that half the country is moving 5cm/year in the
> > opposite direction to the other half..
> 
> It would be useful to keep an eye out for any Free Software that handles
> that level of accuracy
> http://www-gpsg.mit.edu/~simon/gtgk/ has some interesting links
> 
> >
> >
> > thanks for any insight,
> 
> Well hopefully someone will correct the inevitable errors and
> misunderstandings in what I've written above
> 
> Paul
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20030723/ccbe7ebe/attachment.html>

From warmerdam at pobox.com  Wed Jul 23 06:34:13 2003
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 23 Jul 2003 09:34:13 -0400
Subject: [OSRS-PROJ] Re: remotesensing.org PROJ reading datum gridshift files unnecessarily?
In-Reply-To: <Pine.LNX.4.53.0307230912340.23982@agrippa.ukshells.co.uk>
References: <20030722105613.E23470@itc.it> <Pine.LNX.4.10.10307221236520.18745-100000@sjp.clara.co.uk> <20030723092317.A569@itc.it> <Pine.LNX.4.53.0307230912340.23982@agrippa.ukshells.co.uk>
Message-ID: <3F1E8ED5.6020902@pobox.com>

Paul Kelly wrote:
> Still, IMHO I don't think it should have been trying to load the datum
> shift file when the output co-ordinate system did not have a datum
> specified, i.e. whether or not the input point is inside the region
> covered by the shift file is relevant only if we are doing a datum shift,
> not if just doing the inverse projection from projected co-ordinates to
> lat/long. In this case I feel the PROJ pj_transform() function should just
> do the inverse projection (although the fact that it refused was a useful
> warning to you that something was wrong with your input values).
> 
> Maybe Frank can help (copied to PROJ list). I feel the call to
> pj_datum_transform() in pj_transform() should be conditional on
> ( srcdefn->datum_type != PJD_UNKNOWN
>   && dstdefn->datum_type != PJD_UNKNOWN )
> however it is far from clear what is the obvious solution and I don't
> pretend to fully understand the code there.

Paul,

I am boggled.  My belief had always been that pj_transform() would fail
if the two coordinate systems had different ellpsoids, but no explicit
datum information on one of them (or both).  However, trying this out,
and examining the code I can find no support for why I thought this was
the case.

If one coordinate system (source or destination) has datum shift information
but the other does not, pj_transform() is happily applying the datum shift
info where available, and just assuming that no datum adjustment is needed
on the other side.  I can even do conversions between coordinates systems
with different ellpisoids but no datum info for either coordinate system.

This isn't necessarily bad but it shakes my faith in my understanding of what
was going on.

That said, I don't want to avoid the pj_datum_transform() call if on of the
datums is PJD_UNKNOWN, because pj_datum_transform() also takes care of the
ellipse change.

Hmmm, on further review, this isn't always done right either.  The ellpsoid
conversion is only applied in the situation where I do a conversion through
geocentric coordinates ... which is only done if one of the two coordinate
systems is using a 3 or 7 parameter grid shift.   So currently we have the
odd situation that if we do a conversion between ellpsoids with both
coordinate system marked as PJD_UNKNOWN we get no change at all:

eg.

vc6 at gdal2200% cs2cs +proj=latlong +ellps=clrk66 +towgs84=0,0,0 +to +proj=latlong 
+ellps=WGS84 +towgs84=0,0,0
10 10
10dE    9d59'57.36"N 62.250

But if we do the very same thing, but provide a zero shift to WGS84 like
this, we at least get the ellipsoid conversion:

vc6 at gdal2200% cs2cs  +proj=latlong +ellps=clrk66 +to +proj=latlong +ellps=WGS84
10 10
10dE    10dN 0.000

Clearly I need to review this area of code.

However, Paul, your point I think was that you don't feel either "side" of
a datum shift should be done unless the datum information for both the
source and destionation are available, is that right?  I am not certain why
you feel this is necessarily the case.

I am creating a bugzilla entry to try and address some of the issues here.

   http://bugzilla.remotesensing.org/show_bug.cgi?id=368

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From cjmce at lsu.edu  Wed Jul 23 07:19:58 2003
From: cjmce at lsu.edu (Cliff Mugnier)
Date: Wed, 23 Jul 2003 09:19:58 -0500
Subject: [OSRS-PROJ] Re: [GRASS5] adding a new datum/projection?
In-Reply-To: <Pine.LNX.4.53.0307231126100.23982@agrippa.ukshells.co.uk>
Message-ID: <000901c35125$7f0acd40$931d2782@CEEmugnier>

In regard to New Zealand, I have not researched their implementation in
detail, but from the little that I know; the ITRF is probably NOT the
way to go for "datum shifts" in New Zealand.  The original datum was not
recognized or utilized throughout both North Island and South Island,
and local property was referenced to local "meridional circuits" that
were perimeter surveys forming local coordinate systems and cast on
individual aphylactic Cassini-Soldner Grids.  Each county was an
"island" unto itself.  Topographic mapping at inch to the mile was on
the NZ Transverse Mercator before WWII, and the system remained that way
for decades.

They had a datum readjustment (I think) in the 70s and Lee came up with
the "NZ Map Grid" that covered both islands.

I do know that they have supposedly dropped Lee's projection for both
islands and may have gone back to Transverse Mercator.  However, NZ2000
Datum is actually changing monthly if not daily because of the enormous
speed the islands are moving towards Hawaii.  (I think maybe a
centimeter a week, not sure!)

Anyway, GIS coordinates need to be "islands" unto themselves (like the
old "meridional circuits"), and I don't think that geodetic "solutions"
are appropriate in this case.  I believe that the subject is so complex
for New Zealand, that the transformation from the ITRF_XX to a local
reference frame should be done by geodesists and maybe Land Surveyors,
but certainly not implemented into GIS software.

I may be incorrect in my assessment, but at present I believe that
"PROJ" should certainly NOT implement the current geodetic system (in an
international sense of the ITRF_XX) for New Zealand.  Leave it to the
geodesists for now.

Clifford J. Mugnier (cjmce at LSU.edu)
Chief of Geodesy and
Associate Director
Center for GeoInformatics
Department of Civil Engineering
LOUISIANA STATE UNIVERSITY
Baton Rouge, LA  70803
Voice:       (225) 578-8536
Facsimile:  (225) 578-8652
Pager:    1-(888) 365-5180
=======================================
http://www.ASPRS.org/resources.html
http://www.cee.lsu.edu/facultyStaff/mugnier/index.html
=======================================


-----Original Message-----
From: owner-osrs-proj at remotesensing.org
[mailto:owner-osrs-proj at remotesensing.org] On Behalf Of Paul Kelly
Sent: Wednesday, July 23, 2003 6:09 AM
To: H Bowman
Cc: grass5 at grass.itc.it; osrs-proj at remotesensing.org
Subject: [OSRS-PROJ] Re: [GRASS5] adding a new datum/projection?

 

 

 

 From:Clifford J Mugnier/cjmce/LSU at stjohnspoint.co.uk on 07/23/2003
12:09   
 PM CET

 




                                                                      
                                                                      
 Hello                                                                
                                                                      
 On Wed, 23 Jul 2003, H Bowman wrote:                                 
                                                                      
 > Hi again --                                                        
 >                                                                    
 >                                                                    
 > I've got some new data in yet another new projection, which uses   
 its own                                                              
 > new datum.                                                         
 >                                                                    
 >                                                                    
 > The datum is New Zealand Geodetic Datum 2000 (NZGD2000), which is  
 based                                                                
 > on the International Terrestrial Reference Frame 1996 (ITRF96).    
 This is                                                              
 > pretty much the same as WGS84 but uses the GRS80 ellipsoid         
 (slightly                                                            
 > different flattening parameter).                                   
 >                                                                    
 > So as far as I understand: NZGD2k (==ITRF96) is the WGS84 datum    
 combined                                                             
 > with the GRS80 ellipsoid.                                          
                                                                      
 We are pushing at the limits of the accuracy of the current          
 GRASS/PROJ                                                           
 system here. I looked at the document and to me it seems that        
 NZGD2000 is                                                          
 based on the ITRS datum. It is 'realised' (which I think means a     
 description of the current location of the earth's plates based on   
 measurements from a number of stations around the world) by several  
 ITRF                                                                 
 defintions, and each can be realised at any epoch (point in time).   
                                                                      
 For high accuracy you would define a shift that related each epoch   
 to WGS84                                                             
 (would change because of plate tectonics) and each would have a      
 separate                                                             
 datum entry in GRASS. It would get out of hand very quickly if these 
 were                                                                 
 all included but it may be possible to use GRASS in this way if you  
 could                                                                
 get figures for the shift (for New Zealand you need ITRF96 at 2000.0 
 epoch). http://www.iers.org/iers/products/itrf/ looks relevant but I 
 don't                                                                
 really know.                                                         
                                                                      
 > Except g.setproj won't let me do that, either with a new location  
 or                                                                   
 > retroactively. The old 5.0.2 version asks for ellipsoid first,     
 then                                                                 
 > datum, but complains when you try to mix wgs84 and grs80 and quits 
 > without writing anything. The latest g.setproj never gives you a   
 chance                                                               
 > to set the ellipsoid, it is chosen from your datum.                
                                                                      
 No it doesn't seem logical to do that. GRASS uses a very limited     
 definition                                                           
 of a datum which really just comes down to the ellipsoid used, so by 
 changing the ellipsoid you are really taking away everything the     
 datum                                                                
 stands for.                                                          
                                                                      
 > I'm not sure if I get the correct result if I just change the      
 ellps:                                                               
 > line to grs80 in the PROJ_INFO file?                               
                                                                      
 ellps: grs80                                                         
 towgs84: 0,0,0                                                       
                                                                      
 and make sure there is no 'datum' line.                              
                                                                      
 > Is anything else based on ITRF96? Would it be worth adding that as 
 a                                                                    
 > common denominator datum? I think the Map Grid of Australia might  
 be in                                                                
 > a similar situation (??).                                          
                                                                      
 It might be worth adding ITRS (International Terrestrial Reference   
 *System*), but to be compatible with other GIS we should probably    
 explicitly add New_Zealand_Geodetic_Datum_2000 and the others. But   
 as                                                                   
 they are the same as far as the level of accuracy GRASS/PROJ         
 currently                                                            
 provides goes, it seems like we could end up with a lot of clutter.  
 However I have already done that for several countries in Europe     
 which use                                                            
 the international ellipsoid but have different datum names, so there 
 is no                                                                
 point in discriminating....                                          
                                                                      
                                                                      
 >                                                                    
 > see:  (102k)                                                       
 >                                                                    
 http://www.linz.govt.nz/rcs/linz/17880/difference_wgs84_nzgd2000.pdf 
 >                                                                    
 >                                                                    
 >                                                                    
 > As for the new projection, it is New Zealand Transverse Mercator   
 (NZTM),                                                              
 > which is in terms of that new NZGD2k datum.                        
 > Details:                                                           
 > Datum: NZGD2k                                                      
 > Origin Latitude: 0° South                                          
 > Origin Longitude: 173° East                                        
 > False Northing: 10 000 000m N                                      
 > False Easting: 1 600 000m E                                        
 > Scale Factor: 0.9996                                               
 >                                                                    
 > Setting projection as tmerc and entering those terms goes          
 smoothly.                                                            
 > Should NZTM get its own projection entry or is entering by hand    
 with the                                                             
 > tmerc projection every time the way to go?                         
                                                                      
 Yes that is the way to do it until GRASS has co-ordinate system      
 support,                                                             
 which I don't see happening any time soon.. you have it very easy    
 with                                                                 
 New Zealand Map Grid which puts in all the parameters for you.       
                                                                      
 >                                                                    
 > for more details see:  (44k)                                       
 > http://www.linz.govt.nz/rcs/linz/5684/nztransverse_mercator.pdf    
 >                                                                    
 > That PDF also has a page of useful ellipsoid to grid formulae      
 which                                                                
 > might be useful to someone.                                        
 >                                                                    
 >                                                                    
 > It doesn't help much that half the country is moving 5cm/year in   
 the                                                                  
 > opposite direction to the other half..                             
                                                                      
 It would be useful to keep an eye out for any Free Software that     
 handles                                                              
 that level of accuracy                                               
 http://www-gpsg.mit.edu/~simon/gtgk/ has some interesting links      
                                                                      
 >                                                                    
 >                                                                    
 > thanks for any insight,                                            
                                                                      
 Well hopefully someone will correct the inevitable errors and        
 misunderstandings in what I've written above                         
                                                                      
 Paul                                                                 
 ----------------------------------------                             
 PROJ.4 Discussion List                                               
 See http://www.remotesensing.org/proj for subscription,              
 unsubscription                                                       
  and other information.                                              
                                                                      



----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul-grass at stjohnspoint.co.uk  Wed Jul 23 07:39:09 2003
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Wed, 23 Jul 2003 15:39:09 +0100 (BST)
Subject: [OSRS-PROJ] Re: remotesensing.org PROJ reading datum gridshift files unnecessarily?
In-Reply-To: <3F1E8ED5.6020902@pobox.com>
References: <20030722105613.E23470@itc.it> <Pine.LNX.4.10.10307221236520.18745-100000@sjp.clara.co.uk>
 <20030723092317.A569@itc.it> <Pine.LNX.4.53.0307230912340.23982@agrippa.ukshells.co.uk>
 <3F1E8ED5.6020902@pobox.com>
Message-ID: <Pine.LNX.4.53.0307231503110.23982@agrippa.ukshells.co.uk>

Hello Frank

On Wed, 23 Jul 2003, Frank Warmerdam wrote:

> Paul Kelly wrote:
> > Still, IMHO I don't think it should have been trying to load the datum
> > shift file when the output co-ordinate system did not have a datum
> > specified, i.e. whether or not the input point is inside the region
> > covered by the shift file is relevant only if we are doing a datum shift,
> > not if just doing the inverse projection from projected co-ordinates to
> > lat/long. In this case I feel the PROJ pj_transform() function should just
> > do the inverse projection (although the fact that it refused was a useful
> > warning to you that something was wrong with your input values).
> >
> > Maybe Frank can help (copied to PROJ list). I feel the call to
> > pj_datum_transform() in pj_transform() should be conditional on
> > ( srcdefn->datum_type != PJD_UNKNOWN
> >   && dstdefn->datum_type != PJD_UNKNOWN )
> > however it is far from clear what is the obvious solution and I don't
> > pretend to fully understand the code there.
>
> Paul,
>
> I am boggled.  My belief had always been that pj_transform() would fail
> if the two coordinate systems had different ellpsoids, but no explicit
> datum information on one of them (or both).  However, trying this out,
> and examining the code I can find no support for why I thought this was
> the case.

Actually no that is a different problem (I'll come to what I was talking
about below later). In this case my understanding was wrong as well. I
had always thought it was not meaningful to convert between two ellipsoids
in this way (treating the point as having the same geocentric co-ordinates on
both ellipsoids, which is how I understand what you are saying) when datum
shift parameters were not available.

So I assumed that the second ellipsoid was ignored and the projection was
done assuming the first ellipsoid for both source and destination. Come to
think of it I can see no obvious reason why I made that assumption either.

> That said, I don't want to avoid the pj_datum_transform() call if on of the
> datums is PJD_UNKNOWN, because pj_datum_transform() also takes care of the
> ellipse change.

OK, makes sense when taken with my new understanding as described in the
previous paragraph.

> Hmmm, on further review, this isn't always done right either.  The ellpsoid
> conversion is only applied in the situation where I do a conversion through
> geocentric coordinates ... which is only done if one of the two coordinate
> systems is using a 3 or 7 parameter grid shift.   So currently we have the
> odd situation that if we do a conversion between ellpsoids with both
> coordinate system marked as PJD_UNKNOWN we get no change at all:
>
> eg.
>
> vc6 at gdal2200% cs2cs +proj=latlong +ellps=clrk66 +towgs84=0,0,0 +to +proj=latlong
> +ellps=WGS84 +towgs84=0,0,0
> 10 10
> 10dE    9d59'57.36"N 62.250
>
> But if we do the very same thing, but provide a zero shift to WGS84 like
> this, we at least get the ellipsoid conversion:
>
> vc6 at gdal2200% cs2cs  +proj=latlong +ellps=clrk66 +to +proj=latlong +ellps=WGS84
> 10 10
> 10dE    10dN 0.000
>
> Clearly I need to review this area of code.

I take it the order of these two examples should be switched round but I
get the point.

>
> However, Paul, your point I think was that you don't feel either "side" of
> a datum shift should be done unless the datum information for both the
> source and destionation are available, is that right?  I am not certain why
> you feel this is necessarily the case.

This is just how I always assumed it worked. I suppose it made sense to me
for the purposes of backward compatibility between two co-ordinate systems
that were the same, except one had datum transformation parameters
included in the PROJ definition, e.g.

$ echo '-103 44' | cs2cs +proj=longlat +ellps=clrk66 +nadgrids=./conus +to
+proj=longlat +ellps=clrk66 +nadgrids=./conus
103dW   44dN 0.000

produces no shift which is correct, but if the second co-ordinate system
didn't explicitly specify datum parameters

$ echo '-103 44' | cs2cs +proj=longlat +ellps=clrk66 +nadgrids=./conus +to
+proj=longlat +ellps=clrk66
103d0'1.629"W   43d59'59.959"N 0.000

then this is the wrong result in my opinion/understanding as no shift
should have taken place. Or even now that I understand about ellipsoid
shifts, both of these systems are on the same ellipsoid so again there
should be no shift.

Back to the original problem now. Very closely related to the second
example above... in fact that is it in a nutshell. I just felt that
it shouldn't even try to load the gridshift file if the two ellipsoids
were the same, as it would not need it. But in fact it is not just being
loaded but being used erroneously. This is a real problem at the minute in
GRASS modules that convert projected co-ordinates to latitude/longitude.

One more example:
it appears what you are saying is that if datum shift parameters are
provided for one side, but not the other then the shift should go ahead
on the source side, followed by projection onto the destination ellipsoid
(assuming a zero shift on this side)? But this is not what happens. E.g.
if this were the case then the following example from the website
cs2cs +proj=latlong +ellps=GRS80 +towgs84=-199.87,74.79,246.62 \
    +to +proj=latlong +datum=WGS84
could be equivalently written as
cs2cs +proj=latlong +ellps=GRS80 +towgs84=-199.87,74.79,246.62 \
    +to +proj=latlong +ellps=WGS84
But if that is done then no transformation happens because a datum shift
has only been specified on one side.

I think that examples like these were maybe the root cause of my
understanding that datum shift parameters needed to be supplied on both
sides for anything to happen at all.

Thanks for your attention to this

Paul

(Sorry, not sure how to copy this to the bug tracker)
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From alex.weidauer at huckfinn.de  Wed Jul 23 13:53:00 2003
From: alex.weidauer at huckfinn.de (Alexander Weidauer)
Date: Wed, 23 Jul 2003 22:53:00 +0200
Subject: [OSRS-PROJ] WKT complience 
References: <sef99de2.033@co5.dnr.state.mn.us>
Message-ID: <3F1EF5AC.7050705@huckfinn.de>

Hi Folks,

Is it possible to involve a WKT complient
report function or initization function into
the proj toolkit. Like pjInitWkT and pjReportWKT ..

Bye Alex


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Wed Jul 23 16:14:56 2003
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 23 Jul 2003 19:14:56 -0400
Subject: [OSRS-PROJ] WKT complience
In-Reply-To: <3F1EF5AC.7050705@huckfinn.de>
References: <sef99de2.033@co5.dnr.state.mn.us> <3F1EF5AC.7050705@huckfinn.de>
Message-ID: <3F1F16F0.90008@pobox.com>

Alexander Weidauer wrote:

> Hi Folks,
> 
> Is it possible to involve a WKT complient
> report function or initization function into
> the proj toolkit. Like pjInitWkT and pjReportWKT ..

Alex,

My OGR library (http://gdal.velocet.ca/projects/opengis/) has ability to
initialize an OGRSpatialReference.  This can then be converted to PROJ.4
format.  This whole set of conversion capability is pretty involved, and
I have felt it is out of scope to incorporate into PROJ.4.  Note that
the OGR coordinate transformation services are built on PROJ.4.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From alex.weidauer at huckfinn.de  Thu Jul 24 08:35:23 2003
From: alex.weidauer at huckfinn.de (Alexander Weidauer)
Date: Thu, 24 Jul 2003 17:35:23 +0200
Subject: [OSRS-PROJ] WKT complience
References: <sef99de2.033@co5.dnr.state.mn.us> <3F1EF5AC.7050705@huckfinn.de> <3F1F16F0.90008@pobox.com>
Message-ID: <3F1FFCBB.4030209@huckfinn.de>

Hi Frank,

Thank for that infomation.
I think I should have a look at the OGR library.

Bye Alex




Frank Warmerdam schrieb:
> Alexander Weidauer wrote:
> 
>> Hi Folks,
>>
>> Is it possible to involve a WKT complient
>> report function or initization function into
>> the proj toolkit. Like pjInitWkT and pjReportWKT ..
> 
> 
> Alex,
> 
> My OGR library (http://gdal.velocet.ca/projects/opengis/) has ability to
> initialize an OGRSpatialReference.  This can then be converted to PROJ.4
> format.  This whole set of conversion capability is pretty involved, and
> I have felt it is out of scope to incorporate into PROJ.4.  Note that
> the OGR coordinate transformation services are built on PROJ.4.
> 
> Best regards,


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul-grass at stjohnspoint.co.uk  Sat Jul 26 02:42:38 2003
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Sat, 26 Jul 2003 10:42:38 +0100 (BST)
Subject: [OSRS-PROJ] Re: remotesensing.org PROJ reading datum gridshift
 files unnecessarily?
In-Reply-To: <Pine.LNX.4.53.0307231503110.23982@agrippa.ukshells.co.uk>
Message-ID: <Pine.LNX.4.10.10307261008310.1025-200000@sjp.clara.co.uk>

May I suggest the attached patch to pj_transform.c as a starting point to
fixing the issues described in bug 368. The two main issues it addresses
are:

1. 
A grid shift is now only applied when both the source and destination
co-ordinate systems have datum parameters specified. This solves the
probem whereby the following two command-lines gave different output:

echo '-103 44' | cs2cs +proj=longlat +ellps=clrk66 +nadgrids=conus +to \
+proj=longlat +ellps=clrk66

echo '-103 44' | cs2cs +proj=longlat +ellps=clrk66 +to +proj=longlat \ 
+ellps=clrk66

(the first one incorrectly applied a shift to the input values)

2.
Transformation unconditionally goes through geocentric co-ordinates and
performs an ellipsoid conversion, even if datum parameters are specified
for one system but not the other or for neither. This solves the problem
whereby the following two command-lines gave different output:

echo '10 10' | cs2cs  +proj=latlong +ellps=clrk66 +to +proj=latlong \
+ellps=WGS84

echo '10 10' | cs2cs +proj=latlong +ellps=clrk66 +towgs84=0,0,0 +to \
+proj=latlong +ellps=WGS84 +towgs84=0,0,0

(the first one did not perform an ellipsoid conversion while the second
one did; after the patch is applied they both do)

As discussed before, it is not clear whether a simple ellipsoid conversion
should be done without warning if different ellipsoids but incomplete or
missing datum parameters are specified. The alternative solution would be
for pj_transform() to fail to transform the points in this case. However
on balance I feel the former behaviour is better because
(a) It does not change the existing behaviour too much, and
(b) It may be hard to test if two ellipsoids are the same (comparing
floating point values), e.g. deep inside GRASS there may be a rounding
error converting between eccentricity squared and inverse flattening, so
the parameters presented to PROJ may appear to be for different
ellipsoids. But after the conversion to and from geocentric co-ordinates
on these 'different' ellipsoids, the resulting error would presumably be
negligible.

Ideally, if we want to use pj_transform() to do a simple projection to or
from latitude/longitude, we would not need to specify an ellipsoid for the
second co-ordinate system (it would be assumed to be the same as the
first), but I realise that this is not possible the way pj_init() is
currently used to define the co-ordinate systems (it must have an
ellipsoid specified). The problem I have in mind here is that the method
used in GRASS to determine the second ellipsoid *may* result in a
negligible difference in the parameters that are supplied to PROJ such
that a floating point equality comparison may make the two ellipsoids
appear different. However as described above, this does not cause a
problem with the current PROJ or with the attached patch.

I hope it will be of some use

Paul Kelly

-------------- next part --------------
--- pj_transform.c.orig	Mon Mar 31 16:10:45 2003
+++ pj_transform.c	Fri Jul 25 20:45:01 2003
@@ -485,62 +485,62 @@
 /*	If this datum requires grid shifts, then apply it to geodetic   */
 /*      coordinates.                                                    */
 /* -------------------------------------------------------------------- */
-    if( srcdefn->datum_type == PJD_GRIDSHIFT )
+    if( srcdefn->datum_type != PJD_UNKNOWN
+        && dstdefn->datum_type != PJD_UNKNOWN )
     {
-        pj_apply_gridshift( pj_param(srcdefn->params,"snadgrids").s, 0, 
-                            point_count, point_offset, x, y, z );
-        CHECK_RETURN;
+        if( srcdefn->datum_type == PJD_GRIDSHIFT )
+        {
+            pj_apply_gridshift( pj_param(srcdefn->params,"snadgrids").s, 0, 
+                                point_count, point_offset, x, y, z );
+            CHECK_RETURN;
 
-        src_a = SRS_WGS84_SEMIMAJOR;
-        src_es = 0.006694379990;
-    }
+            src_a = SRS_WGS84_SEMIMAJOR;
+            src_es = 0.006694379990;
+        }
 
-    if( dstdefn->datum_type == PJD_GRIDSHIFT )
-    {
-        dst_a = SRS_WGS84_SEMIMAJOR;
-        dst_es = 0.006694379990;
+        if( dstdefn->datum_type == PJD_GRIDSHIFT )
+        {
+            dst_a = SRS_WGS84_SEMIMAJOR;
+            dst_es = 0.006694379990;
+        }
     }
-        
-/* ==================================================================== */
-/*      Do we need to go through geocentric coordinates?                */
-/* ==================================================================== */
-    if( srcdefn->datum_type == PJD_3PARAM 
-        || srcdefn->datum_type == PJD_7PARAM
-        || dstdefn->datum_type == PJD_3PARAM 
-        || dstdefn->datum_type == PJD_7PARAM)
-    {
+       
 /* -------------------------------------------------------------------- */
 /*      Convert to geocentric coordinates.                              */
 /* -------------------------------------------------------------------- */
-        pj_geodetic_to_geocentric( src_a, src_es,
-                                   point_count, point_offset, x, y, z );
-        CHECK_RETURN;
+    pj_geodetic_to_geocentric( src_a, src_es,
+                               point_count, point_offset, x, y, z );
+    CHECK_RETURN;
 
 /* -------------------------------------------------------------------- */
 /*      Convert between datums.                                         */
 /* -------------------------------------------------------------------- */
-        if( srcdefn->datum_type != PJD_UNKNOWN
-            && dstdefn->datum_type != PJD_UNKNOWN )
-        {
-            pj_geocentric_to_wgs84( srcdefn, point_count, point_offset,x,y,z);
-            CHECK_RETURN;
+    if( srcdefn->datum_type != PJD_UNKNOWN
+        && dstdefn->datum_type != PJD_UNKNOWN 
+        && (srcdefn->datum_type == PJD_3PARAM 
+        || srcdefn->datum_type == PJD_7PARAM
+        || dstdefn->datum_type == PJD_3PARAM 
+        || dstdefn->datum_type == PJD_7PARAM) )
+    {
+        pj_geocentric_to_wgs84( srcdefn, point_count, point_offset,x,y,z);
+        CHECK_RETURN;
 
-            pj_geocentric_from_wgs84( dstdefn, point_count,point_offset,x,y,z);
-            CHECK_RETURN;
-        }
+        pj_geocentric_from_wgs84( dstdefn, point_count,point_offset,x,y,z);
+        CHECK_RETURN;
+    }
 
 /* -------------------------------------------------------------------- */
 /*      Convert back to geodetic coordinates.                           */
 /* -------------------------------------------------------------------- */
-        pj_geocentric_to_geodetic( dst_a, dst_es,
-                                   point_count, point_offset, x, y, z );
-        CHECK_RETURN;
-    }
+    pj_geocentric_to_geodetic( dst_a, dst_es,
+                               point_count, point_offset, x, y, z );
+    CHECK_RETURN;
 
 /* -------------------------------------------------------------------- */
 /*      Apply grid shift to destination if required.                    */
 /* -------------------------------------------------------------------- */
-    if( dstdefn->datum_type == PJD_GRIDSHIFT )
+    if( srcdefn->datum_type != PJD_UNKNOWN
+        && dstdefn->datum_type == PJD_GRIDSHIFT )
     {
         pj_apply_gridshift( pj_param(dstdefn->params,"snadgrids").s, 1,
                             point_count, point_offset, x, y, z );

From warmerdam at pobox.com  Sat Jul 26 19:10:40 2003
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sat, 26 Jul 2003 22:10:40 -0400
Subject: [OSRS-PROJ] Re: remotesensing.org PROJ reading datum gridshift
 files unnecessarily?
In-Reply-To: <Pine.LNX.4.10.10307261008310.1025-200000@sjp.clara.co.uk>
References: <Pine.LNX.4.10.10307261008310.1025-200000@sjp.clara.co.uk>
Message-ID: <3F2334A0.7060002@pobox.com>

Paul Kelly wrote:
> May I suggest the attached patch to pj_transform.c as a starting point to
> fixing the issues described in bug 368. The two main issues it addresses
> are:

Paul,

I have added your email to the bugzilla bug report so it won't be lost
when I return to this problem after my weeks holidays.  You might want to
add yourself to the cc: list for the bug.

    http://bugzilla.remotesensing.org/process_bug.cgi

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From list672000 at yahoo.com  Wed Jul 30 08:04:51 2003
From: list672000 at yahoo.com (a a)
Date: Wed, 30 Jul 2003 08:04:51 -0700 (PDT)
Subject: [OSRS-PROJ] projection formulation
Message-ID: <20030730150451.34309.qmail@web10002.mail.yahoo.com>

Hello.

I would like gdalwarptest to be able to output files in a particular "map projection".  This list was recommended as a forum where folks might be able to suggest a suitable proj4 projection formulation.

I've attached a jpeg to this email that might communicate what I am thinking.  I will try to describe it in words here.  I want to reproject any equirectangular raster data that is above 45 degrees north or below 45 degrees south into a different "map projection".   That map projection is described by the two squares at the bottom of the jpeg.  If it is not clear from the jpeg what I am thinking, please let me know and I will try to describe using more words.

Thank you for your time.

   Mike





---------------------------------
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20030730/375a6063/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: equirectangularToSomething.JPG
Type: image/pjpeg
Size: 56103 bytes
Desc: equirectangularToSomething.JPG
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20030730/375a6063/attachment.bin>

From gerald.evenden at verizon.net  Wed Jul 30 10:03:31 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 30 Jul 2003 13:03:31 -0400
Subject: [OSRS-PROJ] projection formulation
In-Reply-To: <20030730150451.34309.qmail@web10002.mail.yahoo.com>
References: <20030730150451.34309.qmail@web10002.mail.yahoo.com>
Message-ID: <1059584611.2562.17.camel@localhost>

What is "gdalwarptest?"

What you seem to be describing is the segmented global map divided
into equatorial and polar regions.  So?  This is not the first time
although the latitude of transition is normally further North & South.

Segmenting a map (a good example is the typical display of Goode's
projection in most atlas' as well as in PROJ's manual is a graphical
operation.  Windowing and clipping of data into the segments is
not a function of PROJ.  PROJ is used only in projecting the data
using unique initializations for each window segment.

For the rather bizarre polar regions, a PROJ projection would have
to be developed mathematically and coded.

On Wed, 2003-07-30 at 11:04, a a wrote:
> Hello.
> 
> I would like gdalwarptest to be able to output files in a particular
> "map projection".  This list was recommended as a forum where folks
> might be able to suggest a suitable proj4 projection formulation.
> 
> I've attached a jpeg to this email that might communicate what I am
> thinking.  I will try to describe it in words here.  I want to
> reproject any equirectangular raster data that is above 45 degrees
> north or below 45 degrees south into a different "map projection".  
> That map projection is described by the two squares at the bottom of
> the jpeg.  If it is not clear from the jpeg what I am thinking, please
> let me know and I will try to describe using more words.
> 
> Thank you for your time.
> 
>    Mike
> 
> 
> 
> ______________________________________________________________________
> Do you Yahoo!?
> Yahoo! SiteBuilder - Free, easy-to-use web site design software
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From list672000 at yahoo.com  Wed Jul 30 11:54:31 2003
From: list672000 at yahoo.com (a a)
Date: Wed, 30 Jul 2003 11:54:31 -0700 (PDT)
Subject: [OSRS-PROJ] projection formulation
In-Reply-To: <1059584611.2562.17.camel@localhost>
Message-ID: <20030730185431.8728.qmail@web10007.mail.yahoo.com>

Gerald,
 
Thanks for responding.
 
gdalwarptest is an application that is part of the GDAL (http://remotesensing.org/gdal/) project.  gdalwarptest can be used to reproject a raster file.  gdalwarptest seems to make use of the Proj4 library for its reprojection work.
 
>From your last sentence, I take it that (currently) there is not a PROJ projection formulation for the "projection" that I described.  If I am correct, where would the new projection code be added; and is there a projection that is already coded that I could look at as an example?
 
Thanks.
 
    Mike
 

"Gerald I. Evenden" <gerald.evenden at verizon.net> wrote:
What is "gdalwarptest?"

What you seem to be describing is the segmented global map divided
into equatorial and polar regions. So? This is not the first time
although the latitude of transition is normally further North & South.

Segmenting a map (a good example is the typical display of Goode's
projection in most atlas' as well as in PROJ's manual is a graphical
operation. Windowing and clipping of data into the segments is
not a function of PROJ. PROJ is used only in projecting the data
using unique initializations for each window segment.

For the rather bizarre polar regions, a PROJ projection would have
to be developed mathematically and coded.

On Wed, 2003-07-30 at 11:04, a a wrote:
> Hello.
> 
> I would like gdalwarptest to be able to output files in a particular
> "map projection". This list was recommended as a forum where folks
> might be able to suggest a suitable proj4 projection formulation.
> 
> I've attached a jpeg to this email that might communicate what I am
> thinking. I will try to describe it in words here. I want to
> reproject any equirectangular raster data that is above 45 degrees
> north or below 45 degrees south into a different "map projection". 
> That map projection is described by the two squares at the bottom of
> the jpeg. If it is not clear from the jpeg what I am thinking, please
> let me know and I will try to describe using more words.
> 
> Thank you for your time.
> 
> Mike
> 
> 
> 
> ______________________________________________________________________
> Do you Yahoo!?
> Yahoo! SiteBuilder - Free, easy-to-use web site design software
-- 
Gerald I. Evenden 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


---------------------------------
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20030730/d2032e4e/attachment.html>

From gerald.evenden at verizon.net  Wed Jul 30 13:17:58 2003
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 30 Jul 2003 16:17:58 -0400
Subject: [OSRS-PROJ] projection formulation
In-Reply-To: <20030730185431.8728.qmail@web10007.mail.yahoo.com>
References: <20030730185431.8728.qmail@web10007.mail.yahoo.com>
Message-ID: <1059596278.2562.29.camel@localhost>

Dividing the map into the three regions proposed would not be a
PROJ function.  The only thing that "might" be coded into PROJ is
the odd polar projection.  Why not use the polar aspect of
azimuthal equidistant (a projection nearly as simple as the
equirectagular)?  Don't look for me to do the polar projection
unless you can find a significant group to support such a
projection.

But dividing the data into the three graphic regions is still
not a function of PROJ as there are no features withing the
system to do the windowing. 

On Wed, 2003-07-30 at 14:54, a a wrote:
> Gerald,
>  
> Thanks for responding.
>  
> gdalwarptest is an application that is part of the GDAL
> (http://remotesensing.org/gdal/) project.  gdalwarptest can be used to
> reproject a raster file.  gdalwarptest seems to make use of the Proj4
> library for its reprojection work.
>  
> From your last sentence, I take it that (currently) there is not a
> PROJ projection formulation for the "projection" that I described.  If
> I am correct, where would the new projection code be added; and is
> there a projection that is already coded that I could look at as an
> example?
>  
> Thanks.
>  
>     Mike
>  
> "Gerald I. Evenden" <gerald.evenden at verizon.net> wrote:
>         What is "gdalwarptest?"
>         	...
	...
-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From neteler at itc.it  Wed Jul 30 14:22:31 2003
From: neteler at itc.it (Markus Neteler)
Date: Wed, 30 Jul 2003 23:22:31 +0200
Subject: [OSRS-PROJ] EPSG file and Gauss-Boaga Italy definition
Message-ID: <20030730232231.B6529@itc.it>

Dear list members,

while comparing our definition of Gauss-Boaga (Italy)
in GRASS GIS and the definition ins the epsg file of PROJ4
we found a surprising (to me) difference:

EPSG file:
# Monte Mario (Rome) / Italy zone 1
<26591> +proj=tmerc +lat_0=0 +lon_0=21.45233333333333 +k=0.999600
+x_0=1500000 +y_0=0 +ellps=intl +pm=rome +units=m +no_defs no_defs <>
                                                                                                                            
# Monte Mario (Rome) / Italy zone 2
<26592> +proj=tmerc +lat_0=0 +lon_0=27.45233333333333 +k=0.999600
+x_0=2520000 +y_0=0 +ellps=intl +pm=rome +units=m +no_defs no_defs <>
                                                                                                                            
According to what we have used so far in GRASS,
the lon_0 values differ:

As far as I know, it should be
<26591>: +lon_0=9.0
<26592>: +lon_0=15.0

Both lon_0=21.45 and lon_0=27.45 are outside of Italy.

Probably I am missing something.
A hint is most welcome,

 Markus Neteler

-- 
Markus Neteler     <neteler at itc.it>       http://mpa.itc.it
ITC-irst, Istituto per la Ricerca Scientifica e Tecnologica
MPBA - Predictive Models for Biol. & Environ. Data Analysis
Via Sommarive, 18        -       38050 Povo (Trento), Italy
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


