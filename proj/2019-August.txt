From martin.desruisseaux at geomatys.com  Thu Aug  1 00:00:52 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 1 Aug 2019 09:00:52 +0200
Subject: [PROJ] Early vs Late binding
In-Reply-To: <CABqeU+i32PrydoB8Rnd=ZUkqJcfhb_8DNEc-AbW=dv4hLM5zCA@mail.gmail.com>
References: <CAB28AsjyzRrBvpPpJ65JiLJBCMprL_nSEqLTBcJVf_9thuNhRg@mail.gmail.com>
 <3ab47e037ed34c5f890ed296ff436f35@sdfe.dk>
 <486e8a66-814e-cfdb-8168-534f1add0554@geomatys.com>
 <CABqeU+i32PrydoB8Rnd=ZUkqJcfhb_8DNEc-AbW=dv4hLM5zCA@mail.gmail.com>
Message-ID: <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com>

Hello Cameron

Le 01/08/2019 à 04:32, Cameron Shorter a écrit :

> I'm hoping to expand upon descriptions of potential solutions to our
> GDA2020/GDA94/WGS84 Web Mercator map misalignment problem, (possibly
> extended to discuss a time-dependent reference frame).
>
> I'm confused about the meaning of: "early-binding versus late-binding
> implementations". Is it relevant to problems relevant to WGS84
> map-misalignment or a time-dependent reference frame? If so, I'm
> hoping you might be able to help explain how it might need to be
> described in suggested solutions.
>
Yes, "early-binding" versus "late-binding" are relevant to
map-misalignment problem. But you can avoid them if desired by using
Roger's "hub transformation technique" terms instead, which may be more
intuitive. I used "early/late-binding" terms because they are defined by
IOGP (the same organization than the one publishing the EPSG geodetic
dataset) in Geospatial Integrity of Geoscience Software (GIGS), Part 1,
§3.4 (report 430-1, September 2011) [1]. But I see "hub transformation
technique" as synonymous to "early-binding implementation".

In hub transformation technique, a universal hub is selected (usually
WGS84, but not necessarily) and all CRS contain transformation
parameters to that hub (the "TOWGS84" element in WKT 1). The term
"early-binding" is used because those transformation parameters are bind
to the CRS early, right at CRS definition time. By contrast, when the
hub transformation technique is NOT used, there is no transformation
parameter bind to the CRS definition (no "TOWGS84" element, which does
not exist anymore in WKT 2). The software is then forced to search for
transformation parameters at transformation definition time (when source
CRS, target CRS, epoch and area of interest are known) instead than CRS
definition time, which is "late-binding".

The hub transformation technique (early binding) seems appealing because
it is simpler. But it assumes that transformation from CRS A to CRS B
can always be represented by transformation from CRS A to the hub
(WGS84), followed by transformation from the hub to CRS B. Intuitively
is seems an approach that should work. But actually this reasoning
assumes that transformations from/to the hub are exact. As soon as we
take in account that transformations from/to the hub are approximate,
the assumption that "A to B" is equivalent to "A to hub to B" stop being
true.

We can compare the problem with linear regression (this little
experiment can be done in an Excel spreadsheet). Let say we have
one-dimensional coordinates in three CRS: A, B and C. Let say we can
establish linear correlations between A, B and C with some residual
errors. We could express transformation from A to B as B=/f/(A) where
the /f/ function has been determined by least  squares method. Then we
can express transformation from B to C as C=/g/(B) where the /g/
function has been determined by least squares method too. Finally the
transformation from A to C could be represented by C = /g/(/f/(A)). That
would be identical to a C = /h/(A) function computed directly from A and
C data (ignoring completely B) if all those functions were exact. But
because they are computed by least squares method, /g/(/f/(A)) is not
identical to /h/(A) because the errors were not minimized in the same way.

ISO 19111 distinguishes "conversions" and "transformations". One way to
see them would be to said that conversions are exact (ignoring rounding
errors) while transformations have errors related to the physical world.
The hub technique can works for a chain of conversions (including map
projections), but does not work for a chain of transformations. This is
unrelated to the choice of WGS84 as a hub. Even if we try to define a
new universal hub, as long as transformations from/to that hub can not
be exact, the hub transformation technique will continue to cause
misalignments.

So in summary:

  * "Early binding" ≈ hub transformation technique.
  * "Late binding" ≈ hub transformation technique NOT used, replaced by
    a more complex technique consisting in searching parameters in the
    EPSG database after the transformation context (source, target,
    epoch, area of interest) is known.
  * The problem of hub transformation technique is independent of WGS84.
    It is caused by the fact that transformations to/from the hub are
    approximate. Any other hub we could invent in replacement of WGS84
    will have the same problem, unless we can invent a hub for which
    transformations are exact (I think that if such hub existed, we
    would have already heard about it).

The solution proposed by ISO 19111 (in my understanding) is:

  * Forget about hub (WGS84 or other), unless the simplicity of
    early-binding is considered more important than accuracy.
  * Associating a CRS to a coordinate set (geometry or raster) is no
    longer sufficient. A {CRS, epoch} tuple must be associated. ISO
    19111 calls this tuple "Coordinate metadata". From a programmatic
    API point of view, this means that getCoordinateReferenceSystem()
    method in Geometry objects (for instance) needs to be replaced by a
    getCoordinateMetadata() method.

Said otherwise, the solution to misalignment problem involves two parts:
dynamic datum and late-binding implementation. Dynamic datum is enabled
by replacing association to CRS by association to {CRS, epoch} tuple in
all client applications (geometries, rasters, etc.). Late-binding is
about knowing the context in which the transformation will be applied,
and is more an implementation issue (largely solved in PROJ 6).

Regards,

    Martin

[1] https://www.iogp.org/bookstore/product/geospatial-integrity-of-geoscience-software-part-1-gigs-guidelines/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190801/df83b084/attachment-0001.html>

From ronrussell902 at gmail.com  Thu Aug  1 01:06:55 2019
From: ronrussell902 at gmail.com (Ron Russell)
Date: Thu, 1 Aug 2019 09:06:55 +0100
Subject: [PROJ] Early vs Late binding
In-Reply-To: <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com>
References: <CAB28AsjyzRrBvpPpJ65JiLJBCMprL_nSEqLTBcJVf_9thuNhRg@mail.gmail.com>
 <3ab47e037ed34c5f890ed296ff436f35@sdfe.dk>
 <486e8a66-814e-cfdb-8168-534f1add0554@geomatys.com>
 <CABqeU+i32PrydoB8Rnd=ZUkqJcfhb_8DNEc-AbW=dv4hLM5zCA@mail.gmail.com>
 <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com>
Message-ID: <CABJcdakP99iZG1peum+JZK3NmKFF46WYSp2--JMADPVnVL78Ug@mail.gmail.com>

Thank you Martin.

I now understand the reason for PROJ 6!

Your example is worth a thousand words!

Ron
--
Ron Russell, from my Mobile Phone

On Thu, 1 Aug 2019, 08:01 Martin Desruisseaux, <
martin.desruisseaux at geomatys.com> wrote:

> Hello Cameron
>
> Le 01/08/2019 à 04:32, Cameron Shorter a écrit :
>
> I'm hoping to expand upon descriptions of potential solutions to our
> GDA2020/GDA94/WGS84 Web Mercator map misalignment problem, (possibly
> extended to discuss a time-dependent reference frame).
>
> I'm confused about the meaning of: "early-binding versus late-binding
> implementations". Is it relevant to problems relevant to WGS84
> map-misalignment or a time-dependent reference frame? If so, I'm hoping you
> might be able to help explain how it might need to be described in
> suggested solutions.
>
> Yes, "early-binding" versus "late-binding" are relevant to
> map-misalignment problem. But you can avoid them if desired by using
> Roger's "hub transformation technique" terms instead, which may be more
> intuitive. I used "early/late-binding" terms because they are defined by
> IOGP (the same organization than the one publishing the EPSG geodetic
> dataset) in Geospatial Integrity of Geoscience Software (GIGS), Part 1,
> §3.4 (report 430-1, September 2011) [1]. But I see "hub transformation
> technique" as synonymous to "early-binding implementation".
>
> In hub transformation technique, a universal hub is selected (usually
> WGS84, but not necessarily) and all CRS contain transformation parameters
> to that hub (the "TOWGS84" element in WKT 1). The term "early-binding" is
> used because those transformation parameters are bind to the CRS early,
> right at CRS definition time. By contrast, when the hub transformation
> technique is NOT used, there is no transformation parameter bind to the CRS
> definition (no "TOWGS84" element, which does not exist anymore in WKT 2).
> The software is then forced to search for transformation parameters at
> transformation definition time (when source CRS, target CRS, epoch and area
> of interest are known) instead than CRS definition time, which is
> "late-binding".
>
> The hub transformation technique (early binding) seems appealing because
> it is simpler. But it assumes that transformation from CRS A to CRS B can
> always be represented by transformation from CRS A to the hub (WGS84),
> followed by transformation from the hub to CRS B. Intuitively is seems an
> approach that should work. But actually this reasoning assumes that
> transformations from/to the hub are exact. As soon as we take in account
> that transformations from/to the hub are approximate, the assumption that
> "A to B" is equivalent to "A to hub to B" stop being true.
>
> We can compare the problem with linear regression (this little experiment
> can be done in an Excel spreadsheet). Let say we have one-dimensional
> coordinates in three CRS: A, B and C. Let say we can establish linear
> correlations between A, B and C with some residual errors. We could express
> transformation from A to B as B=*f*(A) where the *f* function has been
> determined by least  squares method. Then we can express transformation
> from B to C as C=*g*(B) where the *g* function has been determined by
> least squares method too. Finally the transformation from A to C could be
> represented by C = *g*(*f*(A)). That would be identical to a C = *h*(A)
> function computed directly from A and C data (ignoring completely B) if all
> those functions were exact. But because they are computed by least squares
> method, *g*(*f*(A)) is not identical to *h*(A) because the errors were
> not minimized in the same way.
>
> ISO 19111 distinguishes "conversions" and "transformations". One way to
> see them would be to said that conversions are exact (ignoring rounding
> errors) while transformations have errors related to the physical world.
> The hub technique can works for a chain of conversions (including map
> projections), but does not work for a chain of transformations. This is
> unrelated to the choice of WGS84 as a hub. Even if we try to define a new
> universal hub, as long as transformations from/to that hub can not be
> exact, the hub transformation technique will continue to cause
> misalignments.
>
> So in summary:
>
>    - "Early binding" ≈ hub transformation technique.
>    - "Late binding" ≈ hub transformation technique NOT used, replaced by
>    a more complex technique consisting in searching parameters in the EPSG
>    database after the transformation context (source, target, epoch, area of
>    interest) is known.
>    - The problem of hub transformation technique is independent of WGS84.
>    It is caused by the fact that transformations to/from the hub are
>    approximate. Any other hub we could invent in replacement of WGS84 will
>    have the same problem, unless we can invent a hub for which transformations
>    are exact (I think that if such hub existed, we would have already heard
>    about it).
>
> The solution proposed by ISO 19111 (in my understanding) is:
>
>    - Forget about hub (WGS84 or other), unless the simplicity of
>    early-binding is considered more important than accuracy.
>    - Associating a CRS to a coordinate set (geometry or raster) is no
>    longer sufficient. A {CRS, epoch} tuple must be associated. ISO 19111 calls
>    this tuple "Coordinate metadata". From a programmatic API point of view,
>    this means that getCoordinateReferenceSystem() method in Geometry
>    objects (for instance) needs to be replaced by a
>    getCoordinateMetadata() method.
>
> Said otherwise, the solution to misalignment problem involves two parts:
> dynamic datum and late-binding implementation. Dynamic datum is enabled by
> replacing association to CRS by association to {CRS, epoch} tuple in all
> client applications (geometries, rasters, etc.). Late-binding is about
> knowing the context in which the transformation will be applied, and is
> more an implementation issue (largely solved in PROJ 6).
>
> Regards,
>
>     Martin
>
> [1] https://www.iogp.org/bookstore/product/geospatial-integrity-of-geoscience-software-part-1-gigs-guidelines/
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190801/4a4feeec/attachment.html>

From gdt at lexort.com  Thu Aug  1 04:27:36 2019
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 01 Aug 2019 07:27:36 -0400
Subject: [PROJ] Early vs Late binding
In-Reply-To: <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com> (Martin
 Desruisseaux's message of "Thu, 1 Aug 2019 09:00:52 +0200")
References: <CAB28AsjyzRrBvpPpJ65JiLJBCMprL_nSEqLTBcJVf_9thuNhRg@mail.gmail.com>
 <3ab47e037ed34c5f890ed296ff436f35@sdfe.dk>
 <486e8a66-814e-cfdb-8168-534f1add0554@geomatys.com>
 <CABqeU+i32PrydoB8Rnd=ZUkqJcfhb_8DNEc-AbW=dv4hLM5zCA@mail.gmail.com>
 <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com>
Message-ID: <rmi4l31unvb.fsf@s1.lexort.com>

Martin Desruisseaux <martin.desruisseaux at geomatys.com> writes:

> The hub transformation technique (early binding) seems appealing because
> it is simpler. But it assumes that transformation from CRS A to CRS B
> can always be represented by transformation from CRS A to the hub
> (WGS84), followed by transformation from the hub to CRS B. Intuitively
> is seems an approach that should work. But actually this reasoning
> assumes that transformations from/to the hub are exact. As soon as we
> take in account that transformations from/to the hub are approximate,
> the assumption that "A to B" is equivalent to "A to hub to B" stop being
> true.

It strikes me that there are two separate problems wrapped up in the
conventional hub approach:

  one is the unavoidable accuracy issues you talk about, that would
  exist even if we used a recent ITRF as the hub

  the other is the confusion about WGS84 and the multiple versions of
  it.  While I can see that a user's label of WGS84 should be viewed as
  meaning "I have data in some WGS84 realization and I don't know
  which", that view doesn't make sense for WGS84-as-hub, where we should
  have able to label those transformation paramaters to a particular
  realization of WGS84.

My impression is that a lot (most?) of the hub trouble avoidable by late
binding is about WGS84-as-set, and probably some of it is about
transforming between e.g. different NAD83 realizations, where the
relationship between them might be known more precisely than the
NAD83/ITRF releationship.

(I get it that the late-binding appraoch avoids these problems by
searching for low-error transformations, and I am not meaning to
question the wisdom of that approach.)




Related to the larger discussion, I can see the point of defining the
longstanding WGS84 codepoint as referring to the set of WGS84
realizations (and thus not very accurate), as I hear has been decided in
the larger world.  Once that decision has been made, however, it seems
that

  each WGS84 realization should have a separate codepoint

  all use of the codepoint referring to the set should be strongly
  discouraged, in favor of figuring out what people really mean and
  saying that instead

  any protocol which has the set-style WGS84 codepoint hardcoded in it
  needs to be fixed to carry a datum codepoint along with the protocol.
  Or if that's not possible, to specify that it means the latest ITRF or
  the latest available WGS84 realization.

In the protocol case, people with fuzzy data will still get fuzzy
results, but with protocols defined with non-fuzzy datums, then
non-fuzzy data should be handeld accurately.

Is that how others see this?

From mnrengineering at gmail.com  Thu Aug  1 08:39:16 2019
From: mnrengineering at gmail.com (Michel Ruijter)
Date: Thu, 1 Aug 2019 17:39:16 +0200
Subject: [PROJ] CRS for small Island (Saba),
 conversion of known projection and transformation parameters
 (Trimble) into proj4 string
Message-ID: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>

Ls,
For a small Caribbean Island (Saba) I am trying to get the proper proj4 CRS
(for Qgis) in order to use GPS based coordinates on local grid related
system
The following projection and datum parameters are used in a TRimble
software package (and used in the RTK equipment) in local "Kadaster"
coordinates  to set out benchmarks etc

Ellipsoid
Ellipsoid Name   : (WGS 84)
Flattening 1/f   : 297.000
Semi Major Axis  : 6378388.000m


Datum Transformation : Seven Parameter
WGS84 to (WGS 84) (sounds a little bit confusing since ellipsoid seems to
be the international ellipsoid
Translation X    :   194.245m           Rotation X :  0°05'51.504629"
Translation Y    :  -154.530m           Rotation Y : -0°11'41.841439"
Translation Z    :   102.676m           Rotation Z :  0°04'11.988863"
Scale Factor     : 6.2965571264 ppm


Transverse Mercator Projection
Projection Origin                       False Origin
Latitude      :   17°38'10.36749"NFalse Northing  :       1967.190m
Longitude     :   63°14'15.07247"WFalse Easting   :       4714.870m
Height        :          N/A            False Elevation    :             N/A
Scale Factor  :   1.00000000

Test coordinates:
WGS84 in°N         WGS84 in°E         z(ellips)       LocalE in m
LocalN in m   Z(msl)
1 17.61578594    -63.25156367       -41.19          3215.38
-287.59            2.065
2 17.62323214    -63.23827421       290.27          4629.098
 530.823       333.55

These coordinates have been verified with pctrans (software of the dutch
navy) and the conversion (Trimble) seems to be good to within 2 cm

I have tried to convert the translation rotation and projection into a
proj4 structure within Qgis
I converted the rotation into arcseconds:

Rotation X :  0°05'51.504629"  (351.504629")
Rotation Y : -0°11'41.841439" (-701.841439")
Rotation Z :  0°04'11.988863" (251.988863")

+proj=tmerc +lat_0=17.63621319 +lon_0=-63.23752013 +k=1 +x_0=4714.870 +y_0=
1967.19  +ellps=intl
+towgs84=194.245,-154.53,102.676,-351.5046,701.841,-251.9889,6.296557
+units=m +no_defs

(note all signs of of rotation  have been changed compared to Trimble
notation  )

application of this proj4 string in Qgis results in the following two local
grid positions:
1  3250.9 mE    -209.59mN
2  4658.157mE   620.26 mN

I also tried to use OS4GEO installed on a win10 machine in many variants
e.g.

echo -63.25156367 17.61578594 |cs2cs +proj=latlong +ellps=WGS84
+towgs84=0,0,0 +no_defs +to +proj=tmerc +ellps=WGS84 +lat_0=17.63621319
+lon_0=-63.23752013 +k=1 +x_0=4714.87 +y_0=1967.19
+towgs84=-194.245,154.53,-102.676,-351.5046,701.841,-251.9889,-6.296557
+units=m +no_defs

 with as a result x=3458.54 y=-202.09 z=286.19

I have tried to use the pipeline option as well however, in one of the
first steps OSgeo seems not to convert coordinates properly:
e.g. with the statement below I expect to get 17.00 17.00 as an answer but
I get 17.00 0.00 !!!

echo 17.0 17.0 | proj +proj=pipeline +step +proj=cart +ellps=intl +step
+proj=cart +inv +ellps=intl


I have tried a number of versions of this transformation (changing signs in
the towgs string string but this does  not result in proper coordinates.

What is wrong with this proj4 string based on the rotation and projection
information from the Trimble software and how in general can we use the
translation and projection information into a valid proj4 string?

Kind regards,

Michel Ruijter

-- 
Michel Ruijter
MNRengineering
de Kempenaerstraat 82, 2341GP, Oegstgeest
mob: +31638944484, tel: +31718897137

<http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
Virusvrij.
www.avg.com
<http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190801/5dfa4a51/attachment-0001.html>

From nyall.dawson at gmail.com  Thu Aug  1 21:41:38 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 2 Aug 2019 14:41:38 +1000
Subject: [PROJ] Reviews requested: On GDA2020, PROJ 6 and QGIS
In-Reply-To: <CABqeU+jKkkC63FYzO5pwrK5L=A0UNZozsJD017DEJui=Gv+3Ew@mail.gmail.com>
References: <CAB28AsjyzRrBvpPpJ65JiLJBCMprL_nSEqLTBcJVf_9thuNhRg@mail.gmail.com>
 <CABqeU+jKkkC63FYzO5pwrK5L=A0UNZozsJD017DEJui=Gv+3Ew@mail.gmail.com>
Message-ID: <CAB28AshsgaZHv4pVfBB3aKvtZVBeNEfUa+hUmGD5iXaxZn1Rhw@mail.gmail.com>

On Wed, 31 Jul 2019 at 15:56, Cameron Shorter <cameron.shorter at gmail.com> wrote:
>
> Nicely written Nyall,
> I found this very informative and feel it will be very useful for those following your footsteps.
> I've made a few minor suggestions, mostly limited to syntax and writing style.

Thanks Cameron -- I've accepted and adapted for your great suggestions!

Nyall

> Warm regards, Cameron
>
> On Mon, 29 Jul 2019 at 16:19, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>>
>> Hi list!
>>
>> I recently spent some time writing up my experiences with porting QGIS
>> to proj 6, and the lessons learnt and recommendations for other
>> applications which want to port to proj 6 OR (more specifically)
>> ensure that they correctly handle the Australian/GDA2020 use case.
>>
>> If I can push my luck and ask anything more of this community -- I'd
>> love some peer reviews of this document!
>>
>> When it's finalised, we'll be distributing it widely as our
>> recommendations for handling this situation, and likely presenting on
>> it at conferences such as FOSS4G Oceania.
>>
>> A draft copy is available for review at:
>> https://docs.google.com/document/d/1bYp9oYvKx5VnkAtv5OffNRcTuLrevd8DHAjxzRzXFoU/edit?usp=sharing
>>
>> Many thanks in advance!
>> Nyall
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
> --
> Cameron Shorter
> Technology Demystifier
> Open Technologies and Geospatial Consultant
>
> M +61 (0) 419 142 254
>
>
>

From nyall.dawson at gmail.com  Thu Aug  1 21:47:03 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 2 Aug 2019 14:47:03 +1000
Subject: [PROJ] Early vs Late binding
In-Reply-To: <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com>
References: <CAB28AsjyzRrBvpPpJ65JiLJBCMprL_nSEqLTBcJVf_9thuNhRg@mail.gmail.com>
 <3ab47e037ed34c5f890ed296ff436f35@sdfe.dk>
 <486e8a66-814e-cfdb-8168-534f1add0554@geomatys.com>
 <CABqeU+i32PrydoB8Rnd=ZUkqJcfhb_8DNEc-AbW=dv4hLM5zCA@mail.gmail.com>
 <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com>
Message-ID: <CAB28AsgxW7DjP24mbvdUpQg2eoQN-z3svHXRwvUNwbPujTi7xA@mail.gmail.com>

On Thu, 1 Aug 2019 at 17:01, Martin Desruisseaux
<martin.desruisseaux at geomatys.com> wrote:
>
>
> "Early binding" ≈ hub transformation technique.
> "Late binding" ≈ hub transformation technique NOT used, replaced by a more complex technique consisting in searching parameters in the EPSG database after the transformation context (source, target, epoch, area of interest) is known.
> The problem of hub transformation technique is independent of WGS84. It is caused by the fact that transformations to/from the hub are approximate. Any other hub we could invent in replacement of WGS84 will have the same problem, unless we can invent a hub for which transformations are exact (I think that if such hub existed, we would have already heard about it).
>
> The solution proposed by ISO 19111 (in my understanding) is:
>
> Forget about hub (WGS84 or other), unless the simplicity of early-binding is considered more important than accuracy.
> Associating a CRS to a coordinate set (geometry or raster) is no longer sufficient. A {CRS, epoch} tuple must be associated. ISO 19111 calls this tuple "Coordinate metadata". From a programmatic API point of view, this means that getCoordinateReferenceSystem() method in Geometry objects (for instance) needs to be replaced by a getCoordinateMetadata() method.
>
> Said otherwise, the solution to misalignment problem involves two parts: dynamic datum and late-binding implementation. Dynamic datum is enabled by replacing association to CRS by association to {CRS, epoch} tuple in all client applications (geometries, rasters, etc.). Late-binding is about knowing the context in which the transformation will be applied, and is more an implementation issue (largely solved in PROJ 6).

Just wanted to extend my thanks for this clear, well reasoned
explanation. It's much appreciated.

Nyall

>
> Regards,
>
>     Martin
>
> [1] https://www.iogp.org/bookstore/product/geospatial-integrity-of-geoscience-software-part-1-gigs-guidelines/
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From martin.desruisseaux at geomatys.com  Thu Aug  1 23:11:06 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Fri, 2 Aug 2019 08:11:06 +0200
Subject: [PROJ] Early vs Late binding
In-Reply-To: <CAB28AsgxW7DjP24mbvdUpQg2eoQN-z3svHXRwvUNwbPujTi7xA@mail.gmail.com>
References: <CAB28AsjyzRrBvpPpJ65JiLJBCMprL_nSEqLTBcJVf_9thuNhRg@mail.gmail.com>
 <3ab47e037ed34c5f890ed296ff436f35@sdfe.dk>
 <486e8a66-814e-cfdb-8168-534f1add0554@geomatys.com>
 <CABqeU+i32PrydoB8Rnd=ZUkqJcfhb_8DNEc-AbW=dv4hLM5zCA@mail.gmail.com>
 <f187ac69-eec5-f972-7af9-c13dc70309b6@geomatys.com>
 <CAB28AsgxW7DjP24mbvdUpQg2eoQN-z3svHXRwvUNwbPujTi7xA@mail.gmail.com>
Message-ID: <a76e876b-1b36-8a48-7005-f6a916cb69ac@geomatys.com>

Le 02/08/2019 à 06:47, Nyall Dawson a écrit :
> Just wanted to extend my thanks for this clear, well reasoned
> explanation. It's much appreciated.

Thanks all for your kind words, this is appreciated.

    Martin



From nick_mein at trimble.com  Fri Aug  2 01:44:52 2019
From: nick_mein at trimble.com (Nick Mein)
Date: Fri, 2 Aug 2019 20:44:52 +1200
Subject: [PROJ] CRS for small Island (Saba),
 conversion of known projection and transformation parameters
 (Trimble) into proj4 string
In-Reply-To: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>
References: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>
Message-ID: <CAF3Sn4XqLvQZNigt97pbnMs8N5Uxqh2ZHsmYuB0P5RUB1EZUqQ@mail.gmail.com>

There was a long discussion in this mailing list back in 2017 about 7
parameter transformations with large rotations. You can find the discussion
at
http://osgeo-org.1560.x6.nabble.com/towgs84-approximation-error-td5313738.html
.

I'm not sure that there was ever a resolution to the discussion. But if
PROJ is still using small-angle approximations for 7 parameter
transformations then that is probably the reason that it isn't giving the
expected results?

On Fri, 2 Aug 2019 at 03:39, Michel Ruijter <mnrengineering at gmail.com>
wrote:

> Ls,
> For a small Caribbean Island (Saba) I am trying to get the proper proj4
> CRS (for Qgis) in order to use GPS based coordinates on local grid related
> system
> The following projection and datum parameters are used in a TRimble
> software package (and used in the RTK equipment) in local "Kadaster"
> coordinates  to set out benchmarks etc
>
> Ellipsoid
> Ellipsoid Name   : (WGS 84)
> Flattening 1/f   : 297.000
> Semi Major Axis  : 6378388.000m
>
>
> Datum Transformation : Seven Parameter
> WGS84 to (WGS 84) (sounds a little bit confusing since ellipsoid seems to
> be the international ellipsoid
> Translation X    :   194.245m           Rotation X :  0°05'51.504629"
> Translation Y    :  -154.530m           Rotation Y : -0°11'41.841439"
> Translation Z    :   102.676m           Rotation Z :  0°04'11.988863"
> Scale Factor     : 6.2965571264 ppm
>
>
> Transverse Mercator Projection
> Projection Origin                       False Origin
> Latitude      :   17°38'10.36749"NFalse Northing  :       1967.190m
> Longitude     :   63°14'15.07247"WFalse Easting   :       4714.870m
> Height        :          N/A            False Elevation    :
> N/A
> Scale Factor  :   1.00000000
>
> Test coordinates:
> WGS84 in°N         WGS84 in°E         z(ellips)       LocalE in m
> LocalN in m   Z(msl)
> 1 17.61578594    -63.25156367       -41.19          3215.38
> -287.59            2.065
> 2 17.62323214    -63.23827421       290.27          4629.098
>  530.823       333.55
>
> These coordinates have been verified with pctrans (software of the dutch
> navy) and the conversion (Trimble) seems to be good to within 2 cm
>
> I have tried to convert the translation rotation and projection into a
> proj4 structure within Qgis
> I converted the rotation into arcseconds:
>
> Rotation X :  0°05'51.504629"  (351.504629")
> Rotation Y : -0°11'41.841439" (-701.841439")
> Rotation Z :  0°04'11.988863" (251.988863")
>
> +proj=tmerc +lat_0=17.63621319 +lon_0=-63.23752013 +k=1 +x_0=4714.870
> +y_0= 1967.19  +ellps=intl
> +towgs84=194.245,-154.53,102.676,-351.5046,701.841,-251.9889,6.296557
> +units=m +no_defs
>
> (note all signs of of rotation  have been changed compared to Trimble
> notation  )
>
> application of this proj4 string in Qgis results in the following two
> local grid positions:
> 1  3250.9 mE    -209.59mN
> 2  4658.157mE   620.26 mN
>
> I also tried to use OS4GEO installed on a win10 machine in many variants
> e.g.
>
> echo -63.25156367 17.61578594 |cs2cs +proj=latlong +ellps=WGS84
> +towgs84=0,0,0 +no_defs +to +proj=tmerc +ellps=WGS84 +lat_0=17.63621319
> +lon_0=-63.23752013 +k=1 +x_0=4714.87 +y_0=1967.19
> +towgs84=-194.245,154.53,-102.676,-351.5046,701.841,-251.9889,-6.296557
> +units=m +no_defs
>
>  with as a result x=3458.54 y=-202.09 z=286.19
>
> I have tried to use the pipeline option as well however, in one of the
> first steps OSgeo seems not to convert coordinates properly:
> e.g. with the statement below I expect to get 17.00 17.00 as an answer but
> I get 17.00 0.00 !!!
>
> echo 17.0 17.0 | proj +proj=pipeline +step +proj=cart +ellps=intl +step
> +proj=cart +inv +ellps=intl
>
>
> I have tried a number of versions of this transformation (changing signs
> in the towgs string string but this does  not result in proper coordinates.
>
> What is wrong with this proj4 string based on the rotation and projection
> information from the Trimble software and how in general can we use the
> translation and projection information into a valid proj4 string?
>
> Kind regards,
>
> Michel Ruijter
>
> --
> Michel Ruijter
> MNRengineering
> de Kempenaerstraat 82, 2341GP, Oegstgeest
> mob: +31638944484, tel: +31718897137
>
>
> <http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail> Virusvrij.
> www.avg.com
> <http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
> <#m_5149735053632066405_DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190802/e3036d2f/attachment-0001.html>

From kreve at sdfe.dk  Fri Aug  2 01:54:23 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 2 Aug 2019 08:54:23 +0000
Subject: [PROJ] CRS for small Island (Saba),
 conversion of known projection and transformation parameters
 (Trimble) into proj4 string
In-Reply-To: <CAF3Sn4XqLvQZNigt97pbnMs8N5Uxqh2ZHsmYuB0P5RUB1EZUqQ@mail.gmail.com>
References: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>
 <CAF3Sn4XqLvQZNigt97pbnMs8N5Uxqh2ZHsmYuB0P5RUB1EZUqQ@mail.gmail.com>
Message-ID: <da101706920044d181aea8de31a6cb60@sdfe.dk>

Nick,

With the helmert [0] operation you can choose to use either the small angle approximation or the full set of equations. Enable the full equations with the +exact flag.


Michel,

I haven’t studied you email closely, but at least I can see that in your example with the pipeline you are using proj where should be using cct. The reason being that proj only works in 2D and you are asking for a 3D transformation. Generally, proj should only be used for projection of geodetic coordinates.

/Kristian

[0] https://proj.org/operations/transformations/helmert.html

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nick Mein
Sent: 2. august 2019 10:45
To: Michel Ruijter <mnrengineering at gmail.com>
Cc: PROJ at lists.osgeo.org
Subject: Re: [PROJ] CRS for small Island (Saba), conversion of known projection and transformation parameters (Trimble) into proj4 string

There was a long discussion in this mailing list back in 2017 about 7 parameter transformations with large rotations. You can find the discussion at http://osgeo-org.1560.x6.nabble.com/towgs84-approximation-error-td5313738.html.

I'm not sure that there was ever a resolution to the discussion. But if PROJ is still using small-angle approximations for 7 parameter transformations then that is probably the reason that it isn't giving the expected results?

On Fri, 2 Aug 2019 at 03:39, Michel Ruijter <mnrengineering at gmail.com<mailto:mnrengineering at gmail.com>> wrote:
Ls,
For a small Caribbean Island (Saba) I am trying to get the proper proj4 CRS (for Qgis) in order to use GPS based coordinates on local grid related system
The following projection and datum parameters are used in a TRimble software package (and used in the RTK equipment) in local "Kadaster" coordinates  to set out benchmarks etc

Ellipsoid
Ellipsoid Name   : (WGS 84)
Flattening 1/f   : 297.000
Semi Major Axis  : 6378388.000m


Datum Transformation : Seven Parameter
WGS84 to (WGS 84) (sounds a little bit confusing since ellipsoid seems to be the international ellipsoid
Translation X    :   194.245m           Rotation X :  0°05'51.504629"
Translation Y    :  -154.530m           Rotation Y : -0°11'41.841439"
Translation Z    :   102.676m           Rotation Z :  0°04'11.988863"
Scale Factor     : 6.2965571264 ppm


Transverse Mercator Projection
Projection Origin                       False Origin
Latitude      :   17°38'10.36749"NFalse Northing  :       1967.190m
Longitude     :   63°14'15.07247"WFalse Easting   :       4714.870m
Height        :          N/A            False Elevation    :             N/A
Scale Factor  :   1.00000000

Test coordinates:
WGS84 in°N         WGS84 in°E         z(ellips)       LocalE in m      LocalN in m   Z(msl)
1 17.61578594    -63.25156367       -41.19          3215.38          -287.59            2.065
2 17.62323214    -63.23827421       290.27          4629.098         530.823       333.55

These coordinates have been verified with pctrans (software of the dutch navy) and the conversion (Trimble) seems to be good to within 2 cm

I have tried to convert the translation rotation and projection into a proj4 structure within Qgis
I converted the rotation into arcseconds:

Rotation X :  0°05'51.504629"  (351.504629")
Rotation Y : -0°11'41.841439" (-701.841439")
Rotation Z :  0°04'11.988863" (251.988863")

+proj=tmerc +lat_0=17.63621319 +lon_0=-63.23752013 +k=1 +x_0=4714.870 +y_0= 1967.19  +ellps=intl +towgs84=194.245,-154.53,102.676,-351.5046,701.841,-251.9889,6.296557 +units=m +no_defs

(note all signs of of rotation  have been changed compared to Trimble notation  )

application of this proj4 string in Qgis results in the following two local grid positions:
1  3250.9 mE    -209.59mN
2  4658.157mE   620.26 mN

I also tried to use OS4GEO installed on a win10 machine in many variants e.g.

echo -63.25156367 17.61578594 |cs2cs +proj=latlong +ellps=WGS84 +towgs84=0,0,0 +no_defs +to +proj=tmerc +ellps=WGS84 +lat_0=17.63621319 +lon_0=-63.23752013 +k=1 +x_0=4714.87 +y_0=1967.19 +towgs84=-194.245,154.53,-102.676,-351.5046,701.841,-251.9889,-6.296557 +units=m +no_defs

 with as a result x=3458.54 y=-202.09 z=286.19

I have tried to use the pipeline option as well however, in one of the first steps OSgeo seems not to convert coordinates properly:
e.g. with the statement below I expect to get 17.00 17.00 as an answer but I get 17.00 0.00 !!!

echo 17.0 17.0 | proj +proj=pipeline +step +proj=cart +ellps=intl +step +proj=cart +inv +ellps=intl


I have tried a number of versions of this transformation (changing signs in the towgs string string but this does  not result in proper coordinates.

What is wrong with this proj4 string based on the rotation and projection information from the Trimble software and how in general can we use the translation and projection information into a valid proj4 string?

Kind regards,

Michel Ruijter

--
Michel Ruijter
MNRengineering
de Kempenaerstraat 82, 2341GP, Oegstgeest
mob: +31638944484, tel: +31718897137

[https://ipmcdn.avast.com/images/icons/icon-envelope-tick-green-avg-v1.png]<http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>

Virusvrij. www.avg.com<http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190802/e6fb45aa/attachment.html>

From mnrengineering at gmail.com  Fri Aug  2 08:41:47 2019
From: mnrengineering at gmail.com (Michel Ruijter)
Date: Fri, 2 Aug 2019 17:41:47 +0200
Subject: [PROJ] CRS for small Island (Saba),
 conversion of known projection and transformation parameters
 (Trimble) into proj4 string
In-Reply-To: <da101706920044d181aea8de31a6cb60@sdfe.dk>
References: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>
 <CAF3Sn4XqLvQZNigt97pbnMs8N5Uxqh2ZHsmYuB0P5RUB1EZUqQ@mail.gmail.com>
 <da101706920044d181aea8de31a6cb60@sdfe.dk>
Message-ID: <CAHyMf_ANgnamO2dNxBhijTfbOn1VxJeNmszeLOAANmbUeRzTXw@mail.gmail.com>

Gentlemen,

Thanks very much for looking into my "headache" problem. I never found the
"cct" option neither the "+exact " option regarding the helmert
transformation. I can now more or less use the trimble coefficient to get a
proper transformation (within 2-3 cm) . At least within the OSgeo proj4
system. The next step is to get this working in Qgis!!?

Kind regards,

Michel


echo -63.25156367 17.61578594 -41.194 |cct +proj=pipeline +step +proj=cart
+ellps=WGS84 +step +proj=helmert +convention=coordinate_frame +x=194.245
+y=-154.53 +z=102.676 +rx=351.5046 +ry=-701.841 +rz=251.9889 +s=6.296557
+exact +step +proj=cart +inv +ellps=intl +step +proj=tmerc +units=m
+lat_0=17.63621319 +lon_0=-63.23752013 +x_0=4714.87 +y_0=1967.19 +k_0=1.0
    3215.4356      -287.5511        2.0691           inf

Op vr 2 aug. 2019 om 10:54 schreef Kristian Evers <kreve at sdfe.dk>:

> Nick,
>
>
>
> With the helmert [0] operation you can choose to use either the small
> angle approximation or the full set of equations. Enable the full equations
> with the +exact flag.
>
>
>
>
>
> Michel,
>
>
>
> I haven’t studied you email closely, but at least I can see that in your
> example with the pipeline you are using proj where should be using cct. The
> reason being that proj only works in 2D and you are asking for a 3D
> transformation. Generally, proj should only be used for projection of
> geodetic coordinates.
>
>
>
> /Kristian
>
>
>
> [0] https://proj.org/operations/transformations/helmert.html
>
>
>
> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Nick Mein
> *Sent:* 2. august 2019 10:45
> *To:* Michel Ruijter <mnrengineering at gmail.com>
> *Cc:* PROJ at lists.osgeo.org
> *Subject:* Re: [PROJ] CRS for small Island (Saba), conversion of known
> projection and transformation parameters (Trimble) into proj4 string
>
>
>
> There was a long discussion in this mailing list back in 2017 about 7
> parameter transformations with large rotations. You can find the discussion
> at
> http://osgeo-org.1560.x6.nabble.com/towgs84-approximation-error-td5313738.html
> .
>
>
>
> I'm not sure that there was ever a resolution to the discussion. But if
> PROJ is still using small-angle approximations for 7 parameter
> transformations then that is probably the reason that it isn't giving the
> expected results?
>
>
>
> On Fri, 2 Aug 2019 at 03:39, Michel Ruijter <mnrengineering at gmail.com>
> wrote:
>
> Ls,
> For a small Caribbean Island (Saba) I am trying to get the proper proj4
> CRS (for Qgis) in order to use GPS based coordinates on local grid related
> system
> The following projection and datum parameters are used in a TRimble
> software package (and used in the RTK equipment) in local "Kadaster"
> coordinates  to set out benchmarks etc
>
> Ellipsoid
> Ellipsoid Name   : (WGS 84)
> Flattening 1/f   : 297.000
> Semi Major Axis  : 6378388.000m
>
>
> Datum Transformation : Seven Parameter
> WGS84 to (WGS 84) (sounds a little bit confusing since ellipsoid seems to
> be the international ellipsoid
> Translation X    :   194.245m           Rotation X :  0°05'51.504629"
> Translation Y    :  -154.530m           Rotation Y : -0°11'41.841439"
> Translation Z    :   102.676m           Rotation Z :  0°04'11.988863"
> Scale Factor     : 6.2965571264 ppm
>
>
> Transverse Mercator Projection
> Projection Origin                       False Origin
> Latitude      :   17°38'10.36749"NFalse Northing  :       1967.190m
> Longitude     :   63°14'15.07247"WFalse Easting   :       4714.870m
> Height        :          N/A            False Elevation    :
> N/A
> Scale Factor  :   1.00000000
>
> Test coordinates:
> WGS84 in°N         WGS84 in°E         z(ellips)       LocalE in m
> LocalN in m   Z(msl)
> 1 17.61578594    -63.25156367       -41.19          3215.38
> -287.59            2.065
> 2 17.62323214    -63.23827421       290.27          4629.098
>  530.823       333.55
>
> These coordinates have been verified with pctrans (software of the dutch
> navy) and the conversion (Trimble) seems to be good to within 2 cm
>
> I have tried to convert the translation rotation and projection into a
> proj4 structure within Qgis
> I converted the rotation into arcseconds:
>
> Rotation X :  0°05'51.504629"  (351.504629")
> Rotation Y : -0°11'41.841439" (-701.841439")
> Rotation Z :  0°04'11.988863" (251.988863")
>
> +proj=tmerc +lat_0=17.63621319 +lon_0=-63.23752013 +k=1 +x_0=4714.870
> +y_0= 1967.19  +ellps=intl
> +towgs84=194.245,-154.53,102.676,-351.5046,701.841,-251.9889,6.296557
> +units=m +no_defs
>
> (note all signs of of rotation  have been changed compared to Trimble
> notation  )
>
> application of this proj4 string in Qgis results in the following two
> local grid positions:
> 1  3250.9 mE    -209.59mN
> 2  4658.157mE   620.26 mN
>
> I also tried to use OS4GEO installed on a win10 machine in many variants
> e.g.
>
>
> echo -63.25156367 17.61578594 |cs2cs +proj=latlong +ellps=WGS84
> +towgs84=0,0,0 +no_defs +to +proj=tmerc +ellps=WGS84 +lat_0=17.63621319
> +lon_0=-63.23752013 +k=1 +x_0=4714.87 +y_0=1967.19
> +towgs84=-194.245,154.53,-102.676,-351.5046,701.841,-251.9889,-6.296557
> +units=m +no_defs
>
>  with as a result x=3458.54 y=-202.09 z=286.19
>
>
>
> I have tried to use the pipeline option as well however, in one of the
> first steps OSgeo seems not to convert coordinates properly:
>
> e.g. with the statement below I expect to get 17.00 17.00 as an answer but
> I get 17.00 0.00 !!!
>
>
>
> echo 17.0 17.0 | proj +proj=pipeline +step +proj=cart +ellps=intl +step
> +proj=cart +inv +ellps=intl
>
>
>
> I have tried a number of versions of this transformation (changing signs
> in the towgs string string but this does  not result in proper coordinates.
>
> What is wrong with this proj4 string based on the rotation and projection
> information from the Trimble software and how in general can we use the
> translation and projection information into a valid proj4 string?
>
> Kind regards,
>
> Michel Ruijter
>
>
>
> --
>
> Michel Ruijter
>
> MNRengineering
>
> de Kempenaerstraat 82, 2341GP, Oegstgeest
>
> mob: +31638944484, tel: +31718897137
>
>
>
>
> <http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
>
> Virusvrij. www.avg.com
> <http://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>

-- 
Michel Ruijter
MNRengineering
de Kempenaerstraat 82, 2341GP, Oegstgeest
mob: +31638944484, tel: +31718897137
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190802/eac94a50/attachment-0001.html>

From cameron.shorter at gmail.com  Fri Aug  2 13:32:05 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Sat, 3 Aug 2019 06:32:05 +1000
Subject: [PROJ] WGS84 / Web Mercator discussion in Australia
Message-ID: <ce952a62-bba7-e827-4202-2ac6d4723f3b@gmail.com>

proj list,

I'm sharing a few email snippets from this week, with permission. (One 
contributor is missing as they have been sick, and I haven't gain their 
permission to share yet.)

On 25/7/19 3:31 pm, Kevin M. Kelly (ESRI) wrote:
 > Geodetically, the proposed solution makes much more sense than 
equating GDA2020 with WGS84. It also maintains the equivalence of GDA94 
and WGS84. Below are a few fine points of clarification. I am certain 
this will be confusing, but it’s the new normal in geodetic datum 
management.
 > GDA94 is aligned to ITRF92 at epoch 1994.0 and GDA2020 is aligned to 
ITRF2014 at epoch 2020.0. In the WGS84 series of realizations, GDA94 is 
most closely aligned with WGS84(G730), which is itself aligned to ITRF91 
at epoch 1994.0.

On 31/7/19 3:16 am, Kevin M. Kelly (ESRI) wrote:
 > Thank you immensely Matt and Joel for your comments/answers to 
Cameron’s questions. You have made my task to provide those answers 
pretty much non-existent. Matt is spot on in all his responses and I 
have little more relevant information to add. Note, I am not the best to 
ask about recommendations on EPSG codes. Melita Kennedy is our the 
authority on that and I’ll defer to her to comment on Esri 
implementation of EPSG codes.
 > I have only some general comments that support what’s already been 
said by Matt and Joel. Unfortunately, the generic WGS84 Web Mercator 
debacle is too deeply entrenched to muddy it up with modifications at 
this stage. I agree with Matt, leave it alone. For those with data 
referenced to a mixture of WGS84 realizations (and perhaps other 
frames), there is no accurate way to homogenize the data to a common 
frame and epoch. I’ll qualify that to say that you may be able to 
homogenize and maintain much of the accuracy of your data if they all 
have epochs associated with them and it is known to which WGS84 
realization (or other frame) they refer. Then there may be a chance to 
transform them to a common frame and epoch, but this would likely be a 
cost-prohibitive task, especially for large databases. And moreover, few 
data in Web mapping applications carry these metadata. So, moot point!
 > What I can say is, if you’re lucky enough to have the opportunity to 
design a web-mapping application from scratch, and you expect to store 
and display accurately positioned data (e.g. high-accuracy GNSS): (1) 
don’t use Web Mercator base maps and (2) make sure to carry/store the 
reference frame (datum), its realization if applicable, and epoch 
metadata with every single feature! Sorry, if it that’s no consolation 
to those with existing Web Mercator type web map implementations that 
lack these metadata.
 > Just an FYI, I am currently co-authoring a paper on the relationship 
between the various realizations of WGS84 and between them and ITRF. The 
paper is, in part, a response to the generic WGS84 debacle and the lack 
of awareness among geospatial professionals, especially in the GIS 
arena, of this problem. The paper is primarily educational but will also 
provide some approximate solutions. We intend to publish the paper not 
in a geodesy journal, but in some GIS or surveying journal (not sure 
which one yet) because that is the audience we’d like to reach.

On 25/7/19 5:02 pm, Joel Haasdyk (GDA2020 Implementation Program Manager 
(NSW)) wrote:
 > 1)      Gordon (ESRI Australia) comment of 19/07/2019: “Further, as 
of writing today, Esri have not implemented GDA2020 to WGS84 Web 
Mercator as a null transformation. I am working with them to see if we 
can get this included. No timeline as yet.”
 > Joel Hassdyk: This strikes me as something ESRI should be reticent to 
change before these conversations are concluded.
 > Joel Hassdyk: I feel that ESRI has successfully implemented a 
practical solution to this Web Mercator problem.  I would be reticent to 
change that now:
 > Joel Hassdyk: 1)      WGS84 <=> GDA2020 NULL Tf not currently 
implemented.
 > Joel Hassdyk: 2)      WGS84 = GDA94 ó GDA2020 ‘two-step’ or 
‘concatenated’ process implemented (e.g. ArcGIS Pro 2.1)

 > External comment 25/07/2019: “but there are many applications that 
need to use Web Mercator and GDA2020 data together. If the datasets in 
each CRS are low resolution (e.g. a GDA2020 koala habitat polygon on a 
Google map) then overlaying with 8450 as a null transformation is fine.”
 > Joel Hassdyk: Is there any harm in NOT offering any TF (force user to 
assume equivalence? Confusing?), or in fact using the concatenated Tf, 
in these instances?
 > Joel Hassdyk: 2)      Adopting a 1994.0 epoch  (vs 2020.0 epoch) for 
ongoing WGS84-based web-mapping as the short term solution for the 
Australian issue.
 > Joel Hassdyk: WGS84 to implicitly adopt 2020.0 epoch:  GDA94 ó [WGS84 
= GDA2020] (to ‘replace’ EPSG 1150)          has been recently suggested 
in M.Giudici’s proposal.
 > Joel Hassdyk: WGS84 to implicitly adopt 1994.0 epoch: GDA2020 ó 
[WGS84 = GDA94] (to ‘replace’ EPSG 8450)          is a similar solution.
 > Joel Hassdyk: I would lean towards the latter (WGS84 implicitly 
adopting 1994.0 epoch for Australian purposes).
 > Joel Hassdyk: This is to cater for existing users who implicitly 
employ WGS84 in the 1994.0 epoch, in the form of GDA94 datasets which 
have been published and stored nominally as ‘WGS84’.
 > Joel Hassdyk:               It will be much easier (necessary?) in 
the short term to bring new data to these users, rather than the old 
data to the new epoch. [Cameron has previously argued this].

 > External comment 25/07/2019: “Also using the @1994 coincidence to 
conclude that all use of WGS84 in Australia is WGS84(G730), is reading 
too much into it. There would be lots of data in Australia on the 
various realizations of WGS84 and at various epochs. If I gather GPS 
data using the broadcast orbits today (anywhere in the world including 
Australia) it is WGS84(G1762)@2019.5.”
 > Joel Hassdyk: I would think that the number of users with WGS84 truly 
representing ‘epoch of observation’ would be small compared to users 
with WGS84 at 1994.0 .   Happy to be shown otherwise! Lets discuss.

 > Cameron Shorter comments of 24/07/2019:
 > “To address the epoch misalignment you mention, I’m proposing that we 
define a new static “Web Datum” which mirrors current implementations”
 > Joel Haasdyk: This certainly addresses the issue that the current 
WGS84(generic) usage is a mixed bag; Maybe we should call it what is it 
actually is!.
 > Joel Haasdyk: However, I can’t see this as a short term solution. 
Perhaps a medium term solution, that is, until the longer term 
time-dependence issues are better addressed.
 > Joel Haasdyk: I’m just not sure what would / could motivate people to 
change this this new definition, other than that is it more explicit 
about the epoch(s) employed in various regions. [It would be a mess to 
define well though].

-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254


From ccrook at linz.govt.nz  Sat Aug  3 00:21:43 2019
From: ccrook at linz.govt.nz (Chris Crook)
Date: Sat, 3 Aug 2019 07:21:43 +0000
Subject: [PROJ] WGS84 / Web Mercator discussion in Australia
In-Reply-To: <ce952a62-bba7-e827-4202-2ac6d4723f3b@gmail.com>
References: <ce952a62-bba7-e827-4202-2ac6d4723f3b@gmail.com>
Message-ID: <A87E66F06E86F14B857F2EB047CDF93231311922@prdassexch01.ad.linz.govt.nz>

I'm following the discussions on the PROJ list with great interest.  New Zealand also has a history of grappling with a dynamic datum and with complex deformation, so this question as well as those around dynamic/static datums are of great interest.  While I've not had the time to respond at length on the NZ experience I very much appreciate this discussion so thank you.

However FWIW Nic Donnelly did some work a while ago summarising the relationship of WGS84 realisations which is present in  https://www.linz.govt.nz/system/files_force/media/file-attachments/donnelly-development-of-modern-geodetic-system-in-nz.ppt?download=1

We also had long discussions with our Australian colleagues around terminology, especially dynamic/static.  In the end these seemed too ambiguous (relative to what), and too imprecise (there are more than two options).  Instead we found it more useful to use terms such as "earth-fixed", "plate-fixed".  However it is hard to break these habits.

Chris Crook
________________________________________
From: PROJ [proj-bounces at lists.osgeo.org] on behalf of Cameron Shorter [cameron.shorter at gmail.com]
Sent: Saturday, 3 August 2019 8:32 a.m.
To: proj at lists.osgeo.org
Cc: Joel Haasdyk; Gordon Sumerling; Kevin M. Kelly; HIGGINS Matt
Subject: [PROJ] WGS84 / Web Mercator discussion in Australia

proj list,

I'm sharing a few email snippets from this week, with permission. (One
contributor is missing as they have been sick, and I haven't gain their
permission to share yet.)

On 25/7/19 3:31 pm, Kevin M. Kelly (ESRI) wrote:
 > Geodetically, the proposed solution makes much more sense than
equating GDA2020 with WGS84. It also maintains the equivalence of GDA94
and WGS84. Below are a few fine points of clarification. I am certain
this will be confusing, but it’s the new normal in geodetic datum
management.
 > GDA94 is aligned to ITRF92 at epoch 1994.0 and GDA2020 is aligned to
ITRF2014 at epoch 2020.0. In the WGS84 series of realizations, GDA94 is
most closely aligned with WGS84(G730), which is itself aligned to ITRF91
at epoch 1994.0.

On 31/7/19 3:16 am, Kevin M. Kelly (ESRI) wrote:
 > Thank you immensely Matt and Joel for your comments/answers to
Cameron’s questions. You have made my task to provide those answers
pretty much non-existent. Matt is spot on in all his responses and I
have little more relevant information to add. Note, I am not the best to
ask about recommendations on EPSG codes. Melita Kennedy is our the
authority on that and I’ll defer to her to comment on Esri
implementation of EPSG codes.
 > I have only some general comments that support what’s already been
said by Matt and Joel. Unfortunately, the generic WGS84 Web Mercator
debacle is too deeply entrenched to muddy it up with modifications at
this stage. I agree with Matt, leave it alone. For those with data
referenced to a mixture of WGS84 realizations (and perhaps other
frames), there is no accurate way to homogenize the data to a common
frame and epoch. I’ll qualify that to say that you may be able to
homogenize and maintain much of the accuracy of your data if they all
have epochs associated with them and it is known to which WGS84
realization (or other frame) they refer. Then there may be a chance to
transform them to a common frame and epoch, but this would likely be a
cost-prohibitive task, especially for large databases. And moreover, few
data in Web mapping applications carry these metadata. So, moot point!
 > What I can say is, if you’re lucky enough to have the opportunity to
design a web-mapping application from scratch, and you expect to store
and display accurately positioned data (e.g. high-accuracy GNSS): (1)
don’t use Web Mercator base maps and (2) make sure to carry/store the
reference frame (datum), its realization if applicable, and epoch
metadata with every single feature! Sorry, if it that’s no consolation
to those with existing Web Mercator type web map implementations that
lack these metadata.
 > Just an FYI, I am currently co-authoring a paper on the relationship
between the various realizations of WGS84 and between them and ITRF. The
paper is, in part, a response to the generic WGS84 debacle and the lack
of awareness among geospatial professionals, especially in the GIS
arena, of this problem. The paper is primarily educational but will also
provide some approximate solutions. We intend to publish the paper not
in a geodesy journal, but in some GIS or surveying journal (not sure
which one yet) because that is the audience we’d like to reach.

On 25/7/19 5:02 pm, Joel Haasdyk (GDA2020 Implementation Program Manager
(NSW)) wrote:
 > 1)      Gordon (ESRI Australia) comment of 19/07/2019: “Further, as
of writing today, Esri have not implemented GDA2020 to WGS84 Web
Mercator as a null transformation. I am working with them to see if we
can get this included. No timeline as yet.”
 > Joel Hassdyk: This strikes me as something ESRI should be reticent to
change before these conversations are concluded.
 > Joel Hassdyk: I feel that ESRI has successfully implemented a
practical solution to this Web Mercator problem.  I would be reticent to
change that now:
 > Joel Hassdyk: 1)      WGS84 <=> GDA2020 NULL Tf not currently
implemented.
 > Joel Hassdyk: 2)      WGS84 = GDA94 ó GDA2020 ‘two-step’ or
‘concatenated’ process implemented (e.g. ArcGIS Pro 2.1)

 > External comment 25/07/2019: “but there are many applications that
need to use Web Mercator and GDA2020 data together. If the datasets in
each CRS are low resolution (e.g. a GDA2020 koala habitat polygon on a
Google map) then overlaying with 8450 as a null transformation is fine.”
 > Joel Hassdyk: Is there any harm in NOT offering any TF (force user to
assume equivalence? Confusing?), or in fact using the concatenated Tf,
in these instances?
 > Joel Hassdyk: 2)      Adopting a 1994.0 epoch  (vs 2020.0 epoch) for
ongoing WGS84-based web-mapping as the short term solution for the
Australian issue.
 > Joel Hassdyk: WGS84 to implicitly adopt 2020.0 epoch:  GDA94 ó [WGS84
= GDA2020] (to ‘replace’ EPSG 1150)          has been recently suggested
in M.Giudici’s proposal.
 > Joel Hassdyk: WGS84 to implicitly adopt 1994.0 epoch: GDA2020 ó
[WGS84 = GDA94] (to ‘replace’ EPSG 8450)          is a similar solution.
 > Joel Hassdyk: I would lean towards the latter (WGS84 implicitly
adopting 1994.0 epoch for Australian purposes).
 > Joel Hassdyk: This is to cater for existing users who implicitly
employ WGS84 in the 1994.0 epoch, in the form of GDA94 datasets which
have been published and stored nominally as ‘WGS84’.
 > Joel Hassdyk:               It will be much easier (necessary?) in
the short term to bring new data to these users, rather than the old
data to the new epoch. [Cameron has previously argued this].

 > External comment 25/07/2019: “Also using the @1994 coincidence to
conclude that all use of WGS84 in Australia is WGS84(G730), is reading
too much into it. There would be lots of data in Australia on the
various realizations of WGS84 and at various epochs. If I gather GPS
data using the broadcast orbits today (anywhere in the world including
Australia) it is WGS84(G1762)@2019.5.”
 > Joel Hassdyk: I would think that the number of users with WGS84 truly
representing ‘epoch of observation’ would be small compared to users
with WGS84 at 1994.0 .   Happy to be shown otherwise! Lets discuss.

 > Cameron Shorter comments of 24/07/2019:
 > “To address the epoch misalignment you mention, I’m proposing that we
define a new static “Web Datum” which mirrors current implementations”
 > Joel Haasdyk: This certainly addresses the issue that the current
WGS84(generic) usage is a mixed bag; Maybe we should call it what is it
actually is!.
 > Joel Haasdyk: However, I can’t see this as a short term solution.
Perhaps a medium term solution, that is, until the longer term
time-dependence issues are better addressed.
 > Joel Haasdyk: I’m just not sure what would / could motivate people to
change this this new definition, other than that is it more explicit
about the epoch(s) employed in various regions. [It would be a mess to
define well though].

--
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

________________________________

This message contains information, which may be in confidence and may be subject to legal privilege. If you are not the intended recipient, you must not peruse, use, disseminate, distribute or copy this message. If you have received this message in error, please notify us immediately (Phone 0800 665 463 or info at linz.govt.nz) and destroy the original message. LINZ accepts no responsibility for changes to this email, or for any attachments, after its transmission from LINZ. Thank You.

From mnrengineering at gmail.com  Mon Aug  5 23:05:18 2019
From: mnrengineering at gmail.com (michelruijter)
Date: Mon, 5 Aug 2019 23:05:18 -0700 (MST)
Subject: [PROJ] CRS for small Island (Saba),
 conversion of known projection and transformation parameters
 (Trimble) into proj4 string
In-Reply-To: <CAHyMf_ANgnamO2dNxBhijTfbOn1VxJeNmszeLOAANmbUeRzTXw@mail.gmail.com>
References: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>
 <CAF3Sn4XqLvQZNigt97pbnMs8N5Uxqh2ZHsmYuB0P5RUB1EZUqQ@mail.gmail.com>
 <da101706920044d181aea8de31a6cb60@sdfe.dk>
 <CAHyMf_ANgnamO2dNxBhijTfbOn1VxJeNmszeLOAANmbUeRzTXw@mail.gmail.com>
Message-ID: <1565071518673-0.post@n6.nabble.com>

I have tried the CRS based on the advise given see screen shot below.
Allthough this seems to work when I try a test coordinate, QGIS replies that
the proj4 definition is not valid after I press the "OK" button.
any advise in this?

<http://osgeo-org.1560.x6.nabble.com/file/t385244/crsshot.png> 



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From mnrengineering at gmail.com  Tue Aug  6 23:12:03 2019
From: mnrengineering at gmail.com (michelruijter)
Date: Tue, 6 Aug 2019 23:12:03 -0700 (MST)
Subject: [PROJ] CRS for small Island (Saba),
 conversion of known projection and transformation parameters
 (Trimble) into proj4 string
In-Reply-To: <da101706920044d181aea8de31a6cb60@sdfe.dk>
References: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>
 <CAF3Sn4XqLvQZNigt97pbnMs8N5Uxqh2ZHsmYuB0P5RUB1EZUqQ@mail.gmail.com>
 <da101706920044d181aea8de31a6cb60@sdfe.dk>
Message-ID: <1565158323716-0.post@n6.nabble.com>

@ Kristian Evers-2

I see in another post that as of qgis 3.8, proj 6 may be supported. I have
dowloaded and installed the zanzibar version of qgis but I cannot get proj 6
related CRS to work. Do you know how I can get this to work on a Windows 10
environment?



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From kristianevers at gmail.com  Tue Aug  6 23:38:01 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 7 Aug 2019 08:38:01 +0200
Subject: [PROJ] CRS for small Island (Saba),
 conversion of known projection and transformation parameters
 (Trimble) into proj4 string
In-Reply-To: <1565158323716-0.post@n6.nabble.com>
References: <CAHyMf_CXw448rTDCeBLubKAogsSQA3PML0idMa88CsALe6=RAA@mail.gmail.com>
 <CAF3Sn4XqLvQZNigt97pbnMs8N5Uxqh2ZHsmYuB0P5RUB1EZUqQ@mail.gmail.com>
 <da101706920044d181aea8de31a6cb60@sdfe.dk>
 <1565158323716-0.post@n6.nabble.com>
Message-ID: <94363208-59A1-44ED-AAE2-A29E62FB2E6D@gmail.com>

Michel,

You will have to get in touch with the QGIS guys for support on that. Use
 one of the many available support platforms to get help: 

https://www.qgis.org/en/site/forusers/support.html <https://www.qgis.org/en/site/forusers/support.html>

/Kristian

> On 7 Aug 2019, at 08:12, michelruijter <mnrengineering at gmail.com> wrote:
> 
> @ Kristian Evers-2
> 
> I see in another post that as of qgis 3.8, proj 6 may be supported. I have
> dowloaded and installed the zanzibar version of qgis but I cannot get proj 6
> related CRS to work. Do you know how I can get this to work on a Windows 10
> environment?
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190807/58b42c3e/attachment.html>

From even.rouault at spatialys.com  Fri Aug  9 10:07:51 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 09 Aug 2019 19:07:51 +0200
Subject: [PROJ] CRS JSON
In-Reply-To: <5392311.puaqCvg7Uy@even-i700>
References: <5392311.puaqCvg7Uy@even-i700>
Message-ID: <2251610.xDDeYcCKFJ@even-i700>

On lundi 8 juillet 2019 12:57:16 CEST Even Rouault wrote:
> Hi,
> 
> following a recent Tweeter discussion, I've taken a crack at implementing a
> JSON representation for CRS objects, based on the ISO_19111:2019
> abstract model and compatible with WKT2:2019.
> See my proposal in https://github.com/OSGeo/PROJ/pull/1547

OK, so now import&export of PROJJSON has been implemented in this PR.

Examples:

Import from EPSG and export as PROJJSON:

$ projinfo EPSG:32631 -o PROJJSON -q > out.json

Import from PROJJSON and export as a old school PROJ string:

$ projinfo @out.json -o PROJ -q
+proj=utm +zone=31 +datum=WGS84 +units=m +no_defs +type=crs

$ cat out.json
{
  "type": "ProjectedCRS",
  "name": "WGS 84 / UTM zone 31N",
  "base_crs": {
    "name": "WGS 84",
    "datum": {
      "type": "GeodeticReferenceFrame",
      "name": "World Geodetic System 1984",
      "ellipsoid": {
        "name": "WGS 84",
        "semi_major_axis": 6378137,
        "inverse_flattening": 298.257223563
      }
    },
    "coordinate_system": {
      "subtype": "ellipsoidal",
      "axis": [
        {
          "name": "Geodetic latitude",
          "abbreviation": "Lat",
          "direction": "north",
          "unit": "degree"
        },
        {
          "name": "Geodetic longitude",
          "abbreviation": "Lon",
          "direction": "east",
          "unit": "degree"
        }
      ]
    },
    "id": {
      "authority": "EPSG",
      "code": 4326
    }
  },
  "conversion": {
    "name": "UTM zone 31N",
    "method": {
      "name": "Transverse Mercator",
      "id": {
        "authority": "EPSG",
        "code": 9807
      }
    },
    "parameters": [
      {
        "name": "Latitude of natural origin",
        "value": 0,
        "unit": "degree",
        "id": {
          "authority": "EPSG",
          "code": 8801
        }
      },
      {
        "name": "Longitude of natural origin",
        "value": 3,
        "unit": "degree",
        "id": {
          "authority": "EPSG",
          "code": 8802
        }
      },
      {
        "name": "Scale factor at natural origin",
        "value": 0.9996,
        "unit": "unity",
        "id": {
          "authority": "EPSG",
          "code": 8805
        }
      },
      {
        "name": "False easting",
        "value": 500000,
        "unit": "metre",
        "id": {
          "authority": "EPSG",
          "code": 8806
        }
      },
      {
        "name": "False northing",
        "value": 0,
        "unit": "metre",
        "id": {
          "authority": "EPSG",
          "code": 8807
        }
      }
    ]
  },
  "coordinate_system": {
    "subtype": "Cartesian",
    "axis": [
      {
        "name": "Easting",
        "abbreviation": "E",
        "direction": "east",
        "unit": "metre"
      },
      {
        "name": "Northing",
        "abbreviation": "N",
        "direction": "north",
        "unit": "metre"
      }
    ]
  },
  "area": "World - N hemisphere - 0°E to 6°E - by country",
  "bbox": {
    "south_latitude": 0,
    "west_longitude": 0,
    "north_latitude": 84,
    "east_longitude": 6
  },
  "id": {
    "authority": "EPSG",
    "code": 32631
  }
}

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From eric.dechaux at gendarmerie.interieur.gouv.fr  Fri Aug 16 05:57:54 2019
From: eric.dechaux at gendarmerie.interieur.gouv.fr (Dechaux Eric CEN (BCQ STIG))
Date: Fri, 16 Aug 2019 14:57:54 +0200
Subject: [PROJ] Why is std=gnu89 tested/enabled ?
Message-ID: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>

Greetings,

I have been investigating proj 5.2.0 build failure on Solaris 11.3 for 
amd64. At some point the build stops on error because of the NAN being 
not declared :

gcc -DHAVE_CONFIG_H -I. 
-DPROJ_LIB=\"/appli/stig/11.3-20190816-104632/share/proj\" 
-DMUTEX_pthread  -D_FORTIFY_SOURCE=2 -I/usr/include/pcre 
-I/appli/stig/11.3-20190816-104632/include -Wall 
-Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter 
-Wmissing-prototypes -Wmissing-declarations -Wformat 
-Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow 
-Werror=vla -Wdeclaration-after-statement -Wdate-time -Wfloat-conversion 
-std=gnu89 -m64 -O2 -fstack-protector-strong -fpic -fPIC 
--param=ssp-buffer-size=4 -I/appli/stig/11.3-20190816-104632/include 
-DHAVE_C99_MATH=1 -MT proj_strtod.o -MD -MP -MF .deps/proj_strtod.Tpo -c 
-o proj_strtod.o proj_strtod.c
gie.c: In function ‘cart_selftest’:
gie.c:2008:20: error: ‘NAN’ undeclared (first use in this function)
      a = proj_coord(NAN, NAN, NAN, NAN);
                     ^
gie.c:2008:20: note: each undeclared identifier is reported only once 
for each function it appears in
make[2]: *** [gie.o] Erreur 1


As the documentation specify a C and C++11 compiler is required I 
changed the CFLAGS to include -std=gnu11. The build and checks run 
without errror. Solaris 11.3 is bundled with GCC 5.3 with uses gnu11 by 
default for C and there should be no reason to force for it on the CFLAGS.

I noticed the configure script detects and automatically adds -std=gnu89 
to the CFLAGS :

     checking whether C compiler accepts -Wdocumentation 
-Wno-documentation-deprecated-sync... no
     checking if -std=gnu89 can be enabled... yes
     checking whether C++ compiler accepts -Wunused-private-field... no


On Solaris this disables the NAN macro as it is C99:

$ cat test.c
#include <stdlib.h>
#include <math.h>

int main (void) {

         float f ;
         f = NAN ;


         exit (EXIT_SUCCESS) ;
}

$ gcc -std=gnu89 test.c
test.c: In function ‘main’:
test.c:7:6: error: ‘NAN’ undeclared (first use in this function)
   f = NAN ;
       ^
test.c:7:6: note: each undeclared identifier is reported only once for 
each function it appears in

$ gcc -std=gnu99 test.c

$ gcc -std=gnu11 test.c



What is the purpose of forcing C standard to gnu89  ?



Thanks.

-- Eric


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: avertissement.txt
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190816/05a1978e/attachment.txt>

From ivaygis at protonmail.com  Tue Aug 20 02:11:30 2019
From: ivaygis at protonmail.com (ivay)
Date: Tue, 20 Aug 2019 09:11:30 +0000
Subject: [PROJ] Vector Data Reprojection
Message-ID: <_KZSbQO0YQ8SbIa1PfDuiv1mlzDan4OwSmUXFTim0OMhUqWdsbb67qWcn1NAoPtCUD1nlCx5udnCDUepRZ7db8tm09ZFAZVGvCjbwvkeC8A=@protonmail.com>

Hi,

I have a shape file with epsg 4612.
I converted it into new shapefile with epsg 4326.
When I opened both shape files (with 4612 and 4326 epsg codes), there is no change in the X and Y locations.
Does both shapefiles (with epsg 4612 and 4326 codes) have same X and Y values?
My requirement is to convert the original file with "epsg code 4612" exactly into the "epsg 4326" .
Thank you for your ideas.
Ivay
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190820/acd8be50/attachment.html>

From ivaygis at protonmail.com  Tue Aug 20 02:31:37 2019
From: ivaygis at protonmail.com (ivay)
Date: Tue, 20 Aug 2019 09:31:37 +0000
Subject: [PROJ] Vector Data Reprojection
In-Reply-To: <_KZSbQO0YQ8SbIa1PfDuiv1mlzDan4OwSmUXFTim0OMhUqWdsbb67qWcn1NAoPtCUD1nlCx5udnCDUepRZ7db8tm09ZFAZVGvCjbwvkeC8A=@protonmail.com>
References: <_KZSbQO0YQ8SbIa1PfDuiv1mlzDan4OwSmUXFTim0OMhUqWdsbb67qWcn1NAoPtCUD1nlCx5udnCDUepRZ7db8tm09ZFAZVGvCjbwvkeC8A=@protonmail.com>
Message-ID: <dJ9HC9iEtyAUp-BBvVvF9EDH2lwLecGbCSCdQDvL53JDWdXY8NmgK_8X_-Ih41Iipd6tErKIpTCm0Sq1DhosdkiW5jdvsoRz_7JvOAXBdoU=@protonmail.com>

Here is projection of the original shapefile with EPSG 4612.

GEOGCS["JGD2000",

    DATUM["Japanese_Geodetic_Datum_2000",

        SPHEROID["GRS 1980",6378137,298.257222101,

            AUTHORITY["EPSG","7019"]],

        TOWGS84[0,0,0,0,0,0,0],

        AUTHORITY["EPSG","6612"]],

    PRIMEM["Greenwich",0,

        AUTHORITY["EPSG","8901"]],

    UNIT["degree",0.0174532925199433,

        AUTHORITY["EPSG","9122"]],

    AUTHORITY["EPSG","4612"]]

Thank you.

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Tuesday, August 20, 2019 6:11 PM, ivay <ivaygis at protonmail.com> wrote:

> Hi,
>
> I have a shape file with epsg 4612.
> I converted it into new shapefile with epsg 4326.
> When I opened both shape files (with 4612 and 4326 epsg codes), there is no change in the X and Y locations.
> Does both shapefiles (with epsg 4612 and 4326 codes) have same X and Y values?
> My requirement is to convert the original file with "epsg code 4612" exactly into the "epsg 4326" .
> Thank you for your ideas.
> Ivay
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190820/2603b2ca/attachment.html>

From support at mnspoint.com  Wed Aug 21 03:24:05 2019
From: support at mnspoint.com (support at mnspoint.com)
Date: Wed, 21 Aug 2019 12:24:05 +0200
Subject: [PROJ] Vector Data Reprojection
In-Reply-To: <dJ9HC9iEtyAUp-BBvVvF9EDH2lwLecGbCSCdQDvL53JDWdXY8NmgK_8X_-Ih41Iipd6tErKIpTCm0Sq1DhosdkiW5jdvsoRz_7JvOAXBdoU=@protonmail.com>
References: <_KZSbQO0YQ8SbIa1PfDuiv1mlzDan4OwSmUXFTim0OMhUqWdsbb67qWcn1NAoPtCUD1nlCx5udnCDUepRZ7db8tm09ZFAZVGvCjbwvkeC8A=@protonmail.com>
 <dJ9HC9iEtyAUp-BBvVvF9EDH2lwLecGbCSCdQDvL53JDWdXY8NmgK_8X_-Ih41Iipd6tErKIpTCm0Sq1DhosdkiW5jdvsoRz_7JvOAXBdoU=@protonmail.com>
Message-ID: <8ddca6528791bb20779d03a3543ae7e0@mnspoint.com>

Hello,

when comparing using spatialreference.org
we can find the following information: 

-------------------------

EPSG:4612

+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs 
-------------------------

EPSG:4326

+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs 
------------------------- 

And looks like they are exactly the same. Same projection
and same datum (zero to WGS84). And about the ellipses, they
are pratctically the same:

(From Wikipedia)

"The WGS 84 originally used the GRS 80 reference ellipsoid,
but has undergone some minor refinements in later editions
since its initial publication. Most of these refinements
are important for high-precision orbital calculations for
satellites but have little practical effect on typical
topographical uses. The following table lists the primary
ellipsoid parameters.

Ellipsoid reference     Semi-major axis a     Semi-minor axis b    
Inverse flattening (1/f)
GRS 80     6 378 137.0 m     ≈ 6 356 752.314 140 m     298.257 222 100
882 711...
WGS 84     6 378 137.0 m     ≈ 6 356 752.314 245 m     298.257 223 563

Equatorial (a), polar (b) and mean Earth radii as defined in the 1984
World Geodetic System revision (not to scale)

The very small difference in the flattening thus results
in a tiny difference of 0.105 mm in the semi polar axis. "

Regards: Janne.

******************************************** 

ivay kirjoitti 2019-08-20 11:31:

> Here is projection of the original shapefile with EPSG 4612. 
> 
> _GEOGCS["JGD2000",_
> 
> _    DATUM["Japanese_Geodetic_Datum_2000",_
> 
> _        SPHEROID["GRS 1980",6378137,298.257222101,_
> 
> _            AUTHORITY["EPSG","7019"]],_
> 
> _        TOWGS84[0,0,0,0,0,0,0],_
> 
> _        AUTHORITY["EPSG","6612"]],_
> 
> _    PRIMEM["Greenwich",0,_
> 
> _        AUTHORITY["EPSG","8901"]],_
> 
> _    UNIT["degree",0.0174532925199433,_
> 
> _        AUTHORITY["EPSG","9122"]],_
> 
> _    AUTHORITY["EPSG","4612"]]_ 
> 
> Thank you. 
> 
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐ 
> On Tuesday, August 20, 2019 6:11 PM, ivay <ivaygis at protonmail.com> wrote: 
> 
>> Hi, 
>> 
>> I have a shape file with epsg 4612. 
>> I converted it into new shapefile with epsg 4326. 
>> When I opened both shape files (with 4612 and 4326 epsg codes), there is no change in the X and Y locations. 
>> Does both shapefiles (with epsg 4612 and 4326 codes) have same X and Y values? 
>> My requirement is to convert the original file with "epsg code 4612" exactly into the "epsg 4326" . 
>> Thank you for your ideas. 
>> Ivay
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/1625ea67/attachment.html>

From kreve at sdfe.dk  Wed Aug 21 03:43:57 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 21 Aug 2019 10:43:57 +0000
Subject: [PROJ] Why is std=gnu89 tested/enabled ?
In-Reply-To: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>
References: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>
Message-ID: <73C2B9B9-D0AC-41C0-9E3D-092EABBE28C4@sdfe.dk>

Eric,

A C++11 compatible compiler is only required for PROJ 6 and onwards. This was introduced with RFC3 [0]. Previous versions was strictly C89, hence the enforcement of that standard in PROJ 5.2.0.

/Kristian

[0] https://proj.org/community/rfc/rfc-3.html

On 16 Aug 2019, at 14:57, Dechaux Eric CEN (BCQ STIG) <eric.dechaux at gendarmerie.interieur.gouv.fr<mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:

Greetings,

I have been investigating proj 5.2.0 build failure on Solaris 11.3 for amd64. At some point the build stops on error because of the NAN being not declared :

gcc -DHAVE_CONFIG_H -I. -DPROJ_LIB=\"/appli/stig/11.3-20190816-104632/share/proj\" -DMUTEX_pthread  -D_FORTIFY_SOURCE=2 -I/usr/include/pcre -I/appli/stig/11.3-20190816-104632/include -Wall -Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter -Wmissing-prototypes -Wmissing-declarations -Wformat -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla -Wdeclaration-after-statement -Wdate-time -Wfloat-conversion -std=gnu89 -m64 -O2 -fstack-protector-strong -fpic -fPIC --param=ssp-buffer-size=4 -I/appli/stig/11.3-20190816-104632/include -DHAVE_C99_MATH=1 -MT proj_strtod.o -MD -MP -MF .deps/proj_strtod.Tpo -c -o proj_strtod.o proj_strtod.c
gie.c: In function ‘cart_selftest’:
gie.c:2008:20: error: ‘NAN’ undeclared (first use in this function)
     a = proj_coord(NAN, NAN, NAN, NAN);
                    ^
gie.c:2008:20: note: each undeclared identifier is reported only once for each function it appears in
make[2]: *** [gie.o] Erreur 1


As the documentation specify a C and C++11 compiler is required I changed the CFLAGS to include -std=gnu11. The build and checks run without errror. Solaris 11.3 is bundled with GCC 5.3 with uses gnu11 by default for C and there should be no reason to force for it on the CFLAGS.

I noticed the configure script detects and automatically adds -std=gnu89 to the CFLAGS :

    checking whether C compiler accepts -Wdocumentation -Wno-documentation-deprecated-sync... no
    checking if -std=gnu89 can be enabled... yes
    checking whether C++ compiler accepts -Wunused-private-field... no


On Solaris this disables the NAN macro as it is C99:

$ cat test.c
#include <stdlib.h>
#include <math.h>

int main (void) {

        float f ;
        f = NAN ;


        exit (EXIT_SUCCESS) ;
}

$ gcc -std=gnu89 test.c
test.c: In function ‘main’:
test.c:7:6: error: ‘NAN’ undeclared (first use in this function)
  f = NAN ;
      ^
test.c:7:6: note: each undeclared identifier is reported only once for each function it appears in

$ gcc -std=gnu99 test.c

$ gcc -std=gnu11 test.c



What is the purpose of forcing C standard to gnu89  ?



Thanks.

-- Eric


Ce message �lectronique et tous les fichiers attach�s qu'il contient sont confidentiels et destin�s exclusivement � l'usage de la personne � laquelle ils sont adress�s. Si vous avez re�u ce message par erreur, merci de le retourner � son �metteur. La publication, l'usage, la distribution, l'impression ou la copie non autoris�e de ce message et des attachements qu'il contient sont strictement interdits.

En cas d'urgence, composez le 17 ou le 112.
Afin de contribuer au respect de l'environnement, merci de n'imprimer cet e-mail qu'en cas de necessite.

This e-mail and any files transmitted with it are confidential and intended solely for the use of the individual to whom it is addressed. If you have received this email in error please send it back to the person that sent it to you. Unauthorized publication, use, dissemination, forwarding, printing or copying of this email and its associated attachments is strictly prohibited.

In case of emergency, dial number 17 or 112.
To contribute to the environmental protection, please print this e-mail only if necessary.
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/fb647966/attachment.html>

From eric.dechaux at gendarmerie.interieur.gouv.fr  Wed Aug 21 04:55:33 2019
From: eric.dechaux at gendarmerie.interieur.gouv.fr (Dechaux Eric CEN (BCQ STIG))
Date: Wed, 21 Aug 2019 13:55:33 +0200
Subject: [PROJ] Why is std=gnu89 tested/enabled ?
In-Reply-To: <73C2B9B9-D0AC-41C0-9E3D-092EABBE28C4@sdfe.dk>
References: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>
 <73C2B9B9-D0AC-41C0-9E3D-092EABBE28C4@sdfe.dk>
Message-ID: <cd804d72-4c28-e3df-db0a-c4fef1a438da@gendarmerie.interieur.gouv.fr>

Thanks Kristian,

On Solaris, NAN is not available with C89. Is there an issue to build 
proj 5 forcing C99 by replacing -std=c89 to -std=c99 in the Makefile, 
after configure ?


Regards.


Le 21/08/2019 à 12:43, Kristian Evers a écrit :
> Eric,
>
> A C++11 compatible compiler is only required for PROJ 6 and onwards. 
> This was introduced with RFC3 [0]. Previous versions was strictly C89, 
> hence the enforcement of that standard in PROJ 5.2.0.
>
> /Kristian
>
> [0] https://proj.org/community/rfc/rfc-3.html
>
>> On 16 Aug 2019, at 14:57, Dechaux Eric CEN (BCQ STIG) 
>> <eric.dechaux at gendarmerie.interieur.gouv.fr 
>> <mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:
>>
>> Greetings,
>>
>> I have been investigating proj 5.2.0 build failure on Solaris 11.3 
>> for amd64. At some point the build stops on error because of the NAN 
>> being not declared :
>>
>> gcc -DHAVE_CONFIG_H -I. 
>> -DPROJ_LIB=\"/appli/stig/11.3-20190816-104632/share/proj\" 
>> -DMUTEX_pthread  -D_FORTIFY_SOURCE=2 -I/usr/include/pcre 
>> -I/appli/stig/11.3-20190816-104632/include -Wall 
>> -Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter 
>> -Wmissing-prototypes -Wmissing-declarations -Wformat 
>> -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow 
>> -Werror=vla -Wdeclaration-after-statement -Wdate-time 
>> -Wfloat-conversion -std=gnu89 -m64 -O2 -fstack-protector-strong -fpic 
>> -fPIC --param=ssp-buffer-size=4 
>> -I/appli/stig/11.3-20190816-104632/include -DHAVE_C99_MATH=1 -MT 
>> proj_strtod.o -MD -MP -MF .deps/proj_strtod.Tpo -c -o proj_strtod.o 
>> proj_strtod.c
>> gie.c: In function ‘cart_selftest’:
>> gie.c:2008:20: error: ‘NAN’ undeclared (first use in this function)
>>      a = proj_coord(NAN, NAN, NAN, NAN);
>>                     ^
>> gie.c:2008:20: note: each undeclared identifier is reported only once 
>> for each function it appears in
>> make[2]: *** [gie.o] Erreur 1
>>
>>
>> As the documentation specify a C and C++11 compiler is required I 
>> changed the CFLAGS to include -std=gnu11. The build and checks run 
>> without errror. Solaris 11.3 is bundled with GCC 5.3 with uses gnu11 
>> by default for C and there should be no reason to force for it on the 
>> CFLAGS.
>>
>> I noticed the configure script detects and automatically adds 
>> -std=gnu89 to the CFLAGS :
>>
>>     checking whether C compiler accepts -Wdocumentation 
>> -Wno-documentation-deprecated-sync... no
>>     checking if -std=gnu89 can be enabled... yes
>>     checking whether C++ compiler accepts -Wunused-private-field... no
>>
>>
>> On Solaris this disables the NAN macro as it is C99:
>>
>> $ cat test.c
>> #include <stdlib.h>
>> #include <math.h>
>>
>> int main (void) {
>>
>>         float f ;
>>         f = NAN ;
>>
>>
>>         exit (EXIT_SUCCESS) ;
>> }
>>
>> $ gcc -std=gnu89 test.c
>> test.c: In function ‘main’:
>> test.c:7:6: error: ‘NAN’ undeclared (first use in this function)
>>   f = NAN ;
>>       ^
>> test.c:7:6: note: each undeclared identifier is reported only once 
>> for each function it appears in
>>
>> $ gcc -std=gnu99 test.c
>>
>> $ gcc -std=gnu11 test.c
>>
>>
>>
>> What is the purpose of forcing C standard to gnu89  ?
>>
>>
>>
>> Thanks.
>>
>> -- Eric
>>
>>
>> Ce message �lectronique et tous les fichiers attach�s qu'il contient 
>> sont confidentiels et destin�s exclusivement � l'usage de la personne 
>> � laquelle ils sont adress�s. Si vous avez re�u ce message par 
>> erreur, merci de le retourner � son �metteur. La publication, 
>> l'usage, la distribution, l'impression ou la copie non autoris�e de 
>> ce message et des attachements qu'il contient sont strictement interdits.
>>
>> En cas d'urgence, composez le 17 ou le 112.
>> Afin de contribuer au respect de l'environnement, merci de n'imprimer 
>> cet e-mail qu'en cas de necessite.
>>
>> This e-mail and any files transmitted with it are confidential and 
>> intended solely for the use of the individual to whom it is 
>> addressed. If you have received this email in error please send it 
>> back to the person that sent it to you. Unauthorized publication, 
>> use, dissemination, forwarding, printing or copying of this email and 
>> its associated attachments is strictly prohibited.
>>
>> In case of emergency, dial number 17 or 112.
>> To contribute to the environmental protection, please print this 
>> e-mail only if necessary.
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>> https://lists.osgeo.org/mailman/listinfo/proj
>

-- 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/65142ffe/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.png
Type: image/png
Size: 38572 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/65142ffe/attachment-0001.png>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: avertissement.txt
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/65142ffe/attachment-0001.txt>

From kreve at sdfe.dk  Wed Aug 21 05:10:10 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 21 Aug 2019 12:10:10 +0000
Subject: [PROJ] Why is std=gnu89 tested/enabled ?
In-Reply-To: <cd804d72-4c28-e3df-db0a-c4fef1a438da@gendarmerie.interieur.gouv.fr>
References: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>
 <73C2B9B9-D0AC-41C0-9E3D-092EABBE28C4@sdfe.dk>
 <cd804d72-4c28-e3df-db0a-c4fef1a438da@gendarmerie.interieur.gouv.fr>
Message-ID: <939984F6-34EC-43F9-91B5-77D61BCF2F3D@sdfe.dk>

No, I don’t think so. Internally PROJ defines some math functions that is first introduced with C99. If the build system detects that they are available with your compiler the system functions are used instead. As far as I remember that is the only difference between using C89 and C99 to build PROJ 5.2.0. Try running the test suite, it should give you a good indication if it works or not.

/Kristian

On 21 Aug 2019, at 13:55, Dechaux Eric CEN (BCQ STIG) <eric.dechaux at gendarmerie.interieur.gouv.fr<mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:


Thanks Kristian,

On Solaris, NAN is not available with C89. Is there an issue to build proj 5 forcing C99 by replacing -std=c89 to -std=c99 in the Makefile, after configure ?


Regards.

Le 21/08/2019 à 12:43, Kristian Evers a écrit :
Eric,

A C++11 compatible compiler is only required for PROJ 6 and onwards. This was introduced with RFC3 [0]. Previous versions was strictly C89, hence the enforcement of that standard in PROJ 5.2.0.

/Kristian

[0] https://proj.org/community/rfc/rfc-3.html

On 16 Aug 2019, at 14:57, Dechaux Eric CEN (BCQ STIG) <eric.dechaux at gendarmerie.interieur.gouv.fr<mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:

Greetings,

I have been investigating proj 5.2.0 build failure on Solaris 11.3 for amd64. At some point the build stops on error because of the NAN being not declared :

gcc -DHAVE_CONFIG_H -I. -DPROJ_LIB=\"/appli/stig/11.3-20190816-104632/share/proj\" -DMUTEX_pthread  -D_FORTIFY_SOURCE=2 -I/usr/include/pcre -I/appli/stig/11.3-20190816-104632/include -Wall -Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter -Wmissing-prototypes -Wmissing-declarations -Wformat -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla -Wdeclaration-after-statement -Wdate-time -Wfloat-conversion -std=gnu89 -m64 -O2 -fstack-protector-strong -fpic -fPIC --param=ssp-buffer-size=4 -I/appli/stig/11.3-20190816-104632/include -DHAVE_C99_MATH=1 -MT proj_strtod.o -MD -MP -MF .deps/proj_strtod.Tpo -c -o proj_strtod.o proj_strtod.c
gie.c: In function ‘cart_selftest’:
gie.c:2008:20: error: ‘NAN’ undeclared (first use in this function)
     a = proj_coord(NAN, NAN, NAN, NAN);
                    ^
gie.c:2008:20: note: each undeclared identifier is reported only once for each function it appears in
make[2]: *** [gie.o] Erreur 1


As the documentation specify a C and C++11 compiler is required I changed the CFLAGS to include -std=gnu11. The build and checks run without errror. Solaris 11.3 is bundled with GCC 5.3 with uses gnu11 by default for C and there should be no reason to force for it on the CFLAGS.

I noticed the configure script detects and automatically adds -std=gnu89 to the CFLAGS :

    checking whether C compiler accepts -Wdocumentation -Wno-documentation-deprecated-sync... no
    checking if -std=gnu89 can be enabled... yes
    checking whether C++ compiler accepts -Wunused-private-field... no


On Solaris this disables the NAN macro as it is C99:

$ cat test.c
#include <stdlib.h>
#include <math.h>

int main (void) {

        float f ;
        f = NAN ;


        exit (EXIT_SUCCESS) ;
}

$ gcc -std=gnu89 test.c
test.c: In function ‘main’:
test.c:7:6: error: ‘NAN’ undeclared (first use in this function)
  f = NAN ;
      ^
test.c:7:6: note: each undeclared identifier is reported only once for each function it appears in

$ gcc -std=gnu99 test.c

$ gcc -std=gnu11 test.c



What is the purpose of forcing C standard to gnu89  ?



Thanks.

-- Eric


Ce message �lectronique et tous les fichiers attach�s qu'il contient sont confidentiels et destin�s exclusivement � l'usage de la personne � laquelle ils sont adress�s. Si vous avez re�u ce message par erreur, merci de le retourner � son �metteur. La publication, l'usage, la distribution, l'impression ou la copie non autoris�e de ce message et des attachements qu'il contient sont strictement interdits.

En cas d'urgence, composez le 17 ou le 112.
Afin de contribuer au respect de l'environnement, merci de n'imprimer cet e-mail qu'en cas de necessite.

This e-mail and any files transmitted with it are confidential and intended solely for the use of the individual to whom it is addressed. If you have received this email in error please send it back to the person that sent it to you. Unauthorized publication, use, dissemination, forwarding, printing or copying of this email and its associated attachments is strictly prohibited.

In case of emergency, dial number 17 or 112.
To contribute to the environmental protection, please print this e-mail only if necessary.
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj


--
<signature.png>
Ce message �lectronique et tous les fichiers attach�s qu'il contient sont confidentiels et destin�s exclusivement � l'usage de la personne � laquelle ils sont adress�s. Si vous avez re�u ce message par erreur, merci de le retourner � son �metteur. La publication, l'usage, la distribution, l'impression ou la copie non autoris�e de ce message et des attachements qu'il contient sont strictement interdits.

En cas d'urgence, composez le 17 ou le 112.
Afin de contribuer au respect de l'environnement, merci de n'imprimer cet e-mail qu'en cas de necessite.

This e-mail and any files transmitted with it are confidential and intended solely for the use of the individual to whom it is addressed. If you have received this email in error please send it back to the person that sent it to you. Unauthorized publication, use, dissemination, forwarding, printing or copying of this email and its associated attachments is strictly prohibited.

In case of emergency, dial number 17 or 112.
To contribute to the environmental protection, please print this e-mail only if necessary.
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/7da73b85/attachment.html>

From eric.dechaux at gendarmerie.interieur.gouv.fr  Wed Aug 21 05:30:11 2019
From: eric.dechaux at gendarmerie.interieur.gouv.fr (Dechaux Eric CEN (BCQ STIG))
Date: Wed, 21 Aug 2019 14:30:11 +0200
Subject: [PROJ] [Internet] Re:  Why is std=gnu89 tested/enabled ?
In-Reply-To: <939984F6-34EC-43F9-91B5-77D61BCF2F3D@sdfe.dk>
References: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>
 <73C2B9B9-D0AC-41C0-9E3D-092EABBE28C4@sdfe.dk>
 <cd804d72-4c28-e3df-db0a-c4fef1a438da@gendarmerie.interieur.gouv.fr>
 <939984F6-34EC-43F9-91B5-77D61BCF2F3D@sdfe.dk>
Message-ID: <fb55ce7f-adea-f4c5-a8ce-975dec34cabe@gendarmerie.interieur.gouv.fr>

The test suite runs properly, so is the calling application (PostgreSQL 
+ PostGIS).


Thanks for the clarification.


Le 21/08/2019 à 14:10, Kristian Evers a écrit :
> No, I don’t think so. Internally PROJ defines some math functions that 
> is first introduced with C99. If the build system detects that they 
> are available with your compiler the system functions are used 
> instead. As far as I remember that is the only difference between 
> using C89 and C99 to build PROJ 5.2.0. Try running the test suite, it 
> should give you a good indication if it works or not.
>
> /Kristian
>
>> On 21 Aug 2019, at 13:55, Dechaux Eric CEN (BCQ STIG) 
>> <eric.dechaux at gendarmerie.interieur.gouv.fr 
>> <mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:
>>
>> Thanks Kristian,
>>
>> On Solaris, NAN is not available with C89. Is there an issue to build 
>> proj 5 forcing C99 by replacing -std=c89 to -std=c99 in the Makefile, 
>> after configure ?
>>
>>
>> Regards.
>>
>>
>> Le 21/08/2019 à 12:43, Kristian Evers a écrit :
>>> Eric,
>>>
>>> A C++11 compatible compiler is only required for PROJ 6 and onwards. 
>>> This was introduced with RFC3 [0]. Previous versions was strictly 
>>> C89, hence the enforcement of that standard in PROJ 5.2.0.
>>>
>>> /Kristian
>>>
>>> [0] https://proj.org/community/rfc/rfc-3.html
>>>
>>>> On 16 Aug 2019, at 14:57, Dechaux Eric CEN (BCQ STIG) 
>>>> <eric.dechaux at gendarmerie.interieur.gouv.fr 
>>>> <mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:
>>>>
>>>> Greetings,
>>>>
>>>> I have been investigating proj 5.2.0 build failure on Solaris 11.3 
>>>> for amd64. At some point the build stops on error because of the 
>>>> NAN being not declared :
>>>>
>>>> gcc -DHAVE_CONFIG_H -I. 
>>>> -DPROJ_LIB=\"/appli/stig/11.3-20190816-104632/share/proj\" 
>>>> -DMUTEX_pthread  -D_FORTIFY_SOURCE=2 -I/usr/include/pcre 
>>>> -I/appli/stig/11.3-20190816-104632/include -Wall 
>>>> -Wdeclaration-after-statement -Wextra -Winit-self 
>>>> -Wunused-parameter -Wmissing-prototypes -Wmissing-declarations 
>>>> -Wformat -Werror=format-security -Wno-format-nonliteral 
>>>> -Wlogical-op -Wshadow -Werror=vla -Wdeclaration-after-statement 
>>>> -Wdate-time -Wfloat-conversion -std=gnu89 -m64 -O2 
>>>> -fstack-protector-strong -fpic -fPIC --param=ssp-buffer-size=4 
>>>> -I/appli/stig/11.3-20190816-104632/include -DHAVE_C99_MATH=1 -MT 
>>>> proj_strtod.o -MD -MP -MF .deps/proj_strtod.Tpo -c -o proj_strtod.o 
>>>> proj_strtod.c
>>>> gie.c: In function ‘cart_selftest’:
>>>> gie.c:2008:20: error: ‘NAN’ undeclared (first use in this function)
>>>>      a = proj_coord(NAN, NAN, NAN, NAN);
>>>>                     ^
>>>> gie.c:2008:20: note: each undeclared identifier is reported only 
>>>> once for each function it appears in
>>>> make[2]: *** [gie.o] Erreur 1
>>>>
>>>>
>>>> As the documentation specify a C and C++11 compiler is required I 
>>>> changed the CFLAGS to include -std=gnu11. The build and checks run 
>>>> without errror. Solaris 11.3 is bundled with GCC 5.3 with uses 
>>>> gnu11 by default for C and there should be no reason to force for 
>>>> it on the CFLAGS.
>>>>
>>>> I noticed the configure script detects and automatically adds 
>>>> -std=gnu89 to the CFLAGS :
>>>>
>>>>     checking whether C compiler accepts -Wdocumentation 
>>>> -Wno-documentation-deprecated-sync... no
>>>>     checking if -std=gnu89 can be enabled... yes
>>>>     checking whether C++ compiler accepts -Wunused-private-field... no
>>>>
>>>>
>>>> On Solaris this disables the NAN macro as it is C99:
>>>>
>>>> $ cat test.c
>>>> #include <stdlib.h>
>>>> #include <math.h>
>>>>
>>>> int main (void) {
>>>>
>>>>         float f ;
>>>>         f = NAN ;
>>>>
>>>>
>>>>         exit (EXIT_SUCCESS) ;
>>>> }
>>>>
>>>> $ gcc -std=gnu89 test.c
>>>> test.c: In function ‘main’:
>>>> test.c:7:6: error: ‘NAN’ undeclared (first use in this function)
>>>>   f = NAN ;
>>>>       ^
>>>> test.c:7:6: note: each undeclared identifier is reported only once 
>>>> for each function it appears in
>>>>
>>>> $ gcc -std=gnu99 test.c
>>>>
>>>> $ gcc -std=gnu11 test.c
>>>>
>>>>
>>>>
>>>> What is the purpose of forcing C standard to gnu89  ?
>>>>
>>>>
>>>>
>>>> Thanks.
>>>>
>>>> -- Eric
>>>>
>>>>
>>>> Ce message �lectronique et tous les fichiers attach�s qu'il 
>>>> contient sont confidentiels et destin�s exclusivement � l'usage de 
>>>> la personne � laquelle ils sont adress�s. Si vous avez re�u ce 
>>>> message par erreur, merci de le retourner � son �metteur. La 
>>>> publication, l'usage, la distribution, l'impression ou la copie non 
>>>> autoris�e de ce message et des attachements qu'il contient sont 
>>>> strictement interdits.
>>>>
>>>> En cas d'urgence, composez le 17 ou le 112.
>>>> Afin de contribuer au respect de l'environnement, merci de 
>>>> n'imprimer cet e-mail qu'en cas de necessite.
>>>>
>>>> This e-mail and any files transmitted with it are confidential and 
>>>> intended solely for the use of the individual to whom it is 
>>>> addressed. If you have received this email in error please send it 
>>>> back to the person that sent it to you. Unauthorized publication, 
>>>> use, dissemination, forwarding, printing or copying of this email 
>>>> and its associated attachments is strictly prohibited.
>>>>
>>>> In case of emergency, dial number 17 or 112.
>>>> To contribute to the environmental protection, please print this 
>>>> e-mail only if necessary.
>>>> _______________________________________________
>>>> PROJ mailing list
>>>> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>
>>
>> -- 
>> <signature.png>
>> Ce message �lectronique et tous les fichiers attach�s qu'il contient 
>> sont confidentiels et destin�s exclusivement � l'usage de la personne 
>> � laquelle ils sont adress�s. Si vous avez re�u ce message par 
>> erreur, merci de le retourner � son �metteur. La publication, 
>> l'usage, la distribution, l'impression ou la copie non autoris�e de 
>> ce message et des attachements qu'il contient sont strictement interdits.
>>
>> En cas d'urgence, composez le 17 ou le 112.
>> Afin de contribuer au respect de l'environnement, merci de n'imprimer 
>> cet e-mail qu'en cas de necessite.
>>
>> This e-mail and any files transmitted with it are confidential and 
>> intended solely for the use of the individual to whom it is 
>> addressed. If you have received this email in error please send it 
>> back to the person that sent it to you. Unauthorized publication, 
>> use, dissemination, forwarding, printing or copying of this email and 
>> its associated attachments is strictly prohibited.
>>
>> In case of emergency, dial number 17 or 112.
>> To contribute to the environmental protection, please print this 
>> e-mail only if necessary.
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>> https://lists.osgeo.org/mailman/listinfo/proj
>

-- 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: avertissement.txt
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/a73b7b3a/attachment-0001.txt>

From markus.metz.giswork at gmail.com  Wed Aug 21 12:46:31 2019
From: markus.metz.giswork at gmail.com (Markus Metz)
Date: Wed, 21 Aug 2019 21:46:31 +0200
Subject: [PROJ] Why is std=gnu89 tested/enabled ?
In-Reply-To: <939984F6-34EC-43F9-91B5-77D61BCF2F3D@sdfe.dk>
References: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>
 <73C2B9B9-D0AC-41C0-9E3D-092EABBE28C4@sdfe.dk>
 <cd804d72-4c28-e3df-db0a-c4fef1a438da@gendarmerie.interieur.gouv.fr>
 <939984F6-34EC-43F9-91B5-77D61BCF2F3D@sdfe.dk>
Message-ID: <CAG+h=FHfESKmE+6b7JN-UctxaNZOSmG7UZy8P5ZDrCPnc4tFhg@mail.gmail.com>

On Wed, Aug 21, 2019 at 2:10 PM Kristian Evers <kreve at sdfe.dk> wrote:
>
> No, I don’t think so. Internally PROJ defines some math functions that is
first introduced with C99. If the build system detects that they are
available with your compiler the system functions are used instead. As far
as I remember that is the only difference between using C89

PROJ used -std=gnu89 which is not the same like -std=c89, because only
gnu89 includes some C99 features which might not be available on Solaris
with -std=gnu89. If PROJ wants to enforce a particular standard, it should
probably use -std=c<xy> instead of -std=gnu<xy>, if PROJ is supposed to
compile on non-GNU (double negation) systems.

my2c

Markus M


> and C99 to build PROJ 5.2.0. Try running the test suite, it should give
you a good indication if it works or not.
>
> /Kristian
>
> On 21 Aug 2019, at 13:55, Dechaux Eric CEN (BCQ STIG) <
eric.dechaux at gendarmerie.interieur.gouv.fr> wrote:
>
> Thanks Kristian,
>
> On Solaris, NAN is not available with C89. Is there an issue to build
proj 5 forcing C99 by replacing -std=c89 to -std=c99 in the Makefile, after
configure ?
>
>
> Regards.
>
>
> Le 21/08/2019 à 12:43, Kristian Evers a écrit :
>
> Eric,
>
> A C++11 compatible compiler is only required for PROJ 6 and onwards. This
was introduced with RFC3 [0]. Previous versions was strictly C89, hence the
enforcement of that standard in PROJ 5.2.0.
>
> /Kristian
>
> [0] https://proj.org/community/rfc/rfc-3.html
>
> On 16 Aug 2019, at 14:57, Dechaux Eric CEN (BCQ STIG) <
eric.dechaux at gendarmerie.interieur.gouv.fr> wrote:
>
> Greetings,
>
> I have been investigating proj 5.2.0 build failure on Solaris 11.3 for
amd64. At some point the build stops on error because of the NAN being not
declared :
>
> gcc -DHAVE_CONFIG_H -I.
-DPROJ_LIB=\"/appli/stig/11.3-20190816-104632/share/proj\" -DMUTEX_pthread
 -D_FORTIFY_SOURCE=2 -I/usr/include/pcre
-I/appli/stig/11.3-20190816-104632/include -Wall
-Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter
-Wmissing-prototypes -Wmissing-declarations -Wformat
-Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow
-Werror=vla -Wdeclaration-after-statement -Wdate-time -Wfloat-conversion
-std=gnu89 -m64 -O2 -fstack-protector-strong -fpic -fPIC
--param=ssp-buffer-size=4 -I/appli/stig/11.3-20190816-104632/include
-DHAVE_C99_MATH=1 -MT proj_strtod.o -MD -MP -MF .deps/proj_strtod.Tpo -c -o
proj_strtod.o proj_strtod.c
> gie.c: In function ‘cart_selftest’:
> gie.c:2008:20: error: ‘NAN’ undeclared (first use in this function)
>      a = proj_coord(NAN, NAN, NAN, NAN);
>                     ^
> gie.c:2008:20: note: each undeclared identifier is reported only once for
each function it appears in
> make[2]: *** [gie.o] Erreur 1
>
>
> As the documentation specify a C and C++11 compiler is required I changed
the CFLAGS to include -std=gnu11. The build and checks run without errror.
Solaris 11.3 is bundled with GCC 5.3 with uses gnu11 by default for C and
there should be no reason to force for it on the CFLAGS.
>
> I noticed the configure script detects and automatically adds -std=gnu89
to the CFLAGS :
>
>     checking whether C compiler accepts -Wdocumentation
-Wno-documentation-deprecated-sync... no
>     checking if -std=gnu89 can be enabled... yes
>     checking whether C++ compiler accepts -Wunused-private-field... no
>
>
> On Solaris this disables the NAN macro as it is C99:
>
> $ cat test.c
> #include <stdlib.h>
> #include <math.h>
>
> int main (void) {
>
>         float f ;
>         f = NAN ;
>
>
>         exit (EXIT_SUCCESS) ;
> }
>
> $ gcc -std=gnu89 test.c
> test.c: In function ‘main’:
> test.c:7:6: error: ‘NAN’ undeclared (first use in this function)
>   f = NAN ;
>       ^
> test.c:7:6: note: each undeclared identifier is reported only once for
each function it appears in
>
> $ gcc -std=gnu99 test.c
>
> $ gcc -std=gnu11 test.c
>
>
>
> What is the purpose of forcing C standard to gnu89  ?
>
>
>
> Thanks.
>
> -- Eric
>
>
> Ce message �lectronique et tous les fichiers attach�s qu'il contient sont
confidentiels et destin�s exclusivement � l'usage de la personne � laquelle
ils sont adress�s. Si vous avez re�u ce message par erreur, merci de le
retourner � son �metteur. La publication, l'usage, la distribution,
l'impression ou la copie non autoris�e de ce message et des attachements
qu'il contient sont strictement interdits.
>
> En cas d'urgence, composez le 17 ou le 112.
> Afin de contribuer au respect de l'environnement, merci de n'imprimer cet
e-mail qu'en cas de necessite.
>
> This e-mail and any files transmitted with it are confidential and
intended solely for the use of the individual to whom it is addressed. If
you have received this email in error please send it back to the person
that sent it to you. Unauthorized publication, use, dissemination,
forwarding, printing or copying of this email and its associated
attachments is strictly prohibited.
>
> In case of emergency, dial number 17 or 112.
> To contribute to the environmental protection, please print this e-mail
only if necessary.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
> --
> <signature.png>
> Ce message �lectronique et tous les fichiers attach�s qu'il contient sont
confidentiels et destin�s exclusivement � l'usage de la personne � laquelle
ils sont adress�s. Si vous avez re�u ce message par erreur, merci de le
retourner � son �metteur. La publication, l'usage, la distribution,
l'impression ou la copie non autoris�e de ce message et des attachements
qu'il contient sont strictement interdits.
>
> En cas d'urgence, composez le 17 ou le 112.
> Afin de contribuer au respect de l'environnement, merci de n'imprimer cet
e-mail qu'en cas de necessite.
>
> This e-mail and any files transmitted with it are confidential and
intended solely for the use of the individual to whom it is addressed. If
you have received this email in error please send it back to the person
that sent it to you. Unauthorized publication, use, dissemination,
forwarding, printing or copying of this email and its associated
attachments is strictly prohibited.
>
> In case of emergency, dial number 17 or 112.
> To contribute to the environmental protection, please print this e-mail
only if necessary.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/48c11af4/attachment.html>

From kreve at sdfe.dk  Wed Aug 21 12:57:45 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 21 Aug 2019 19:57:45 +0000
Subject: [PROJ] Why is std=gnu89 tested/enabled ?
In-Reply-To: <CAG+h=FHfESKmE+6b7JN-UctxaNZOSmG7UZy8P5ZDrCPnc4tFhg@mail.gmail.com>
References: <ded20240-850d-3d34-3e51-cbb4e6639b48@gendarmerie.interieur.gouv.fr>
 <73C2B9B9-D0AC-41C0-9E3D-092EABBE28C4@sdfe.dk>
 <cd804d72-4c28-e3df-db0a-c4fef1a438da@gendarmerie.interieur.gouv.fr>
 <939984F6-34EC-43F9-91B5-77D61BCF2F3D@sdfe.dk>
 <CAG+h=FHfESKmE+6b7JN-UctxaNZOSmG7UZy8P5ZDrCPnc4tFhg@mail.gmail.com>
Message-ID: <41CA184E-74C1-40CE-B839-11E67907E74E@sdfe.dk>

Markus,

This is all from the past. Currently we don’t enforce any particular standard in the build
scripts, exactly because it tended to create issues for users. We do enforce compilation
of PROJ with C++11 on continuous integration tests to check that we don’t accidentally
use constructs from a newer standard. Additionally, we also test that the C API can be
used in an application that is strictly compiled as C89.

/Kristian

On 21 Aug 2019, at 21:46, Markus Metz <markus.metz.giswork at gmail.com<mailto:markus.metz.giswork at gmail.com>> wrote:



On Wed, Aug 21, 2019 at 2:10 PM Kristian Evers <kreve at sdfe.dk<mailto:kreve at sdfe.dk>> wrote:
>
> No, I don’t think so. Internally PROJ defines some math functions that is first introduced with C99. If the build system detects that they are available with your compiler the system functions are used instead. As far as I remember that is the only difference between using C89

PROJ used -std=gnu89 which is not the same like -std=c89, because only gnu89 includes some C99 features which might not be available on Solaris with -std=gnu89. If PROJ wants to enforce a particular standard, it should probably use -std=c<xy> instead of -std=gnu<xy>, if PROJ is supposed to compile on non-GNU (double negation) systems.

my2c

Markus M


> and C99 to build PROJ 5.2.0. Try running the test suite, it should give you a good indication if it works or not.
>
> /Kristian
>
> On 21 Aug 2019, at 13:55, Dechaux Eric CEN (BCQ STIG) <eric.dechaux at gendarmerie.interieur.gouv.fr<mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:
>
> Thanks Kristian,
>
> On Solaris, NAN is not available with C89. Is there an issue to build proj 5 forcing C99 by replacing -std=c89 to -std=c99 in the Makefile, after configure ?
>
>
> Regards.
>
>
> Le 21/08/2019 à 12:43, Kristian Evers a écrit :
>
> Eric,
>
> A C++11 compatible compiler is only required for PROJ 6 and onwards. This was introduced with RFC3 [0]. Previous versions was strictly C89, hence the enforcement of that standard in PROJ 5.2.0.
>
> /Kristian
>
> [0] https://proj.org/community/rfc/rfc-3.html
>
> On 16 Aug 2019, at 14:57, Dechaux Eric CEN (BCQ STIG) <eric.dechaux at gendarmerie.interieur.gouv.fr<mailto:eric.dechaux at gendarmerie.interieur.gouv.fr>> wrote:
>
> Greetings,
>
> I have been investigating proj 5.2.0 build failure on Solaris 11.3 for amd64. At some point the build stops on error because of the NAN being not declared :
>
> gcc -DHAVE_CONFIG_H -I. -DPROJ_LIB=\"/appli/stig/11.3-20190816-104632/share/proj\" -DMUTEX_pthread  -D_FORTIFY_SOURCE=2 -I/usr/include/pcre -I/appli/stig/11.3-20190816-104632/include -Wall -Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter -Wmissing-prototypes -Wmissing-declarations -Wformat -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla -Wdeclaration-after-statement -Wdate-time -Wfloat-conversion -std=gnu89 -m64 -O2 -fstack-protector-strong -fpic -fPIC --param=ssp-buffer-size=4 -I/appli/stig/11.3-20190816-104632/include -DHAVE_C99_MATH=1 -MT proj_strtod.o -MD -MP -MF .deps/proj_strtod.Tpo -c -o proj_strtod.o proj_strtod.c
> gie.c: In function ‘cart_selftest’:
> gie.c:2008:20: error: ‘NAN’ undeclared (first use in this function)
>      a = proj_coord(NAN, NAN, NAN, NAN);
>                     ^
> gie.c:2008:20: note: each undeclared identifier is reported only once for each function it appears in
> make[2]: *** [gie.o] Erreur 1
>
>
> As the documentation specify a C and C++11 compiler is required I changed the CFLAGS to include -std=gnu11. The build and checks run without errror. Solaris 11.3 is bundled with GCC 5.3 with uses gnu11 by default for C and there should be no reason to force for it on the CFLAGS.
>
> I noticed the configure script detects and automatically adds -std=gnu89 to the CFLAGS :
>
>     checking whether C compiler accepts -Wdocumentation -Wno-documentation-deprecated-sync... no
>     checking if -std=gnu89 can be enabled... yes
>     checking whether C++ compiler accepts -Wunused-private-field... no
>
>
> On Solaris this disables the NAN macro as it is C99:
>
> $ cat test.c
> #include <stdlib.h>
> #include <math.h>
>
> int main (void) {
>
>         float f ;
>         f = NAN ;
>
>
>         exit (EXIT_SUCCESS) ;
> }
>
> $ gcc -std=gnu89 test.c
> test.c: In function ‘main’:
> test.c:7:6: error: ‘NAN’ undeclared (first use in this function)
>   f = NAN ;
>       ^
> test.c:7:6: note: each undeclared identifier is reported only once for each function it appears in
>
> $ gcc -std=gnu99 test.c
>
> $ gcc -std=gnu11 test.c
>
>
>
> What is the purpose of forcing C standard to gnu89  ?
>
>
>
> Thanks.
>
> -- Eric
>
>
> Ce message �lectronique et tous les fichiers attach�s qu'il contient sont confidentiels et destin�s exclusivement � l'usage de la personne � laquelle ils sont adress�s. Si vous avez re�u ce message par erreur, merci de le retourner � son �metteur. La publication, l'usage, la distribution, l'impression ou la copie non autoris�e de ce message et des attachements qu'il contient sont strictement interdits.
>
> En cas d'urgence, composez le 17 ou le 112.
> Afin de contribuer au respect de l'environnement, merci de n'imprimer cet e-mail qu'en cas de necessite.
>
> This e-mail and any files transmitted with it are confidential and intended solely for the use of the individual to whom it is addressed. If you have received this email in error please send it back to the person that sent it to you. Unauthorized publication, use, dissemination, forwarding, printing or copying of this email and its associated attachments is strictly prohibited.
>
> In case of emergency, dial number 17 or 112.
> To contribute to the environmental protection, please print this e-mail only if necessary.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
> --
> <signature.png>
> Ce message �lectronique et tous les fichiers attach�s qu'il contient sont confidentiels et destin�s exclusivement � l'usage de la personne � laquelle ils sont adress�s. Si vous avez re�u ce message par erreur, merci de le retourner � son �metteur. La publication, l'usage, la distribution, l'impression ou la copie non autoris�e de ce message et des attachements qu'il contient sont strictement interdits.
>
> En cas d'urgence, composez le 17 ou le 112.
> Afin de contribuer au respect de l'environnement, merci de n'imprimer cet e-mail qu'en cas de necessite.
>
> This e-mail and any files transmitted with it are confidential and intended solely for the use of the individual to whom it is addressed. If you have received this email in error please send it back to the person that sent it to you. Unauthorized publication, use, dissemination, forwarding, printing or copying of this email and its associated attachments is strictly prohibited.
>
> In case of emergency, dial number 17 or 112.
> To contribute to the environmental protection, please print this e-mail only if necessary.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190821/4cfcc98e/attachment-0001.html>

From cameron.shorter at gmail.com  Wed Aug 21 15:50:55 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Thu, 22 Aug 2019 08:50:55 +1000
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment problem
Message-ID: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>

Proj folks,
A bit of an update. A few of us have been refining our thinking and
description of the web-mapping misalignment problem. Scott from the OGC has
noted the importance of this topic and invited us to raise the topics at
the next OGC Technical Committee meeting at Banff (9 Sept). (Getting
approval to travel to the event is becoming trickier than we'd expected.)

The OGC has published a blog post from us summarising the issues:
https://www.opengeospatial.org/blog/3045

And we are working on a more detailed discussion paper which we plan to
socialise within a week or two.

Cheers,
-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190822/8468dc13/attachment.html>

From gdt at lexort.com  Wed Aug 21 17:35:18 2019
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 21 Aug 2019 20:35:18 -0400
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 (Cameron Shorter's message of "Thu, 22 Aug 2019 08:50:55 +1000")
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
Message-ID: <rmir25eca0p.fsf@s1.lexort.com>

Earlier I had a lot of comments; this is far easier to really
understand, so to the extent I was at all helpful (unclear :-) thanks
for listening.

I find the term "misalignment" to be not helpful.  While I understand
what's going on and what you are struggling with, "misalignment" is
conceptually fuzzy on what's actually incorrect.

As I see it, this could point to a root cause a bit more clearly:

  "WGS84" means an ensemble and thus has intrisically limited accuracy
  (of a few meters, avoiding the details)

  using an ensemble as a pivot datum is not a good thing to do (if you
  care about accuracy)

  people treat WGS84 as a low accuracy frame on one hand, and on the
  other hand get upset when their results show the several meter fuzz
  that this datum ensemble is expected to have

(This in addition to coordinates not having velocities, or tiles having
epochs, etc, but my sense is that most of the current pain is from the
null transforms to an ensemble - perhaps I got that wrong.)

Overall, I think your listed options 3/4 to stop using the WGS84 datum
ensemble are necessary long term.

The option "in AU, decide that among the multiple values of WGS84, we
not only mean an old one, but we mean coordinates from a specific epoch,
to sort of make a plate-fixed" is interesting.  That seems to make yet
another variant that isn't any of the actual WGS84 realizations, if I
followed correctly.

It would seem cleaner for the future to declare that AU webmaps are in
GDA2020 at some epoch, and transform the older data.

It would seem useful to add some metadata API call in TMS that returns a
datum object (including epoch).  That seems to be your last option, but
just making that information available over the web API seems not so
hard and could be quite useful.

From roger.oberholtzer at gmail.com  Wed Aug 21 23:30:06 2019
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Thu, 22 Aug 2019 08:30:06 +0200
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
Message-ID: <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>

On Thu, Aug 22, 2019 at 12:51 AM Cameron Shorter
<cameron.shorter at gmail.com> wrote:
>
> Proj folks,
> A bit of an update. A few of us have been refining our thinking and description of the web-mapping misalignment problem. Scott from the OGC has noted the importance of this topic and invited us to raise the topics at the next OGC Technical Committee meeting at Banff (9 Sept). (Getting approval to travel to the event is becoming trickier than we'd expected.)
>
> The OGC has published a blog post from us summarising the issues:
> https://www.opengeospatial.org/blog/3045

I have a question about the WGS84 datum ensemble in regards to GNSS
receivers. When providing WGS84 locations, how would I know which
WGS84 variant is being supplied? Is the receiver involved in this? Or
is it the satellites that control this? Is it enough to know the date
of the measurement? Or must one track more to know which WGS84 variant
is provided?





-- 
Roger Oberholtzer

From nick_mein at trimble.com  Thu Aug 22 00:01:13 2019
From: nick_mein at trimble.com (Nick Mein)
Date: Thu, 22 Aug 2019 19:01:13 +1200
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
Message-ID: <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>

Hi Roger,

The answer is ... it depends.

If you are using autonomous positions then the positions will be in the
reference frame of the satellite orbits. Currently WGS84(G1762) for GPS.
But the precision that you are going to get is a couple of meters at best,
so the difference between different realizations of WGS84 is fairly much
irrelevant. The epoch may be relevant , if the data is still going to be of
interest in a couple of decades time.

If you are using a correction service, then you will need to check with
your service provider to find out the reference frame of the positions that
your receiver is giving you. It could be ITRFxxxx, it could be a local
reference frame such as GDA2020 or NAD83. (For what it is worth - there are
proposals to add reference frame information to NTRIP and/or RTCM, but
currently there is no way to tell without checking with your provider.)

Regards,
Nick.

On Thu, 22 Aug 2019 at 18:30, Roger Oberholtzer <roger.oberholtzer at gmail.com>
wrote:

> On Thu, Aug 22, 2019 at 12:51 AM Cameron Shorter
> <cameron.shorter at gmail.com> wrote:
> >
> > Proj folks,
> > A bit of an update. A few of us have been refining our thinking and
> description of the web-mapping misalignment problem. Scott from the OGC has
> noted the importance of this topic and invited us to raise the topics at
> the next OGC Technical Committee meeting at Banff (9 Sept). (Getting
> approval to travel to the event is becoming trickier than we'd expected.)
> >
> > The OGC has published a blog post from us summarising the issues:
> > https://www.opengeospatial.org/blog/3045
>
> I have a question about the WGS84 datum ensemble in regards to GNSS
> receivers. When providing WGS84 locations, how would I know which
> WGS84 variant is being supplied? Is the receiver involved in this? Or
> is it the satellites that control this? Is it enough to know the date
> of the measurement? Or must one track more to know which WGS84 variant
> is provided?
>
>
>
>
>
> --
> Roger Oberholtzer
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190822/7a5d9ab0/attachment.html>

From jmfluis at gmail.com  Thu Aug 22 01:58:36 2019
From: jmfluis at gmail.com (Joaquim Luis)
Date: Thu, 22 Aug 2019 15:58:36 +0700
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
 <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
Message-ID: <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>

Hello, with the risk of going a bit off topic I have another question about the different WGS84, which is: why are they different?

They all use the same ellipsoid, right? So the difference is in the origin of the referencing system? And if yes, why does it change in the several WGS84 realizations?

Thanks

J Luis

Sent from my iDedo

No dia 22/08/2019, às 14:01, Nick Mein <nick_mein at trimble.com> escreveu:

> Hi Roger,
> 
> The answer is ... it depends.
> 
> If you are using autonomous positions then the positions will be in the reference frame of the satellite orbits. Currently WGS84(G1762) for GPS. But the precision that you are going to get is a couple of meters at best, so the difference between different realizations of WGS84 is fairly much irrelevant. The epoch may be relevant , if the data is still going to be of interest in a couple of decades time.
> 
> If you are using a correction service, then you will need to check with your service provider to find out the reference frame of the positions that your receiver is giving you. It could be ITRFxxxx, it could be a local reference frame such as GDA2020 or NAD83. (For what it is worth - there are proposals to add reference frame information to NTRIP and/or RTCM, but currently there is no way to tell without checking with your provider.)
> 
> Regards,
> Nick.
> 
>> On Thu, 22 Aug 2019 at 18:30, Roger Oberholtzer <roger.oberholtzer at gmail.com> wrote:
>> On Thu, Aug 22, 2019 at 12:51 AM Cameron Shorter
>> <cameron.shorter at gmail.com> wrote:
>> >
>> > Proj folks,
>> > A bit of an update. A few of us have been refining our thinking and description of the web-mapping misalignment problem. Scott from the OGC has noted the importance of this topic and invited us to raise the topics at the next OGC Technical Committee meeting at Banff (9 Sept). (Getting approval to travel to the event is becoming trickier than we'd expected.)
>> >
>> > The OGC has published a blog post from us summarising the issues:
>> > https://www.opengeospatial.org/blog/3045
>> 
>> I have a question about the WGS84 datum ensemble in regards to GNSS
>> receivers. When providing WGS84 locations, how would I know which
>> WGS84 variant is being supplied? Is the receiver involved in this? Or
>> is it the satellites that control this? Is it enough to know the date
>> of the measurement? Or must one track more to know which WGS84 variant
>> is provided?
>> 
>> 
>> 
>> 
>> 
>> -- 
>> Roger Oberholtzer
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190822/89b99a7d/attachment-0001.html>

From nick_mein at trimble.com  Thu Aug 22 03:00:00 2019
From: nick_mein at trimble.com (Nick Mein)
Date: Thu, 22 Aug 2019 22:00:00 +1200
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
 <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
 <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
Message-ID: <CAF3Sn4WnQ=R7vzNCHsWwJkoLWWgUrDKdF_q1Gi2oxwP=kujO+A@mail.gmail.com>

Hi Joaquim,

A non-geodesist, layman's answer from me: New realizations include new
data, and maintain/improve coincidence with the ITRF. See, eg,
http://www.unoosa.org/documents/pdf/icg/2018/icg13/wgd/wgd_12.pdf,
ftp://ftp.nga.mil/pub2/gps/sat_out/SteveM/NGA_ICG11_2Nov.pdf

Regards,
Nick.

On Thu, 22 Aug 2019 at 20:58, Joaquim Luis <jmfluis at gmail.com> wrote:

> Hello, with the risk of going a bit off topic I have another question
> about the different WGS84, which is: why are they different?
>
> They all use the same ellipsoid, right? So the difference is in the origin
> of the referencing system? And if yes, why does it change in the several
> WGS84 realizations?
>
> Thanks
>
> J Luis
>
> Sent from my iDedo
>
> No dia 22/08/2019, às 14:01, Nick Mein <nick_mein at trimble.com> escreveu:
>
> Hi Roger,
>
> The answer is ... it depends.
>
> If you are using autonomous positions then the positions will be in the
> reference frame of the satellite orbits. Currently WGS84(G1762) for GPS.
> But the precision that you are going to get is a couple of meters at best,
> so the difference between different realizations of WGS84 is fairly much
> irrelevant. The epoch may be relevant , if the data is still going to be of
> interest in a couple of decades time.
>
> If you are using a correction service, then you will need to check with
> your service provider to find out the reference frame of the positions that
> your receiver is giving you. It could be ITRFxxxx, it could be a local
> reference frame such as GDA2020 or NAD83. (For what it is worth - there are
> proposals to add reference frame information to NTRIP and/or RTCM, but
> currently there is no way to tell without checking with your provider.)
>
> Regards,
> Nick.
>
> On Thu, 22 Aug 2019 at 18:30, Roger Oberholtzer <
> roger.oberholtzer at gmail.com> wrote:
>
>> On Thu, Aug 22, 2019 at 12:51 AM Cameron Shorter
>> <cameron.shorter at gmail.com> wrote:
>> >
>> > Proj folks,
>> > A bit of an update. A few of us have been refining our thinking and
>> description of the web-mapping misalignment problem. Scott from the OGC has
>> noted the importance of this topic and invited us to raise the topics at
>> the next OGC Technical Committee meeting at Banff (9 Sept). (Getting
>> approval to travel to the event is becoming trickier than we'd expected.)
>> >
>> > The OGC has published a blog post from us summarising the issues:
>> > https://www.opengeospatial.org/blog/3045
>>
>> I have a question about the WGS84 datum ensemble in regards to GNSS
>> receivers. When providing WGS84 locations, how would I know which
>> WGS84 variant is being supplied? Is the receiver involved in this? Or
>> is it the satellites that control this? Is it enough to know the date
>> of the measurement? Or must one track more to know which WGS84 variant
>> is provided?
>>
>>
>>
>>
>>
>> --
>> Roger Oberholtzer
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190822/32abb64f/attachment.html>

From jmfluis at gmail.com  Thu Aug 22 04:26:06 2019
From: jmfluis at gmail.com (Joaquim Luis)
Date: Thu, 22 Aug 2019 18:26:06 +0700
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <CAF3Sn4WnQ=R7vzNCHsWwJkoLWWgUrDKdF_q1Gi2oxwP=kujO+A@mail.gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
 <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
 <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
 <CAF3Sn4WnQ=R7vzNCHsWwJkoLWWgUrDKdF_q1Gi2oxwP=kujO+A@mail.gmail.com>
Message-ID: <9B7A19BD-C3B1-46D2-8C69-63923FE92ED3@gmail.com>

Thanks Nick, learned a bit more.

Joaquim

Sent from my iDedo

No dia 22/08/2019, às 17:00, Nick Mein <nick_mein at trimble.com> escreveu:

> Hi Joaquim,
> 
> A non-geodesist, layman's answer from me: New realizations include new data, and maintain/improve coincidence with the ITRF. See, eg, http://www.unoosa.org/documents/pdf/icg/2018/icg13/wgd/wgd_12.pdf, ftp://ftp.nga.mil/pub2/gps/sat_out/SteveM/NGA_ICG11_2Nov.pdf
> 
> Regards,
> Nick.
> 
>> On Thu, 22 Aug 2019 at 20:58, Joaquim Luis <jmfluis at gmail.com> wrote:
>> Hello, with the risk of going a bit off topic I have another question about the different WGS84, which is: why are they different?
>> 
>> They all use the same ellipsoid, right? So the difference is in the origin of the referencing system? And if yes, why does it change in the several WGS84 realizations?
>> 
>> Thanks
>> 
>> J Luis
>> 
>> Sent from my iDedo
>> 
>> No dia 22/08/2019, às 14:01, Nick Mein <nick_mein at trimble.com> escreveu:
>> 
>>> Hi Roger,
>>> 
>>> The answer is ... it depends.
>>> 
>>> If you are using autonomous positions then the positions will be in the reference frame of the satellite orbits. Currently WGS84(G1762) for GPS. But the precision that you are going to get is a couple of meters at best, so the difference between different realizations of WGS84 is fairly much irrelevant. The epoch may be relevant , if the data is still going to be of interest in a couple of decades time.
>>> 
>>> If you are using a correction service, then you will need to check with your service provider to find out the reference frame of the positions that your receiver is giving you. It could be ITRFxxxx, it could be a local reference frame such as GDA2020 or NAD83. (For what it is worth - there are proposals to add reference frame information to NTRIP and/or RTCM, but currently there is no way to tell without checking with your provider.)
>>> 
>>> Regards,
>>> Nick.
>>> 
>>>> On Thu, 22 Aug 2019 at 18:30, Roger Oberholtzer <roger.oberholtzer at gmail.com> wrote:
>>>> On Thu, Aug 22, 2019 at 12:51 AM Cameron Shorter
>>>> <cameron.shorter at gmail.com> wrote:
>>>> >
>>>> > Proj folks,
>>>> > A bit of an update. A few of us have been refining our thinking and description of the web-mapping misalignment problem. Scott from the OGC has noted the importance of this topic and invited us to raise the topics at the next OGC Technical Committee meeting at Banff (9 Sept). (Getting approval to travel to the event is becoming trickier than we'd expected.)
>>>> >
>>>> > The OGC has published a blog post from us summarising the issues:
>>>> > https://www.opengeospatial.org/blog/3045
>>>> 
>>>> I have a question about the WGS84 datum ensemble in regards to GNSS
>>>> receivers. When providing WGS84 locations, how would I know which
>>>> WGS84 variant is being supplied? Is the receiver involved in this? Or
>>>> is it the satellites that control this? Is it enough to know the date
>>>> of the measurement? Or must one track more to know which WGS84 variant
>>>> is provided?
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> -- 
>>>> Roger Oberholtzer
>>>> _______________________________________________
>>>> PROJ mailing list
>>>> PROJ at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/proj
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190822/80f37f93/attachment.html>

From martin.desruisseaux at geomatys.com  Thu Aug 22 05:23:48 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 22 Aug 2019 14:23:48 +0200
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
 <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
 <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
Message-ID: <fea10ff4-e25e-fd02-a230-997b43ffbdae@geomatys.com>

Le 22/08/2019 à 10:58, Joaquim Luis a écrit :

> Hello, with the risk of going a bit off topic I have another question
> about the different WGS84, which is: why are they different? They all
> use the same ellipsoid, right? So the difference is in the origin of
> the referencing system? And if yes, why does it change in the several
> WGS84 realizations?
>
The origin move slightly between realizations. But in addition of that
translation, the axes may also have a slight rotation and a slight scale
factor (I did not verified if it was the case for WGS84 realizations).
Those changes exist both because of improvement in the accuracy of the
measurements used for defining the WGS 84 reference frame, but also
because datum defined by satellites have their origin at the center of
mass of Earth and that center of mass moves continuously (because of
plates tectonic, convection movements in Earth mantle, etc.).

I think that users looking for stability should use the reference frame
defined by their country instead than any satellite-based datum. For
example for locating points in Australia, use the CRS defined by
Australian mapping agency. National CRS are defined respective to the
continental plate where the country is located. Even if they define a
relationship between national CRS and satellites-based CRS, they take in
account that their continental plate does not move in the same way than
the Earth center of mass and they provide more accurate transformations
between old and new CRS than if we were using the satellite-based CRS. I
would suggest to reserve the use of satellite-based CRS like WGS84 to
the cases where data are already in that CRS anyway (e.g. GPS data), or
span a geographic area too wide for being expressed with a national CRS.

    Martin



From dagnew at ucsd.edu  Thu Aug 22 06:16:40 2019
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Thu, 22 Aug 2019 06:16:40 -0700
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <fea10ff4-e25e-fd02-a230-997b43ffbdae@geomatys.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
 <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
 <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
 <fea10ff4-e25e-fd02-a230-997b43ffbdae@geomatys.com>
Message-ID: <CAG6Em0ADF2Ct7TF3v8ECRT9uUtiF4bABzVGDfa=PWEBdDdeL5w@mail.gmail.com>

I can only speak to ITRF, but the changes in this come mostly from there
being longer time series and more stations. Motion
of the Earth's center of mass is at the sub-cm level--and at this level
there are actual motions of the ground that enter in, from
loading by water changes, or by postglacial rebound. That said, if your
country is all on one plate, and your national authority
has defined a CRS moving with that plate (a plate-fixed system) then that
is probably the one to use, since it maximizes the future
relevance of a value that doesn't include an epoch.

Duncan Agnew

On Thu, Aug 22, 2019 at 5:23 AM Martin Desruisseaux <
martin.desruisseaux at geomatys.com> wrote:

> Le 22/08/2019 à 10:58, Joaquim Luis a écrit :
>
> > Hello, with the risk of going a bit off topic I have another question
> > about the different WGS84, which is: why are they different? They all
> > use the same ellipsoid, right? So the difference is in the origin of
> > the referencing system? And if yes, why does it change in the several
> > WGS84 realizations?
> >
> The origin move slightly between realizations. But in addition of that
> translation, the axes may also have a slight rotation and a slight scale
> factor (I did not verified if it was the case for WGS84 realizations).
> Those changes exist both because of improvement in the accuracy of the
> measurements used for defining the WGS 84 reference frame, but also
> because datum defined by satellites have their origin at the center of
> mass of Earth and that center of mass moves continuously (because of
> plates tectonic, convection movements in Earth mantle, etc.).
>
> I think that users looking for stability should use the reference frame
> defined by their country instead than any satellite-based datum. For
> example for locating points in Australia, use the CRS defined by
> Australian mapping agency. National CRS are defined respective to the
> continental plate where the country is located. Even if they define a
> relationship between national CRS and satellites-based CRS, they take in
> account that their continental plate does not move in the same way than
> the Earth center of mass and they provide more accurate transformations
> between old and new CRS than if we were using the satellite-based CRS. I
> would suggest to reserve the use of satellite-based CRS like WGS84 to
> the cases where data are already in that CRS anyway (e.g. GPS data), or
> span a geographic area too wide for being expressed with a national CRS.
>
>     Martin
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190822/497a0d59/attachment.html>

From jmfluis at gmail.com  Thu Aug 22 06:32:32 2019
From: jmfluis at gmail.com (Joaquim Luis)
Date: Thu, 22 Aug 2019 20:32:32 +0700
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <CAG6Em0ADF2Ct7TF3v8ECRT9uUtiF4bABzVGDfa=PWEBdDdeL5w@mail.gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
 <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
 <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
 <fea10ff4-e25e-fd02-a230-997b43ffbdae@geomatys.com>
 <CAG6Em0ADF2Ct7TF3v8ECRT9uUtiF4bABzVGDfa=PWEBdDdeL5w@mail.gmail.com>
Message-ID: <092B2C80-2551-4823-B529-E56A11FEE8F5@gmail.com>

I learned recently that Earth center of mass changes seasonally due to water accumulation in plants of northern hemisphere at spring. This change is detectable by altimeter satellites. 

Sent from my iDedo

No dia 22/08/2019, às 20:16, Duncan Agnew <dagnew at ucsd.edu> escreveu:

> I can only speak to ITRF, but the changes in this come mostly from there being longer time series and more stations. Motion
> of the Earth's center of mass is at the sub-cm level--and at this level there are actual motions of the ground that enter in, from
> loading by water changes, or by postglacial rebound. That said, if your country is all on one plate, and your national authority
> has defined a CRS moving with that plate (a plate-fixed system) then that is probably the one to use, since it maximizes the future
> relevance of a value that doesn't include an epoch.
> 
> Duncan Agnew
> 
>> On Thu, Aug 22, 2019 at 5:23 AM Martin Desruisseaux <martin.desruisseaux at geomatys.com> wrote:
>> Le 22/08/2019 à 10:58, Joaquim Luis a écrit :
>> 
>> > Hello, with the risk of going a bit off topic I have another question
>> > about the different WGS84, which is: why are they different? They all
>> > use the same ellipsoid, right? So the difference is in the origin of
>> > the referencing system? And if yes, why does it change in the several
>> > WGS84 realizations?
>> >
>> The origin move slightly between realizations. But in addition of that
>> translation, the axes may also have a slight rotation and a slight scale
>> factor (I did not verified if it was the case for WGS84 realizations).
>> Those changes exist both because of improvement in the accuracy of the
>> measurements used for defining the WGS 84 reference frame, but also
>> because datum defined by satellites have their origin at the center of
>> mass of Earth and that center of mass moves continuously (because of
>> plates tectonic, convection movements in Earth mantle, etc.).
>> 
>> I think that users looking for stability should use the reference frame
>> defined by their country instead than any satellite-based datum. For
>> example for locating points in Australia, use the CRS defined by
>> Australian mapping agency. National CRS are defined respective to the
>> continental plate where the country is located. Even if they define a
>> relationship between national CRS and satellites-based CRS, they take in
>> account that their continental plate does not move in the same way than
>> the Earth center of mass and they provide more accurate transformations
>> between old and new CRS than if we were using the satellite-based CRS. I
>> would suggest to reserve the use of satellite-based CRS like WGS84 to
>> the cases where data are already in that CRS anyway (e.g. GPS data), or
>> span a geographic area too wide for being expressed with a national CRS.
>> 
>>     Martin
>> 
>> 
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190822/9462f6ec/attachment.html>

From roger.oberholtzer at gmail.com  Thu Aug 22 07:19:37 2019
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Thu, 22 Aug 2019 16:19:37 +0200
Subject: [PROJ] OGC blog post summarising Web-mapping misalignment
	problem
In-Reply-To: <CAG6Em0ADF2Ct7TF3v8ECRT9uUtiF4bABzVGDfa=PWEBdDdeL5w@mail.gmail.com>
References: <CABqeU+icnt0p0okavch8+akd22POyh9U_YrL4FE+yOcW_XNPkw@mail.gmail.com>
 <CANkOqwPSCfTpuCX=B2nczu63wm_ARDasU2hrftrEaCnPMvbF3Q@mail.gmail.com>
 <CAF3Sn4XS8P6vxnUWT0W9Vcug16JdJP8rZRm0MzOVms4L9tYwQg@mail.gmail.com>
 <14FF240E-D358-4743-98D5-FA800DA25944@gmail.com>
 <fea10ff4-e25e-fd02-a230-997b43ffbdae@geomatys.com>
 <CAG6Em0ADF2Ct7TF3v8ECRT9uUtiF4bABzVGDfa=PWEBdDdeL5w@mail.gmail.com>
Message-ID: <CANkOqwPsG+YV7xpDH=tVvLQMoRwmg+3yr_p9uwR7OOOscMi-hw@mail.gmail.com>

On Thu, Aug 22, 2019 at 3:23 PM Duncan Agnew <dagnew at ucsd.edu> wrote:
>
> I can only speak to ITRF, but the changes in this come mostly from there being longer time series and more stations. Motion
> of the Earth's center of mass is at the sub-cm level--and at this level there are actual motions of the ground that enter in, from
> loading by water changes, or by postglacial rebound. That said, if your country is all on one plate, and your national authority
> has defined a CRS moving with that plate (a plate-fixed system) then that is probably the one to use, since it maximizes the future
> relevance of a value that doesn't include an epoch.

But I'm still not 100% clear how to define my source WGS84 lat/longs
from my GNSS receiver when doing this. How best to know which WGS84 to
use? The local CRS cannot know this. Or so it seems to me.


-- 
Roger Oberholtzer

From cameron.shorter at gmail.com  Thu Aug 22 22:58:14 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Fri, 23 Aug 2019 15:58:14 +1000
Subject: [PROJ] Business Requirements for accurate web-mapping
Message-ID: <CABqeU+iqxxfCn4tvedQi-PMkVdFD4xoV-uYyiNU5+4wKOORT3Q@mail.gmail.com>

To help with framing the problems and potential solutions we face with
accurate web-mapping, I've endeavoured to capture the business requirements
we are trying to solve. (The actual problems and potential solutions I'll
be capturing separately).

Comments and suggestions welcomed.

Geospatial requirements:
1. Support high accuracy mapping.
2. Account for time dependence resulting from tectonic plate movement.
3. Provide accurate map alignment when displaying map layers from disparate
sources.
4. Support calculation, publishing and application of accuracy metadata.
5. Datasets must have a nominated datum (reference frame) and epoch (date).
Epoch is implicitly defined for a static datum and needs to be explicitly
defined in a time-dependent datum.

Usability requirements:
6. Datasets must be able to be transformed between datums.
7. Software applications shall continue to be responsive and performant for
users, including for low-spec clients, such as browsers and mobile apps.
8. Web-mapping services shall continue to scale efficiently to support
multiple users.
9. Users shall continue to be able to save map vector data as static files
(such as KML, GML, GeoJSON), and render at a later point in time.
10. Accuracy information should be embedded in decision workflows.
11. Spatial expertise required to be learned by software implementers
should be minimised.

Software Implementation requirements:
12. Tiled web-mapping shall continue to be supported to address performance
and scaling. In practice, this freezes maps in time.

Derived CRS requirements:
13. Adopt a CRS, datum and projection for publishing map layers with the
following characteristics:
  a. Defined accurately.
  b. Receives accurate transformations from key source CRSs (in particular,
from national/regional datums).
  c. Based on a static, not dynamic, datum.
  d. Aligned with a fixed epoch (date).
  e. Applicable at global and local scales.
  f. Near-universally adopted within web-mapping contexts.


-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190823/6732bfec/attachment.html>

From kreve at sdfe.dk  Mon Aug 26 15:29:34 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 26 Aug 2019 22:29:34 +0000
Subject: [PROJ] PROJ 6.2.0RC1
Message-ID: <2030315A-4E93-43E7-8733-5AC18FCA4F92@sdfe.dk>

All,

With a scheduled release of PROJ 6.2.0. on September 1st it is time to put out a 
release candidate.

Download the archives here:

https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz (https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz.md5) 
https://download.osgeo.org/proj/proj-6.2.0RC1.zip    (https://download.osgeo.org/proj/proj-6.2.0RC1.zip.md5)

See the release notes below.


In addition to the PROJ release candidate I am also issuing a release candidate
for the European datumgrid package. Archives are found here:

https://download.osgeo.org/proj/proj-datumgrid-europe-1.4RC1.tar.gz
https://download.osgeo.org/proj/proj-datumgrid-europe-1.4RC1.zip

The updated grid package includes Swiss grids CHENYX06_etrs.gsb and CHENYX06a.gsb.


Please test the release candidates and report back any problems you
may encounter.

/Kristian

————————————————————————————————————————————————————————————————————————————


6.2.0 Release Notes
-------------------

 Updates
 -------

 o Introduced PROJJSON, a JSON encoding of WKT2 (#1547)

 o Support CRS instantiation of OGC URN's (#1505)

 o Expose scope and remarks of database objects (#1537)

 o EPSG Database updated to version 9.7.0 (#1558)

 o Added C API function proj_grid_get_info_from_database() (#1494)

 o Added C API function
   proj_operation_factory_context_set_discard_superseded() (#1534)

 o Added C API function proj_context_set_autoclose_database() (#1566)

 o Added C API function proj_create_crs_to_crs_from_pj() (#1567)

 o Added C API function proj_cleanup() (#1569)

 Bug Fixes
 ---------

 o Fixed build failure on Solaris systems (#1554)


From nyall.dawson at gmail.com  Mon Aug 26 22:59:58 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 27 Aug 2019 15:59:58 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>

Hi Proj list!

I'm seeking some clarification on the current status in PROJ regarding
handling of 4d time-based coordinate transformations. My understanding
is that PROJ v6 supports this (at least for some transformation
types), but I'm unsure to what level.

So, my initial questions are:

- are you aware of any client applications (outside of those provided
with PROJ) which are currently utilising 4d transformations?

- how complete is PROJ's implemention of ISO 19111? If I have a WKT2
definition including epoch information, is PROJ able to read this and
utilise it to perform 4d transforms? Does current PROJ c api allow
retrieval of epoch information from a CRS object? (I can't see which
method would do this in the API reference). And conversely, if you
wanted to create a CRS object coinciding to a particular epoch, would
you need to manually hand-craft a WKT2 string encapsulating this?

- (more on the gdal side, but..) does any existing data format support
WKT2, and in particular, would allow a dataset to be referenced with
an epoch based CRS definition?

Cheers,
Nyall

From even.rouault at spatialys.com  Tue Aug 27 02:19:36 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 27 Aug 2019 11:19:36 +0200
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
Message-ID: <2619973.5em0Ektf6l@even-i700>

Hi Nyall,

> So, my initial questions are:
> 
> - are you aware of any client applications (outside of those provided
> with PROJ) which are currently utilising 4d transformations?

GDAL can, but this requires usual manual interaction to specify coordinate 
epoch.

> 
> - how complete is PROJ's implemention of ISO 19111? If I have a WKT2
> definition including epoch information, is PROJ able to read this and
> utilise it to perform 4d transforms? Does current PROJ c api allow
> retrieval of epoch information from a CRS object? (I can't see which
> method would do this in the API reference). And conversely, if you
> wanted to create a CRS object coinciding to a particular epoch, would
> you need to manually hand-craft a WKT2 string encapsulating this?

Ah, epochs... There are 2 kind of epochs to consider in WKT2:2018. One that 
characterizes the definition of a dynamic CRS

Like:

GEOGCRS["WGS 84 (G1762)",
  DYNAMIC[FRAMEEPOCH[2005.0]],
  TRF["World Geodetic System 1984 (G1762)",
    ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1.0]
    ]
  ],
  CS[ellipsoidal,3],
    AXIS["(lat)",north,ANGLEUNIT["degree",0.0174532925199433]],
    AXIS["(lon)",east,ANGLEUNIT["degree",0.0174532925199433]],
    AXIS["ellipsoidal height (h)",up,LENGTHUNIT["metre",1.0]]
]

That one is supported by PROJ, but there's no particular behaviour regarding 
it, except storing the frame epoch in a metadata, and be able to re-export it. 
This is mostly an information that has no direct consequence on time-based 
transformations (the frame epoch might be used as the central epoch for time-
dependent transformations from/to such a dynamic CRS, but I don't think this 
is necessarily always the case)

And one that characterizes the epoch of the coordinate themselves. Like:

COORDINATEMETADATA[
  GEOGCRS["WGS 84 (G1762)",
    DYNAMIC[FRAMEEPOCH[2005.0]],
    DATUM["World Geodetic System 1984 (G1762)",
      ELLIPSOID["WGS 84",6378137,298.257223563,LENGTHUNIT["metre",1.0]]
    ],
    CS[ellipsoidal,3],
      AXIS["(lat)",north,ANGLEUNIT["degree",0.0174532925199433]],
      AXIS["(lon)",east,ANGLEUNIT["degree",0.0174532925199433]],
      AXIS["ellipsoidal height (h)",up,LENGTHUNIT["metre",1.0]]
  ],
  EPOCH[2016.47]
]

That one is not supported currently by PROJ. The above object is not a CRS by 
itself, so I wasn't sure what to do with it. Probably it could be accepted as 
a CRS, and the EPOCH of the coordinate could be used to override/set the 
coordinate epoch in X,Y,Z,T tuples. We had a discussion a few weeks ago in a 
thread on this ML about this specfication of coordinate epochs together with 
the CRS, like "WGS 84 (G1726)@2016.47" :

https://lists.osgeo.org/pipermail/proj/2019-June/008668.html
https://lists.osgeo.org/pipermail/proj/2019-June/008669.html
https://lists.osgeo.org/pipermail/proj/2019-June/008670.html

What is supported in PROJ currently is using transformations between plate-
fixed CRS (like GDA2020) and Earth-fixed CRS (like ITRF), when a time-
dependent coordinate frame rotation/position vector transformation is 
available in the EPSG dataset (15-parameter Helmert transformation).

Changes of coordinate epochs, in the same dynamic CRS, like from CRS at XXXX to 
CRS at YYYY, which would likely use plate motion models, are not supported. 
There's no related data in the EPSG dataset for that, nor specific 
transformations in PROJ (but probably that time based Helmert could be used).
If you wanted to do that with a coordinate in Australia expressed in ITRF2014 
you could do that in 2 steps:
ITRF2014 -> GDA2020 (using epoch XXXX as the 4th coordinate)
GDA2020 -> ITRF2014 (using epoch YYYY as the 4th coordinate)

> 
> - (more on the gdal side, but..) does any existing data format support
> WKT2,

Yes, GeoPackage can support WKT2:2015 as a (official) extension (but WKT2:2015 
didn't support any of the above WKT2:2018 constructs). The GDAL GeoPackage 
driver in GDAL 3 supports this extension.

> and in particular, would allow a dataset to be referenced with
> an epoch based CRS definition?

That's the point which is particularly lacking. There are no raster/vector 
formats that have standardized a way of storing a coordinate epoch.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Tue Aug 27 02:42:31 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 27 Aug 2019 19:42:31 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <2619973.5em0Ektf6l@even-i700>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
Message-ID: <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>

On Tue, 27 Aug 2019 at 19:19, Even Rouault <even.rouault at spatialys.com> wrote:
>
> What is supported in PROJ currently is using transformations between plate-
> fixed CRS (like GDA2020) and Earth-fixed CRS (like ITRF), when a time-
> dependent coordinate frame rotation/position vector transformation is
> available in the EPSG dataset (15-parameter Helmert transformation).

Ok - so taking for example the parameters listed on page 9 of
http://icsm.gov.au/sites/default/files/2019-03/ATRF%20Technical%20Implementation%20Plan%20v2.1_0.pdf,
it would be possible to manually perform this transformation in PROJ
today...

> Changes of coordinate epochs, in the same dynamic CRS, like from CRS at XXXX to
> CRS at YYYY, which would likely use plate motion models, are not supported.
> There's no related data in the EPSG dataset for that, nor specific
> transformations in PROJ (but probably that time based Helmert could be used).

What's the ultimate "end goal" here though? Will it reside as the
responsibility of client applications to create the helmert
transformation using these parameters? Will future versions of PROJ
have the internal smarts to avoid client code writing this logic
themselves (obviously, funding dependent!)? Is this being blocked by
the EPSG registry itself and lack of means of encapsulating the
transformation parameters? Is the WKT2 standard capable of describing
the details of a dynamic CRS transform? So many questions! :)

> > - (more on the gdal side, but..) does any existing data format support
> > WKT2,
>
> Yes, GeoPackage can support WKT2:2015 as a (official) extension (but WKT2:2015
> didn't support any of the above WKT2:2018 constructs). The GDAL GeoPackage
> driver in GDAL 3 supports this extension.

So effectively we're dependent on a future GeoPackage extension
allowing WKT2:2018?

> > and in particular, would allow a dataset to be referenced with
> > an epoch based CRS definition?
>
> That's the point which is particularly lacking. There are no raster/vector
> formats that have standardized a way of storing a coordinate epoch.

But, if I understand correctly, WKT2:2018 would be the ultimate answer
to this, in that it would allow us to specify the epoch of a dataset
as an integral part of the data's CRS definition (which it is). So the
standard exists already -- the problem is just(!) that no data formats
support the standard...

Nyall


>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From even.rouault at spatialys.com  Tue Aug 27 08:26:57 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 27 Aug 2019 18:26:57 +0300
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
Message-ID: <20092831.Vsq5taMNi2@even-i700>

On mardi 27 août 2019 19:42:31 CEST Nyall Dawson wrote:
> On Tue, 27 Aug 2019 at 19:19, Even Rouault <even.rouault at spatialys.com> 
wrote:
> > What is supported in PROJ currently is using transformations between
> > plate-
> > fixed CRS (like GDA2020) and Earth-fixed CRS (like ITRF), when a time-
> > dependent coordinate frame rotation/position vector transformation is
> > available in the EPSG dataset (15-parameter Helmert transformation).
> 
> Ok - so taking for example the parameters listed on page 9 of
> http://icsm.gov.au/sites/default/files/2019-03/ATRF%20Technical%20Implementa
> tion%20Plan%20v2.1_0.pdf, it would be possible to manually perform this
> transformation in PROJ today...

Yes, this is a 14/15 parameter Helmert transformation.

> 
> > Changes of coordinate epochs, in the same dynamic CRS, like from CRS at XXXX
> > to CRS at YYYY, which would likely use plate motion models, are not
> > supported. There's no related data in the EPSG dataset for that, nor
> > specific transformations in PROJ (but probably that time based Helmert
> > could be used).

> What's the ultimate "end goal" here though? Will it reside as the
> responsibility of client applications to create the helmert
> transformation using these parameters? Will future versions of PROJ
> have the internal smarts to avoid client code writing this logic
> themselves (obviously, funding dependent!)? 

That would probably be the best solution.

> Is this being blocked by
> the EPSG registry itself and lack of means of encapsulating the
> transformation parameters?

Good questions. I dont't have definite answers.
The EPSG registry doesn't publish time-dependent transformations for CRS A to 
CRS A currently, except for the Canadian NAD83(2011) CRS. Not sure if this is 
a lack of interest, or data, or just that this isn't yet done, but will come 
in future releases of the database.

I've heard there are global plate motions models, but haven't investigated 
what they look like (grids, parametric models... ?) and if they are available 
for "free". Otherwise you could also have models using methods like Helmert on 
a per-area basis.

> Is the WKT2 standard capable of describing
> the details of a dynamic CRS transform? 

WKT2 is just a generic framework to describe transformations. So you can 
potentially put arbitrarily transformations in it. The key is to have 
transformation names / codes that are implemented by PROJ with the appropriate 
math, and up to now, I've used the ones codified by EPSG. And have the 
relevant entries in the database.

> So effectively we're dependent on a future GeoPackage extension
> allowing WKT2:2018?

WKT2:2018 isn't yet published. Hopefully should come out "soon" from ISO / 
OGC.
You'd likely depend on it for the COORDINATEMETADATA construct, if that is 
allowed as a CRS for GeoPackage.

> But, if I understand correctly, WKT2:2018 would be the ultimate answer
> to this, in that it would allow us to specify the epoch of a dataset
> as an integral part of the data's CRS definition (which it is).

Not sure to understand your "what it is", but pedantically, the epoch of the 
dataset is not part of the CRS definition. Anyway...

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Aug 27 08:38:02 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 27 Aug 2019 18:38:02 +0300
Subject: [PROJ] PROJ 6.2.0RC1
In-Reply-To: <2030315A-4E93-43E7-8733-5AC18FCA4F92@sdfe.dk>
References: <2030315A-4E93-43E7-8733-5AC18FCA4F92@sdfe.dk>
Message-ID: <2832493.hq0I5ONNpo@even-i700>

On lundi 26 août 2019 22:29:34 EEST Kristian Evers wrote:
> All,
> 
> With a scheduled release of PROJ 6.2.0. on September 1st it is time to put
> out a 
 release candidate.
> 
> Download the archives here:
> 
> https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz
> (https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz.md5) 
> https://download.osgeo.org/proj/proj-6.2.0RC1.zip   
> (https://download.osgeo.org/proj/proj-6.2.0RC1.zip.md5) 
> See the release notes below.
> 

Works fine with GDAL.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Tue Aug 27 12:49:17 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 28 Aug 2019 05:49:17 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <20092831.Vsq5taMNi2@even-i700>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
Message-ID: <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>

On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > But, if I understand correctly, WKT2:2018 would be the ultimate answer
> > to this, in that it would allow us to specify the epoch of a dataset
> > as an integral part of the data's CRS definition (which it is).
>
> Not sure to understand your "what it is", but pedantically, the epoch of the
> dataset is not part of the CRS definition. Anyway...

Well -- I think it IS a fundamental part of the definition, of equal
importance to other parameters such as false easting/northing. Without
the epoch information the coordinate data becomes meaningless, and
it's required in order to accurately position them. While it would
theoretically be possible to store this information somewhere else in
a dataset's metadata, it's such an integral part of the CRS that
shoving it right into the CRS definition is the right way forward...

Nyall


>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From kreve at sdfe.dk  Tue Aug 27 13:12:27 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 27 Aug 2019 20:12:27 +0000
Subject: [PROJ] Seeking clarification on PROJ support for
	temporal	transformations
In-Reply-To: <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
Message-ID: <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>

Nyall,

The epoch of a coordinate, e.g. the time it was measured, has nothing to do with the CRS definition.
But it is important once you want to transform from one CRS to another or propagate the coordinate
through time in the same CRS. Coordinates in a dataset will not necessarily have the same
measuring time/epoch, which is why it is not a good idea to store that information alongside the CRS
description. This is why 4D coordinates are necessary for dynamic CRS's. You need a XYZT geometry,
as it were.

There are of course exceptions, for instance a raster image where all pixels are captured simultaneous by the sensor. For that it would be nice to have a way to register the capture time in a standardized way. I am not sure if this is already possible with WKT2:2018.

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
Sent: 27. august 2019 22:49
To: Even Rouault <even.rouault at spatialys.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > But, if I understand correctly, WKT2:2018 would be the ultimate answer
> > to this, in that it would allow us to specify the epoch of a dataset
> > as an integral part of the data's CRS definition (which it is).
>
> Not sure to understand your "what it is", but pedantically, the epoch of the
> dataset is not part of the CRS definition. Anyway...

Well -- I think it IS a fundamental part of the definition, of equal
importance to other parameters such as false easting/northing. Without
the epoch information the coordinate data becomes meaningless, and
it's required in order to accurately position them. While it would
theoretically be possible to store this information somewhere else in
a dataset's metadata, it's such an integral part of the CRS that
shoving it right into the CRS definition is the right way forward...

Nyall


>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From kreve at sdfe.dk  Tue Aug 27 13:23:42 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 27 Aug 2019 20:23:42 +0000
Subject: [PROJ] Seeking clarification on PROJ support for
	temporal	transformations
In-Reply-To: <20092831.Vsq5taMNi2@even-i700>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
Message-ID: <5dbb2e1c97594e0bb4307a5d59fa37f7@sdfe.dk>

Even,

> I've heard there are global plate motions models, but haven't investigated 
> what they look like (grids, parametric models... ?) and if they are available 
> for "free". Otherwise you could also have models using methods like Helmert on 
> a per-area basis.

A global plate motion model is part of ITRF2014 [0]. It comes in the form of 
Euler pole rotation parameters. They can be used in a time-dependent Helmert
Transformation. Some time ago I included all the parameters in the ITRF2014 init
file [1]. I use them to transform data from ITRF2014 to the local Greenlandic frame
GR96 (effectively ITRF94 at 1996.623). I've defined a pipeline like this:

proj = pipeline ellps = GRS80
            step inv init = ITRF2014:ITRF94 t_obs = 1996.623
            step inv init = ITRF2014:NOAM   t_epoch=1996.623

I believe that somewhere you can get a set of polygons that define the areas of the
Various tectonic plates. Possible a link is included in the paper in [0] (it's been a while
since I read it).

Regionally or locally it is not uncommon to have 

/Kristian

[0] https://academic.oup.com/gji/article-abstract/209/3/1906/3095992?redirectedFrom=fulltext
[1] https://github.com/OSGeo/PROJ/blob/master/data/ITRF2014


-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 27. august 2019 18:27
To: Nyall Dawson <nyall.dawson at gmail.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

On mardi 27 août 2019 19:42:31 CEST Nyall Dawson wrote:
> On Tue, 27 Aug 2019 at 19:19, Even Rouault <even.rouault at spatialys.com> 
wrote:
> > What is supported in PROJ currently is using transformations between
> > plate-
> > fixed CRS (like GDA2020) and Earth-fixed CRS (like ITRF), when a time-
> > dependent coordinate frame rotation/position vector transformation is
> > available in the EPSG dataset (15-parameter Helmert transformation).
> 
> Ok - so taking for example the parameters listed on page 9 of
> http://icsm.gov.au/sites/default/files/2019-03/ATRF%20Technical%20Implementa
> tion%20Plan%20v2.1_0.pdf, it would be possible to manually perform this
> transformation in PROJ today...

Yes, this is a 14/15 parameter Helmert transformation.

> 
> > Changes of coordinate epochs, in the same dynamic CRS, like from CRS at XXXX
> > to CRS at YYYY, which would likely use plate motion models, are not
> > supported. There's no related data in the EPSG dataset for that, nor
> > specific transformations in PROJ (but probably that time based Helmert
> > could be used).

> What's the ultimate "end goal" here though? Will it reside as the
> responsibility of client applications to create the helmert
> transformation using these parameters? Will future versions of PROJ
> have the internal smarts to avoid client code writing this logic
> themselves (obviously, funding dependent!)? 

That would probably be the best solution.

> Is this being blocked by
> the EPSG registry itself and lack of means of encapsulating the
> transformation parameters?

Good questions. I dont't have definite answers.
The EPSG registry doesn't publish time-dependent transformations for CRS A to 
CRS A currently, except for the Canadian NAD83(2011) CRS. Not sure if this is 
a lack of interest, or data, or just that this isn't yet done, but will come 
in future releases of the database.


> Is the WKT2 standard capable of describing
> the details of a dynamic CRS transform? 

WKT2 is just a generic framework to describe transformations. So you can 
potentially put arbitrarily transformations in it. The key is to have 
transformation names / codes that are implemented by PROJ with the appropriate 
math, and up to now, I've used the ones codified by EPSG. And have the 
relevant entries in the database.

> So effectively we're dependent on a future GeoPackage extension
> allowing WKT2:2018?

WKT2:2018 isn't yet published. Hopefully should come out "soon" from ISO / 
OGC.
You'd likely depend on it for the COORDINATEMETADATA construct, if that is 
allowed as a CRS for GeoPackage.

> But, if I understand correctly, WKT2:2018 would be the ultimate answer
> to this, in that it would allow us to specify the epoch of a dataset
> as an integral part of the data's CRS definition (which it is).

Not sure to understand your "what it is", but pedantically, the epoch of the 
dataset is not part of the CRS definition. Anyway...

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From ccrook at linz.govt.nz  Tue Aug 27 13:27:46 2019
From: ccrook at linz.govt.nz (Chris Crook)
Date: Tue, 27 Aug 2019 20:27:46 +0000
Subject: [PROJ] Seeking clarification on PROJ support
	for	temporal	transformations
In-Reply-To: <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
 <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
Message-ID: <A87E66F06E86F14B857F2EB047CDF932313878D2@prdassexch01.ad.linz.govt.nz>

Nyall

I wonder if the distinction here is that a reference epoch is a parameter of some coordinate transformation functions, such as 14-15 (with ref epoch) Bursa Wolf transformation, rather than a fundamental parameter of the datum.  Similarly false easting is a parameter of some projection transformations.

Traditionally we also like to associate reference epochs with datums, which historically were somewhat arbitrary, for example when the datum was calculated or standardised.   These days they also tend to be used to as an epoch at which the datum was aligned with a global datum.  So in Australia the datum GDA2020 is defined to be aligned with ITRFxxxx (2014?) at 2020.  In New Zealand we used to say that a  NZGD2000 coordinate was "where an object was in 2000", but that is clearly a nonsense for something that didn't exist in 2000, and in any case it is not even true anymore as we have changed some coordinates following earthquakes, but they are still NZGD2000 coordinates.

Essential point is that some transformation functions use a reference epoch, some don't.  The epoch is a parameter of a transformation.  As Even also says, the critical thing is that there is an epoch associated with data.  Without that many datum transformations become even more ambiguous than they already are!

Cheers
Chris

-----Original Message-----
From: PROJ [mailto:proj-bounces at lists.osgeo.org] On Behalf Of Kristian Evers
Sent: Wednesday, 28 August 2019 8:13 a.m.
To: Nyall Dawson; Even Rouault
Cc: PROJ
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

Nyall,

The epoch of a coordinate, e.g. the time it was measured, has nothing to do with the CRS definition.
But it is important once you want to transform from one CRS to another or propagate the coordinate through time in the same CRS. Coordinates in a dataset will not necessarily have the same measuring time/epoch, which is why it is not a good idea to store that information alongside the CRS description. This is why 4D coordinates are necessary for dynamic CRS's. You need a XYZT geometry, as it were.

There are of course exceptions, for instance a raster image where all pixels are captured simultaneous by the sensor. For that it would be nice to have a way to register the capture time in a standardized way. I am not sure if this is already possible with WKT2:2018.

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
Sent: 27. august 2019 22:49
To: Even Rouault <even.rouault at spatialys.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > But, if I understand correctly, WKT2:2018 would be the ultimate
> > answer to this, in that it would allow us to specify the epoch of a
> > dataset as an integral part of the data's CRS definition (which it is).
>
> Not sure to understand your "what it is", but pedantically, the epoch
> of the dataset is not part of the CRS definition. Anyway...

Well -- I think it IS a fundamental part of the definition, of equal importance to other parameters such as false easting/northing. Without the epoch information the coordinate data becomes meaningless, and it's required in order to accurately position them. While it would theoretically be possible to store this information somewhere else in a dataset's metadata, it's such an integral part of the CRS that shoving it right into the CRS definition is the right way forward...

Nyall


>
> --
> Spatialys - Geospatial professional services http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

________________________________

This message contains information, which may be in confidence and may be subject to legal privilege. If you are not the intended recipient, you must not peruse, use, disseminate, distribute or copy this message. If you have received this message in error, please notify us immediately (Phone 0800 665 463 or info at linz.govt.nz) and destroy the original message. LINZ accepts no responsibility for changes to this email, or for any attachments, after its transmission from LINZ. Thank You.

From even.rouault at spatialys.com  Tue Aug 27 13:28:20 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 27 Aug 2019 23:28:20 +0300
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
 <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
Message-ID: <7258459.i04zFyrup5@even-i700>

On mardi 27 août 2019 20:12:27 EEST Kristian Evers wrote:
> Nyall,
> 
> The epoch of a coordinate, e.g. the time it was measured, has nothing to do
> with the CRS definition.
 But it is important once you want to transform
> from one CRS to another or propagate the coordinate through time in the
> same CRS. Coordinates in a dataset will not necessarily have the same
> measuring time/epoch, which is why it is not a good idea to store that
> information alongside the CRS description. This is why 4D coordinates are
> necessary for dynamic CRS's. You need a XYZT geometry, as it were.
> 
> There are of course exceptions, for instance a raster image where all pixels
> are captured simultaneous by the sensor. For that it would be nice to have
> a way to register the capture time in a standardized way. I am not sure if
> this is already possible with WKT2:2018.

The COORDINATEMETADATA[] WKT2:2018 construct I showed in the first reply to 
this thread would be a way to do that. That construct is not acknowledged as a 
CRS by itself but a pair consisting of a CRS + a coordinate epoch

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Aug 27 13:34:35 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 27 Aug 2019 23:34:35 +0300
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <20092831.Vsq5taMNi2@even-i700>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
Message-ID: <4138519.eZhnYTKfua@even-i700>

> WKT2:2018 isn't yet published. Hopefully should come out "soon" from ISO /
> OGC.

OK, I actually see it has now been finally published !
http://docs.opengeospatial.org/is/18-010r7/18-010r7.html

And the ISO19111 spec called on the OGC side as Abstract Topic 2 was already 
available at
http://docs.opengeospatial.org/as/18-005r4/18-005r4.html

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Tue Aug 27 13:53:22 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 28 Aug 2019 06:53:22 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
 <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
Message-ID: <CAB28AsiXdNrEoOxZWoEbP5M2PrNRx0yLLNu3CEM0-eKHPQgdDg@mail.gmail.com>

On Wed, 28 Aug 2019 at 06:12, Kristian Evers <kreve at sdfe.dk> wrote:
>
> Nyall,
>
> The epoch of a coordinate, e.g. the time it was measured, has nothing to do with the CRS definition.
> But it is important once you want to transform from one CRS to another or propagate the coordinate
> through time in the same CRS. Coordinates in a dataset will not necessarily have the same
> measuring time/epoch, which is why it is not a good idea to store that information alongside the CRS
> description. This is why 4D coordinates are necessary for dynamic CRS's. You need a XYZT geometry,
> as it were.

Right... I've been down this rabbit hole already :) My thoughts:

Realistically, we are years away from having support for per-feature
(or per-node(!)) epochs in geospatial data. This brings with it a
whole raft of complications, including throwing out all existing data
formats and replacing them with new formats which support the extra
dimension, and also huge complexities in the UI/UX for end-user
applications. Then there's the added storage/memory/processing
overhead of handling the extra dimension for every geometry
feature/node.

In the near future we're best off aiming for per-dataset epochs. I.e.
a layer has a single reference epoch which applies to all
features/nodes in that layer. This is practically achievable within
the next couple of years, as (above discussions aside) we'd be able to
store the per-dataset epoch in the WKT2 definition of the layer (or in
some other metadata field, or as a sidecar file). The software would
then need to ensure that any newly added features are correctly
transformed back into the reference epoch for the layer to ensure all
features have the same consistent epoch, but that's relatively
straightforward.

Nyall

>
> There are of course exceptions, for instance a raster image where all pixels are captured simultaneous by the sensor. For that it would be nice to have a way to register the capture time in a standardized way. I am not sure if this is already possible with WKT2:2018.
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
> Sent: 27. august 2019 22:49
> To: Even Rouault <even.rouault at spatialys.com>
> Cc: PROJ <proj at lists.osgeo.org>
> Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations
>
> On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > > But, if I understand correctly, WKT2:2018 would be the ultimate answer
> > > to this, in that it would allow us to specify the epoch of a dataset
> > > as an integral part of the data's CRS definition (which it is).
> >
> > Not sure to understand your "what it is", but pedantically, the epoch of the
> > dataset is not part of the CRS definition. Anyway...
>
> Well -- I think it IS a fundamental part of the definition, of equal
> importance to other parameters such as false easting/northing. Without
> the epoch information the coordinate data becomes meaningless, and
> it's required in order to accurately position them. While it would
> theoretically be possible to store this information somewhere else in
> a dataset's metadata, it's such an integral part of the CRS that
> shoving it right into the CRS definition is the right way forward...
>
> Nyall
>
>
> >
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From nyall.dawson at gmail.com  Tue Aug 27 13:56:09 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 28 Aug 2019 06:56:09 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <A87E66F06E86F14B857F2EB047CDF932313878D2@prdassexch01.ad.linz.govt.nz>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
 <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
 <A87E66F06E86F14B857F2EB047CDF932313878D2@prdassexch01.ad.linz.govt.nz>
Message-ID: <CAB28Asi0nUxhQquERfi2MZCWMNq9CfMt_w9b7YjFx_7SK4zUrw@mail.gmail.com>

On Wed, 28 Aug 2019 at 06:27, Chris Crook <ccrook at linz.govt.nz> wrote:
>
> Nyall
>
> I wonder if the distinction here is that a reference epoch is a parameter of some coordinate transformation functions, such as 14-15 (with ref epoch) Bursa Wolf transformation, rather than a fundamental parameter of the datum.  Similarly false easting is a parameter of some projection transformations.

Fair point - but I think Even's follow up regarding storing CRS + a
coordinate epoch (via COORDINATEMETADATA[] WKT2:2018 construct) at a
whole-of-dataset level would address this.

So I guess the EPSG registry (or similar) would include the CRS
definition with its component transformation parameters, and then the
COORDINATEMETADATA element gives the remaining piece of the puzzle
required to use the coordinates...

(This is my new favorite PROJ mailing list thread!)

Nyall


>
> Traditionally we also like to associate reference epochs with datums, which historically were somewhat arbitrary, for example when the datum was calculated or standardised.   These days they also tend to be used to as an epoch at which the datum was aligned with a global datum.  So in Australia the datum GDA2020 is defined to be aligned with ITRFxxxx (2014?) at 2020.  In New Zealand we used to say that a  NZGD2000 coordinate was "where an object was in 2000", but that is clearly a nonsense for something that didn't exist in 2000, and in any case it is not even true anymore as we have changed some coordinates following earthquakes, but they are still NZGD2000 coordinates.
>
> Essential point is that some transformation functions use a reference epoch, some don't.  The epoch is a parameter of a transformation.  As Even also says, the critical thing is that there is an epoch associated with data.  Without that many datum transformations become even more ambiguous than they already are!
>
> Cheers
> Chris
>
> -----Original Message-----
> From: PROJ [mailto:proj-bounces at lists.osgeo.org] On Behalf Of Kristian Evers
> Sent: Wednesday, 28 August 2019 8:13 a.m.
> To: Nyall Dawson; Even Rouault
> Cc: PROJ
> Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations
>
> Nyall,
>
> The epoch of a coordinate, e.g. the time it was measured, has nothing to do with the CRS definition.
> But it is important once you want to transform from one CRS to another or propagate the coordinate through time in the same CRS. Coordinates in a dataset will not necessarily have the same measuring time/epoch, which is why it is not a good idea to store that information alongside the CRS description. This is why 4D coordinates are necessary for dynamic CRS's. You need a XYZT geometry, as it were.
>
> There are of course exceptions, for instance a raster image where all pixels are captured simultaneous by the sensor. For that it would be nice to have a way to register the capture time in a standardized way. I am not sure if this is already possible with WKT2:2018.
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
> Sent: 27. august 2019 22:49
> To: Even Rouault <even.rouault at spatialys.com>
> Cc: PROJ <proj at lists.osgeo.org>
> Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations
>
> On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > > But, if I understand correctly, WKT2:2018 would be the ultimate
> > > answer to this, in that it would allow us to specify the epoch of a
> > > dataset as an integral part of the data's CRS definition (which it is).
> >
> > Not sure to understand your "what it is", but pedantically, the epoch
> > of the dataset is not part of the CRS definition. Anyway...
>
> Well -- I think it IS a fundamental part of the definition, of equal importance to other parameters such as false easting/northing. Without the epoch information the coordinate data becomes meaningless, and it's required in order to accurately position them. While it would theoretically be possible to store this information somewhere else in a dataset's metadata, it's such an integral part of the CRS that shoving it right into the CRS definition is the right way forward...
>
> Nyall
>
>
> >
> > --
> > Spatialys - Geospatial professional services http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
> ________________________________
>
> This message contains information, which may be in confidence and may be subject to legal privilege. If you are not the intended recipient, you must not peruse, use, disseminate, distribute or copy this message. If you have received this message in error, please notify us immediately (Phone 0800 665 463 or info at linz.govt.nz) and destroy the original message. LINZ accepts no responsibility for changes to this email, or for any attachments, after its transmission from LINZ. Thank You.

From nyall.dawson at gmail.com  Tue Aug 27 14:25:37 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 28 Aug 2019 07:25:37 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <20092831.Vsq5taMNi2@even-i700>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
Message-ID: <CAB28AsinJ5yAjW9bXy9wc2h91i74zAXf07BefBQuLCdrpF3q=A@mail.gmail.com>

On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> > But, if I understand correctly, WKT2:2018 would be the ultimate answer
> > to this, in that it would allow us to specify the epoch of a dataset
> > as an integral part of the data's CRS definition (which it is).
>
> Not sure to understand your "what it is", but pedantically, the epoch of the
> dataset is not part of the CRS definition. Anyway...

I concede this point -- the specs clearly are in your favour:

16.1: "Coordinate epoch is not part of a CRS definition, it is
additional metadata for the coordinates which is required to ensure
that they are unambiguous when referenced to a dynamic CRS."

Nyall

>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From even.rouault at spatialys.com  Tue Aug 27 14:50:14 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 28 Aug 2019 00:50:14 +0300
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <5dbb2e1c97594e0bb4307a5d59fa37f7@sdfe.dk>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700> <5dbb2e1c97594e0bb4307a5d59fa37f7@sdfe.dk>
Message-ID: <2096164.pDk9JYgsY7@even-i700>

> 
> A global plate motion model is part of ITRF2014 [0]. It comes in the form of
> 
 Euler pole rotation parameters. They can be used in a time-dependent
> Helmert Transformation. Some time ago I included all the parameters in the
> ITRF2014 init file [1]. I use them to transform data from ITRF2014 to the
> local Greenlandic frame GR96 (effectively ITRF94 at 1996.623). I've defined a
> pipeline like this: 
> proj = pipeline ellps = GRS80
>             step inv init = ITRF2014:ITRF94 t_obs = 1996.623
>             step inv init = ITRF2014:NOAM   t_epoch=1996.623
> 

That's interesting !

I believe there's a small mistake in the ITRF2014 file (or the IGN page might 
have been updated in the meantime) for the ITRF2014:ITRF94 entry. It lacks a 
+drz=0.00002 (the ITRF96 entry as well). I can see it in http://itrf.ign.fr/
doc_ITRF/Transfo-ITRF2014_ITRFs.txt and it is also there in the EPSG dataset:

$ projinfo -s ITRF2014 -t ITRF94 -o PROJ -q
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=cart +ellps=GRS80 +step +inv +proj=helmert 
+x=-0.0074 +y=0.0005 +z=0.0628 +rx=0 +ry=0 +rz=-0.00026 +s=-0.0038 +dx=-0.0001 
+dy=0.0005 +dz=0.0033 +drx=0 +dry=0 +drz=-2e-05 +ds=-0.00012 +t_epoch=2010 
+convention=position_vector +step +inv +proj=cart +ellps=GRS80 +step 
+proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

(the signs are different due to EPSG having ITRF94 to ITRF2014 natively, and 
thus PROJ applying a +inv)

Another detail: the pipeline you mention above is from GR96 to ITRF2014, right 
(due to the 'inv' of ITRF2014:ITRF94) ?
And the last step which I assume is for the northamerica plate motion doesn't 
seem to have any effect as you forced t_obs in the previous step to the 
t_epoch of that step, so the time difference is 0.


$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline 
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623
 2768773.7710  -1598552.2904  5500477.1757 

$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline 
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623 +step +inv 
+init=ITRF2014:NOAM +t_epoch=1996.623
 2768773.7710  -1598552.2904  5500477.1757 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cameron.shorter at gmail.com  Tue Aug 27 16:07:00 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Wed, 28 Aug 2019 09:07:00 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
 transformations
In-Reply-To: <CAB28AsiXdNrEoOxZWoEbP5M2PrNRx0yLLNu3CEM0-eKHPQgdDg@mail.gmail.com>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
 <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
 <CAB28AsiXdNrEoOxZWoEbP5M2PrNRx0yLLNu3CEM0-eKHPQgdDg@mail.gmail.com>
Message-ID: <bfac6548-d291-8e76-babc-b68f10278d99@gmail.com>

I'm interested in this thread because Joel Haasdyk (from NSW Spatial 
Services) will be presenting at the OGC Technical Committee in a few 
weeks on the topics of Australia's experience and pain that we are 
facing with time-dependent datums, misaligned maps in web mapping, need 
to update OGC standards, and a bit more.

I'm helping Joel collate the list of challenges and potential solutions, 
and this thread is a topic which should be on the list.

In particular, I want to question the technical implementability of 
storing observation time with every single coordinate. While this is an 
option for a few high precision use cases, I'd argue that the vast 
majority of use cases would want to store datasets in a globally 
recognised fixed epoch to facilitate interoperability.

So a dataset could store:
* Coordinates of all features, stored at a fixed epoch
* Observation date
* Point Motion Operation (PCO) used to move to fixed epoch. (PCO is new 
term for transformation between epochs). This PCO hopefully can be 
applied in reverse to get back to the original observation date.

So what should I capture about feasibility of implementation, and 
whether it addresses real world use cases.

The last draft of the paper I'm pulling together is here:
https://docs.google.com/document/d/15uBX2qICODRkiHXeksT0zEy6TuysanIxuc4anV0o5F0/edit?usp=drive_web&ouid=110542442124937335472

I'm planning to put out another version at the end of the week.

Cheers, Cameron

On 28/8/19 7:25 am, Nyall Dawson wrote:
> On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
>>> But, if I understand correctly, WKT2:2018 would be the ultimate answer
>>> to this, in that it would allow us to specify the epoch of a dataset
>>> as an integral part of the data's CRS definition (which it is).
>> Not sure to understand your "what it is", but pedantically, the epoch of the
>> dataset is not part of the CRS definition. Anyway...
> I concede this point -- the specs clearly are in your favour:
>
> 16.1: "Coordinate epoch is not part of a CRS definition, it is
> additional metadata for the coordinates which is required to ensure
> that they are unambiguous when referenced to a dynamic CRS."
>
> Nyall
>
On 28/8/19 6:53 am, Nyall Dawson wrote:

> Right... I've been down this rabbit hole already:)  My thoughts:
>
> Realistically, we are years away from having support for per-feature
> (or per-node(!)) epochs in geospatial data. This brings with it a
> whole raft of complications, including throwing out all existing data
> formats and replacing them with new formats which support the extra
> dimension, and also huge complexities in the UI/UX for end-user
> applications. Then there's the added storage/memory/processing
> overhead of handling the extra dimension for every geometry
> feature/node.
>
> In the near future we're best off aiming for per-dataset epochs. I.e.
> a layer has a single reference epoch which applies to all
> features/nodes in that layer. This is practically achievable within
> the next couple of years, as (above discussions aside) we'd be able to
> store the per-dataset epoch in the WKT2 definition of the layer (or in
> some other metadata field, or as a sidecar file). The software would
> then need to ensure that any newly added features are correctly
> transformed back into the reference epoch for the layer to ensure all
> features have the same consistent epoch, but that's relatively
> straightforward.
>
> Nyall
>

-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254


From nyall.dawson at gmail.com  Tue Aug 27 16:28:59 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 28 Aug 2019 09:28:59 +1000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
In-Reply-To: <bfac6548-d291-8e76-babc-b68f10278d99@gmail.com>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
 <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
 <CAB28AsiXdNrEoOxZWoEbP5M2PrNRx0yLLNu3CEM0-eKHPQgdDg@mail.gmail.com>
 <bfac6548-d291-8e76-babc-b68f10278d99@gmail.com>
Message-ID: <CAB28AsjQFZSfvy5MXoMwh52yeRiCOyQJXPbYsnDwTuqVpx0RDA@mail.gmail.com>

On Wed, 28 Aug 2019 at 09:07, Cameron Shorter <cameron.shorter at gmail.com> wrote:
>
> I'm interested in this thread because Joel Haasdyk (from NSW Spatial
> Services) will be presenting at the OGC Technical Committee in a few
> weeks on the topics of Australia's experience and pain that we are
> facing with time-dependent datums, misaligned maps in web mapping, need
> to update OGC standards, and a bit more.
>
> I'm helping Joel collate the list of challenges and potential solutions,
> and this thread is a topic which should be on the list.
>
> In particular, I want to question the technical implementability of
> storing observation time with every single coordinate. While this is an
> option for a few high precision use cases, I'd argue that the vast
> majority of use cases would want to store datasets in a globally
> recognised fixed epoch to facilitate interoperability.
>
> So a dataset could store:
> * Coordinates of all features, stored at a fixed epoch
> * Observation date

This raises an important distinction that we need to keep in mind when
epoch-based datasets become widespread -- we need to carefully present
coordinate epoch as a distinct and completely different concept vs
"observation date". While the WKT2 standard gives us a way of
representing the coordinate epoch, observation/capture date would sit
more comfortably along with other dataset metadata (eg. via
ISO19115)...

Nyall

> * Point Motion Operation (PCO) used to move to fixed epoch. (PCO is new
> term for transformation between epochs). This PCO hopefully can be
> applied in reverse to get back to the original observation date.
>
> So what should I capture about feasibility of implementation, and
> whether it addresses real world use cases.
>
> The last draft of the paper I'm pulling together is here:
> https://docs.google.com/document/d/15uBX2qICODRkiHXeksT0zEy6TuysanIxuc4anV0o5F0/edit?usp=drive_web&ouid=110542442124937335472
>
> I'm planning to put out another version at the end of the week.
>
> Cheers, Cameron
>
> On 28/8/19 7:25 am, Nyall Dawson wrote:
> > On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> >>> But, if I understand correctly, WKT2:2018 would be the ultimate answer
> >>> to this, in that it would allow us to specify the epoch of a dataset
> >>> as an integral part of the data's CRS definition (which it is).
> >> Not sure to understand your "what it is", but pedantically, the epoch of the
> >> dataset is not part of the CRS definition. Anyway...
> > I concede this point -- the specs clearly are in your favour:
> >
> > 16.1: "Coordinate epoch is not part of a CRS definition, it is
> > additional metadata for the coordinates which is required to ensure
> > that they are unambiguous when referenced to a dynamic CRS."
> >
> > Nyall
> >
> On 28/8/19 6:53 am, Nyall Dawson wrote:
>
> > Right... I've been down this rabbit hole already:)  My thoughts:
> >
> > Realistically, we are years away from having support for per-feature
> > (or per-node(!)) epochs in geospatial data. This brings with it a
> > whole raft of complications, including throwing out all existing data
> > formats and replacing them with new formats which support the extra
> > dimension, and also huge complexities in the UI/UX for end-user
> > applications. Then there's the added storage/memory/processing
> > overhead of handling the extra dimension for every geometry
> > feature/node.
> >
> > In the near future we're best off aiming for per-dataset epochs. I.e.
> > a layer has a single reference epoch which applies to all
> > features/nodes in that layer. This is practically achievable within
> > the next couple of years, as (above discussions aside) we'd be able to
> > store the per-dataset epoch in the WKT2 definition of the layer (or in
> > some other metadata field, or as a sidecar file). The software would
> > then need to ensure that any newly added features are correctly
> > transformed back into the reference epoch for the layer to ensure all
> > features have the same consistent epoch, but that's relatively
> > straightforward.
> >
> > Nyall
> >
>
> --
> Cameron Shorter
> Technology Demystifier
> Open Technologies and Geospatial Consultant
>
> M +61 (0) 419 142 254
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From joel.haasdyk at customerservice.nsw.gov.au  Wed Aug 28 03:31:46 2019
From: joel.haasdyk at customerservice.nsw.gov.au (Joel Haasdyk)
Date: Wed, 28 Aug 2019 10:31:46 +0000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
 transformations
Message-ID: <SYCPR01MB5357BB9ADB597C4AE6F8170AE2A30@SYCPR01MB5357.ausprd01.prod.outlook.com>

Apologies for coming in late to the conversation, and replying to the DIGEST no less...


Certainly, 
It is extremely important to bring into focus and differentiate between different ‘epochs’, e.g. 
     (1) ‘Epoch of Expression’ (i.e. the date at which the coordinate is described w.r.t. the CRS).
          a. Explicit for time-dependence frames ITRF2014 (@epoch of expression)
          b. Implicit for static frames:  GDA2020, implicitly @2020.0) 
          c .Forgotten for the masses: WGS84(@epoch of expression???)
     (2 ) ‘Epoch of Observation’ (i.e. the timestamp at which the data was gathered)
     (3) ‘Realisation epoch’, (i.e. ITRF2014 vs ITRF2008)
     (4) ‘Reference epoch’ (i.e. ITRF2014 has reference epoch 2010-01-01)
          ARRRGGG!  
          I've just discovered that EPSG calls this the ‘realization epoch’. Why does it call (3) then?? 
           See EPSG::7789 (ITRF2014), 5332 (ITRF2008), 4269 (NAD83), 7842 (GDA2020)
 

Of all of these, I think ‘Epoch of Expression’ is paramount!
     • ‘Epoch of Expression’ is mandatory to properly describe the coordinate position in the CRS.
     • ‘Epoch of Observation’ on the other hand is optional metadata.
          Along with transformation methods (or lineage), this can be employed to recreate the original observations…
           but is not _necessary_ to describe position.
           Note1)
               “ITRF2014(@2010.0), observed at [unknown epoch]”is more immediately useful, than 
               “ITRF2014(@unknown epoch), observed at 2015.9”
           Note2)
                As the rate of change of a dynamic feature approaches the rate of change of the tectonic plate, 
                the appropriate choice of how to describe the feature becomes more interesting.
                ITRF2014(@2010) @timeseries isn’t a very informative dataset for a perfectly plate-fixed feature! ;-)
     • ‘Realisation epoch’ simply forms part of the CRS definition, but can be a source of confusion for users. 
          This is simply an ‘identifier’ which usually denotes the era in which a datum was defined 
          (often denoting the latest data employed in the definition of the datum).
     • ‘Reference Epoch’ is just used under the bonnet. E.g. the reference point (t0) for defining time-dependent
          parameters such as in a 15 parameter transformation. 

 
As for feature vs dataset level metadata, I’ve always thought feature level metadata was not practicable to implement, as Nyall has suggested below.
However, if I were to create a standard from scratch I would suggest that it should / could simply support the level of detail required by the user or application.
          • Provide dataset level Epoch of Expression, and WHERE REQUIRED allow features to specify their own epoch which supersedes (or modifies) the data-level metadata.
          • Separately, provide for (optional) dataset-level Epoch of Observation, which is also extensible to the feature level if required.
          •Granularity of epoch could be achieved by the supplied precision,
             i.e. decimal places of the year, although this isn’t generally human readable
             (but we live with Lat and Long in this form…)

Sorry for the long post... that's what I get for reading all your contributions in one go!

Joel Haasdyk | GDA2020 Implementation Program Manager (NSW)
--------------------------------------------------------------------------------------------------
Spatial Services | Department of Customer Service
p (02) 87376322 | m 0427 229 589
e Joel.Haasdyk at customerservice.nsw.gov.au
w www.spatial.nsw.gov.au
Level 14 West, McKell Building, 2-24 Rawson Place, Sydney NSW 2000

https://www.icsm.gov.au/gda2020 (FAQs & Forum)
--------------------------------------------------------------------------------------------------


-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of proj-request at lists.osgeo.org
Sent: Wednesday, 28 August 2019 9:07 AM
To: proj at lists.osgeo.org
Subject: PROJ Digest, Vol 10, Issue 20

Send PROJ mailing list submissions to
	proj at lists.osgeo.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://clicktime.symantec.com/37hUAv7MQPNaUxxwsjPTNpr7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj
or, via email, send a message with subject or body 'help' to
	proj-request at lists.osgeo.org

You can reach the person managing the list at
	proj-owner at lists.osgeo.org

When replying, please edit your Subject line so it is more specific than "Re: Contents of PROJ digest..."


Today's Topics:

   1. Re: Seeking clarification on PROJ support for temporal
      transformations (Even Rouault)
   2. Re: Seeking clarification on PROJ support for temporal
      transformations (Nyall Dawson)
   3. Re: Seeking clarification on PROJ support for temporal
      transformations (Nyall Dawson)
   4. Re: Seeking clarification on PROJ support for temporal
      transformations (Nyall Dawson)
   5. Re: Seeking clarification on PROJ support for temporal
      transformations (Even Rouault)
   6. Re: Seeking clarification on PROJ support for temporal
      transformations (Cameron Shorter)


----------------------------------------------------------------------

Message: 1
Date: Tue, 27 Aug 2019 23:34:35 +0300
From: Even Rouault <even.rouault at spatialys.com>
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID: <4138519.eZhnYTKfua at even-i700>
Content-Type: text/plain; charset="us-ascii"

> WKT2:2018 isn't yet published. Hopefully should come out "soon" from 
> ISO / OGC.

OK, I actually see it has now been finally published !
https://clicktime.symantec.com/3JRKQYkqoKCNcPGd1eoi9AL7Vc?u=http%3A%2F%2Fdocs.opengeospatial.org%2Fis%2F18-010r7%2F18-010r7.html

And the ISO19111 spec called on the OGC side as Abstract Topic 2 was already available at https://clicktime.symantec.com/3RHKY1g1VYCn14v29BsQFC97Vc?u=http%3A%2F%2Fdocs.opengeospatial.org%2Fas%2F18-005r4%2F18-005r4.html

--
Spatialys - Geospatial professional services https://clicktime.symantec.com/3LRVJEevh8vqiD9DDeK88QQ7Vc?u=http%3A%2F%2Fwww.spatialys.com


------------------------------

Message: 2
Date: Wed, 28 Aug 2019 06:53:22 +1000
From: Nyall Dawson <nyall.dawson at gmail.com>
To: Kristian Evers <kreve at sdfe.dk>
Cc: Even Rouault <even.rouault at spatialys.com>, PROJ
	<proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID:
	<CAB28AsiXdNrEoOxZWoEbP5M2PrNRx0yLLNu3CEM0-eKHPQgdDg at mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"

On Wed, 28 Aug 2019 at 06:12, Kristian Evers <kreve at sdfe.dk> wrote:
>
> Nyall,
>
> The epoch of a coordinate, e.g. the time it was measured, has nothing to do with the CRS definition.
> But it is important once you want to transform from one CRS to another or propagate the coordinate
> through time in the same CRS. Coordinates in a dataset will not necessarily have the same
> measuring time/epoch, which is why it is not a good idea to store that information alongside the CRS
> description. This is why 4D coordinates are necessary for dynamic CRS's. You need a XYZT geometry,
> as it were.

Right... I've been down this rabbit hole already :) My thoughts:

Realistically, we are years away from having support for per-feature
(or per-node(!)) epochs in geospatial data. This brings with it a
whole raft of complications, including throwing out all existing data
formats and replacing them with new formats which support the extra
dimension, and also huge complexities in the UI/UX for end-user
applications. Then there's the added storage/memory/processing
overhead of handling the extra dimension for every geometry
feature/node.

In the near future we're best off aiming for per-dataset epochs. I.e.
a layer has a single reference epoch which applies to all
features/nodes in that layer. This is practically achievable within
the next couple of years, as (above discussions aside) we'd be able to
store the per-dataset epoch in the WKT2 definition of the layer (or in
some other metadata field, or as a sidecar file). The software would
then need to ensure that any newly added features are correctly
transformed back into the reference epoch for the layer to ensure all
features have the same consistent epoch, but that's relatively
straightforward.

Nyall

>
> There are of course exceptions, for instance a raster image where all pixels are captured simultaneous by the sensor. For that it would be nice to have a way to register the capture time in a standardized way. I am not sure if this is already possible with WKT2:2018.
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
> Sent: 27. august 2019 22:49
> To: Even Rouault <even.rouault at spatialys.com>
> Cc: PROJ <proj at lists.osgeo.org>
> Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations
>
> On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > > But, if I understand correctly, WKT2:2018 would be the ultimate answer
> > > to this, in that it would allow us to specify the epoch of a dataset
> > > as an integral part of the data's CRS definition (which it is).
> >
> > Not sure to understand your "what it is", but pedantically, the epoch of the
> > dataset is not part of the CRS definition. Anyway...
>
> Well -- I think it IS a fundamental part of the definition, of equal
> importance to other parameters such as false easting/northing. Without
> the epoch information the coordinate data becomes meaningless, and
> it's required in order to accurately position them. While it would
> theoretically be possible to store this information somewhere else in
> a dataset's metadata, it's such an integral part of the CRS that
> shoving it right into the CRS definition is the right way forward...
>
> Nyall
>
>
> >
> > --
> > Spatialys - Geospatial professional services
> > https://clicktime.symantec.com/3LRVJEevh8vqiD9DDeK88QQ7Vc?u=http%3A%2F%2Fwww.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://clicktime.symantec.com/37hUAv7MQPNaUxxwsjPTNpr7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj


------------------------------

Message: 3
Date: Wed, 28 Aug 2019 06:56:09 +1000
From: Nyall Dawson <nyall.dawson at gmail.com>
To: Chris Crook <ccrook at linz.govt.nz>
Cc: Kristian Evers <kreve at sdfe.dk>, Even Rouault
	<even.rouault at spatialys.com>,  PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID:
	<CAB28Asi0nUxhQquERfi2MZCWMNq9CfMt_w9b7YjFx_7SK4zUrw at mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"

On Wed, 28 Aug 2019 at 06:27, Chris Crook <ccrook at linz.govt.nz> wrote:
>
> Nyall
>
> I wonder if the distinction here is that a reference epoch is a parameter of some coordinate transformation functions, such as 14-15 (with ref epoch) Bursa Wolf transformation, rather than a fundamental parameter of the datum.  Similarly false easting is a parameter of some projection transformations.

Fair point - but I think Even's follow up regarding storing CRS + a
coordinate epoch (via COORDINATEMETADATA[] WKT2:2018 construct) at a
whole-of-dataset level would address this.

So I guess the EPSG registry (or similar) would include the CRS
definition with its component transformation parameters, and then the
COORDINATEMETADATA element gives the remaining piece of the puzzle
required to use the coordinates...

(This is my new favorite PROJ mailing list thread!)

Nyall


>
> Traditionally we also like to associate reference epochs with datums, which historically were somewhat arbitrary, for example when the datum was calculated or standardised.   These days they also tend to be used to as an epoch at which the datum was aligned with a global datum.  So in Australia the datum GDA2020 is defined to be aligned with ITRFxxxx (2014?) at 2020.  In New Zealand we used to say that a  NZGD2000 coordinate was "where an object was in 2000", but that is clearly a nonsense for something that didn't exist in 2000, and in any case it is not even true anymore as we have changed some coordinates following earthquakes, but they are still NZGD2000 coordinates.
>
> Essential point is that some transformation functions use a reference epoch, some don't.  The epoch is a parameter of a transformation.  As Even also says, the critical thing is that there is an epoch associated with data.  Without that many datum transformations become even more ambiguous than they already are!
>
> Cheers
> Chris
>
> -----Original Message-----
> From: PROJ [mailto:proj-bounces at lists.osgeo.org] On Behalf Of Kristian Evers
> Sent: Wednesday, 28 August 2019 8:13 a.m.
> To: Nyall Dawson; Even Rouault
> Cc: PROJ
> Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations
>
> Nyall,
>
> The epoch of a coordinate, e.g. the time it was measured, has nothing to do with the CRS definition.
> But it is important once you want to transform from one CRS to another or propagate the coordinate through time in the same CRS. Coordinates in a dataset will not necessarily have the same measuring time/epoch, which is why it is not a good idea to store that information alongside the CRS description. This is why 4D coordinates are necessary for dynamic CRS's. You need a XYZT geometry, as it were.
>
> There are of course exceptions, for instance a raster image where all pixels are captured simultaneous by the sensor. For that it would be nice to have a way to register the capture time in a standardized way. I am not sure if this is already possible with WKT2:2018.
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
> Sent: 27. august 2019 22:49
> To: Even Rouault <even.rouault at spatialys.com>
> Cc: PROJ <proj at lists.osgeo.org>
> Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations
>
> On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > > But, if I understand correctly, WKT2:2018 would be the ultimate
> > > answer to this, in that it would allow us to specify the epoch of a
> > > dataset as an integral part of the data's CRS definition (which it is).
> >
> > Not sure to understand your "what it is", but pedantically, the epoch
> > of the dataset is not part of the CRS definition. Anyway...
>
> Well -- I think it IS a fundamental part of the definition, of equal importance to other parameters such as false easting/northing. Without the epoch information the coordinate data becomes meaningless, and it's required in order to accurately position them. While it would theoretically be possible to store this information somewhere else in a dataset's metadata, it's such an integral part of the CRS that shoving it right into the CRS definition is the right way forward...
>
> Nyall
>
>
> >
> > --
> > Spatialys - Geospatial professional services https://clicktime.symantec.com/3LRVJEevh8vqiD9DDeK88QQ7Vc?u=http%3A%2F%2Fwww.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://clicktime.symantec.com/37hUAv7MQPNaUxxwsjPTNpr7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://clicktime.symantec.com/37hUAv7MQPNaUxxwsjPTNpr7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj
>
> ________________________________
>
> This message contains information, which may be in confidence and may be subject to legal privilege. If you are not the intended recipient, you must not peruse, use, disseminate, distribute or copy this message. If you have received this message in error, please notify us immediately (Phone 0800 665 463 or info at linz.govt.nz) and destroy the original message. LINZ accepts no responsibility for changes to this email, or for any attachments, after its transmission from LINZ. Thank You.


------------------------------

Message: 4
Date: Wed, 28 Aug 2019 07:25:37 +1000
From: Nyall Dawson <nyall.dawson at gmail.com>
To: Even Rouault <even.rouault at spatialys.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID:
	<CAB28AsinJ5yAjW9bXy9wc2h91i74zAXf07BefBQuLCdrpF3q=A at mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"

On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> > But, if I understand correctly, WKT2:2018 would be the ultimate answer
> > to this, in that it would allow us to specify the epoch of a dataset
> > as an integral part of the data's CRS definition (which it is).
>
> Not sure to understand your "what it is", but pedantically, the epoch of the
> dataset is not part of the CRS definition. Anyway...

I concede this point -- the specs clearly are in your favour:

16.1: "Coordinate epoch is not part of a CRS definition, it is
additional metadata for the coordinates which is required to ensure
that they are unambiguous when referenced to a dynamic CRS."

Nyall

>
> --
> Spatialys - Geospatial professional services
> https://clicktime.symantec.com/3LRVJEevh8vqiD9DDeK88QQ7Vc?u=http%3A%2F%2Fwww.spatialys.com


------------------------------

Message: 5
Date: Wed, 28 Aug 2019 00:50:14 +0300
From: Even Rouault <even.rouault at spatialys.com>
To: Kristian Evers <kreve at sdfe.dk>
Cc: Nyall Dawson <nyall.dawson at gmail.com>, PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID: <2096164.pDk9JYgsY7 at even-i700>
Content-Type: text/plain; charset="us-ascii"

> 
> A global plate motion model is part of ITRF2014 [0]. It comes in the form of
> 
 Euler pole rotation parameters. They can be used in a time-dependent
> Helmert Transformation. Some time ago I included all the parameters in the
> ITRF2014 init file [1]. I use them to transform data from ITRF2014 to the
> local Greenlandic frame GR96 (effectively ITRF94 at 1996.623). I've defined a
> pipeline like this: 
> proj = pipeline ellps = GRS80
>             step inv init = ITRF2014:ITRF94 t_obs = 1996.623
>             step inv init = ITRF2014:NOAM   t_epoch=1996.623
> 

That's interesting !

I believe there's a small mistake in the ITRF2014 file (or the IGN page might 
have been updated in the meantime) for the ITRF2014:ITRF94 entry. It lacks a 
+drz=0.00002 (the ITRF96 entry as well). I can see it in https://clicktime.symantec.com/3DYnpibATcWTafjkYa66Zbh7Vc?u=http%3A%2F%2Fitrf.ign.fr%2F
doc_ITRF/Transfo-ITRF2014_ITRFs.txt and it is also there in the EPSG dataset:

$ projinfo -s ITRF2014 -t ITRF94 -o PROJ -q
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=cart +ellps=GRS80 +step +inv +proj=helmert 
+x=-0.0074 +y=0.0005 +z=0.0628 +rx=0 +ry=0 +rz=-0.00026 +s=-0.0038 +dx=-0.0001 
+dy=0.0005 +dz=0.0033 +drx=0 +dry=0 +drz=-2e-05 +ds=-0.00012 +t_epoch=2010 
+convention=position_vector +step +inv +proj=cart +ellps=GRS80 +step 
+proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

(the signs are different due to EPSG having ITRF94 to ITRF2014 natively, and 
thus PROJ applying a +inv)

Another detail: the pipeline you mention above is from GR96 to ITRF2014, right 
(due to the 'inv' of ITRF2014:ITRF94) ?
And the last step which I assume is for the northamerica plate motion doesn't 
seem to have any effect as you forced t_obs in the previous step to the 
t_epoch of that step, so the time difference is 0.


$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline 
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623
 2768773.7710  -1598552.2904  5500477.1757 

$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline 
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623 +step +inv 
+init=ITRF2014:NOAM +t_epoch=1996.623
 2768773.7710  -1598552.2904  5500477.1757 

Even

-- 
Spatialys - Geospatial professional services
https://clicktime.symantec.com/3LRVJEevh8vqiD9DDeK88QQ7Vc?u=http%3A%2F%2Fwww.spatialys.com


------------------------------

Message: 6
Date: Wed, 28 Aug 2019 09:07:00 +1000
From: Cameron Shorter <cameron.shorter at gmail.com>
To: proj at lists.osgeo.org
Cc: Joel Haasdyk <Joel.Haasdyk at finance.nsw.gov.au>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID: <bfac6548-d291-8e76-babc-b68f10278d99 at gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed

I'm interested in this thread because Joel Haasdyk (from NSW Spatial 
Services) will be presenting at the OGC Technical Committee in a few 
weeks on the topics of Australia's experience and pain that we are 
facing with time-dependent datums, misaligned maps in web mapping, need 
to update OGC standards, and a bit more.

I'm helping Joel collate the list of challenges and potential solutions, 
and this thread is a topic which should be on the list.

In particular, I want to question the technical implementability of 
storing observation time with every single coordinate. While this is an 
option for a few high precision use cases, I'd argue that the vast 
majority of use cases would want to store datasets in a globally 
recognised fixed epoch to facilitate interoperability.

So a dataset could store:
* Coordinates of all features, stored at a fixed epoch
* Observation date
* Point Motion Operation (PCO) used to move to fixed epoch. (PCO is new 
term for transformation between epochs). This PCO hopefully can be 
applied in reverse to get back to the original observation date.

So what should I capture about feasibility of implementation, and 
whether it addresses real world use cases.

The last draft of the paper I'm pulling together is here:
https://clicktime.symantec.com/3TXKQycNfbKob6ERPJq5kdE7Vc?u=https%3A%2F%2Fdocs.google.com%2Fdocument%2Fd%2F15uBX2qICODRkiHXeksT0zEy6TuysanIxuc4anV0o5F0%2Fedit%3Fusp%3Ddrive_web%26ouid%3D110542442124937335472

I'm planning to put out another version at the end of the week.

Cheers, Cameron

On 28/8/19 7:25 am, Nyall Dawson wrote:
> On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
>>> But, if I understand correctly, WKT2:2018 would be the ultimate answer
>>> to this, in that it would allow us to specify the epoch of a dataset
>>> as an integral part of the data's CRS definition (which it is).
>> Not sure to understand your "what it is", but pedantically, the epoch of the
>> dataset is not part of the CRS definition. Anyway...
> I concede this point -- the specs clearly are in your favour:
>
> 16.1: "Coordinate epoch is not part of a CRS definition, it is
> additional metadata for the coordinates which is required to ensure
> that they are unambiguous when referenced to a dynamic CRS."
>
> Nyall
>
On 28/8/19 6:53 am, Nyall Dawson wrote:

> Right... I've been down this rabbit hole already:)  My thoughts:
>
> Realistically, we are years away from having support for per-feature
> (or per-node(!)) epochs in geospatial data. This brings with it a
> whole raft of complications, including throwing out all existing data
> formats and replacing them with new formats which support the extra
> dimension, and also huge complexities in the UI/UX for end-user
> applications. Then there's the added storage/memory/processing
> overhead of handling the extra dimension for every geometry
> feature/node.
>
> In the near future we're best off aiming for per-dataset epochs. I.e.
> a layer has a single reference epoch which applies to all
> features/nodes in that layer. This is practically achievable within
> the next couple of years, as (above discussions aside) we'd be able to
> store the per-dataset epoch in the WKT2 definition of the layer (or in
> some other metadata field, or as a sidecar file). The software would
> then need to ensure that any newly added features are correctly
> transformed back into the reference epoch for the layer to ensure all
> features have the same consistent epoch, but that's relatively
> straightforward.
>
> Nyall
>

-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254



------------------------------

Subject: Digest Footer

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://clicktime.symantec.com/37hUAv7MQPNaUxxwsjPTNpr7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj


------------------------------

End of PROJ Digest, Vol 10, Issue 20
************************************

**********************************************************************************
This email message and any attached files is confidential and intended solely for the use of the individual or entity to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure under applicable law. If you have received this email in error, delete all copies and notify the sender.

This email is subject to copyright. No part of it should be reproduced, published, communicated or adapted without the copyright owner's written consent. No employee or agent is authorised to conclude any binding agreement on behalf of the Department of Customer Service (DCS) by email without express written confirmation.

The views or opinions presented in this email are solely those of the author and do not necessarily represent those of the DCS. DCS accepts no liability for any loss or damage arising from the use of this email and the recipient should check this email and any attached files for the presence of viruses.

**********************************************************************************

From joel.haasdyk at customerservice.nsw.gov.au  Wed Aug 28 04:05:31 2019
From: joel.haasdyk at customerservice.nsw.gov.au (Joel Haasdyk)
Date: Wed, 28 Aug 2019 11:05:31 +0000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
 transformations
Message-ID: <SYCPR01MB5357AC606CBCC6634132B138E2A30@SYCPR01MB5357.ausprd01.prod.outlook.com>

Indeed, 

Any regular tectonic plate motion can be expressed as a 3 parameter Euler Pole, which can in turn be expressed in the familiar Helmert 14 (15) parameter transformation format, as three Cartesian axial rotation rates (all other components equal 0).
See https://geodesy.noaa.gov/PUBS_LIB/NOAA_TR_NOS_NGS_0062.pdf
See http://www.quickclose.com.au/StanawayetalREFAGppt.pdf 

Case in point are these:
EPSG:: 8049 GDA2020 <=> ITRF2014, with reference epoch 2020.0)
EPSG::8448 GDA2020 <=> WGS84(G1792), with 'parameter reference epoch' @2020.0)
Where GDA2020 is essentially a snapshot of ITRF2014 at 2020.0.

So EPSG can and does publish time-dependent transformations... 
(this is not new, e.g. EPSG::8078 ITRF2000 <=> ITRF2014 for example)
...just not (yet) explicitly from CRS_A(@epoch1) to CRS_A(@epoch2). I could be wrong. 
However... EPSG::8049 gives you all the info you need to transform from 
ITRF2014(@epoch1) <=> ITRF2014(@2020.0) <=> ITRF2014(@epoch2)

Joel Haasdyk

------------------------------

Message: 5 from Digest 20
Date: Wed, 28 Aug 2019 00:50:14 +0300
From: Even Rouault <even.rouault at spatialys.com>
To: Kristian Evers <kreve at sdfe.dk>
Cc: Nyall Dawson <nyall.dawson at gmail.com>, PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal
	transformations
Message-ID: <2096164.pDk9JYgsY7 at even-i700>
Content-Type: text/plain; charset="us-ascii"

> 
> A global plate motion model is part of ITRF2014 [0]. It comes in the form of
> 
 Euler pole rotation parameters. They can be used in a time-dependent
> Helmert Transformation. Some time ago I included all the parameters in the
> ITRF2014 init file [1]. I use them to transform data from ITRF2014 to the
> local Greenlandic frame GR96 (effectively ITRF94 at 1996.623). I've defined a
> pipeline like this: 
> proj = pipeline ellps = GRS80
>             step inv init = ITRF2014:ITRF94 t_obs = 1996.623
>             step inv init = ITRF2014:NOAM   t_epoch=1996.623
> 

----
Also copied from Archive:
>Even Rouault even.rouault at spatialys.com 
>Tue Aug 27 08:26:57 PDT 2019
>
>That would probably be the best solution.
>
>> Is this being blocked by
>> the EPSG registry itself and lack of means of encapsulating the
>> transformation parameters?
>
>Good questions. I dont't have definite answers.
>The EPSG registry doesn't publish time-dependent transformations for CRS A to 
>CRS A currently, except for the Canadian NAD83(2011) CRS. Not sure if this is 
>a lack of interest, or data, or just that this isn't yet done, but will come 
>in future releases of the database.

>I've heard there are global plate motions models, but haven't investigated 
>what they look like (grids, parametric models... ?) and if they are available 
>for "free". Otherwise you could also have models using methods like Helmert on 
>a per-area basis.

**********************************************************************************
This email message and any attached files is confidential and intended solely for the use of the individual or entity to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure under applicable law. If you have received this email in error, delete all copies and notify the sender.

This email is subject to copyright. No part of it should be reproduced, published, communicated or adapted without the copyright owner's written consent. No employee or agent is authorised to conclude any binding agreement on behalf of the Department of Customer Service (DCS) by email without express written confirmation.

The views or opinions presented in this email are solely those of the author and do not necessarily represent those of the DCS. DCS accepts no liability for any loss or damage arising from the use of this email and the recipient should check this email and any attached files for the presence of viruses.

**********************************************************************************

From kreve at sdfe.dk  Wed Aug 28 05:16:16 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 28 Aug 2019 12:16:16 +0000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
 transformations
In-Reply-To: <2096164.pDk9JYgsY7@even-i700>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700> <5dbb2e1c97594e0bb4307a5d59fa37f7@sdfe.dk>
 <2096164.pDk9JYgsY7@even-i700>
Message-ID: <3c864e988d1e4661976b76bc47cae19a@sdfe.dk>

> I believe there's a small mistake in the ITRF2014 file (or the IGN page might 
> have been updated in the meantime) for the ITRF2014:ITRF94 entry. It lacks a 
> +drz=0.00002 (the ITRF96 entry as well).

Good catch! Originally I entered the parameters manually so it is not a surprise
that I've gotten a few of them wrong.

> Another detail: the pipeline you mention above is from GR96 to ITRF2014, right 
> (due to the 'inv' of ITRF2014:ITRF94) ?
> And the last step which I assume is for the northamerica plate motion doesn't 
> seem to have any effect as you forced t_obs in the previous step to the 
> t_epoch of that step, so the time difference is 0.

Yes. My example was quite sloppy and without context. I just wanted to give
you an idea of how to do it but I should have used a few more minutes to
give a proper example. You are right about the +t_obs parameter. My example
is outdated, this worked with PROJ 5 but since then the +t_obs parameter has
been removed. The first step works though, as you can see here:

>echo 1109816.3447  -1370509.0484  6108938.7008 2019.5 | cct.exe +proj=pipeline +step +init=ITRF2014:NOAM +t_epoch=1996.623
 1109815.8649  -1370509.0724  6108938.7826     2019.5000

This used to work with my example from the previous mail since the +t_obs
parameter did not change the t component of a coordinate. 

A better approach here would be to have an operation than can change
the t component as part of the plate motion step. If I remember correctly
something like that is already present in the EPSG database so it should
just be a matter of implementing that.

/Kristian

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: 28. august 2019 00:50
To: Kristian Evers <kreve at sdfe.dk>
Cc: Nyall Dawson <nyall.dawson at gmail.com>; PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

> 
> A global plate motion model is part of ITRF2014 [0]. It comes in the form of
> 
 Euler pole rotation parameters. They can be used in a time-dependent
> Helmert Transformation. Some time ago I included all the parameters in the
> ITRF2014 init file [1]. I use them to transform data from ITRF2014 to the
> local Greenlandic frame GR96 (effectively ITRF94 at 1996.623). I've defined a
> pipeline like this: 
> proj = pipeline ellps = GRS80
>             step inv init = ITRF2014:ITRF94 t_obs = 1996.623
>             step inv init = ITRF2014:NOAM   t_epoch=1996.623
> 

That's interesting !

I believe there's a small mistake in the ITRF2014 file (or the IGN page might 
have been updated in the meantime) for the ITRF2014:ITRF94 entry. It lacks a 
+drz=0.00002 (the ITRF96 entry as well). I can see it in http://itrf.ign.fr/
doc_ITRF/Transfo-ITRF2014_ITRFs.txt and it is also there in the EPSG dataset:

$ projinfo -s ITRF2014 -t ITRF94 -o PROJ -q
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=cart +ellps=GRS80 +step +inv +proj=helmert 
+x=-0.0074 +y=0.0005 +z=0.0628 +rx=0 +ry=0 +rz=-0.00026 +s=-0.0038 +dx=-0.0001 
+dy=0.0005 +dz=0.0033 +drx=0 +dry=0 +drz=-2e-05 +ds=-0.00012 +t_epoch=2010 
+convention=position_vector +step +inv +proj=cart +ellps=GRS80 +step 
+proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

(the signs are different due to EPSG having ITRF94 to ITRF2014 natively, and 
thus PROJ applying a +inv)

Another detail: the pipeline you mention above is from GR96 to ITRF2014, right 
(due to the 'inv' of ITRF2014:ITRF94) ?
And the last step which I assume is for the northamerica plate motion doesn't 
seem to have any effect as you forced t_obs in the previous step to the 
t_epoch of that step, so the time difference is 0.


$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline 
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623
 2768773.7710  -1598552.2904  5500477.1757 

$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline 
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623 +step +inv 
+init=ITRF2014:NOAM +t_epoch=1996.623
 2768773.7710  -1598552.2904  5500477.1757 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Wed Aug 28 05:20:42 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 28 Aug 2019 12:20:42 +0000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
 transformations
In-Reply-To: <CAB28AsiXdNrEoOxZWoEbP5M2PrNRx0yLLNu3CEM0-eKHPQgdDg@mail.gmail.com>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <2619973.5em0Ektf6l@even-i700>
 <CAB28AsiXMF=eWRVHOFKn7ze=yv_UMYR8BAw4dYMCui2WvGYiKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700>
 <CAB28AsiCf11i_y19jMoQE6z1NTDYtkG4Yd8m++bmcV_KtSamHA@mail.gmail.com>
 <58b972fa6e944ad7be09eb31f0328047@sdfe.dk>
 <CAB28AsiXdNrEoOxZWoEbP5M2PrNRx0yLLNu3CEM0-eKHPQgdDg@mail.gmail.com>
Message-ID: <6c4dc69b3f8d492583062981e0e0d984@sdfe.dk>

> Right... I've been down this rabbit hole already :)

Me too. Contrary to you, I have the luxury of NOT maintaining a widely used
GIS application and can simply live in a perfect dream world where we do
all things geodesy correctly :-)

/Kristian

-----Original Message-----
From: Nyall Dawson <nyall.dawson at gmail.com> 
Sent: 27. august 2019 23:53
To: Kristian Evers <kreve at sdfe.dk>
Cc: Even Rouault <even.rouault at spatialys.com>; PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

On Wed, 28 Aug 2019 at 06:12, Kristian Evers <kreve at sdfe.dk> wrote:
>
> Nyall,
>
> The epoch of a coordinate, e.g. the time it was measured, has nothing to do with the CRS definition.
> But it is important once you want to transform from one CRS to another or propagate the coordinate
> through time in the same CRS. Coordinates in a dataset will not necessarily have the same
> measuring time/epoch, which is why it is not a good idea to store that information alongside the CRS
> description. This is why 4D coordinates are necessary for dynamic CRS's. You need a XYZT geometry,
> as it were.

Right... I've been down this rabbit hole already :) My thoughts:

Realistically, we are years away from having support for per-feature
(or per-node(!)) epochs in geospatial data. This brings with it a
whole raft of complications, including throwing out all existing data
formats and replacing them with new formats which support the extra
dimension, and also huge complexities in the UI/UX for end-user
applications. Then there's the added storage/memory/processing
overhead of handling the extra dimension for every geometry
feature/node.

In the near future we're best off aiming for per-dataset epochs. I.e.
a layer has a single reference epoch which applies to all
features/nodes in that layer. This is practically achievable within
the next couple of years, as (above discussions aside) we'd be able to
store the per-dataset epoch in the WKT2 definition of the layer (or in
some other metadata field, or as a sidecar file). The software would
then need to ensure that any newly added features are correctly
transformed back into the reference epoch for the layer to ensure all
features have the same consistent epoch, but that's relatively
straightforward.

Nyall

>
> There are of course exceptions, for instance a raster image where all pixels are captured simultaneous by the sensor. For that it would be nice to have a way to register the capture time in a standardized way. I am not sure if this is already possible with WKT2:2018.
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
> Sent: 27. august 2019 22:49
> To: Even Rouault <even.rouault at spatialys.com>
> Cc: PROJ <proj at lists.osgeo.org>
> Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations
>
> On Wed, 28 Aug 2019 at 01:26, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > > But, if I understand correctly, WKT2:2018 would be the ultimate answer
> > > to this, in that it would allow us to specify the epoch of a dataset
> > > as an integral part of the data's CRS definition (which it is).
> >
> > Not sure to understand your "what it is", but pedantically, the epoch of the
> > dataset is not part of the CRS definition. Anyway...
>
> Well -- I think it IS a fundamental part of the definition, of equal
> importance to other parameters such as false easting/northing. Without
> the epoch information the coordinate data becomes meaningless, and
> it's required in order to accurately position them. While it would
> theoretically be possible to store this information somewhere else in
> a dataset's metadata, it's such an integral part of the CRS that
> shoving it right into the CRS definition is the right way forward...
>
> Nyall
>
>
> >
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From Didier.Richard at ign.fr  Wed Aug 28 08:53:55 2019
From: Didier.Richard at ign.fr (Didier Richard)
Date: Wed, 28 Aug 2019 15:53:55 +0000
Subject: [PROJ] Seeking clarification on PROJ support for temporal
 transformations
In-Reply-To: <3c864e988d1e4661976b76bc47cae19a@sdfe.dk>
References: <CAB28AsjqVzAr_m86UdXvamentfcFUoqVQEcYagwEhZsftxjjKQ@mail.gmail.com>
 <20092831.Vsq5taMNi2@even-i700> <5dbb2e1c97594e0bb4307a5d59fa37f7@sdfe.dk>
 <2096164.pDk9JYgsY7@even-i700>,<3c864e988d1e4661976b76bc47cae19a@sdfe.dk>
Message-ID: <D4387E9F6EBB5244B21A09D84C0D41B0010CE4FFFD@mailex1.ign.fr>

Hi,

I've just checked with ITRF team, the mentioned file (http://itrf.ign.fr/doc_ITRF/Transfo-ITRF2014_ITRFs.txt) is up-to-date and correct !

Regards,
--
RICHARD Didier - Chef du Centre de Compétences Technologies des Systèmes d'Information
http://fr.linkedin.com/pub/didier-richard/98/2a3/a8/ - https://www.osgeo.org/member/didier/
IGN/Direction des Sciences et Technologies de l'Information/ENSG Géomatique
6/8 avenue Blaise Pascal - BP Champs-sur-Marne - 77455 MARNE-LA-VALLÉE CEDEX 2
Tél : +33 (0) 1 43 98 83 23


________________________________________
De : PROJ [proj-bounces at lists.osgeo.org] de la part de Kristian Evers [kreve at sdfe.dk]
Envoyé : mercredi 28 août 2019 14:16
À : Even Rouault
Cc : PROJ
Objet : Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

> I believe there's a small mistake in the ITRF2014 file (or the IGN page might
> have been updated in the meantime) for the ITRF2014:ITRF94 entry. It lacks a
> +drz=0.00002 (the ITRF96 entry as well).

Good catch! Originally I entered the parameters manually so it is not a surprise
that I've gotten a few of them wrong.

> Another detail: the pipeline you mention above is from GR96 to ITRF2014, right
> (due to the 'inv' of ITRF2014:ITRF94) ?
> And the last step which I assume is for the northamerica plate motion doesn't
> seem to have any effect as you forced t_obs in the previous step to the
> t_epoch of that step, so the time difference is 0.

Yes. My example was quite sloppy and without context. I just wanted to give
you an idea of how to do it but I should have used a few more minutes to
give a proper example. You are right about the +t_obs parameter. My example
is outdated, this worked with PROJ 5 but since then the +t_obs parameter has
been removed. The first step works though, as you can see here:

>echo 1109816.3447  -1370509.0484  6108938.7008 2019.5 | cct.exe +proj=pipeline +step +init=ITRF2014:NOAM +t_epoch=1996.623
 1109815.8649  -1370509.0724  6108938.7826     2019.5000

This used to work with my example from the previous mail since the +t_obs
parameter did not change the t component of a coordinate.

A better approach here would be to have an operation than can change
the t component as part of the plate motion step. If I remember correctly
something like that is already present in the EPSG database so it should
just be a matter of implementing that.

/Kristian

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com>
Sent: 28. august 2019 00:50
To: Kristian Evers <kreve at sdfe.dk>
Cc: Nyall Dawson <nyall.dawson at gmail.com>; PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Seeking clarification on PROJ support for temporal transformations

>
> A global plate motion model is part of ITRF2014 [0]. It comes in the form of
>
 Euler pole rotation parameters. They can be used in a time-dependent
> Helmert Transformation. Some time ago I included all the parameters in the
> ITRF2014 init file [1]. I use them to transform data from ITRF2014 to the
> local Greenlandic frame GR96 (effectively ITRF94 at 1996.623). I've defined a
> pipeline like this:
> proj = pipeline ellps = GRS80
>             step inv init = ITRF2014:ITRF94 t_obs = 1996.623
>             step inv init = ITRF2014:NOAM   t_epoch=1996.623
>

That's interesting !

I believe there's a small mistake in the ITRF2014 file (or the IGN page might
have been updated in the meantime) for the ITRF2014:ITRF94 entry. It lacks a
+drz=0.00002 (the ITRF96 entry as well). I can see it in http://itrf.ign.fr/
doc_ITRF/Transfo-ITRF2014_ITRFs.txt and it is also there in the EPSG dataset:

$ projinfo -s ITRF2014 -t ITRF94 -o PROJ -q
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert
+xy_in=deg +xy_out=rad +step +proj=cart +ellps=GRS80 +step +inv +proj=helmert
+x=-0.0074 +y=0.0005 +z=0.0628 +rx=0 +ry=0 +rz=-0.00026 +s=-0.0038 +dx=-0.0001
+dy=0.0005 +dz=0.0033 +drx=0 +dry=0 +drz=-2e-05 +ds=-0.00012 +t_epoch=2010
+convention=position_vector +step +inv +proj=cart +ellps=GRS80 +step
+proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

(the signs are different due to EPSG having ITRF94 to ITRF2014 natively, and
thus PROJ applying a +inv)

Another detail: the pipeline you mention above is from GR96 to ITRF2014, right
(due to the 'inv' of ITRF2014:ITRF94) ?
And the last step which I assume is for the northamerica plate motion doesn't
seem to have any effect as you forced t_obs in the previous step to the
t_epoch of that step, so the time difference is 0.


$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623
 2768773.7710  -1598552.2904  5500477.1757

$ echo " 2768773.7909  -1598552.2935  5500477.1338" | src/cct +proj=pipeline
+ellps=GRS80 +step +inv +init=ITRF2014:ITRF94 +t_obs=1996.623 +step +inv
+init=ITRF2014:NOAM +t_epoch=1996.623
 2768773.7710  -1598552.2904  5500477.1757

Even

--
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From nyall.dawson at gmail.com  Wed Aug 28 21:40:22 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 29 Aug 2019 14:40:22 +1000
Subject: [PROJ] PROJ 6.2.0RC1
In-Reply-To: <2832493.hq0I5ONNpo@even-i700>
References: <2030315A-4E93-43E7-8733-5AC18FCA4F92@sdfe.dk>
 <2832493.hq0I5ONNpo@even-i700>
Message-ID: <CAB28AshWXrVx9w-10CerA94hBdTNMYWMxKHFuOMex1YrxThN=Q@mail.gmail.com>

On Wed, 28 Aug 2019 at 01:38, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On lundi 26 août 2019 22:29:34 EEST Kristian Evers wrote:
> > All,
> >
> > With a scheduled release of PROJ 6.2.0. on September 1st it is time to put
> > out a
>  release candidate.
> >
> > Download the archives here:
> >
> > https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz
> > (https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz.md5)
> > https://download.osgeo.org/proj/proj-6.2.0RC1.zip
> > (https://download.osgeo.org/proj/proj-6.2.0RC1.zip.md5)
> > See the release notes below.
> >
>
> Works fine with GDAL.

Ditto with QGIS -- all tests passing.

Nyall

>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From alansnow21 at gmail.com  Thu Aug 29 05:27:33 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Thu, 29 Aug 2019 07:27:33 -0500
Subject: [PROJ] PROJ 6.2.0RC1
In-Reply-To: <CAB28AshWXrVx9w-10CerA94hBdTNMYWMxKHFuOMex1YrxThN=Q@mail.gmail.com>
References: <2030315A-4E93-43E7-8733-5AC18FCA4F92@sdfe.dk>
 <2832493.hq0I5ONNpo@even-i700>
 <CAB28AshWXrVx9w-10CerA94hBdTNMYWMxKHFuOMex1YrxThN=Q@mail.gmail.com>
Message-ID: <CAGybdFR4b6bby5+aho3Kusbf=o-7D3WnkEU25nCqjX2M1aev4g@mail.gmail.com>

All tests pass with pyproj

On Wed, Aug 28, 2019, 11:40 PM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> On Wed, 28 Aug 2019 at 01:38, Even Rouault <even.rouault at spatialys.com>
> wrote:
> >
> > On lundi 26 août 2019 22:29:34 EEST Kristian Evers wrote:
> > > All,
> > >
> > > With a scheduled release of PROJ 6.2.0. on September 1st it is time to
> put
> > > out a
> >  release candidate.
> > >
> > > Download the archives here:
> > >
> > > https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz
> > > (https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz.md5)
> > > https://download.osgeo.org/proj/proj-6.2.0RC1.zip
> > > (https://download.osgeo.org/proj/proj-6.2.0RC1.zip.md5)
> > > See the release notes below.
> > >
> >
> > Works fine with GDAL.
>
> Ditto with QGIS -- all tests passing.
>
> Nyall
>
> >
> > Even
> >
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com
> > _______________________________________________
> > PROJ mailing list
> > PROJ at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190829/94554278/attachment.html>

From a.furieri at lqt.it  Thu Aug 29 11:59:17 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Thu, 29 Aug 2019 20:59:17 +0200
Subject: [PROJ] PROJ 6.2.0RC1
In-Reply-To: <CAB28AshWXrVx9w-10CerA94hBdTNMYWMxKHFuOMex1YrxThN=Q@mail.gmail.com>
References: <2030315A-4E93-43E7-8733-5AC18FCA4F92@sdfe.dk>
 <2832493.hq0I5ONNpo@even-i700>
 <CAB28AshWXrVx9w-10CerA94hBdTNMYWMxKHFuOMex1YrxThN=Q@mail.gmail.com>
Message-ID: <43f8df18d28126a32e09b03c7a6bcb80@lqt.it>

On Thu, 29 Aug 2019 14:40:22 +1000, Nyall Dawson wrote:
> On Wed, 28 Aug 2019 at 01:38, Even Rouault
> <even.rouault at spatialys.com> wrote:
>>
>> On lundi 26 août 2019 22:29:34 EEST Kristian Evers wrote:
>> > All,
>> >
>> > With a scheduled release of PROJ 6.2.0. on September 1st it is 
>> time to put
>> > out a
>>  release candidate.
>> >
>> > Download the archives here:
>> >
>> > https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz
>> > (https://download.osgeo.org/proj/proj-6.2.0RC1.tar.gz.md5)
>> > https://download.osgeo.org/proj/proj-6.2.0RC1.zip
>> > (https://download.osgeo.org/proj/proj-6.2.0RC1.zip.md5)
>> > See the release notes below.
>> >
>>
>> Works fine with GDAL.
>
> Ditto with QGIS -- all tests passing.
>

with SpatiLite works nicely on both Linux and Windows/MinGW;
all test cases passing

bye Sandro

From kreve at sdfe.dk  Thu Aug 29 22:24:36 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 30 Aug 2019 05:24:36 +0000
Subject: [PROJ] Motion: Promote PROJ 6.2.0RC1 and proj-datumgrid-europe
 1.4RC1 to final releases
Message-ID: <a4dd43a39ddb4fa188bd167edca18660@sdfe.dk>

PSC Members,



No problems with PROJ 6.2.0RC1 and proj-datumgrid-europe 1.4RC1

has been reported, so I hereby motion that the release candidates

be promoted to final releases.



I'll start with my +1



/Kristian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190830/9bac4b49/attachment.html>

From knudsen.thomas at gmail.com  Fri Aug 30 03:12:09 2019
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Fri, 30 Aug 2019 12:12:09 +0200
Subject: [PROJ] Motion: Promote PROJ 6.2.0RC1 and proj-datumgrid-europe
 1.4RC1 to final releases
In-Reply-To: <a4dd43a39ddb4fa188bd167edca18660@sdfe.dk>
References: <a4dd43a39ddb4fa188bd167edca18660@sdfe.dk>
Message-ID: <CAH0YoEOZf8R6pk0O-o3VRmmVMpg7igSB0yXOWbM4g+Dn_XfrWg@mail.gmail.com>

+1 Thomas

Den fre. 30. aug. 2019 kl. 07.24 skrev Kristian Evers <kreve at sdfe.dk>:

> PSC Members,
>
>
>
> No problems with PROJ 6.2.0RC1 and proj-datumgrid-europe 1.4RC1
>
> has been reported, so I hereby motion that the release candidates
>
> be promoted to final releases.
>
>
>
> I’ll start with my +1
>
>
>
> /Kristian
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190830/8a1cd48a/attachment.html>

From howard at hobu.co  Fri Aug 30 13:53:52 2019
From: howard at hobu.co (Howard Butler)
Date: Fri, 30 Aug 2019 15:53:52 -0500
Subject: [PROJ] Motion: Promote PROJ 6.2.0RC1 and proj-datumgrid-europe
 1.4RC1 to final releases
In-Reply-To: <CAH0YoEOZf8R6pk0O-o3VRmmVMpg7igSB0yXOWbM4g+Dn_XfrWg@mail.gmail.com>
References: <a4dd43a39ddb4fa188bd167edca18660@sdfe.dk>
 <CAH0YoEOZf8R6pk0O-o3VRmmVMpg7igSB0yXOWbM4g+Dn_XfrWg@mail.gmail.com>
Message-ID: <C1C91D65-1DA7-4244-A33C-13728E5B599A@hobu.co>

+1 Howard

> On Aug 30, 2019, at 5:12 AM, Thomas Knudsen <knudsen.thomas at gmail.com> wrote:
> 
> +1 Thomas
> 
> Den fre. 30. aug. 2019 kl. 07.24 skrev Kristian Evers <kreve at sdfe.dk <mailto:kreve at sdfe.dk>>:
> PSC Members,
> 
>  
> 
> No problems with PROJ 6.2.0RC1 and proj-datumgrid-europe 1.4RC1
> 
> has been reported, so I hereby motion that the release candidates
> 
> be promoted to final releases.
> 
>  
> 
> I’ll start with my +1
> 
>  
> 
> /Kristian
> 
>  
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190830/aacddc28/attachment.html>

From even.rouault at spatialys.com  Fri Aug 30 21:38:08 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 31 Aug 2019 07:38:08 +0300
Subject: [PROJ] Motion: Promote PROJ 6.2.0RC1 and proj-datumgrid-europe
 1.4RC1 to final releases
In-Reply-To: <a4dd43a39ddb4fa188bd167edca18660@sdfe.dk>
References: <a4dd43a39ddb4fa188bd167edca18660@sdfe.dk>
Message-ID: <CALxNk+kWcQWneg5-uhw-aW2X3CnMAQQ_44ivS_wv2RTHvcXyew@mail.gmail.com>

+1 Even

Le ven 30 août 2019 08:24, Kristian Evers <kreve at sdfe.dk> a écrit :

> PSC Members,
>
>
>
> No problems with PROJ 6.2.0RC1 and proj-datumgrid-europe 1.4RC1
>
> has been reported, so I hereby motion that the release candidates
>
> be promoted to final releases.
>
>
>
> I’ll start with my +1
>
>
>
> /Kristian
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190831/1fc4b63c/attachment.html>

From kreve at sdfe.dk  Sat Aug 31 01:07:35 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sat, 31 Aug 2019 08:07:35 +0000
Subject: [PROJ] Sol Katz award winner 2019: Even Rouault!
Message-ID: <4d3f6b7f22624291b0acf6b1ca17f96d@sdfe.dk>

Yesterday during the final hours of the FOSS4G meeting in Bucharest the
2019 OSGeo Sol Katz Award was given to Even Rouault. Even has received
the award based on his huge body of work on many OSGeo projects, including
PROJ. I know that many think that Even should have received the award a
long time ago (me included), but in the light of the massive effort Even
has put into creating PROJ 6 and GDAL 3 over the last year and a half I
think the timing of the award couldn't be better.

I can't think of a more well-deserving recipient of the award.
Congratulations Even and thank you for all your work!

For those of you who did not attend the meeting in person, the award
ceremony is available as a streaming video [0]. It's a short video which
I encourage you to watch.

I would also like to highlight Even's talk "Revamp of Coordinate Reference
System management in the OSGeo C/C++ stack with PROJ and GDAL" [1] which
is an excellent summary of the all the changes that came along with PROJ 6
and most definitely of interest to all subscribers of this mailing list.

/Kristian

[0] https://media.ccc.de/v/bucharest-481-awards-ceremony#t=1230
[1] https://media.ccc.de/v/bucharest-198-revamp-of-coordinate-reference-system-management-in-the-osgeo-c-c-stack-with-proj-and-gdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190831/97234547/attachment.html>

