From jef at norbit.de  Fri Feb  1 14:57:47 2019
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Fri, 1 Feb 2019 23:57:47 +0100
Subject: [PROJ] [gdal-dev] RFC 73 merged in master / PROJ master required
In-Reply-To: <1997413.DfpdaUsREb@even-i700>
References: <1997413.DfpdaUsREb@even-i700>
Message-ID: <20190201225747.3hxelmexowi4qkq7@norbit.de>

Hi,

On Thu, 31. Jan 2019 at 21:14:01 +0100, Even Rouault wrote:
> RFC 73 work has now been merged into master. Currently GDAL build and runtime
> now depends on PROJ master

OSGeo4W now also has a nightly build of PROJ (proj-dev) to keep the GDAL
nightly build (gdal-dev) going.


Jürgen

-- 
Jürgen E. Fischer         norBIT GmbH               Tel. +49-4931-918175-31
Dipl.-Inf. (FH)           Rheinstraße 13            Fax. +49-4931-918175-50
Software Engineer         D-26506 Norden              https://www.norbit.de
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190201/ae51ef68/attachment.sig>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Pflichtangaben
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190201/ae51ef68/attachment.ksh>

From pramsey at cleverelephant.ca  Fri Feb  8 11:25:11 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 8 Feb 2019 12:25:11 -0700
Subject: [PROJ] Simple cs2cs in code
Message-ID: <CACowWR0XkAhbkG_W-XX_1nfBbViD6ejzoHhwx42r8df-WSYi2g@mail.gmail.com>

I'm embarrassed to ask this, but looking at fixing up the postgis
transform code to use the new API, I have

pj_transform(srcpj, dstpj, 1, 0, &(pt->x), &(pt->y), &(pt->z))

and I cannot for the life of my figure out how to replicate that in
the new API...

If I was instantiating a *PJ from an epsg:from and epsg:to, I would be
fine, because there's the lovely proj_create_crs_to_crs function.

But that's not the contract I have to fulfill. I have to fulfill a
transform from_projstr to to_projstr. In generality. For a happy
future, I'll also add some stuff to use proj_create_crs_to_crs where
the metadata we have supports that call (which happily is in most
cases). But in the fraught present, I still need to support the
from_projstr, to_projstr pattern.

I see I can use proj_create to go from a trom_projstr to a from_PJ,
that's nice. And I can also make a to_PJ. But I don't see a way to
call with a from and to.

That leaves me wondering if I can just string concatenate a
from_projstr and a to_projstr into a pipeline, get a PJ from that
using proj_create, and call a forward transformation on that?

Which still leaves my trying to create and test proj pipelines, which
I have so far failed to do... the generic case being "a projected
system on spheroid X to a different system on spheroid Y".

I'm sorry if it's obvious and I"m looking at the wrong page :(

Thanks,

P

From even.rouault at spatialys.com  Sat Feb  9 02:02:14 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 09 Feb 2019 11:02:14 +0100
Subject: [PROJ] Simple cs2cs in code
In-Reply-To: <CACowWR0XkAhbkG_W-XX_1nfBbViD6ejzoHhwx42r8df-WSYi2g@mail.gmail.com>
References: <CACowWR0XkAhbkG_W-XX_1nfBbViD6ejzoHhwx42r8df-WSYi2g@mail.gmail.com>
Message-ID: <1777964.b3LW3OYAkt@even-i700>

On vendredi 8 février 2019 12:25:11 CET Paul Ramsey wrote:
> I'm embarrassed to ask this, but looking at fixing up the postgis
> transform code to use the new API, I have
> 
> pj_transform(srcpj, dstpj, 1, 0, &(pt->x), &(pt->y), &(pt->z))
> 
> and I cannot for the life of my figure out how to replicate that in
> the new API...
> 
> If I was instantiating a *PJ from an epsg:from and epsg:to, I would be
> fine, because there's the lovely proj_create_crs_to_crs function.
> 
> But that's not the contract I have to fulfill. I have to fulfill a
> transform from_projstr to to_projstr. In generality. For a happy
> future, I'll also add some stuff to use proj_create_crs_to_crs where
> the metadata we have supports that call (which happily is in most
> cases). But in the fraught present, I still need to support the
> from_projstr, to_projstr pattern.
> 
> I see I can use proj_create to go from a trom_projstr to a from_PJ,
> that's nice. And I can also make a to_PJ. But I don't see a way to
> call with a from and to.
> 
> That leaves me wondering if I can just string concatenate a
> from_projstr and a to_projstr into a pipeline, get a PJ from that
> using proj_create, and call a forward transformation on that?
> 
> Which still leaves my trying to create and test proj pipelines, which
> I have so far failed to do... the generic case being "a projected
> system on spheroid X to a different system on spheroid Y".
> 
> I'm sorry if it's obvious and I"m looking at the wrong page :(

Paul,

With PROJ 5, yes creating a simple pipeline is the solution. So you can use

PJ* P = proj_create(ctxt,
	"+proj=pipeline +step +inv " + from_projstr + " +step " + to_projstr)

and use proj_trans(P, PJ_FWD, coord) afterwards

That's how current GDAL versions ported from the pj_transform() API to the new 
one.


With PROJ 6, proj_create_crs_to_crs() has been extended to support PROJ CRS 
strings or WKT CRS as arguments in addition to EPSG:XXXX codes.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Mon Feb 11 13:51:43 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 11 Feb 2019 13:51:43 -0800
Subject: [PROJ] geodesic.h
Message-ID: <CACowWR2X9QQSeMk8xbTJ_QsaaRg2O2mkKNvjP3BsRRpvsd3eaQ@mail.gmail.com>

What is the status of geodesic.h for proj 6? I was just going to
update the PostGIS proj support and looking at moving to proj.h. I see
that geodetic distance and azimuth calculations have new signatures,
but the geodetic area calculation isn't there. Is geodesic.h being
deprecated in 6?

P.

From kreve at sdfe.dk  Mon Feb 11 14:03:35 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 11 Feb 2019 22:03:35 +0000
Subject: [PROJ] geodesic.h
In-Reply-To: <CACowWR2X9QQSeMk8xbTJ_QsaaRg2O2mkKNvjP3BsRRpvsd3eaQ@mail.gmail.com>
References: <CACowWR2X9QQSeMk8xbTJ_QsaaRg2O2mkKNvjP3BsRRpvsd3eaQ@mail.gmail.com>
Message-ID: <14CEA0C6-9B6D-47B2-9D9A-E10555AF7DB1@sdfe.dk>

Paul,

geodesic.h will be included in PROJ 6. The new functions signatures
in proj.h are just there for your convenience. If you need advanced
functionality include geodesic.h.

At the moment we are doing a poor job of documenting geodesic.h
on the website. Contributions are welcome!

/Kristian

> On 11 Feb 2019, at 22:51, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> What is the status of geodesic.h for proj 6? I was just going to
> update the PostGIS proj support and looking at moving to proj.h. I see
> that geodetic distance and azimuth calculations have new signatures,
> but the geodetic area calculation isn't there. Is geodesic.h being
> deprecated in 6?
> 
> P.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From even.rouault at spatialys.com  Mon Feb 11 14:04:47 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Feb 2019 23:04:47 +0100
Subject: [PROJ] geodesic.h
In-Reply-To: <CACowWR2X9QQSeMk8xbTJ_QsaaRg2O2mkKNvjP3BsRRpvsd3eaQ@mail.gmail.com>
References: <CACowWR2X9QQSeMk8xbTJ_QsaaRg2O2mkKNvjP3BsRRpvsd3eaQ@mail.gmail.com>
Message-ID: <2250007.xiRBAoundo@even-i700>

On lundi 11 février 2019 13:51:43 CET Paul Ramsey wrote:
> What is the status of geodesic.h for proj 6? I was just going to
> update the PostGIS proj support and looking at moving to proj.h. I see
> that geodetic distance and azimuth calculations have new signatures,
> but the geodetic area calculation isn't there. Is geodesic.h being
> deprecated in 6?

Paul,

no, it isn't deprecated. From a quick look, it is essentially unmodified since 
PROJ 4.9.3. Didn't look to earlier versions

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Tue Feb 12 11:16:56 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 12 Feb 2019 11:16:56 -0800
Subject: [PROJ] Rads/Degs
Message-ID: <CACowWR1U6qngOsPzWQshMwXrWmdv+nitTgXudxwuDsHJ5ODtQQ@mail.gmail.com>

Is there some clean way to tell proj_create_crs_to_crs() that I would
like my input angular units and output angular units to be degrees? As
it stands I'm just using proj_angular_input and proj_angular_output to
test and apply the change pre/post transform.

P.

From even.rouault at spatialys.com  Wed Feb 13 00:06:33 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Feb 2019 09:06:33 +0100
Subject: [PROJ] Rads/Degs
In-Reply-To: <CACowWR1U6qngOsPzWQshMwXrWmdv+nitTgXudxwuDsHJ5ODtQQ@mail.gmail.com>
References: <CACowWR1U6qngOsPzWQshMwXrWmdv+nitTgXudxwuDsHJ5ODtQQ@mail.gmail.com>
Message-ID: <2967500.4VXKq4s9LE@even-i700>

On mardi 12 février 2019 11:16:56 CET Paul Ramsey wrote:
> Is there some clean way to tell proj_create_crs_to_crs() that I would
> like my input angular units and output angular units to be degrees? As
> it stands I'm just using proj_angular_input and proj_angular_output to
> test and apply the change pre/post transform.

Hum, with which PROJ version ?

I guess with PROJ 5.x, the angular unit was radians

With PROJ master, proj_create_crs_to_crs() object will expect (resp return) 
the angular unit of the source (resp target) CRS, which will generally be 
degrees (except a few ancient French SRS that take grads)

The function at 
https://github.com/OSGeo/proj.4/blob/master/src/apps/cs2cs.cpp#L212
can be used to get the angular unit of a CRS.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Wed Feb 13 10:04:59 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 13 Feb 2019 10:04:59 -0800
Subject: [PROJ] Rads/Degs
In-Reply-To: <2967500.4VXKq4s9LE@even-i700>
References: <CACowWR1U6qngOsPzWQshMwXrWmdv+nitTgXudxwuDsHJ5ODtQQ@mail.gmail.com>
 <2967500.4VXKq4s9LE@even-i700>
Message-ID: <4F88E798-37D3-430B-B3C7-28D2E1B6EB25@cleverelephant.ca>


> On Feb 13, 2019, at 12:06 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On mardi 12 février 2019 11:16:56 CET Paul Ramsey wrote:
>> Is there some clean way to tell proj_create_crs_to_crs() that I would
>> like my input angular units and output angular units to be degrees? As
>> it stands I'm just using proj_angular_input and proj_angular_output to
>> test and apply the change pre/post transform.
> 
> Hum, with which PROJ version ?
> 
> I guess with PROJ 5.x, the angular unit was radians
> 
> With PROJ master, proj_create_crs_to_crs() object will expect (resp return) 
> the angular unit of the source (resp target) CRS, which will generally be 
> degrees (except a few ancient French SRS that take grads)
> 
> The function at 
> https://github.com/OSGeo/proj.4/blob/master/src/apps/cs2cs.cpp#L212
> can be used to get the angular unit of a CRS.

Hokay, that makes the renovation a little more complex, good to know! :)

P



From even.rouault at spatialys.com  Wed Feb 13 10:22:23 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Feb 2019 19:22:23 +0100
Subject: [PROJ] Rads/Degs
In-Reply-To: <4F88E798-37D3-430B-B3C7-28D2E1B6EB25@cleverelephant.ca>
References: <CACowWR1U6qngOsPzWQshMwXrWmdv+nitTgXudxwuDsHJ5ODtQQ@mail.gmail.com>
 <2967500.4VXKq4s9LE@even-i700>
 <4F88E798-37D3-430B-B3C7-28D2E1B6EB25@cleverelephant.ca>
Message-ID: <3502799.M9N8Chfbo9@even-i700>

On mercredi 13 février 2019 10:04:59 CET Paul Ramsey wrote:
> > On Feb 13, 2019, at 12:06 AM, Even Rouault <even.rouault at spatialys.com>
> > wrote:> 
> > On mardi 12 février 2019 11:16:56 CET Paul Ramsey wrote:
> >> Is there some clean way to tell proj_create_crs_to_crs() that I would
> >> like my input angular units and output angular units to be degrees? As
> >> it stands I'm just using proj_angular_input and proj_angular_output to
> >> test and apply the change pre/post transform.
> > 
> > Hum, with which PROJ version ?
> > 
> > I guess with PROJ 5.x, the angular unit was radians
> > 
> > With PROJ master, proj_create_crs_to_crs() object will expect (resp
> > return)
> > the angular unit of the source (resp target) CRS, which will generally be
> > degrees (except a few ancient French SRS that take grads)
> > 
> > The function at
> > https://github.com/OSGeo/proj.4/blob/master/src/apps/cs2cs.cpp#L212
> > can be used to get the angular unit of a CRS.
> 
> Hokay, that makes the renovation a little more complex, good to know! :)

I'd advise to "skip" PROJ 5.x, that is handle it just like the PROJ 4.x series 
using the good old proj_api.h, but target more PROJ master / 6.0 (which is 
within a few hours before seeing a beta/RC I think)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Wed Feb 13 10:24:41 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 13 Feb 2019 10:24:41 -0800
Subject: [PROJ] Rads/Degs
In-Reply-To: <3502799.M9N8Chfbo9@even-i700>
References: <CACowWR1U6qngOsPzWQshMwXrWmdv+nitTgXudxwuDsHJ5ODtQQ@mail.gmail.com>
 <2967500.4VXKq4s9LE@even-i700>
 <4F88E798-37D3-430B-B3C7-28D2E1B6EB25@cleverelephant.ca>
 <3502799.M9N8Chfbo9@even-i700>
Message-ID: <CACowWR0dd8_m8ZUOzjiLsLkOUx2sCEsch2p_qeYjBG_0tJB-Eg@mail.gmail.com>

On Wed, Feb 13, 2019 at 10:22 AM Even Rouault
<even.rouault at spatialys.com> wrote:
>
> On mercredi 13 février 2019 10:04:59 CET Paul Ramsey wrote:
> > > On Feb 13, 2019, at 12:06 AM, Even Rouault <even.rouault at spatialys.com>
> > > wrote:>
> > > On mardi 12 février 2019 11:16:56 CET Paul Ramsey wrote:
> > >> Is there some clean way to tell proj_create_crs_to_crs() that I would
> > >> like my input angular units and output angular units to be degrees? As
> > >> it stands I'm just using proj_angular_input and proj_angular_output to
> > >> test and apply the change pre/post transform.
> > >
> > > Hum, with which PROJ version ?
> > >
> > > I guess with PROJ 5.x, the angular unit was radians
> > >
> > > With PROJ master, proj_create_crs_to_crs() object will expect (resp
> > > return)
> > > the angular unit of the source (resp target) CRS, which will generally be
> > > degrees (except a few ancient French SRS that take grads)
> > >
> > > The function at
> > > https://github.com/OSGeo/proj.4/blob/master/src/apps/cs2cs.cpp#L212
> > > can be used to get the angular unit of a CRS.
> >
> > Hokay, that makes the renovation a little more complex, good to know! :)
>
> I'd advise to "skip" PROJ 5.x, that is handle it just like the PROJ 4.x series
> using the good old proj_api.h, but target more PROJ master / 6.0 (which is
> within a few hours before seeing a beta/RC I think)

Yep, that's where I've basically ended up in this journey. The proj5
API isn't rich enough to convert to entirely, and there's no benefit
to it. Having magical "best transform" and associated vertical datum
stuff in Proj6 makes the pain worthwhile.

P

From Jochem.Lesparre at kadaster.nl  Wed Feb 13 23:33:06 2019
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Thu, 14 Feb 2019 07:33:06 +0000
Subject: [PROJ] Rads/Degs
Message-ID: <892087331C3B6030.4ab111ab-9545-4f6a-8638-ada9f35e303a@mail.outlook.com>

> > > the angular unit of the source (resp target) CRS, which will generally be
> > > degrees (except a few ancient French SRS that take grads)

For the right historical perspective it is better to describe the gon/grad CRS as "French revolutionary", since the French monarchy that was overtrown by the revolution is refered to as "ancien régime" and it were the revolutionaries that gave us the gon (and the metre).

Regards, Jochem


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190214/96810ed4/attachment.html>

From Karin.Praet at limburg.be  Thu Feb 14 06:53:26 2019
From: Karin.Praet at limburg.be (Praet Karin)
Date: Thu, 14 Feb 2019 14:53:26 +0000
Subject: [PROJ] request for integration of optimized transformatiegrid BD72
	to ETRS89
Message-ID: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>

Hi,

The Belgian National Institute of Geography (NGI) has published a more accurate transformationgrid to convert between Belgian Datum 1972 tot ETRS 89.
As Belgian Lambert 1972 (EPSG:31370), based on BD72,  is widely used in Belgium - is it possible to integrate this transformationgrid as the default transformation for this datum?

Documentation in Dutch:  http://www.ngi.be/NL/NL2-1-7.shtm
Documentation in French: http://www.ngi.be/FR/FR2-1-7.shtm

The grid is called: bd72lb72_etrs89lb08.gsb

Regards

Karin Praet
Provincie Limburg, Hasselt, Belgium

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190214/06f04057/attachment.html>

From kreve at sdfe.dk  Thu Feb 14 07:00:34 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 14 Feb 2019 15:00:34 +0000
Subject: [PROJ] request for integration of optimized transformatiegrid
 BD72	to ETRS89
In-Reply-To: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
References: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF056E84@S000014.PROD.SITAD.DK>

Hello Karin,

As long as your grids are released on a suitable open source compatible license, yes it is possible to add them to PROJ. If you are quick (as in today) and open a pull request in the proj-datumgrid repository [0] it can become part of the coming version 6 of PROJ. I am not sure if transformations to and from EPSG:31370 will be using the grids by default without also modifying the source code of PROJ. Even Rouault should be able to clear that up though.

/Kristian

[0] https://github.com/OSGeo/proj-datumgrid

Fra: PROJ <proj-bounces at lists.osgeo.org> På vegne af Praet Karin
Sendt: 14. februar 2019 15:53
Til: proj at lists.osgeo.org
Emne: [PROJ] request for integration of optimized transformatiegrid BD72 to ETRS89

Hi,

The Belgian National Institute of Geography (NGI) has published a more accurate transformationgrid to convert between Belgian Datum 1972 tot ETRS 89.
As Belgian Lambert 1972 (EPSG:31370), based on BD72,  is widely used in Belgium - is it possible to integrate this transformationgrid as the default transformation for this datum?

Documentation in Dutch:  http://www.ngi.be/NL/NL2-1-7.shtm
Documentation in French: http://www.ngi.be/FR/FR2-1-7.shtm

The grid is called: bd72lb72_etrs89lb08.gsb

Regards

Karin Praet
Provincie Limburg, Hasselt, Belgium

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190214/9283b282/attachment.html>

From sebastic at xs4all.nl  Thu Feb 14 07:06:35 2019
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Thu, 14 Feb 2019 16:06:35 +0100
Subject: [PROJ] request for integration of optimized transformatiegrid
 BD72 to ETRS89
In-Reply-To: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
References: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
Message-ID: <760ee772955e4bb146a108dcd0d3dd12@xs4all.nl>

On 2019-02-14 15:53, Praet Karin wrote:
> The Belgian National Institute of Geography (NGI) has published a more
> accurate transformationgrid to convert between Belgian Datum 1972 tot
> ETRS 89.
> As Belgian Lambert 1972 (EPSG:31370), based on BD72,  is widely used
> in Belgium - is it possible to integrate this transformationgrid as
> the default transformation for this datum?

If the license for the grid is compatible with the Open Source 
Definition, the grid can be included in the proj-datumgrid project:

  https://github.com/OSGeo/proj-datumgrid

The license documented in the readme_nl.pdf file contained in the 
NTv2.zip says that it's CC-BY, but doesn't specify a version.

CC-BY v3.0 & v4.0 are DFSG compatible, so I recommend that you specify 
one of those versions.

Adding documentation in English is also a good idea, because the 
proj-datumgrid package has a global scope.

Kind Regards,

Bas

From Karin.Praet at limburg.be  Thu Feb 14 07:11:10 2019
From: Karin.Praet at limburg.be (Praet Karin)
Date: Thu, 14 Feb 2019 15:11:10 +0000
Subject: [PROJ] request for integration of optimized transformatiegrid
 BD72 to ETRS89
In-Reply-To: <760ee772955e4bb146a108dcd0d3dd12@xs4all.nl>
References: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
 <760ee772955e4bb146a108dcd0d3dd12@xs4all.nl>
Message-ID: <AM6PR06MB5319A7CEC7AB92317F9EA53A9A670@AM6PR06MB5319.eurprd06.prod.outlook.com>

Thanks for the info. I'll contact the owner of the grid and ask that they make these changes.

Regards

Karin

-----Oorspronkelijk bericht-----
Van: PROJ [mailto:proj-bounces at lists.osgeo.org] Namens Bas Couwenberg
Verzonden: donderdag 14 februari 2019 16:07
Aan: proj at lists.osgeo.org
Onderwerp: Re: [PROJ] request for integration of optimized transformatiegrid BD72 to ETRS89

On 2019-02-14 15:53, Praet Karin wrote:
> The Belgian National Institute of Geography (NGI) has published a more 
> accurate transformationgrid to convert between Belgian Datum 1972 tot 
> ETRS 89.
> As Belgian Lambert 1972 (EPSG:31370), based on BD72,  is widely used 
> in Belgium - is it possible to integrate this transformationgrid as 
> the default transformation for this datum?

If the license for the grid is compatible with the Open Source Definition, the grid can be included in the proj-datumgrid project:

  https://github.com/OSGeo/proj-datumgrid

The license documented in the readme_nl.pdf file contained in the NTv2.zip says that it's CC-BY, but doesn't specify a version.

CC-BY v3.0 & v4.0 are DFSG compatible, so I recommend that you specify one of those versions.

Adding documentation in English is also a good idea, because the proj-datumgrid package has a global scope.

Kind Regards,

Bas
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From even.rouault at spatialys.com  Thu Feb 14 07:42:22 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Feb 2019 16:42:22 +0100
Subject: [PROJ] request for integration of optimized transformatiegrid
	BD72	to ETRS89
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF056E84@S000014.PROD.SITAD.DK>
References: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
 <2E885BB293AF0448A0181138489E9A0EAF056E84@S000014.PROD.SITAD.DK>
Message-ID: <310035531.bfDUDiK5zn@even-i700>

On jeudi 14 février 2019 15:00:34 CET Kristian Evers wrote:
> Hello Karin,
> 
> As long as your grids are released on a suitable open source compatible
> license, yes it is possible to add them to PROJ. If you are quick (as in
> today) and open a pull request in the proj-datumgrid repository [0] it can
> become part of the coming version 6 of PROJ. I am not sure if
> transformations to and from EPSG:31370 will be using the grids by default
> without also modifying the source code of PROJ. Even Rouault should be able
> to clear that up though.

This grid is present in the EPSG dataset, and imported in the proj.db of PROJ 
master. So this is mostly a matter of having it installed in the PROJ_LIB 
directory.

Adding it in the grid_alternatives database of the table would also be nice so 
that it is tagged as being 'known' by PROJ with a hint to which package/URL it 
can be downloaded from

On a master checkout without the grid, projinfo reports:


$ PROJ_LIB=data src/projinfo -s EPSG:4313 -t EPSG:4258 -o PROJ
-------------------------------------
Operation n°1:

EPSG:15928, BD72 to ETRS89 (2), 0.2 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=push +v_3 +step +proj=axisswap +order=2,1 +step 
+proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=cart +ellps=intl +step 
+proj=helmert +x=-106.8686 +y=52.2978 +z=-103.7239 +rx=-0.3366 +ry=0.457 
+rz=-1.8422 +s=-1.2747 +convention=coordinate_frame +step +inv +proj=cart 
+ellps=GRS80 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step 
+proj=axisswap +order=2,1 +step +proj=pop +v_3

-------------------------------------
Operation n°2:

unknown id, Null geographic offset from Belge 1972 to ETRS89, unknown 
accuracy, World

PROJ string:


-------------------------------------
Operation n°3:

EPSG:8369, BD72 to ETRS89 (3), 0.01 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=hgridshift +grids=bd72lb72_etrs89lb08.gsb 
+step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1



Now if I create a fake (or true...) grid bd72lb72_etrs89lb08.gsb in data,

-------------------------------------
Operation n°1:

EPSG:8369, BD72 to ETRS89 (3), 0.01 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=hgridshift +grids=bd72lb72_etrs89lb08.gsb 
+step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

-------------------------------------
Operation n°2:

EPSG:15928, BD72 to ETRS89 (2), 0.2 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=push +v_3 +step +proj=axisswap +order=2,1 +step 
+proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=cart +ellps=intl +step 
+proj=helmert +x=-106.8686 +y=52.2978 +z=-103.7239 +rx=-0.3366 +ry=0.457 
+rz=-1.8422 +s=-1.2747 +convention=coordinate_frame +step +inv +proj=cart 
+ellps=GRS80 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step 
+proj=axisswap +order=2,1 +step +proj=pop +v_3

So the grid would be used in priority

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Karin.Praet at limburg.be  Thu Feb 14 09:30:56 2019
From: Karin.Praet at limburg.be (Praet Karin)
Date: Thu, 14 Feb 2019 17:30:56 +0000
Subject: [PROJ] request for integration of optimized transformatiegrid
 BD72	to ETRS89
In-Reply-To: <310035531.bfDUDiK5zn@even-i700>
References: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
 <2E885BB293AF0448A0181138489E9A0EAF056E84@S000014.PROD.SITAD.DK>,
 <310035531.bfDUDiK5zn@even-i700>
Message-ID: <AM6PR06MB5319E5352F1D70B4C9B814159A670@AM6PR06MB5319.eurprd06.prod.outlook.com>

so next steps: I'll contact the owner and pass on the remarks on the documentation and I will ask him to participate in the discussion.

regards and thank you for your quick responses

Karin



________________________________
Van: Even Rouault <even.rouault at spatialys.com>
Verzonden: donderdag 14 februari 2019 16:42
Aan: proj at lists.osgeo.org
CC: Kristian Evers; Praet Karin
Onderwerp: Re: [PROJ] request for integration of optimized transformatiegrid BD72 to ETRS89

On jeudi 14 février 2019 15:00:34 CET Kristian Evers wrote:
> Hello Karin,
>
> As long as your grids are released on a suitable open source compatible
> license, yes it is possible to add them to PROJ. If you are quick (as in
> today) and open a pull request in the proj-datumgrid repository [0] it can
> become part of the coming version 6 of PROJ. I am not sure if
> transformations to and from EPSG:31370 will be using the grids by default
> without also modifying the source code of PROJ. Even Rouault should be able
> to clear that up though.

This grid is present in the EPSG dataset, and imported in the proj.db of PROJ
master. So this is mostly a matter of having it installed in the PROJ_LIB
directory.

Adding it in the grid_alternatives database of the table would also be nice so
that it is tagged as being 'known' by PROJ with a hint to which package/URL it
can be downloaded from

On a master checkout without the grid, projinfo reports:


$ PROJ_LIB=data src/projinfo -s EPSG:4313 -t EPSG:4258 -o PROJ
-------------------------------------
Operation n°1:

EPSG:15928, BD72 to ETRS89 (2), 0.2 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=push +v_3 +step +proj=axisswap +order=2,1 +step
+proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=cart +ellps=intl +step
+proj=helmert +x=-106.8686 +y=52.2978 +z=-103.7239 +rx=-0.3366 +ry=0.457
+rz=-1.8422 +s=-1.2747 +convention=coordinate_frame +step +inv +proj=cart
+ellps=GRS80 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step
+proj=axisswap +order=2,1 +step +proj=pop +v_3

-------------------------------------
Operation n°2:

unknown id, Null geographic offset from Belge 1972 to ETRS89, unknown
accuracy, World

PROJ string:


-------------------------------------
Operation n°3:

EPSG:8369, BD72 to ETRS89 (3), 0.01 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert
+xy_in=deg +xy_out=rad +step +proj=hgridshift +grids=bd72lb72_etrs89lb08.gsb
+step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1



Now if I create a fake (or true...) grid bd72lb72_etrs89lb08.gsb in data,

-------------------------------------
Operation n°1:

EPSG:8369, BD72 to ETRS89 (3), 0.01 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert
+xy_in=deg +xy_out=rad +step +proj=hgridshift +grids=bd72lb72_etrs89lb08.gsb
+step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

-------------------------------------
Operation n°2:

EPSG:15928, BD72 to ETRS89 (2), 0.2 m, Belgium - onshore

PROJ string:
+proj=pipeline +step +proj=push +v_3 +step +proj=axisswap +order=2,1 +step
+proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=cart +ellps=intl +step
+proj=helmert +x=-106.8686 +y=52.2978 +z=-103.7239 +rx=-0.3366 +ry=0.457
+rz=-1.8422 +s=-1.2747 +convention=coordinate_frame +step +inv +proj=cart
+ellps=GRS80 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step
+proj=axisswap +order=2,1 +step +proj=pop +v_3

So the grid would be used in priority

--
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190214/f6d0b7e9/attachment-0001.html>

From kreve at sdfe.dk  Fri Feb 15 23:48:58 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sat, 16 Feb 2019 07:48:58 +0000
Subject: [PROJ] PROJ 6.0.0RC1
Message-ID: <4AF6D0B4-AD3F-4015-85D2-A45C3F68571D@sdfe.dk>

All,

I have prepared a release candidate of PROJ 6.0.0. See the release notes below.

Download it here:

https://download.osgeo.org/proj/proj-6.0.0RC1.tar.gz (https://download.osgeo.org/proj/proj-6.0.0RC1.tar.gz.md5)
https://download.osgeo.org/proj/proj-6.0.0RC1.zip (https://download.osgeo.org/proj/proj-6.0.0RC1.zip.md5)


In addition to the new PROJ release we are also updating the regional datumgrid
packages covering Europe and North America. Download the release candidates here:

Europe:
https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC1.tar.gz
https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC1.zip

Changes include: Grids covering the UK, France and Sweden.

North America:
https://download.osgeo.org/proj/proj-datumgrid-north-america-1.1RC1.zip
https://download.osgeo.org/proj/proj-datumgrid-north-america-1.2RC1.tar.gz

Changes include: NAD83 -> NAD83(HPGN) grids and GEOIDB12 grids.


I am aiming for a March 1st final release for both the PROJ source distribution
and the two datumgrid packages. Please test the release candidates
where ever you depend on them and report back your findings.

/Kristian


6.0.0 Release Notes
-------------------

PROJ 6 has undergone extensive changes to increase its functional scope from a
cartographic projection engine with so-called "early-binding" geodetic datum
transformation capabilities to a more complete library supporting coordinate
transformations and coordinate reference systems.

As a foundation for other enhancements, PROJ now includes a C++ implementation
of the modelisation propopsed by the ISO-19111:2019 standard / OGC Abstract
Specification Topic 2: "Referencing By Coordinates", for geodetic reference
frames (datums), coordinate reference systems and coordinate operations.
Construction and query of those geodetic objects is available through a new C++
API, and also accessible for the most part from bindings in the C API.

Those geodetic objects can be imported and exported from and into the OGC
Well-Known Text format (WKT) in its different variants: ESRI WKT, GDAL WKT 1,
WKT2:2015 (ISO 19162:2015) and WKT2:2018 (ISO 19162:2018). Import and export of
CRS objects from and into PROJ strings is also supported. This functionality
was previously available in the GDAL software library (except WKT2 support
which is a new feature), and is now an integral part of PROJ.

A unified database of geodetic objects, coordinate reference systems and their
metadata, and coordinate operations between those CRS is now available in a
SQLite3 database file, proj.db. This includes definitions imported from the
IOGP EPSG dataset (v9.5.5 release), the IGNF (French national mapping agency)
geodetic registry and the ESRI projection engine database. PROJ is now the
reference software in the "OSGeo C stack" for this CRS and coordinate operation
database, whereas previously this functionality was spread over PROJ, GDAL and
libgeotiff, and used CSV or other adhoc text-based formats.

Late-binding coordinate operation capabilities, that takes  metadata such as
area of use and accuracy into account, has been added. This can avoid in a
number of situations the past requirement of using WGS84 as a pivot system,
which could cause unneeded accuracy loss, or was not doable at all sometimes
when transformation to WGS84 was not available. Those late-binding capabilities
are now used by the proj_create_crs_to_crs() function and the cs2cs utility.

A new command line utility, projinfo, has been added to query information about
a geodetic object of the database, import and export geodetic objects from/into
WKT and PROJ strings, and display coordinate operations available between two
CRSs.

 UPDATES
 -------

 o Removed projects.h as a public interface (#835)

 o Deprecated the proj_api.h interface. The header file is still available
   but will be removed with the next major version release of PROJ. It is
   now required to define ACCEPT_USE_OF_DEPRECATED_PROJ_API_H before the
   interface can be used (#836)

 o Removed support for the nmake build system (#838)

 o Removed support for the proj_def.dat defaults file (#201)

 o C++11 required for building PROJ (#1203)

 o Added build dependency on SQLite 3.7 (#1175)

 o Added projinfo command line application (#1189)

 o Added many functions to proj.h for handling ISO19111 functionality (#1175)

 o Added C++ API exposing ISO19111 functionality (#1175)

 o Updated cs2cs to use late-binding features (#1182)

 o Removed the nad2bin application. Now available in the proj-datumgrid
   git repository (#1236)

 o Removed support for Chebyshev polynomials in proj (#1226)

 o Removed proj_geocentric_latitude from proj.h API (#1170)

 o Changed behaviour of proj: Now only allow initialization of
   projections (#1162)

 o Changed behaviour of tmerc: Now default to the Extended Transverse
   Mercator algorithm (etmerc). Old implementation available by adding
   +approx (#404)

 o Chaged behaviour: Default ellipsoid now set to GRS80 (was WGS84) (#1210)

 o Allow multiple directories in PROJ_LIB environment variable (#1281)

 o Added Lambert Conic Conformal (2SP Michigan) projection (#1142)

 o Added Bertin1953 projection (#1133)

 o Added Tobler-Mercator projection (#1153)

 o Added Molodensky-Badekas transform (#1160)

 o Added push and pop coordinate operations (#1250)

 o Removed +t_obs parameter from helmert and deformation (#1264)

 o Added +dt parameter to deformation as replacement for
   removed +t_obs (#1264)

 BUG FIXES
 ---------

 o Read +towgs84 values correctly on locales not using dot as comma separator (#1136)

 o Fixed file offset for reading of shift values in NTv1 files (#1144)

 o Avoid problems with PTHREAD_MUTEX_RECURSIVE when using CMake (#1158)

 o Avoid raising errors when setting ellipsoid flattening to zero (#1191)

 o Fixed lower square calculations in rHealpix projection (#1206)

 o Allow Molodensky transform parameters to be zero (#1194)

 o Fixed wrong parameter in ITRF2000 init file (#1240)

 o Fixed use of grid paths including spaces (#1152)

 THANKS TO
 ------------

 Version 6.0.0 is made possible by the following contributors:

 Aaron Puchert
 Phil Elson
 Mateusz Łoskot
 Markus Neteler
 Jürgen Fischer
 Howard Butler
 Charles Karney
 Alan D. Snow
 Marco Bernasocchi
 Karoline Skaar
 Ben Boeckel
 Ivan Veselov
 Mike Taves
 Philippe Rivière
 Elliott Sales de Andrade
 Kai Pastor
 Kristian Evers
 Even Rouault


From pramsey at cleverelephant.ca  Sat Feb 16 06:57:10 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 06:57:10 -0800
Subject: [PROJ] proj_angular_input
Message-ID: <CACowWR28A9ikcE5vTyLf=LvqZtCzQsd4pJv-TXc5BNWgobBj8Q@mail.gmail.com>

So, I create a PJ thusly:

pj = proj_create_crs_to_crs(NULL, "EPSG:4326", "EPSG:3005", NULL);

The from is clearly angular, the to is an albers projection in NAD83.

But

proj_angular_input(pj, PJ_FWD)

Does not return true?

Am I misunderstanding the meaning of proj_angular_input or of forward/backward?

P

From pramsey at cleverelephant.ca  Sat Feb 16 08:36:16 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 08:36:16 -0800
Subject: [PROJ] X/Y swap
Message-ID: <CACowWR157ECutyiFa4MN7uRtHcdEgVu7dxLdaUu6W9k_4skzxQ@mail.gmail.com>

Semi-related to my earlier post...

(a) what's a good way to figure out the units of the start/end of a PJ?
(b) I see that when I do this:

pj = proj_create_crs_to_crs(NULL, "EPSG:4326", "EPSG:3005", NULL);

I get a PJ in which the first ordinate is latitude and second is
longitude, so the old EPSG axis-order issue... is there a global way
to turn this off / condition this or am I going to have to interrogate
axes in my implementation?

P.

From pramsey at cleverelephant.ca  Sat Feb 16 09:10:09 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 09:10:09 -0800
Subject: [PROJ] Proj6 Docs
Message-ID: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>

Hi all,
I apologize for list spamming, I guess I'm just impatient to get proj6
support into PostGIS :)

I did up a little test program to try and learn more about how to do
this in the large in PostGIS, and I'm kind of confused with the many
forms "PJ" can take...

https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285

When I run the program, I get

proj_crs_get_coordinate_system: Object is not a SingleCRS
proj_cs_get_axis_count: Object is not a CoordinateSystem
axis_count = -1

So... my PJ is a full pipeline, I guess, since it came from
proj_create_crs_to_crs().
But how do I extract the first SingleSRS from the pipeline? The last?
(I'll only be doing two-system pipelines in my use case.)

Are the proj6 docs built out anywhere online? Do they address this?

P.

From martin.desruisseaux at geomatys.com  Sat Feb 16 09:18:24 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Sat, 16 Feb 2019 18:18:24 +0100
Subject: [PROJ] X/Y swap
In-Reply-To: <CACowWR157ECutyiFa4MN7uRtHcdEgVu7dxLdaUu6W9k_4skzxQ@mail.gmail.com>
References: <CACowWR157ECutyiFa4MN7uRtHcdEgVu7dxLdaUu6W9k_4skzxQ@mail.gmail.com>
Message-ID: <b879ad20-b341-d741-4d3e-74f7a215c363@geomatys.com>

Le 16/02/2019 à 17:36, Paul Ramsey a écrit :

> I get a PJ in which the first ordinate is latitude and second is
> longitude, so the old EPSG axis-order issue... is there a global way
> to turn this off / condition this
>
I woud not recommend to provide a global flag causing departure from
EPSG definitions if we want to put an end to the axis-order issue. If
someone wants (longitude, latitude) axis order, this is okay but we
shall not call those definitions "EPSG". Alternatives are:

  * Use a different name.
  * Maybe use some modifier (e.g. "EPSG::4326;axisOrder=lon,lat").
  * Provide some C/C++ methods that modify PJ after construction (e.g.
    makeRightHanded(PJ)). Such method should erase the EPSG identifier
    from the PJ definition, if any.
  * Other idea?

The intent is also to avoid confusion with other CRS having non-obvious
directions, e.g. projections on poles where all directions are going
North or South (e.g. "South along 90° meridian"), or DerivedCRS or
EngineeringCRS which are now supported by Proj. Those new Proj
capabilities make more important to avoid changing axis order under the
hood (i.e. without explicit action from the developer).

    Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190216/6f6c714a/attachment.html>

From pramsey at cleverelephant.ca  Sat Feb 16 10:08:36 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 10:08:36 -0800
Subject: [PROJ] proj_angular_input
In-Reply-To: <3039615.ak4e0Yo5My@even-i700>
References: <CACowWR28A9ikcE5vTyLf=LvqZtCzQsd4pJv-TXc5BNWgobBj8Q@mail.gmail.com>
 <3039615.ak4e0Yo5My@even-i700>
Message-ID: <EDB1BA1B-BA43-480C-B62A-3708D878332D@cleverelephant.ca>



> On Feb 16, 2019, at 10:04 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On samedi 16 février 2019 06:57:10 CET Paul Ramsey wrote:
>> So, I create a PJ thusly:
>> 
>> pj = proj_create_crs_to_crs(NULL, "EPSG:4326", "EPSG:3005", NULL);
>> 
>> The from is clearly angular, the to is an albers projection in NAD83.
>> 
>> But
>> 
>> proj_angular_input(pj, PJ_FWD)
>> 
>> Does not return true?
>> 
>> Am I misunderstanding the meaning of proj_angular_input or of
>> forward/backward?
> 
> Hum, I guess we have some confusion here about the semantics of 
> proj_angular_input() and what the "new code" I added those months does.
> 
> proj_angular_input() returns true if the expected values are in radian, but 
> the pipeline returned by your above proj_create_crs_to_crs() invokation is
> 
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
> +xy_in=deg +xy_out=rad +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 
> +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80
> 
> so it does the deg -> rad conversion, which causes the pipeline to not expect 
> radians, and thus return false in proj_angular_input()
> 
> Kristian, any idea what we should do ? The doc mentions "Check if a operation 
> expects angular input.", but we have code we really expect angular to mean 
> radian, such as in the proj utility that uses is to to deg to rad conversions.

Well, there’s a certain irony here, in that I’m only checking that function to see if I need to do a rad/deg conversion, so actually it does precisely what I need, but not what I expected. That just leaves me with the axis swapping problem to deal with.

P.

> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From even.rouault at spatialys.com  Sat Feb 16 10:04:08 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Feb 2019 19:04:08 +0100
Subject: [PROJ] proj_angular_input
In-Reply-To: <CACowWR28A9ikcE5vTyLf=LvqZtCzQsd4pJv-TXc5BNWgobBj8Q@mail.gmail.com>
References: <CACowWR28A9ikcE5vTyLf=LvqZtCzQsd4pJv-TXc5BNWgobBj8Q@mail.gmail.com>
Message-ID: <3039615.ak4e0Yo5My@even-i700>

On samedi 16 février 2019 06:57:10 CET Paul Ramsey wrote:
> So, I create a PJ thusly:
> 
> pj = proj_create_crs_to_crs(NULL, "EPSG:4326", "EPSG:3005", NULL);
> 
> The from is clearly angular, the to is an albers projection in NAD83.
> 
> But
> 
> proj_angular_input(pj, PJ_FWD)
> 
> Does not return true?
> 
> Am I misunderstanding the meaning of proj_angular_input or of
> forward/backward?

Hum, I guess we have some confusion here about the semantics of 
proj_angular_input() and what the "new code" I added those months does.

proj_angular_input() returns true if the expected values are in radian, but 
the pipeline returned by your above proj_create_crs_to_crs() invokation is

+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 
+lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80

so it does the deg -> rad conversion, which causes the pipeline to not expect 
radians, and thus return false in proj_angular_input()

Kristian, any idea what we should do ? The doc mentions "Check if a operation 
expects angular input.", but we have code we really expect angular to mean 
radian, such as in the proj utility that uses is to to deg to rad conversions.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sat Feb 16 10:24:17 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Feb 2019 19:24:17 +0100
Subject: [PROJ] Proj6 Docs
In-Reply-To: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
Message-ID: <3195684.fMh4D3jr1G@even-i700>

Paul,

Answering this question and the one about X/Y order.

Yes PJ objects can be of different kinds and do not all play well with all 
functions.

proj_crs_get_coordinate_system(), as the name implies, expects a PJ object of 
type CRS, but proj_create_crs_to_crs() returns a PJ object of type Coordinate 
Operation / pipeline

So you should call proj_crs_get_coordinate_system() on the result of 
proj_create("EPSG:4326") instead.

Or, after the commit I just pushed, you can extract the source CRS from the 
pipeline with proj_get_source_crs() (but only if you've created the pipeline 
with proj_create_crs_to_crs(). Not if you created it with 
proj_create("+proj=pipeline ...") )

Regarding the proj6 docs, they will be online as soon as it is promoted. You 
can build them locally with "make html" in the docs/ directory. The output 
will be in docs/build/html/

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Sat Feb 16 11:03:46 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 11:03:46 -0800
Subject: [PROJ] Proj6 Docs
In-Reply-To: <3195684.fMh4D3jr1G@even-i700>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <3195684.fMh4D3jr1G@even-i700>
Message-ID: <35BC14C0-8CB9-46EA-BBAD-12F6A72BC039@cleverelephant.ca>



> On Feb 16, 2019, at 10:24 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Paul,
> 
> Answering this question and the one about X/Y order.
> 
> Yes PJ objects can be of different kinds and do not all play well with all 
> functions.
> 
> proj_crs_get_coordinate_system(), as the name implies, expects a PJ object of 
> type CRS, but proj_create_crs_to_crs() returns a PJ object of type Coordinate 
> Operation / pipeline
> 
> So you should call proj_crs_get_coordinate_system() on the result of 
> proj_create("EPSG:4326") instead.

Hum. Right now I’m creating and caching the result of proj_create_crs_to_crs(). If I get two PJ from proj_create() is there a way to create an “optimum pipeline” ala proj_create_crs_to_crs() using two PJ as the start/end points, instead of two strings?

> Or, after the commit I just pushed, you can extract the source CRS from the 
> pipeline with proj_get_source_crs() (but only if you've created the pipeline 
> with proj_create_crs_to_crs(). Not if you created it with 
> proj_create("+proj=pipeline ...") )

Any chance you could also add proj_get_dest_crs() to pick the CRS off the end of a pipeline? Then I’d be able to read off the two things I need from the pipeline PJ I already have in my cache...

> Regarding the proj6 docs, they will be online as soon as it is promoted. You 
> can build them locally with "make html" in the docs/ directory. The output 
> will be in docs/build/html/

Thanks!

P

> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From kreve at sdfe.dk  Sat Feb 16 11:09:50 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sat, 16 Feb 2019 19:09:50 +0000
Subject: [PROJ] proj_angular_input
In-Reply-To: <3039615.ak4e0Yo5My@even-i700>
References: <CACowWR28A9ikcE5vTyLf=LvqZtCzQsd4pJv-TXc5BNWgobBj8Q@mail.gmail.com>
 <3039615.ak4e0Yo5My@even-i700>
Message-ID: <61F31E6C-1C64-4580-9A84-BC4E59A2EC79@sdfe.dk>



> On 16 Feb 2019, at 19:04, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On samedi 16 février 2019 06:57:10 CET Paul Ramsey wrote:
>> So, I create a PJ thusly:
>> 
>> pj = proj_create_crs_to_crs(NULL, "EPSG:4326", "EPSG:3005", NULL);
>> 
>> The from is clearly angular, the to is an albers projection in NAD83.
>> 
>> But
>> 
>> proj_angular_input(pj, PJ_FWD)
>> 
>> Does not return true?
>> 
>> Am I misunderstanding the meaning of proj_angular_input or of
>> forward/backward?
> 
> Hum, I guess we have some confusion here about the semantics of 
> proj_angular_input() and what the "new code" I added those months does.
> 
> proj_angular_input() returns true if the expected values are in radian, but 
> the pipeline returned by your above proj_create_crs_to_crs() invokation is
> 
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
> +xy_in=deg +xy_out=rad +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 
> +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80
> 
> so it does the deg -> rad conversion, which causes the pipeline to not expect 
> radians, and thus return false in proj_angular_input()
> 
> Kristian, any idea what we should do ? The doc mentions "Check if a operation 
> expects angular input.", but we have code we really expect angular to mean 
> radian, such as in the proj utility that uses is to to deg to rad conversions.
> 

Yes. The documentation just need a bit of rewording and a history lesson:

Returns 1 if input is in radians. The name is silly because previous to PROJ 6
ALL angular units returned by PROJ was in radians - this is no longer the
case from version 6 and onwards.


> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From even.rouault at spatialys.com  Sat Feb 16 12:30:42 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Feb 2019 21:30:42 +0100
Subject: [PROJ] Proj6 Docs
In-Reply-To: <35BC14C0-8CB9-46EA-BBAD-12F6A72BC039@cleverelephant.ca>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <3195684.fMh4D3jr1G@even-i700>
 <35BC14C0-8CB9-46EA-BBAD-12F6A72BC039@cleverelephant.ca>
Message-ID: <6307913.4MS85j9LxK@even-i700>

> Hum. Right now I’m creating and caching the result of
> proj_create_crs_to_crs(). If I get two PJ from proj_create() is there a way
> to create an “optimum pipeline” ala proj_create_crs_to_crs() using two PJ
> as the start/end points, instead of two strings?

2 options:
- you export your PJ objects as wkt with proj_as_wkt() and feed that to 
proj_create_crs_to_crs()
- or you emulate most of what proj_create_crs_to_crs() does, which is 
essentially using proj_create_operations() which takes 2 PJ objects (of type 
CRS):
https://github.com/OSGeo/proj.4/blob/master/src/4D_api.cpp#L1010


> > Or, after the commit I just pushed, you can extract the source CRS from
> > the
> > pipeline with proj_get_source_crs() (but only if you've created the
> > pipeline with proj_create_crs_to_crs(). Not if you created it with
> > proj_create("+proj=pipeline ...") )
> 
> Any chance you could also add proj_get_dest_crs() to pick the CRS off the
> end of a pipeline? 

Ah, that was implied that my changeset also fixes the dest part of course.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Sat Feb 16 13:40:27 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 13:40:27 -0800
Subject: [PROJ] Proj6 Docs
In-Reply-To: <6307913.4MS85j9LxK@even-i700>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <3195684.fMh4D3jr1G@even-i700>
 <35BC14C0-8CB9-46EA-BBAD-12F6A72BC039@cleverelephant.ca>
 <6307913.4MS85j9LxK@even-i700>
Message-ID: <552ED1F7-717E-4054-9CDF-1FF1B4E23E17@cleverelephant.ca>



> On Feb 16, 2019, at 12:30 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> Hum. Right now I’m creating and caching the result of
>> proj_create_crs_to_crs(). If I get two PJ from proj_create() is there a way
>> to create an “optimum pipeline” ala proj_create_crs_to_crs() using two PJ
>> as the start/end points, instead of two strings?
> 
> 2 options:
> - you export your PJ objects as wkt with proj_as_wkt() and feed that to 
> proj_create_crs_to_crs()
> - or you emulate most of what proj_create_crs_to_crs() does, which is 
> essentially using proj_create_operations() which takes 2 PJ objects (of type 
> CRS):
> https://github.com/OSGeo/proj.4/blob/master/src/4D_api.cpp#L1010
> 
> 
>>> Or, after the commit I just pushed, you can extract the source CRS from
>>> the
>>> pipeline with proj_get_source_crs() (but only if you've created the
>>> pipeline with proj_create_crs_to_crs(). Not if you created it with
>>> proj_create("+proj=pipeline ...") )
>> 
>> Any chance you could also add proj_get_dest_crs() to pick the CRS off the
>> end of a pipeline? 
> 
> Ah, that was implied that my changeset also fixes the dest part of course.

Ah, I see! I cannot get it to work though, I am trying this:

https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj-c-L19-L24 <https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj-c-L19-L24>

And getting:

 proj_get_source_crs: Object is not a BoundCRS or a CoordinateOperation 
 proj_get_target_crs: Object is not a BoundCRS or a CoordinateOperation

What’s my mistake?

P

> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190216/afcdc4c7/attachment.html>

From even.rouault at spatialys.com  Sat Feb 16 13:56:09 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Feb 2019 22:56:09 +0100
Subject: [PROJ] Proj6 Docs
In-Reply-To: <552ED1F7-717E-4054-9CDF-1FF1B4E23E17@cleverelephant.ca>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <6307913.4MS85j9LxK@even-i700>
 <552ED1F7-717E-4054-9CDF-1FF1B4E23E17@cleverelephant.ca>
Message-ID: <4865726.glmCmZCWDC@even-i700>

> Ah, I see! I cannot get it to work though, I am trying this:
> 
> https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj-c
> -L19-L24
> <https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj
> -c-L19-L24>
> 
> And getting:
> 
>  proj_get_source_crs: Object is not a BoundCRS or a CoordinateOperation
>  proj_get_target_crs: Object is not a BoundCRS or a CoordinateOperation
> 
> What’s my mistake?

Ah... That gets tricky becase EPSG:3005 uses NAD83 datum, and there's no single transformation path from WGS84 to NAD83

If you add
printf("definition: %s\n", proj_pj_info(pj).definition);

you'll see in the output:
definition: unavailable until proj_trans is called

And if you do:

$ src/projinfo -s EPSG:4326 -t EPSG:3005 --spatial-test intersects -o PROJ

you'll see:

-------------------------------------
Operation n°1:

unknown id, Inverse of NAD83 to WGS 84 (1) + British Columbia Albers, 4 m, North America - Canada and USA (CONUS, Alaska mainland)

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80

-------------------------------------
Operation n°2:

unknown id, Inverse of NAD83 to WGS 84 (41) + British Columbia Albers, 1 m, USA - Oregon and Washington

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=WO +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80

-------------------------------------
Operation n°3:

unknown id, Inverse of NAD83 to WGS 84 (20) + British Columbia Albers, 1 m, USA - Idaho and Montana - west of 113°W

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=wmhpgn.gsb +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80

-------------------------------------
Operation n°4:

unknown id, Null geographic offset from WGS 84 to NAD83 + British Columbia Albers, unknown accuracy, World

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80

-------------------------------------
Operation n°5:

unknown id, Inverse of NAD83 to WGS 84 (8) + British Columbia Albers, 1 m, Canada - Alberta

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=AB_CSRS.DAC +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80


So proj_create_crs_to_crs() see that there are several potential transformation and keep the list internally.
When proj_trans() is invoked it picks up the most appropriate transformation from the above according to the current coordinate value.
So in that case, the PJ object is in a rather particular state and has no proper single CoordinateOperation stored, but a list of candidates that is hidden from the API.
I could potentially fix proj_get_source/target_crs() to properly behave in that situation
since all candidate transformations share the same source and target SRS. Perhaps I should
since the above explanation are probably just an implementation detail for your use case ?

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Sat Feb 16 14:01:20 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 14:01:20 -0800
Subject: [PROJ] Proj6 Docs
In-Reply-To: <4865726.glmCmZCWDC@even-i700>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <6307913.4MS85j9LxK@even-i700>
 <552ED1F7-717E-4054-9CDF-1FF1B4E23E17@cleverelephant.ca>
 <4865726.glmCmZCWDC@even-i700>
Message-ID: <8875B11B-0F1C-4A8F-9DAA-224609210169@cleverelephant.ca>



> On Feb 16, 2019, at 1:56 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> Ah, I see! I cannot get it to work though, I am trying this:
>> 
>> https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj-c
>> -L19-L24
>> <https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj
>> -c-L19-L24>
>> 
>> And getting:
>> 
>> proj_get_source_crs: Object is not a BoundCRS or a CoordinateOperation
>> proj_get_target_crs: Object is not a BoundCRS or a CoordinateOperation
>> 
>> What’s my mistake?
> 
> Ah... That gets tricky becase EPSG:3005 uses NAD83 datum, and there's no single transformation path from WGS84 to NAD83
> 
> If you add
> printf("definition: %s\n", proj_pj_info(pj).definition);
> 
> you'll see in the output:
> definition: unavailable until proj_trans is called
> 
> And if you do:
> 
> $ src/projinfo -s EPSG:4326 -t EPSG:3005 --spatial-test intersects -o PROJ
> 
> you'll see:
> 
> -------------------------------------
> Operation n°1:
> 
> unknown id, Inverse of NAD83 to WGS 84 (1) + British Columbia Albers, 4 m, North America - Canada and USA (CONUS, Alaska mainland)
> 
> PROJ string:
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80
> 
> -------------------------------------
> Operation n°2:
> 
> unknown id, Inverse of NAD83 to WGS 84 (41) + British Columbia Albers, 1 m, USA - Oregon and Washington
> 
> PROJ string:
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=WO +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80
> 
> -------------------------------------
> Operation n°3:
> 
> unknown id, Inverse of NAD83 to WGS 84 (20) + British Columbia Albers, 1 m, USA - Idaho and Montana - west of 113°W
> 
> PROJ string:
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=wmhpgn.gsb +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80
> 
> -------------------------------------
> Operation n°4:
> 
> unknown id, Null geographic offset from WGS 84 to NAD83 + British Columbia Albers, unknown accuracy, World
> 
> PROJ string:
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80
> 
> -------------------------------------
> Operation n°5:
> 
> unknown id, Inverse of NAD83 to WGS 84 (8) + British Columbia Albers, 1 m, Canada - Alberta
> 
> PROJ string:
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=hgridshift +grids=AB_CSRS.DAC +step +proj=aea +lat_0=45 +lon_0=-126 +lat_1=50 +lat_2=58.5 +x_0=1000000 +y_0=0 +ellps=GRS80
> 
> 
> So proj_create_crs_to_crs() see that there are several potential transformation and keep the list internally.
> When proj_trans() is invoked it picks up the most appropriate transformation from the above according to the current coordinate value.
> So in that case, the PJ object is in a rather particular state and has no proper single CoordinateOperation stored, but a list of candidates that is hidden from the API.
> I could potentially fix proj_get_source/target_crs() to properly behave in that situation
> since all candidate transformations share the same source and target SRS. Perhaps I should
> since the above explanation are probably just an implementation detail for your use case ?

Yes, I’m only looking for source/target so I can figure out if I need to do an axis swap before (or after) feeding the transformation. Is there a decent way to stick a swap directing onto the end/start of the transformation so I get it “for free” when I run proj_trans?

P


> 
> Even
> 
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From even.rouault at spatialys.com  Sat Feb 16 14:13:56 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Feb 2019 23:13:56 +0100
Subject: [PROJ] Proj6 Docs
In-Reply-To: <8875B11B-0F1C-4A8F-9DAA-224609210169@cleverelephant.ca>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <4865726.glmCmZCWDC@even-i700>
 <8875B11B-0F1C-4A8F-9DAA-224609210169@cleverelephant.ca>
Message-ID: <45604365.bHlhsIIvqu@even-i700>

> > Perhaps I should since the above explanation are probably
> > just an implementation detail for your use case ?

OK, fix just pushed.

> Yes, I’m only looking for source/target so I can figure out if I need to do
> an axis swap before (or after) feeding the transformation. Is there a
> decent way to stick a swap directing onto the end/start of the
> transformation so I get it “for free” when I run proj_trans?

That would involve hand editing the pipeline.

proj_as_proj_string(ctx, P, PJ_PROJ_5, nullptr) will return a PROJ string that 
generally begin with "+proj=pipeline" (not in your case with alternatives 
though)

If just after that and before the first +step, you insert

+step +proj=axisswap +proj=axisswap +order=2,1

(or you append it at the end if you want to reverse the order for the output)

And then you can recreate a PJ pipeline with that string with proj_create()

Or course if you do an axisswap just before/after another one, their effect 
cancels each other, so you could optimize by removing it;

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Sat Feb 16 14:24:16 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 14:24:16 -0800
Subject: [PROJ] Proj6 Docs
In-Reply-To: <45604365.bHlhsIIvqu@even-i700>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <4865726.glmCmZCWDC@even-i700>
 <8875B11B-0F1C-4A8F-9DAA-224609210169@cleverelephant.ca>
 <45604365.bHlhsIIvqu@even-i700>
Message-ID: <43CC2808-CC71-49D0-81AF-DFED0F52DFAA@cleverelephant.ca>



> On Feb 16, 2019, at 2:13 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>>> Perhaps I should since the above explanation are probably
>>> just an implementation detail for your use case ?
> 
> OK, fix just pushed.

This seems to get me there… now I’m disambiguating axes, hoorah (?)

> 
>> Yes, I’m only looking for source/target so I can figure out if I need to do
>> an axis swap before (or after) feeding the transformation. Is there a
>> decent way to stick a swap directing onto the end/start of the
>> transformation so I get it “for free” when I run proj_trans?
> 
> That would involve hand editing the pipeline.
> 
> proj_as_proj_string(ctx, P, PJ_PROJ_5, nullptr) will return a PROJ string that 
> generally begin with "+proj=pipeline" (not in your case with alternatives 
> though)
> 
> If just after that and before the first +step, you insert
> 
> +step +proj=axisswap +proj=axisswap +order=2,1

twice?

Unfortunately, running proj_as_proj_string() on my transform <https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj-c-L19 <https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj-c-L19>> results in 

  proj_as_proj_string: Object type not exportable to PROJ

So this route to swapping may not be available to me.

P.

> (or you append it at the end if you want to reverse the order for the output)
> 
> And then you can recreate a PJ pipeline with that string with proj_create()
> 
> Or course if you do an axisswap just before/after another one, their effect 
> cancels each other, so you could optimize by removing it;



> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190216/595e4add/attachment-0001.html>

From even.rouault at spatialys.com  Sat Feb 16 14:24:20 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Feb 2019 23:24:20 +0100
Subject: [PROJ] Proj6 Docs
In-Reply-To: <45604365.bHlhsIIvqu@even-i700>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <8875B11B-0F1C-4A8F-9DAA-224609210169@cleverelephant.ca>
 <45604365.bHlhsIIvqu@even-i700>
Message-ID: <4032580.eGGRftFkBU@even-i700>

On samedi 16 février 2019 23:13:56 CET Even Rouault wrote:
> > > Perhaps I should since the above explanation are probably
> > > just an implementation detail for your use case ?
> 
> OK, fix just pushed.
> 
> > Yes, I’m only looking for source/target so I can figure out if I need to
> > do
> > an axis swap before (or after) feeding the transformation. Is there a
> > decent way to stick a swap directing onto the end/start of the
> > transformation so I get it “for free” when I run proj_trans?
> 
> That would involve hand editing the pipeline.
> 
> proj_as_proj_string(ctx, P, PJ_PROJ_5, nullptr) will return a PROJ string
> that generally begin with "+proj=pipeline" (not in your case with
> alternatives though)
> 
> If just after that and before the first +step, you insert
> 
> +step +proj=axisswap +proj=axisswap +order=2,1
> 
> (or you append it at the end if you want to reverse the order for the
> output)
> 
> And then you can recreate a PJ pipeline with that string with proj_create()
> 
> Or course if you do an axisswap just before/after another one, their effect
> cancels each other, so you could optimize by removing it;

Another option is that you alter your source/target CRS to have the axis order 
you wish.

In proj_experimental.h, you have functions to do CRS manipulations

For example if you start with a geographic CRS PJ* geogCRS, you could do:


PJ* datum = proj_crs_get_datum(geogCRS);
PJ* long_lat_cs = proj_create_ellipsoidal_2D_cs(ctx,
														  PJ_ELLPS2D_LONGITUDE_LATITUDE,
														  "Degree",
														  180.0 / M_PI);
PJ* long_lat_crs = proj_create_geographic_crs_from_datum(
	ctx, "my CRS", datum, long_lat_cs);
proj_destroy(datum);
proj_destroylong_lat_cs);

But using that API might be more tricky and have side effects (like area of 
use being lost, which can have effects when datum transformation paths are 
searched. Setting this area of use could be done with the C++ API, but the C 
API is just a subset of it that doesn't expose that), so you'd better do the 
axis swapping game in your code rather than creating those alternative CRS 
definitions.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sat Feb 16 14:35:43 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Feb 2019 23:35:43 +0100
Subject: [PROJ] Proj6 Docs
In-Reply-To: <43CC2808-CC71-49D0-81AF-DFED0F52DFAA@cleverelephant.ca>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <45604365.bHlhsIIvqu@even-i700>
 <43CC2808-CC71-49D0-81AF-DFED0F52DFAA@cleverelephant.ca>
Message-ID: <3714668.G3KWVt4SAK@even-i700>

> > If just after that and before the first +step, you insert
> > 
> > +step +proj=axisswap +proj=axisswap +order=2,1
> 
> twice?

For example if you transform from EPSG:4326 to something, as PROJ internally 
handles geodetic coordinates in the long, lat order, the pipeline it will 
return will do as a first step an axis inversion from lat, long (the axis 
order of EPSG:4326) to long, lat.
If you actually want to create a pipeline that takes long, lat coordinates, 
you'd have to add an extra axisswap before, or remove the axisswap PROJ 
automatically added.

> 
> Unfortunately, running proj_as_proj_string() on my transform
> <https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj
> -c-L19
> <https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj
> -c-L19>> results in
> 
>   proj_as_proj_string: Object type not exportable to PROJ

Yes, that's what I meant with my above "(not in your case with
alternatives though)". As there are several potential alternatives, the PJ 
object you get cannot be exported as a PROJ string, since the actal PROJ 
string will change depending on the coordinates with which you'll call 
proj_trans()

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Sat Feb 16 16:59:56 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 16:59:56 -0800
Subject: [PROJ] Performance of proj_create_crs_to_crs()
Message-ID: <CACowWR0asRg_f-nM2GHgi9--dhpNYt75=sErBCV6G7iAmUY_BQ@mail.gmail.com>

So, having gotten all the axis swapping tap dancing working, I went to
run some of my favourite transforms around BC, finishing up with one
of my favourites...

  st_transform('SRID=3005;POINT(1000000 0)',4267)

This takes a point from a NAD83 projected system (EPSG:3005) to a
NAD27 geodetic system (EPSG:4267).

Here's the crazy part: this transformation takes 400ms, and the time
is all spend in in proj, getting the PJ.

I ran 20-30 of them in a row and captured the workload in Instruments
in case these function calls ring any bells WRT overhead, screenshot
attached.

Fortunately for bulk conversion PostGIS already caches the projection
object, in fact most of my work this week was in renovating that part
of the code, but older versions of Proj are much much faster in
resolving projections from projection strings.

Thoughts?

P.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: screenshot_192.png
Type: image/png
Size: 106636 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190216/1040245e/attachment-0001.png>

From pramsey at cleverelephant.ca  Sat Feb 16 17:01:51 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 16 Feb 2019 17:01:51 -0800
Subject: [PROJ] Performance of proj_create_crs_to_crs()
Message-ID: <F763DE62-E4B7-47E5-B2B8-7C9A1103A533@cleverelephant.ca>

So, having gotten all the axis swapping tap dancing working, I went to
run some of my favourite transforms around BC, finishing up with one
of my favourites...

 st_transform('SRID=3005;POINT(1000000 0)',4267)

This takes a point from a NAD83 projected system (EPSG:3005) to a
NAD27 geodetic system (EPSG:4267).

Here's the crazy part: this transformation takes 400ms, and the time
is all spend in in proj, getting the PJ.

I ran 20-30 of them in a row and captured the workload in Instruments
in case these function calls ring any bells WRT overhead, screenshot
attached.

Fortunately for bulk conversion PostGIS already caches the projection
object, in fact most of my work this week was in renovating that part
of the code, but older versions of Proj are much much faster in
resolving projections from projection strings.

Thoughts?

P.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190216/768d6881/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: screenshot_192.jpg
Type: image/jpeg
Size: 49209 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190216/768d6881/attachment-0001.jpg>

From kreve at sdfe.dk  Sun Feb 17 00:10:35 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sun, 17 Feb 2019 08:10:35 +0000
Subject: [PROJ] Proj6 Docs
In-Reply-To: <552ED1F7-717E-4054-9CDF-1FF1B4E23E17@cleverelephant.ca>
References: <CACowWR3GHkcP7A46OeL5gSwf6BP6WEuUMb5mpX7+FUPE5hr+rw@mail.gmail.com>
 <3195684.fMh4D3jr1G@even-i700>
 <35BC14C0-8CB9-46EA-BBAD-12F6A72BC039@cleverelephant.ca>
 <6307913.4MS85j9LxK@even-i700>
 <552ED1F7-717E-4054-9CDF-1FF1B4E23E17@cleverelephant.ca>
Message-ID: <53AA0126-CB12-4DB0-A37B-0C36B0C7781E@sdfe.dk>

Paul,

This is not related to you question but you mentioned in a previous mail that you
weren’t sure how to use PJ_FWD/PJ_INV in relation to proj_angular_input/output.
I noticed that in your gist you are probably not doing what you want. You have:

	int ango = proj_angular_output(pj, PJ_FWD);
	int angi = proj_angular_input(pj, PJ_INV);

ango and angi will always be the same in this code. The reason being that you
in the first line ask what type of output unit is produced in the FORWARD
transformation direction and in the second line you ask for the unit of the
input in the INVERSE direction. The second function call is basically a
double-negation of the first. Let me explain. Say you have a simple transformation
such as a UTM-projection. In the forward direction your transformation
looks something like:

	latlong -> UTM

This takes angular input and outputs projected coordinates. In the INVERSE
transformation direction you have:

	UTM -> latlong

which takes projected coordinates as input and the output comes in angular units.

This can also be demonstrated with proj:

$ echo 12 56 | proj +proj=utm +zone=32
687071.44	6210141.33

$ echo 687071.44 6210141.33 | proj -I +proj=utm +zone=32
12dE	56dN

In your code this translates to ango==angi==0 since both call will check the units
of the UTM coordinates. 

The idea behind PJ_FWD/PJ_INV is that it is much simpler to do the inverse
transformation by switching the direction than to initialise a new PJ that goes
in the opposite direction. 

I hope this clears things up.

/Kristian


> On 16 Feb 2019, at 22:40, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> 
> 
>> On Feb 16, 2019, at 12:30 PM, Even Rouault <even.rouault at spatialys.com> wrote:
>> 
>>> Hum. Right now I’m creating and caching the result of
>>> proj_create_crs_to_crs(). If I get two PJ from proj_create() is there a way
>>> to create an “optimum pipeline” ala proj_create_crs_to_crs() using two PJ
>>> as the start/end points, instead of two strings?
>> 
>> 2 options:
>> - you export your PJ objects as wkt with proj_as_wkt() and feed that to 
>> proj_create_crs_to_crs()
>> - or you emulate most of what proj_create_crs_to_crs() does, which is 
>> essentially using proj_create_operations() which takes 2 PJ objects (of type 
>> CRS):
>> https://github.com/OSGeo/proj.4/blob/master/src/4D_api.cpp#L1010
>> 
>> 
>>>> Or, after the commit I just pushed, you can extract the source CRS from
>>>> the
>>>> pipeline with proj_get_source_crs() (but only if you've created the
>>>> pipeline with proj_create_crs_to_crs(). Not if you created it with
>>>> proj_create("+proj=pipeline ...") )
>>> 
>>> Any chance you could also add proj_get_dest_crs() to pick the CRS off the
>>> end of a pipeline? 
>> 
>> Ah, that was implied that my changeset also fixes the dest part of course.
> 
> Ah, I see! I cannot get it to work though, I am trying this:
> 
> https://gist.github.com/pramsey/22127622023e88cd415cd1524db0a285#file-proj-c-L19-L24
> 
> And getting:
> 
>  proj_get_source_crs: Object is not a BoundCRS or a CoordinateOperation 
>  proj_get_target_crs: Object is not a BoundCRS or a CoordinateOperation
> 
> What’s my mistake?
> 
> P
> 
>> 
>> Even
>> 
>> -- 
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From pramsey at cleverelephant.ca  Sun Feb 17 07:24:47 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sun, 17 Feb 2019 07:24:47 -0800
Subject: [PROJ] Performance of proj_create_crs_to_crs()
Message-ID: <CACowWR12k78R2YoS9U3UtwOXC=LyR92t4fFP=w8XuneP05_EBA@mail.gmail.com>

So, having gotten all the axis swapping tap dancing working, I went to
run some of my favourite transforms around BC, finishing up with one
of my favourites...

  st_transform('SRID=3005;POINT(1000000 0)',4267)

This takes a point from a NAD83 projected system (EPSG:3005) to a
NAD27 geodetic system (EPSG:4267).

Here's the crazy part: this transformation takes 400ms, and the time
is all spend in in proj, getting the PJ.

I ran 20-30 of them in a row and captured the workload in Instruments
in case these function calls ring any bells WRT overhead,

https://pasteboard.co/I1AXN5b.png

Fortunately for bulk conversion PostGIS already caches the projection
object, in fact most of my work this week was in renovating that part
of the code, but older versions of Proj are much much faster in
resolving projections from projection strings.

Thoughts?

From kreve at sdfe.dk  Sun Feb 17 07:50:00 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sun, 17 Feb 2019 15:50:00 +0000
Subject: [PROJ] Performance of proj_create_crs_to_crs()
In-Reply-To: <CACowWR12k78R2YoS9U3UtwOXC=LyR92t4fFP=w8XuneP05_EBA@mail.gmail.com>
References: <CACowWR12k78R2YoS9U3UtwOXC=LyR92t4fFP=w8XuneP05_EBA@mail.gmail.com>
Message-ID: <1CE086D3-E2B2-489F-8081-B60B308B8E70@sdfe.dk>

Paul,

Sure, initialising PJ objects is a lot more expensive in PROJ 6 than
it has been previously. All the new fancy features come at a price. It
is to be expected. Before it was quite straight forward what would happen
when creating a PJ object but now we accept CRS description in a number
of different formats and do a lookup in the CRS database to find all the
possible transformations between your two CRS’s. Doing all that costs
CPU cycles. I am sure there’s a potential for optimisation but that has
not been the primary concern for this release.

Personally I don’t worry too much about the time it takes to instantiate
PJ objects since usually you would only have to do it once. I can see how
PostGIS might be different in that regard so your strategy of caching the
objects seems sound.

/Kristian


> On 17 Feb 2019, at 16:24, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> So, having gotten all the axis swapping tap dancing working, I went to
> run some of my favourite transforms around BC, finishing up with one
> of my favourites...
> 
>  st_transform('SRID=3005;POINT(1000000 0)',4267)
> 
> This takes a point from a NAD83 projected system (EPSG:3005) to a
> NAD27 geodetic system (EPSG:4267).
> 
> Here's the crazy part: this transformation takes 400ms, and the time
> is all spend in in proj, getting the PJ.
> 
> I ran 20-30 of them in a row and captured the workload in Instruments
> in case these function calls ring any bells WRT overhead,
> 
> https://pasteboard.co/I1AXN5b.png
> 
> Fortunately for bulk conversion PostGIS already caches the projection
> object, in fact most of my work this week was in renovating that part
> of the code, but older versions of Proj are much much faster in
> resolving projections from projection strings.
> 
> Thoughts?
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From pramsey at cleverelephant.ca  Sun Feb 17 08:31:20 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sun, 17 Feb 2019 08:31:20 -0800
Subject: [PROJ] Performance of proj_create_crs_to_crs()
In-Reply-To: <1CE086D3-E2B2-489F-8081-B60B308B8E70@sdfe.dk>
References: <CACowWR12k78R2YoS9U3UtwOXC=LyR92t4fFP=w8XuneP05_EBA@mail.gmail.com>
 <1CE086D3-E2B2-489F-8081-B60B308B8E70@sdfe.dk>
Message-ID: <CACowWR2FSM7vZeLVQhgcLri_A38papARTc_JCpETt9zik_j3bQ@mail.gmail.com>

On Sun, Feb 17, 2019 at 7:50 AM Kristian Evers <kreve at sdfe.dk> wrote:
>
> Sure, initialising PJ objects is a lot more expensive in PROJ 6 than
> it has been previously. All the new fancy features come at a price. It
> is to be expected. Before it was quite straight forward what would happen
> when creating a PJ object but now we accept CRS description in a number
> of different formats and do a lookup in the CRS database to find all the
> possible transformations between your two CRS’s. Doing all that costs
> CPU cycles. I am sure there’s a potential for optimisation but that has
> not been the primary concern for this release.
>
> Personally I don’t worry too much about the time it takes to instantiate
> PJ objects since usually you would only have to do it once. I can see how
> PostGIS might be different in that regard so your strategy of caching the
> objects seems sound.

Well, as things stand now, any SQL statement that includes
ST_Transform() in PostGIS has gone from a 17ms minimum to a 350ms
minimum run time. That's basically unacceptable (not in a moral sense,
just in the sense that if PostGIS users will see things to 20x slower
when they "upgrade" proj, with no benefit as far as they can tell,
then they will not want to upgrade).

We cache projection objects per-call, so at least the penalty isn't
350ms * num_rows, but it's still a penalty per SQL call. This implies
a pretty big redesign of our caching system, which will be
unfortunately complex, as it's not just a matter of moving the cache
up one level to the backend lifespan. Our reprojection system is
supposed to use spatial_ref_sys table as the source of truth, so any
longer-lived caching system will also have to be very aware of changes
to spatial_ref_sys and poison when they happen. I'm not actually even
sure at the moment how to implement that, unlike system catalogue
tables, there's no good way to handle cache poisoning in user tables.
:/

I wonder if running proj_create_crs_to_crs() with simple proj strings
in the from/to slots reduces the likelihood that we get expensive
lookups of auxiliary information during PJ initialization? Would be a
shame to basically dumb down our use of proj and get none of the
benefits of all the work, but it would be better than accepting a
350ms query time floor for any use of ST_Transform.

P.

>
> /Kristian
>
>
> > On 17 Feb 2019, at 16:24, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> >
> > So, having gotten all the axis swapping tap dancing working, I went to
> > run some of my favourite transforms around BC, finishing up with one
> > of my favourites...
> >
> >  st_transform('SRID=3005;POINT(1000000 0)',4267)
> >
> > This takes a point from a NAD83 projected system (EPSG:3005) to a
> > NAD27 geodetic system (EPSG:4267).
> >
> > Here's the crazy part: this transformation takes 400ms, and the time
> > is all spend in in proj, getting the PJ.
> >
> > I ran 20-30 of them in a row and captured the workload in Instruments
> > in case these function calls ring any bells WRT overhead,
> >
> > https://pasteboard.co/I1AXN5b.png
> >
> > Fortunately for bulk conversion PostGIS already caches the projection
> > object, in fact most of my work this week was in renovating that part
> > of the code, but older versions of Proj are much much faster in
> > resolving projections from projection strings.
> >
> > Thoughts?
> > _______________________________________________
> > PROJ mailing list
> > PROJ at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/proj
>

From tobias.wendorff at tu-dortmund.de  Sun Feb 17 08:39:28 2019
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Sun, 17 Feb 2019 17:39:28 +0100
Subject: [PROJ] Performance of proj_create_crs_to_crs()
In-Reply-To: <CACowWR2FSM7vZeLVQhgcLri_A38papARTc_JCpETt9zik_j3bQ@mail.gmail.com>
References: <CACowWR12k78R2YoS9U3UtwOXC=LyR92t4fFP=w8XuneP05_EBA@mail.gmail.com>
 <1CE086D3-E2B2-489F-8081-B60B308B8E70@sdfe.dk>
 <CACowWR2FSM7vZeLVQhgcLri_A38papARTc_JCpETt9zik_j3bQ@mail.gmail.com>
Message-ID: <16cd856948bb0af65c80686067dbc1f8.squirrel@webmail.tu-dortmund.de>

Hey there,

I don't want to disparage your work right now, that's just my two
cents... from a normal GIS user's point of view, who did fine with
proj < 6 for years.

Am So, 17.02.2019, 17:31 schrieb Paul Ramsey:
> Well, as things stand now, any SQL statement that includes
> ST_Transform() in PostGIS has gone from a 17ms minimum to a 350ms
> minimum run time. That's basically unacceptable (not in a moral sense,
> just in the sense that if PostGIS users will see things to 20x slower
> when they "upgrade" proj, with no benefit as far as they can tell,
> then they will not want to upgrade).

Can't PostGIS be built against legacy and modern Proj? So the user
could choose between performance and precision. For most of the jobs,
the "performance mode" might be sufficient.

This could of course only be for the transitional period until PostGIS
(or proj) has been adapted accordingly.

Best regards,
Tobias



From even.rouault at spatialys.com  Sun Feb 17 10:46:18 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 17 Feb 2019 19:46:18 +0100
Subject: [PROJ] Performance of proj_create_crs_to_crs()
In-Reply-To: <F763DE62-E4B7-47E5-B2B8-7C9A1103A533@cleverelephant.ca>
References: <F763DE62-E4B7-47E5-B2B8-7C9A1103A533@cleverelephant.ca>
Message-ID: <14913654.6p253biRMg@even-i700>

Paul,

This is a very interesting use case, and one that has probably the worse 
runtime.

On my system, the following runs in 16.9 s, so 170 ms per instanciation

        for(int i = 0; i < 100; i++)
        {
            PJ *pj = proj_create_crs_to_crs(NULL, "EPSG:3005", "EPSG:4267", 
NULL);
            proj_destroy(pj);
        }

so not as dramatic as 400 ms.

The reason is that the NAD27 <-> NAD83 conversion has several dozains of 
potential paths (one per US state), and PROJ explore them. But, after 
analysis, the main reason for the slowness was that it also tried by default 
to find an intermediate CRS to explore better alternate transformation paths, 
and WGS84 was a very prolific one in that case. But actually going through 
WGS84 doesn't really give better pipelines at the end.

I've just issued PR https://github.com/OSGeo/proj.4/pull/1276 which disables 
by default research of intermediate CRS when there is at least a direct 
transformation. This should be good enough for most use cases. With this 
change, in your use case, the above loop runs in 1.56 s, so 16 ms per 
instanciation.

Even

> So, having gotten all the axis swapping tap dancing working, I went to
> run some of my favourite transforms around BC, finishing up with one
> of my favourites...
> 
>  st_transform('SRID=3005;POINT(1000000 0)',4267)
> 
> This takes a point from a NAD83 projected system (EPSG:3005) to a
> NAD27 geodetic system (EPSG:4267).
> 
> Here's the crazy part: this transformation takes 400ms, and the time
> is all spend in in proj, getting the PJ.
> 
> I ran 20-30 of them in a row and captured the workload in Instruments
> in case these function calls ring any bells WRT overhead, screenshot
> attached.
> 
> Fortunately for bulk conversion PostGIS already caches the projection
> object, in fact most of my work this week was in renovating that part
> of the code, but older versions of Proj are much much faster in
> resolving projections from projection strings.
> 
> Thoughts?
> 
> P.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Mon Feb 18 16:36:01 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 18 Feb 2019 16:36:01 -0800
Subject: [PROJ] Performance of proj_create_crs_to_crs()
In-Reply-To: <14913654.6p253biRMg@even-i700>
References: <F763DE62-E4B7-47E5-B2B8-7C9A1103A533@cleverelephant.ca>
 <14913654.6p253biRMg@even-i700>
Message-ID: <CACowWR3oe1J0eJ4exkesT+8uYCT_S5TtUY1aaeEtOtT23ryUiw@mail.gmail.com>

Even,
Thanks so much, I can confirm that your PR makes my test run
(literally) 100x faster. (Takes about 1.5ms now)
Wonderful, wonderful!
P.

On Sun, Feb 17, 2019 at 10:46 AM Even Rouault
<even.rouault at spatialys.com> wrote:
>
> Paul,
>
> This is a very interesting use case, and one that has probably the worse
> runtime.
>
> On my system, the following runs in 16.9 s, so 170 ms per instanciation
>
>         for(int i = 0; i < 100; i++)
>         {
>             PJ *pj = proj_create_crs_to_crs(NULL, "EPSG:3005", "EPSG:4267",
> NULL);
>             proj_destroy(pj);
>         }
>
> so not as dramatic as 400 ms.
>
> The reason is that the NAD27 <-> NAD83 conversion has several dozains of
> potential paths (one per US state), and PROJ explore them. But, after
> analysis, the main reason for the slowness was that it also tried by default
> to find an intermediate CRS to explore better alternate transformation paths,
> and WGS84 was a very prolific one in that case. But actually going through
> WGS84 doesn't really give better pipelines at the end.
>
> I've just issued PR https://github.com/OSGeo/proj.4/pull/1276 which disables
> by default research of intermediate CRS when there is at least a direct
> transformation. This should be good enough for most use cases. With this
> change, in your use case, the above loop runs in 1.56 s, so 16 ms per
> instanciation.
>
> Even
>
> > So, having gotten all the axis swapping tap dancing working, I went to
> > run some of my favourite transforms around BC, finishing up with one
> > of my favourites...
> >
> >  st_transform('SRID=3005;POINT(1000000 0)',4267)
> >
> > This takes a point from a NAD83 projected system (EPSG:3005) to a
> > NAD27 geodetic system (EPSG:4267).
> >
> > Here's the crazy part: this transformation takes 400ms, and the time
> > is all spend in in proj, getting the PJ.
> >
> > I ran 20-30 of them in a row and captured the workload in Instruments
> > in case these function calls ring any bells WRT overhead, screenshot
> > attached.
> >
> > Fortunately for bulk conversion PostGIS already caches the projection
> > object, in fact most of my work this week was in renovating that part
> > of the code, but older versions of Proj are much much faster in
> > resolving projections from projection strings.
> >
> > Thoughts?
> >
> > P.
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From gdt at lexort.com  Mon Feb 18 16:57:10 2019
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 18 Feb 2019 19:57:10 -0500
Subject: [PROJ] Performance of proj_create_crs_to_crs()
In-Reply-To: <14913654.6p253biRMg@even-i700> (Even Rouault's message of "Sun, 
 17 Feb 2019 19:46:18 +0100")
References: <F763DE62-E4B7-47E5-B2B8-7C9A1103A533@cleverelephant.ca>
 <14913654.6p253biRMg@even-i700>
Message-ID: <smuk1hwa93t.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

> The reason is that the NAD27 <-> NAD83 conversion has several dozains of 
> potential paths (one per US state), and PROJ explore them.

(understood about not using WGS84 as an intermediate being the real
issue)

I am curious about the "one per state" comment.  I realize NAD27 is
complicated, but I would think that if there are NAD27-NAD83 transforms
that are valid for a state (because of a local model, or maybe because
there is some NAD83 HARN that is specific for the state, but I'd think
that's a different CRS codepoint), that there would be some process to
only use them in their region of validity.  But the basic pipeline
request is just SRIDs and not region (which is as I expect it).

Can you elaborate?  Or is it just that there are multiple intermediate
datums, but really these all end being the same?

From even.rouault at spatialys.com  Tue Feb 19 02:35:13 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Feb 2019 11:35:13 +0100
Subject: [PROJ] Performance of proj_create_crs_to_crs()
In-Reply-To: <smuk1hwa93t.fsf@linuxpal.mit.edu>
References: <F763DE62-E4B7-47E5-B2B8-7C9A1103A533@cleverelephant.ca>
 <14913654.6p253biRMg@even-i700> <smuk1hwa93t.fsf@linuxpal.mit.edu>
Message-ID: <1564046.UUgyBhuyjR@even-i700>

On lundi 18 février 2019 19:57:10 CET Greg Troxel wrote:
> Even Rouault <even.rouault at spatialys.com> writes:
> > The reason is that the NAD27 <-> NAD83 conversion has several dozains of
> > potential paths (one per US state), and PROJ explore them.
> 
> (understood about not using WGS84 as an intermediate being the real
> issue)
> 
> I am curious about the "one per state" comment.  I realize NAD27 is
> complicated, but I would think that if there are NAD27-NAD83 transforms
> that are valid for a state (because of a local model, or maybe because
> there is some NAD83 HARN that is specific for the state, but I'd think
> that's a different CRS codepoint), that there would be some process to
> only use them in their region of validity.  But the basic pipeline
> request is just SRIDs and not region (which is as I expect it).
> 
> Can you elaborate?  Or is it just that there are multiple intermediate
> datums, but really these all end being the same?

OK, I was indeed a bit approximative in my answer.

There are "just" 6 transformations registered in the EPSG database between 
NAD27 and NAD83 using different grids (conus, ntv1, ntv2, etc...)

But before my change, the code that lists datum transformations also did a 
self-join to find all CRS X for which we have NAD27 --> X and X --> NAD83 
transformations. For X == WGS84, you have 85 NAD27 -> WGS84 transformations. A 
lot of them are actually registered in the EPSG database as concatenated 
transformations from NAD27 to NAD83 and NAD83 to WGS84 (the NAD83 to WGS84 
transformations are actually duplicate of the same operations doing NAD83 to 
NAD83(HARN) as you rightly mentionned). So in the end, you had (NAD27 -> NAD83 
-> X=WGS84) -> NAD83. The code eventually realized that there was a NAD83-
>WGS84->NAD83 useless roundtrip and simplified all the results, but there was 
of course significant processing time in doing all those lookups and 
filtering.

In the case of EPSG:3005 which is a projected CRS with "Canada - British 
Columbia" area of use, the research space of datum transformation can be 
restricted, but currently the spatial testing is done quite late in the 
process in code, and not at the SQL level.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pramsey at cleverelephant.ca  Tue Feb 19 14:44:25 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 19 Feb 2019 14:44:25 -0800
Subject: [PROJ] Vertical Transformations?
Message-ID: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>

Hey, all. Having gotten a working version of proj6 support running in
PostGIS, I'm trying to look for some of the goodies that users will
get when they upgrade. An obvious one is vertical transformations... I
tried this call:

postgis30=# select st_astext(st_transform('SRID=7406;POINT(-100 45
100)'::geometry, 5500));
                    st_astext
-------------------------------------------------
 POINT Z (-100.00039555444 44.9999807122224 100)
(1 row)

But as you can see, no vertical shift, even though 7406 is NGVD29 and
5500 is NAVD88. Is there another pairing I can use that should return
a vertical shift?

For reference the call is happening here:

https://github.com/pramsey/postgis/blob/svn-trunk-proj/liblwgeom/lwgeom_transform.c#L318

Maybe compound systems don't automatically do their thing when created
using proj_create_crs_to_crs() ?

Thanks!

P

From even.rouault at spatialys.com  Wed Feb 20 03:58:17 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Feb 2019 12:58:17 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
Message-ID: <2436189.aIIsn5sN8M@even-i700>

Paul,

yet another interesting use case that exhibited a few defects that should be 
adressed by https://github.com/OSGeo/proj.4/pull/1279

To get the best results for the NGVD29 height (ftUS) to NAVD88 height 
transformation, you need to install in $install_prefix/share/proj the VERTCON 
grids that are now part of the 
https://download.osgeo.org/proj/proj-datumgrid-north-america-1.2RC1.tar.gz 
package 
(see the README.md of https://github.com/OSGeo/proj-datumgrid/tree/master/
north-america)

With the vertconc.gtx grid available, you'll get

$ echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500 
44.99998071	-100.00039555 30.85853056

Without it, you'll get just us-ft to metre for the vertical part:
44.99998071	-100.00039555 30.48006096

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Wed Feb 20 05:12:34 2019
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 20 Feb 2019 08:12:34 -0500
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <2436189.aIIsn5sN8M@even-i700> (Even Rouault's message of "Wed,
 20 Feb 2019 12:58:17 +0100")
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700>
Message-ID: <smuy36a4n99.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

> With the vertconc.gtx grid available, you'll get
>
> $ echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500 
> 44.99998071	-100.00039555 30.85853056
>
> Without it, you'll get just us-ft to metre for the vertical part:
> 44.99998071	-100.00039555 30.48006096

With the grids being in separate distribution files, it seems easy to
end up with them not installed.

I wonder if transformations that need grid files for correct behavior
should fail rather than skip the transformation, at least by default.


From even.rouault at spatialys.com  Wed Feb 20 06:06:45 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Feb 2019 15:06:45 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <smuy36a4n99.fsf@linuxpal.mit.edu>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
Message-ID: <25426527.soIXym4pSU@even-i700>

On mercredi 20 février 2019 08:12:34 CET Greg Troxel wrote:
> Even Rouault <even.rouault at spatialys.com> writes:
> > With the vertconc.gtx grid available, you'll get
> > 
> > $ echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500
> > 44.99998071	-100.00039555 30.85853056
> > 
> > Without it, you'll get just us-ft to metre for the vertical part:
> > 44.99998071	-100.00039555 30.48006096
> 
> With the grids being in separate distribution files, it seems easy to
> end up with them not installed.

Yes, but as the number of grids is growing over time, putting them in a single 
package would be an annoyance for people who have local needs.

> 
> I wonder if transformations that need grid files for correct behavior
> should fail rather than skip the transformation, at least by default.

That's a complex topic. There is no "correct" behavior per-se. All 
transformations are approximations, so it is a matter of how accurate your 
needs are. In the above example if you're fine with ~ 1 metre vertical 
accuracy, you don't need the VERTCON grids.
The EPSG database can also reference some grids that can not necessarily 
easily be found, are not free, or have no known conversion to a PROJ 
recognized format.

Selection of a given transformation pipeline among all possible also involve a 
number of arbitrary decisions (some transformations might have intersecting 
area of validity). Playing with the new projinfo utility to list available 
coordinate operations can show the complexity of this...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew.bell.ia at gmail.com  Wed Feb 20 06:14:58 2019
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 20 Feb 2019 09:14:58 -0500
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <25426527.soIXym4pSU@even-i700>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
Message-ID: <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>

On Wed, Feb 20, 2019 at 9:06 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> On mercredi 20 février 2019 08:12:34 CET Greg Troxel wrote:
> > Even Rouault <even.rouault at spatialys.com> writes:
> > > With the vertconc.gtx grid available, you'll get
> > >
> > > $ echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500
> > > 44.99998071 -100.00039555 30.85853056
> > >
> > > Without it, you'll get just us-ft to metre for the vertical part:
> > > 44.99998071 -100.00039555 30.48006096
> >
> > With the grids being in separate distribution files, it seems easy to
> > end up with them not installed.
>
> Yes, but as the number of grids is growing over time, putting them in a
> single
> package would be an annoyance for people who have local needs.
>

People have so much bandwidth and space now...

Perhaps it would be good to have the default be everything and allow a
reduced set to be available for those who need that?

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190220/2b4dd222/attachment.html>

From kreve at sdfe.dk  Wed Feb 20 06:42:21 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 20 Feb 2019 14:42:21 +0000
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
 <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
Message-ID: <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>

I’d rather we have a opt-in solution than an all-or-nothing solution with regards to the grids.
There’s a few things we can do to make life a bit easier for everyone though:

1. Some transformations absolutely require a grid to work and should fail if the grid is not found.
    This behaviour is already in effect if grids are not prefixed by @’s in proj-strings. Determing which
    grids are optional can be difficult, but at least any grid that is used to change vertical datum from
    an ellipsoid to a local height system should fail (case in point, in Denmark that’s a ~40 m vertical
    offset)

2. For transformations with an optional grid usage, a warning should be issued stating
    “Grid xxx is missing, install proj-datumgrid-yyy package”. Grids not part of a proj-datumgrid
    package should be linked to if possible, otherwise give the user a friendly message saying
    that they are on their own.

3. When a transformation is performed without a grid the accuracy of the transformation should
    be lowered. Possibly, this is already be done (I can’t remember and am too lazy to check).

Not all of this is immediately possible. At the moment we lack a proper way of issuing warnings
to the user and it is probably not easy to come up with a list of transformations that require grids
versus ones where grids can be regarded as optional. This is out of scope for the upcoming 6.0
release but can be included in 6.1 if someone is willing to do the work.


I have a dream that one day we will replace the datumgrid packages with a download service
where as many grids as possible can be served from. PROJ should have the ability to either
download grids when the need arises (or at least make it easy for users to do so themselves).
At this point it is just a vision and I am not particularly keen on taking on this task myself but I
would be very happy to see this happen within the next couple of years.

/Kristian

On 20 Feb 2019, at 15:14, Andrew Bell <andrew.bell.ia at gmail.com<mailto:andrew.bell.ia at gmail.com>> wrote:



On Wed, Feb 20, 2019 at 9:06 AM Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> wrote:
On mercredi 20 février 2019 08:12:34 CET Greg Troxel wrote:
> Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> writes:
> > With the vertconc.gtx grid available, you'll get
> >
> > $ echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500
> > 44.99998071 -100.00039555 30.85853056
> >
> > Without it, you'll get just us-ft to metre for the vertical part:
> > 44.99998071 -100.00039555 30.48006096
>
> With the grids being in separate distribution files, it seems easy to
> end up with them not installed.

Yes, but as the number of grids is growing over time, putting them in a single
package would be an annoyance for people who have local needs.

People have so much bandwidth and space now...

Perhaps it would be good to have the default be everything and allow a reduced set to be available for those who need that?

--
Andrew Bell
andrew.bell.ia at gmail.com<mailto:andrew.bell.ia at gmail.com>
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190220/9bafa4be/attachment-0001.html>

From andrew.bell.ia at gmail.com  Wed Feb 20 06:50:28 2019
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 20 Feb 2019 09:50:28 -0500
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
 <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
 <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
Message-ID: <CACJ51z0cdEH1uGXp1+r0ZcXDqbzcqXKUNL8jugc1sMSBiowriA@mail.gmail.com>

On Wed, Feb 20, 2019 at 9:42 AM Kristian Evers <kreve at sdfe.dk> wrote:

> I’d rather we have a opt-in solution than an all-or-nothing solution with
> regards to the grids.
>

Why?

I don't know why end-users would want to deal with this.  I would think
they'd want it to work out of the box without regard to the transform they
happen to be handed.

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190220/3a5b978e/attachment.html>

From jmckenna at gatewaygeomatics.com  Wed Feb 20 07:09:08 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 20 Feb 2019 11:09:08 -0400
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <CACJ51z0cdEH1uGXp1+r0ZcXDqbzcqXKUNL8jugc1sMSBiowriA@mail.gmail.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
 <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
 <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
 <CACJ51z0cdEH1uGXp1+r0ZcXDqbzcqXKUNL8jugc1sMSBiowriA@mail.gmail.com>
Message-ID: <49fa97b0-490d-408c-f2de-fae6c8e1ed5c@gatewaygeomatics.com>

I fully agree with Andrew here, when thinking of end-users.  Most do not 
know what a grid is, and will unfortunately (as of now) use the 
incorrect coordinates and later face grief trying to understand why 
their data doesn't match in their application (I have that t-shirt).

For my upcoming MS4W version 4 release (already available in beta) it 
contains all possible PROJ grid files, which I believe end-users really 
really will appreciate.

-jeff



On 2019-02-20 10:50 AM, Andrew Bell wrote:
> 
> 
> On Wed, Feb 20, 2019 at 9:42 AM Kristian Evers <kreve at sdfe.dk 
> <mailto:kreve at sdfe.dk>> wrote:
> 
>     I’d rather we have a opt-in solution than an all-or-nothing solution
>     with regards to the grids.
> 
> 
> Why?
> 
> I don't know why end-users would want to deal with this.  I would think 
> they'd want it to work out of the box without regard to the transform 
> they happen to be handed.
> 
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com <mailto:andrew.bell.ia at gmail.com>
> 

From kreve at sdfe.dk  Wed Feb 20 07:19:20 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 20 Feb 2019 15:19:20 +0000
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <CACJ51z0cdEH1uGXp1+r0ZcXDqbzcqXKUNL8jugc1sMSBiowriA@mail.gmail.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
 <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
 <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
 <CACJ51z0cdEH1uGXp1+r0ZcXDqbzcqXKUNL8jugc1sMSBiowriA@mail.gmail.com>
Message-ID: <37AC1B9D-05CA-4F77-ADA2-1F2431D91454@sdfe.dk>

> 
> Why?
> 
> I don't know why end-users would want to deal with this.  I would think they'd want it to work out of the box without regard to the transform they happen to be handed.


The same question can be asked for any package that has optional parts.
Why don’t GDAL include ALL possible drivers as standard? Surely that would
result in a better user experience? The same can be said for PDAL, QGIS and
a bunch of other applications in our little geospatial software ecosphere.

The answer is of course that it gives you more options. Some may want the
extra weight and some won’t.

Most of the end-users you talk about will be using PROJ via another
application such as QGIS, GDAL or PDAL. If it is important for those
projects that transformations works out of the box they can require
proj-datumgrid, proj-datumgrid-europe, proj-datumgrid-north-america
and proj-datumgrid-oceania as hard dependencies and let package systems
deal with installing everything that is needed. And the guys who run
PROJ on a small GNSS receiver can choose to not do that if they want to.


/Kristian


From martin.desruisseaux at geomatys.com  Wed Feb 20 07:55:47 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Wed, 20 Feb 2019 16:55:47 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <49fa97b0-490d-408c-f2de-fae6c8e1ed5c@gatewaygeomatics.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
 <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
 <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
 <CACJ51z0cdEH1uGXp1+r0ZcXDqbzcqXKUNL8jugc1sMSBiowriA@mail.gmail.com>
 <49fa97b0-490d-408c-f2de-fae6c8e1ed5c@gatewaygeomatics.com>
Message-ID: <f775ad4f-ad20-d013-46a1-6c00a3abc133@geomatys.com>

Le 20/02/2019 à 16:09, Jeff McKenna a écrit :

> Most do not know what a grid is, and will unfortunately (as of now)
> use the incorrect coordinates and later face grief trying to
> understand why their data doesn't match in their application
>
Even if all grids were supplied, transformations would still have a
limited accuracy. Users should look at the accuracy information in order
to judge if the transformation is okay for their needs (this implies
that QGIS, PostGIS, etc. should make this information easily available).
Users do not need to know the details of datum shift operations (i.e.
whether a grid is used of not), but the accuracy information is
mandatory for anyone doing scientific or engineering work. One could
object that not every users are scientist or engineer, but if a user
does not care about accuracy then he should not have grief if the data
appear shifted.

I think we should not push too far the desire to provide a black box. I
agree about hiding implementation details, but not about hiding the fact
that every transformations have a limited accuracy - this problem has
its root in the physical world and is above any map projection library.
Luring the users with the false impression that coordinate operations
have an infinite accuracy is one cause of problems we have with
inter-operability between software using different referencing libraries.

    Martin



From jmckenna at gatewaygeomatics.com  Wed Feb 20 08:10:05 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 20 Feb 2019 12:10:05 -0400
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <f775ad4f-ad20-d013-46a1-6c00a3abc133@geomatys.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
 <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
 <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
 <CACJ51z0cdEH1uGXp1+r0ZcXDqbzcqXKUNL8jugc1sMSBiowriA@mail.gmail.com>
 <49fa97b0-490d-408c-f2de-fae6c8e1ed5c@gatewaygeomatics.com>
 <f775ad4f-ad20-d013-46a1-6c00a3abc133@geomatys.com>
Message-ID: <bf04d880-af9b-6473-3d52-da47e543fa41@gatewaygeomatics.com>

I'm actually quite fine with the current way of managing grid files. 
But I believe everyone speaking here is the 1% of the 1% who understands 
this (I even include me ha), so when Andrew mentioned end-users, he is 
correct that 99.9% will not realize this requirement, and as packagers 
we can help the end-users and include all grid files.  (maybe this 
discussion is not for the PROJ list, but on a separate 'packagers' list, 
but, it comes up often in the sharing community) -jeff



On 2019-02-20 11:55 AM, Martin Desruisseaux wrote:
> Le 20/02/2019 à 16:09, Jeff McKenna a écrit :
> 
>> Most do not know what a grid is, and will unfortunately (as of now)
>> use the incorrect coordinates and later face grief trying to
>> understand why their data doesn't match in their application
>>
> Even if all grids were supplied, transformations would still have a
> limited accuracy. Users should look at the accuracy information in order
> to judge if the transformation is okay for their needs (this implies
> that QGIS, PostGIS, etc. should make this information easily available).
> Users do not need to know the details of datum shift operations (i.e.
> whether a grid is used of not), but the accuracy information is
> mandatory for anyone doing scientific or engineering work. One could
> object that not every users are scientist or engineer, but if a user
> does not care about accuracy then he should not have grief if the data
> appear shifted.
> 
> I think we should not push too far the desire to provide a black box. I
> agree about hiding implementation details, but not about hiding the fact
> that every transformations have a limited accuracy - this problem has
> its root in the physical world and is above any map projection library.
> Luring the users with the false impression that coordinate operations
> have an infinite accuracy is one cause of problems we have with
> inter-operability between software using different referencing libraries.
> 
>      Martin
> 
> 

From even.rouault at spatialys.com  Wed Feb 20 08:15:40 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Feb 2019 17:15:40 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <CACJ51z116NYc3mOm6FWaN_ASF9W0Z7myDVowT7WEX2Yv=ePZXg@mail.gmail.com>
 <57C33EF1-C3CA-42EB-9C71-384F0E9387D3@sdfe.dk>
Message-ID: <1740222.I5hAi9Sh2D@even-i700>

> 1. Some transformations absolutely require a grid to work and should fail if
> the grid is not found.
> This behaviour is already in effect if grids are
> not prefixed by @’s in proj-strings. Determing which grids are optional can
> be difficult, but at least any grid that is used to change vertical datum
> from an ellipsoid to a local height system should fail (case in point, in
> Denmark that’s a ~40 m vertical offset)

The same could hold for the horizontal part where a missing grid might involve 
~ 100m horizontal error. The new coordinate operation "computation" module 
will return currently all potential coordinate operations, that is those using 
grids, Helmert transformation, constant offsets, etc. and also synthetic/dummy 
horizontal/vertical transformations. The sorting algorithm tries to sort first 
the more relevant ones given their accuracy and grid availability.

The concept of optional grid with @ is normally not emitted by the new 
computation module (except if you use the legacy nadgrids/geoidgrids terms by 
using a PROJ CRS string), as it considers coordinate operations using a grid 
or not as different coordinate operations

> 
> 2. For transformations with an optional grid usage, a warning should be
> issued stating
> “Grid xxx is missing, install proj-datumgrid-yyy package”.
> Grids not part of a proj-datumgrid package should be linked to if possible,
> otherwise give the user a friendly message saying that they are on their
> own.

The PROJ API has now a proj_coordoperation_is_instanciable(), 
proj_coordoperation_get_grid_used_count() and 
proj_coordoperation_get_grid_used() functions that can be used to know for a 
given coordinate operation which grids are needed and if they are currently 
available, and if not, where to download it when it is listed in the proj.db 
database as a known grid.

> 
> 3. When a transformation is performed without a grid the accuracy of the
> transformation should
> be lowered. Possibly, this is already be done (I
> can’t remember and am too lazy to check). 

Yes, coordinate operations with synthetized/dummy horizontal or vertical 
transformations will have a unknown accuracy.

e.g

$ src/projinfo -s EPSG:7406 -t EPSG:4979
Candidate operations found: 3
Note: using '--spatial-test intersects' would bring more results (64)
-------------------------------------
Operation n°1:

unknown id, NAD27 to WGS 84 (79) + Transformation from NGVD29 height (ftUS) to 
WGS 84 (approximate transformation, without ellipsoid height to vertical 
height correction), unknown accuracy, USA - CONUS including EEZ

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=hgridshift +grids=conus +step 
+proj=unitconvert +xy_in=rad +z_in=us-ft +xy_out=deg +z_out=m +step 
+proj=axisswap +order=2,1


> I have a dream that one day we will replace the datumgrid packages with a
> download service
> where as many grids as possible can be served from. PROJ
> should have the ability to either download grids when the need arises (or
> at least make it easy for users to do so themselves). At this point it is
> just a vision and I am not particularly keen on taking on this task myself
> but I would be very happy to see this happen within the next couple of
> years. 

That would add a libcurl dependency. And/or add a callback mechanism to do the 
download on behalf of PROJ. But as mentionned above, applications built on top 
of PROJ have now what is needed to implement that.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Wed Feb 20 08:52:17 2019
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 20 Feb 2019 11:52:17 -0500
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <25426527.soIXym4pSU@even-i700> (Even Rouault's message of "Wed, 
 20 Feb 2019 15:06:45 +0100")
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>
Message-ID: <smutvgy2yim.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

>> I wonder if transformations that need grid files for correct behavior
>> should fail rather than skip the transformation, at least by default.
>
> That's a complex topic. There is no "correct" behavior per-se. All 
> transformations are approximations, so it is a matter of how accurate your 
> needs are.

That's strictly true, but my understanding is there is a broad consensus
that VERTCON is the appropriate conversion for the general problem.

> In the above example if you're fine with ~ 1 metre vertical accuracy,
> you don't need the VERTCON grids.

Agreed that if you are ok with ~1m, you can assume they are the same and
not convert.  That more or less applies to all horizontal datum
conversions, with differing acceptable errors.  With NAD27, the errors
are so large that I suspect almost everyone would prefer an error to
assuming equivalence to ITRFxx, once they understood.

> The EPSG database can also reference some grids that can not necessarily 
> easily be found, are not free, or have no known conversion to a PROJ 
> recognized format.

So there is no real way for most people to convert to/from those datums.
That's too bad, and I agree those situations are intractable and proj
declining to convert them is not necessarily helpful.

> Selection of a given transformation pipeline among all possible also involve a 
> number of arbitrary decisions (some transformations might have intersecting 
> area of validity). Playing with the new projinfo utility to list available 
> coordinate operations can show the complexity of this...

I realize this is all infinitely complicated.

In this case, my concern is that there is a consensus method to go
between NGVD29 and NAVD88, that I think almost everyone would agree is
the standard approach.  People who install proj but not optional
gridfiles will silently get a much coarser approximation.

So I would like to see the transform from NGVD29/NAVD88 error out when
the VERTCON grid file can't be opened, perhaps with some configuration
to say that it should assume 0 instead.  I think it's better to fail
during what I see as a misconfiguration than to fall back to a cruder
approximation.

Perhaps the evnironment variable "PROJ_NGVD29_COARSE" should be needed,
and this hint can be returned as the error from attempting to use the
gridfile.

I have ensured that the pkgsrc package for proj installs all of the
ok-licensed grid files, so it doesn't matter much to me personally.  I
see there are a lot more now, but it still seems best to include them in
the package.

I am assuming almost all use of proj other than by the developers is via
packaging systems.

It would be interesting to hear what other packagers do in terms of
grids (included, separate packages, not packaged, ?).

From cjmce at lsu.edu  Wed Feb 20 09:12:43 2019
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Wed, 20 Feb 2019 17:12:43 +0000
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <smutvgy2yim.fsf@linuxpal.mit.edu>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700> <smuy36a4n99.fsf@linuxpal.mit.edu>
 <25426527.soIXym4pSU@even-i700>,<smutvgy2yim.fsf@linuxpal.mit.edu>
Message-ID: <BN6PR06MB29782023B7E72F950D7C99E4A87D0@BN6PR06MB2978.namprd06.prod.outlook.com>

VERTCON is a "snapshot" of the differences between NGVD29 and NAVD88 as they existed in 1992.  Any subsequent vertical crustal movement since 1992 is not modeled in the data grids.  The results for major portions of Louisiana (subsidence) and the Midwest (glacial rebound & uplift) will be in error by a number of feet.  The errors will increase as time passes since the data grids will not be updated.  A similar conundrum will occur to a lesser magnitude (at first) with the new vertical datum to be published in 2022.  Someday, they may publish a VTDP (Vertical Time Dependent Positioning) model that might be "reliable."  So far, it's just a dream.  Clicking that mouse button will give you an answer, but it may be far from reality!


Clifford J. Mugnier, c.p., c.m.s.

Chief of Geodesy

LSU Center for GeoInformatics (ERAD 266)

Dept. of Civil Engineering (P.F. Taylor 3531)

LOUISIANA STATE UNIVERSITY

Baton Rouge, LA  70803

Academic: (225) 578-8536

Research: (225) 578-4578

Cell:             (225) 328-8975

honorary lifetime member, lsps

fellow emeritus, asprs

member, apsg


________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Greg Troxel <gdt at lexort.com>
Sent: Wednesday, February 20, 2019 10:52 AM
To: Even Rouault
Cc: proj at lists.osgeo.org
Subject: Re: [PROJ] Vertical Transformations?

Even Rouault <even.rouault at spatialys.com> writes:

>> I wonder if transformations that need grid files for correct behavior
>> should fail rather than skip the transformation, at least by default.
>
> That's a complex topic. There is no "correct" behavior per-se. All
> transformations are approximations, so it is a matter of how accurate your
> needs are.

That's strictly true, but my understanding is there is a broad consensus
that VERTCON is the appropriate conversion for the general problem.

> In the above example if you're fine with ~ 1 metre vertical accuracy,
> you don't need the VERTCON grids.

Agreed that if you are ok with ~1m, you can assume they are the same and
not convert.  That more or less applies to all horizontal datum
conversions, with differing acceptable errors.  With NAD27, the errors
are so large that I suspect almost everyone would prefer an error to
assuming equivalence to ITRFxx, once they understood.

> The EPSG database can also reference some grids that can not necessarily
> easily be found, are not free, or have no known conversion to a PROJ
> recognized format.

So there is no real way for most people to convert to/from those datums.
That's too bad, and I agree those situations are intractable and proj
declining to convert them is not necessarily helpful.

> Selection of a given transformation pipeline among all possible also involve a
> number of arbitrary decisions (some transformations might have intersecting
> area of validity). Playing with the new projinfo utility to list available
> coordinate operations can show the complexity of this...

I realize this is all infinitely complicated.

In this case, my concern is that there is a consensus method to go
between NGVD29 and NAVD88, that I think almost everyone would agree is
the standard approach.  People who install proj but not optional
gridfiles will silently get a much coarser approximation.

So I would like to see the transform from NGVD29/NAVD88 error out when
the VERTCON grid file can't be opened, perhaps with some configuration
to say that it should assume 0 instead.  I think it's better to fail
during what I see as a misconfiguration than to fall back to a cruder
approximation.

Perhaps the evnironment variable "PROJ_NGVD29_COARSE" should be needed,
and this hint can be returned as the error from attempting to use the
gridfile.

I have ensured that the pkgsrc package for proj installs all of the
ok-licensed grid files, so it doesn't matter much to me personally.  I
see there are a lot more now, but it still seems best to include them in
the package.

I am assuming almost all use of proj other than by the developers is via
packaging systems.

It would be interesting to hear what other packagers do in terms of
grids (included, separate packages, not packaged, ?).
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190220/97347b1e/attachment.html>

From even.rouault at spatialys.com  Wed Feb 20 09:25:06 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Feb 2019 18:25:06 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <smutvgy2yim.fsf@linuxpal.mit.edu>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
Message-ID: <3514015.dBnMPgbA7g@even-i700>

> In this case, my concern is that there is a consensus method to go
> between NGVD29 and NAVD88, that I think almost everyone would agree is
> the standard approach. 

You assume that PROJ has dedicated behaviour and knowledge for NGVD29, NADVD88 
and the "consensus method" to convert between them. The reality is that, and 
it is a feature, it has absolutely no clue about them, being (hopefully) fully 
generic and "computes" potential transformations from the information in its 
database, and the grids available.


> People who install proj but not optional
> gridfiles will silently get a much coarser approximation.
> 
> So I would like to see the transform from NGVD29/NAVD88 error out when
> the VERTCON grid file can't be opened, perhaps with some configuration
> to say that it should assume 0 instead.  I think it's better to fail
> during what I see as a misconfiguration than to fall back to a cruder
> approximation.

Note that this is complicated by the fact that there is not a single NGVD29-
>NAVD88 "optimal" transformation, but 3 since there are 3 grids, depending on 
the area of use. When using proj_create_crs_to_crs() with no specified area of 
use, there's a dynamic selection mechanism of the actual transformation, 
depending on the coordinate of the point to transform and comparing it with 
the area of use of the available transformations. So, if you are working in an 
area where all required grids are present, it is potentially fine to proceeed, 
even if in some other area a required grid would be needed.

> 
> Perhaps the evnironment variable "PROJ_NGVD29_COARSE" should be needed,
> and this hint can be returned as the error from attempting to use the
> gridfile.

That shouldn't be done like that. A more generic mechanism should be found. 
Nyall Dawson contacted me about a similar need, related to the possibility of 
tagging some GDA94->GDA2020 grid-based transformation as required, and hard 
fail if not.
We could enhance the PROJ database with a table/column to flag required 
transformation, but it is probably not trivial (area of use comes into the 
equation), and that would put the PROJ project in a position of being an 
"authority" to decide which transformation are required or not.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Wed Feb 20 10:25:07 2019
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 20 Feb 2019 13:25:07 -0500
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <3514015.dBnMPgbA7g@even-i700> (Even Rouault's message of "Wed,
 20 Feb 2019 18:25:06 +0100")
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
 <3514015.dBnMPgbA7g@even-i700>
Message-ID: <smubm362u7w.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

> We could enhance the PROJ database with a table/column to flag required 
> transformation, but it is probably not trivial (area of use comes into the 
> equation), and that would put the PROJ project in a position of being an 
> "authority" to decide which transformation are required or not.

That sounds like a good path.

I don't see the authority problem; when implementing a transformation
that is defined to use a grid file, it's pretty clear that it can't be
done the same way without it.

If you mean the issue of a coarser transformation with assumed zero
shift, it seems that introducing that transformation as avlid is what's
problematic.

My real issue is people not getting the answer that is expected because
of not spending time on grid files that they might not even know exist.

Thanks for the discussion; we are either at (or beyond :-) the point
where further comments from me are helpful, and as always I learned
something.


Earlier I said that I included the grid files with proj, and I meant the
base proj-datumgrids, which I had thought were viewed as optional.  I
see now that they are declared as required, and that there are new
regional datumngrid files that have arisen in the last year (which have
the NGVD29 stuff).  I'm in the process of updating the pkgsrc package to
have the new regional files also.

From even.rouault at spatialys.com  Wed Feb 20 11:06:55 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Feb 2019 20:06:55 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <smubm362u7w.fsf@linuxpal.mit.edu>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
Message-ID: <5056788.8SvuF9IF2j@even-i700>

On mercredi 20 février 2019 13:25:07 CET Greg Troxel wrote:
> Even Rouault <even.rouault at spatialys.com> writes:
> > We could enhance the PROJ database with a table/column to flag required
> > transformation, but it is probably not trivial (area of use comes into the
> > equation), and that would put the PROJ project in a position of being an
> > "authority" to decide which transformation are required or not.
> 
> That sounds like a good path.
> 
> I don't see the authority problem; when implementing a transformation
> that is defined to use a grid file, it's pretty clear that it can't be
> done the same way without it.

For horizontal datum transformations, EPSG has generally both grid-based and 
Helmert-based transformations. Which are both declared as valid. Generally the 
grid-based one will have a better declared accuracy, so might be prefered. But 
that doesn't invalidate the Helmert-based one. Failing if the grid is not 
available would be a PROJ specific policy, and not always desirable.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From martin.desruisseaux at geomatys.com  Wed Feb 20 11:26:08 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Wed, 20 Feb 2019 20:26:08 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <5056788.8SvuF9IF2j@even-i700>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
 <5056788.8SvuF9IF2j@even-i700>
Message-ID: <af123423-f29e-e597-5480-5f7819335b9a@geomatys.com>

Le 20/02/2019 à 20:06, Even Rouault a écrit :
>
> For horizontal datum transformations, EPSG has generally both
> grid-based and Helmert-based transformations. Which are both declared
> as valid. Generally the grid-based one will have a better declared
> accuracy, so might be prefered. But that doesn't invalidate the
> Helmert-based one. Failing if the grid is not available would be a
> PROJ specific policy, and not always desirable.
>
I support this position. Both are valid transformations, differing in
their accuracy and some others considerations (performance, etc.). If
PROJ reports the accuracy of coordinate operations, users can decide if
it is good enough for their need. For example if a map is displayed on a
screen at a scale where each pixel is 1 km large, the accuracy provided
by grids is unperceptible and the Helmert-based alternative may have
performance advantages (in some cases) for this rendering purpose. An
application may want to switch between the two methods depending on the
scale of rendered map.

    Martin



From sebastic at xs4all.nl  Wed Feb 20 11:48:52 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 20 Feb 2019 20:48:52 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <smubm362u7w.fsf@linuxpal.mit.edu>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
Message-ID: <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl>

On 2/20/19 7:25 PM, Greg Troxel wrote:
> I'm in the process of updating the pkgsrc package to
> have the new regional files also.

Note that if your distribution requires fine-grained documentation of
license & copyright information for the files in the regional
proj-datumgrid archives, the maintenance burden is non-trivial.

This is why I will not be packaging the regional proj-datumgrid packages
for Debian. Users will need to download the tarballs and unpack their
content into /usr/share/proj themselves.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From gdt at lexort.com  Wed Feb 20 12:20:22 2019
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 20 Feb 2019 15:20:22 -0500
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Wed, 20 Feb 2019 20:48:52 +0100")
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
 <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl>
Message-ID: <smuwolu1abd.fsf@linuxpal.mit.edu>

Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 2/20/19 7:25 PM, Greg Troxel wrote:
>> I'm in the process of updating the pkgsrc package to
>> have the new regional files also.
>
> Note that if your distribution requires fine-grained documentation of
> license & copyright information for the files in the regional
> proj-datumgrid archives, the maintenance burden is non-trivial.

A good point.  I scanned them and they seem to be all Free licenses, and
we worry about the details far more when licenses are problematic.

If any of the licenses don't meet the DFSG (or the FSF Free definitinon),
I would be interested in knowing that, as that seems a much bigger deal
than simply not wanting to spend the time doing license bookeeping about
licenses that are ok.

> This is why I will not be packaging the regional proj-datumgrid packages
> for Debian. Users will need to download the tarballs and unpack their
> content into /usr/share/proj themselves.

Thanks for letting me know how you're handling it.

From sebastic at xs4all.nl  Wed Feb 20 12:26:50 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 20 Feb 2019 21:26:50 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <smuwolu1abd.fsf@linuxpal.mit.edu>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
 <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl>
 <smuwolu1abd.fsf@linuxpal.mit.edu>
Message-ID: <2677a257-2823-fcaf-6b52-92ad231fc5ff@xs4all.nl>

On 2/20/19 9:20 PM, Greg Troxel wrote:
> Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:
> 
>> On 2/20/19 7:25 PM, Greg Troxel wrote:
>>> I'm in the process of updating the pkgsrc package to
>>> have the new regional files also.
>>
>> Note that if your distribution requires fine-grained documentation of
>> license & copyright information for the files in the regional
>> proj-datumgrid archives, the maintenance burden is non-trivial.
> 
> A good point.  I scanned them and they seem to be all Free licenses, and
> we worry about the details far more when licenses are problematic.
> 
> If any of the licenses don't meet the DFSG (or the FSF Free definitinon),
> I would be interested in knowing that, as that seems a much bigger deal
> than simply not wanting to spend the time doing license bookeeping about
> licenses that are ok.

One of the requirements for grids to be eligible for inclusion in the
proj-datumgrid project is that their license is compatible with the OSD
(and hence DFSG), as documented in the README:

"
 All grids in the package are released under permissive licenses. New
 grids are accepted into the package as long as they are released under
 a license that is compatible with the Open Source Definition and the
 source of the grid is clearly stated and verifiable.
"

https://github.com/OSGeo/proj-datumgrid/#about-the-datum-grid-package

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From mwtoews at gmail.com  Wed Feb 20 12:28:15 2019
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 21 Feb 2019 09:28:15 +1300
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
 <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl>
Message-ID: <CAM2FmMrKyT1SkdJpETcmmLNZpLyX8ZO3X8trg6535P2=0yDrfQ@mail.gmail.com>

On Thu, 21 Feb 2019 at 05:15, Even Rouault <even.rouault at spatialys.com> wrote:
> > I have a dream that one day we will replace the datumgrid packages with a
> > download service
> > where as many grids as possible can be served from. PROJ
> > should have the ability to either download grids when the need arises (or
> > at least make it easy for users to do so themselves). At this point it is
> > just a vision and I am not particularly keen on taking on this task myself
> > but I would be very happy to see this happen within the next couple of
> > years.
>
> That would add a libcurl dependency. And/or add a callback mechanism to do the
> download on behalf of PROJ. But as mentionned above, applications built on top
> of PROJ have now what is needed to implement that.

I think this the idea behind
https://github.com/NaturalGIS/naturalgis_ntv2_transformations
which is a QGIS plugin that retrieves various gridshift files collected at
https://github.com/NaturalGIS/naturalgis_ntv2_transformations_grids_and_sample_data

On Thu, 21 Feb 2019 at 08:56, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> This is why I will not be packaging the regional proj-datumgrid packages
> for Debian. Users will need to download the tarballs and unpack their
> content into /usr/share/proj themselves.

More preferably in /usr/local/share/proj

From sebastic at xs4all.nl  Wed Feb 20 12:37:13 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 20 Feb 2019 21:37:13 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <CAM2FmMrKyT1SkdJpETcmmLNZpLyX8ZO3X8trg6535P2=0yDrfQ@mail.gmail.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
 <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl>
 <CAM2FmMrKyT1SkdJpETcmmLNZpLyX8ZO3X8trg6535P2=0yDrfQ@mail.gmail.com>
Message-ID: <2c03aee0-7ba0-ac28-d67e-3b6936826b35@xs4all.nl>

On 2/20/19 9:28 PM, Mike Taves wrote:
> On Thu, 21 Feb 2019 at 08:56, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>> This is why I will not be packaging the regional proj-datumgrid packages
>> for Debian. Users will need to download the tarballs and unpack their
>> content into /usr/share/proj themselves.
> 
> More preferably in /usr/local/share/proj

Then they'll need to add the grids from the proj-datumgrid archive
(proj-data package) there too (or union mount /usr/share/proj). As you
can only have one $PROJ_LIB.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kristianevers at gmail.com  Wed Feb 20 12:39:45 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 20 Feb 2019 21:39:45 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <2c03aee0-7ba0-ac28-d67e-3b6936826b35@xs4all.nl>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <25426527.soIXym4pSU@even-i700> <smutvgy2yim.fsf@linuxpal.mit.edu>
 <3514015.dBnMPgbA7g@even-i700> <smubm362u7w.fsf@linuxpal.mit.edu>
 <4c255131-0f68-2801-29c9-3a42a847efab@xs4all.nl>
 <CAM2FmMrKyT1SkdJpETcmmLNZpLyX8ZO3X8trg6535P2=0yDrfQ@mail.gmail.com>
 <2c03aee0-7ba0-ac28-d67e-3b6936826b35@xs4all.nl>
Message-ID: <9A7383CC-5B01-469D-8590-659CC4F9C578@gmail.com>

>  As you can only have one $PROJ_LIB.

From PROJ 6 and on you can have multiple directories in $PROJ_LIB, e.g.:

	export PROJ_LIB=/usr/local/share/proj:/home/kevers/proj-data

On Windows the separator is a semicolon ;

/Kristian

From marco.atzeri at gmail.com  Thu Feb 21 06:26:03 2019
From: marco.atzeri at gmail.com (Marco Atzeri)
Date: Thu, 21 Feb 2019 15:26:03 +0100
Subject: [PROJ] PROJ 6.0.0RC1
In-Reply-To: <4AF6D0B4-AD3F-4015-85D2-A45C3F68571D@sdfe.dk>
References: <4AF6D0B4-AD3F-4015-85D2-A45C3F68571D@sdfe.dk>
Message-ID: <e49bafd4-79a2-3873-3d88-be37184448c0@gmail.com>

Am 16.02.2019 um 08:48 schrieb Kristian Evers:
> All,
> 
> I have prepared a release candidate of PROJ 6.0.0. See the release notes below.
> 

Hi Kristian,

on cygwin 64 bit , I see no test failures, but I would like to know if
belows errors are expected

Reading file 
'/pub/devel/proj/prova/proj-6.0.0-0.1.x86_64/src/proj-6.0.0/test/gie/GDA.gie'
-------------------------------------------------------------------------------
total:  3 tests succeeded,  0 tests skipped,  0 tests failed.
-------------------------------------------------------------------------------
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -55: lat_0 = 0
proj_create: Error -9: unknown elliptical parameter name
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -13: major axis or radius = 0 or not given
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -13: major axis or radius = 0 or not given
proj_create: Error -13: major axis or radius = 0 or not given
proj_create: Error -47: illegal axis orientation combination
proj_create: unrecognized format / unknown name
-------------------------------------------------------------------------------
Reading file 
'/pub/devel/proj/prova/proj-6.0.0-0.1.x86_64/src/proj-6.0.0/test/gie/axisswap.gie'
-------------------------------------------------------------------------------
total: 27 tests succeeded,  0 tests skipped,  0 tests failed.

Regards
Marco

---
Diese E-Mail wurde von Avast Antivirus-Software auf Viren geprüft.
https://www.avast.com/antivirus


From kreve at sdfe.dk  Thu Feb 21 07:55:02 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 21 Feb 2019 15:55:02 +0000
Subject: [PROJ] PROJ 6.0.0RC1
In-Reply-To: <e49bafd4-79a2-3873-3d88-be37184448c0@gmail.com>
References: <4AF6D0B4-AD3F-4015-85D2-A45C3F68571D@sdfe.dk>
 <e49bafd4-79a2-3873-3d88-be37184448c0@gmail.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF06B969@S000014.PROD.SITAD.DK>

Hi Marco,

Yes, while it looks suspicious it is expected. Those errors are a issued when we are testing if PROJ issues the expected errors when initializing erroneous transformations.

We should probably turn the logging to STDOUT off in in this instance. If I can find the time for it tomorrow morning I will make that change in time for PROJ 6RC2 (which I plan on sending out tomorrow afternoon CET).

/Kristian

-----Oprindelig meddelelse-----
Fra: PROJ <proj-bounces at lists.osgeo.org> På vegne af Marco Atzeri
Sendt: 21. februar 2019 15:26
Til: proj at lists.osgeo.org
Emne: Re: [PROJ] PROJ 6.0.0RC1

Am 16.02.2019 um 08:48 schrieb Kristian Evers:
> All,
> 
> I have prepared a release candidate of PROJ 6.0.0. See the release notes below.
> 

Hi Kristian,

on cygwin 64 bit , I see no test failures, but I would like to know if
belows errors are expected

Reading file 
'/pub/devel/proj/prova/proj-6.0.0-0.1.x86_64/src/proj-6.0.0/test/gie/GDA.gie'
-------------------------------------------------------------------------------
total:  3 tests succeeded,  0 tests skipped,  0 tests failed.
-------------------------------------------------------------------------------
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -55: lat_0 = 0
proj_create: Error -9: unknown elliptical parameter name
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -13: major axis or radius = 0 or not given
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -47: illegal axis orientation combination
proj_create: Error -13: major axis or radius = 0 or not given
proj_create: Error -13: major axis or radius = 0 or not given
proj_create: Error -47: illegal axis orientation combination
proj_create: unrecognized format / unknown name
-------------------------------------------------------------------------------
Reading file 
'/pub/devel/proj/prova/proj-6.0.0-0.1.x86_64/src/proj-6.0.0/test/gie/axisswap.gie'
-------------------------------------------------------------------------------
total: 27 tests succeeded,  0 tests skipped,  0 tests failed.

Regards
Marco

---
Diese E-Mail wurde von Avast Antivirus-Software auf Viren geprüft.
https://www.avast.com/antivirus

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From nicolas.simon at spw.wallonie.be  Thu Feb 21 07:57:00 2019
From: nicolas.simon at spw.wallonie.be (SIMON Nicolas)
Date: Thu, 21 Feb 2019 15:57:00 +0000
Subject: [PROJ] request for integration of optimized transformatiegrid
 BD72	to ETRS89
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF056E84@S000014.PROD.SITAD.DK>
References: <AM6PR06MB5319A79CB3840CE3185D56459A670@AM6PR06MB5319.eurprd06.prod.outlook.com>
 <2E885BB293AF0448A0181138489E9A0EAF056E84@S000014.PROD.SITAD.DK>
Message-ID: <F02D54DF5576D84C86C23A39A792DC7EC4DFB39C@SE0005V.wallonie.intra>

Hi,
               I've just created a pull request to integrate this change.
https://github.com/OSGeo/proj-datumgrid/pull/46

Tell me if it's done right, this is my first use of git.

Thanks

Nicolas Simon

De : Kristian Evers [mailto:kreve at sdfe.dk]
Envoyé : jeudi 14 février 2019 16:01
À : Praet Karin; proj at lists.osgeo.org
Objet : SV: [PROJ] request for integration of optimized transformatiegrid BD72 to ETRS89

Hello Karin,

As long as your grids are released on a suitable open source compatible license, yes it is possible to add them to PROJ. If you are quick (as in today) and open a pull request in the proj-datumgrid repository [0] it can become part of the coming version 6 of PROJ. I am not sure if transformations to and from EPSG:31370 will be using the grids by default without also modifying the source code of PROJ. Even Rouault should be able to clear that up though.

/Kristian

[0] https://github.com/OSGeo/proj-datumgrid

Fra: PROJ <proj-bounces at lists.osgeo.org> På vegne af Praet Karin
Sendt: 14. februar 2019 15:53
Til: proj at lists.osgeo.org
Emne: [PROJ] request for integration of optimized transformatiegrid BD72 to ETRS89

Hi,

The Belgian National Institute of Geography (NGI) has published a more accurate transformationgrid to convert between Belgian Datum 1972 tot ETRS 89.
As Belgian Lambert 1972 (EPSG:31370), based on BD72,  is widely used in Belgium - is it possible to integrate this transformationgrid as the default transformation for this datum?

Documentation in Dutch:  http://www.ngi.be/NL/NL2-1-7.shtm
Documentation in French: http://www.ngi.be/FR/FR2-1-7.shtm

The grid is called: bd72lb72_etrs89lb08.gsb

Regards

Karin Praet
Provincie Limburg, Hasselt, Belgium

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190221/245e29a6/attachment.html>

From pramsey at cleverelephant.ca  Fri Feb 22 11:24:26 2019
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 22 Feb 2019 11:24:26 -0800
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <2436189.aIIsn5sN8M@even-i700>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700>
Message-ID: <CACowWR0TvcLQ54qM=8-22hTD=KL8aPY4j0Lbhi8oMppb12AprA@mail.gmail.com>

On Wed, Feb 20, 2019 at 3:58 AM Even Rouault <even.rouault at spatialys.com> wrote:

> With the vertconc.gtx grid available, you'll get
>
> $ echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500
> 44.99998071     -100.00039555 30.85853056
>
> Without it, you'll get just us-ft to metre for the vertical part:
> 44.99998071     -100.00039555 30.48006096

So, this is interesting... when running at the command-line, I get
your "no grid" result...

echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500
44.99998071 -100.00039555 30.48006096

When running the same thing in PostGIS, I get an error code back...

select st_astext(st_transform('SRID=7406;POINT(-80 40 100)'::geometry, 5500));
NOTICE:  PostGIS was unable to transform the point because either no
grid shift files were found, or the point does not lie within the
range for which the grid shift is defined. Refer to the ST_Transform()
section of the PostGIS manual for details on how to configure PostGIS
to alter this behaviour.
ERROR:  transform: couldn't project point (-80 40 100): failed to load
datum shift file (-38)

Specifically, error -38.
I guess now we get into angels-on-head-of-pin territory, but are there
proj error conditions that are best ignored? Raise a NOTICE? Something
else?

Also, I just installed version 1.8 of the proj grids project, is it
expected that I still not have the vertical grids in place for
NGVD29/NAVD88 conversion?

Thanks!
P

From even.rouault at spatialys.com  Fri Feb 22 11:43:08 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Feb 2019 20:43:08 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <CACowWR0TvcLQ54qM=8-22hTD=KL8aPY4j0Lbhi8oMppb12AprA@mail.gmail.com>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700>
 <CACowWR0TvcLQ54qM=8-22hTD=KL8aPY4j0Lbhi8oMppb12AprA@mail.gmail.com>
Message-ID: <7497781.CtgW8sDL8d@even-i700>

Hi Paul,

> So, this is interesting... when running at the command-line, I get
> your "no grid" result...
> 
> echo "45 -100 100" | cs2cs -f "%.8f" EPSG:7406 EPSG:5500
> 44.99998071 -100.00039555 30.48006096
> 
> When running the same thing in PostGIS, I get an error code back...
> 
> select st_astext(st_transform('SRID=7406;POINT(-80 40 100)'::geometry,
> 5500)); NOTICE:  PostGIS was unable to transform the point because either
> no grid shift files were found, or the point does not lie within the
> range for which the grid shift is defined. Refer to the ST_Transform()
> section of the PostGIS manual for details on how to configure PostGIS
> to alter this behaviour.
> ERROR:  transform: couldn't project point (-80 40 100): failed to load
> datum shift file (-38)
> 
> Specifically, error -38.
> I guess now we get into angels-on-head-of-pin territory,
> but are there
> proj error conditions that are best ignored? Raise a NOTICE? Something
> else?

If that works with cs2cs, there is no reason that it shouldn't work in PostGIS

I assume the grid error here is due to the horizontal part being not fed with 
appropriate coordinates: isn't there an issue with axis order here ? (although 
I couldn't reproduce error -38 when using wrong axis order). You should pass 
lat,long,Z to proj_trans(). Perhaps you didn't take into account the case of a 
CompoundCRS like EPSG:7406 ? A CompoundCRS doesn't have a coordinate system 
per se, so you must first query the horizontal component by using 
horiz_crs = proj_crs_get_sub_crs(ctx, compound_crs, 0), and then getting its 
coordinate system.

> 
> Also, I just installed version 1.8 of the proj grids project, is it
> expected that I still not have the vertical grids in place for
> NGVD29/NAVD88 conversion?

Yes, I explicitly mentionned
https://download.osgeo.org/proj/proj-datumgrid-north-america-1.2RC1.tar.gz 

proj-datumgrid-1.8 is just the general purposes / historical grids.
New grids get added in "regional" packages -europe, -north-america, -oceania, 
-world

Apparently, this split of grids among several packages confuse people. 
Kristian, shouldn't we perhaps provide a proj-datumgrid-all package ? Although 
people would probably confuse it with proj-datumgrid...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Fri Feb 22 12:24:29 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 22 Feb 2019 21:24:29 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <7497781.CtgW8sDL8d@even-i700>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700>
 <CACowWR0TvcLQ54qM=8-22hTD=KL8aPY4j0Lbhi8oMppb12AprA@mail.gmail.com>
 <7497781.CtgW8sDL8d@even-i700>
Message-ID: <88d200f5-656c-3e3c-5b57-28c98b4b4a19@xs4all.nl>

On 2/22/19 8:43 PM, Even Rouault wrote:
> Apparently, this split of grids among several packages confuse people. 
> Kristian, shouldn't we perhaps provide a proj-datumgrid-all package ?

If you want everything, just get the tarball for the repo:

 https://github.com/OSGeo/proj-datumgrid/archive/master.tar.gz

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From dragons8mycat at live.co.uk  Fri Feb 22 12:40:12 2019
From: dragons8mycat at live.co.uk (Nicholas Duggan)
Date: Fri, 22 Feb 2019 20:40:12 +0000
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <88d200f5-656c-3e3c-5b57-28c98b4b4a19@xs4all.nl>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <2436189.aIIsn5sN8M@even-i700>
 <CACowWR0TvcLQ54qM=8-22hTD=KL8aPY4j0Lbhi8oMppb12AprA@mail.gmail.com>
 <7497781.CtgW8sDL8d@even-i700>,
 <88d200f5-656c-3e3c-5b57-28c98b4b4a19@xs4all.nl>
Message-ID: <AM6PR0402MB3350FFC61C341A7F77F34E52C67F0@AM6PR0402MB3350.eurprd04.prod.outlook.com>

Hey,
I don't normally get involved but which version of PostGIS are you running? I'm currently waiting on version 11 to be compatible with my web system due to Geometry issues, more specifically 3D geometry issues which will be fixed in 11.
Nick D

Get Outlook for Android<https://aka.ms/ghei36>

________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Sebastiaan Couwenberg <sebastic at xs4all.nl>
Sent: Friday, February 22, 2019 8:24:29 PM
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Vertical Transformations?

On 2/22/19 8:43 PM, Even Rouault wrote:
> Apparently, this split of grids among several packages confuse people.
> Kristian, shouldn't we perhaps provide a proj-datumgrid-all package ?

If you want everything, just get the tarball for the repo:

 https://github.com/OSGeo/proj-datumgrid/archive/master.tar.gz

Kind Regards,

Bas

--
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190222/3a6716bd/attachment.html>

From even.rouault at spatialys.com  Fri Feb 22 12:50:16 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Feb 2019 21:50:16 +0100
Subject: [PROJ] Vertical Transformations?
In-Reply-To: <88d200f5-656c-3e3c-5b57-28c98b4b4a19@xs4all.nl>
References: <CACowWR272FHDpnomfROQt0GfF0-+RQP9MQqgFzdQF4sDaL=Aeg@mail.gmail.com>
 <7497781.CtgW8sDL8d@even-i700>
 <88d200f5-656c-3e3c-5b57-28c98b4b4a19@xs4all.nl>
Message-ID: <4313650.UA1Djhu5t6@even-i700>

On vendredi 22 février 2019 21:24:29 CET Sebastiaan Couwenberg wrote:
> On 2/22/19 8:43 PM, Even Rouault wrote:
> > Apparently, this split of grids among several packages confuse people.
> > Kristian, shouldn't we perhaps provide a proj-datumgrid-all package ?
> 
> If you want everything, just get the tarball for the repo:
> 
>  https://github.com/OSGeo/proj-datumgrid/archive/master.tar.gz

Just a precision: the structure with subdirectories of the proj-datumgrid git 
repo is not the one expected by PROJ to find grids.
All grids must be put in {installation_prefix}/share/proj without any 
subdirectory

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kristianevers at gmail.com  Sat Feb 23 02:28:18 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Sat, 23 Feb 2019 11:28:18 +0100
Subject: [PROJ] PROJ 6RC2
Message-ID: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>

All,

Issues were found in PROJ 6.0.0RC1 and proj-datumgrid-europe 1.2RC1
so here are updated release candidates for those two packages:

https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz> (https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5 <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5>)
https://download.osgeo.org/proj/proj-6.0.0RC2.zip <https://download.osgeo.org/proj/proj-6.0.0RC2.zip> (https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5 <https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5>)

https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.tar.gz <https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.tar.gz>
https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.zip <https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.zip>

I would appreciate a report back from the package maintainers if they are
happy to see the release candidates promoted to final releases. Thanks.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190223/386961ae/attachment.html>

From sebastic at xs4all.nl  Sat Feb 23 04:14:55 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Sat, 23 Feb 2019 13:14:55 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
Message-ID: <0ebac218-f5c6-eea0-d36b-5cd2475b5285@xs4all.nl>

On 2/23/19 11:28 AM, Kristian Evers wrote:
> I would appreciate a report back from the package maintainers if they are
> happy to see the release candidates promoted to final releases. Thanks.

Other than a minor typo in the projinfo manpage, RC2 looks good.

The proj package will remain in the Debian experimental repository for a
while, because of the freeze in preparation for the buster stable
release. So no new transitions will happen until after the release.

Several reverse dependencies will break due to the removal of
projects.h, that's why the header was manually installed in libproj-dev
package until now.

I haven't rebuilt any reverse dependencies with PROJ 6.0.0 yet, as we
can't transition to it in the near future anyway. But once that is done
we should have an overview which package need to be patched to use
proj_api.h or proj.h. Several of these packages aren't actively
developed any more, so those patches will need to be contributed by
someone experienced with the new APIs.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kristianevers at gmail.com  Sat Feb 23 05:25:22 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Sat, 23 Feb 2019 14:25:22 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <6259418.k8Y7b4spiP@even-i700>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
 <6259418.k8Y7b4spiP@even-i700>
Message-ID: <297AAB3C-D447-42C0-BCC6-A5F4BA43036B@gmail.com>

> 6.0.0RC2 used with success by GDAL Travis-CI builds

Great!

> Why just this package ? As far as I can see, there has been only README 
> changes in it since RC1. But this is also the case for the base, north-
> america, world and oceania packages.

I figured I would only update the packages that were already out as RC.
I missed that the North America package had it’s readme updated. I’ll upload an
RC2 of that as well. I don’t think that an update README warrants new version
of the main and oceania grid packages. I think that new grids should be added
before a new version is released. Do you agree with that?

> By the way, there is no release at all for proj-datumgrid-world

Yeah, I forgot about that one… I’ll make a package for that too.

/Kristian

From even.rouault at spatialys.com  Sat Feb 23 04:57:32 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 23 Feb 2019 13:57:32 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
Message-ID: <6259418.k8Y7b4spiP@even-i700>

On samedi 23 février 2019 11:28:18 CET Kristian Evers wrote:
> All,
> 
> Issues were found in PROJ 6.0.0RC1 and proj-datumgrid-europe 1.2RC1
> so here are updated release candidates for those two packages:
> 
> https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz
> <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz>
> (https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5
> <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5>)
> https://download.osgeo.org/proj/proj-6.0.0RC2.zip
> <https://download.osgeo.org/proj/proj-6.0.0RC2.zip>
> (https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5
> <https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5>)

6.0.0RC2 used with success by GDAL Travis-CI builds

> 
> https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.tar.gz
> <https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.tar.gz>
> https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.zip
> <https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.zip>

Why just this package ? As far as I can see, there has been only README 
changes in it since RC1. But this is also the case for the base, north-
america, world and oceania packages.

By the way, there is no release at all for proj-datumgrid-world

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sat Feb 23 05:39:06 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 23 Feb 2019 14:39:06 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <297AAB3C-D447-42C0-BCC6-A5F4BA43036B@gmail.com>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
 <6259418.k8Y7b4spiP@even-i700>
 <297AAB3C-D447-42C0-BCC6-A5F4BA43036B@gmail.com>
Message-ID: <2027753.aurGRsRtUU@even-i700>

> > Why just this package ? As far as I can see, there has been only README
> > changes in it since RC1. But this is also the case for the base, north-
> > america, world and oceania packages.
> 
> I figured I would only update the packages that were already out as RC.
> I missed that the North America package had it’s readme updated. I’ll upload
> an RC2 of that as well. I don’t think that an update README warrants new
> version of the main and oceania grid packages. I think that new grids
> should be added before a new version is released. Do you agree with that?

I'm fine with that.

Also as a remainder of prior discussions, proj.db points to the packages with 
a generic download URL, so symlinks to the actual packages should be created.

https://download.osgeo.org/proj/proj-datumgrid-latest.zip
https://download.osgeo.org/proj/proj-datumgrid-north-america-latest.zip
https://download.osgeo.org/proj/proj-datumgrid-europe-latest.zip
https://download.osgeo.org/proj/proj-datumgrid-oceania-latest.zip
https://download.osgeo.org/proj/proj-datumgrid-world-latest.zip

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kristianevers at gmail.com  Sat Feb 23 05:41:59 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Sat, 23 Feb 2019 14:41:59 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <2027753.aurGRsRtUU@even-i700>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
 <6259418.k8Y7b4spiP@even-i700>
 <297AAB3C-D447-42C0-BCC6-A5F4BA43036B@gmail.com>
 <2027753.aurGRsRtUU@even-i700>
Message-ID: <27A68496-B6D6-4CDB-8975-AAB074D9CC1A@gmail.com>


> On 23 Feb 2019, at 14:39, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>>> Why just this package ? As far as I can see, there has been only README
>>> changes in it since RC1. But this is also the case for the base, north-
>>> america, world and oceania packages.
>> 
>> I figured I would only update the packages that were already out as RC.
>> I missed that the North America package had it’s readme updated. I’ll upload
>> an RC2 of that as well. I don’t think that an update README warrants new
>> version of the main and oceania grid packages. I think that new grids
>> should be added before a new version is released. Do you agree with that?
> 
> I'm fine with that.
> 

Good. 

> Also as a remainder of prior discussions, proj.db points to the packages with 
> a generic download URL, so symlinks to the actual packages should be created.
> 

Yes, that is a task listed in the release howto. I will make the symlinks when the
final packages are uploaded. Thanks for the reminder.

/Kristian


> https://download.osgeo.org/proj/proj-datumgrid-latest.zip
> https://download.osgeo.org/proj/proj-datumgrid-north-america-latest.zip
> https://download.osgeo.org/proj/proj-datumgrid-europe-latest.zip
> https://download.osgeo.org/proj/proj-datumgrid-oceania-latest.zip
> https://download.osgeo.org/proj/proj-datumgrid-world-latest.zip
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From even.rouault at spatialys.com  Sat Feb 23 05:50:50 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 23 Feb 2019 14:50:50 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <0ebac218-f5c6-eea0-d36b-5cd2475b5285@xs4all.nl>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
 <0ebac218-f5c6-eea0-d36b-5cd2475b5285@xs4all.nl>
Message-ID: <10076655.o5iEzkGkfJ@even-i700>

> I haven't rebuilt any reverse dependencies with PROJ 6.0.0 yet, as we
> can't transition to it in the near future anyway. But once that is done
> we should have an overview which package need to be patched to use
> proj_api.h or proj.h. Several of these packages aren't actively
> developed any more, so those patches will need to be contributed by
> someone experienced with the new APIs.

For the parts I maintain (with a lot of double quotes around """"maintain"""" 
for some of them),

- GDAL master / 2.5.0dev, to be released around May this year will require 
PROJ 6 (GDAL 2.4 should probably already work fine with PROJ 6, since it uses 
proj.h, but I didn't test)

- libgeotiff master / 1.5.0dev, to be probably released around the same time 
of GDAL 2.5, will require PROJ 6. Current versions should likely work fine 
since using proj_api.h if ACCEPT_USE_OF_DEPRECATED_PROJ_API_H is defined.

- the next version of shapelib will likely see its PROJ dependency removed 
(only affects the contrib area) since I don't care about it:
https://lists.osgeo.org/pipermail/shapelib/2019-February/000645.html

- the next version of OGDI will likely see its PROJ dependency removed for the 
same reason (it still uses project.h)
https://groups.yahoo.com/neo/groups/ogdidev/conversations/messages/314

- regarding MapServer, no immediate plan for action as far as I'm concerned. 
It uses proj_api.h so ACCEPT_USE_OF_DEPRECATED_PROJ_API_H can be used for now. 
Perhaps upgrading to proj.h would be a good topic for the OSGeo code sprint 
for those who can attend.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kristianevers at gmail.com  Sat Feb 23 06:33:05 2019
From: kristianevers at gmail.com (Kristian Evers)
Date: Sat, 23 Feb 2019 15:33:05 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
Message-ID: <D1FD62C4-655B-4A6D-8BBE-9695F1131A63@gmail.com>

In the previous mail I should have included RC2 of the North America
datumgrid package as well as RC1 of the World datumgrid package.
The world package is new for this release cycle and includes at this
time a grid of the EGM2008 global geoid model.

Downloads here:

https://download.osgeo.org/proj/proj-datumgrid-north-america-1.2RC2.tar.gz <https://download.osgeo.org/proj/proj-datumgrid-north-america-1.2RC2.tar.gz>
https://download.osgeo.org/proj/proj-datumgrid-north-america-1.2RC2.zip <https://download.osgeo.org/proj/proj-datumgrid-north-america-1.2RC2.zip>

https://download.osgeo.org/proj/proj-datumgrid-world-1.0RC1.tar.gz <https://download.osgeo.org/proj/proj-datumgrid-world-1.0RC1.tar.gz>
https://download.osgeo.org/proj/proj-datumgrid-world-1.0RC1.zip <https://download.osgeo.org/proj/proj-datumgrid-world-1.0RC1.zip>

/Kristian

> On 23 Feb 2019, at 11:28, Kristian Evers <kristianevers at gmail.com> wrote:
> 
> All,
> 
> Issues were found in PROJ 6.0.0RC1 and proj-datumgrid-europe 1.2RC1
> so here are updated release candidates for those two packages:
> 
> https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz> (https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5 <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5>)
> https://download.osgeo.org/proj/proj-6.0.0RC2.zip <https://download.osgeo.org/proj/proj-6.0.0RC2.zip> (https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5 <https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5>)
> 
> https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.tar.gz <https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.tar.gz>
> https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.zip <https://download.osgeo.org/proj/proj-datumgrid-europe-1.2RC2.zip>
> 
> I would appreciate a report back from the package maintainers if they are
> happy to see the release candidates promoted to final releases. Thanks.
> 
> /Kristian
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190223/dd6ece3b/attachment.html>

From jmckenna at gatewaygeomatics.com  Sat Feb 23 09:59:50 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sat, 23 Feb 2019 13:59:50 -0400
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <10076655.o5iEzkGkfJ@even-i700>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
 <0ebac218-f5c6-eea0-d36b-5cd2475b5285@xs4all.nl>
 <10076655.o5iEzkGkfJ@even-i700>
Message-ID: <df1e721f-1dfb-4707-4058-551d5a5f37dd@gatewaygeomatics.com>

On 2019-02-23 9:50 AM, Even Rouault wrote:
>> I haven't rebuilt any reverse dependencies with PROJ 6.0.0 yet, as we
>> can't transition to it in the near future anyway. But once that is done
>> we should have an overview which package need to be patched to use
>> proj_api.h or proj.h. Several of these packages aren't actively
>> developed any more, so those patches will need to be contributed by
>> someone experienced with the new APIs.
> 
> For the parts I maintain (with a lot of double quotes around """"maintain""""
> for some of them),
> 
> - GDAL master / 2.5.0dev, to be released around May this year will require
> PROJ 6 (GDAL 2.4 should probably already work fine with PROJ 6, since it uses
> proj.h, but I didn't test)
> 
> - libgeotiff master / 1.5.0dev, to be probably released around the same time
> of GDAL 2.5, will require PROJ 6. Current versions should likely work fine
> since using proj_api.h if ACCEPT_USE_OF_DEPRECATED_PROJ_API_H is defined.
> 
> - the next version of shapelib will likely see its PROJ dependency removed
> (only affects the contrib area) since I don't care about it:
> https://lists.osgeo.org/pipermail/shapelib/2019-February/000645.html
> 
> - the next version of OGDI will likely see its PROJ dependency removed for the
> same reason (it still uses project.h)
> https://groups.yahoo.com/neo/groups/ogdidev/conversations/messages/314
> 
> - regarding MapServer, no immediate plan for action as far as I'm concerned.
> It uses proj_api.h so ACCEPT_USE_OF_DEPRECATED_PROJ_API_H can be used for now.
> Perhaps upgrading to proj.h would be a good topic for the OSGeo code sprint
> for those who can attend.
> 

Many thanks Even for this roadmap of timing for GDAL, libgeotiff and 
PROJ 6.  Regarding MapServer, I wonder this would be good for the 7.4.0 
release goals.

-jeff



From even.rouault at spatialys.com  Sun Feb 24 03:47:44 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 24 Feb 2019 12:47:44 +0100
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
Message-ID: <6868553.JUB9bcV2n4@even-i700>

On samedi 23 février 2019 11:28:18 CET Kristian Evers wrote:
> All,
> 
> Issues were found in PROJ 6.0.0RC1 and proj-datumgrid-europe 1.2RC1
> so here are updated release candidates for those two packages:
> 
> https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz
> <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz>
> (https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5
> <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5>)
> https://download.osgeo.org/proj/proj-6.0.0RC2.zip
> <https://download.osgeo.org/proj/proj-6.0.0RC2.zip>
> (https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5
> <https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5>)

Kristian,

I'm afraid we need a RC3. I just pushed and backported a fix for
https://github.com/OSGeo/proj.4/issues/1290 (crash on Fedora builds when 
outputing WKT with grid filenames, which is the case by default with projinfo)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Sun Feb 24 05:02:05 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sun, 24 Feb 2019 13:02:05 +0000
Subject: [PROJ] PROJ 6RC2
In-Reply-To: <6868553.JUB9bcV2n4@even-i700>
References: <84C1B85D-2005-4FB4-A056-BD0888D35323@gmail.com>
 <6868553.JUB9bcV2n4@even-i700>
Message-ID: <52020A7A-FA5F-4CB8-8A30-D72A5F53DF54@sdfe.dk>

Yeah, I came to the same conclusion when I saw that issue this morning.
RC2 has only been out for a short while so let’s give it another day before
putting out RC3. Expect an announcement of RC3 tomorrow evening.
Hopefully that will be the last release candidate this time around.

So everyone, if you haven’t already tested RC2 please do so now and
report the issues you may find. It would be nice to avoid having to issue
a fourth release candidate.

/Kristian


> On 24 Feb 2019, at 12:47, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On samedi 23 février 2019 11:28:18 CET Kristian Evers wrote:
>> All,
>> 
>> Issues were found in PROJ 6.0.0RC1 and proj-datumgrid-europe 1.2RC1
>> so here are updated release candidates for those two packages:
>> 
>> https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz
>> <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz>
>> (https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5
>> <https://download.osgeo.org/proj/proj-6.0.0RC2.tar.gz.md5>)
>> https://download.osgeo.org/proj/proj-6.0.0RC2.zip
>> <https://download.osgeo.org/proj/proj-6.0.0RC2.zip>
>> (https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5
>> <https://download.osgeo.org/proj/proj-6.0.0RC2.zip.md5>)
> 
> Kristian,
> 
> I'm afraid we need a RC3. I just pushed and backported a fix for
> https://github.com/OSGeo/proj.4/issues/1290 (crash on Fedora builds when 
> outputing WKT with grid filenames, which is the case by default with projinfo)
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From jochem.lesparre at kadaster.nl  Mon Feb 25 02:59:41 2019
From: jochem.lesparre at kadaster.nl (Jochem)
Date: Mon, 25 Feb 2019 03:59:41 -0700 (MST)
Subject: [PROJ] NTv2 grid file from Bessel ellipsoid to Bessel ellipsoid
Message-ID: <1551092381191-0.post@n6.nabble.com>

Hi,

I noticed something odd in cs2cs results, which has nothing to do with the
new Proj. version, but could be a old bug. I'm using the OSGeo4W Shell of
QGIS 3.0.1 (Proj.493). 

BACKGROUND
I am testing with different horizontal grid shift files, since we are
defining a new official coordinate tranformation between ETRS89
(ETRF2000(R14)) and the Dutch RD (new) grid and NAP heights. We like to
provide two variants. First, a easy implementation variant with a grid shift
file that handles both the datum transformation (7 parameter Helmert
transformation from Bessel to GRS80) and the datum distortions (correction
grid on Bessel ellipsoid) in a single NTv2 (.gsb) grid file. Since this
method can only be used within the bounding box of the grid file, we also
define a grid without the datum transformation and publish the 7 paramaters
for the datum transformation separately. This 7 parameter transformation
together with the second grid should give the same results as the first grid
within the bounding box of the grid file, but this second method will also
provide useful results outside the bounding box of the grid.

PROBLEM
I do not get the results I expected. This is caused by something odd in
cs2cs. To demonstrate this, I created a NTv2 grid file with only zero
corrections (see ascii grid file below). If I transform coordinates on the
Bessel ellipsoid with this grid (command 1), I do not get unchanged results
(command 2), but I get results which are the same as I get when changing the
ellipsoid (command 3). 

Command 1:
cs2cs +proj=longlat +ellps=bessel +wktext +nadgrids=zeros.gsb +units=m
+no_defs +to +proj=longlat +ellps=bessel +towgs84=0,0,0,0,0,0,0 +units=m
+no_defs -f %.9f
5.000000000     52.000000000 0.0000
result:
5.000000000     51.999419687 698.6070

Command 2:
cs2cs +proj=longlat +ellps=bessel +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
+to +proj=longlat +ellps=bessel +towgs84=0,0,0,0,0,0,0 +units=m +no_defs -f
%.9f
5.000000000     52.000000000 0.0000
result:
5.000000000     52.000000000 0.0000

Command 3:
cs2cs +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
+to +proj=longlat +ellps=bessel +towgs84=0,0,0,0,0,0,0 +units=m +no_defs -f
%.9f
5.000000000     52.000000000 0.0000
result:
5.000000000     51.999419686 698.6069

QUESTION
Is there something wrong with my expectations on how cs2cs should work or is
this a bug?


Kind regards, Jochem
J. Lesparre (MSc in geodetic engineering)
Rijksdriehoeksmeting (RD)
Netherlands Cadastre, Land Registry and Mapping Agency (Kadaster)
Netherlands Partnership Geodetic Infrastructure (NSGI)


GRID FILE zeros.gsb
---
NUM_OREC      11
NUM_SREC      11
NUM_FILE       2
GS_TYPE SECONDS 
VERSION NTv2.0  
SYSTEM_FBSSL1841
SYSTEM_TBSSLPSEU
MAJOR_F  6377397.155
MINOR_F  6356078.963
MAJOR_T  6377397.155
MINOR_T  6356078.963
SUB_NAMENL_EEZ  
PARENT  NONE    
CREATED 21-02-19
UPDATED         
S_LAT     180000.000000
N_LAT     201600.000000
E_LONG    -28800.000000
W_LONG     -7200.000000
LAT_INC      360.000000
LONG_INC     360.000000
GS_COUNT    3721
0.000000  0.000000  0.001000  0.001000
0.000000  0.000000  0.001000  0.001000
0.000000  0.000000  0.001000  0.001000
...





--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From even.rouault at spatialys.com  Mon Feb 25 03:40:48 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Feb 2019 12:40:48 +0100
Subject: [PROJ] NTv2 grid file from Bessel ellipsoid to Bessel ellipsoid
In-Reply-To: <1551092381191-0.post@n6.nabble.com>
References: <1551092381191-0.post@n6.nabble.com>
Message-ID: <4437381.atxD1jMIbv@even-i700>

Jochem,

> 
> I noticed something odd in cs2cs results, which has nothing to do with the
> new Proj. version, but could be a old bug. I'm using the OSGeo4W Shell of
> QGIS 3.0.1 (Proj.493).
> 
> BACKGROUND
> I am testing with different horizontal grid shift files, since we are
> defining a new official coordinate tranformation between ETRS89
> (ETRF2000(R14)) and the Dutch RD (new) grid and NAP heights. We like to
> provide two variants. First, a easy implementation variant with a grid shift
> file that handles both the datum transformation (7 parameter Helmert
> transformation from Bessel to GRS80) and the datum distortions (correction
> grid on Bessel ellipsoid) in a single NTv2 (.gsb) grid file. Since this
> method can only be used within the bounding box of the grid file, we also
> define a grid without the datum transformation and publish the 7 paramaters
> for the datum transformation separately. This 7 parameter transformation
> together with the second grid should give the same results as the first
> grid within the bounding box of the grid file, but this second method will
> also provide useful results outside the bounding box of the grid.
> 
> PROBLEM
> I do not get the results I expected. This is caused by something odd in
> cs2cs. To demonstrate this, I created a NTv2 grid file with only zero
> corrections (see ascii grid file below). If I transform coordinates on the
> Bessel ellipsoid with this grid (command 1), I do not get unchanged results
> (command 2), but I get results which are the same as I get when changing the
> ellipsoid (command 3).

Yes this is somewhat logical given what the code does (which of course is true 
of any bug :-)). But here I believe this is more a feature than a bug. This 
reflects the somewhat opacity/magic of the historical "early-binding" 
approach.

Command 1:
You use +ellps=bessel +nadgrids=zeros.gsb in the left term, so there is first 
a geographic shift using the grid values to go from bessel to WGS84 geographic 
coordinates (but if you change bessel by anything else like R=1 this will give 
the same result), which is null here given your grid, and then a 
transformation from WGS84 geographic coordinates to WGS84 earth centric 
cartesian coordinates. The right term involves an ellipsoid change to Bessel 
when doing the cartesian->geographic step, hence the modified value on the 
latitude

Note: you could have also use the provided 'null' grid instead of zeros.gsb

Command 3:
+ellps=GRS80 +towgs84=0,0,0,0,0,0,0 ==> transformation from GRS80 geographic 
coordinates to GRS80 earth centric cartesian coordinates, followed by a null 
shift to get WGS84 earth centric cartesian coordinates. As GRS80 ~= WGS84, the 
effect of this is identical to command 1

Command 2:
+ellps=bessel +towgs84=0,0,0,0,0,0,0 is found in the left and right terms, so 
this is a no-operation.


For what you describe in your needs, you'd better use PROJ 5.2 or the nearly 
released PROJ 6.0 and use PROJ pipelines with the 'cart', 'helmert' and 
'hgridshift' operations that will avoid using the WGS84 pivot implied by 
towgs84&nadgrids, which is likely not appropriate for the tranformations you 
want to accomplish.
PROJ 6 might be even more appropriate than PROJ 5.2 since we have now the new 
push/pop operators that can be used to avoid modifying the height when doing a 
cartesian -> helmert -> inverse cartesian chain.

Example of a pipeline you may use with the cct program:
+proj=pipeline
	+step +proj=push +v_3
	+step +proj=cart +ellps=GRS80
	+step +proj=helmert +x=1 +y=1 +z=-1
	+step +inv +proj=cart +ellps=WGS84
	+step +proj=pop +v_3 

And the pipeline approach is also more natural to chain together a grid shift 
and a Helmert tranformation, as you explain in the second method you want to 
create.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jochem.lesparre at kadaster.nl  Mon Feb 25 05:14:19 2019
From: jochem.lesparre at kadaster.nl (Jochem)
Date: Mon, 25 Feb 2019 06:14:19 -0700 (MST)
Subject: [PROJ] NTv2 grid file from Bessel ellipsoid to Bessel ellipsoid
In-Reply-To: <4437381.atxD1jMIbv@even-i700>
References: <1551092381191-0.post@n6.nabble.com> <4437381.atxD1jMIbv@even-i700>
Message-ID: <1551100459036-0.post@n6.nabble.com>

Hi all,

Thanks for the quick reply, Even.


> Yes this is somewhat logical given what the code does 

Ah, then the behaviour is different from what I expectated. 


> For what you describe in your needs, you'd better use PROJ 5.2 or the
> nearly released PROJ 6.0 and use PROJ pipelines 

I know, but I would like to be able to do the same with Proj.4, to share it
with the many users that still use this version. 


> given what the code does (which of course is true of any bug :-)).

I thought it was a bug, since I also noticed that de code ignores the
setting for GS_TYPE in the header of de NTv2 (.gsb) file: if this is not set
to seconds, it still assumes seconds.


Anyway, thanks for the explanation. Now I am able to get what I need like
this with Proj.4:

cs2cs +proj=sterea +lat_0=52.156160556 +lon_0=5.387638889 +k=0.9999079
+x_0=155000 +y_0=463000 +ellps=bessel +towgs84=0,0,0,0,0,0,0 +units=m
+no_defs +to +proj=longlat +ellps=bessel +towgs84=0,0,0,0,0,0,0 +units=m
+no_defs -f %.9f < inputRD.txt > step1.txt

cs2cs +proj=longlat +ellps=WGS84 +wktext +nadgrids=rdcorr2018beta.gsb
+units=m +no_defs +to +proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0
+units=m +no_defs -f %.9f < step1.txt > step2.txt

(replace all heights by 0.0000) 

cs2cs +proj=longlat +ellps=bessel
+towgs84=565.7381,50.4018,465.2904,-0.395026,0.330772,-1.876074,4.07244
+units=m +no_defs +to +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
+units=m +no_defs -f %.9f < step2H0.txt > outputERS89.txt

which works for the entire world and within the bounding box of the grid it
gives the same (diff. < 1 mm) as:

cs2cs +proj=sterea +lat_0=52.156160556 +lon_0=5.387638889 +k=0.9999079
+x_0=155000 +y_0=463000 +ellps=bessel +wktext +nadgrids=rdtrans2018beta.gsb
+units=m +no_defs +to +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
+units=m +no_defs -f %.9f < inputRD.txt > outputETRS89.txt

Kind regards, Jochem





--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From kreve at sdfe.dk  Mon Feb 25 10:53:12 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 25 Feb 2019 18:53:12 +0000
Subject: [PROJ] PROJ 6.0.0RC3
Message-ID: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>

All,

A fairly serious error was found in PROJ 6.0.0RC2 [0], so here is RC3 with a fix for the problem:

https://download.osgeo.org/proj/proj-6.0.0RC3.tar.gz (https://download.osgeo.org/proj/proj-6.0.0RC3.tar.gz.md5)
https://download.osgeo.org/proj/proj-6.0.0RC3.zip    (https://download.osgeo.org/proj/proj-6.0.0RC3.zip.md5)

Again, I would appreciate feedback once you’ve tested the release candidate. Both if you find errors or if you
are happy with the package being promoted to final release. If no further issues is found I expect to put this
release candidate up for a PSC vote for promotion to final release on Wednesday.

/Kristian

[0] https://github.com/OSGeo/proj.4/issues/1290

From even.rouault at spatialys.com  Mon Feb 25 12:12:22 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Feb 2019 21:12:22 +0100
Subject: [PROJ] NTv2 grid file from Bessel ellipsoid to Bessel ellipsoid
In-Reply-To: <1551100459036-0.post@n6.nabble.com>
References: <1551092381191-0.post@n6.nabble.com>
 <4437381.atxD1jMIbv@even-i700> <1551100459036-0.post@n6.nabble.com>
Message-ID: <6691567.yAohl1oHxh@even-i700>

> > For what you describe in your needs, you'd better use PROJ 5.2 or the
> > nearly released PROJ 6.0 and use PROJ pipelines
> 
> I know, but I would like to be able to do the same with Proj.4, to share it
> with the many users that still use this version.

By the way, you can use PROJ 6 with the "proj-dev" package of OSGeo4W.

> 
> > given what the code does (which of course is true of any bug :-)).
> 
> I thought it was a bug, since I also noticed that de code ignores the
> setting for GS_TYPE in the header of de NTv2 (.gsb) file: if this is not set
> to seconds, it still assumes seconds.

Yes, this field of the header is ignored. But out of curiousity, are there 
other possible values ? Do you have a link to a specification of the format ? 
I'm not sure if PROJ and GDAL implementations have been done from reverse 
engineering of examples or from a format description.

> Anyway, thanks for the explanation. Now I am able to get what I need like
> this with Proj.4:

Clearly good candidates to use multistep pipeline :-)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Feb 25 12:12:29 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Feb 2019 21:12:29 +0100
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
Message-ID: <2022750.AsBhx24cdR@even-i700>

On lundi 25 février 2019 18:53:12 CET Kristian Evers wrote:
> All,
> 
> A fairly serious error was found in PROJ 6.0.0RC2 [0], so here is RC3 with a
> fix for the problem:
 
> https://download.osgeo.org/proj/proj-6.0.0RC3.tar.gz
> (https://download.osgeo.org/proj/proj-6.0.0RC3.tar.gz.md5)
> https://download.osgeo.org/proj/proj-6.0.0RC3.zip   
> (https://download.osgeo.org/proj/proj-6.0.0RC3.zip.md5) 
> Again, I would appreciate feedback once you’ve tested the release candidate.

GDAL master continuous integration happy with it.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From martin.desruisseaux at geomatys.com  Mon Feb 25 12:16:47 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Mon, 25 Feb 2019 21:16:47 +0100
Subject: [PROJ] NTv2 grid file from Bessel ellipsoid to Bessel ellipsoid
In-Reply-To: <6691567.yAohl1oHxh@even-i700>
References: <1551092381191-0.post@n6.nabble.com>
 <4437381.atxD1jMIbv@even-i700> <1551100459036-0.post@n6.nabble.com>
 <6691567.yAohl1oHxh@even-i700>
Message-ID: <512f2a94-2a08-3dfc-9597-bd0234da9b62@geomatys.com>

Le 25/02/2019 à 21:12, Even Rouault a écrit :

>> I thought it was a bug, since I also noticed that de code ignores the
>> setting for GS_TYPE in the header of de NTv2 (.gsb) file: if this is
>> not set to seconds, it still assumes seconds.
>>
> Yes, this field of the header is ignored. But out of curiousity, are
> there other possible values ? Do you have a link to a specification of
> the format ?
>
I do not remember where I got the specification, but on my side I have
the following possible values for GS_TYPE: "SECONDS", "MINUTES" or "DEGREES"

    Martin



From even.rouault at spatialys.com  Mon Feb 25 12:28:21 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Feb 2019 21:28:21 +0100
Subject: [PROJ] NTV2 format
In-Reply-To: <512f2a94-2a08-3dfc-9597-bd0234da9b62@geomatys.com>
References: <1551092381191-0.post@n6.nabble.com> <6691567.yAohl1oHxh@even-i700>
 <512f2a94-2a08-3dfc-9597-bd0234da9b62@geomatys.com>
Message-ID: <4120075.KYIUujPCol@even-i700>

On lundi 25 février 2019 21:16:47 CET Martin Desruisseaux wrote:
> Le 25/02/2019 à 21:12, Even Rouault a écrit :
> >> I thought it was a bug, since I also noticed that de code ignores the
> >> setting for GS_TYPE in the header of de NTv2 (.gsb) file: if this is
> >> not set to seconds, it still assumes seconds.
> > 
> > Yes, this field of the header is ignored. But out of curiousity, are
> > there other possible values ? Do you have a link to a specification of
> > the format ?
> 
> I do not remember where I got the specification, but on my side I have
> the following possible values for GS_TYPE: "SECONDS", "MINUTES" or "DEGREES"

Thanks. Actually I just found
https://github.com/Esri/ntv2-file-routines which documents this. The original 
documentation from the Canadian government seems to have disappeared.

Is anyone aware of .gsb files in the wild using GS_TYPE != SECONDS ?
The above link mentions "All published NTv2 files that we have seen have a 
GS_TYPE of "SECONDS". This has the advantage that the latitude, longitude,
and increment values in the sub-file records are then usually whole numbers."

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mwtoews at gmail.com  Mon Feb 25 12:50:24 2019
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 26 Feb 2019 09:50:24 +1300
Subject: [PROJ] NTV2 format
In-Reply-To: <4120075.KYIUujPCol@even-i700>
References: <1551092381191-0.post@n6.nabble.com> <6691567.yAohl1oHxh@even-i700>
 <512f2a94-2a08-3dfc-9597-bd0234da9b62@geomatys.com>
 <4120075.KYIUujPCol@even-i700>
Message-ID: <CAM2FmMo2TH6iS9oOfvjNenh7-pYWoMskvMLfCeG_vsXVtf2cUA@mail.gmail.com>

On Tue, 26 Feb 2019 at 09:28, Even Rouault <even.rouault at spatialys.com> wrote:
> Thanks. Actually I just found
> https://github.com/Esri/ntv2-file-routines which documents this. The original
> documentation from the Canadian government seems to have disappeared.

Fortunately it's archived. Jump to Appendix B:
https://web.archive.org/web/20091227232322/http://www.mgs.gov.on.ca/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf

From jochem.lesparre at kadaster.nl  Mon Feb 25 13:24:14 2019
From: jochem.lesparre at kadaster.nl (Jochem)
Date: Mon, 25 Feb 2019 14:24:14 -0700 (MST)
Subject: [PROJ] NTV2 format
In-Reply-To: <4120075.KYIUujPCol@even-i700>
References: <1551092381191-0.post@n6.nabble.com>
 <4437381.atxD1jMIbv@even-i700> <1551100459036-0.post@n6.nabble.com>
 <6691567.yAohl1oHxh@even-i700>
 <512f2a94-2a08-3dfc-9597-bd0234da9b62@geomatys.com>
 <4120075.KYIUujPCol@even-i700>
Message-ID: <1551129854798-0.post@n6.nabble.com>


> Is anyone aware of .gsb files in the wild using GS_TYPE != SECONDS ? 
> The above link mentions "All published NTv2 files that we have seen have a
> GS_TYPE of "SECONDS".

The Netherlands probably would have got a NTv2 (.gsb) file in degrees if
Proj. would have supported it. Only when I noticed that Proj. did not
support it and that "All published NTv2 files that we have seen have a
GS_TYPE of SECONDS", we decided to use seconds too. Actually, we would
prefer to use a totally different format with grid values in decimal
degrees, eastern hemisphere positive and starting in the SW (or maybe NW).
We only use NTv2 because we believe it is the most widely supported format,
not because it is technically the best or the easiest to implement.

Regards, Jochem



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From gdt at lexort.com  Mon Feb 25 16:50:03 2019
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 25 Feb 2019 19:50:03 -0500
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk> (Kristian Evers's
 message of "Mon, 25 Feb 2019 18:53:12 +0000")
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
Message-ID: <smusgwbpe4k.fsf@linuxpal.mit.edu>

A bit stream of consciouness, but:

  ERROR: [check-portability.awk] configure: if test "x$with_external_gtest" == "xyes" ; then

(test == is a bashism not specified by POSIX; replace with single =)


I am seeing a couple of files with c++ errors (NetBSD 8 amd64, gcc
5.5.0).  I see in NEWS that c++11 is required, but I am not seeing
proj's build system (I used configure) insert --std=c++11.  I wonder if
there is a hidden assumption that the compiler will default to c++11,
rather than a requirement that it be capable.

I will look into the compilation issues and post more details.


From gdt at lexort.com  Mon Feb 25 17:00:25 2019
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 25 Feb 2019 20:00:25 -0500
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <smusgwbpe4k.fsf@linuxpal.mit.edu> (Greg Troxel's message of
 "Mon, 25 Feb 2019 19:50:03 -0500")
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <smusgwbpe4k.fsf@linuxpal.mit.edu>
Message-ID: <smuo96zpdna.fsf@linuxpal.mit.edu>

Here is the build failure.  It seems to be only mutex.cpp, so far.

  - I am unclear on all the -f and -W options and what they might cause.

  - There is no "--std=c++11".

I have FORTIFY and SSP enabled, as I did for proj 5.2.  I'll check without.



=> Bootstrap dependency digest>=20010302: found digest-20180917
===> Building for proj-6.0.0RC3nb3
Making all in include
gmake[1]: Entering directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include'
Making all in proj
gmake[2]: Entering directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include/proj'
Making all in internal
gmake[3]: Entering directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include/proj/internal'
gmake[3]: Nothing to be done for 'all'.
gmake[3]: Leaving directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include/proj/internal'
gmake[3]: Entering directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include/proj'
gmake[3]: Nothing to be done for 'all-am'.
gmake[3]: Leaving directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include/proj'
gmake[2]: Leaving directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include/proj'
gmake[2]: Entering directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include'
gmake[2]: Nothing to be done for 'all-am'.
gmake[2]: Leaving directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include'
gmake[1]: Leaving directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/include'
Making all in src
gmake[1]: Entering directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/src'
/usr/pkg/bin/gmake  all-am
gmake[2]: Entering directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/src'
depbase=`echo mutex.lo | sed 's|[^/]*$|.deps/&|;s|\.lo$||'`;\
/bin/sh ../libtool  --tag=CXX   --mode=compile c++ -DHAVE_CONFIG_H -I.  -DPROJ_LIB=\"/usr/pkg/share/proj\" -DMUTEX_pthread  -I../include  -I/usr/include -Wall -Wextra -Winit-self -Wunused-parameter -Wformat -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla -Wdate-time -Wfloat-conversion -Wmissing-declarations -Wnon-virtual-dtor -Weffc++ -Woverloaded-virtual -Wdeprecated -fno-operator-names -Wzero-as-null-pointer-constant  -DPROJ_COMPILATION -O2 -D_FORTIFY_SOURCE=2 -I/usr/include -fvisibility=hidden -MT mutex.lo -MD -MP -MF $depbase.Tpo -c -o mutex.lo mutex.cpp &&\
mv -f $depbase.Tpo $depbase.Plo
libtool: compile:  c++ -DHAVE_CONFIG_H -I. -DPROJ_LIB=\"/usr/pkg/share/proj\" -DMUTEX_pthread -I../include -Wall -Wextra -Winit-self -Wunused-parameter -Wformat -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla -Wdate-time -Wfloat-conversion -Wmissing-declarations -Wnon-virtual-dtor -Weffc++ -Woverloaded-virtual -Wdeprecated -fno-operator-names -Wzero-as-null-pointer-constant -DPROJ_COMPILATION -O2 -D_FORTIFY_SOURCE=2 -fvisibility=hidden -MT mutex.lo -MD -MP -MF .deps/mutex.Tpo -c mutex.cpp  -fPIC -DPIC -o .libs/mutex.o
In file included from /usr/include/g++/bits/postypes.h:40:0,
                 from /usr/include/g++/iosfwd:40,
                 from /usr/include/g++/memory:72,
                 from ../include/proj/common.hpp:32,
                 from proj_internal.h:61,
                 from mutex.cpp:44:
/usr/include/g++/cwchar:164:11: error: '::vfwscanf' has not been declared
   using ::vfwscanf;
           ^
/usr/include/g++/cwchar:170:11: error: '::vswscanf' has not been declared
   using ::vswscanf;
           ^
/usr/include/g++/cwchar:174:11: error: '::vwscanf' has not been declared
   using ::vwscanf;
           ^
/usr/include/g++/cwchar:191:11: error: '::wcstof' has not been declared
   using ::wcstof;
           ^
/usr/include/g++/cwchar:248:11: error: '::wcstold' has not been declared
   using ::wcstold;
           ^
/usr/include/g++/cwchar:257:11: error: '::wcstoll' has not been declared
   using ::wcstoll;
           ^
/usr/include/g++/cwchar:258:11: error: '::wcstoull' has not been declared
   using ::wcstoull;
           ^
/usr/include/g++/cwchar:264:22: error: '__gnu_cxx::wcstold' has not been declared
   using ::__gnu_cxx::wcstold;
                      ^
/usr/include/g++/cwchar:265:22: error: '__gnu_cxx::wcstoll' has not been declared
   using ::__gnu_cxx::wcstoll;
                      ^
/usr/include/g++/cwchar:266:22: error: '__gnu_cxx::wcstoull' has not been declared
   using ::__gnu_cxx::wcstoull;
                      ^
/usr/include/g++/cwchar:280:14: error: 'std::wcstof' has not been declared
   using std::wcstof;
              ^
/usr/include/g++/cwchar:283:14: error: 'std::vfwscanf' has not been declared
   using std::vfwscanf;
              ^
/usr/include/g++/cwchar:286:14: error: 'std::vswscanf' has not been declared
   using std::vswscanf;
              ^
/usr/include/g++/cwchar:289:14: error: 'std::vwscanf' has not been declared
   using std::vwscanf;
              ^
/usr/include/g++/cwchar:293:14: error: 'std::wcstold' has not been declared
   using std::wcstold;
              ^
/usr/include/g++/cwchar:294:14: error: 'std::wcstoll' has not been declared
   using std::wcstoll;
              ^
/usr/include/g++/cwchar:295:14: error: 'std::wcstoull' has not been declared
   using std::wcstoull;
              ^
In file included from /usr/include/g++/bits/localefwd.h:42:0,
                 from /usr/include/g++/string:43,
                 from /usr/include/g++/stdexcept:39,
                 from /usr/include/g++/array:38,
                 from /usr/include/g++/tuple:39,
                 from /usr/include/g++/functional:55,
                 from /usr/include/g++/memory:79,
                 from ../include/proj/common.hpp:32,
                 from proj_internal.h:61,
                 from mutex.cpp:44:
/usr/include/g++/cctype:87:11: error: '::isblank' has not been declared
   using ::isblank;
           ^
In file included from /usr/include/g++/ext/string_conversions.h:43:0,
                 from /usr/include/g++/bits/basic_string.h:5352,
                 from /usr/include/g++/string:52,
                 from /usr/include/g++/stdexcept:39,
                 from /usr/include/g++/array:38,
                 from /usr/include/g++/tuple:39,
                 from /usr/include/g++/functional:55,
                 from /usr/include/g++/memory:79,
                 from ../include/proj/common.hpp:32,
                 from proj_internal.h:61,
                 from mutex.cpp:44:
/usr/include/g++/cstdio:176:11: error: '::vfscanf' has not been declared
   using ::vfscanf;
           ^
/usr/include/g++/cstdio:177:11: error: '::vscanf' has not been declared
   using ::vscanf;
           ^
/usr/include/g++/cstdio:179:11: error: '::vsscanf' has not been declared
   using ::vsscanf;
           ^
/usr/include/g++/cstdio:186:22: error: '__gnu_cxx::vfscanf' has not been declared
   using ::__gnu_cxx::vfscanf;
                      ^
/usr/include/g++/cstdio:187:22: error: '__gnu_cxx::vscanf' has not been declared
   using ::__gnu_cxx::vscanf;
                      ^
/usr/include/g++/cstdio:189:22: error: '__gnu_cxx::vsscanf' has not been declared
   using ::__gnu_cxx::vsscanf;
                      ^
In file included from /usr/include/g++/string:52:0,
                 from /usr/include/g++/stdexcept:39,
                 from /usr/include/g++/array:38,
                 from /usr/include/g++/tuple:39,
                 from /usr/include/g++/functional:55,
                 from /usr/include/g++/memory:79,
                 from ../include/proj/common.hpp:32,
                 from proj_internal.h:61,
                 from mutex.cpp:44:
/usr/include/g++/bits/basic_string.h: In function 'long long int std::stoll(const wstring&, std::size_t*, int)':
/usr/include/g++/bits/basic_string.h:5480:31: error: 'wcstoll' is not a member of 'std'
   { return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(),
                               ^
/usr/include/g++/bits/basic_string.h: In function 'long long unsigned int std::stoull(const wstring&, std::size_t*, int)':
/usr/include/g++/bits/basic_string.h:5485:31: error: 'wcstoull' is not a member of 'std'
   { return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(),
                               ^
/usr/include/g++/bits/basic_string.h: In function 'float std::stof(const wstring&, std::size_t*)':
/usr/include/g++/bits/basic_string.h:5491:31: error: 'wcstof' is not a member of 'std'
   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
                               ^
/usr/include/g++/bits/basic_string.h: In function 'long double std::stold(const wstring&, std::size_t*)':
/usr/include/g++/bits/basic_string.h:5499:31: error: 'wcstold' is not a member of 'std'
   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
                               ^
gmake[2]: *** [Makefile:1757: mutex.lo] Error 1
gmake[2]: Leaving directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/src'
gmake[1]: *** [Makefile:984: all] Error 2
gmake[1]: Leaving directory '/home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/proj-6.0.0/src'
gmake: *** [Makefile:457: all-recursive] Error 1
*** Error code 2

Stop.
make[1]: stopped in /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj
*** Error code 1

Stop.
make: stopped in /usr/pkgsrc/geography/proj




From martin.desruisseaux at geomatys.com  Tue Feb 26 00:44:38 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Tue, 26 Feb 2019 09:44:38 +0100
Subject: [PROJ] NTV2 format
In-Reply-To: <4120075.KYIUujPCol@even-i700>
References: <1551092381191-0.post@n6.nabble.com> <6691567.yAohl1oHxh@even-i700>
 <512f2a94-2a08-3dfc-9597-bd0234da9b62@geomatys.com>
 <4120075.KYIUujPCol@even-i700>
Message-ID: <ccf177dd-c076-62c1-e642-731ca2ee90ab@geomatys.com>

Le 25/02/2019 à 21:28, Even Rouault a écrit :

> Is anyone aware of .gsb files in the wild using GS_TYPE != SECONDS ?
> The above link mentions "All published NTv2 files that we have seen
> have a GS_TYPE of "SECONDS". (…)"
>
I do not know the answer to this question. But if Proj chooses to
support only seconds, I think it should at least raise an error if
another value is found in the GS_TYPE field instead of silently ignoring it.

    Martin



From even.rouault at spatialys.com  Tue Feb 26 01:53:49 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Feb 2019 10:53:49 +0100
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <smuo96zpdna.fsf@linuxpal.mit.edu>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <smusgwbpe4k.fsf@linuxpal.mit.edu> <smuo96zpdna.fsf@linuxpal.mit.edu>
Message-ID: <1748575.j6K3p2yCBR@even-i700>

Greg,

> Here is the build failure.  It seems to be only mutex.cpp, so far.
> 
>   - I am unclear on all the -f and -W options and what they might cause.

I don't think they matter much here

> 
>   - There is no "--std=c++11".

That's a weird one. I do have g++ 5.5 on Ubuntu 16.04 and it defaults to
C++98, but ./configure automatically adds -std=c++11
But it would be strange that mutex.cpp is the only file to fail compilation.
C++11 is used extensively even in proj_internal.h, so all files should fail 
compilation.
Are you absolutely sure that your "c++" binary is g++ 5.5 ?

What does the following return ?
c++ -dM -E -x c++  /dev/null | grep -F __cplusplus

If that's indeed the only file to fail compilation, I'd suggest you try 
tweaking the start of the file to comment out the #define _XOPEN_SOURCE 500 
and/or #define _GNU_SOURCE

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Tue Feb 26 06:58:04 2019
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 26 Feb 2019 09:58:04 -0500
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <1748575.j6K3p2yCBR@even-i700> (Even Rouault's message of "Tue,
 26 Feb 2019 10:53:49 +0100")
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <smusgwbpe4k.fsf@linuxpal.mit.edu> <smuo96zpdna.fsf@linuxpal.mit.edu>
 <1748575.j6K3p2yCBR@even-i700>
Message-ID: <smuimx6ppfn.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

>>   - There is no "--std=c++11".
>
> That's a weird one. I do have g++ 5.5 on Ubuntu 16.04 and it defaults to
> C++98, but ./configure automatically adds -std=c++11
> But it would be strange that mutex.cpp is the only file to fail compilation.
> C++11 is used extensively even in proj_internal.h, so all files should fail 
> compilation.
> Are you absolutely sure that your "c++" binary is g++ 5.5 ?
>
> What does the following return ?
> c++ -dM -E -x c++  /dev/null | grep -F __cplusplus

$ c++ -dM -E -x c++  /dev/null | grep -F __cplusplus
#define __cplusplus 199711L
$ type -a c++
c++ is /usr/bin/c++
$ /usr/bin/c++ -v
Using built-in specs.
COLLECT_GCC=/usr/bin/c++
COLLECT_LTO_WRAPPER=/usr/libexec/lto-wrapper
Target: x86_64--netbsd
Configured with: /usr/src/tools/gcc/../../external/gpl3/gcc/dist/configure --target=x86_64--netbsd --enable-long-long --enable-threads --with-bugurl=http://www.NetBSD.org/Misc/send-pr.html --with-pkgversion='NetBSD nb3 20180905' --with-system-zlib --disable-libstdcxx-dual-abi --enable-__cxa_atexit --enable-libstdcxx-time=rt --enable-libstdcxx-threads --with-tune=nocona --with-diagnostics-color=auto-if-env --with-mpc-lib=/var/obj/mknative/amd64-x86_64/usr/src/external/lgpl3/mpc/lib/libmpc --with-mpfr-lib=/var/obj/mknative/amd64-x86_64/usr/src/external/lgpl3/mpfr/lib/libmpfr --with-gmp-lib=/var/obj/mknative/amd64-x86_64/usr/src/external/lgpl3/gmp/lib/libgmp --with-mpc-include=/usr/src/external/lgpl3/mpc/dist/src --with-mpfr-include=/usr/src/external/lgpl3/mpfr/dist/src --with-gmp-include=/usr/src/external/lgpl3/gmp/lib/libgmp/arch/x86_64 --enable-tls --disable-multilib --disable-symvers --disable-libstdcxx-pch --disable-libstdcxx-dual-abi --build=x86_64--netbsd --host=x86_64--netbsd --with-sysroot=/var/obj/mknative/amd64-x86_64/usr/src/destdir.amd64
Thread model: posix
gcc version 5.5.0 (nb2 20180327)

But, I suspect the pkgsrc wrappers are adding --std=c++11, and I am
guessing that proj's configure only adds that if it is necessary.  I'll check that.

(The machine also has gcc 6 installed, in a different prefix, but no older versions.)

I would hope that proj builds ok with gcc 4.8; haven't tried yet.


> If that's indeed the only file to fail compilation, I'd suggest you try 
> tweaking the start of the file to comment out the #define _XOPEN_SOURCE 500 
> and/or #define _GNU_SOURCE

That was the only one.  It makes sense then that the --std flag is not
the issue.  Thanks for those hints - I had forgotten about
_XOPEN_SOURCE, but now that I remember about definition visibility
controls it sounds promising.



Has anyone built proj 6 with clang?  Any success reports from other than Linux?

From even.rouault at spatialys.com  Tue Feb 26 07:09:02 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Feb 2019 16:09:02 +0100
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <smuimx6ppfn.fsf@linuxpal.mit.edu>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <1748575.j6K3p2yCBR@even-i700> <smuimx6ppfn.fsf@linuxpal.mit.edu>
Message-ID: <9580952.6TzSNTWTH5@even-i700>

> (The machine also has gcc 6 installed, in a different prefix, but no older
> versions.)
> 
> I would hope that proj builds ok with gcc 4.8; haven't tried yet.

It does.

> 
> > If that's indeed the only file to fail compilation, I'd suggest you try
> > tweaking the start of the file to comment out the #define _XOPEN_SOURCE
> > 500
> > and/or #define _GNU_SOURCE
> 
> That was the only one.  It makes sense then that the --std flag is not
> the issue.  Thanks for those hints - I had forgotten about
> _XOPEN_SOURCE, but now that I remember about definition visibility
> controls it sounds promising.
> 
> 
> 
> Has anyone built proj 6 with clang?  Any success reports from other than
> Linux?

It is built on different number of configurations in
https://travis-ci.com/OSGeo/proj.4/
and
https://travis-ci.com/OSGeo/gdal

Including clang and macosx

Windows Visual Studio builds also per
https://ci.appveyor.com/project/OSGeo/proj-4/history

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Tue Feb 26 07:32:10 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 26 Feb 2019 15:32:10 +0000
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <9580952.6TzSNTWTH5@even-i700>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <1748575.j6K3p2yCBR@even-i700> <smuimx6ppfn.fsf@linuxpal.mit.edu>
 <9580952.6TzSNTWTH5@even-i700>
Message-ID: <E266EA0A-E614-4682-A332-D90322E8476D@sdfe.dk>

Are we at a point now where we say if this is a problem local to Greg’s setup
or if this is a general problem in PROJ that needs fixing?

/Kristian

> On 26 Feb 2019, at 16:09, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> (The machine also has gcc 6 installed, in a different prefix, but no older
>> versions.)
>> 
>> I would hope that proj builds ok with gcc 4.8; haven't tried yet.
> 
> It does.
> 
>> 
>>> If that's indeed the only file to fail compilation, I'd suggest you try
>>> tweaking the start of the file to comment out the #define _XOPEN_SOURCE
>>> 500
>>> and/or #define _GNU_SOURCE
>> 
>> That was the only one.  It makes sense then that the --std flag is not
>> the issue.  Thanks for those hints - I had forgotten about
>> _XOPEN_SOURCE, but now that I remember about definition visibility
>> controls it sounds promising.
>> 
>> 
>> 
>> Has anyone built proj 6 with clang?  Any success reports from other than
>> Linux?
> 
> It is built on different number of configurations in
> https://travis-ci.com/OSGeo/proj.4/
> and
> https://travis-ci.com/OSGeo/gdal
> 
> Including clang and macosx
> 
> Windows Visual Studio builds also per
> https://ci.appveyor.com/project/OSGeo/proj-4/history
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From even.rouault at spatialys.com  Tue Feb 26 07:41:56 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Feb 2019 16:41:56 +0100
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <E266EA0A-E614-4682-A332-D90322E8476D@sdfe.dk>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <9580952.6TzSNTWTH5@even-i700> <E266EA0A-E614-4682-A332-D90322E8476D@sdfe.dk>
Message-ID: <5193627.PSiXa4fzK6@even-i700>

On mardi 26 février 2019 15:32:10 CET Kristian Evers wrote:
> Are we at a point now where we say if this is a problem local to Greg’s
> setup or if this is a general problem in PROJ that needs fixing?

Might be a problem that only occurs on NetBSD.
I'm downloading an installation DVD, and will try to setup a VM to see if I 
can reproduce, but I'm a noob in NetBSD...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Tue Feb 26 08:45:40 2019
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 26 Feb 2019 16:45:40 +0000
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <E266EA0A-E614-4682-A332-D90322E8476D@sdfe.dk>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <1748575.j6K3p2yCBR@even-i700> <smuimx6ppfn.fsf@linuxpal.mit.edu>
 <9580952.6TzSNTWTH5@even-i700> <E266EA0A-E614-4682-A332-D90322E8476D@sdfe.dk>
Message-ID: <F5508871-F075-40A9-9955-E02950CC94D2@lexort.com>

I won't have time to look until tonight, but I suspect this is either a portability issue in proj or a header issue in netbsd.  It seems premature to decide it isn't proj without a bit more investigation.  But I'm not clear on thr release timeline.

But I will look tonight
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190226/a347b39b/attachment.html>

From even.rouault at spatialys.com  Tue Feb 26 09:47:04 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Feb 2019 18:47:04 +0100
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <5193627.PSiXa4fzK6@even-i700>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <E266EA0A-E614-4682-A332-D90322E8476D@sdfe.dk> <5193627.PSiXa4fzK6@even-i700>
Message-ID: <2557003.Je2LHAFlYC@even-i700>

On mardi 26 février 2019 16:41:56 CET Even Rouault wrote:
> On mardi 26 février 2019 15:32:10 CET Kristian Evers wrote:
> > Are we at a point now where we say if this is a problem local to Greg’s
> > setup or if this is a general problem in PROJ that needs fixing?
> 
> Might be a problem that only occurs on NetBSD.
> I'm downloading an installation DVD, and will try to setup a VM to see if I
> can reproduce, but I'm a noob in NetBSD...

Was a bit painful as expected, but I managed to reproduce the issue. Removing 
#define _XOPEN_SOURCE 500 fixes the issue on netBSD 8, and it doesn't seem to 
hurt on Linux as well. https://github.com/OSGeo/proj.4/pull/1293 in progress 
to check this. I suspect this might have been useful when this was a .c file, 
but no longer as a .cpp one.

When running the test suite, I had a small tolerance issue in gie tests 
addressed by relaxing it in the PR.

The C++ unit tests also fail on io.wkt_parsing_with_parenthesis. I've been 
unable to determine the cause. Presumably the use of non-ASCII characters in 
hexadecimal form. Not sure why this would be netBSD specific... But this is is 
really a non-critical test.

Note: gmake and not make is required on netBSD, since we have apparently some 
gnu'ism in particular to build proj.db or run the test suite

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Feb 26 10:42:58 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Feb 2019 19:42:58 +0100
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <2557003.Je2LHAFlYC@even-i700>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <5193627.PSiXa4fzK6@even-i700> <2557003.Je2LHAFlYC@even-i700>
Message-ID: <2905133.vmJsg9JOLr@even-i700>

> The C++ unit tests also fail on io.wkt_parsing_with_parenthesis. I've been
> unable to determine the cause. Presumably the use of non-ASCII characters in
> hexadecimal form. Not sure why this would be netBSD specific... But this is
> is really a non-critical test.

Actually was a misuse of isspace() on non-ASCII characters. Could have shown 
up on other platforms as well. Just fixed in the
https://github.com/OSGeo/proj.4/pull/1293 as well

Now 'gmake check' passes on netBSD 8

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Tue Feb 26 11:37:19 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 26 Feb 2019 19:37:19 +0000
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <2905133.vmJsg9JOLr@even-i700>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <5193627.PSiXa4fzK6@even-i700> <2557003.Je2LHAFlYC@even-i700>
 <2905133.vmJsg9JOLr@even-i700>
Message-ID: <95E4198E-4C9D-4272-ABAC-7849B598004F@sdfe.dk>

Nice work, Even! I’ll put out RC4 once the CI tests has run. Hopefully this will be the last one :-)

/Kristian

> On 26 Feb 2019, at 19:42, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> The C++ unit tests also fail on io.wkt_parsing_with_parenthesis. I've been
>> unable to determine the cause. Presumably the use of non-ASCII characters in
>> hexadecimal form. Not sure why this would be netBSD specific... But this is
>> is really a non-critical test.
> 
> Actually was a misuse of isspace() on non-ASCII characters. Could have shown 
> up on other platforms as well. Just fixed in the
> https://github.com/OSGeo/proj.4/pull/1293 as well
> 
> Now 'gmake check' passes on netBSD 8
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From kreve at sdfe.dk  Tue Feb 26 13:18:59 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 26 Feb 2019 21:18:59 +0000
Subject: [PROJ] PROJ 6.0.0RC4
Message-ID: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>

Following the issues reported with NetBSD builds I have just uploaded PROJ 6.0.0RC4.
Thanks to Even for cracking this one so quickly!

Links are here:

https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz (https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz.md5)
https://download.osgeo.org/proj/proj-6.0.0RC4.zip (https://download.osgeo.org/proj/proj-6.0.0RC4.zip.md5)

I would appreciate swift feedback from those who experienced build failures with RC3,
so that we have amble time for a PSC vote before the scheduled release on Friday.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190226/dfbe9751/attachment.html>

From gdt at lexort.com  Tue Feb 26 15:55:08 2019
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 26 Feb 2019 18:55:08 -0500
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <2905133.vmJsg9JOLr@even-i700> (Even Rouault's message of "Tue,
 26 Feb 2019 19:42:58 +0100")
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <5193627.PSiXa4fzK6@even-i700> <2557003.Je2LHAFlYC@even-i700>
 <2905133.vmJsg9JOLr@even-i700>
Message-ID: <smua7iinm03.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

>> The C++ unit tests also fail on io.wkt_parsing_with_parenthesis. I've been
>> unable to determine the cause. Presumably the use of non-ASCII characters in
>> hexadecimal form. Not sure why this would be netBSD specific... But this is
>> is really a non-critical test.
>
> Actually was a misuse of isspace() on non-ASCII characters. Could have shown 
> up on other platforms as well. Just fixed in the
> https://github.com/OSGeo/proj.4/pull/1293 as well

NetBSD's toupper/isspace/etc. functions are believed to be standards
compliant but are somewhat unforgiving when called out of bounds.  So it
makes sense that such a problem showed up there first.

> Now 'gmake check' passes on netBSD 8

I just updated to RC4 and rebuilt.  "make test" in pkgsrc, which runs
"gmake check" in proj, passed.

There are new files and missing files relative to 5.2.0, but that's
expected and I'll be going through that.  I'll also test the pkgsrc
build on mac and on older NetBSD and i386 and earmv7.

Thanks for doing the install and debugging this before I got to it!





The "test ==" problem in configure is still present.  I actually patched
configure instead, so as not to regenerate it, but this is the change
backported to configure.ac

--- configure.ac.~1~	2019-02-12 14:45:37.000000000 -0500
+++ configure.ac	2019-02-26 18:35:01.003470043 -0500
@@ -326,7 +326,7 @@
             AS_HELP_STRING([--with-external-gtest],
                [Whether to use external Google Test]),,)
 
-if test "x$with_external_gtest" == "xyes" ; then
+if test "x$with_external_gtest" = "xyes" ; then
     AC_MSG_RESULT([using external GTest.])
     PKG_CHECK_MODULES([GTEST], [gtest >= 1.8.0])
 else
@@ -334,7 +334,7 @@
     GTEST_CFLAGS="-I\$(top_srcdir)/test/googletest/include"
     GTEST_LIBS="\$(top_builddir)/test/googletest/libgtest.la"
 fi
-AM_CONDITIONAL(USE_EXTERNAL_GTEST, [test "x$with_external_gtest" == "xyes"])
+AM_CONDITIONAL(USE_EXTERNAL_GTEST, [test "x$with_external_gtest" = "xyes"])
 AC_SUBST(GTEST_CFLAGS,$GTEST_CFLAGS)
 AC_SUBST(GTEST_LIBS,$GTEST_LIBS)
 

From gdt at lexort.com  Tue Feb 26 16:00:31 2019
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 26 Feb 2019 19:00:31 -0500
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <2557003.Je2LHAFlYC@even-i700> (Even Rouault's message of "Tue,
 26 Feb 2019 18:47:04 +0100")
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <E266EA0A-E614-4682-A332-D90322E8476D@sdfe.dk>
 <5193627.PSiXa4fzK6@even-i700> <2557003.Je2LHAFlYC@even-i700>
Message-ID: <smu4l8qnlr4.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

> On mardi 26 février 2019 16:41:56 CET Even Rouault wrote:
>> Might be a problem that only occurs on NetBSD.
>> I'm downloading an installation DVD, and will try to setup a VM to see if I
>> can reproduce, but I'm a noob in NetBSD...
>
> Was a bit painful as expected, but I managed to reproduce the issue. Removing 
> #define _XOPEN_SOURCE 500 fixes the issue on netBSD 8, and it doesn't seem to 
> hurt on Linux as well. https://github.com/OSGeo/proj.4/pull/1293 in progress 
> to check this. I suspect this might have been useful when this was a .c file, 
> but no longer as a .cpp one.

As I understand things, somewhat fuzzily, once you turn on
_XOPEN_SOURCE, then definitions not specific by xopen are hidden.  So
one might also have to turn on some POSIX visibility function, or some
other one.  Without any, pretty much everything is visible.

> When running the test suite, I had a small tolerance issue in gie tests 
> addressed by relaxing it in the PR.

I wonder if this is about 64 vs 80 bit doubles or about libm functions.
I have run Kahan's paranoia which passes without issues.

But if you are comfortable with slightly increased tolerances, that's
fine.

> The C++ unit tests also fail on io.wkt_parsing_with_parenthesis. I've been 
> unable to determine the cause. Presumably the use of non-ASCII characters in 
> hexadecimal form. Not sure why this would be netBSD specific... But this is is 
> really a non-critical test.

(I see your followup.)

> Note: gmake and not make is required on netBSD, since we have apparently some 
> gnu'ism in particular to build proj.db or run the test suite

The pkgsrc entry is already coded to require GNU make, so I didn't even
try with the native BSD make.

From gdt at lexort.com  Tue Feb 26 16:47:03 2019
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 26 Feb 2019 19:47:03 -0500
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk> (Kristian Evers's
 message of "Tue, 26 Feb 2019 21:18:59 +0000")
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
Message-ID: <smuzhqikqgo.fsf@linuxpal.mit.edu>

Thanks for addressing the issues so fast.

Restating, RC4 builds and passes gmake check on NetBSD 8 amd64, except
for the two test == cases.

pkgsrc, for better or for worse, maintains a list of installed files
("PLIST") to ensure that the build behaved as expected, as part of an
attempt to get more reproducible builds.  I adjusted the PLIST for
everything I saw that was in NEWS.

I also adjusted the unpacked of datumgrids into data/ instead of nad/.
I see the instructions tell people to unpack to the installed directory.
I unpack to the source directory and let it be installed.  So it's fine
not to be mentioned, but I thought I'd mention it.

My discrepancy list follows.  The first four seem to be files removed
from the included datumgrids, and I wonder if that's the plan.  (And if
so, if it merits being in NEWS.)

The header files look like they are intended to be installed, but given
that there are in 5.2.0 4 header files installed with 1 deprecated, I
wanted to check.   Is this list of files "Added C++ API exposing
ISO19111 functionality" from NEWS?


ERROR: ************************************************************
ERROR: The following files are in the PLIST but not in /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg:
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/share/proj/IGNF
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/share/proj/epsg
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/share/proj/esri
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/share/proj/esri.extra
ERROR: ************************************************************
ERROR: The following files are in /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg but not in the PLIST:
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/common.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/coordinateoperation.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/coordinatesystem.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/crs.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/datum.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/io.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/metadata.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/nn.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj/util.hpp
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj_constants.h
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj_experimental.h
ERROR:         /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/include/proj_symbol_rename.h

From even.rouault at spatialys.com  Wed Feb 27 00:10:28 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Feb 2019 09:10:28 +0100
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <smua7iinm03.fsf@linuxpal.mit.edu>
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <2905133.vmJsg9JOLr@even-i700> <smua7iinm03.fsf@linuxpal.mit.edu>
Message-ID: <6311596.16H2yR14db@even-i700>

> The "test ==" problem in configure is still present. 

Ah, I had actually missed that comment since it worked just fine with a manual 
build (that is outside of the packaging infrastructure you use)
I've just captured that in https://github.com/OSGeo/proj.4/pull/1295
Do not hesitate to submit a PR another time

even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Feb 27 00:15:03 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Feb 2019 09:15:03 +0100
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <smuzhqikqgo.fsf@linuxpal.mit.edu>
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
 <smuzhqikqgo.fsf@linuxpal.mit.edu>
Message-ID: <2873067.jnIxQBoLGa@even-i700>

> My discrepancy list follows.  The first four seem to be files removed
> from the included datumgrids, and I wonder if that's the plan.  (And if
> so, if it merits being in NEWS.)

Yes, those removals are intended.
But I don't see the addition of the new proj.db file (but I assume you took it 
into account since it is mentionned in NEWS). This is critical to have it 
installed in $prefix/share/proj

> 
> The header files look like they are intended to be installed, but given
> that there are in 5.2.0 4 header files installed with 1 deprecated, I
> wanted to check.   Is this list of files "Added C++ API exposing
> ISO19111 functionality" from NEWS?

Yes all .h and .hpp files you mention below should be installed

> 
> 
> ERROR: ************************************************************
> ERROR: The following files are in the PLIST but not in
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg:
> ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/sha
> re/proj/IGNF ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/sha
> re/proj/epsg ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/sha
> re/proj/esri ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/sha
> re/proj/esri.extra ERROR:
> ************************************************************ ERROR: The
> following files are in
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg but
> not in the PLIST: ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/common.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/coordinateoperation.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/coordinatesystem.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/crs.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/datum.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/io.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/metadata.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/nn.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj/util.hpp ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj_constants.h ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj_experimental.h ERROR:        
> /home/n0/gdt/pkgsrc-current/pkgsrc/geography/proj/work/.destdir/usr/pkg/inc
> lude/proj_symbol_rename.h _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From quantum.analyst at gmail.com  Wed Feb 27 01:43:35 2019
From: quantum.analyst at gmail.com (Elliott Sales de Andrade)
Date: Wed, 27 Feb 2019 04:43:35 -0500
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
Message-ID: <CAJP_izc1hHu8jHqQSAF-TYn_wOjLKY9RAD=ta7VzKNdBCCFp2g@mail.gmail.com>

On Tue, 26 Feb 2019 at 16:19, Kristian Evers <kreve at sdfe.dk> wrote:
>
> Following the issues reported with NetBSD builds I have just uploaded PROJ 6.0.0RC4.
> Thanks to Even for cracking this one so quickly!
>
> Links are here:
>
> https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz (https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz.md5)
> https://download.osgeo.org/proj/proj-6.0.0RC4.zip (https://download.osgeo.org/proj/proj-6.0.0RC4.zip.md5)
>

With these versions, all the build failures I saw are fixed, and it
scratch builds on all Fedora systems:
https://koji.fedoraproject.org/koji/taskinfo?taskID=33077369

Locally, if I install all released regional datumgrid tarballs, then
the build is fine. However, if I install
proj-datumgrid-north-america-1.2RC2, then I see the following failure
(it is okay with 1.1, maybe because the required file is not in
there):

============================================
Running ../../test/cli/testntv2 using ../../src/cs2cs:
============================================
doing tests into file ntv2_out, please wait
diff ntv2_out with ntv2_out.dist
10c10
< 111d00'00.000"W 46d00'00.000"N 0.0    111d0'3.1897"W    45d59'59.7489"N 0.000
---
> 111d00'00.000"W 46d00'00.000"N 0.0    111d0'3.1549"W    45d59'59.7528"N 0.000

> I would appreciate swift feedback from those who experienced build failures with RC3,
> so that we have amble time for a PSC vote before the scheduled release on Friday.
>
> /Kristian

-- 
Elliott

From kreve at sdfe.dk  Wed Feb 27 01:56:33 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 27 Feb 2019 09:56:33 +0000
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <CAJP_izc1hHu8jHqQSAF-TYn_wOjLKY9RAD=ta7VzKNdBCCFp2g@mail.gmail.com>
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
 <CAJP_izc1hHu8jHqQSAF-TYn_wOjLKY9RAD=ta7VzKNdBCCFp2g@mail.gmail.com>
Message-ID: <5525B259-827B-4C81-B249-959F39E8CFFB@sdfe.dk>



> On 27 Feb 2019, at 10:43, Elliott Sales de Andrade <quantum.analyst at gmail.com> wrote:
> 
> On Tue, 26 Feb 2019 at 16:19, Kristian Evers <kreve at sdfe.dk> wrote:
>> 
>> Following the issues reported with NetBSD builds I have just uploaded PROJ 6.0.0RC4.
>> Thanks to Even for cracking this one so quickly!
>> 
>> Links are here:
>> 
>> https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz (https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz.md5)
>> https://download.osgeo.org/proj/proj-6.0.0RC4.zip (https://download.osgeo.org/proj/proj-6.0.0RC4.zip.md5)
>> 
> 
> With these versions, all the build failures I saw are fixed, and it
> scratch builds on all Fedora systems:
> https://koji.fedoraproject.org/koji/taskinfo?taskID=33077369
> 
> Locally, if I install all released regional datumgrid tarballs, then
> the build is fine. However, if I install
> proj-datumgrid-north-america-1.2RC2, then I see the following failure
> (it is okay with 1.1, maybe because the required file is not in
> there):

On the CI targets we only run tests with the main grid package installed,
so this is likely because a better transformation is picked up when the
regional grids are available. I wouldn’t worry about this error.

/Kristian

> 
> ============================================
> Running ../../test/cli/testntv2 using ../../src/cs2cs:
> ============================================
> doing tests into file ntv2_out, please wait
> diff ntv2_out with ntv2_out.dist
> 10c10
> < 111d00'00.000"W 46d00'00.000"N 0.0    111d0'3.1897"W    45d59'59.7489"N 0.000
> ---
>> 111d00'00.000"W 46d00'00.000"N 0.0    111d0'3.1549"W    45d59'59.7528"N 0.000
> 
>> I would appreciate swift feedback from those who experienced build failures with RC3,
>> so that we have amble time for a PSC vote before the scheduled release on Friday.
>> 
>> /Kristian
> 
> -- 
> Elliott
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From even.rouault at spatialys.com  Wed Feb 27 02:00:49 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Feb 2019 11:00:49 +0100
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <CAJP_izc1hHu8jHqQSAF-TYn_wOjLKY9RAD=ta7VzKNdBCCFp2g@mail.gmail.com>
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
 <CAJP_izc1hHu8jHqQSAF-TYn_wOjLKY9RAD=ta7VzKNdBCCFp2g@mail.gmail.com>
Message-ID: <1937514.XVuGVjUfbV@even-i700>

On mercredi 27 février 2019 04:43:35 CET Elliott Sales de Andrade wrote:
> On Tue, 26 Feb 2019 at 16:19, Kristian Evers <kreve at sdfe.dk> wrote:
> > Following the issues reported with NetBSD builds I have just uploaded PROJ
> > 6.0.0RC4. Thanks to Even for cracking this one so quickly!
> > 
> > Links are here:
> > 
> > https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz
> > (https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz.md5)
> > https://download.osgeo.org/proj/proj-6.0.0RC4.zip
> > (https://download.osgeo.org/proj/proj-6.0.0RC4.zip.md5)
> With these versions, all the build failures I saw are fixed, and it
> scratch builds on all Fedora systems:
> https://koji.fedoraproject.org/koji/taskinfo?taskID=33077369
> 
> Locally, if I install all released regional datumgrid tarballs, then
> the build is fine. However, if I install
> proj-datumgrid-north-america-1.2RC2, then I see the following failure
> (it is okay with 1.1, maybe because the required file is not in
> there):

Yes, that's "expected". testntv2 requires base proj-datumgrid (all CI setups 
install proj-datumgrid only), but is going to react differently if other extra 
grids are installed.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From quantum.analyst at gmail.com  Wed Feb 27 02:16:26 2019
From: quantum.analyst at gmail.com (Elliott Sales de Andrade)
Date: Wed, 27 Feb 2019 05:16:26 -0500
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <1937514.XVuGVjUfbV@even-i700>
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
 <CAJP_izc1hHu8jHqQSAF-TYn_wOjLKY9RAD=ta7VzKNdBCCFp2g@mail.gmail.com>
 <1937514.XVuGVjUfbV@even-i700>
Message-ID: <CAJP_izf-TCub52X64tGORJcmNX_wdQjmXHLjgrAF=baJqp6zxw@mail.gmail.com>

On Wed, 27 Feb 2019 at 05:00, Even Rouault <even.rouault at spatialys.com> wrote:
>
> On mercredi 27 février 2019 04:43:35 CET Elliott Sales de Andrade wrote:
> > On Tue, 26 Feb 2019 at 16:19, Kristian Evers <kreve at sdfe.dk> wrote:
> > > Following the issues reported with NetBSD builds I have just uploaded PROJ
> > > 6.0.0RC4. Thanks to Even for cracking this one so quickly!
> > >
> > > Links are here:
> > >
> > > https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz
> > > (https://download.osgeo.org/proj/proj-6.0.0RC4.tar.gz.md5)
> > > https://download.osgeo.org/proj/proj-6.0.0RC4.zip
> > > (https://download.osgeo.org/proj/proj-6.0.0RC4.zip.md5)
> > With these versions, all the build failures I saw are fixed, and it
> > scratch builds on all Fedora systems:
> > https://koji.fedoraproject.org/koji/taskinfo?taskID=33077369
> >
> > Locally, if I install all released regional datumgrid tarballs, then
> > the build is fine. However, if I install
> > proj-datumgrid-north-america-1.2RC2, then I see the following failure
> > (it is okay with 1.1, maybe because the required file is not in
> > there):
>
> Yes, that's "expected". testntv2 requires base proj-datumgrid (all CI setups
> install proj-datumgrid only), but is going to react differently if other extra
> grids are installed.
>

But testntv2 is only run if ntv2_0.gsb exists, which means it could
only possibly be run with proj-datumgrid-north-america installed. In
other words, it's not reacting *differently*, it's just not reacting
at all. So I'm not saying it's wrong, but CI passing is not proof that
it's right.


--
Elliott

From even.rouault at spatialys.com  Wed Feb 27 02:34:21 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Feb 2019 11:34:21 +0100
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <CAJP_izf-TCub52X64tGORJcmNX_wdQjmXHLjgrAF=baJqp6zxw@mail.gmail.com>
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
 <1937514.XVuGVjUfbV@even-i700>
 <CAJP_izf-TCub52X64tGORJcmNX_wdQjmXHLjgrAF=baJqp6zxw@mail.gmail.com>
Message-ID: <2139469.hVRhfQVcma@even-i700>

> But testntv2 is only run if ntv2_0.gsb exists, which means it could
> only possibly be run with proj-datumgrid-north-america installed. In
> other words, it's not reacting *differently*, it's just not reacting
> at all. So I'm not saying it's wrong, but CI passing is not proof that
> it's right.
> 

Ah you're right. Worth a ticket.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Wed Feb 27 06:30:32 2019
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 27 Feb 2019 09:30:32 -0500
Subject: [PROJ] PROJ 6.0.0RC4
In-Reply-To: <2873067.jnIxQBoLGa@even-i700> (Even Rouault's message of "Wed,
 27 Feb 2019 09:15:03 +0100")
References: <52960C2D-FED9-461C-A607-CB141E3E4764@sdfe.dk>
 <smuzhqikqgo.fsf@linuxpal.mit.edu> <2873067.jnIxQBoLGa@even-i700>
Message-ID: <smulg21l2wn.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

>> My discrepancy list follows.  The first four seem to be files removed
>> from the included datumgrids, and I wonder if that's the plan.  (And if
>> so, if it merits being in NEWS.)
>
> Yes, those removals are intended.
> But I don't see the addition of the new proj.db file (but I assume you took it 
> into account since it is mentionned in NEWS). This is critical to have it 
> installed in $prefix/share/proj

Sorry, what I meant is that I adjusted the list of expected files when
there was a hint in NEWS that it was intended, and what I posted was the
changes that I could not reliably conclude were intended.  I'm just
trying to guard against codifying a platform-specific build bug in the
packaging.

OK, I dropped those four.

>> The header files look like they are intended to be installed, but given
>> that there are in 5.2.0 4 header files installed with 1 deprecated, I
>> wanted to check.   Is this list of files "Added C++ API exposing
>> ISO19111 functionality" from NEWS?
>
> Yes all .h and .hpp files you mention below should be installed

OK, I added those.  So now 6.0.0RC4 is packaging fine (with the bashism
remediation patch, that I see has been committed on the branch, thanks).
Under pkgsrc, tests pass on macOS 10.13 (and hence x86_64).

proj builds on NetBSD 7 i386 and NetBSD 8 evbearmv7hf-el (RPI3).  There
are some test issues, but so far I suspect they are not proj issues;
I'll follow up when/if I have something useful to say.


I will probably wait a bit after the release to commit it, though,
because I suspect a number depending programs will have issues.  I'm
running a build of all the things I have installed against it now.  I
don't meant to criticize proj by that - there are a lot of not really
maintained packages out there, and any interface removal in a
widely-used package ends up being trouble.

From gdt at lexort.com  Wed Feb 27 06:35:09 2019
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 27 Feb 2019 09:35:09 -0500
Subject: [PROJ] PROJ 6.0.0RC3
In-Reply-To: <6311596.16H2yR14db@even-i700> (Even Rouault's message of "Wed,
 27 Feb 2019 09:10:28 +0100")
References: <9D9E0CDA-CCEC-46F4-A4CA-C744078FC55F@sdfe.dk>
 <2905133.vmJsg9JOLr@even-i700> <smua7iinm03.fsf@linuxpal.mit.edu>
 <6311596.16H2yR14db@even-i700>
Message-ID: <smuh8cpl2oy.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

>> The "test ==" problem in configure is still present. 
>
> Ah, I had actually missed that comment since it worked just fine with a manual 
> build (that is outside of the packaging infrastructure you use)

That is probably because that chunk didn't even get run due to some
enclosing if.  NetBSD's /bin/sh produces an error on == within test.
Yes, we have a lint-type check to proactively look for this to avoid
failures on other of the many systems pkgsrc runs on, when testing on
one of them.

> I've just captured that in https://github.com/OSGeo/proj.4/pull/1295

As you say I have a patch in pkgsrc and the fix will be in 6.0.1 or
whatever, which seems likely in a month or two as people who didn't
pre-test actually try the release and a few minor fixes accumulate.

> Do not hesitate to submit a PR another time

Thanks, and noted.

From kreve at sdfe.dk  Wed Feb 27 08:14:14 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 27 Feb 2019 16:14:14 +0000
Subject: [PROJ] Promotion of PROJ 6.0.0RC4 to final release
Message-ID: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>

PSC members,

Since only minor issues were found in PROJ 6.0.0RC4 I hereby
call a vote for promotion of the release candidate to the final
release. As per the PSC guidelines voting will be open for the
next 48 hours, so please cast your votes within that timeframe.
If the vote passes I will upload the final release on Friday the 1st
of March.

I will start with my +1.

The minor issues reported for RC4 will be dealt with in an upcoming bug fix release.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190227/8e5c84e4/attachment.html>

From even.rouault at spatialys.com  Wed Feb 27 08:16:56 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Feb 2019 17:16:56 +0100
Subject: [PROJ] Promotion of PROJ 6.0.0RC4 to final release
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>
Message-ID: <1708839.Q6kqqZEMCQ@even-i700>

On mercredi 27 février 2019 16:14:14 CET Kristian Evers wrote:
> PSC members,
> 
> Since only minor issues were found in PROJ 6.0.0RC4 I hereby
> call a vote for promotion of the release candidate to the final
> release. As per the PSC guidelines voting will be open for the
> next 48 hours, so please cast your votes within that timeframe.
> If the vote passes I will upload the final release on Friday the 1st
> of March.
> 
> I will start with my +1.

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Wed Feb 27 08:17:39 2019
From: howard at hobu.co (Howard Butler)
Date: Wed, 27 Feb 2019 10:17:39 -0600
Subject: [PROJ] Promotion of PROJ 6.0.0RC4 to final release
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>
Message-ID: <33A8C728-8737-4B0E-AF07-B706CFB35F23@hobu.co>



> On Feb 27, 2019, at 10:14 AM, Kristian Evers <kreve at sdfe.dk> wrote:
> 
> PSC members,
>  
> Since only minor issues were found in PROJ 6.0.0RC4 I hereby
> call a vote for promotion of the release candidate to the final
> release. As per the PSC guidelines voting will be open for the
> next 48 hours, so please cast your votes within that timeframe.
> If the vote passes I will upload the final release on Friday the 1st
> of March.
>  
> I will start with my +1.


:shipit:

+1 Howard

> The minor issues reported for RC4 will be dealt with in an upcoming bug fix release.

Can we schedule a 6.0.1 for April 15th or so to let things settle and bugs and fixes accumulate? People don't really test things until after a release :)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190227/ca4c9057/attachment-0001.html>

From howard at hobu.co  Wed Feb 27 08:37:18 2019
From: howard at hobu.co (Howard Butler)
Date: Wed, 27 Feb 2019 10:37:18 -0600
Subject: [PROJ] Incubate PROJ as an OSGeo Project?
Message-ID: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>

All,

PROJ is now rather healthy from a project management and release perspective, but it has been somewhat on its own in terms of project support. If we were to incubate into OSGeo, we as a project might enjoy some other benefits that we do not have access to:

* Foundation financial sponsorship for project needs (continuous integration, sprint travel, etc)
* Codification of project management principles (outlined in RFC 1 [1], which are OSGeo-compatible already)
* Access to shared infrastructure (we use OSGeo for download support and mailing list, with GitHub, AppVeyor, and Travis for everything else)

Michael Smith, Treasurer of OSGeo, has offered to mentor the PROJ project through OSGeo incubation. PROJ is already a pseudo-project under the OSGeo MetaCRS effort, and this activity would break that linkage and promote PROJ to a full OSGeo project. 

At this point, I think incubation into OSGeo is a fairly innocuous and reasonable thing for the PROJ project to undertake, but I would like to gauge the community's enthusiasm for such a thing. I don't see any significant downsides to doing so. Do you?

[1] https://proj4.org/community/rfc/rfc-1.html

From charles at karney.com  Wed Feb 27 08:50:19 2019
From: charles at karney.com (Charles Karney)
Date: Wed, 27 Feb 2019 11:50:19 -0500
Subject: [PROJ] Promotion of PROJ 6.0.0RC4 to final release
In-Reply-To: <33A8C728-8737-4B0E-AF07-B706CFB35F23@hobu.co>
References: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>
 <33A8C728-8737-4B0E-AF07-B706CFB35F23@hobu.co>
Message-ID: <CAH36mb_84db8Ymk_3gt3ZeKDCB70m6A56toW=G9kGpUZqzCTvg@mail.gmail.com>

+1 for me

On Wed, Feb 27, 2019 at 11:17 AM Howard Butler <howard at hobu.co> wrote:
>
>
>
> On Feb 27, 2019, at 10:14 AM, Kristian Evers <kreve at sdfe.dk> wrote:
>
> PSC members,
>
> Since only minor issues were found in PROJ 6.0.0RC4 I hereby
> call a vote for promotion of the release candidate to the final
> release. As per the PSC guidelines voting will be open for the
> next 48 hours, so please cast your votes within that timeframe.
> If the vote passes I will upload the final release on Friday the 1st
> of March.
>
> I will start with my +1.
>
>
>
> :shipit:
>
> +1 Howard
>
> The minor issues reported for RC4 will be dealt with in an upcoming bug fix release.
>
>
> Can we schedule a 6.0.1 for April 15th or so to let things settle and bugs and fixes accumulate? People don't really test things until after a release :)
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj



-- 
Charles Karney <charles at karney.com>
Princeton, NJ 08540

From even.rouault at spatialys.com  Wed Feb 27 11:22:41 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Feb 2019 20:22:41 +0100
Subject: [PROJ] Incubate PROJ as an OSGeo Project?
In-Reply-To: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>
References: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>
Message-ID: <2530671.d8kRQxiHZd@even-i700>

On mercredi 27 février 2019 10:37:18 CET Howard Butler wrote:
> All,
> 
> PROJ is now rather healthy from a project management and release
> perspective, but it has been somewhat on its own in terms of project
> support. If we were to incubate into OSGeo, we as a project might enjoy
> some other benefits that we do not have access to:
> 
> * Foundation financial sponsorship for project needs (continuous
> integration, sprint travel, etc) * Codification of project management
> principles (outlined in RFC 1 [1], which are OSGeo-compatible already) *
> Access to shared infrastructure (we use OSGeo for download support and
> mailing list, with GitHub, AppVeyor, and Travis for everything else)
> 
> Michael Smith, Treasurer of OSGeo, has offered to mentor the PROJ project
> through OSGeo incubation. PROJ is already a pseudo-project under the OSGeo
> MetaCRS effort, and this activity would break that linkage and promote PROJ
> to a full OSGeo project.
> 
> At this point, I think incubation into OSGeo is a fairly innocuous and
> reasonable thing for the PROJ project to undertake, but I would like to
> gauge the community's enthusiasm for such a thing. I don't see any
> significant downsides to doing so. Do you?

I'd be supportive of such a move. PROJ is a foundation of a number of other C/
C++ OSGeo projects (GDAL, PostGIS, QGIS, MapServer, GRASS, etc.). It is open 
source, geospatial, operates in a collaborative way, has a diverse community, 
etc., so a good fit for graduating as a OSGeo project.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Wed Feb 27 11:31:13 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 27 Feb 2019 20:31:13 +0100
Subject: [PROJ] Incubate PROJ as an OSGeo Project?
In-Reply-To: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>
References: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>
Message-ID: <415a8a2d-7f63-a494-b7bf-99dd4a91ad74@xs4all.nl>

On 2/27/19 5:37 PM, Howard Butler wrote:
> At this point, I think incubation into OSGeo is a fairly innocuous and reasonable thing for the PROJ project to undertake, but I would like to gauge the community's enthusiasm for such a thing.

Wasn't that already the plan, as mentioned by Kristian back in August:

 https://lists.osgeo.org/pipermail/metacrs/2018-August/000989.html

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From Michael.Smith at erdc.dren.mil  Wed Feb 27 11:35:44 2019
From: Michael.Smith at erdc.dren.mil (Smith, Michael ERDC-RDE-CRREL-NH CIV)
Date: Wed, 27 Feb 2019 19:35:44 +0000
Subject: [PROJ] [Non-DoD Source] Re: Incubate PROJ as an OSGeo Project?
In-Reply-To: <415a8a2d-7f63-a494-b7bf-99dd4a91ad74@xs4all.nl>
References: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>
 <415a8a2d-7f63-a494-b7bf-99dd4a91ad74@xs4all.nl>
Message-ID: <C862D4F1-324E-408E-AE7C-C9BF840404CD@erdc.dren.mil>

That was the stated intention, I was just working to move the process along.

Mike


--
Michael Smith
OSGeo Foundation Treasurer
treasurer at osgeo.org


﻿-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Sebastiaan Couwenberg <sebastic at xs4all.nl>
Date: Wednesday, February 27, 2019 at  2:32 PM
To: "proj at lists.osgeo.org" <proj at lists.osgeo.org>
Subject: [Non-DoD Source] Re: [PROJ] Incubate PROJ as an OSGeo Project?
Resent-From: Michael Smith <michael.smith at usace.army.mil>
Resent-Date: Wednesday, February 27, 2019 at  2:31 PM

    On 2/27/19 5:37 PM, Howard Butler wrote:
    > At this point, I think incubation into OSGeo is a fairly innocuous and reasonable thing for the PROJ project to undertake, but I would like to gauge the community's enthusiasm for such a thing.
    
    Wasn't that already the plan, as mentioned by Kristian back in August:
    
     BlockedBlockedhttps://lists.osgeo.org/pipermail/metacrs/2018-August/000989.htmlBlocked
    
    Kind Regards,
    
    Bas
    
    -- 
     GPG Key ID: 4096R/6750F10AE88D4AF1
    Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
    _______________________________________________
    PROJ mailing list
    PROJ at lists.osgeo.org
    BlockedBlockedhttps://lists.osgeo.org/mailman/listinfo/projBlocked
    


From michael.smith.erdc at gmail.com  Wed Feb 27 11:36:44 2019
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Wed, 27 Feb 2019 14:36:44 -0500
Subject: [PROJ] [Non-DoD Source] Re: Incubate PROJ as an OSGeo Project?
In-Reply-To: <415a8a2d-7f63-a494-b7bf-99dd4a91ad74@xs4all.nl>
References: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>
 <415a8a2d-7f63-a494-b7bf-99dd4a91ad74@xs4all.nl>
Message-ID: <4E20D13C-3633-4768-8871-A3E810046923@gmail.com>

That was the stated intention, I was just working to move the process along.

Mike


--
Michael Smith
OSGeo Foundation Treasurer
treasurer at osgeo.org



﻿-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Sebastiaan Couwenberg <sebastic at xs4all.nl>
Date: Wednesday, February 27, 2019 at  2:32 PM
To: "proj at lists.osgeo.org" <proj at lists.osgeo.org>
Subject: [Non-DoD Source] Re: [PROJ] Incubate PROJ as an OSGeo Project?
Resent-From: Michael Smith <michael.smith at usace.army.mil>
Resent-Date: Wednesday, February 27, 2019 at  2:31 PM

    On 2/27/19 5:37 PM, Howard Butler wrote:
    > At this point, I think incubation into OSGeo is a fairly innocuous and reasonable thing for the PROJ project to undertake, but I would like to gauge the community's enthusiasm for such a thing.
    
    Wasn't that already the plan, as mentioned by Kristian back in August:
    
     BlockedBlockedhttps://lists.osgeo.org/pipermail/metacrs/2018-August/000989.htmlBlocked
    
    Kind Regards,
    
    Bas
    
    -- 
     GPG Key ID: 4096R/6750F10AE88D4AF1
    Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
    _______________________________________________
    PROJ mailing list
    PROJ at lists.osgeo.org
    BlockedBlockedhttps://lists.osgeo.org/mailman/listinfo/projBlocked
    



From kreve at sdfe.dk  Wed Feb 27 13:15:33 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 27 Feb 2019 21:15:33 +0000
Subject: [PROJ] [Non-DoD Source] Re: Incubate PROJ as an OSGeo Project?
In-Reply-To: <4E20D13C-3633-4768-8871-A3E810046923@gmail.com>
References: <FCF71272-4553-428B-A8AC-74BB7DA60399@hobu.co>
 <415a8a2d-7f63-a494-b7bf-99dd4a91ad74@xs4all.nl>
 <4E20D13C-3633-4768-8871-A3E810046923@gmail.com>
Message-ID: <DF6D8A4B-0E47-469E-AA96-BAD513FFF23D@sdfe.dk>

It was indeed my intention to get the incubation process started
last year but I never really found the time to do so. It was my
intention to pick it up after the 6.0 release, so I am glad that
Mike and Howard has taken this up again. I am of course in
favour of PROJ becoming a proper OSGeo project.

/Kristian

> On 27 Feb 2019, at 20:36, Michael Smith <michael.smith.erdc at gmail.com> wrote:
> 
> That was the stated intention, I was just working to move the process along.
> 
> Mike
> 
> 
> --
> Michael Smith
> OSGeo Foundation Treasurer
> treasurer at osgeo.org
> 
> 
> 
> ﻿-----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Sebastiaan Couwenberg <sebastic at xs4all.nl>
> Date: Wednesday, February 27, 2019 at  2:32 PM
> To: "proj at lists.osgeo.org" <proj at lists.osgeo.org>
> Subject: [Non-DoD Source] Re: [PROJ] Incubate PROJ as an OSGeo Project?
> Resent-From: Michael Smith <michael.smith at usace.army.mil>
> Resent-Date: Wednesday, February 27, 2019 at  2:31 PM
> 
>    On 2/27/19 5:37 PM, Howard Butler wrote:
>> At this point, I think incubation into OSGeo is a fairly innocuous and reasonable thing for the PROJ project to undertake, but I would like to gauge the community's enthusiasm for such a thing.
> 
>    Wasn't that already the plan, as mentioned by Kristian back in August:
> 
>     BlockedBlockedhttps://lists.osgeo.org/pipermail/metacrs/2018-August/000989.htmlBlocked
> 
>    Kind Regards,
> 
>    Bas
> 
>    -- 
>     GPG Key ID: 4096R/6750F10AE88D4AF1
>    Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
>    _______________________________________________
>    PROJ mailing list
>    PROJ at lists.osgeo.org
>    BlockedBlockedhttps://lists.osgeo.org/mailman/listinfo/projBlocked
> 
> 
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From knudsen.thomas at gmail.com  Wed Feb 27 23:29:27 2019
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Thu, 28 Feb 2019 08:29:27 +0100
Subject: [PROJ] Promotion of PROJ 6.0.0RC4 to final release
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EAF093321@S000014.PROD.SITAD.DK>
Message-ID: <CAH0YoEO9gWnrDCGzYkR902nY9RUVffjg2W1nsjmQsxG+oEBMpw@mail.gmail.com>

+1 Thomas

Den ons. 27. feb. 2019 kl. 17.14 skrev Kristian Evers <kreve at sdfe.dk>:

> PSC members,
>
>
>
> Since only minor issues were found in PROJ 6.0.0RC4 I hereby
>
> call a vote for promotion of the release candidate to the final
>
> release. As per the PSC guidelines voting will be open for the
>
> next 48 hours, so please cast your votes within that timeframe.
>
> If the vote passes I will upload the final release on Friday the 1st
>
> of March.
>
>
>
> I will start with my +1.
>
>
>
> The minor issues reported for RC4 will be dealt with in an upcoming bug
> fix release.
>
>
>
> /Kristian
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190228/f2106386/attachment.html>

