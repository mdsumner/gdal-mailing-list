From strebe at aol.com  Thu Apr  1 14:08:05 2010
From: strebe at aol.com (strebe at aol.com)
Date: Thu, 01 Apr 2010 17:08:05 -0400
Subject: [Proj] Optimal Albers Standard parallels
In-Reply-To: <4B8264CC.70706@uva.nl>
References: <43EBAC27.A67E.46DF.8B8E.5369260BAF49@aol.com>
	<4B8264CC.70706@uva.nl>
Message-ID: <8CC9FF68E4724E9-41E0-1DC1F@Webmail-m124.sysops.aol.com>


 
Apologies for the long delay in responding. Determining the optimal Lambert azimuthal equal-area is equivalent to solving the "minimum covering circle problem" described here:

http://en.wikipedia.org/wiki/Smallest_circle_problem

Apparently it can be solved in linear time by an algorithm due to Meggido. This is unexpectedly (to me)  efficient. However, I have not examined the algorithm itself yet; technically the optimal LAEA problem is not QUITE the equivalent to the "minimum covering circle problem" unless the latter requires in its solution not only the radius of the circle, but also its location. The radius is irrelevant to the optimal LAEA problem; it is the center point that is required.

Regards,
— daan Strebe


 

 

-----Original Message-----
From: Jan Hartmann <j.l.h.hartmann at uva.nl>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Cc: strebe <strebe at aol.com>
Sent: Mon, Feb 22, 2010 3:04 am
Subject: Re: [Proj] Optimal Albers Standard parallels


  For me, I certainly would be interested in the algorithm.

Jan

On 21-2-2010 20:41, strebe wrote:
  

  
  
Oscar:
  

  
  
>From the publication you cited (http://www.ec-gis.org/sdi/publist/pdfs/annoni-etal2003eur.pdf):
  

  
  
"A simple but useful way of appraising the location of theorigin of an azimuthal projection is to plot a series of concentriccircles of radii z representing the isograms of maximum AngularDeformation and those of Scale Error at the scale of a convenient atlasmap and to shift this overlay about on the map until a good fit isobtained between some of the extreme points of the area of mapped."
  

  
  
While phrased in an unnecessarily complicated way, therecommendation in "Map Projections for Europe" is the equivalent of myrecommendation. You have a bunch of points you know are within the areaof interest. Whether manually (as described in that publication) orprogrammatically, you need to find the smallest small circle thatcircumscribes them all. I don't know of any non-iterative method fordoing that, though possibly one could be devised. As an algorithmicprocess, it is not difficult, but unlike Albers, it is not just amatter of observing the most northerly and most southerly points.
  

  
  
I note that you talk about comparing Albers to LAEA. Once youknow the optimal LAEA you can do that, since the distortion values atthe extremes of the region of interest can be computed by known formulæonce the parameters for the projection are known.
  

  
  
Can I interpret your inquiry to mean that you want to know(presumably in complete detail) the algorithm for finding theprojection center of the optimal LAEA for a region, given a list ofpoints in that region? Or are you just wondering if one could bedevised?
  

  
  
Regards,
  
— daan Strebe
  

  
  
On Feb 21, 2010, at 8:01:56 AM, OvV_HN <ovv at hetnet.nl> wrote:
  
In the article I wasreferring to, the angular deformation and the scale 
error of the Albers and the LAEA projections are compared for the wholeof 
the European Union. The Albers has two standard parallels at 38 and 61d N, 
with a CM at 9 E. The LAEA has its center at 9 E and 53 N.
I got the impression that the author just shifted the LAEA center up and 
down by trial and error until a reasonable comparison could be madewith the 
Albers.
I wondered, could the center of the LAEA projection have been determined 
algorithmically?
Still an academic discussion, of course......
    
    
Oscar van Vlijmen
    
  
  

  
  



_______________________________________________

Proj mailing list

Proj at lists.maptools.org

http://lists.maptools.org/mailman/listinfo/proj

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100401/d8f724c2/attachment.html>

From csbruce at cubewerx.com  Thu Apr  1 15:32:15 2010
From: csbruce at cubewerx.com (Craig Bruce)
Date: Thu, 1 Apr 2010 18:32:15 -0400
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201003312026.02254.geraldi.evenden@gmail.com>
Message-ID: <201004012232.o31MWFKJ020604@tux.cubewerx.com>

"Gerald I. Evenden" <geraldi.evenden at gmail.com> wrote:

> Prey tell, why is someone using %,16g to print out a numbet that is
> rarely, if ever, specified to more 4 to 6 digits? %g would be completely
> adequate and avoid the absurd gyration suggested in the original email.

Sometimes those 4 to 6 digits aren't round in decimal, so %g truncates the
value quite a lot.  When these values are used for subsquent calculations,
the error they contain grows.  Suppose that tiles are requested from
an OGC WMS using one-minute longitude intervals.  If generated using
%g, an example interval would be from 135.067 to 135.083 degrees.
If the application computes the span of this interval (max - min), the
result has only two significant digits (really, log10(16) = 1.2 digits).
Subsequent calculations have an enormous error.  If all sixteen digits
had been used in the WMS BBOX= parameter, the span result still has 11
significant digits.

When doing things like generating GML output, it's most practical
to truncate the numbers to 7 or so digits to reduce the data volume,
depending on the practical accuracy of the data and any transformations
that were applied.  When generating Shapefiles, you get full doubles
whether you want them or not.

In an projlib CRS definition like (proj-4.6.0, "epsg" file):

# NAD27 / Cuba Sur
<2086> +proj=lcc +lat_1=20.71666666666667 +lat_0=20.71666666666667 +lon_0=-76.83333333333333 +k_0=0.99994848 +x_0=500000 +y_0=229126.939 +ellps=clrk66 +datum=NAD27 +units=m +no_defs  <>

what is the accumulated error in the full transformation if lat_1 is
specified to only 4 to 6 digits in the config file instead of 16?  In a
situation like this, the specified value is infinitely precise (defined by
law), so it would be a shame not to represent it as accurately as feasible.

> Of course, the other question is why is the number, apparently from a
> data base, store in binary in the first place?

It isn't.  It's stored in BCD, base 100.  However, it is converted to a
double for processing inside of application programs.  I was saying that
Oracle bizarrely has an off-by-one error in its conversion, but this bug
is suppressed if the error control is always applied.

OTOH, the "epsg" file contains some bizarre off-by-one errors, such as in:

# NAD83 / Mississippi East (ftUS)
<2254> +proj=tmerc +lat_0=29.5 +lon_0=-88.83333333333333 +k=0.9999500000000001 +x_0=300000.0000000001 +y_0=0 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs  <>

The x_0 value here presumably should be the integer 300000 which has
an infinitely precise double representation.  I can't imagine how
the .0000000001 got added to it.  Perhaps MS Access has some strange
BCD->double conversion faults.

> Sorry for the sarcasm but the nature of this non-problem overwhelms me.

The issue is extremely general, not just applying to projection parameters.
Most values pass through systems unchanged, except for the arbitrary
truncations that people apply blindly.  Values that are suspected to
have full source precision (e.g., those which haven't been derived from
complex computations) should remain unmolested, and the 16-digit+error
control approach allows this while suppressing off-by-one eyesores in
converting to text.

--------------------------+----------------------+--------------------------
Dr. Craig S. Bruce        | Ph 819-771-8303 x205 |             CubeWerx Inc.
Senior Software Developer |   Fax 819-771-8388   |  Gatineau, Québec, Canada
csbruce at cubewerx.com      |  http://csbruce.com/ |  http://www.cubewerx.com/
--------------------------+----------------------+--------------------------
           "XML is like violence; if it doesn't solve the problem,
                            just use more of it."


From geraldi.evenden at gmail.com  Thu Apr  1 16:38:28 2010
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Thu, 1 Apr 2010 19:38:28 -0400
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004012232.o31MWFKJ020604@tux.cubewerx.com>
References: <201004012232.o31MWFKJ020604@tux.cubewerx.com>
Message-ID: <201004011938.28921.geraldi.evenden@gmail.com>

On Thursday 01 April 2010 6:32:15 pm Craig Bruce wrote:
> "Gerald I. Evenden" <geraldi.evenden at gmail.com> wrote:
> > Prey tell, why is someone using %,16g to print out a numbet that is
> > rarely, if ever, specified to more 4 to 6 digits? %g would be completely
> > adequate and avoid the absurd gyration suggested in the original email.
>
> Sometimes those 4 to 6 digits aren't round in decimal, so %g truncates the
> value quite a lot. 

Au contraire. When you have a number with few significant figures that have 
trailing zeroes such as "0.999600....000" any format that has sufficient 
width to contain the significant figures will preserve the significance. 
There is no rounding nor trucation problem.

The only hassle occurs when the the fractions are irrational such as pi, then 
there is a problem. But in these situations (and probably others) the 
continual bouncing back and forth between decimal and binary should be 
avoided. I strongly suspect that there is no good reason for it anyway.

As and aside, all the binary to decimal conversion procedures that I have run 
into always round. The only hassles I have seen is when the precision is 
close to the limits of the floating point binary mantissa.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From csbruce at cubewerx.com  Thu Apr  1 17:42:25 2010
From: csbruce at cubewerx.com (Craig Bruce)
Date: Thu, 1 Apr 2010 20:42:25 -0400
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004011938.28921.geraldi.evenden@gmail.com>
Message-ID: <201004020042.o320gP8u003591@tux.cubewerx.com>

"Gerald I. Evenden" <geraldi.evenden at gmail.com> wrote:

> Au contraire. When you have a number with few significant figures that have 
> trailing zeroes such as "0.999600....000" any format that has sufficient 
> width to contain the significant figures will preserve the significance. 
> There is no rounding nor trucation problem.

Obviously, but I'm not talking about specific values that happen to
be round.

> The only hassle occurs when the the fractions are irrational such as pi,
> then there is a problem.

There's also a problem with rational fractions, like 1/60, as I showed
in the WMS example.  You can easily write x = 1/60.0 in a program get a
fully precise value for whatever representation you are using, but you
can't put this expression on the proj command line (AFAIK).

> But in these situations (and probably others) the continual bouncing
> back and forth between decimal and binary should be avoided. I strongly
> suspect that there is no good reason for it anyway.

I agree that it's best to avoid unnecessary conversions, but there are
many interfaces that require text, such as the proj command-line or OGC
web interfaces.  The same issue occurs with the database/application
interface with BCD.  We are forced to obey the interfaces of the various
systems we wish to chain together.

--------------------------+----------------------+--------------------------
Dr. Craig S. Bruce        | Ph 819-771-8303 x205 |             CubeWerx Inc.
Senior Software Developer |   Fax 819-771-8388   |  Gatineau, Québec, Canada
csbruce at cubewerx.com      |  http://csbruce.com/ |  http://www.cubewerx.com/
--------------------------+----------------------+--------------------------
  "Committee, n.: A group of people that, when given the task of deciding
  whether to start array indices from either 0 or 1, compromises to declare
                that they shall start from 0.5." -- unknown


From geraldi.evenden at gmail.com  Fri Apr  2 07:41:17 2010
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Fri, 2 Apr 2010 10:41:17 -0400
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004020042.o320gP8u003591@tux.cubewerx.com>
References: <201004020042.o320gP8u003591@tux.cubewerx.com>
Message-ID: <201004021041.17713.geraldi.evenden@gmail.com>

On Thursday 01 April 2010 8:42:25 pm Craig Bruce wrote:
> "Gerald I. Evenden" <geraldi.evenden at gmail.com> wrote:
> > Au contraire. When you have a number with few significant figures that
> > have trailing zeroes such as "0.999600....000" any format that has
> > sufficient width to contain the significant figures will preserve the
> > significance. There is no rounding nor trucation problem.
>
> Obviously, but I'm not talking about specific values that happen to
> be round.

But this was the example you used in your first example.

> > The only hassle occurs when the the fractions are irrational such as pi,
> > then there is a problem.
>
> There's also a problem with rational fractions, like 1/60, as I showed
> in the WMS example.  You can easily write x = 1/60.0 in a program get a

I'm discussing decimal fractions--- xx.02935729350

> fully precise value for whatever representation you are using, but you
> can't put this expression on the proj command line (AFAIK).

No need to.

> > But in these situations (and probably others) the continual bouncing
> > back and forth between decimal and binary should be avoided. I strongly
> > suspect that there is no good reason for it anyway.
>
> I agree that it's best to avoid unnecessary conversions, but there are
> many interfaces that require text, such as the proj command-line or OGC
> web interfaces.  The same issue occurs with the database/application
> interface with BCD.  We are forced to obey the interfaces of the various
> systems we wish to chain together.

BCD? Binary Coded Decimal? Just that I have not heard the term in maybe 25 
years. Seriously. I am not being sarcastic.

In most cases there is an acceptible precision for representing a number. For 
example pi may only be needed as 3.1415927. It is assumed that zeroes are 
appended indefinitely. As long the the intermediate formating retains a 7 
digit significance, the number will be preserved regardless of binary/decimal 
conversions.

As I recall, the only place you demonstrated precision problems was an example 
that went to full mantissa precision where I admit there may be problems. 
*But* I know of no place in cartography where such precision is required.

Lastly, if one is involved with "round tripping" geographic/Cartesian 
coordinates there will be a problem but this problem more likely to be a 
hassle with the inverse projection nor exactly producing original value in 
addition. Formatting may also create a problem and this is why all my program 
proj versions had a binary pipe so that a round trip could be made without 
going through the formatter. But this round tripping should be avoided at all 
costs.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From csbruce at cubewerx.com  Fri Apr  2 12:52:24 2010
From: csbruce at cubewerx.com (Craig Bruce)
Date: Fri, 2 Apr 2010 15:52:24 -0400
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004021041.17713.geraldi.evenden@gmail.com>
Message-ID: <201004021952.o32JqOUk031749@tux.cubewerx.com>

Gerald I. Evenden <geraldi.evenden at gmail.com> wrote:

> BCD? Binary Coded Decimal? Just that I have not heard the term in maybe
> 25 years. Seriously. I am not being sarcastic.

All the common database systems use BCD to represent the very common
NUMBER data type.  This allows them to represent terminating decimal
fractions exactly and SQL allows numbers to have up to 38 decimal digits.
See the section "Packed decimal numbers" near the bottom of:

http://publib.boulder.ibm.com/infocenter/db2luw/v9r7/index.jsp?topic=/com.ibm.db2.luw.sql.ref.doc/doc/r0001030.html

The down side is that calculations are slower (not preformed directly
by hardware), but this slowness is hidden by the large overhead costs of
database access.

> As I recall, the only place you demonstrated precision problems was
> an example that went to full mantissa precision where I admit there
> may be problems.  *But* I know of no place in cartography where such
> precision is required.

I'm speaking much more generally than cartography.  I'm saying that all
doubles should be displayed in the way I suggest in general by default
unless you know the values have errors in them or the application
domain suggests using fewer digits.  (Most of the code I write is very
general purpose.)  Otherwise, you're introducing arbitrary errors into
the numbers, causing a greater divergence between a binary->binary and
a binary->text->binary round trip if such a round trip can't be avoided.
You need to use 17 digits to get a completely clean round trip, but this
exposes the eyesore patterns in the IEEE encoding.

--------------------------+----------------------+--------------------------
Dr. Craig S. Bruce        | Ph 819-771-8303 x205 |             CubeWerx Inc.
Senior Software Developer |   Fax 819-771-8388   |  Gatineau, Québec, Canada
csbruce at cubewerx.com      |  http://csbruce.com/ |  http://www.cubewerx.com/
--------------------------+----------------------+--------------------------
    "The purpose of The Law is to protect criminals from being lynched."
                [What, you though it was to protect *you*?] 


From geraldi.evenden at gmail.com  Fri Apr  2 13:44:46 2010
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Fri, 2 Apr 2010 16:44:46 -0400
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004021952.o32JqOUk031749@tux.cubewerx.com>
References: <201004021952.o32JqOUk031749@tux.cubewerx.com>
Message-ID: <201004021644.46785.geraldi.evenden@gmail.com>

On Friday 02 April 2010 3:52:24 pm Craig Bruce wrote:
> Gerald I. Evenden <geraldi.evenden at gmail.com> wrote:
> > BCD? Binary Coded Decimal? Just that I have not heard the term in maybe
> > 25 years. Seriously. I am not being sarcastic.
>
> All the common database systems use BCD to represent the very common
> NUMBER data type.  This allows them to represent terminating decimal
> fractions exactly and SQL allows numbers to have up to 38 decimal digits.
> See the section "Packed decimal numbers" near the bottom of:
>
> http://publib.boulder.ibm.com/infocenter/db2luw/v9r7/index.jsp?topic=/com.i
>bm.db2.luw.sql.ref.doc/doc/r0001030.html
>
> The down side is that calculations are slower (not preformed directly
> by hardware), but this slowness is hidden by the large overhead costs of
> database access.

I have long ago given up worrying about speed when dealing with DBMS issues. 
Gives headaches. Just a good excuse to buy a faster machine.

> > As I recall, the only place you demonstrated precision problems was
> > an example that went to full mantissa precision where I admit there
> > may be problems.  *But* I know of no place in cartography where such
> > precision is required.
>
> I'm speaking much more generally than cartography.  I'm saying that all
> doubles should be displayed in the way I suggest in general by default
> unless you know the values have errors in them or the application
> domain suggests using fewer digits.  (Most of the code I write is very
> general purpose.)  Otherwise, you're introducing arbitrary errors into
> the numbers, causing a greater divergence between a binary->binary and
> a binary->text->binary round trip if such a round trip can't be avoided.
> You need to use 17 digits to get a completely clean round trip, but this
> exposes the eyesore patterns in the IEEE encoding.

I philosophically disagree with you here. Know the characteristics of the data 
you are storing and the expected precision and use appropriate field widths.

If you are worrying about speed, the general case is likely to be very 
wasteful.

It is hypothetically possible that you may encounter extended precision data 
and need to specify 20, 30 or more digit precision. You're stuck if you 
assume a 64 bit float limit of 17 decimal.

My old addage: know your data.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From glynn at gclements.plus.com  Fri Apr  2 15:08:21 2010
From: glynn at gclements.plus.com (Glynn Clements)
Date: Fri, 2 Apr 2010 23:08:21 +0100
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004011938.28921.geraldi.evenden@gmail.com>
References: <201004012232.o31MWFKJ020604@tux.cubewerx.com>
	<201004011938.28921.geraldi.evenden@gmail.com>
Message-ID: <19382.27349.488071.590404@cerise.gclements.plus.com>


Gerald I. Evenden wrote:

> The only hassle occurs when the the fractions are irrational such as pi, then 
> there is a problem. But in these situations (and probably others) the 
> continual bouncing back and forth between decimal and binary should be 
> avoided.

Such is the reality of processing data using a multitude of tools
connected by textual file formats. Most such file formats use decimal
representation, while most software uses binary (e.g. IEEE-754
floating point) internally.

Coupled with the fact that so few of the programmers who use floating
point have a good understanding of the issues, it's ultimately
necessary to retain some "headroom" in order to minimise the impact of
the inevitable flaws.

-- 
Glynn Clements <glynn at gclements.plus.com>


From glynn at gclements.plus.com  Fri Apr  2 15:20:00 2010
From: glynn at gclements.plus.com (Glynn Clements)
Date: Fri, 2 Apr 2010 23:20:00 +0100
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004021041.17713.geraldi.evenden@gmail.com>
References: <201004020042.o320gP8u003591@tux.cubewerx.com>
	<201004021041.17713.geraldi.evenden@gmail.com>
Message-ID: <19382.28048.283516.384115@cerise.gclements.plus.com>


Gerald I. Evenden wrote:

> > I agree that it's best to avoid unnecessary conversions, but there are
> > many interfaces that require text, such as the proj command-line or OGC
> > web interfaces.  The same issue occurs with the database/application
> > interface with BCD.  We are forced to obey the interfaces of the various
> > systems we wish to chain together.
> 
> BCD? Binary Coded Decimal? Just that I have not heard the term in maybe 25 
> years. Seriously. I am not being sarcastic.

BCD is widely used by software which processes financial data, as
decimal rounding is standard practice and may be required by law
(statute and/or precedent).

Also, if you haven't heard it mentioned in 25 years, I'd have to
suggest that you don't keep track of current events. I've seen fairly
widespread coverage of two specific cases where software thought that
this year was 2016 because of the year being encoded in BCD (the
binary digits 00010000 represent 10 if interpreted as BCD but 16 if
interpreted as binary).

The first case, at the beginning of January, invovled credit/debit
cards failing to work after January 1st due to software thinking that
the cards had expired. The second case involved software thinking that
March 1st was actually February 29th (2016 will be a leap year).

http://www.google.com/search?hl=en&q=%222016+bug%22+BCD

-- 
Glynn Clements <glynn at gclements.plus.com>


From beppenapo at gmail.com  Sat Apr  3 02:31:21 2010
From: beppenapo at gmail.com (beppe)
Date: Sat, 03 Apr 2010 11:31:21 +0200
Subject: [Proj] armenian coordinate system
Message-ID: <1270287081.4273.35.camel@beppe>

Hi,
I'm new in this list, and it's really helpful!
I'm working on an archaological webgis, and I have some shapefile with
srs unknown.
If I try to check the shp with ogrinfo, I've this output:

INFO: Open of `topographie.shp'
      using driver `ESRI Shapefile' successful.

Layer name: topographie
Geometry: Line String
Feature Count: 53
Extent: (470230.491150, 4457081.500000) - (470788.508850, 457516.500000)
Layer SRS WKT:
(unknown)
cat: Real (16.0)
level: Real (33.16)

I've tried with WGS84/UTM zone 38n, ED50/utm zone 38 n but there's an
error of 2 km about
Can you help me?
The site is in Armenia, the hill has these coordinates: 
lat 40.248838° lon 44.652557°, the topographic documentation was done
with a gps (a
central station with one rover) from a russian university staff

Thanx (and excuse me for my "not-english"!)

-beppe-




From gdt at ir.bbn.com  Sat Apr  3 04:34:57 2010
From: gdt at ir.bbn.com (Greg Troxel)
Date: Sat, 03 Apr 2010 07:34:57 -0400
Subject: [Proj] armenian coordinate system
In-Reply-To: <1270287081.4273.35.camel@beppe> (beppe's message of "Sat, 03 Apr
	2010 11:31:21 +0200")
References: <1270287081.4273.35.camel@beppe>
Message-ID: <rmifx3ceplq.fsf@fnord.ir.bbn.com>


I don't see any Armenian datums in the init files.

Searching on the web, I found this:

  http://www.geocom.am/data.htm

so I'd try this definition

# Pulkovo 1942 / 3-degree Gauss-Kruger zone 38
<2555> +proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +units=m +no_defs  <>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100403/0c3d01c9/attachment.sig>

From jrepetto at free.fr  Sat Apr  3 05:24:10 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Sat, 03 Apr 2010 14:24:10 +0200
Subject: [Proj] armenian coordinate system
In-Reply-To: <rmifx3ceplq.fsf@fnord.ir.bbn.com>
References: <1270287081.4273.35.camel@beppe> <rmifx3ceplq.fsf@fnord.ir.bbn.com>
Message-ID: <4BB7336A.60208@free.fr>

Greg Troxel a écrit :
> I don't see any Armenian datums in the init files.
> 
> Searching on the web, I found this:
> 
>   http://www.geocom.am/data.htm
> 
> so I'd try this definition
> 
> # Pulkovo 1942 / 3-degree Gauss-Kruger zone 38
> <2555> +proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +units=m +no_defs  <>

This definition is incomplete : the datum shift is missing. Yous should 
add the +towgs84 parameters.

Jean-Claude


From gdt at ir.bbn.com  Sat Apr  3 06:23:31 2010
From: gdt at ir.bbn.com (Greg Troxel)
Date: Sat, 03 Apr 2010 09:23:31 -0400
Subject: [Proj] armenian coordinate system
In-Reply-To: <4BB7336A.60208@free.fr> (Jean-Claude REPETTO's message of "Sat, 
	03 Apr 2010 14:24:10 +0200")
References: <1270287081.4273.35.camel@beppe>
	<rmifx3ceplq.fsf@fnord.ir.bbn.com> <4BB7336A.60208@free.fr>
Message-ID: <rmiy6h4d60c.fsf@fnord.ir.bbn.com>


Jean-Claude REPETTO <jrepetto at free.fr> writes:

> Greg Troxel a écrit :
>> I don't see any Armenian datums in the init files.
>> 
>> Searching on the web, I found this:
>> 
>>   http://www.geocom.am/data.htm
>> 
>> so I'd try this definition
>> 
>> # Pulkovo 1942 / 3-degree Gauss-Kruger zone 38
>> <2555> +proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +units=m +no_defs  <>
>
> This definition is incomplete : the datum shift is missing. Yous should 
> add the +towgs84 parameters.


That's straight out of the epsg file, so perhaps a bug to EPSG is in order.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100403/31059a41/attachment.sig>

From neteler at osgeo.org  Sat Apr  3 07:31:50 2010
From: neteler at osgeo.org (Markus Neteler)
Date: Sat, 3 Apr 2010 16:31:50 +0200
Subject: [Proj] armenian coordinate system
In-Reply-To: <rmiy6h4d60c.fsf@fnord.ir.bbn.com>
References: <1270287081.4273.35.camel@beppe>
	<rmifx3ceplq.fsf@fnord.ir.bbn.com> 
	<4BB7336A.60208@free.fr> <rmiy6h4d60c.fsf@fnord.ir.bbn.com>
Message-ID: <r2t86782b611004030731w33d4aad5j29539a081e2a1d30@mail.gmail.com>

On Sat, Apr 3, 2010 at 3:23 PM, Greg Troxel <gdt at ir.bbn.com> wrote:
> Jean-Claude REPETTO <jrepetto at free.fr> writes:
>> Greg Troxel a écrit :
...
>>> # Pulkovo 1942 / 3-degree Gauss-Kruger zone 38
>>> <2555> +proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=38500000 +y_0=0 +ellps=krass +units=m +no_defs  <>
>>
>> This definition is incomplete : the datum shift is missing. Yous should
>> add the +towgs84 parameters.
>
>
> That's straight out of the epsg file, so perhaps a bug to EPSG is in order.

Note: The nad/epsg file does not contain datum values when several datums exist.

I tried to check in http://www.epsg-registry.org/ but it is
non-functional right now.

But I could generate it with a GDAL tool:

epsg_tr.py -pretty_wkt 2555
PROJCS["Pulkovo 1942 / 3-degree Gauss-Kruger zone 38",
    GEOGCS["Pulkovo 1942",
        DATUM["Pulkovo_1942",
            SPHEROID["Krassowsky 1940",6378245,298.3,
                AUTHORITY["EPSG","7024"]],
            TOWGS84[23.9,-141.3,-80.9,-0,0.37,0.85,-0.12],
            AUTHORITY["EPSG","6284"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.01745329251994328,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4284"]],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",114],
    PARAMETER["scale_factor",1],
    PARAMETER["false_easting",38500000],
    PARAMETER["false_northing",0],
    AUTHORITY["EPSG","2555"],
    AXIS["X",NORTH],
    AXIS["Y",EAST]]

@Beppe: can you try this?

Hope this helps,
Markus

-- 
http://gis.fem-environment.eu/


From beppenapo at gmail.com  Sat Apr  3 09:13:34 2010
From: beppenapo at gmail.com (beppe)
Date: Sat, 03 Apr 2010 18:13:34 +0200
Subject: [Proj] armenian coordinate system
In-Reply-To: <r2t86782b611004030731w33d4aad5j29539a081e2a1d30@mail.gmail.com>
References: <1270287081.4273.35.camel@beppe>
	<rmifx3ceplq.fsf@fnord.ir.bbn.com>  <4BB7336A.60208@free.fr>
	<rmiy6h4d60c.fsf@fnord.ir.bbn.com>
	<r2t86782b611004030731w33d4aad5j29539a081e2a1d30@mail.gmail.com>
Message-ID: <1270311214.4273.324.camel@beppe>

"Re-hi" Markus ;)
Excuse me, but I'm not so "competent" with gdal tool (and the
documentation does not help me!!!).
My epsg_tr.py -pretty_wkt 2555 output is:

PROJCS["Pulkovo 1942 / 3-degree Gauss-Kruger zone 38",
    GEOGCS["Pulkovo 1942",
        DATUM["Pulkovo_1942",
            SPHEROID["Krassowsky 1940",6378245,298.3,
                AUTHORITY["EPSG","7024"]],
            AUTHORITY["EPSG","6284"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.01745329251994328,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4284"]],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",114],
    PARAMETER["scale_factor",1],
    PARAMETER["false_easting",38500000],
    PARAMETER["false_northing",0],
    AUTHORITY["EPSG","2555"],
    AXIS["Y",EAST],
    AXIS["X",NORTH]]

How to add towgs84?

At this moment the best result is epsg:2498.

> But I could generate it with a GDAL tool:
> 
> epsg_tr.py -pretty_wkt 2555
> PROJCS["Pulkovo 1942 / 3-degree Gauss-Kruger zone 38",
>     GEOGCS["Pulkovo 1942",
>         DATUM["Pulkovo_1942",
>             SPHEROID["Krassowsky 1940",6378245,298.3,
>                 AUTHORITY["EPSG","7024"]],
>             TOWGS84[23.9,-141.3,-80.9,-0,0.37,0.85,-0.12],
>             AUTHORITY["EPSG","6284"]],
>         PRIMEM["Greenwich",0,
>             AUTHORITY["EPSG","8901"]],
>         UNIT["degree",0.01745329251994328,
>             AUTHORITY["EPSG","9122"]],
>         AUTHORITY["EPSG","4284"]],
>     UNIT["metre",1,
>         AUTHORITY["EPSG","9001"]],
>     PROJECTION["Transverse_Mercator"],
>     PARAMETER["latitude_of_origin",0],
>     PARAMETER["central_meridian",114],
>     PARAMETER["scale_factor",1],
>     PARAMETER["false_easting",38500000],
>     PARAMETER["false_northing",0],
>     AUTHORITY["EPSG","2555"],
>     AXIS["X",NORTH],
>     AXIS["Y",EAST]]
> 
> @Beppe: can you try this?
> 
> Hope this helps,
> Markus
> 



From neteler at osgeo.org  Sat Apr  3 09:50:53 2010
From: neteler at osgeo.org (Markus Neteler)
Date: Sat, 3 Apr 2010 18:50:53 +0200
Subject: [Proj] armenian coordinate system
In-Reply-To: <1270311214.4273.324.camel@beppe>
References: <1270287081.4273.35.camel@beppe>
	<rmifx3ceplq.fsf@fnord.ir.bbn.com> 
	<4BB7336A.60208@free.fr> <rmiy6h4d60c.fsf@fnord.ir.bbn.com> 
	<r2t86782b611004030731w33d4aad5j29539a081e2a1d30@mail.gmail.com> 
	<1270311214.4273.324.camel@beppe>
Message-ID: <q2o86782b611004030950tea8a9c7arcd9be6ea8f097432@mail.gmail.com>

On Sat, Apr 3, 2010 at 6:13 PM, beppe <beppenapo at gmail.com> wrote:
> "Re-hi" Markus ;)
> Excuse me, but I'm not so "competent" with gdal tool (and the
> documentation does not help me!!!).

(perhaps that better for the GDAL list)

> My epsg_tr.py -pretty_wkt 2555 output is:
>
> PROJCS["Pulkovo 1942 / 3-degree Gauss-Kruger zone 38",
>    GEOGCS["Pulkovo 1942",
>        DATUM["Pulkovo_1942",
>            SPHEROID["Krassowsky 1940",6378245,298.3,
>                AUTHORITY["EPSG","7024"]],
>            AUTHORITY["EPSG","6284"]],

I guess that your GDAL version is too old. There have been improvements
in the datum logic which are needed here.

...
>
> How to add towgs84?

Copy-paste from my previous email :) Or try this (store as .prj file):

epsg_tr -wkt 2555
PROJCS["Pulkovo 1942 / 3-degree Gauss-Kruger zone 38",GEOGCS["Pulkovo
1942",DATUM["Pulkovo_1942",SPHEROID["Krassowsky
1940",6378245,298.3,AUTHORITY["EPSG","7024"]],TOWGS84[23.9,-141.3,-80.9,-0,0.37,0.85,-0.12],AUTHORITY["EPSG","6284"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4284"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",114],PARAMETER["scale_factor",1],PARAMETER["false_easting",38500000],PARAMETER["false_northing",0],AUTHORITY["EPSG","2555"],AXIS["X",NORTH],AXIS["Y",EAST]]


> At this moment the best result is epsg:2498.

Here you go:

epsg_tr -wkt 2498
PROJCS["Pulkovo 1942 / Gauss-Kruger CM 45E",GEOGCS["Pulkovo
1942",DATUM["Pulkovo_1942",SPHEROID["Krassowsky
1940",6378245,298.3,AUTHORITY["EPSG","7024"]],TOWGS84[23.9,-141.3,-80.9,-0,0.37,0.85,-0.12],AUTHORITY["EPSG","6284"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4284"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",45],PARAMETER["scale_factor",1],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],AUTHORITY["EPSG","2498"],AXIS["X",NORTH],AXIS["Y",EAST]]

Markus


From ckarney at Sarnoff.com  Sat Apr  3 12:04:08 2010
From: ckarney at Sarnoff.com (Karney, Charles)
Date: Sat, 3 Apr 2010 15:04:08 -0400
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201003312336.o2VNaYhi015027@tux.cubewerx.com>
References: <201003312336.o2VNaYhi015027@tux.cubewerx.com>
Message-ID: <CED6B4B383C5F0418DAFEA443A0033C2F8E56C98C5@MALIBU.sarnoff.internal>

What you want is a "perfect floating-point print" routine.  This takes a
binary floating point number and prints a decimal representation with the
following properties:

* It's a correctly rounded version of the exact decimal number.

* When read by a perfect floating-point read routine, the original
  binary representation is recovered.

* It's the shortest representation satisfying these properties.

This problem was tackled by White and Steele in the implementation of
the MacLisp PRINT function in the 1970s.  The algorithms are given in:

    G. L. Steele and J. L. White
    How to print floating-point numbers accurately
    ACM SIGPLAN 1990
    http://dx.doi.org/10.1145/93542.93559
    See also:
    http://dx.doi.org/10.1145/989393.989431

It turns out that the "perfect read" routine is not trivial, see

    W. D. Clinger
    How to read floating point numbers accurately
    ACM SIGPLAN 1990
    http://dx.doi.org/10.1145/93542.93557

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662
________________________________________
From: proj-bounces at lists.maptools.org [proj-bounces at lists.maptools.org] On Behalf Of Craig Bruce [csbruce at cubewerx.com]
Sent: Wednesday, March 31, 2010 19:36
To: proj at lists.maptools.org
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere

I was reading the following web page and its discussion of numerical
precision written by Frank Warmerdam:

http://home.gdal.org/projects/opengis/wktproblems.html

I agree with what he said, but printf's "%.16g" does have a problem which
manifests itself frequently, such as in the "epsg" CRS definitions in
proj-4.6.0, e.g.:

# Anguilla 1957 / British West Indies Grid
<2000> +proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +units=m +no_defs  <>

The "+k" parameter value is an eyesore.  I think a better approach is to
generate the "%.16g" number as indicated, but then scan its characters for
the ugly pattern of '01' or '99' in the 15th and 16th significant digits.
If this pattern is found, then the number should be generated again using
"%.15g".

**SNIP**

From alexckp at yahoo.com  Sat Apr  3 23:03:45 2010
From: alexckp at yahoo.com (Alexander Chong)
Date: Sat, 3 Apr 2010 23:03:45 -0700 (PDT)
Subject: [Proj] Updating latest Proj4 Lib Into Quatum GIS
Message-ID: <984307.40793.qm@web110406.mail.gq1.yahoo.com>

Hi all,

Is there a simple way to update QGis with the latest Proj4 lib? I'm hoping that I don't need to download the source codes and rebuild the program.

Thanks,

Alexander Chong
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100403/36cbae8c/attachment.html>

From alexckp at yahoo.com  Tue Apr  6 03:57:16 2010
From: alexckp at yahoo.com (Alexander Chong)
Date: Tue, 6 Apr 2010 03:57:16 -0700 (PDT)
Subject: [Proj] Updating latest Proj4 Lib Into Quatum GIS
Message-ID: <68014.16926.qm@web110404.mail.gq1.yahoo.com>

Hi Markus,

I'm using QGIS 1.0.2 LTS
Windows - Standalone version. I tried replacing the proj.dll file with the latest compiled version but it did not work. Fyi, I'm trying the use the recently patched omerc projection which now includes the gamma option. This option enables me to reproject the Borneo RSO coordinates correctly.

I understand that Postgis, Mapserver etc are all using proj4, do they automatically get updated in the latest build?

Alexander Chong

On Sun, Apr 4, 2010 at 8:03 AM, Alexander Chong <alexckp at yahoo.com>
 wrote:
>
> Hi all,
>
> Is there a simple way to
 update QGis with the latest Proj4 lib? I'm hoping that I don't need to 
download the source codes
 and rebuild the program.

Hi, you didn't say for which operating 
system etc...

For example, on Linux you just replace the PROJ4 library. 
Depending on
your distribution, you may get the package already 
prepared.

Markus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100406/04af364b/attachment.html>

From jrepetto at free.fr  Tue Apr  6 04:25:51 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Tue, 06 Apr 2010 13:25:51 +0200
Subject: [Proj] Updating latest Proj4 Lib Into Quatum GIS
In-Reply-To: <68014.16926.qm@web110404.mail.gq1.yahoo.com>
References: <68014.16926.qm@web110404.mail.gq1.yahoo.com>
Message-ID: <4BBB1A3F.1050504@free.fr>

Alexander Chong a écrit :
> 
> I'm using QGIS 1.0.2 LTS Windows - Standalone version.

Hi Alexander,

You are using a very old version of QGIS. You should upgrade to the last
stable version, which is QGIS 1.4.

Jean-Claude



From jrepetto at free.fr  Tue Apr  6 05:36:53 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Tue, 06 Apr 2010 14:36:53 +0200
Subject: [Proj] Numerical Precision in Proj, WKT, and everywhere
In-Reply-To: <201004020042.o320gP8u003591@tux.cubewerx.com>
References: <201004020042.o320gP8u003591@tux.cubewerx.com>
Message-ID: <4BBB2AE5.6000102@free.fr>

Craig Bruce wrote :
> There's also a problem with rational fractions, like 1/60, as I showed
> in the WMS example.  You can easily write x = 1/60.0 in a program get a
> fully precise value for whatever representation you are using, but you
> can't put this expression on the proj command line (AFAIK).

Hello Craig,

I think you are wrong, PROJ.4 accepts minutes (and probably seconds) in 
projection definitions.

This definition :
# NAD27 / Cuba Sur
<2086> +proj=lcc +lat_1=20.71666666666667 +lat_0=20.71666666666667 
+lon_0=-76.83333333333333 +k_0=0.99994848 +x_0=500000 +y_0=229126.939 
+ellps=clrk66 +datum=NAD27 +units=m +no_defs  <>

had rather be written :
<2086> +proj=lcc +lat_1=20d43 +lat_0=20d43 +lon_0=-76d50 +k_0=0.99994848 
+x_0=500000 +y_0=229126.939 +ellps=clrk66 +datum=NAD27 +units=m +no_defs <>

and it works :

$ proj +proj=lcc +lat_1=20d43 +lat_0=20d43 +lon_0=-76d50 +k_0=0.99994848 
+x_0=500000 +y_0=229126.939 +ellps=clrk66 +datum=NAD27 +units=m +no_defs
-76 20
587209.13	150016.01

$ proj +proj=lcc +lat_1=20.71666666666667 +lat_0=20.71666666666667 
+lon_0=-76.83333333333333 +k_0=0.99994848 +x_0=500000 +y_0=229126.939 
+ellps=clrk66 +datum=NAD27 +units=m +no_defs
-76 20
587209.13	150016.01

Jean-Claude


From beppenapo at gmail.com  Tue Apr  6 06:48:19 2010
From: beppenapo at gmail.com (Giuseppe Naponiello)
Date: Tue, 6 Apr 2010 15:48:19 +0200
Subject: [Proj] armenian coordinate system
In-Reply-To: <q2o86782b611004030950tea8a9c7arcd9be6ea8f097432@mail.gmail.com>
References: <1270287081.4273.35.camel@beppe> <rmifx3ceplq.fsf@fnord.ir.bbn.com>
	<4BB7336A.60208@free.fr> <rmiy6h4d60c.fsf@fnord.ir.bbn.com>
	<r2t86782b611004030731w33d4aad5j29539a081e2a1d30@mail.gmail.com>
	<1270311214.4273.324.camel@beppe>
	<q2o86782b611004030950tea8a9c7arcd9be6ea8f097432@mail.gmail.com>
Message-ID: <j2tc98562251004060648l4267903dr6c0d5693a9df6189@mail.gmail.com>

Hi Markus,

> >
> > How to add towgs84?
>
> Copy-paste from my previous email :) Or try this (store as .prj file):
>
> I've tried this:
epsg_tr.py -wkt 2498 PROJCS["Pulkovo 1942 / Gauss-Kruger CM
45E",GEOGCS["Pulkovo
1942",DATUM["Pulkovo_1942",SPHEROID["Krassowsky1940",6378245,298.3,AUTHORITY["EPSG","7024"]],TOWGS84[23.9,-141.3,-80.9,-0,0.37,0.85,-0.12],AUTHORITY["EPSG","6284"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4284"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",45],PARAMETER["scale_factor",1],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],AUTHORITY["EPSG","2498"],AXIS["X",NORTH],AXIS["Y",EAST]]

and I've this error:
Traceback (most recent call last):
  File "/usr/bin/epsg_tr.py", line 153, in <module>
    elif int(arg) > 0:
ValueError: invalid literal for int() with base 10: 'PROJCS[Pulkovo 1942 /
Gauss-Kruger CM 45E,GEOGCS[Pulkovo
1942,DATUM[Pulkovo_1942,SPHEROID[Krassowsky1940,6378245,298.3,AUTHORITY[EPSG,7024]],TOWGS84[23.9,-141.3,-80.9,-0,0.37,0.85,-0.12],AUTHORITY[EPS'

What wrong ?

-- 
-beppe-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100406/562885fe/attachment.html>

From neteler at osgeo.org  Tue Apr  6 07:15:03 2010
From: neteler at osgeo.org (Markus Neteler)
Date: Tue, 6 Apr 2010 16:15:03 +0200
Subject: [Proj] armenian coordinate system
In-Reply-To: <j2tc98562251004060648l4267903dr6c0d5693a9df6189@mail.gmail.com>
References: <1270287081.4273.35.camel@beppe>
	<rmifx3ceplq.fsf@fnord.ir.bbn.com> 
	<4BB7336A.60208@free.fr> <rmiy6h4d60c.fsf@fnord.ir.bbn.com> 
	<r2t86782b611004030731w33d4aad5j29539a081e2a1d30@mail.gmail.com> 
	<1270311214.4273.324.camel@beppe>
	<q2o86782b611004030950tea8a9c7arcd9be6ea8f097432@mail.gmail.com>
	<j2tc98562251004060648l4267903dr6c0d5693a9df6189@mail.gmail.com>
Message-ID: <x2k86782b611004060715pca5f8aa5t9360b1cbe0c4da3b@mail.gmail.com>

On Tue, Apr 6, 2010 at 3:48 PM, Giuseppe Naponiello <beppenapo at gmail.com> wrote:
> Hi Markus,
>>
>> >
>> > How to add towgs84?
>>
>> Copy-paste from my previous email :) Or try this (store as .prj file):
>>
> I've tried this:
> epsg_tr.py -wkt 2498 PROJCS["Pulkovo 1942 / Gauss-Kruger CM

... not in one line...

epsg_tr.py -wkt 2498

and will will give you the definition. Save it with

epsg_tr.py -wkt 2498 > epsg2498.prj

Markus


From kimbesson1981 at gmail.com  Tue Apr  6 07:23:31 2010
From: kimbesson1981 at gmail.com (Kim Besson)
Date: Tue, 6 Apr 2010 15:23:31 +0100
Subject: [Proj] List of available EPSG's
Message-ID: <o2r8fb908a31004060723g78712cdcj744c55d5f572b356@mail.gmail.com>

Greetings

I'm a newbie at PROJ. I'm only used to work with PROJ through GRASS and
GDAL. I searching for a list of PROJ4 available/supported EPSGs in PROJ
website. Is it available?

Thank you

best regards
Kim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100406/1febaa12/attachment.html>

From neteler at osgeo.org  Tue Apr  6 07:43:08 2010
From: neteler at osgeo.org (Markus Neteler)
Date: Tue, 6 Apr 2010 16:43:08 +0200
Subject: [Proj] List of available EPSG's
In-Reply-To: <o2r8fb908a31004060723g78712cdcj744c55d5f572b356@mail.gmail.com>
References: <o2r8fb908a31004060723g78712cdcj744c55d5f572b356@mail.gmail.com>
Message-ID: <n2p86782b611004060743he1113722j1cfa41a9973e11f1@mail.gmail.com>

On Tue, Apr 6, 2010 at 4:23 PM, Kim Besson <kimbesson1981 at gmail.com> wrote:
> Greetings
> I'm a newbie at PROJ. I'm only used to work with PROJ through GRASS and
> GDAL. I searching for a list of PROJ4 available/supported EPSGs in PROJ
> website. Is it available?

It is in your installation in nad/epsg.

You can find it online here:
http://trac.osgeo.org/proj/browser/trunk/proj/nad/epsg

(GRASS 6.4 provides the list also in its "Location Manager")

Best
Markus


From ckarney at Sarnoff.com  Sat Apr 10 16:45:08 2010
From: ckarney at Sarnoff.com (Karney, Charles)
Date: Sat, 10 Apr 2010 19:45:08 -0400
Subject: [Proj] Locate a point from distance and backwards azimuth?
In-Reply-To: <10D53E8BFBD682428EF268EA54F50CE73A8130B950@MALIBU.sarnoff.internal>
References: <10D53E8BFBD682428EF268EA54F50CE73A8130B950@MALIBU.sarnoff.internal>
Message-ID: <CED6B4B383C5F0418DAFEA443A0033C2F8E56C98E5@MALIBU.sarnoff.internal>

> From: Mikael Rittri [Mikael.Rittri at carmenta.com]
> Sent: Monday, October 20, 2008 03:36
>
> Hello,
> Here is a variation of the first/principal/forward geodetic problem:
>
> Known:
>    Position of point C.
>    Distance from point C to an unknown point A.
>    Azimuth, at A, of the great-circle arc between A and C.
> Where is A?
>
> Note the difference from the first/principal/forward problem: the
> azimuth is known at the unknown point A, instead of at the known point
> C.
>
> I am not really sure when this is useful, but I have been asked about
> it twice by different people, so I feel I ought to solve it some day.
>
> Does this problem has a name, and are there detailed published
> solutions anywhere?

Converting this problem into a projection you get the retro-azimuthal
equidistant projection.

  A. R. Hinks,
  Geographical J. 73, 245-247 (1929)
  http://www.jstor.org/pss/1784715

gives a useful application: You want to know where you are, given the
distance to the VLF clock at Rugby and the azimuth of the signal.  Note
that there may be 0, 1, or 2 solutions.

The implicit assumptions here are:
  You know where Rugby is
  VLF signals travel along geodesics
  You have an accurate local clock
  You know the direction of true north

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662


From muginaa at gmail.com  Wed Apr 21 08:56:58 2010
From: muginaa at gmail.com (Ilumas)
Date: Wed, 21 Apr 2010 18:56:58 +0300
Subject: [Proj] cs2cs's +towgs84 usage
Message-ID: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>

Dear list,

could you kindly confirm that the cs2cs's +towgs84 parameters remain the
same for a certain datum regardless of the direction of the transformation.
Some people (e.g.
http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberly-td3410479.html)
<http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberly-td3410479.html>seem
to suggest that the values need to be negated when going FROM wgs84 TO
something else, but this seems a bit strange to me. Unfortunately all the
examples in the man pages seem to be about changing the coordinates TO
wgs84...

Thanks a lot in advance!

ilumas

<http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberly-td3410479.html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100421/ec079039/attachment.html>

From warmerdam at pobox.com  Wed Apr 21 09:13:39 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 21 Apr 2010 12:13:39 -0400
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
Message-ID: <4BCF2433.8090108@pobox.com>

Ilumas wrote:
> Dear list,
> 
> could you kindly confirm that the cs2cs's +towgs84 parameters remain the 
> same for a certain datum regardless of the direction of the 
> transformation. Some people (e.g. 
> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberly-td3410479.html) 
> <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberly-td3410479.html>seem 
> to suggest that the values need to be negated when going FROM wgs84 TO 
> something else, but this seems a bit strange to me. Unfortunately all 
> the examples in the man pages seem to be about changing the coordinates 
> TO wgs84...

Ilumas,

The parameters are always expressed in terms of what it takes to transform
to WGS84.  If PROJ is transforming from WGS84 it will internally reverse
the sense of the transformation.

Keep in mind there is also an issue with the handedness of the parameters.
Some folks, mostly european, express the parameters with a different
handedness.  The scripts that generate the "epsg" init file already know
about this case and convert to the usual PROJ.4/North American handedness
but if you are researching parameters yourself from various sources you
may need to be aware of it.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From bfraser at geoanalytic.com  Wed Apr 21 11:39:01 2010
From: bfraser at geoanalytic.com (Brent Fraser)
Date: Wed, 21 Apr 2010 12:39:01 -0600
Subject: [Proj] Point Scale factor service
Message-ID: <4BCF4645.90008@geoanalytic.com>

Lately I've run into issues regarding scale.  The need to:
   - measure a distance on a web map application
   - show layers based on map scale

In the past, I've carefully selected a good projection (and parameters) to 
minimize these problems.  These days, the standard is Spherical Mercator (thank 
you Google), and most applications ignore the map projection's point scale 
factor at the location/view of interest, or do their own hack to estimate it.

    I thought a more robust solution would be to have a function in proj to 
return the point scale factor at a location, something like:

   int pj_pointscale( ProjPJ prj, double lon, double y, double *pointscale );
       (return FALSE if not available for that projection?)

The calling applications could then do something useful with that information.

Thoughts?

Best Regards,
Brent Fraser




From ndzinn at comcast.net  Wed Apr 21 11:47:51 2010
From: ndzinn at comcast.net (Noel Zinn)
Date: Wed, 21 Apr 2010 13:47:51 -0500
Subject: [Proj] Point Scale factor service
In-Reply-To: <4BCF4645.90008@geoanalytic.com>
References: <4BCF4645.90008@geoanalytic.com>
Message-ID: <AB3B9B054A4147C2BEDBB9B7E6A2E57E@PowerSpec>

FYI, Google's "Web Mercator" is not truly a Mercator (nor is it spherical)
because it is not conformal.  Point scale factor varies as a function of
azimuth.  -Noel Zinn

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Brent Fraser
Sent: Wednesday, April 21, 2010 1:39 PM
To: PROJ.4 and general Projections Discussions
Subject: [Proj] Point Scale factor service

Lately I've run into issues regarding scale.  The need to:
   - measure a distance on a web map application
   - show layers based on map scale

In the past, I've carefully selected a good projection (and parameters) to 
minimize these problems.  These days, the standard is Spherical Mercator
(thank 
you Google), and most applications ignore the map projection's point scale 
factor at the location/view of interest, or do their own hack to estimate
it.

    I thought a more robust solution would be to have a function in proj to 
return the point scale factor at a location, something like:

   int pj_pointscale( ProjPJ prj, double lon, double y, double *pointscale
);
       (return FALSE if not available for that projection?)

The calling applications could then do something useful with that
information.

Thoughts?

Best Regards,
Brent Fraser


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From muginaa at gmail.com  Wed Apr 21 12:19:30 2010
From: muginaa at gmail.com (Ilumas)
Date: Wed, 21 Apr 2010 22:19:30 +0300
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <4BCF2433.8090108@pobox.com>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
	<4BCF2433.8090108@pobox.com>
Message-ID: <w2kc5b83d351004211219t14f1896dn81b69cfbc6a56044@mail.gmail.com>

Dear Frank,

thanks a lot for your prompt assistance!

br,

ilumas



On Wed, Apr 21, 2010 at 7:13 PM, Frank Warmerdam <warmerdam at pobox.com>wrote:

> Ilumas wrote:
> > Dear list,
> >
> > could you kindly confirm that the cs2cs's +towgs84 parameters remain the
> > same for a certain datum regardless of the direction of the
> > transformation. Some people (e.g.
> >
> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberly-td3410479.html
> )
> > <
> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberly-td3410479.html
> >seem
> > to suggest that the values need to be negated when going FROM wgs84 TO
> > something else, but this seems a bit strange to me. Unfortunately all
> > the examples in the man pages seem to be about changing the coordinates
> > TO wgs84...
>
> Ilumas,
>
> The parameters are always expressed in terms of what it takes to transform
> to WGS84.  If PROJ is transforming from WGS84 it will internally reverse
> the sense of the transformation.
>
> Keep in mind there is also an issue with the handedness of the parameters.
> Some folks, mostly european, express the parameters with a different
> handedness.  The scripts that generate the "epsg" init file already know
> about this case and convert to the usual PROJ.4/North American handedness
> but if you are researching parameters yourself from various sources you
> may need to be aware of it.
>
> Best regards,
> --
>
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam,
> warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam<http://pobox.com/%7Ewarmerdam>
> and watch the world go round - Rush    | Geospatial Programmer for Rent
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100421/758f2d8a/attachment.html>

From bfraser at geoanalytic.com  Thu Apr 22 06:51:15 2010
From: bfraser at geoanalytic.com (Brent Fraser)
Date: Thu, 22 Apr 2010 07:51:15 -0600
Subject: [Proj] Point Scale factor service
In-Reply-To: <AB3B9B054A4147C2BEDBB9B7E6A2E57E@PowerSpec>
References: <4BCF4645.90008@geoanalytic.com>
	<AB3B9B054A4147C2BEDBB9B7E6A2E57E@PowerSpec>
Message-ID: <4BD05453.8010508@geoanalytic.com>

Yikes!  I've been using

+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 
+units=m +nadgrids=@null +no_defs

as the definition.  Should I be using something else?

Brent

Noel Zinn wrote:
> FYI, Google's "Web Mercator" is not truly a Mercator (nor is it spherical)
> because it is not conformal.  Point scale factor varies as a function of
> azimuth.  -Noel Zinn
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Brent Fraser
> Sent: Wednesday, April 21, 2010 1:39 PM
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] Point Scale factor service
> 
> Lately I've run into issues regarding scale.  The need to:
>    - measure a distance on a web map application
>    - show layers based on map scale
> 
> In the past, I've carefully selected a good projection (and parameters) to 
> minimize these problems.  These days, the standard is Spherical Mercator
> (thank 
> you Google), and most applications ignore the map projection's point scale 
> factor at the location/view of interest, or do their own hack to estimate
> it.
> 
>     I thought a more robust solution would be to have a function in proj to 
> return the point scale factor at a location, something like:
> 
>    int pj_pointscale( ProjPJ prj, double lon, double y, double *pointscale
> );
>        (return FALSE if not available for that projection?)
> 
> The calling applications could then do something useful with that
> information.
> 
> Thoughts?
> 
> Best Regards,
> Brent Fraser
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From ndzinn at comcast.net  Thu Apr 22 07:16:38 2010
From: ndzinn at comcast.net (Noel Zinn)
Date: Thu, 22 Apr 2010 09:16:38 -0500
Subject: [Proj] Point Scale factor service
In-Reply-To: <4BD05453.8010508@geoanalytic.com>
References: <4BCF4645.90008@geoanalytic.com><AB3B9B054A4147C2BEDBB9B7E6A2E57E@PowerSpec>
	<4BD05453.8010508@geoanalytic.com>
Message-ID: <1AF149663FD14495B6B484BFE32192CB@PowerSpec>

Someone more knowledgeable than I in proj4 will have to comment on your
syntax.  My point is that if WGS84 ellipsoidal coordinates are used with
spherical Mercator formulas as Google are doing (a=b=6378137), then the
result is a non-conformal projection (point scale factor not the same in all
directions).  If you plan to use scale factors, you need to compensate for
azimuth.  The scale factors (as functions of azimuth) have been quantified
in EPSG Guidance Note 7-2 (www.epsg.org).  -Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Brent Fraser
Sent: Thursday, April 22, 2010 8:51 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Point Scale factor service

Yikes!  I've been using

+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0
+k=1.0 
+units=m +nadgrids=@null +no_defs

as the definition.  Should I be using something else?

Brent

Noel Zinn wrote:
> FYI, Google's "Web Mercator" is not truly a Mercator (nor is it spherical)
> because it is not conformal.  Point scale factor varies as a function of
> azimuth.  -Noel Zinn
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Brent Fraser
> Sent: Wednesday, April 21, 2010 1:39 PM
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] Point Scale factor service
> 
> Lately I've run into issues regarding scale.  The need to:
>    - measure a distance on a web map application
>    - show layers based on map scale
> 
> In the past, I've carefully selected a good projection (and parameters) to

> minimize these problems.  These days, the standard is Spherical Mercator
> (thank 
> you Google), and most applications ignore the map projection's point scale

> factor at the location/view of interest, or do their own hack to estimate
> it.
> 
>     I thought a more robust solution would be to have a function in proj
to 
> return the point scale factor at a location, something like:
> 
>    int pj_pointscale( ProjPJ prj, double lon, double y, double *pointscale
> );
>        (return FALSE if not available for that projection?)
> 
> The calling applications could then do something useful with that
> information.
> 
> Thoughts?
> 
> Best Regards,
> Brent Fraser
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From ali_informatics at yahoo.com  Thu Apr 22 09:06:24 2010
From: ali_informatics at yahoo.com (Ali)
Date: Thu, 22 Apr 2010 09:06:24 -0700 (PDT)
Subject: [Proj] Survey on Web Geo-Spatial Open-Source Technologies:
	Questionnaire on PROJ.4
Message-ID: <240840.34235.qm@web65808.mail.ac4.yahoo.com>

[Sorry for cross-posting]

Hi everybody,

I am part of the Spatial Information Systems Group in University College Dublin.

We are conducting a survey on Open-Source technologies with particular focus on Geo-Spatial projects.
Our goal is to collect first-hand knowledge about a number of Open-Source projects active on the Internet.
With this work we hope to identify strong and weak points of each project in order to give some guidelines for future directions to the Open-Source community and potential developers in relation to Geo-Spatial research.

Therefore we would like to ask you to take an anonymous questionnaire on
PROJ.4.

The questionnaire consists of a few simple questions about your experience with
the software in terms of usability, stability, interoperability and so on.

Estimated completion time: about 1 minute

Link to the questionnaire: http://bit.ly/geospatial-opensource-survey-proj4

Projects included in this survey: GeoServer, MapServer, PostGIS, MySQL, Hibernate Spatial, Ruby on Rails, Grails, Proj.4, GeoTools, Java Topology Suite, OpenLayers, JsExt, Prototype, MooTools

Feel free to contact us at andrea.ballatore [at] ucd.ie if you have any questions, comments and recommendation about this survey.

Thank you for your attention,

Spatial Information Systems Group,
School of Computer Science and Informatics,
University College Dublin 


      


From bfraser at geoanalytic.com  Thu Apr 22 09:42:21 2010
From: bfraser at geoanalytic.com (Brent Fraser)
Date: Thu, 22 Apr 2010 10:42:21 -0600
Subject: [Proj] Point Scale factor service
In-Reply-To: <1AF149663FD14495B6B484BFE32192CB@PowerSpec>
References: <4BCF4645.90008@geoanalytic.com><AB3B9B054A4147C2BEDBB9B7E6A2E57E@PowerSpec>	<4BD05453.8010508@geoanalytic.com>
	<1AF149663FD14495B6B484BFE32192CB@PowerSpec>
Message-ID: <4BD07C6D.7030409@geoanalytic.com>

Fair enough.  So how about:

int pj_pointscale( ProjPJ prj, double lon, double lat, double azimuth, double 
*pointscale );

Brent


Noel Zinn wrote:
> Someone more knowledgeable than I in proj4 will have to comment on your
> syntax.  My point is that if WGS84 ellipsoidal coordinates are used with
> spherical Mercator formulas as Google are doing (a=b=6378137), then the
> result is a non-conformal projection (point scale factor not the same in all
> directions).  If you plan to use scale factors, you need to compensate for
> azimuth.  The scale factors (as functions of azimuth) have been quantified
> in EPSG Guidance Note 7-2 (www.epsg.org).  -Noel
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Brent Fraser
> Sent: Thursday, April 22, 2010 8:51 AM
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Point Scale factor service
> 
> Yikes!  I've been using
> 
> +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0
> +k=1.0 
> +units=m +nadgrids=@null +no_defs
> 
> as the definition.  Should I be using something else?
> 
> Brent
> 
> Noel Zinn wrote:
>> FYI, Google's "Web Mercator" is not truly a Mercator (nor is it spherical)
>> because it is not conformal.  Point scale factor varies as a function of
>> azimuth.  -Noel Zinn
>>
>> -----Original Message-----
>> From: proj-bounces at lists.maptools.org
>> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Brent Fraser
>> Sent: Wednesday, April 21, 2010 1:39 PM
>> To: PROJ.4 and general Projections Discussions
>> Subject: [Proj] Point Scale factor service
>>
>> Lately I've run into issues regarding scale.  The need to:
>>    - measure a distance on a web map application
>>    - show layers based on map scale
>>
>> In the past, I've carefully selected a good projection (and parameters) to
> 
>> minimize these problems.  These days, the standard is Spherical Mercator
>> (thank 
>> you Google), and most applications ignore the map projection's point scale
> 
>> factor at the location/view of interest, or do their own hack to estimate
>> it.
>>
>>     I thought a more robust solution would be to have a function in proj
> to 
>> return the point scale factor at a location, something like:
>>
>>    int pj_pointscale( ProjPJ prj, double lon, double y, double *pointscale
>> );
>>        (return FALSE if not available for that projection?)
>>
>> The calling applications could then do something useful with that
>> information.
>>
>> Thoughts?
>>
>> Best Regards,
>> Brent Fraser
>>
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Fri Apr 23 02:37:28 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Fri, 23 Apr 2010 11:37:28 +0200
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <4BCF2433.8090108@pobox.com>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
	<4BCF2433.8090108@pobox.com>
Message-ID: <FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>


About the rotation sign conventions, I would
add that calling the two conventions "European"
and "American" is not helpful, since there is not
much agreement about which convention is which!
(Both conventions are used in Europe, and there
 is no obvious geographic pattern.)  

The terms "left-handed" and "right-handed" are
just as bad. 

It is better to say that cs2cs uses the sign
convention known as the 

     Position Vector Transformation.

If you look up the +towgs84 parameters on www.epsg-registry.org 
(filter by Type: Coordinate Transformation), you will see the text 

  "Warning: CARE! Ensure application uses this method! See Guidance Note
7-1"

above the parameter values.  This means that you
should scroll down _below_ the parameter values,
where you find the Method.  If it says:

 + Method [Position Vector transformation]

you can use the parameters directly in cs2cs.
But if it says 

 + Method [Coordinate Frame Rotation]

you should reverse the signs of the three
rotation parameters.

Best regards,
--
Mikael Rittri
Carmenta AB
SWEDEN
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
Sent: den 21 april 2010 18:14
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

Ilumas wrote:
> Dear list,
> 
> could you kindly confirm that the cs2cs's +towgs84 parameters remain 
> the same for a certain datum regardless of the direction of the 
> transformation. Some people (e.g.
> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberl
> y-td3410479.html) 
> <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propber
> ly-td3410479.html>seem to suggest that the values need to be negated 
> when going FROM wgs84 TO something else, but this seems a bit strange 
> to me. Unfortunately all the examples in the man pages seem to be 
> about changing the coordinates TO wgs84...

Ilumas,

The parameters are always expressed in terms of what it takes to
transform to WGS84.  If PROJ is transforming from WGS84 it will
internally reverse the sense of the transformation.

Keep in mind there is also an issue with the handedness of the
parameters.
Some folks, mostly european, express the parameters with a different
handedness.  The scripts that generate the "epsg" init file already know
about this case and convert to the usual PROJ.4/North American
handedness but if you are researching parameters yourself from various
sources you may need to be aware of it.

Best regards,
-- 
---------------------------------------+--------------------------------
---------------------------------------+------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From muginaa at gmail.com  Fri Apr 23 03:41:25 2010
From: muginaa at gmail.com (Ilumas)
Date: Fri, 23 Apr 2010 12:41:25 +0200
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
	<4BCF2433.8090108@pobox.com>
	<FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
Message-ID: <u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com>

Thanks Mikael,

what if the Method is:

 Method [Geocentric translations (geog2D domain)]

and the Sign reversible field value is YES for all three parameters?


best regards,

Ilumas






On Fri, Apr 23, 2010 at 11:37 AM, Mikael Rittri
<Mikael.Rittri at carmenta.com>wrote:

>
> About the rotation sign conventions, I would
> add that calling the two conventions "European"
> and "American" is not helpful, since there is not
> much agreement about which convention is which!
> (Both conventions are used in Europe, and there
>  is no obvious geographic pattern.)
>
> The terms "left-handed" and "right-handed" are
> just as bad.
>
> It is better to say that cs2cs uses the sign
> convention known as the
>
>     Position Vector Transformation.
>
> If you look up the +towgs84 parameters on www.epsg-registry.org
> (filter by Type: Coordinate Transformation), you will see the text
>
>  "Warning: CARE! Ensure application uses this method! See Guidance Note
> 7-1"
>
> above the parameter values.  This means that you
> should scroll down _below_ the parameter values,
> where you find the Method.  If it says:
>
>  + Method [Position Vector transformation]
>
> you can use the parameters directly in cs2cs.
> But if it says
>
>  + Method [Coordinate Frame Rotation]
>
> you should reverse the signs of the three
> rotation parameters.
>
> Best regards,
> --
> Mikael Rittri
> Carmenta AB
> SWEDEN
> www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
> Sent: den 21 april 2010 18:14
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] cs2cs's +towgs84 usage
>
> Ilumas wrote:
> > Dear list,
> >
> > could you kindly confirm that the cs2cs's +towgs84 parameters remain
> > the same for a certain datum regardless of the direction of the
> > transformation. Some people (e.g.
> > http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberl
> > y-td3410479.html)
> > <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propber
> > ly-td3410479.html>seem to suggest that the values need to be negated
> > when going FROM wgs84 TO something else, but this seems a bit strange
> > to me. Unfortunately all the examples in the man pages seem to be
> > about changing the coordinates TO wgs84...
>
> Ilumas,
>
> The parameters are always expressed in terms of what it takes to
> transform to WGS84.  If PROJ is transforming from WGS84 it will
> internally reverse the sense of the transformation.
>
> Keep in mind there is also an issue with the handedness of the
> parameters.
> Some folks, mostly european, express the parameters with a different
> handedness.  The scripts that generate the "epsg" init file already know
> about this case and convert to the usual PROJ.4/North American
> handedness but if you are researching parameters yourself from various
> sources you may need to be aware of it.
>
> Best regards,
> --
> ---------------------------------------+--------------------------------
> ---------------------------------------+------
> I set the clouds in motion - turn up   | Frank Warmerdam,
> warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam<http://pobox.com/%7Ewarmerdam>
> and watch the world go round - Rush    | Geospatial Programmer for Rent
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100423/b967bfbc/attachment.html>

From muginaa at gmail.com  Fri Apr 23 05:24:01 2010
From: muginaa at gmail.com (Ilumas)
Date: Fri, 23 Apr 2010 14:24:01 +0200
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
	<4BCF2433.8090108@pobox.com>
	<FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
	<u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com>
Message-ID: <y2wc5b83d351004230524y2de567e2pfcba188a5fc9451a@mail.gmail.com>

Anyway, I believe that the behaviour of a certain towgs84 string is easy to
test with cs2cs itself: just do the transormation to one direction (e.g.
from WGS84) and convert the resulting coordinates back to the original datum
using exactly the same parameter string. If the resulting coordinates equal
to the original ones, no negation is needed. Right?

ilumas



On Fri, Apr 23, 2010 at 12:41 PM, Ilumas <muginaa at gmail.com> wrote:

> Thanks Mikael,
>
> what if the Method is:
>
>  Method [Geocentric translations (geog2D domain)]
>
> and the Sign reversible field value is YES for all three parameters?
>
>
> best regards,
>
> Ilumas
>
>
>
>
>
>
> On Fri, Apr 23, 2010 at 11:37 AM, Mikael Rittri <
> Mikael.Rittri at carmenta.com> wrote:
>
>>
>> About the rotation sign conventions, I would
>> add that calling the two conventions "European"
>> and "American" is not helpful, since there is not
>> much agreement about which convention is which!
>> (Both conventions are used in Europe, and there
>>  is no obvious geographic pattern.)
>>
>> The terms "left-handed" and "right-handed" are
>> just as bad.
>>
>> It is better to say that cs2cs uses the sign
>> convention known as the
>>
>>     Position Vector Transformation.
>>
>> If you look up the +towgs84 parameters on www.epsg-registry.org
>> (filter by Type: Coordinate Transformation), you will see the text
>>
>>  "Warning: CARE! Ensure application uses this method! See Guidance Note
>> 7-1"
>>
>> above the parameter values.  This means that you
>> should scroll down _below_ the parameter values,
>> where you find the Method.  If it says:
>>
>>  + Method [Position Vector transformation]
>>
>> you can use the parameters directly in cs2cs.
>> But if it says
>>
>>  + Method [Coordinate Frame Rotation]
>>
>> you should reverse the signs of the three
>> rotation parameters.
>>
>> Best regards,
>> --
>> Mikael Rittri
>> Carmenta AB
>> SWEDEN
>> www.carmenta.com
>>
>> -----Original Message-----
>> From: proj-bounces at lists.maptools.org
>> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
>> Sent: den 21 april 2010 18:14
>> To: PROJ.4 and general Projections Discussions
>> Subject: Re: [Proj] cs2cs's +towgs84 usage
>>
>> Ilumas wrote:
>> > Dear list,
>> >
>> > could you kindly confirm that the cs2cs's +towgs84 parameters remain
>> > the same for a certain datum regardless of the direction of the
>> > transformation. Some people (e.g.
>> > http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberl
>> > y-td3410479.html)
>> > <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propber
>> > ly-td3410479.html>seem to suggest that the values need to be negated
>> > when going FROM wgs84 TO something else, but this seems a bit strange
>> > to me. Unfortunately all the examples in the man pages seem to be
>> > about changing the coordinates TO wgs84...
>>
>> Ilumas,
>>
>> The parameters are always expressed in terms of what it takes to
>> transform to WGS84.  If PROJ is transforming from WGS84 it will
>> internally reverse the sense of the transformation.
>>
>> Keep in mind there is also an issue with the handedness of the
>> parameters.
>> Some folks, mostly european, express the parameters with a different
>> handedness.  The scripts that generate the "epsg" init file already know
>> about this case and convert to the usual PROJ.4/North American
>> handedness but if you are researching parameters yourself from various
>> sources you may need to be aware of it.
>>
>> Best regards,
>> --
>> ---------------------------------------+--------------------------------
>> ---------------------------------------+------
>> I set the clouds in motion - turn up   | Frank Warmerdam,
>> warmerdam at pobox.com
>> light and sound - activate the windows | http://pobox.com/~warmerdam<http://pobox.com/%7Ewarmerdam>
>> and watch the world go round - Rush    | Geospatial Programmer for Rent
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100423/3a2c43bd/attachment.html>

From jrepetto at free.fr  Fri Apr 23 05:39:15 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Fri, 23 Apr 2010 14:39:15 +0200
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <y2wc5b83d351004230524y2de567e2pfcba188a5fc9451a@mail.gmail.com>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>	<4BCF2433.8090108@pobox.com>	<FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>	<u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com>
	<y2wc5b83d351004230524y2de567e2pfcba188a5fc9451a@mail.gmail.com>
Message-ID: <4BD194F3.4070604@free.fr>

Le 23/04/2010 14:24, Ilumas a écrit :
>
> Anyway, I believe that the behaviour of a certain towgs84 string is easy
> to test with cs2cs itself: just do the transformation to one direction
> (e.g. from WGS84) and convert the resulting coordinates back to the
> original datum using exactly the same parameter string. If the resulting
> coordinates equal to the original ones, no negation is needed. Right?
>
> ilumas

Hi,

I think you are wrong. To check the parameters, you need to know the 
coordinates of at least one point in both datums, and compare them with 
the results of cs2cs.

Jean-Claude


From strebe at aol.com  Fri Apr 23 11:47:11 2010
From: strebe at aol.com (strebe)
Date: Fri, 23 Apr 2010 11:47:11 -0700
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
Message-ID: <9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>



On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com> wrote:

The terms "left-handed" and "right-handed" are
just as bad. 
Are they? Those terms are standard in mathematics, where "Position Vector Transformation" and "Coordinate Frame Rotation" are unknown. There is no ambiguity in their meaning or usage.

(Not that I would advocate using the terminology in this context, since EPSG's terminology is Position Vector Transformation versus Coordinate Frame Rotation. But at least it is not arbitrary like "American" versus "European".)

Regards,
— daan Strebe


On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com> wrote:

From:   "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Subject:    Re: [Proj] cs2cs's +towgs84 usage
Date:   April 23, 2010 2:37:28 AM PDT
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
About the rotation sign conventions, I would
add that calling the two conventions "European"
and "American" is not helpful, since there is not
much agreement about which convention is which!
(Both conventions are used in Europe, and there
 is no obvious geographic pattern.)  

The terms "left-handed" and "right-handed" are
just as bad. 

It is better to say that cs2cs uses the sign
convention known as the 

     Position Vector Transformation.

If you look up the +towgs84 parameters on www.epsg-registry.org 
(filter by Type: Coordinate Transformation), you will see the text 

  "Warning: CARE! Ensure application uses this method! See Guidance Note
7-1"

above the parameter values.  This means that you
should scroll down _below_ the parameter values,
where you find the Method.  If it says:

 + Method [Position Vector transformation]

you can use the parameters directly in cs2cs.
But if it says 

 + Method [Coordinate Frame Rotation]

you should reverse the signs of the three
rotation parameters.

Best regards,
--
Mikael Rittri
Carmenta AB
SWEDEN
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
Sent: den 21 april 2010 18:14
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

Ilumas wrote:
> Dear list,
> 
> could you kindly confirm that the cs2cs's +towgs84 parameters remain 
> the same for a certain datum regardless of the direction of the 
> transformation. Some people (e.g.
> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberl
> y-td3410479.html) 
> <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propber
> ly-td3410479.html>seem to suggest that the values need to be negated 
> when going FROM wgs84 TO something else, but this seems a bit strange 
> to me. Unfortunately all the examples in the man pages seem to be 
> about changing the coordinates TO wgs84...

Ilumas,

The parameters are always expressed in terms of what it takes to
transform to WGS84.  If PROJ is transforming from WGS84 it will
internally reverse the sense of the transformation.

Keep in mind there is also an issue with the handedness of the
parameters.
Some folks, mostly european, express the parameters with a different
handedness.  The scripts that generate the "epsg" init file already know
about this case and convert to the usual PROJ.4/North American
handedness but if you are researching parameters yourself from various
sources you may need to be aware of it.

Best regards,
-- 
---------------------------------------+--------------------------------
---------------------------------------+------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100423/c674e5f6/attachment.html>

From cjmce at lsu.edu  Fri Apr 23 12:02:00 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 23 Apr 2010 14:02:00 -0500
Subject: [Proj] cs2cs's +towgs84 usage
References: <9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A6180@email002.lsu.edu>

Interesting to note that the "European" convention is left-handed in geodetic 7-parameter transformations just as it is left-handed in their photogrammetric transformations and also was with their old European opto-mechanical stereoplotters.
 
The "American' convention is right-handed in geodetic 7-parameter transformations just as it is right-handed in their photogrammetric transformations and also was with their old American opto-mechanical stereoplotters.
 
Both sides of the Atlantic have been pretty consistent for over a century ... that's not arbitrary to me.
 
Clifford J. Mugnier, C.P., C.M.S.
Past National Director (2006-2008),
Photogrammetric Applications Division
American Society for Photogrammetry and Remote Sensing 
and 
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-8925 [Research] 
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Member Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group
======================================================
http://www.asprs.org/resources/GRIDS/
======================================================

________________________________

From: proj-bounces at lists.maptools.org on behalf of strebe
Sent: Fri 23-Apr-10 13:47
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage





On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com> wrote:


	
	The terms "left-handed" and "right-handed" are
	just as bad. 

Are they? Those terms are standard in mathematics, where "Position Vector Transformation" and "Coordinate Frame Rotation" are unknown. There is no ambiguity in their meaning or usage.


(Not that I would advocate using the terminology in this context, since EPSG's terminology is Position Vector Transformation versus Coordinate Frame Rotation. But at least it is not arbitrary like "American" versus "European".)


Regards, 
- daan Strebe 




On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com> wrote:


	
From:	 "Mikael Rittri" <Mikael.Rittri at carmenta.com>	
Subject:	 Re: [Proj] cs2cs's +towgs84 usage	
Date:	 April 23, 2010 2:37:28 AM PDT	
To:	 "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>	
	About the rotation sign conventions, I would
	add that calling the two conventions "European"
	and "American" is not helpful, since there is not
	much agreement about which convention is which!
	(Both conventions are used in Europe, and there
	 is no obvious geographic pattern.)  
	
	The terms "left-handed" and "right-handed" are
	just as bad. 
	
	It is better to say that cs2cs uses the sign
	convention known as the 
	
	     Position Vector Transformation.
	
	If you look up the +towgs84 parameters on www.epsg-registry.org 
	(filter by Type: Coordinate Transformation), you will see the text 
	
	  "Warning: CARE! Ensure application uses this method! See Guidance Note
	7-1"
	
	above the parameter values.  This means that you
	should scroll down _below_ the parameter values,
	where you find the Method.  If it says:
	
	 + Method [Position Vector transformation]
	
	you can use the parameters directly in cs2cs.
	But if it says 
	
	 + Method [Coordinate Frame Rotation]
	
	you should reverse the signs of the three
	rotation parameters.
	
	Best regards,
	--
	Mikael Rittri
	Carmenta AB
	SWEDEN
	www.carmenta.com
	
	-----Original Message-----
	From: proj-bounces at lists.maptools.org
	[mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
	Sent: den 21 april 2010 18:14
	To: PROJ.4 and general Projections Discussions
	Subject: Re: [Proj] cs2cs's +towgs84 usage
	
	Ilumas wrote:
	> Dear list,
	> 
	> could you kindly confirm that the cs2cs's +towgs84 parameters remain 
	> the same for a certain datum regardless of the direction of the 
	> transformation. Some people (e.g.
	> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberl
	> y-td3410479.html) 
	> <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propber
	> ly-td3410479.html>seem to suggest that the values need to be negated 
	> when going FROM wgs84 TO something else, but this seems a bit strange 
	> to me. Unfortunately all the examples in the man pages seem to be 
	> about changing the coordinates TO wgs84...
	
	Ilumas,
	
	The parameters are always expressed in terms of what it takes to
	transform to WGS84.  If PROJ is transforming from WGS84 it will
	internally reverse the sense of the transformation.
	
	Keep in mind there is also an issue with the handedness of the
	parameters.
	Some folks, mostly european, express the parameters with a different
	handedness.  The scripts that generate the "epsg" init file already know
	about this case and convert to the usual PROJ.4/North American
	handedness but if you are researching parameters yourself from various
	sources you may need to be aware of it.
	
	Best regards,
	-- 
	---------------------------------------+--------------------------------
	---------------------------------------+------
	I set the clouds in motion - turn up   | Frank Warmerdam,
	warmerdam at pobox.com
	light and sound - activate the windows | http://pobox.com/~warmerdam
	and watch the world go round - Rush    | Geospatial Programmer for Rent
	
	_______________________________________________
	Proj mailing list
	Proj at lists.maptools.org
	http://lists.maptools.org/mailman/listinfo/proj
	_______________________________________________
	Proj mailing list
	Proj at lists.maptools.org
	http://lists.maptools.org/mailman/listinfo/proj
	



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100423/12b6d155/attachment.html>

From ndzinn at comcast.net  Fri Apr 23 15:45:24 2010
From: ndzinn at comcast.net (Noel Zinn)
Date: Fri, 23 Apr 2010 17:45:24 -0500
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
References: <FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
	<9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
Message-ID: <41797AF32BFF445088700FC2F58C565B@PowerSpec>

The terms "left-handed" and "right-handed" are standard in mathematics, but
they are ambiguous in geodesy where they require another convention to
clarify their meaning.  That convention would be whether you're viewing the
axis from the geocenter out, or from the outside in.  There is no ambiguity
about the "Position Vector Rotation" and "Coordinate Frame Rotation"
terminology.  You're either rotating the position vector from the geocenter
within the coordinate frame, or rotating the coordinate frame about the
position vector.  This terminology originated with UKOOA (UK Offshore
Operators' Association) for (I believe) the P1/90 navigation format in 1990.
It was borrowed by the EPSG, though the Shell geodesist who coined the terms
for UKOOA served (and continues to serve) on the EPSG (now subsumed into the
OGP, International Association of Oil and Gas Producers).  Regards, Noel
Zinn
 
  _____  


From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of strebe
Sent: Friday, April 23, 2010 1:47 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

 

 

 

On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com>
wrote:

 

The terms "left-handed" and "right-handed" are
just as bad. 

Are they? Those terms are standard in mathematics, where "Position Vector
Transformation" and "Coordinate Frame Rotation" are unknown. There is no
ambiguity in their meaning or usage.

 

(Not that I would advocate using the terminology in this context, since
EPSG's terminology is Position Vector Transformation versus Coordinate Frame
Rotation. But at least it is not arbitrary like "American" versus
"European".)

 

Regards,

- daan Strebe

 

 

On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com>
wrote:

 



From:

"Mikael Rittri" <Mikael.Rittri at carmenta.com>


Subject:

Re: [Proj] cs2cs's +towgs84 usage


Date:

April 23, 2010 2:37:28 AM PDT


To:

"PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>

About the rotation sign conventions, I would
add that calling the two conventions "European"
and "American" is not helpful, since there is not
much agreement about which convention is which!
(Both conventions are used in Europe, and there
 is no obvious geographic pattern.)  
 
The terms "left-handed" and "right-handed" are
just as bad. 
 
It is better to say that cs2cs uses the sign
convention known as the 
 
     Position Vector Transformation.
 
If you look up the +towgs84 parameters on www.epsg-registry.org 
(filter by Type: Coordinate Transformation), you will see the text 
 
  "Warning: CARE! Ensure application uses this method! See Guidance Note
7-1"
 
above the parameter values.  This means that you
should scroll down _below_ the parameter values,
where you find the Method.  If it says:
 
 + Method [Position Vector transformation]
 
you can use the parameters directly in cs2cs.
But if it says 
 
 + Method [Coordinate Frame Rotation]
 
you should reverse the signs of the three
rotation parameters.
 
Best regards,
--
Mikael Rittri
Carmenta AB
SWEDEN
www.carmenta.com
 
-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
Sent: den 21 april 2010 18:14
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage
 
Ilumas wrote:
> Dear list,
> 
> could you kindly confirm that the cs2cs's +towgs84 parameters remain 
> the same for a certain datum regardless of the direction of the 
> transformation. Some people (e.g.
> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberl
> y-td3410479.html) 
> <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propber
> ly-td3410479.html>seem to suggest that the values need to be negated 
> when going FROM wgs84 TO something else, but this seems a bit strange 
> to me. Unfortunately all the examples in the man pages seem to be 
> about changing the coordinates TO wgs84...
 
Ilumas,
 
The parameters are always expressed in terms of what it takes to
transform to WGS84.  If PROJ is transforming from WGS84 it will
internally reverse the sense of the transformation.
 
Keep in mind there is also an issue with the handedness of the
parameters.
Some folks, mostly european, express the parameters with a different
handedness.  The scripts that generate the "epsg" init file already know
about this case and convert to the usual PROJ.4/North American
handedness but if you are researching parameters yourself from various
sources you may need to be aware of it.
 
Best regards,
-- 
---------------------------------------+--------------------------------
---------------------------------------+------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent
 
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100423/97776321/attachment.html>

From ndzinn at comcast.net  Fri Apr 23 16:04:13 2010
From: ndzinn at comcast.net (Noel Zinn)
Date: Fri, 23 Apr 2010 18:04:13 -0500
Subject: [Proj] cs2cs's +towgs84 usage - again2
In-Reply-To: <9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
References: <FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
	<9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
Message-ID: <5B1455EFBDCB48E5A204939AD1A505F7@PowerSpec>

The terms "left-handed" and "right-handed" are standard in mathematics, but
they are ambiguous in geodesy where they require another convention to
clarify their meaning.  That convention would be whether you're viewing the
axis from the geocenter out, or from the outside in.  There is no ambiguity
about the "Position Vector Rotation" and "Coordinate Frame Rotation"
terminology.  You're either rotating the position vector from the geocenter
within the coordinate frame, or rotating the coordinate frame about the
position vector.  This terminology originated with UKOOA (UK Offshore
Operators' Association) for (I believe) the P1/90 navigation format in 1990.
It was borrowed by the EPSG, though the Shell geodesist who coined the terms
for UKOOA served (and continues to serve) on the EPSG (now subsumed into the
OGP, International Association of Oil and Gas Producers).  Regards, Noel
Zinn

 

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of strebe
Sent: Friday, April 23, 2010 1:47 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

 

 

 

On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com>
wrote:

 

The terms "left-handed" and "right-handed" are
just as bad. 

Are they? Those terms are standard in mathematics, where "Position Vector
Transformation" and "Coordinate Frame Rotation" are unknown. There is no
ambiguity in their meaning or usage.

 

(Not that I would advocate using the terminology in this context, since
EPSG's terminology is Position Vector Transformation versus Coordinate Frame
Rotation. But at least it is not arbitrary like "American" versus
"European".)

 

Regards,

- daan Strebe

 

 

On Apr 23, 2010, at 2:37:28 AM, "Mikael Rittri" <Mikael.Rittri at carmenta.com>
wrote:

 



From:

"Mikael Rittri" <Mikael.Rittri at carmenta.com>


Subject:

Re: [Proj] cs2cs's +towgs84 usage


Date:

April 23, 2010 2:37:28 AM PDT


To:

"PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>

About the rotation sign conventions, I would
add that calling the two conventions "European"
and "American" is not helpful, since there is not
much agreement about which convention is which!
(Both conventions are used in Europe, and there
 is no obvious geographic pattern.)  
 
The terms "left-handed" and "right-handed" are
just as bad. 
 
It is better to say that cs2cs uses the sign
convention known as the 
 
     Position Vector Transformation.
 
If you look up the +towgs84 parameters on www.epsg-registry.org 
(filter by Type: Coordinate Transformation), you will see the text 
 
  "Warning: CARE! Ensure application uses this method! See Guidance Note
7-1"
 
above the parameter values.  This means that you
should scroll down _below_ the parameter values,
where you find the Method.  If it says:
 
 + Method [Position Vector transformation]
 
you can use the parameters directly in cs2cs.
But if it says 
 
 + Method [Coordinate Frame Rotation]
 
you should reverse the signs of the three
rotation parameters.
 
Best regards,
--
Mikael Rittri
Carmenta AB
SWEDEN
www.carmenta.com
 
-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
Sent: den 21 april 2010 18:14
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage
 
Ilumas wrote:
> Dear list,
> 
> could you kindly confirm that the cs2cs's +towgs84 parameters remain 
> the same for a certain datum regardless of the direction of the 
> transformation. Some people (e.g.
> http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propberl
> y-td3410479.html) 
> <http://n2.nabble.com/Datum-Shift-WGS84-to-Arc1960-not-working-propber
> ly-td3410479.html>seem to suggest that the values need to be negated 
> when going FROM wgs84 TO something else, but this seems a bit strange 
> to me. Unfortunately all the examples in the man pages seem to be 
> about changing the coordinates TO wgs84...
 
Ilumas,
 
The parameters are always expressed in terms of what it takes to
transform to WGS84.  If PROJ is transforming from WGS84 it will
internally reverse the sense of the transformation.
 
Keep in mind there is also an issue with the handedness of the
parameters.
Some folks, mostly european, express the parameters with a different
handedness.  The scripts that generate the "epsg" init file already know
about this case and convert to the usual PROJ.4/North American
handedness but if you are researching parameters yourself from various
sources you may need to be aware of it.
 
Best regards,
-- 
---------------------------------------+--------------------------------
---------------------------------------+------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent
 
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100423/336bdf00/attachment.html>

From muginaa at gmail.com  Sat Apr 24 01:02:11 2010
From: muginaa at gmail.com (Ilumas)
Date: Sat, 24 Apr 2010 11:02:11 +0300
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <4BD194F3.4070604@free.fr>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
	<4BCF2433.8090108@pobox.com>
	<FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
	<u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com>
	<y2wc5b83d351004230524y2de567e2pfcba188a5fc9451a@mail.gmail.com>
	<4BD194F3.4070604@free.fr>
Message-ID: <i2oc5b83d351004240102n42bdcd5tc57d0335e04307a5@mail.gmail.com>

Well, I agree that for assessing the accuracy of the re-projection results
one needs a reference, but that should not be necessary for understanding
the behavior of the cs2cs or the towgs84 string. Therefore I still argue
that the test I suggested below is a valid way to test whether the parameter
values need to be negated or not. Anyone?

ilumas

On Fri, Apr 23, 2010 at 3:39 PM, Jean-Claude REPETTO <jrepetto at free.fr>wrote:

> Le 23/04/2010 14:24, Ilumas a écrit :
> >
> > Anyway, I believe that the behaviour of a certain towgs84 string is easy
> > to test with cs2cs itself: just do the transformation to one direction
> > (e.g. from WGS84) and convert the resulting coordinates back to the
> > original datum using exactly the same parameter string. If the resulting
> > coordinates equal to the original ones, no negation is needed. Right?
> >
> > ilumas
>
> Hi,nding the behavious of the cs2cs
>
> I think you are wrong. To check the parameters, you need to know the
> coordinates of at least one point in both datums, and compare them with
> the results of cs2cs.
>
> Jean-Claude
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100424/642b483c/attachment.html>

From j.l.h.hartmann at uva.nl  Sat Apr 24 02:10:02 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Sat, 24 Apr 2010 11:10:02 +0200
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7026A6180@email002.lsu.edu>
References: <9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
	<B597ADFC46B67741B18EA6AA13613FF7026A6180@email002.lsu.edu>
Message-ID: <4BD2B56A.9030702@uva.nl>



On 04/23/10 21:02, Clifford J Mugnier wrote:
> Interesting to note that the "European" convention is left-handed in 
> geodetic 7-parameter transformations just as it is left-handed in 
> their photogrammetric transformations and also was with their old 
> European opto-mechanical stereoplotters.
> The "American' convention is right-handed in geodetic 7-parameter 
> transformations just as it is right-handed in their photogrammetric 
> transformations and also was with their old American opto-mechanical 
> stereoplotters.
> Both sides of the Atlantic have been pretty consistent for over a 
> century ... that's not arbitrary to me.
>
It's all because of the longer history we have here in Europe. See:

http://www.amphicars.com/acleft.htm
http://www.straightdope.com/columns/read/634/why-do-the-british-drive-on-the-left

and a few others if you search Google :-)

Jan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100424/508005e0/attachment.html>

From ndzinn at comcast.net  Sat Apr 24 05:06:57 2010
From: ndzinn at comcast.net (Noel Zinn)
Date: Sat, 24 Apr 2010 07:06:57 -0500
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <i2oc5b83d351004240102n42bdcd5tc57d0335e04307a5@mail.gmail.com>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com><4BCF2433.8090108@pobox.com><FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se><u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com><y2wc5b83d351004230524y2de567e2pfcba188a5fc9451a@mail.gmail.com><4BD194F3.4070604@free.fr>
	<i2oc5b83d351004240102n42bdcd5tc57d0335e04307a5@mail.gmail.com>
Message-ID: <EADCBB32AF4745D18D9274BD0BD9ED80@PowerSpec>

Not true.  A round trip will always close.  Youll have learned nothing
about the correct rotation sense.  You can test this yourself.  Do one round
trip with the rotations unchanged and do another round trip with the
rotations negated.  Theyll both close on the original point.  Correctness
is determined by the intermediate coordinates (right or wrong), not by the
round-trip closure.  Noel Zinn

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Ilumas
Sent: Saturday, April 24, 2010 3:02 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

 

Well, I agree that for assessing the accuracy of the re-projection results
one needs a reference, but that should not be necessary for understanding
the behavior of the cs2cs or the towgs84 string. Therefore I still argue
that the test I suggested below is a valid way to test whether the parameter
values need to be negated or not. Anyone?

 

ilumas

On Fri, Apr 23, 2010 at 3:39 PM, Jean-Claude REPETTO <jrepetto at free.fr>
wrote:

Le 23/04/2010 14:24, Ilumas a écrit :

>
> Anyway, I believe that the behaviour of a certain towgs84 string is easy

> to test with cs2cs itself: just do the transformation to one direction

> (e.g. from WGS84) and convert the resulting coordinates back to the
> original datum using exactly the same parameter string. If the resulting
> coordinates equal to the original ones, no negation is needed. Right?
>
> ilumas

Hi,nding the behavious of the cs2cs

I think you are wrong. To check the parameters, you need to know the
coordinates of at least one point in both datums, and compare them with
the results of cs2cs.

Jean-Claude

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100424/78d95e9f/attachment.html>

From muginaa at gmail.com  Sat Apr 24 05:52:16 2010
From: muginaa at gmail.com (Ilumas)
Date: Sat, 24 Apr 2010 15:52:16 +0300
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <EADCBB32AF4745D18D9274BD0BD9ED80@PowerSpec>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com>
	<4BCF2433.8090108@pobox.com>
	<FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
	<u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com>
	<y2wc5b83d351004230524y2de567e2pfcba188a5fc9451a@mail.gmail.com>
	<4BD194F3.4070604@free.fr>
	<i2oc5b83d351004240102n42bdcd5tc57d0335e04307a5@mail.gmail.com>
	<EADCBB32AF4745D18D9274BD0BD9ED80@PowerSpec>
Message-ID: <o2uc5b83d351004240552v2971ccdbkc08092a6cedf9c9c@mail.gmail.com>

Sure,

but that's not the point. The original question was if the values need to be
negated when going FROM wgs84 TO something else. If that was correct, one
should do the round trip as follows:

1.  cs2cs +proj=utm +zone=a +datum=wgs84  +to +proj=utm +zone=a
+datum=datum2 +towgs84 dx,dy,dz
input: x1,y2
output: x2,y2
2.  +proj=utm +zone=a +datum=datum2 *+towgs84 (-1)dx,(-1)dy,(-1)dz* +to
+proj=utm +zone=a +datum=wgs84
input: x2,y2
output:x1,y1

Or am I completely lost here?

Thanks for your patience...

I


On Sat, Apr 24, 2010 at 3:06 PM, Noel Zinn <ndzinn at comcast.net> wrote:

>  Not true.  A round trip will always close.  You’ll have learned nothing
> about the correct rotation sense.  You can test this yourself.  Do one round
> trip with the rotations unchanged and do another round trip with the
> rotations negated.  They’ll both close on the original point.  Correctness
> is determined by the intermediate coordinates (right or wrong), not by the
> round-trip closure.  –Noel Zinn
>
>
>  ------------------------------
>
> *From:* proj-bounces at lists.maptools.org [mailto:
> proj-bounces at lists.maptools.org] *On Behalf Of *Ilumas
> *Sent:* Saturday, April 24, 2010 3:02 AM
>
> *To:* PROJ.4 and general Projections Discussions
> *Subject:* Re: [Proj] cs2cs's +towgs84 usage
>
>
>
> Well, I agree that for assessing the accuracy of the re-projection results
> one needs a reference, but that should not be necessary for understanding
> the behavior of the cs2cs or the towgs84 string. Therefore I still argue
> that the test I suggested below is a valid way to test whether the parameter
> values need to be negated or not. Anyone?
>
>
>
> ilumas
>
> On Fri, Apr 23, 2010 at 3:39 PM, Jean-Claude REPETTO <jrepetto at free.fr>
> wrote:
>
> Le 23/04/2010 14:24, Ilumas a écrit :
>
> >
> > Anyway, I believe that the behaviour of a certain towgs84 string is easy
>
> > to test with cs2cs itself: just do the transformation to one direction
>
> > (e.g. from WGS84) and convert the resulting coordinates back to the
> > original datum using exactly the same parameter string. If the resulting
> > coordinates equal to the original ones, no negation is needed. Right?
> >
> > ilumas
>
> Hi,nding the behavious of the cs2cs
>
> I think you are wrong. To check the parameters, you need to know the
> coordinates of at least one point in both datums, and compare them with
> the results of cs2cs.
>
> Jean-Claude
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100424/76413b07/attachment.html>

From ndzinn at comcast.net  Sat Apr 24 06:04:11 2010
From: ndzinn at comcast.net (Noel Zinn)
Date: Sat, 24 Apr 2010 08:04:11 -0500
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <o2uc5b83d351004240552v2971ccdbkc08092a6cedf9c9c@mail.gmail.com>
References: <u2lc5b83d351004210856kc644780dv228bb175729e78fd@mail.gmail.com><4BCF2433.8090108@pobox.com><FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se><u2vc5b83d351004230341k3333f529uc0f9243ab6937683@mail.gmail.com><y2wc5b83d351004230524y2de567e2pfcba188a5fc9451a@mail.gmail.com><4BD194F3.4070604@free.fr><i2oc5b83d351004240102n42bdcd5tc57d0335e04307a5@mail.gmail.com><EADCBB32AF4745D18D9274BD0BD9ED80@PowerSpec>
	<o2uc5b83d351004240552v2971ccdbkc08092a6cedf9c9c@mail.gmail.com>
Message-ID: <4C9271FE96C043A3B365D0622F84B904@PowerSpec>

Gotcha.  Frank answered your question yesterday:

 

The parameters are always expressed in terms of what it takes to transform
to WGS84.  If PROJ is transforming from WGS84 it will internally reverse the
sense of the transformation. The parameters are always expressed in terms of
what it takes to transform to WGS84.  If PROJ is transforming from WGS84 it
will internally reverse the sense of the transformation.

 

And you can test this as you propose.

 

But this test tells you nothing about the correct rotation sense to use.
For that you need an external test (truth) point with coordinates in both
datums.

 

Noel

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Ilumas
Sent: Saturday, April 24, 2010 7:52 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

 

Sure,

but that's not the point. The original question was if the values need to be
negated when going FROM wgs84 TO something else. If that was correct, one
should do the round trip as follows:

1.  cs2cs +proj=utm +zone=a +datum=wgs84  +to +proj=utm +zone=a
+datum=datum2 +towgs84 dx,dy,dz
input: x1,y2
output: x2,y2 
2.  +proj=utm +zone=a +datum=datum2 +towgs84 (-1)dx,(-1)dy,(-1)dz +to
+proj=utm +zone=a +datum=wgs84  
input: x2,y2
output:x1,y1

Or am I completely lost here?

Thanks for your patience...

I



On Sat, Apr 24, 2010 at 3:06 PM, Noel Zinn <ndzinn at comcast.net> wrote:

Not true.  A round trip will always close.  Youll have learned nothing
about the correct rotation sense.  You can test this yourself.  Do one round
trip with the rotations unchanged and do another round trip with the
rotations negated.  Theyll both close on the original point.  Correctness
is determined by the intermediate coordinates (right or wrong), not by the
round-trip closure.  Noel Zinn

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Ilumas
Sent: Saturday, April 24, 2010 3:02 AM


To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

 

Well, I agree that for assessing the accuracy of the re-projection results
one needs a reference, but that should not be necessary for understanding
the behavior of the cs2cs or the towgs84 string. Therefore I still argue
that the test I suggested below is a valid way to test whether the parameter
values need to be negated or not. Anyone?

 

ilumas

On Fri, Apr 23, 2010 at 3:39 PM, Jean-Claude REPETTO <jrepetto at free.fr>
wrote:

Le 23/04/2010 14:24, Ilumas a écrit :

>
> Anyway, I believe that the behaviour of a certain towgs84 string is easy

> to test with cs2cs itself: just do the transformation to one direction

> (e.g. from WGS84) and convert the resulting coordinates back to the
> original datum using exactly the same parameter string. If the resulting
> coordinates equal to the original ones, no negation is needed. Right?
>
> ilumas

Hi,nding the behavious of the cs2cs

I think you are wrong. To check the parameters, you need to know the
coordinates of at least one point in both datums, and compare them with
the results of cs2cs.

Jean-Claude

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100424/3ab9d5a1/attachment.html>

From tf at ttqv.com  Sun Apr 25 07:45:27 2010
From: tf at ttqv.com (Thomas Flemming)
Date: Sun, 25 Apr 2010 15:45:27 +0100
Subject: [Proj] Projection list with parameters?
Message-ID: <4BD45587.3040306@ttqv.com>

Good afternoon,

I would like to have a list of all supported projections with there paramters.

This command comes quiet close:

cs2cs -lp > list_projections.txt

But it only gives the proj-parameter and the name.

Is it possible also to have the accepted/required parameters included?
Like for example:

utm : UTM : zone southern

or

tmerc: Transverse Mercator: lat_0 lon_0 x0 y0 ...

Best regards,
Thomas


-- 
/****************************************
**   Dipl.-Ing. Thomas Flemming
**   Software Development
**
**   Touratech AG
**   Auf dem Zimmermann 7-9
**   D-78078 Niedereschach
**
**   mail  tf at ttqv.com
**   fon   +49 (0) 7728 9279-206
**   fax   +49 (0) 7728 9279-29
**
**   http://www.ttqv.com
**   http://www.touratech.de
**
**   ... und immer dem Pfeil nach!
***************************************/


From Mikael.Rittri at carmenta.com  Mon Apr 26 02:07:06 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 26 Apr 2010 11:07:06 +0200
Subject: [Proj] cs2cs's +towgs84 usage
In-Reply-To: <9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
References: <FAF6E56B26D2044696772EBE89B1535101D5F2A2@posty.carmenta.se>
	<9CF09F87.CDF3.4BF7.ADFD.449E7F9FA692@aol.com>
Message-ID: <FAF6E56B26D2044696772EBE89B1535101D5F3B4@posty.carmenta.se>

Clifford Mugnier wrote:
 
> Both sides of the Atlantic have been pretty consistent for over a
century ... 
> that's not arbitrary to me.
 
I don't know anything about photogrammetry or stereoplotters.
But for publishing datum shifts, there are many countries in 
Europe that use the "American" Coordinate Frame Rotation 
(Sweden, Finland, Belgium, Luxembourg, the Netherlands, Hungary,
 Slovenia, ...) 
    It is true that EuroGeographics uses only the "European"
Position Vector Transformation, but so does NATO 
(http://earth-info.nga.mil/GandG/coordsys/datums/helmert.html). 
 
dan Streebe wrote: 

> > The terms "left-handed" and "right-handed" are just as bad. 
> 
> Are they? Those terms are standard in mathematics, where 
> "Position Vector Transformation" and "Coordinate Frame Rotation" 
> are unknown. There is no ambiguity in their meaning or usage.
> 
> (Not that I would advocate using the terminology in this context, 
> since EPSG's terminology is Position Vector Transformation versus 
> Coordinate Frame Rotation. But at least it is not arbitrary like
> "American" versus "European".)

Noel Zinn has already replied to this.  I will just add that 
Clifford Mugnier says that the Coordinate Frame Rotation is 
right-handed, while the British Ordnance Survey says that it 
is the Position Vector Transformation that is right-handed. 
http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesyst
emsinfo/guidecontents/guide6.html

Ilumas wrote:
> what if the Method is:
>
>     Method [Geocentric translations (geog2D domain)]
>
> and the Sign reversible field value is YES for all 
> three parameters?

The Geocentric Translations can be regarded as a special case
of the 7-parameter transformation, where the rotations and 
the scale difference all are zero. Then there is no problem 
with rotation sign convention. And the EPSG has standardized
on publishing datum shifts in the direction _to_ WGS84. 
So you can just write 

     +towgs84=dx,dy,dz

where the dx, dy and dz are the X-axis translation etc. as 
given by EPSG.

best regards,

--
Mikael Rittri
Carmenta AB
SWEDEN
www.carmenta.com 

________________________________

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of strebe
Sent: den 23 april 2010 20:47
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] cs2cs's +towgs84 usage

[-- text deleted --]


From lponti at inbox.com  Tue Apr 27 04:25:35 2010
From: lponti at inbox.com (Luigi Ponti)
Date: Tue, 27 Apr 2010 13:25:35 +0200
Subject: [Proj] How to acknowledge support from the community/list?
Message-ID: <4BD6C9AF.5010604@inbox.com>

Dear list,

I really appreciated your support, see:
http://osgeo-org.1803224.n2.nabble.com/Standard-projection-for-Mediterranean-basin-tp4567082p4567082.html

and would like to know if there is a standard way to acknowledge that 
when writing a paper.

I have not found this info on:
http://trac.osgeo.org/proj/

and by the way I could not download the manual at:
ftp://ftp.remotesensing.org/proj/OF90-284.pdf

Kind regards,

Luigi


From gdt at ir.bbn.com  Tue Apr 27 07:28:17 2010
From: gdt at ir.bbn.com (Greg Troxel)
Date: Tue, 27 Apr 2010 10:28:17 -0400
Subject: [Proj] How to acknowledge support from the community/list?
In-Reply-To: <4BD6C9AF.5010604@inbox.com> (Luigi Ponti's message of "Tue, 27
	Apr 2010 13:25:35 +0200")
References: <4BD6C9AF.5010604@inbox.com>
Message-ID: <rmimxwpvuke.fsf@fnord.ir.bbn.com>


Luigi Ponti <lponti at inbox.com> writes:

> I really appreciated your support, see:
> http://osgeo-org.1803224.n2.nabble.com/Standard-projection-for-Mediterranean-basin-tp4567082p4567082.html
>
> and would like to know if there is a standard way to acknowledge that 
> when writing a paper.
>
> I have not found this info on:
> http://trac.osgeo.org/proj/

I think this is more of a academic citation style question than a proj
list question.   I would say something like


"PROJ.4 and general Projections Discussions mailing list", private
communications from multiple list members, date-range.
http://lists.maptools.org/mailman/listinfo/proj


Just don't reference nabble!

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100427/e538bed2/attachment.sig>

From randyqiuxy at hotmail.com  Wed Apr 28 07:05:09 2010
From: randyqiuxy at hotmail.com (Randy)
Date: Wed, 28 Apr 2010 22:05:09 +0800
Subject: [Proj] where is the default origin ?
Message-ID: <BLU0-SMTP813832931029003372E4F2C3020@phx.gbl>

Hi list,
I'm new here, and know little about projection in GIS.

I'd like to know where the default origin is when I do Mercator
projection like this:
from "+proj=latlong+ellps=WGS84+datum=WGS84"
to   "+proj=merc+lat_ts=30+ellps=WGS84+datum=WGS84+unit=meter"

I just know the default origin is the point of intersection with
greenwich and equatorial when I use the default latitude of true
scale,but if now the latitude of true scale is decided by "lat_ts",where
is the default origin?
 
Thanks a lot!

Best regards,
Randy



From glynn at gclements.plus.com  Wed Apr 28 13:31:27 2010
From: glynn at gclements.plus.com (Glynn Clements)
Date: Wed, 28 Apr 2010 21:31:27 +0100
Subject: [Proj] where is the default origin ?
In-Reply-To: <BLU0-SMTP813832931029003372E4F2C3020@phx.gbl>
References: <BLU0-SMTP813832931029003372E4F2C3020@phx.gbl>
Message-ID: <19416.39711.802626.462215@cerise.gclements.plus.com>


Randy wrote:

> I'd like to know where the default origin is when I do Mercator
> projection like this:
> from "+proj=latlong+ellps=WGS84+datum=WGS84"
> to   "+proj=merc+lat_ts=30+ellps=WGS84+datum=WGS84+unit=meter"
> 
> I just know the default origin is the point of intersection with
> greenwich and equatorial when I use the default latitude of true
> scale,but if now the latitude of true scale is decided by "lat_ts",where
> is the default origin?

It's still at the intersection of the prime meridian and the equator.

-- 
Glynn Clements <glynn at gclements.plus.com>


From randyqiuxy at hotmail.com  Wed Apr 28 19:37:17 2010
From: randyqiuxy at hotmail.com (Randy)
Date: Thu, 29 Apr 2010 10:37:17 +0800
Subject: [Proj] where is the default origin ?
In-Reply-To: <19416.39711.802626.462215@cerise.gclements.plus.com>
References: <BLU0-SMTP813832931029003372E4F2C3020@phx.gbl>
	<19416.39711.802626.462215@cerise.gclements.plus.com>
Message-ID: <BLU0-SMTP484336AF82B4FA3F92FB0AC3010@phx.gbl>

Hi Glynn,
Thanks for your timely response!
> > I'd like to know where the default origin is when I do Mercator
> > projection like this:
> > from "+proj=latlong+ellps=WGS84+datum=WGS84"
> > to   "+proj=merc+lat_ts=30+ellps=WGS84+datum=WGS84+unit=meter"
> > 
> > I just know the default origin is the point of intersection with
> > greenwich and equatorial when I use the default latitude of true
> > scale,but if now the latitude of true scale is decided by "lat_ts",where
> > is the default origin?
>  
> It's still at the intersection of the prime meridian and the equator.
Best regards,
Randy



