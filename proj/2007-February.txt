From Mikael.Rittri at carmenta.se  Thu Feb  1 02:43:28 2007
From: Mikael.Rittri at carmenta.se (Mikael Rittri)
Date: Thu, 1 Feb 2007 11:43:28 +0100
Subject: [Proj] Converting EPSG (Hotine) Oblique Mercator definitions to
	PROJ lines
In-Reply-To: <2762934.1170192263697.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>
References: <2762934.1170192263697.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>
Message-ID: <FAF6E56B26D2044696772EBE89B1535149A51C@posty.carmenta.se>

Hello,
I have thought about the relation between the Hotine Oblique Mercators
of EPSG and PROJ.4.  
I'll explain my current understanding in the form of two design
questions.
(This concerns only Hotine Oblique Mercator == Rectified Skew
Orthomorphic; not 
 Swiss/Hungarian Oblique Mercator or Laborde Oblique Mercator.)

1) Where is the point located, whose projected coordinates are x_0, y_0
(false easting, false northing)?  
   This question has two possible answers.
a) At the projection center (which has the central longitude and the
central latitude, and is
   on the central line).  
   EPSG calls this choice "Oblique Mercator", with coordinate operation
method code 9815,
   and the x_0 and y_0 are called EC and NC (Easting at projection
center, Northing at projection center).
   In PROJ.4, this corresponds to +proj=omerc, without using +no_uoff.

b) At the so-called natural origin, which is the nearest intersection of
the central line and the
   aposphere equator.  (It is enough to know that this will be pretty
near the ordinary equator of the earth.)
   This answer was apparently preferred by Hotine, as it simplifies the
formulas a little, and the countries
   he mapped were near the equator anyway.  
   EPSG calls this choice "Hotine Oblique Mercator", with coordinate
operation method code 9812, 
   and the x_0 and y_0 are called FE and FN (False Easting and False
Northing at natural origin).
   In PROJ.4, this corresponds to +proj=omerc, with +no_uoff.  

2) What shall the grid azimuth be for the central line?  That is to say,
what is the angle between
   a line that goes upwards on the map, and the projected image of the
central line (which is an 
   (approximate?) great circle on earth).  
   This has an infinite number of answers, but they can be classified
like this: 
   a) zero.  In EPSG, this corresponds to a Rectified-To-Skew-Grid angle
of zero.  
      In PROJ.4, this corresponds to +proj=omerc, with +no_rot.
   b) alpha_c, which is the geographic azimuth of the central line at
the projection center.  
      This choice means that grid north equals true north an the
projection center.  
      In EPSG, this corresponds to a Rectified-To-Skew-Grid angle that
equals alpha_c.  
      In PROJ.4, this corresponds to +proj=omerc, without +no_rot, and
without +rot_conv. 
   c) gamma_0, which is the geographic azimuth of the central line at
the so-called natural 
      origin (see 1 b above).  This choice means that grid north equals
true north at 
      the natural origin.  In EPSG, this corresponds to a
Rectified-To-Skew-Grid angle 
      that has been carefully chosen to be equal to gamma_0.  
      In PROJ.4, this corresponds to +proj=omerc, without +no_rot, but
with +rot_conv.  
   d) An arbitrary number gamma.  This choice, if ever used by EPSG,
would be hard to 
      distinguish from gamma_0 in an automatic script, since gamma_0 is
non-trivial 
      to compute from alpha_c etc.  I don't think this choice is
supported by PROJ.4.
      However, I believe it is possible in libproj4, by setting the
gamma parameter.  

I don't know whether choice d) is actually used in any official map
projection.  
But I suppose so, since Gerald Evenden made the effort to implement the
general gamma 
parameter in libproj4.

Best regards,
   Mikael Rittri, Carmenta, Sweden (www.carmenta.se) 
(These thoughts are provided "as is", without warranty of any kind,
expressed or implied...) 


-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Melita Kennedy
Sent: den 30 januari 2007 22:24
To: proj at lists.maptools.org
Subject: [Proj] Re: URGENT Non-existent Projection Definition
(ObliqueMercator)

EPSG already has codes for 2 versions of Michigan GeoRef, although they
call them "Michigan Oblique Mercator". 

3078 is based upon NAD83 and uses meters. 
3079 is based upon NAD83(HARN) and also uses meters. 

The method listed is "Hotine Oblique Mercator" (9812) with these
parameters (note the azimuth):

latitude of projection center: 45 18 33.0 N longitude of projection
center: 86 0 0.0 W Azimuth of initial line: 337 15 20.016 Angle of
rectified to skew grid: 337 15 20.016 scale factor on initial line:
0.9996 false easting: 2546731.496 false northing: -4354009.816

EPSG Note: If using Oblique Mercator (9815), Ec = 499840.252 m and Nc =
528600.303 m

Melita
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From ovv at hetnet.nl  Thu Feb  1 07:45:38 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 01 Feb 2007 16:45:38 +0100
Subject: [Proj] Re: Converting EPSG (Hotine) Oblique Mercator definitions to
	PROJ lines
In-Reply-To: <FAF6E56B26D2044696772EBE89B1535149A51C@posty.carmenta.se>
Message-ID: <C1E7C9B2.A62B%ovv@hetnet.nl>

> From: "Mikael Rittri"
> Date: Thu, 1 Feb 2007 11:43:28 +0100
> Subject: Converting EPSG (Hotine) Oblique Mercator definitions to PROJ lines
> 
> Hello,
> I have thought about the relation between the Hotine Oblique Mercators
> of EPSG and PROJ.4.

What I can contribute to the discussion is a more practical view as in "how
do we calculate it?"

There aren't that many Oblique Mercator projections in actual use. In some
cases omerc is used as an ugly approximation to a projection not to be found
in some applications, like the Swiss grid, Hungarian EOV, Laborde Madagascar
and some others.
Then we have Snyder's technique of providing two points on the centerline
instead of central point and azimuth of the centerline.
The central point/azimuth method is the most common.

In developing my code I started with the libproj code and added merely a
couple of tweaks, found in GCTP (like more overshooting correction with
adj_lon) and a very important one: the alfa_c = 90 deg case. The latter is
not supported in libproj and the EPSG Guidance note 7-2 tells how to deal
with this situation. I'm not impressed by the rest of the omerc code in the
Guidance note however. The alfa_c = 90 case is important for some
approximations done with the aid of omerc.

A relatively simple solution for the 'true' Oblique Mercator projections (as
opposed to approximations): if you encounter an RSO, there are 2 options:
(1) Use omerc with no_offset.
(2) Calculate an adjusted false easting, northing and use the regular omerc
without no_ofs.
For instance, for Michigan Georef Melita gave the adjusted values Ec =
499840.252 m and Nc = 528600.303 m. Or use my values:
x0 = 499840.25238573; y0 = 528600.30337017;





From cportka at newwireless.com  Thu Feb  1 09:42:39 2007
From: cportka at newwireless.com (Christopher Portka)
Date: Thu, 1 Feb 2007 17:42:39 +0000 (UTC)
Subject: [Proj] Converting Mercator Meters to Degrees
Message-ID: <loom.20070201T184206-728@post.gmane.org>

I'm trying to convert a UTM easting value to an easting in mercator meters and
then to its correct longitude.  The conversion from UTM to mercator is fine and
defined in the following way using the OGR library (I'm given a proper UTM
easting, northing, and zone):

   OGRSpatialReference utm;
   OGRSpatialReference mm;
   OGRCoordinateTransformation *transform;

   utm.SetProjCS("UTM / WGS84");
   utm.SetWellKnownGeogCS("WGS84");
   utm.SetUTM(UTMzone, TRUE);

   mm.SetMercator(0, 0, 1, 0, 0);
   mm.SetWellKnownGeogCS("WGS84");

   transform = OGRCreateCoordinateTransformation(&utm, &mm);
   if (transform == NULL) ...

   double x = UTMEasting;
   double y = UTMNorthing;
   if (!transform->Transform(1, &x, &y))  ...

However, now I want to convert the easting (only the easting) to its appropriate
longitude value.  Looking up the conversion from mercator meters easting to
longitude I get the following conversion:

   longitude = (MMEasting / 6356752.3142) * 57.295779513082322;
   OR longitude = (easting / earthRadius) * RadToDeg;

But this gives me a slightly different value (about .1 degrees smaller) than if
did the conversion with OGR like this:

   OGRSpatialReference mm;
   OGRSpatialReference latlon;
   OGRCoordinateTransformation *transform;

   mm.SetMercator(0, 0, 1, 0, 0);
   mm.SetWellKnownGeogCS("WGS84");
   latlon.SetWellKnownGeogCS("WGS84");

   transform = OGRCreateCoordinateTransformation(&mm, &latlon);
   if (transform == NULL) ...

   double x = MMEasting;
   double y = MMNorthing;
   if (!transform->Transform(1, &x, &y)) ...

I don't want to do this whole conversion though because I only need the
longitude.  Does anyone have an idea what I could be doing wrong in my longitude
conversion?  Is there some kind of false easting or something that gets set in
SetMercator that could be giving me differing values? I tried looking at the
source for SetMercator, but it doesn't look like it sets anything differently. 
Any help would be greatly appreciated.

Chris




From EMiller at dfg.ca.gov  Thu Feb  1 12:36:00 2007
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Thu, 01 Feb 2007 12:36:00 -0800
Subject: [Proj] Converting Mercator Meters to Degrees
In-Reply-To: <loom.20070201T184206-728@post.gmane.org>
References: <loom.20070201T184206-728@post.gmane.org>
Message-ID: <45C1DEC7.95FD.00E4.0@dfg.ca.gov>



>>> On 2/1/2007 at 9:42 AM, Christopher Portka
<cportka at newwireless.com> wrote:
[snip]
> However, now I want to convert the easting (only the easting) to its

> appropriate
> longitude value.  Looking up the conversion from mercator meters
easting to
> longitude I get the following conversion:
> 
>    longitude = (MMEasting / 6356752.3142) * 57.295779513082322;
>    OR longitude = (easting / earthRadius) * RadToDeg;
> 
> But this gives me a slightly different value (about .1 degrees
smaller) than 
> if
> did the conversion with OGR like this:
[snip]
> I don't want to do this whole conversion though because I only need
the
> longitude.  Does anyone have an idea what I could be doing wrong in
my 
> longitude
> conversion?  Is there some kind of false easting or something that
gets set 
> in
> SetMercator that could be giving me differing values? I tried looking
at the
> source for SetMercator, but it doesn't look like it sets anything 
> differently. 
> Any help would be greatly appreciated.

You do know that the distance between lines of longitude varies by
latitude?  I don't know
why you don't want to do two transformations.  Why not UTM -> Geodetic
-> Mercator?  The
library has to do that anyway to go from UTM to Mercator.  So, you're
not saving yourself
much.


From Mikael.Rittri at carmenta.se  Fri Feb  2 03:57:07 2007
From: Mikael.Rittri at carmenta.se (Mikael Rittri)
Date: Fri, 2 Feb 2007 12:57:07 +0100
Subject: [Proj] Converting Mercator Meters to Degrees
In-Reply-To: <loom.20070201T184206-728@post.gmane.org>
References: <loom.20070201T184206-728@post.gmane.org>
Message-ID: <FAF6E56B26D2044696772EBE89B1535149A5B3@posty.carmenta.se>

I suspect your direct formula doesn't use the appropriate value for the
Earth radius.

CP>   longitude = (MMEasting / 6356752.3142) * 57.295779513082322;
CP>   OR longitude = (easting / earthRadius) * RadToDeg;

That value looks like some kind of average earth radius for a spherical
earth model.  
But I think you must use the equatorial radius of the WGS84 ellipsoid,
which is 

   6378137.0 meters

see, for example, http://home.online.no/~sigurdhu/WGS84_Eng.html

Best regards, 
  Mikael Rittri, Carmenta, Sweden. 

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Christopher Portka
Sent: den 1 februari 2007 18:43
To: proj at lists.maptools.org
Subject: [Proj] Converting Mercator Meters to Degrees

I'm trying to convert a UTM easting value to an easting in mercator
meters and then to its correct longitude.  
[ ... ] 



From sena at hurd.homeunix.org  Tue Feb  6 01:59:36 2007
From: sena at hurd.homeunix.org (Sergey Spiridonov)
Date: Tue, 06 Feb 2007 10:59:36 +0100
Subject: [Proj] Re: C API to calculate distances
In-Reply-To: <45B4EB7B.30501@dspsolutions.de>
References: <45B49C82.3090604@dspsolutions.de>	<200701221114.27134.geraldi.evenden@gmail.com>
	<45B4EB7B.30501@dspsolutions.de>
Message-ID: <45C85188.6020608@hurd.homeunix.org>

Hi, Oliver

Oliver Eichler wrote:

> Yeah, that's what I need. I guess my pseudo code was misleading. Does
> proj4 implement such an API? Or do I have to make my own C function of
> Vincenty’s formula as described at


http://bugzilla.remotesensing.org/show_bug.cgi?id=1378

Are you looking for this?
-- 
Best regards, Sergey Spiridonov





From oliver.eichler at dspsolutions.de  Tue Feb  6 02:25:24 2007
From: oliver.eichler at dspsolutions.de (Oliver Eichler)
Date: Tue, 06 Feb 2007 11:25:24 +0100
Subject: [Proj] Re: C API to calculate distances
In-Reply-To: <45C85188.6020608@hurd.homeunix.org>
References: <45B49C82.3090604@dspsolutions.de>
	<200701221114.27134.geraldi.evenden@gmail.com>
	<45B4EB7B.30501@dspsolutions.de>
	<45C85188.6020608@hurd.homeunix.org>
Message-ID: <45C85794.7000506@dspsolutions.de>

Sergey Spiridonov wrote:
> Hi, Oliver
> 
> Oliver Eichler wrote:
> 
>> Yeah, that's what I need. I guess my pseudo code was misleading. Does
>> proj4 implement such an API? Or do I have to make my own C function of
>> Vincenty’s formula as described at
> 
> 
> http://bugzilla.remotesensing.org/show_bug.cgi?id=1378
> 
> Are you looking for this?

Yes I do :) Are those changes in the 4.5.0 release? Or just in the CVS?


Oliver




From warmerdam at pobox.com  Tue Feb  6 10:11:20 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 06 Feb 2007 13:11:20 -0500
Subject: [Proj] Re: C API to calculate distances
In-Reply-To: <45C85794.7000506@dspsolutions.de>
References: <45B49C82.3090604@dspsolutions.de>
	<200701221114.27134.geraldi.evenden@gmail.com>
	<45B4EB7B.30501@dspsolutions.de>
	<45C85188.6020608@hurd.homeunix.org>
	<45C85794.7000506@dspsolutions.de>
Message-ID: <45C8C4C8.5010600@pobox.com>

Oliver Eichler wrote:
> Sergey Spiridonov wrote:
>> Hi, Oliver
>>
>> Oliver Eichler wrote:
>>
>>> Yeah, that's what I need. I guess my pseudo code was misleading. Does
>>> proj4 implement such an API? Or do I have to make my own C function of
>>> Vincenty’s formula as described at
>>
>> http://bugzilla.remotesensing.org/show_bug.cgi?id=1378
>>
>> Are you looking for this?
> 
> Yes I do :) Are those changes in the 4.5.0 release? Or just in the CVS?

Oliver,

Those changes have not been applied in CVS yet.  You should be able to
patch your local copy of 4.5.0 based on the instructions in the report.
I'd appreciate a note if it works well.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From mike at globalmapper.com  Wed Feb  7 09:50:50 2007
From: mike at globalmapper.com (Michael Childs)
Date: Wed, 7 Feb 2007 11:50:50 -0600
Subject: [Proj] Rectified Skew Orthomorphic...
Message-ID: <1e3101c74ae0$8331d7c0$ab02a8c0@GLOBAL2LMK5767>

I am trying to use Proj4 v4.4.9 to implement RSO support as described below
from a 2004 thread, but it does not appear that the changes discussed in the
thread ever made it into Proj4. Am I missing something or did these changes
never get made? Does anyone have a copy of the code that implemented the
'gamma_c' parameter for the 'omerc' projection?
 
Thanks,
 
Mike
Global Mapper Software LLC
mike at globalmapper.com
 
-------------------------------------
 
An update:
 
The forward script:
 
opts="+proj=omerc +a=6377298.556 +rf=300.8017 +lat_0=4 +lonc=115 \
   +alpha=53d18'56.9537 +gamma_c=53d7'48.3685 +k_0=0.99984 \
   +x_0=590476.87 +y_0=442857.65"
 
replicates the example for Borneo in EPSG #7 and
 
opts="+proj=omerc  +a=6378206.4 +es=.006768657997291094 \
+k=.9999 +lonc=-133d40 +lat_0=57 +alpha=-36d52'11.6315 \
+x_0=818585.5672270928 +y_0=575219.2451072642 +units=us-ft"
 
replicates the fortran version of gctp to 0.0005 us-ft.
 
You can see that +gamma_c is the only difference in the usage.
 
I would appreciate Malaysia specs and bench values as well as more
bench values for Borneo.
 
Thanks.
 
About another weeks work to check inverse and other options and
clean up documentation.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070207/77850c9b/attachment.html>

From ovv at hetnet.nl  Wed Feb  7 13:38:06 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Wed, 07 Feb 2007 22:38:06 +0100
Subject: [Proj] Rectified Skew Orthomorphic...
In-Reply-To: <1e3101c74ae0$8331d7c0$ab02a8c0@GLOBAL2LMK5767>
Message-ID: <C1F0054D.A7FC%ovv@hetnet.nl>

> From: "Michael Childs"
> Date: Wed, 7 Feb 2007 11:50:50 -0600
> Subject: [Proj] Rectified Skew Orthomorphic...

> I am trying to use Proj4 v4.4.9 to implement RSO support as described below
> from a 2004 thread, but it does not appear that the changes discussed in the
> thread ever made it into Proj4. Am I missing something or did these changes
> never get made? Does anyone have a copy of the code that implemented the
> 'gamma_c' parameter for the 'omerc' projection?

I am inclined to believe that all useful omerc RSOs can be done with
libproj/proj with the natural x_0, y_0 and the no_off/no_uoff flag set.
Libproj is more flexible (or transparent) with respect to the alpha and
gamma parameters, but proj does its best.
Point is, as mr. Evenden pointed out in a posting dated Feb 6, 2004, that
you don't need both alpha and gamma. Manuals and parameter files often
specify both, but for reasonable projections you only need one; the other is
calculated automatically.
It could be that proj is somewhat more difficult to handle because it
doesn't recognize a gamma. But the gamma is calculated from the specified
alpha. If you need to rotate the u,v coordinates over gamma instead of
alpha, you can use the rot_conv flag in proj. One might want to study Table
4 in the proj manual proj.4.3.pdf.






From mike at globalmapper.com  Wed Feb  7 15:06:41 2007
From: mike at globalmapper.com (Michael Childs)
Date: Wed, 7 Feb 2007 17:06:41 -0600
Subject: [Proj] Rectified Skew Orthomorphic...
In-Reply-To: <C1F0054D.A7FC%ovv@hetnet.nl>
Message-ID: <1ea401c74b0c$a2e3b030$ab02a8c0@GLOBAL2LMK5767>

Thanks for the information.  I had completely missed the February and later
archives, I didn't realize that I was only looking at January so I thought I
had the complete thread.

Now that it seems I should be able to implement the Borneo/East Malaysia RSO
with the 'omerc' projection, does anyone have the exact parameters required?
I have some from EPSG, but I can get out the exact same result as EPSG #7
listed as a sample, but I'm not 100% certain that is correct anyway based on
the discussion from 2004. Does anyone have any actual sample points in both
Borneo RSO and Lat/Lon so that I can verify my conversion?

Thanks,

Mike
Global Mapper Software LLC
mike at globalmapper.com

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Oscar van Vlijmen
Sent: Wednesday, February 07, 2007 3:38 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Rectified Skew Orthomorphic...

> From: "Michael Childs"
> Date: Wed, 7 Feb 2007 11:50:50 -0600
> Subject: [Proj] Rectified Skew Orthomorphic...

> I am trying to use Proj4 v4.4.9 to implement RSO support as described
below
> from a 2004 thread, but it does not appear that the changes discussed in
the
> thread ever made it into Proj4. Am I missing something or did these
changes
> never get made? Does anyone have a copy of the code that implemented the
> 'gamma_c' parameter for the 'omerc' projection?

I am inclined to believe that all useful omerc RSOs can be done with
libproj/proj with the natural x_0, y_0 and the no_off/no_uoff flag set.
Libproj is more flexible (or transparent) with respect to the alpha and
gamma parameters, but proj does its best.
Point is, as mr. Evenden pointed out in a posting dated Feb 6, 2004, that
you don't need both alpha and gamma. Manuals and parameter files often
specify both, but for reasonable projections you only need one; the other is
calculated automatically.
It could be that proj is somewhat more difficult to handle because it
doesn't recognize a gamma. But the gamma is calculated from the specified
alpha. If you need to rotate the u,v coordinates over gamma instead of
alpha, you can use the rot_conv flag in proj. One might want to study Table
4 in the proj manual proj.4.3.pdf.




_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




From ovv at hetnet.nl  Thu Feb  8 06:43:57 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 08 Feb 2007 15:43:57 +0100
Subject: [Proj] Rectified Skew Orthomorphic...
In-Reply-To: <1ea401c74b0c$a2e3b030$ab02a8c0@GLOBAL2LMK5767>
Message-ID: <C1F0F5BD.A82C%ovv@hetnet.nl>

> From: "Michael Childs"
> Date: Wed, 7 Feb 2007 17:06:41 -0600
> Subject: RE: [Proj] Rectified Skew Orthomorphic...

> Now that it seems I should be able to implement the Borneo/East Malaysia RSO
> with the 'omerc' projection, does anyone have the exact parameters required?

The official Malayan GDM2000 Technical Manual has test points.
<http://www.jupem.gov.my/GDM/pdf/TechMan_Pub.pdf>
They are a bit sloppy wrt the old projections MRT and BT68: the test figures
are OK, but the parameters are unclear or wrong. I've figured them out.
For the modern GDM2000 projections the data are OK.

Test point and my results:
// BRSO (East Malaya)
lat= "6 52 42.45022"; lon= "116 50 47.58835";
// GRS80
lat0=4; lonc=115;
alfac= "53 18 56.91582"; gamma=asin(0.8)*rd; // rd: from radians to degrees
k0=0.99984; x0=0; y0=0;
Result: x,y = 793704.63096, 762081.04678
Technical Manual gives: 793704.631, 762081.047



From mike at globalmapper.com  Thu Feb  8 08:19:42 2007
From: mike at globalmapper.com (Michael Childs)
Date: Thu, 8 Feb 2007 10:19:42 -0600
Subject: [Proj] Rectified Skew Orthomorphic...
In-Reply-To: <C1F0F5BD.A82C%ovv@hetnet.nl>
Message-ID: <1fab01c74b9c$f1f2c8b0$ab02a8c0@GLOBAL2LMK5767>

Thank you again for the information, but I am still not replicating the
results exactly. I am using the following proj4 string:

+proj=omerc +a=6378137.000 +b=6356752.314 +lat_0=4 +lonc=115 +x_0=0 +y_0=0
+alpha=53.315809950000 +k=0.9998400000 +no_uoff"

When I then convert from lat= "6 52 42.45022"; lon= "116 50 47.58835"; I get
coordinates of 796170.521, 759504.486 which is about 3.5 km away from the
expected test point. What proj4 parameter string are you using? Is there a
parameter that I am missing?

Thanks,

Mike
Global Mapper Software LLC
mike at globalmapper.com

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Oscar van Vlijmen
Sent: Thursday, February 08, 2007 8:44 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Rectified Skew Orthomorphic...

> From: "Michael Childs"
> Date: Wed, 7 Feb 2007 17:06:41 -0600
> Subject: RE: [Proj] Rectified Skew Orthomorphic...

> Now that it seems I should be able to implement the Borneo/East Malaysia
RSO
> with the 'omerc' projection, does anyone have the exact parameters
required?

The official Malayan GDM2000 Technical Manual has test points.
<http://www.jupem.gov.my/GDM/pdf/TechMan_Pub.pdf>
They are a bit sloppy wrt the old projections MRT and BT68: the test figures
are OK, but the parameters are unclear or wrong. I've figured them out.
For the modern GDM2000 projections the data are OK.

Test point and my results:
// BRSO (East Malaya)
lat= "6 52 42.45022"; lon= "116 50 47.58835";
// GRS80
lat0=4; lonc=115;
alfac= "53 18 56.91582"; gamma=asin(0.8)*rd; // rd: from radians to degrees
k0=0.99984; x0=0; y0=0;
Result: x,y = 793704.63096, 762081.04678
Technical Manual gives: 793704.631, 762081.047

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




From ovv at hetnet.nl  Thu Feb  8 11:58:31 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 08 Feb 2007 20:58:31 +0100
Subject: [Proj] Rectified Skew Orthomorphic...
In-Reply-To: <1fab01c74b9c$f1f2c8b0$ab02a8c0@GLOBAL2LMK5767>
Message-ID: <C1F13F77.A846%ovv@hetnet.nl>

> From: "Michael Childs"
> Date: Thu, 8 Feb 2007 10:19:42 -0600
> Subject: RE: [Proj] Rectified Skew Orthomorphic...

> Thank you again for the information, but I am still not replicating the
> results exactly. I am using the following proj4 string:

> +proj=omerc +a=6378137.000 +b=6356752.314 +lat_0=4 +lonc=115 +x_0=0 +y_0=0
> +alpha=53.315809950000 +k=0.9998400000 +no_uoff"

> Is there a parameter that I am missing?
rot_conv perhaps?
I can reproduce your values by setting the rotation angle to alpha in my
software. The rotation angle should be Gamma, hence my suggestion of
rot_conv.




From mike at globalmapper.com  Thu Feb  8 14:51:54 2007
From: mike at globalmapper.com (Michael Childs)
Date: Thu, 8 Feb 2007 16:51:54 -0600
Subject: [Proj] Rectified Skew Orthomorphic...
In-Reply-To: <C1F13F77.A846%ovv@hetnet.nl>
Message-ID: <208901c74bd3$bc049cb0$ab02a8c0@GLOBAL2LMK5767>

SUCCESS! My points now agree to less than a millimeter with the expected
results! It was the rot_conv that I needed, I didn't realize that I needed
the gamma angle passed in. I cannot thank you enough for your help! If you
would like a complimentary license for Global Mapper 8, just contact me at
mike at globalmapper.com and I'll be happy to provide you with one.

Thanks,

Mike Childs
Global Mapper Software LLC
support at globalmapper.com

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Oscar van Vlijmen
Sent: Thursday, February 08, 2007 1:59 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Rectified Skew Orthomorphic...

> From: "Michael Childs"
> Date: Thu, 8 Feb 2007 10:19:42 -0600
> Subject: RE: [Proj] Rectified Skew Orthomorphic...

> Thank you again for the information, but I am still not replicating the
> results exactly. I am using the following proj4 string:

> +proj=omerc +a=6378137.000 +b=6356752.314 +lat_0=4 +lonc=115 +x_0=0 +y_0=0
> +alpha=53.315809950000 +k=0.9998400000 +no_uoff"

> Is there a parameter that I am missing?
rot_conv perhaps?
I can reproduce your values by setting the rotation angle to alpha in my
software. The rotation angle should be Gamma, hence my suggestion of
rot_conv.


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




From oliver.eichler at dspsolutions.de  Fri Feb  9 07:33:10 2007
From: oliver.eichler at dspsolutions.de (Oliver Eichler)
Date: Fri, 09 Feb 2007 16:33:10 +0100
Subject: [Proj] Re: C API to calculate distances
In-Reply-To: <45C8C4C8.5010600@pobox.com>
References: <45B49C82.3090604@dspsolutions.de>
	<200701221114.27134.geraldi.evenden@gmail.com>
	<45B4EB7B.30501@dspsolutions.de>
	<45C85188.6020608@hurd.homeunix.org>
	<45C85794.7000506@dspsolutions.de> <45C8C4C8.5010600@pobox.com>
Message-ID: <45CC9436.1010404@dspsolutions.de>


Hi Frank

> 
> Those changes have not been applied in CVS yet.  You should be able to
> patch your local copy of 4.5.0 based on the instructions in the report.
> I'd appreciate a note if it works well.

Ok, I'll try to find some time to do a test this weekend. However I
really need this as a release version to add it to my application
(QLandkarte). I hardly can ask everyone to patch the projection lib :)


regards,

Oliver





From tonu.lukk at neti.ee  Sat Feb 17 11:05:40 2007
From: tonu.lukk at neti.ee (Tonu Lukk)
Date: Sat, 17 Feb 2007 21:05:40 +0200
Subject: [Proj] Lat-Long to Lambert Conformal Conic(2SP) transformation
	inaccuracy issue
Message-ID: <op.tnwpzqru16tnrm@umurru>

Hello all

I'm trying to convert between lag-long and Lambert Conformal Conic (2SP)  
projection.
The command line is:
proj +proj=lcc +lat_1=58N +lat_2=59d20'N +lat_0=57d31'03.19415"N  
+lon_0=24E +x_0=500000 +y_0=6375000 +ellps=WGS84 -r

The problem is that when I input the origin's coordinates,  
lat=57d31'03.19415"N lon=24E, I get x=500000 ja y=6375098.83, not x=500000  
y=6375000 as coordinate system's definition suggests - a 98.83m inaccuracy  
in northing value.
What I'm doing wrong?

Thanks in advance!

Tonu

PS:I'm using lib.proj-4.4.7.b precompiled binaries for windows.




From geraldi.evenden at gmail.com  Sat Feb 17 13:22:42 2007
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sat, 17 Feb 2007 16:22:42 -0500
Subject: [Proj] Lat-Long to Lambert Conformal Conic(2SP) transformation
	inaccuracy issue
In-Reply-To: <op.tnwpzqru16tnrm@umurru>
References: <op.tnwpzqru16tnrm@umurru>
Message-ID: <200702171622.42876.geraldi.evenden@gmail.com>

On Saturday 17 February 2007 2:05 pm, Tonu Lukk wrote:
> Hello all
>
> I'm trying to convert between lag-long and Lambert Conformal Conic (2SP)
> projection.
> The command line is:
> proj +proj=lcc +lat_1=58N +lat_2=59d20'N +lat_0=57d31'03.19415"N
> +lon_0=24E +x_0=500000 +y_0=6375000 +ellps=WGS84 -r
>
> The problem is that when I input the origin's coordinates,
> lat=57d31'03.19415"N lon=24E, I get x=500000 ja y=6375098.83, not x=500000
> y=6375000 as coordinate system's definition suggests - a 98.83m inaccuracy
> in northing value.
> What I'm doing wrong?

The ' and " in the runline are screwing up the shell so that it is not 
interpreting the DMS values properly.  A common error.

The following script gens the expected values:

lproj +proj=lcc +lat_1=58N +lat_2=59d20N +lat_0=57d31\'03.19415N +lon_0=24E 
+x_0=500000 +y_0=6375000 +ellps=WGS84  <<EOF
24e 57d31'03.19415"N
EOF

gives:

500000.00       6375000.00

Note: I removed the -r because I initially got whacko values because I am so 
used to putting longitude first.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939)  British psychologist


From tonu.lukk at neti.ee  Sun Feb 18 02:31:25 2007
From: tonu.lukk at neti.ee (Tonu Lukk)
Date: Sun, 18 Feb 2007 12:31:25 +0200
Subject: [Proj] Lat-Long to Lambert Conformal Conic(2SP) transformation
	inaccuracy issue
In-Reply-To: <200702171622.42876.geraldi.evenden@gmail.com>
References: <op.tnwpzqru16tnrm@umurru>
	<200702171622.42876.geraldi.evenden@gmail.com>
Message-ID: <op.tnxwunwk16tnrm@umurru>

Thanks for the reply. First a correction - in my original posting the  
backslashes were removed from the command line. They were actually present  
when I ran the tests. My mistake.
It does seem to be a windows' shell problem but I can't really figure out  
what exactly is causing it.

Two tests.
1.
proj +proj=lcc +lat_1=58N +lat_2=59.333333N +lat_0=57.517553N +lon_0=24E  
+x_0=500000 +y_0=6375000 +ellps=WGS84

Input 24E 57d31'3.19415"N gives	500000.00       6375000.10
Input 24E 57.517553N      gives     500000.00       6375000.00
This hints that the problem lies in the command line parameters - as far  
as I understand the difference in conversion is most likely caused by  
rounding accuracy of an input value.

2.
proj +proj=lcc +lat_1=58N +lat_2=59d20\'N +lat_0=57d31\'03.19415\"N  
+lon_0=24E +x_0=500000 +y_0=6375000 +ellps=WGS84

Input 24E 57d31'3.19415"N gives 500000.00       6375098.83
Input 24E 57.517553N      gives 500000.00       6375098.72
Obviously the problem is in command line parameters. Further testing  
showed that it (in my case) is caused by the +lat_0=57d31\'03.19415\"N  
parameter. Also tried with \" removed from the end, but with the same  
results. Somehow it is interpreted wrong.
Any ideas why?

Tonu





From ovv at hetnet.nl  Sun Feb 18 07:44:53 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Sun, 18 Feb 2007 16:44:53 +0100
Subject: [Proj] Lat-Long to Lambert Conformal Conic(2SP)
	transformation inaccuracy issue
In-Reply-To: <op.tnxwunwk16tnrm@umurru>
Message-ID: <C1FE3305.AB71%ovv@hetnet.nl>

> From: "Tonu Lukk"
> Date: Sun, 18 Feb 2007 12:31:25 +0200
> Subject: Re: [Proj] Lat-Long to Lambert Conformal Conic(2SP) transformation
> inaccuracy issue

> 2.
> proj +proj=lcc +lat_1=58N +lat_2=59d20\'N +lat_0=57d31\'03.19415\"N
> +lon_0=24E +x_0=500000 +y_0=6375000 +ellps=WGS84
> 
> Input 24E 57d31'3.19415"N gives 500000.00       6375098.83
> Input 24E 57.517553N      gives 500000.00       6375098.72
> Obviously the problem is in command line parameters. Further testing
> showed that it (in my case) is caused by the +lat_0=57d31\'03.19415\"N
> parameter. Also tried with \" removed from the end, but with the same
> results. Somehow it is interpreted wrong.
> Any ideas why?

It has to be a ' or " or \' problem like mr. Evenden said.
I can reproduce your numbers (with other software) by chopping off digits at
the position where a ' or \' occurs in the lat_0:

lat=57d 31m 3.19415s; lon=24; lat0=57d 31m; lon0=24;
lat1=58; lat2=59d 20m; x0=5e5; y0=6375e3;

Result: x, y= 500000, 6375098.8268

With lat= 57.517553, y=6375098.7232




From geraldi.evenden at gmail.com  Sun Feb 18 08:28:11 2007
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 18 Feb 2007 11:28:11 -0500
Subject: [Proj] Lat-Long to Lambert Conformal Conic(2SP) transformation
	inaccuracy issue
In-Reply-To: <op.tnxwunwk16tnrm@umurru>
References: <op.tnwpzqru16tnrm@umurru>
	<200702171622.42876.geraldi.evenden@gmail.com>
	<op.tnxwunwk16tnrm@umurru>
Message-ID: <200702181128.11282.geraldi.evenden@gmail.com>

On Sunday 18 February 2007 5:31 am, Tonu Lukk wrote:
> Thanks for the reply. First a correction - in my original posting the  
> backslashes were removed from the command line. They were actually present
>   when I ran the tests. My mistake.
> It does seem to be a windows' shell problem but I can't really figure out  
> what exactly is causing it.
>
> Two tests.
> 1.
> proj +proj=lcc +lat_1=58N +lat_2=59.333333N +lat_0=57.517553N +lon_0=24E  
> +x_0=500000 +y_0=6375000 +ellps=WGS84
>
> Input 24E 57d31'3.19415"N gives 500000.00       6375000.10
> Input 24E 57.517553N      gives     500000.00       6375000.00
> This hints that the problem lies in the command line parameters - as far  
> as I understand the difference in conversion is most likely caused by  
> rounding accuracy of an input value.
>
> 2.
> proj +proj=lcc +lat_1=58N +lat_2=59d20\'N +lat_0=57d31\'03.19415\"N  
> +lon_0=24E +x_0=500000 +y_0=6375000 +ellps=WGS84
>
> Input 24E 57d31'3.19415"N gives 500000.00       6375098.83
> Input 24E 57.517553N      gives 500000.00       6375098.72
> Obviously the problem is in command line parameters. Further testing  
> showed that it (in my case) is caused by the +lat_0=57d31\'03.19415\"N  
> parameter. Also tried with \" removed from the end, but with the same  
> results. Somehow it is interpreted wrong.
> Any ideas why?

In this case, the precision in the conversion from DMS to fractional degree 
causes the slight error.  From gp

? (31+3.19415/60)/60
%1 = 0.51755393055555555555555555555555555555

Thus a test script illustrates the correction:

#
echo "original script"
lproj +proj=lcc +lat_1=58N +lat_2=59d20\'N +lat_0=57d31\'03.19415\"N 
+lon_0=24E +x_0=500000 +y_0=6375000 +ellps=WGS84 <<EOF
24E 57d31'3.19415"N gives 500000.00       6375098.83
24E 57.517553N      gives 500000.00       6375098.72
EOF
echo "expanded decimal degree fraction (from gp)"
lproj +proj=lcc +lat_1=58N +lat_2=59d20\'N +lat_0=57d31\'03.19415\"N 
+lon_0=24E +x_0=500000 +y_0=6375000 +ellps=WGS84 <<EOF
24E 57d31'3.19415"N gives 500000.00       6375098.83
24E 57.51755393055556N      gives 500000.00       6375098.72 
EOF
       --------------------------------- change (bit of an overkill now  ;-)  
which generates:

original script
500000.00       6375000.00 gives 500000.00       6375098.83
500000.00       6374999.90      gives 500000.00       6375098.72
expanded decimal degree fraction (from gp)
500000.00       6375000.00 gives 500000.00       6375098.83
500000.00       6375000.00      gives 500000.00       6375098.72

Now both examples yield the same answer.  Your original latitude had a 6 digit 
fraction where the DMS was closer to an 8 digit fraction.

The devil is in the details.  :-)
-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939)  British psychologist



From tonu.lukk at neti.ee  Sun Feb 18 09:49:01 2007
From: tonu.lukk at neti.ee (Tonu Lukk)
Date: Sun, 18 Feb 2007 19:49:01 +0200
Subject: [Proj] Lat-Long to Lambert Conformal Conic(2SP) transformation
	inaccuracy issue
In-Reply-To: <200702181128.11282.geraldi.evenden@gmail.com>
References: <op.tnwpzqru16tnrm@umurru>
	<200702171622.42876.geraldi.evenden@gmail.com>
	<op.tnxwunwk16tnrm@umurru>
	<200702181128.11282.geraldi.evenden@gmail.com>
Message-ID: <45D8918D.40009@neti.ee>

> In this case, the precision in the conversion from DMS to fractional degree 
> causes the slight error.  From gp

Makes sense. Yet I still can't figure out why the +lat_0=57d31\'03.19415\"N
gets interpereted wrong so that I end up with northing value approx. 98 
meters off the correct value. When I substitute the +lat_0 DMS value 
with its decimal equivalent everything works just fine and I get the 
expected northing - 6375000.

Tonu


From ovv at hetnet.nl  Mon Feb 19 01:30:09 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Mon, 19 Feb 2007 10:30:09 +0100
Subject: [Proj] Lat-Long to Lambert Conformal Conic(2SP)
	transformation inaccuracy issue
In-Reply-To: <45D8918D.40009@neti.ee>
Message-ID: <C1FF2CB1.AB9B%ovv@hetnet.nl>

> From: Tonu Lukk
> Date: Sun, 18 Feb 2007 19:49:01 +0200
> Subject: Re: [Proj] Lat-Long to Lambert Conformal Conic(2SP) transformation
> inaccuracy issue

> Yet I still can't figure out why the +lat_0=57d31\'03.19415\"N
> gets interpereted wrong so that I end up with northing value approx. 98
> meters off the correct value.

Like I tried to convey:
some compilers, some operating system services can have a mind of their own.
As soon as a ' or " is encountered, the input or part of the input can be
interpreted as a string with numerical value zero.
As soon as for instance a \ or / or : is encountered, the input or part of
the input can be seen as illegal because some characters are reserved for
file path names.
This behavior could result in:
+lat_0=57d31\'03.19415\"N
being interpreted as
+lat_0=57d31
Try again with a value that cannot be attributed to rounding, like
+lat_0=57d31\'49.29\"N
If this produces the same result as
+lat_0=57d31
Then you know my theory could be true.
Solution: do not use illegal characters in the input.





From mattxbart at gmail.com  Fri Feb 23 11:33:51 2007
From: mattxbart at gmail.com (Matt Bartolome)
Date: Fri, 23 Feb 2007 11:33:51 -0800
Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
Message-ID: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com>

Hello list,

I'm trying to convert state plane coordinates from zone 6 (san diego
county, california)  to latitude longitude and I'm having trouble.

$ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +zone=6
+ellps=GRS80 +datum=NAD83 +units=m

-100.1078       11.6424

I've also tried plugging in some computed constants I found but I'm
not sure if they are accurate.

$ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +ellps=GRS80
+zone=6 +lat_0=32.166667 +lon_0=-116.25 +datum=NAD83 +k=0.999954142490

-100.1078       11.6424

I'm pretty sure the datum NAD83 is correct, as well as the GRS80
ellipsoid. The values should be close to -116, 32.

Thank you,
Matt


From ed at topozone.com  Fri Feb 23 12:23:24 2007
From: ed at topozone.com (Ed McNierney)
Date: Fri, 23 Feb 2007 15:23:24 -0500
Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
In-Reply-To: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com>
Message-ID: <C204B76C.21500%ed@topozone.com>

Matt -

You say you have "State Plane Zone 6" coordinates, but you're telling PROJ
that they're UTM Zone 6 coordinates, and that's not at all the same thing.
The California State Plane NAD83 projections are Lambert Conformal Conic
projections, not UTM.

I expect in your second example the lat_0 and lon_0 parameters are being
ignored, since the UTM projection does not use those parameters.

The EPSG code for NAD83 California Zone 6 is 26946, so you may want to just
specify that as your input projection defintion, or spell it out:

+proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333
+lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000
+ellps=GRS80 +datum=NAD83

     - Ed

-- 
Ed McNierney
President and Chief Mapmaker
Maps a la carte, Inc. / TopoZone.com
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
Phone: (978) 251-4242
Fax: (978) 251-1396
ed at topozone.com

> From: Matt Bartolome <mattxbart at gmail.com>
> Reply-To: "PROJ.4 and general Projections Discussions"
> <proj at lists.maptools.org>
> Date: Fri, 23 Feb 2007 11:33:51 -0800
> To: <proj at lists.maptools.org>
> Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
> 
> Hello list,
> 
> I'm trying to convert state plane coordinates from zone 6 (san diego
> county, california)  to latitude longitude and I'm having trouble.
> 
> $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +zone=6
> +ellps=GRS80 +datum=NAD83 +units=m
> 
> -100.1078       11.6424
> 
> I've also tried plugging in some computed constants I found but I'm
> not sure if they are accurate.
> 
> $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +ellps=GRS80
> +zone=6 +lat_0=32.166667 +lon_0=-116.25 +datum=NAD83 +k=0.999954142490
> 
> -100.1078       11.6424
> 
> I'm pretty sure the datum NAD83 is correct, as well as the GRS80
> ellipsoid. The values should be close to -116, 32.
> 
> Thank you,
> Matt
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From warmerdam at pobox.com  Fri Feb 23 14:07:10 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 23 Feb 2007 17:07:10 -0500
Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
In-Reply-To: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com>
References: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com>
Message-ID: <45DF658E.5010505@pobox.com>

Matt Bartolome wrote:
> Hello list,
> 
> I'm trying to convert state plane coordinates from zone 6 (san diego
> county, california)  to latitude longitude and I'm having trouble.
> 
> $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +zone=6
> +ellps=GRS80 +datum=NAD83 +units=m
> 
> -100.1078       11.6424
> 
> I've also tried plugging in some computed constants I found but I'm
> not sure if they are accurate.
> 
> $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +ellps=GRS80
> +zone=6 +lat_0=32.166667 +lon_0=-116.25 +datum=NAD83 +k=0.999954142490
> 
> -100.1078       11.6424
> 
> I'm pretty sure the datum NAD83 is correct, as well as the GRS80
> ellipsoid. The values should be close to -116, 32.

Matt,

+proj=utm +zone=6 is not at all the same thing as california state plane
zone 6.

Perhaps you want:

echo "6262009 1854017" | proj -I -f %.4f +init=epsg:2230
-117.2246       32.7499

EPSG 2230 is "NAD83 / California zone 6 (ftUS)"

epsg:2230 looks like:

<2230> +proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 
+lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000.0001016 
+y_0=500000.0001016001 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 
+no_defs  <>

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From mattxbart at gmail.com  Fri Feb 23 13:54:52 2007
From: mattxbart at gmail.com (Matt Bartolome)
Date: Fri, 23 Feb 2007 13:54:52 -0800
Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
In-Reply-To: <C204B76C.21500%ed@topozone.com>
References: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com>
	<C204B76C.21500%ed@topozone.com>
Message-ID: <633d34560702231354t20600d29meebf2104b11e9f48@mail.gmail.com>

Thanks Ed,
Ok. Specifying the wrong method was my first mistake. Now I've got:

$ echo "6293409 1793361" | proj -I -f %.4f +proj=lcc +zone=26946
48.4666 0.5464

Spelling it out:
$ echo "6262009 1854017" | proj -I -f %.4f +proj=lcc
+lat_1=33.88333333333333 +lat_2=32.78333333333333
+lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000
+ellps=GRS80 +datum=NAD83
-67.7015        35.2628

So something is still very wrong with what I'm doing. The agency I got
the data from confirmed it is the Lambert Method, GRS80 Spheroid,
NAD83 so I'm not sure what else to do.

-Matt


On 2/23/07, Ed McNierney <ed at topozone.com> wrote:
> Matt -
>
> You say you have "State Plane Zone 6" coordinates, but you're telling PROJ
> that they're UTM Zone 6 coordinates, and that's not at all the same thing.
> The California State Plane NAD83 projections are Lambert Conformal Conic
> projections, not UTM.
>
> I expect in your second example the lat_0 and lon_0 parameters are being
> ignored, since the UTM projection does not use those parameters.
>
> The EPSG code for NAD83 California Zone 6 is 26946, so you may want to just
> specify that as your input projection defintion, or spell it out:
>
> +proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333
> +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000
> +ellps=GRS80 +datum=NAD83
>
>      - Ed
>
> --
> Ed McNierney
> President and Chief Mapmaker
> Maps a la carte, Inc. / TopoZone.com
> 73 Princeton Street, Suite 305
> North Chelmsford, MA  01863
> Phone: (978) 251-4242
> Fax: (978) 251-1396
> ed at topozone.com
>
> > From: Matt Bartolome <mattxbart at gmail.com>
> > Reply-To: "PROJ.4 and general Projections Discussions"
> > <proj at lists.maptools.org>
> > Date: Fri, 23 Feb 2007 11:33:51 -0800
> > To: <proj at lists.maptools.org>
> > Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
> >
> > Hello list,
> >
> > I'm trying to convert state plane coordinates from zone 6 (san diego
> > county, california)  to latitude longitude and I'm having trouble.
> >
> > $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +zone=6
> > +ellps=GRS80 +datum=NAD83 +units=m
> >
> > -100.1078       11.6424
> >
> > I've also tried plugging in some computed constants I found but I'm
> > not sure if they are accurate.
> >
> > $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +ellps=GRS80
> > +zone=6 +lat_0=32.166667 +lon_0=-116.25 +datum=NAD83 +k=0.999954142490
> >
> > -100.1078       11.6424
> >
> > I'm pretty sure the datum NAD83 is correct, as well as the GRS80
> > ellipsoid. The values should be close to -116, 32.
> >
> > Thank you,
> > Matt
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>


From mattxbart at gmail.com  Fri Feb 23 14:09:39 2007
From: mattxbart at gmail.com (Matt Bartolome)
Date: Fri, 23 Feb 2007 14:09:39 -0800
Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
In-Reply-To: <45DF658E.5010505@pobox.com>
References: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com>
	<45DF658E.5010505@pobox.com>
Message-ID: <633d34560702231409n278454b4u3e192f175b8195d@mail.gmail.com>

Frank,
That did the trick. Awesome. Now I can sleep tonight!

Thank you.
Matt

On 2/23/07, Frank Warmerdam <warmerdam at pobox.com> wrote:
> Matt Bartolome wrote:
> > Hello list,
> >
> > I'm trying to convert state plane coordinates from zone 6 (san diego
> > county, california)  to latitude longitude and I'm having trouble.
> >
> > $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +zone=6
> > +ellps=GRS80 +datum=NAD83 +units=m
> >
> > -100.1078       11.6424
> >
> > I've also tried plugging in some computed constants I found but I'm
> > not sure if they are accurate.
> >
> > $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +ellps=GRS80
> > +zone=6 +lat_0=32.166667 +lon_0=-116.25 +datum=NAD83 +k=0.999954142490
> >
> > -100.1078       11.6424
> >
> > I'm pretty sure the datum NAD83 is correct, as well as the GRS80
> > ellipsoid. The values should be close to -116, 32.
>
> Matt,
>
> +proj=utm +zone=6 is not at all the same thing as california state plane
> zone 6.
>
> Perhaps you want:
>
> echo "6262009 1854017" | proj -I -f %.4f +init=epsg:2230
> -117.2246       32.7499
>
> EPSG 2230 is "NAD83 / California zone 6 (ftUS)"
>
> epsg:2230 looks like:
>
> <2230> +proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333
> +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000.0001016
> +y_0=500000.0001016001 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192
> +no_defs  <>
>
> Best regards,
> --
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | President OSGeo, http://osgeo.org
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>


From ed at topozone.com  Fri Feb 23 14:17:03 2007
From: ed at topozone.com (Ed McNierney)
Date: Fri, 23 Feb 2007 17:17:03 -0500
Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
In-Reply-To: <633d34560702231354t20600d29meebf2104b11e9f48@mail.gmail.com>
References: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com><C204B76C.21500%ed@topozone.com>
	<633d34560702231354t20600d29meebf2104b11e9f48@mail.gmail.com>
Message-ID: <4BF377919225F449BB097CB76FFE9BC801987E9D@ptolemy.topozone.com>

Matt -

The epsg definitions are not "zones", but sets of initialization
parameters, so the syntax in your first example should be

echo "6293409 1793361" | proj -I -f %.4f +init=epsg:26946

which will give you the same results as your second example.  So I'm
going to guess that you have input data in California NAD83 State Plane
Zone 6 FEET, not meters (it is very helpful of we Americans to provide
so many choices to field of geodesy).  That would be EPSG code 2230, and
if you try this:

echo "6293409 1793361" | proj -I -f %.4f +init=epsg:2230 

I expect you'll get reasonable results.

	- Ed

Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
Phone: +1 (978) 251-4242
Fax: +1 (978) 251-1396
ed at topozone.com
-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Matt Bartolome
Sent: Friday, February 23, 2007 4:55 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] State Plane Coordinate Zone 6 Conversion Help

Thanks Ed,
Ok. Specifying the wrong method was my first mistake. Now I've got:

$ echo "6293409 1793361" | proj -I -f %.4f +proj=lcc +zone=26946
48.4666 0.5464

Spelling it out:
$ echo "6262009 1854017" | proj -I -f %.4f +proj=lcc
+lat_1=33.88333333333333 +lat_2=32.78333333333333
+lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000 
+ellps=GRS80 +datum=NAD83
-67.7015        35.2628

So something is still very wrong with what I'm doing. The agency I got
the data from confirmed it is the Lambert Method, GRS80 Spheroid,
NAD83 so I'm not sure what else to do.

-Matt


On 2/23/07, Ed McNierney <ed at topozone.com> wrote:
> Matt -
>
> You say you have "State Plane Zone 6" coordinates, but you're telling 
> PROJ that they're UTM Zone 6 coordinates, and that's not at all the
same thing.
> The California State Plane NAD83 projections are Lambert Conformal 
> Conic projections, not UTM.
>
> I expect in your second example the lat_0 and lon_0 parameters are 
> being ignored, since the UTM projection does not use those parameters.
>
> The EPSG code for NAD83 California Zone 6 is 26946, so you may want to

> just specify that as your input projection defintion, or spell it out:
>
> +proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333
> +lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000 +y_0=500000 
> +ellps=GRS80 +datum=NAD83
>
>      - Ed
>
> --
> Ed McNierney
> President and Chief Mapmaker
> Maps a la carte, Inc. / TopoZone.com
> 73 Princeton Street, Suite 305
> North Chelmsford, MA  01863
> Phone: (978) 251-4242
> Fax: (978) 251-1396
> ed at topozone.com
>
> > From: Matt Bartolome <mattxbart at gmail.com>
> > Reply-To: "PROJ.4 and general Projections Discussions"
> > <proj at lists.maptools.org>
> > Date: Fri, 23 Feb 2007 11:33:51 -0800
> > To: <proj at lists.maptools.org>
> > Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
> >
> > Hello list,
> >
> > I'm trying to convert state plane coordinates from zone 6 (san diego

> > county, california)  to latitude longitude and I'm having trouble.
> >
> > $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +zone=6
> > +ellps=GRS80 +datum=NAD83 +units=m
> >
> > -100.1078       11.6424
> >
> > I've also tried plugging in some computed constants I found but I'm 
> > not sure if they are accurate.
> >
> > $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +ellps=GRS80
> > +zone=6 +lat_0=32.166667 +lon_0=-116.25 +datum=NAD83 
> > ++k=0.999954142490
> >
> > -100.1078       11.6424
> >
> > I'm pretty sure the datum NAD83 is correct, as well as the GRS80 
> > ellipsoid. The values should be close to -116, 32.
> >
> > Thank you,
> > Matt
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From ed at topozone.com  Fri Feb 23 14:18:22 2007
From: ed at topozone.com (Ed McNierney)
Date: Fri, 23 Feb 2007 17:18:22 -0500
Subject: [Proj] State Plane Coordinate Zone 6 Conversion Help
In-Reply-To: <45DF658E.5010505@pobox.com>
References: <633d34560702231133w2a8ebcbch6f321bf7b6c5c8b5@mail.gmail.com>
	<45DF658E.5010505@pobox.com>
Message-ID: <4BF377919225F449BB097CB76FFE9BC801987E9E@ptolemy.topozone.com>

Matt -

I just got back in and I'm reading messages in reverse order, so the
note I just sent you is simply saying the same thing Frank already said.

	- Ed 

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Frank Warmerdam
Sent: Friday, February 23, 2007 5:07 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] State Plane Coordinate Zone 6 Conversion Help

Matt Bartolome wrote:
> Hello list,
> 
> I'm trying to convert state plane coordinates from zone 6 (san diego 
> county, california)  to latitude longitude and I'm having trouble.
> 
> $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +zone=6
> +ellps=GRS80 +datum=NAD83 +units=m
> 
> -100.1078       11.6424
> 
> I've also tried plugging in some computed constants I found but I'm 
> not sure if they are accurate.
> 
> $ echo "6262009 1854017" | proj -I -f %.4f +proj=utm +ellps=GRS80
> +zone=6 +lat_0=32.166667 +lon_0=-116.25 +datum=NAD83 +k=0.999954142490
> 
> -100.1078       11.6424
> 
> I'm pretty sure the datum NAD83 is correct, as well as the GRS80 
> ellipsoid. The values should be close to -116, 32.

Matt,

+proj=utm +zone=6 is not at all the same thing as california state plane
zone 6.

Perhaps you want:

echo "6262009 1854017" | proj -I -f %.4f +init=epsg:2230
-117.2246       32.7499

EPSG 2230 is "NAD83 / California zone 6 (ftUS)"

epsg:2230 looks like:

<2230> +proj=lcc +lat_1=33.88333333333333 +lat_2=32.78333333333333 
+lat_0=32.16666666666666 +lon_0=-116.25 +x_0=2000000.0001016
+y_0=500000.0001016001 +ellps=GRS80 +datum=NAD83 
++to_meter=0.3048006096012192 no_defs  <>

Best regards,
-- 
---------------------------------------+--------------------------------
---------------------------------------+------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo,
http://osgeo.org

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From andreas.rappensperger at googlemail.com  Tue Feb 27 06:12:05 2007
From: andreas.rappensperger at googlemail.com (Andreas Rappensperger)
Date: Tue, 27 Feb 2007 15:12:05 +0100
Subject: [Proj] Dubai Palm Island Projection
Message-ID: <434b51c30702270612t1bb1524od3d7fffeb5e32c4b@mail.gmail.com>

Hi All,

I have the following problem. I would like to rotate the Dubai Palm Island
so that the palm stand vertical. The rotation point should be the middle
point of the Palm. In Dubai usually the DLTM projection is used.

# Dubai municipality Local Transverse Mercator DLTM
proj=tmerc lat_0=0.000000000 lon_0=55d20'00"E k=1.000000 x_0=500000.000 y_0=
0.000 ellps=WGS84 units=m

Now I tried to define my own coordinate system with the following parameter:

# DP Dubai Palm (DLTM rotated by -49 degree)
proj=omerc lat_0=25.095311 lonc=55.137296 alpha=-49.0000000 k=1.000000 x_0=
500000.000 y_0=0.000 ellps=WGS84 units=m

But it does not work. I have created a test. I have taken two points

Bottom of the Palm: 55.154200° 25.102206°
Top of the Palm: 55.122691° 25.126338°

If I transform them to the DLTM Projection than there is a angle of about -
49.00 degree. So if I transform them to my new coordinate system the angle
should be zero, but it doesn't.

I guess i did something wrong with the parameter.

Does someone have can help me an this problem?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070227/df3ec6fd/attachment.html>

From mfinn at usgs.gov  Tue Feb 27 08:02:01 2007
From: mfinn at usgs.gov (Michael P Finn)
Date: Tue, 27 Feb 2007 10:02:01 -0600
Subject: [Proj] Michael P Finn of the USGS/ National Geospatial Technical
 Operations Center is out of the office.
Message-ID: <OFB4C905C7.CDA5239B-ON8625728F.00581397-8625728F.00581397@usgs.gov>


I will be out of the office starting  02/24/2007 and will not return until
03/12/2007.

I will be unable to check e-mail regularly while I am out. If I can't
respond to your message while I am out, then I will when I return. If you
have anything that cannot wait, please contact my colleague, Mr. Ryanne
Dolan, at rdolan at usgs.gov.     Mike



From sena at hurd.homeunix.org  Wed Feb 28 09:00:34 2007
From: sena at hurd.homeunix.org (Sergey Spiridonov)
Date: Wed, 28 Feb 2007 18:00:34 +0100
Subject: [Proj] how to compare 2 proj4 definitions? or: how to normalize
	proj4 definition?
Message-ID: <es4cfi$bkl$1@sea.gmane.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi

I need to compare two proj4 definitions. It is clear that I can not
compare them as strings, because order of the parameters can be changed,
floats can be in different format, there can be various units.

Is there any normalization function available. If not, I will write one.
- --
Best regards, Sergey Spiridonov
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF5bUyJ3NEeIx4r3YRAsvPAJ4kGgr2VH6gos6551V9cKGzhz79lQCdEVOJ
QmpJiONwdtmAK3amXMkGPEU=
=xqkV
-----END PGP SIGNATURE-----



From sena at hurd.homeunix.org  Wed Feb 28 08:20:39 2007
From: sena at hurd.homeunix.org (Sergey Spiridonov)
Date: Wed, 28 Feb 2007 17:20:39 +0100
Subject: [Proj] how to compare 2 proj4 definitions? or: how to normalize
	proj4 definition?
Message-ID: <onmgb4-jcn.ln1@legba.gamic.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi

I need to compare two proj4 definitions. It is clear that I can not
compare them as strings, because order of the parameters can be changed,
floats can be in different format, there can be various units.

Is there any normalization function available. If not, I will write one.
- --
Best regards, Sergey Spiridonov
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF5avXJ3NEeIx4r3YRAsqyAJ4lSlgwhRYOW31lUKThrkZCsGh4NQCdFMfb
fJaMMtptZgQq1z/kN3XjGDY=
=vgzE
-----END PGP SIGNATURE-----



From warmerdam at pobox.com  Wed Feb 28 09:50:54 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 28 Feb 2007 12:50:54 -0500
Subject: [Proj] how to compare 2 proj4 definitions? or: how to normalize
	proj4 definition?
In-Reply-To: <es4cfi$bkl$1@sea.gmane.org>
References: <es4cfi$bkl$1@sea.gmane.org>
Message-ID: <45E5C0FE.2060809@pobox.com>

Sergey Spiridonov wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi
> 
> I need to compare two proj4 definitions. It is clear that I can not
> compare them as strings, because order of the parameters can be changed,
> floats can be in different format, there can be various units.
> 
> Is there any normalization function available. If not, I will write one.

Sergey,

I am not aware of a proj.4 definition normalization function.  In general
I think it is very hard to compare coordinate systems without a great deal
of knowledge about parameter semantics, etc. As you mention, order is an
issue.  Also there are issues with expanding init strings, precision of
arguments, arguments formats (ie. +lat=15.5 vs. +lat=15d30), defaulted
arguments.

However, if you want to take a crack at it, I'd be interested in incorporating
it into the library.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From geraldi.evenden at gmail.com  Wed Feb 28 13:21:13 2007
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Wed, 28 Feb 2007 16:21:13 -0500
Subject: [Proj] how to compare 2 proj4 definitions? or: how to normalize
	proj4 definition?
In-Reply-To: <45E5C0FE.2060809@pobox.com>
References: <es4cfi$bkl$1@sea.gmane.org> <45E5C0FE.2060809@pobox.com>
Message-ID: <200702281621.13854.geraldi.evenden@gmail.com>

On Wednesday 28 February 2007 12:50 pm, Frank Warmerdam wrote:
> Sergey Spiridonov wrote:
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > Hi
> >
> > I need to compare two proj4 definitions. It is clear that I can not
> > compare them as strings, because order of the parameters can be changed,
> > floats can be in different format, there can be various units.
> >
> > Is there any normalization function available. If not, I will write one.
>
> Sergey,

I was totally confused by the above request and thus chose to ignore it.  But 
I was confused even more by the response so please forgive my added notes.

> I am not aware of a proj.4 definition normalization function.  In general

There is not any "normalizing function" in either the library nor program 
[l]proj.  Of course, I have no idea as to what is meant by such a function in 
terms of cartographic transformations.

> I think it is very hard to compare coordinate systems without a great deal
> of knowledge about parameter semantics, etc.

"semantics" ?

> As you mention, order is an 
> issue. 

The + options for a projection can be in any order.  As for [l]proj input it 
is either lon lat or lat lon with the -r switch.

> Also there are issues with expanding init strings, precision of 
> arguments, arguments formats (ie. +lat=15.5 vs. +lat=15d30), defaulted
> arguments.

Both of the above values will yield identical internal numbers with maybe the 
least significant bit off.  Details as to equivalent precision between 
various forms of DMS is easily worked out with simple arithmatic.
>
> However, if you want to take a crack at it, I'd be interested in
> incorporating it into the library.
>
> Best regards,

If you desire analyzing projection performance I suggest using the -V option 
and start studying pp. 20-25 in Synder's Prof. Paper 1395 for starters.
-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939)  British psychologist


From warmerdam at pobox.com  Wed Feb 28 14:16:38 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 28 Feb 2007 17:16:38 -0500
Subject: [Proj] how to compare 2 proj4 definitions? or: how to normalize
	proj4 definition?
In-Reply-To: <200702281621.13854.geraldi.evenden@gmail.com>
References: <es4cfi$bkl$1@sea.gmane.org> <45E5C0FE.2060809@pobox.com>
	<200702281621.13854.geraldi.evenden@gmail.com>
Message-ID: <45E5FF46.8040909@pobox.com>

Gerald I. Evenden wrote:
> On Wednesday 28 February 2007 12:50 pm, Frank Warmerdam wrote:
>> Sergey Spiridonov wrote:
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA1
>>>
>>> Hi
>>>
>>> I need to compare two proj4 definitions. It is clear that I can not
>>> compare them as strings, because order of the parameters can be changed,
>>> floats can be in different format, there can be various units.
>>>
>>> Is there any normalization function available. If not, I will write one.
>> Sergey,
> 
> I was totally confused by the above request and thus chose to ignore it.  But 
> I was confused even more by the response so please forgive my added notes.

Gerald,

I believe Sergey is looking for a way of comparing PROJ.4 projection
definitions to see if they are equivelent.  By normalization he means
putting the coordinate system definition into a "normalized form" such
that two equivelent coordinate system definitions will have the same
string representation.  I'm not sure if this is a proper use of the word
normalize, but it was at least clear to me.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From ed at topozone.com  Wed Feb 28 15:04:21 2007
From: ed at topozone.com (Ed McNierney)
Date: Wed, 28 Feb 2007 18:04:21 -0500
Subject: [Proj] how to compare 2 proj4 definitions? or: how to
	normalizeproj4 definition?
In-Reply-To: <onmgb4-jcn.ln1@legba.gamic.com>
References: <onmgb4-jcn.ln1@legba.gamic.com>
Message-ID: <4BF377919225F449BB097CB76FFE9BC801987ECB@ptolemy.topozone.com>

Sergey -

I made a mild effort at this task a few years ago and gave up.  I had
implemented an ArcIMS emulator on top of a MapServer WMS service.  At
the time, ArcIMS specified a projection through the use of an EPSG
code/index.  ESRI later changed the ArcGIS client for ArcIMS to use a
parametric definition of the desired projection, in WKT format.  Since
the WMS interface requires an EPSG definition, I wanted to convert a
parametric projection description to its EPSG equivalent.

I found it sufficiently difficult to give up, especially since - in the
same release - ArcGIS gained WMS support, so I was able to just abandon
the emulator.

The chief difficulty is in determining whether two very similar
parameter values are supposed to be identical.  Is 0.9997 the same as
0.999721, just rounded, or is it supposed to be a different number?
Some parameters can be superfluous or redundant in certain
circumstances, but what do you do when things are very similar but
different?

If you can constrain the domain to include a specific subset of possible
definitions (however large that may be), the problem may become much
more manageable.

	- Ed

Ed McNierney
President and Chief Mapmaker
TopoZone.com / Maps a la carte, Inc.
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
Phone: +1 (978) 251-4242
Fax: +1 (978) 251-1396
ed at topozone.com

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Sergey Spiridonov
Sent: Wednesday, February 28, 2007 11:21 AM
To: proj at lists.maptools.org
Subject: [Proj] how to compare 2 proj4 definitions? or: how to
normalizeproj4 definition?

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi

I need to compare two proj4 definitions. It is clear that I can not
compare them as strings, because order of the parameters can be changed,
floats can be in different format, there can be various units.

Is there any normalization function available. If not, I will write one.
- --
Best regards, Sergey Spiridonov
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF5avXJ3NEeIx4r3YRAsqyAJ4lSlgwhRYOW31lUKThrkZCsGh4NQCdFMfb
fJaMMtptZgQq1z/kN3XjGDY=
=vgzE
-----END PGP SIGNATURE-----

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



