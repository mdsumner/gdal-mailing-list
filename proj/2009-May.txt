From ckarney at sarnoff.com  Fri May  1 02:50:17 2009
From: ckarney at sarnoff.com (Charles Karney)
Date: Fri, 01 May 2009 05:50:17 -0400
Subject: [Proj] Reduced length of geodesics
Message-ID: <ssry6th40fa.fsf@petrel.petrel.org>

I've updated my geodesic routines again.  For documentation go to

    http://charles.karney.info/geographic/geodesic.html

The code itself (C++ classes and the Geod utility) is available at

    http://charles.karney.info/geographic

The main changes are:

    * I use Bessel's technique to halve the number of terms in the
      series for the distance and longitude integrals.  The resulting
      series converge faster than before; so I trimmed the order of the
      distance series.  The resulting speed up of the code is then
      canceled by...

    * The reduced length, m12, is returned.  This is rate at which the
      second end point moves when the geodesic is rotated about the
      first point (and vice versa).  Christoffel (1868) introduced this
      quantity in his study of geodesic triangles.  For geodesics on a
      flat surface the geodesic length and the reduced length are the
      same.

    * An AzimuthalEquidistant class is provided which is a wrapper on
      top of the Geodesic class.  The azimuth at the second point and
      the reduced length are returned by the projection methods of this
      class since they serve to specify the local metric in the
      projected space.  (In particular, the ratio s12/m12 gives the
      azimuthal scale factor.)

    * The Geocentric, TransverseMercator, and PolarStereographic classes
      now work with prolate ellipsoids.  (TransverseMercatorExact is
      still restricted to prolate ellipsoids and will likely remain so).

Unfortunately, I've made little progress with documenting the geodesic
routines over the past month (because I've been concentrating on making
them better).  However, if anyone has a specific question about the
code, please ask me.

-- 
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662


From geraldi.evenden at gmail.com  Fri May  1 13:59:13 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Fri, 1 May 2009 16:59:13 -0400
Subject: [Proj] libproject benchmark
Message-ID: <200905011659.13420.geraldi.evenden@gmail.com>

Glory be and many thanks to libtool, libproject, once known as libproj4 has 
just seen the light of day as a shared library. The once static linked 
mapmaking routines linked in to the library and reduced their disk footprint   
from about 750k down to around 20k.

Still a bit of a problem resolving details on the *config.h in spotting 
references to the pthread and gsl libraries.  The proj-4.* stuff has never 
seemed to ever attemp to provide thread proof service nor employ gsl.  The 
latter should, of course, be optional because of licensing but I can't see 
any reason not thread-proofing.  But proj-4.* is years out of date so the 
comparison is specious.

Hopefully not too many more days until release of libproject.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ckarney at sarnoff.com  Mon May  4 08:10:09 2009
From: ckarney at sarnoff.com (Charles Karney)
Date: Mon, 04 May 2009 11:10:09 -0400
Subject: [Proj] Reduced length of geodesics
Message-ID: <ssrr5z4hpke.fsf@puffin.sarnoff.com>

I've updated my geodesic routines again.  For documentation go to

    http://charles.karney.info/geographic/geodesic.html

The code itself (C++ classes and the Geod utility) is available at

    http://charles.karney.info/geographic

The main changes are:

    * I use Bessel's technique to halve the number of terms in the
      series for the distance and longitude integrals.  The resulting
      series converge faster than before; so I trimmed the order of the
      distance series.  The resulting speed up of the code is then
      canceled by...

    * The reduced length, m12, is returned.  This is rate at which the
      second end point moves when the geodesic is rotated about the
      first point (and vice versa).  Christoffel (1868) introduced this
      quantity in his study of geodesic triangles.  For geodesics on a
      flat surface the geodesic length and the reduced length are the
      same.

    * An AzimuthalEquidistant class is provided which is a wrapper on
      top of the Geodesic class.  The azimuth at the second point and
      the reduced length are returned by the projection methods of this
      class since they serve to specify the local metric in the
      projected space.  (In particular, the ratio s12/m12 gives the
      azimuthal scale factor.)

    * The Geocentric, TransverseMercator, and PolarStereographic classes
      now work with prolate ellipsoids.  (TransverseMercatorExact is
      still restricted to prolate ellipsoids and will likely remain so).

Unfortunately, I've made little progress with documenting the geodesic
routines over the past month (because I've been concentrating on making
them better).  However, if anyone has a specific question about the
code, please ask me.

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662


From geraldi.evenden at gmail.com  Thu May  7 08:05:51 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Thu, 7 May 2009 11:05:51 -0400
Subject: [Proj] Indefinite delays with project library
Message-ID: <200905071105.51793.geraldi.evenden@gmail.com>

Among all the software development stuff available nothing, but nothing is 
more arcane and inscrutible than the automake, autoconf, libtool and, I might 
add, almost impossible to use.

I thought I had everything licked and managed to get a libproject.so which 
linked nicely to the geodesic program.  So I proceeded to add the projection 
software, do some cleanup on same and expand the Doxygen documentation.  The 
ad hoc mapping program was linked in nicely and I was happily making example 
plots.  Everything was going swimmingly.

Then OOPS.  I discovered that I was incorrectly using the versioning number 
system after a discussion with people on another list.  So I decided to start 
the series all over again and set it to 0:0:0.

Now the feces began to hit the fan.  Buried in this system there seems to be a 
Gnu-Linux God that must be appeased with some unknown sacrifices.  The damn 
system kept remembering the previous version number and messed with it and 
ignored any change I would attempt.  The only thing that seemed to work was 
to do a 'make maintainer-clean' and it finally did a 0.0.0 install.

Great, so I went to the applications like geodesic and the mapping programs to 
do a relink to the new installation.  Geodesic suddenly found that the 
configure could not find malloc and kept trying to link to xxx-malloc.  This 
was a fault of geodesic_cmd.h and I had to edit the file to make sure that 
the damn config.h was not included.  Then after I finally got each of the 
applications relinked the programs could not find the shared library!!!

Yes, yes, I had modified /etc/ld.so.conf to show /usr/local/lib which, of 
course, was proven by the previous success.

Another item that may be adversely affecting things is that I prelinked GSL 
and pthread libraries so applications would not have to worry about including 
them in their make's and/or worry about testing for them.

Right now everything is a hopeless f---king mess.  I am hoping that maybe a 
guru on the automake list will come up with a suggestion.  In my newly found 
spare time I can cry on this list.

People used to complain about the linker on the old IBM 360 system in the 60's 
but that was a piece of cake compared to today's monstrosity.

Anyway, the project library might be out in 2010 but don't hold your breath.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From roger at opq.se  Thu May  7 12:22:07 2009
From: roger at opq.se (Roger Oberholtzer)
Date: Thu, 7 May 2009 21:22:07 +0200
Subject: [Proj] Indefinite delays with project library
In-Reply-To: <200905071105.51793.geraldi.evenden@gmail.com>
References: <200905071105.51793.geraldi.evenden@gmail.com>
Message-ID: <025E22C1-BF89-4191-A949-4986868078A1@opq.se>


On May 7, 2009, at 5:05 PM, Gerald I. Evenden wrote:

> Among all the software development stuff available nothing, but  
> nothing is
> more arcane and inscrutible than the automake, autoconf, libtool  
> and, I might
> add, almost impossible to use.

Just out of curiosity, have you looked at the openSUSE Build Service?
It is set up for these types of things. The great thing is that once  
you set it up,
it makes installables for many Linux distros and even Windows (using  
MinG
and all, so your autoconfig and all are still used). It is designed to  
keep things
current. I think the other library discussed in these parts is already  
there.

I realize that you are quite busy with your current tasks. But this is  
directly
related to them.

You can check out the Build Service here: http://en.opensuse.org/Buildservice

You can look for software here:  http://software.opensuse.org/search

This site is not just rpmfind in new clothing. All the software here  
is complete in that
all dependencies are satisfied. Getting software does not require a  
login. Adding
things does. All for free.

I'm just a happy user of it. No official connection.

Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Office: Int +46 8-615 60 20
Mobile: Int +46 70-815 1696

And remember:

It is RSofT and there is always something under construction.
It is like talking about large city with all constructions finished.
Not impossible, but very unlikely.



From proj at cwilson.fastmail.fm  Thu May  7 12:31:02 2009
From: proj at cwilson.fastmail.fm (Charles Wilson)
Date: Thu, 07 May 2009 15:31:02 -0400
Subject: [Proj] Indefinite delays with project library
In-Reply-To: <200905071105.51793.geraldi.evenden@gmail.com>
References: <200905071105.51793.geraldi.evenden@gmail.com>
Message-ID: <4A0336F6.1020902@cwilson.fastmail.fm>

The biggest mistake most newly autotooled projects make is to allow the
config.h to become publicly visible via the project's public header
files.  (And some long-established projects do it to).

Normally, public header files shouldn't care about "gee does this system
have a working vfork()".  However, *types* matter -- and it's a bit of
an art to make sure that the types used in your public header file don't
depend on macros defined in config.h (like HAVE_UINT64_T, etc).

I don't know if I count as a "guru" but I'll try to take a look sometime
in the next week.

--
Chuck


From neteler at osgeo.org  Tue May 12 03:09:04 2009
From: neteler at osgeo.org (Markus Neteler)
Date: Tue, 12 May 2009 12:09:04 +0200
Subject: [Proj] Slovenian projection?
Message-ID: <86782b610905120309m75662b30hfbe1eef199060e58@mail.gmail.com>

Dear list members,

for a research project I got the Slovenian DEM (25m) but
no explanations nor the description of the coordinate system.

The center coordinates are
center easting:  500000.000000
center northing: 112000.000000

State boundaries of the DEM:
n=196000
s=28000
w=374000
e=626000

I was unable to find a reasonable answer in the internet, and
http://www.epsg-registry.org/
lists several systems. Is it Gauss-Krueger based with false easting/northing?
Since I have no reference point, I was unable to guess it.

thanks in advance for a hint,
Markus


From Mikael.Rittri at carmenta.com  Tue May 12 06:01:37 2009
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 12 May 2009 15:01:37 +0200
Subject: [Proj] Slovenian projection?
In-Reply-To: <86782b610905120309m75662b30hfbe1eef199060e58@mail.gmail.com>
References: <86782b610905120309m75662b30hfbe1eef199060e58@mail.gmail.com>
Message-ID: <FAF6E56B26D2044696772EBE89B153510189FEEB@posty.carmenta.se>

Hello Markus,
Here is some partial help: I think you can rule out two of the four
possibilities.

There are four similar coordinate reference system for Slovenia in the
EPSG database. 

EPSG:31275, "MGI / Balkans zone 5", with EuroGeographics name: "HR_HDKS
/ HR_TM" and Sloven name: "D48 zone 5".
EPSG:3787, "MGI / Slovene National Grid", with Sloven name: "D48 / GK".
EPSG:2170, "MGI / Slovenia Grid", with EuroGeographics name: "SI_D48 /
SI_TM" and Sloven name "D48 / Slovenia Grid".
EPSG:3794, "Slovenia 1996 / Slovene National Grid", with Sloven name
"D96 / TM".

With EPSG:31275, the easting and northing coordinates would 
be seven-digit inside Slovenia.
With EPSG:2170, the northing would be seven-digit and 
the easting would be six-digit, inside Slovenia.  

Since all your coordinates are six-digit (except in the south), 
I think your data must be in either EPSG:3787 or EPSG:3794.
The projection parameters are the same in these two systems, 
but the geodetic datums differ.  If you choose the wrong datum,
your positions will be wrong by about 380 meters.  

If it turns out that your data is given in the MGI datum, 
I think the transformation 

EPSG::15981, "MGI to Slovenia 1996 (1)"

is good for most purposes (accuracy: 1 metre), since "Slovenia 1996"
is very nearly the same as WGS84.    

I hope this helps a little, 
--
Mikael Rittri
Carmenta AB
SWEDEN
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Markus Neteler
Sent: den 12 maj 2009 12:09
To: PROJ.4 and general Projections Discussions
Subject: [Proj] Slovenian projection?

Dear list members,

for a research project I got the Slovenian DEM (25m) but no explanations
nor the description of the coordinate system.

The center coordinates are
center easting:  500000.000000
center northing: 112000.000000

State boundaries of the DEM:
n=196000
s=28000
w=374000
e=626000

I was unable to find a reasonable answer in the internet, and
http://www.epsg-registry.org/ lists several systems. Is it Gauss-Krueger
based with false easting/northing?
Since I have no reference point, I was unable to guess it.

thanks in advance for a hint,
Markus
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From geraldi.evenden at gmail.com  Fri May 15 11:53:46 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Fri, 15 May 2009 14:53:46 -0400
Subject: [Proj] pms finally comes to project projection library
Message-ID: <200905151453.46152.geraldi.evenden@gmail.com>

The prime meridian system offset option has finally been added to the 
projection library.  There are two ways to use it:

1. use the list of "standard" prime meridians from the list below:

sproj -l pms
      Athens : 23d42'58.815"E
        Bern : 7d26'22.5"E
      Bogota : 74d04'51.3"W
    Brussels : 4d22'4.71"E
       Ferro : 17d40'W
   Greenwich : 0dE
     Jakarta : 106d48'27.79"E
      Lisbon : 9d07'54.862"W
      Madrid : 3d41'16.58"W
        Oslo : 10d43'22.5"E
       Paris : 2d20'14.025"E
        Rome : 12d27'8.4"
   Stockholm : 18d3'29.8"E

and using as

sproj proj=poly ellps=wgs84 pms=ferro

List spiked from Warmerdams proj-4.6.1 and unverified.

2, or by specifying your own value such as:

sproj proj=poly ellps=wgs84 pms=2d30.7W

The pms offset only applies to only correcting the data to the Greenwich 
meridian and any longitude values related to projection definition are in the 
coordinate system of the original system.  This is demonstrated below:

sproj proj=tmerc ellps=wgs84 lon_0=5 pms=7d33\'14 -I <<EOF
0 0
EOF
12d33'14.000"E  0d00'00.000"N

Using the projection inverse shows shows more readily where the CM ends up.

sproj is a basic, no frills projection rooutine:

sproj -h
Short Cartographic Projection Computer v. 1.0

Compute forward or inverse cartographic projections

Usage: sproj [OPTIONS] [projection options]

A program to compute forward or inverse cartographic projection.
  -h, --help                 Print help and exit
      --detailed-help        Print help, including all details and hidden
                               options, and exit
  -V, --version              Print version and exit
  -I, --inverse              Inverse projection  (default=off)
  -r, --revin                reverse order of input to phi-lam or y-x
                               (default=off)
  -R, --revout               reverse order of output to y-x or phi-lam
                               (default=off)
  -f, --format=C_format_str  output format
  -l, --list=ENUM            list options  (possible values="proj",
                               "ellps", "pms", "units" default=`proj')
  -P, --longproj[=proj_id]   detail projection list

Data I/O is through stdin/out and geographic data may be in either DMS or 
colon format.  User can format colon for output.  I will probably flesh sproj 
out more in the future.

I should be able to get this whole ball of wax on my web site by Sunday, 17 
May, barring any more autoconf, el al disasters. :-(

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From geraldi.evenden at gmail.com  Sat May 16 10:10:09 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sat, 16 May 2009 13:10:09 -0400
Subject: [Proj] Question on colon DMS format
Message-ID: <200905161310.09435.geraldi.evenden@gmail.com>

Maybe someone here is familiar with what I call the colon format for DMS 
display where degree-minute-seconds are in the from of DDD:MM:SS.SSS[NEWS]
or perhaps sign prefixed.

The quesion is: can only one colon be present such as for DDD:MM.MMM such as 
allowable in DMS as DDDdmm.mmm[']?

This is immaterial for proj_dms2rad as it accepts all of them but I was 
curious if users should be careful to exclude anything less then the two 
colon format for proj_rad2dms output format specification.

The first time I encountered the colon format was at the CERL Grass group in 
Illinois many, many years ago.  I see it occasionally elsewhere.

Also, is anyone familiar with any other DMS format?

PS: angle input in proj has also recognized r suffix as denoting radian input 
for many years.  I have also though of including rad but do not know how to 
designate such input since 'r' is already taken.  ;-(

An anecdotal aside: USGS FORTRAN GCTP once used (and maybe still does) 
a "packed" double precision variable dddmmss.sssssd00 (I may have 
misremembered the exact details but that was the basic essence).  But what 
was sooo horrible was that IBM's input formatter would ignore 0s replaced by 
blanks in the middle of the word such that 10 0 0.000000D00 was OK for 10 
degrees. BUT!! As you can imagine, that did not go over well for reading on 
any other processor where embedded blanks were verboten.  One off several 
reasons I did not have a very high opinion of GCTP.  PROJ was a rebellion 
against the evils of GCTP.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From hamish_b at yahoo.com  Sat May 16 19:55:23 2009
From: hamish_b at yahoo.com (Hamish)
Date: Sat, 16 May 2009 19:55:23 -0700 (PDT)
Subject: [Proj] Question on colon DMS format
Message-ID: <507964.29544.qm@web110008.mail.gq1.yahoo.com>


Gerald wrote:
> Maybe someone here is familiar with what I call the colon
> format for DMS display where degree-minute-seconds are in
> the from of DDD:MM:SS.SSS[NEWS] or perhaps sign prefixed.

colon separated DMS sounds as clear as it can be to me.

> The quesion is: can only one colon be present such as for
> DDD:MM.MMM such as allowable in DMS as DDDdmm.mmm[']?

GRASS still uses this format, the following are allowed:

DDDh
 (DDD.DDDDDDh is not allowed, as E has problems with
  mistranslation into e.g. e+06; so +/- DDD.DDDDD must be
  used there; could probably be coded around but currently isn't)
DDD:MMh
DDD:MM.MMMMh  (recently added to deal with GPS output)
DDD:MM:SSh
DDD:MM:SS.SSSSSh

GRASS enforces %02d for MM and SS input, but I don't think
that's necessary and have considered removing it.


> This is immaterial for proj_dms2rad as it accepts all of
> them but I was curious if users should be careful to
> exclude anything less then the two colon format for
> proj_rad2dms output format specification.
> 
> The first time I encountered the colon format was at the
> CERL Grass group in Illinois many, many years ago.  I see
> it occasionally elsewhere.
>
> Also, is anyone familiar with any other DMS format?

simple space separated, but then most of the time I've spent
dealing with that is sorting out if the end numbers are
recorded as seconds and no decimal place or minutes with
decimal place (and changing with the operator on duty.. argh)

and using a degree ascii char, but then that always goes nuts
when the LANG setting changes.

the many gpsbabel format filters might give you an idea of what
else is used.



Hamish



      



From geraldi.evenden at gmail.com  Sun May 17 07:47:17 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 17 May 2009 10:47:17 -0400
Subject: [Proj] Question on colon DMS format
In-Reply-To: <507964.29544.qm@web110008.mail.gq1.yahoo.com>
References: <507964.29544.qm@web110008.mail.gq1.yahoo.com>
Message-ID: <200905171047.17365.geraldi.evenden@gmail.com>

On Saturday 16 May 2009 10:55:23 pm Hamish wrote:
	...
> GRASS still uses this format, the following are allowed:
>
> DDDh
>  (DDD.DDDDDDh is not allowed, as E has problems with
>   mistranslation into e.g. e+06; so +/- DDD.DDDDD must be
>   used there; could probably be coded around but currently isn't)

I do not understand the "h".

Problems with a NEWS suffix sign sounds like a library problem.  On a GNU 
library 11.3e is interpreted as a positive 11.3 and "e" is still in the 
uninterpreded input string.

A proper lexical analyser should sense existance of an e|E followed by a 
signed number.  The "D" of FORTRAN infamy is not recognized.  In any case 
proj_dms2rad and preceeding versions have not put a restriction on ddd.dddd.

> DDD:MMh
> DDD:MM.MMMMh  (recently added to deal with GPS output)
> DDD:MM:SSh
> DDD:MM:SS.SSSSSh
>
> GRASS enforces %02d for MM and SS input, but I don't think
> that's necessary and have considered removing it.

Don't use %2d as that will cause space for numbers under 10.  "%d" will work 
OK with proj_dms2rad.

	...
> and using a degree ascii char, but then that always goes nuts
> when the LANG setting changes.

Basic, old time, standard ASCII does *not* have a degree mark and that is why 
I have not used it.  The degree mark is an addition to some alphabets.

I would use it but I am not a student of all the alphabets available nor do I 
want to be and until a standard alphabet is mandated by the US Congress, The 
United Nations, or a local star cluster federation, I must stick to old 
standards although I would like to use a °.

If this august group of potential users can make an IRON-CLAD guarantee that 
latin-1, UTF-8, or whatever set is univerally available to a *all* potential 
users and usable in C format operations, I would add the degree mark to the 
system.

Thanks for the comments.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From geraldi.evenden at gmail.com  Sun May 17 11:29:46 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 17 May 2009 14:29:46 -0400
Subject: [Proj] Good ol' tools s__t breaks another of my promises
Message-ID: <200905171429.46153.geraldi.evenden@gmail.com>

I tested my installation procedures on a Ubuntu laptop and things failed 
because I did not have  GSL on the machine AND THUS ./configure got pissed 
off.

Went back to the desktop to trying to adjust configure.ac. It looks like the 
house of cards has collapsed on me and I am back to square one.

What an incredible piece of s__t.  A pox on the [laughing like a 
hyena] "designers."  It is like a game of jack-straws.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From geraldi.evenden at gmail.com  Sun May 17 14:57:16 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 17 May 2009 17:57:16 -0400
Subject: [Proj] Whew, in spite of the damnable distribution software
Message-ID: <200905171757.16977.geraldi.evenden@gmail.com>

and the kind assistance from the Automake group the software is now at:

http://home.comcast.net/~gevenden56/geodesy/project/

Scroll down to the distribution table.

Also, throw away, burn and otherwise destroy by any means previous preliminary 
distributions of the libproject library stuff and applications.

I should get the Doxygen updates out in a few days.

The stupid problem with the malloc test persists and you will note that the 
test is commented out in the configure.ac files of geodesic and sproj.

Me thinks it is time to throw in the towel and vegitate before the tele for 
the rest of the evening.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From glynn at gclements.plus.com  Sun May 17 18:29:42 2009
From: glynn at gclements.plus.com (Glynn Clements)
Date: Mon, 18 May 2009 02:29:42 +0100
Subject: [Proj] Question on colon DMS format
In-Reply-To: <200905171047.17365.geraldi.evenden@gmail.com>
References: <507964.29544.qm@web110008.mail.gq1.yahoo.com>
	<200905171047.17365.geraldi.evenden@gmail.com>
Message-ID: <18960.47622.704725.327250@cerise.gclements.plus.com>


Gerald I. Evenden wrote:

> If this august group of potential users can make an IRON-CLAD guarantee that 
> latin-1, UTF-8, or whatever set is univerally available to a *all* potential 
> users and usable in C format operations, I would add the degree mark to the 
> system.

If you remember our last discussion of internationalisation issues, we
can't even guarantee that "Basic, old time, standard ASCII" is
universally available to all potential users, although anyone who
isn't using an ASCII-compatible encoding will invariably be capable of
dealing with the issues themselves.

There are ways of determining whether the current locale has a degree
sign, and if so the correct code for it. OTOH, you don't necessarily
know whether you should be using the locale. E.g. just because the
locale's decimal "point" is a comma, that doesn't mean that you should
output floating-point values in that format.

-- 
Glynn Clements <glynn at gclements.plus.com>


From roger at opq.se  Mon May 18 00:15:14 2009
From: roger at opq.se (Roger Oberholtzer)
Date: Mon, 18 May 2009 09:15:14 +0200
Subject: [Proj] Whew, in spite of the damnable distribution software
In-Reply-To: <200905171757.16977.geraldi.evenden@gmail.com>
References: <200905171757.16977.geraldi.evenden@gmail.com>
Message-ID: <1242630914.5048.13.camel@acme.pacific>

On Sun, 2009-05-17 at 17:57 -0400, Gerald I. Evenden wrote:
> and the kind assistance from the Automake group the software is now at:
> 
> http://home.comcast.net/~gevenden56/geodesy/project/
> 
> Scroll down to the distribution table.
> 
> Also, throw away, burn and otherwise destroy by any means previous preliminary 
> distributions of the libproject library stuff and applications.
> 
> I should get the Doxygen updates out in a few days.
> 
> The stupid problem with the malloc test persists and you will note that the 
> test is commented out in the configure.ac files of geodesic and sproj.
> 
> Me thinks it is time to throw in the towel and vegitate before the tele for 
> the rest of the evening.

Your site states "Sorry, no Microsoft support available." Is this
intended for the build part, or the library itself?

-- 
Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Krukmakargatan 21
P.O. Box 17009
SE-104 62 Stockholm, Sweden

Office: Int +46 8-615 60 20
Mobile: Int +46 70-815 1696



From hamish_b at yahoo.com  Mon May 18 04:52:31 2009
From: hamish_b at yahoo.com (Hamish)
Date: Mon, 18 May 2009 04:52:31 -0700 (PDT)
Subject: [Proj] Question on colon DMS format
Message-ID: <553.35496.qm@web110008.mail.gq1.yahoo.com>


> Hamish wrote:
> > GRASS still uses this format, the following are allowed:
> >
> > DDDh
> >  (DDD.DDDDDDh is not allowed, as E has problems with
> >   mistranslation into e.g. e+06; so +/- DDD.DDDDD must be
> >   used there; could probably be coded around but currently isn't)

Gerald wrote:
> I do not understand the "h".

(I just meant hemisphere)
 
> Problems with a NEWS suffix sign sounds like a library problem.
....
> A proper lexical analyser should sense existance of an e|E
> followed by a signed number.

or just my bad memory, or assumption about why something so simple wasn't
implemented (I'm too trusting there was a good reason). all I'm really
sure of is that at present you can't mix degree-only with decimal places
and NSEW in GRASS. Maybe it is a simple libgrass coding fix to enable
it after all. shrug, not relevant for this thread.


> The "D" of FORTRAN infamy is not recognized.

but "U" and "f" maybe?

> In any case proj_dms2rad and preceeding versions have not put a
> restriction on ddd.dddd.

ok, good.

> > GRASS enforces %02d for MM and SS input, but I don't think
> > that's necessary and have considered removing it.
> 
> Don't use %2d as that will cause space for numbers under
> 10.

%02d pads the space with a zero. my point was that GRASS expects to
see 123:45E or 123:05E, but 123:5E is considered an error.

> "%d" will work OK with proj_dms2rad.

ok, good.

> Basic, old time, standard ASCII does *not* have a degree
> mark and that is why I have not used it.

you mean in the days before they discovered the number 129? ;-)



Hamish



      



From geraldi.evenden at gmail.com  Mon May 18 07:17:26 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 18 May 2009 10:17:26 -0400
Subject: [Proj] Whew, in spite of the damnable distribution software
In-Reply-To: <1242630914.5048.13.camel@acme.pacific>
References: <200905171757.16977.geraldi.evenden@gmail.com>
	<1242630914.5048.13.camel@acme.pacific>
Message-ID: <200905181017.26385.geraldi.evenden@gmail.com>

On Monday 18 May 2009 3:15:14 am Roger Oberholtzer wrote:
> On Sun, 2009-05-17 at 17:57 -0400, Gerald I. Evenden wrote:
	...
> Your site states "Sorry, no Microsoft support available." Is this
> intended for the build part, or the library itself?

My comment is there mainly because of my almost complete and undenied 
ignorance of Microsoft software and my limited knowledge that there may be 
things based upon my missing M$ knowledged that should be included in 
a "configure" operation.

Although I do have an M$ XP on part of my desktop disc I do not know how to 
use it other than the most elementary operations such as using a scanner that 
Linux does not have a driver for.

I have thought of getting a cheap desktop just for M$ support but all that 
seems available now comes with Vista which has rumors of being a real dog
(as if that was possible, considering past M$ systems).  Also, there is the 
problem of what M$ C system does one target for.  Is Cygwin an acceptable 
alternative?  Etc., etc., etc. ... .  Obviously, the software has to be run 
on a command window/console---do Windows users know anything about this mode 
of computer usage?  Seriously, I do no know.

I am willing to discuss the issue and entertain options.

-----------------------

Another anecdote: since changing ISPs I had to get my wife a new email 
account.  I chose gmail as I use it and had no problem interfacing with 
Kontact.  Well, in spite of all the documentation on gmail about interfacing 
to Windows, I gave up after 4 frustrationing hours trying to get my wife's 
laptop Window's mail routine to interface with gmail.  I am always amazed how 
Windows continues to exist.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From geraldi.evenden at gmail.com  Mon May 18 07:29:59 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 18 May 2009 10:29:59 -0400
Subject: [Proj] Whew, in spite of the damnable distribution software
In-Reply-To: <1242630914.5048.13.camel@acme.pacific>
References: <200905171757.16977.geraldi.evenden@gmail.com>
	<1242630914.5048.13.camel@acme.pacific>
Message-ID: <200905181029.59584.geraldi.evenden@gmail.com>

On Monday 18 May 2009 3:15:14 am Roger Oberholtzer wrote:
	...
> Your site states "Sorry, no Microsoft support available." Is this
> intended for the build part, or the library itself?

Just an added note: in the case of Windows why not just distribute a DLL and 
*.exe's.?  If someone want the sources, then they are responsible for dealing 
with the configure for DOS.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From Chris.Barker at noaa.gov  Mon May 18 11:59:41 2009
From: Chris.Barker at noaa.gov (Christopher Barker)
Date: Mon, 18 May 2009 11:59:41 -0700
Subject: [Proj] Whew, in spite of the damnable distribution software
In-Reply-To: <200905181029.59584.geraldi.evenden@gmail.com>
References: <200905171757.16977.geraldi.evenden@gmail.com>
	<1242630914.5048.13.camel@acme.pacific>
	<200905181029.59584.geraldi.evenden@gmail.com>
Message-ID: <4A11B01D.7020608@noaa.gov>

Gerald I. Evenden wrote:
> Just an added note: in the case of Windows why not just distribute a DLL and 
> *.exe's.?  If someone want the sources, then they are responsible for dealing 
> with the configure for DOS.

That is how it's usually done, but hen you need to compile them.

MinGW+Msys is on option, or cygwin with the -mingw flag (to get binaries 
that don't depend on cygwin)

-Chris





-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov


From geraldi.evenden at gmail.com  Mon May 18 12:28:56 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 18 May 2009 15:28:56 -0400
Subject: [Proj] Whew, in spite of the damnable distribution software
In-Reply-To: <4A11B01D.7020608@noaa.gov>
References: <200905171757.16977.geraldi.evenden@gmail.com>
	<200905181029.59584.geraldi.evenden@gmail.com>
	<4A11B01D.7020608@noaa.gov>
Message-ID: <200905181528.56709.geraldi.evenden@gmail.com>

On Monday 18 May 2009 2:59:41 pm Christopher Barker wrote:
> Gerald I. Evenden wrote:
> > Just an added note: in the case of Windows why not just distribute a DLL
> > and *.exe's.?  If someone want the sources, then they are responsible for
> > dealing with the configure for DOS.
>
> That is how it's usually done, but hen you need to compile them.
>
> MinGW+Msys is on option, or cygwin with the -mingw flag (to get binaries
> that don't depend on cygwin)
>
> -Chris

A quick look at the MinGW+MSYS web site makes it seem like the choice.

Are there any other comments on this suggestion?  Especially from nay-sayers 
and critics.

One thing that comes to mind: I have a 64 bit machine.  How is that going to 
confuse the above operations?  Compile different exe's?

Other details about pthread and GSL library options.  How to handle said 
options has to be dealt with.

Thanks for the suggestion.

As an embarassing aside, I installed cygwin on the flip side of my desktop but 
have never done anything with it.  After I loaded it there was some 
installation stuff which seemed to require DOS knowledge so I put it aside 
out of fear of having to learn something about DOS.  So it has been rusting 
there ever since.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From roger at opq.se  Mon May 18 12:58:35 2009
From: roger at opq.se (Roger Oberholtzer)
Date: Mon, 18 May 2009 21:58:35 +0200
Subject: [Proj] Whew, in spite of the damnable distribution software
In-Reply-To: <200905181528.56709.geraldi.evenden@gmail.com>
References: <200905171757.16977.geraldi.evenden@gmail.com>
	<200905181029.59584.geraldi.evenden@gmail.com>
	<4A11B01D.7020608@noaa.gov>
	<200905181528.56709.geraldi.evenden@gmail.com>
Message-ID: <A9F5E831-0419-45AC-87CB-3430FAD73CC7@opq.se>


On May 18, 2009, at 9:28 PM, Gerald I. Evenden wrote:

> On Monday 18 May 2009 2:59:41 pm Christopher Barker wrote:
>> Gerald I. Evenden wrote:
>>> Just an added note: in the case of Windows why not just distribute  
>>> a DLL
>>> and *.exe's.?  If someone want the sources, then they are  
>>> responsible for
>>> dealing with the configure for DOS.
>>
>> That is how it's usually done, but hen you need to compile them.
>>
>> MinGW+Msys is on option, or cygwin with the -mingw flag (to get  
>> binaries
>> that don't depend on cygwin)
>>
>> -Chris
>
> A quick look at the MinGW+MSYS web site makes it seem like the choice.
>
> Are there any other comments on this suggestion?  Especially from  
> nay-sayers
> and critics.
>
> One thing that comes to mind: I have a 64 bit machine.  How is that  
> going to
> confuse the above operations?  Compile different exe's?
>
> Other details about pthread and GSL library options.  How to handle  
> said
> options has to be dealt with.
>
> Thanks for the suggestion.

You might also consider the openSUSE build service, which can make the  
various packages automatically. This includes many Linux platforms as  
well as Windows. You do not need to maintain the systems on which you  
want to build things.

>

Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Office: Int +46 8-615 60 20
Mobile: Int +46 70-815 1696

And remember:

It is RSofT and there is always something under construction.
It is like talking about large city with all constructions finished.
Not impossible, but very unlikely.



From support.mn at elisanet.fi  Tue May 19 00:15:51 2009
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Tue, 19 May 2009 10:15:51 +0300 (EEST)
Subject: [Proj] Question on colon DMS format
Message-ID: <12160791.2948121242717351660.JavaMail.support.mn@elisanet.fi>

"Gerald I. Evenden" [geraldi.evenden at gmail.com] kirjoitti: 
> Maybe someone here is familiar with what I call the colon format for DMS 
> display where degree-minute-seconds are in the from of DDD:MM:SS.SSS[NEWS]
> or perhaps sign prefixed.
> 
> The quesion is: can only one colon be present such as for DDD:MM.MMM such as 
> allowable in DMS as DDDdmm.mmm[']?
> 

The BNF for positions is as follows:

<string> :== {<spaces>} {<sign>} <field> {<sign>} {<spaces>} {<eol>}
<field>  :== <number> {t_SEP <number> {t_SEP <number>}}
           | <number> t_DEG {<number> t_MIN {<number> t_SEC}}
<number> :== <digits> {t_STOP} {<digits>}
<digits> :== <digit> {<digits>}
<spaces> :== <t_SPACE> {<spaces>}
<sign>   :==  t_POS | t_NEG

where the terminal symbols are:
  t_DIGIT :== "0".."9"
  t_SPACE :== " " | "\t"
  t_SEP   :== ":" | "/" | "\"
  t_STOP  :== "." | ","
  t_POS   :== "+" | "N" | "E"
  t_NEG   :== "-" | t_S | "W"
  t_D     :== "d" | "D"
  t_M     :== "m" | "M"
  t_S     :== "s" | "S"

-------------------------

Examples:

N60.5
60:30.55N
+60:30:55.34
21:33,45123E

It works both with european , or american .


Regards: Janne.



From geraldi.evenden at gmail.com  Sat May 23 12:40:52 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sat, 23 May 2009 15:40:52 -0400
Subject: [Proj] Revised project library 1.01
Message-ID: <200905231540.52559.geraldi.evenden@gmail.com>

The projection library has been revised and updated at

http://home.comcast.net/~gevenden56/geodesy/project/

Main problem was better initialization that that may a problem on some systems 
that was hidden by Gnu's apparently clearing memory in malloc calls.

Other corrections.  Details on ChangeLog.

I am about to drop libproj4 from the web site because I cannot support it and 
it is beginning to fall woefully out of date.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From miguelrluaces at gmail.com  Tue May 26 09:03:03 2009
From: miguelrluaces at gmail.com (Miguel R. Luaces)
Date: Tue, 26 May 2009 18:03:03 +0200
Subject: [Proj] Coordinate change transforming to EPSG:4326
Message-ID: <6171aaeb0905260903q5b33c901l249a0f2b21f91d07@mail.gmail.com>

Dear all,

I am using proj.4 as part of PostGIS. Version 1.3.1 of postgis included PRO
Rel. 4.5.0, whereas version 1.36 includes PROJ Rel. 4.6.1

When I transform a coordinate from EPSG:23209 to EPSG:4326 I get the
following results.

In Postgis 1.3.1 (PROJ.4 Rel. 4.5.0):

"POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
43.3657910268222)"

In Postgis 1.3.6 (PROJ Rel. 4.6.1):

"POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
43.3666118995462)"

The second coordinate of the transformation to 4326 changes by 0.004 degrees
(approx).

If I use cs2cs from command line (version proj446_win32), I get:

-8.38839300     43.36661190

Why do I get a different result in postgis 1.3.1 and in postgis 1.3.6?

Why do I get the same result in PROJ4 4.4.6?

I do not understand. I hope anybody can help me.

Best regards,
  Miguel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20090526/841cb6e6/attachment.html>

From hamish_b at yahoo.com  Tue May 26 23:43:19 2009
From: hamish_b at yahoo.com (Hamish)
Date: Tue, 26 May 2009 23:43:19 -0700 (PDT)
Subject: [Proj] Coordinate change transforming to EPSG:4326
Message-ID: <354757.13192.qm@web110009.mail.gq1.yahoo.com>


Miguel wrote:
> I am using proj.4 as part of PostGIS. Version 1.3.1 of
> postgis included PRO Rel. 4.5.0, whereas version 1.36
> includes PROJ Rel. 4.6.1
> 
> When I transform a coordinate from EPSG:23209 to EPSG:4326
> I get the following results.
> 
> 
> In Postgis 1.3.1 (PROJ.4 Rel. 4.5.0):
> 
> "POINT(549556.009066526
> 4801796.3531214)";"POINT(-8.38839299999999
> 43.3657910268222)"
> 
> In Postgis 1.3.6 (PROJ Rel. 4.6.1):
> 
> 
> "POINT(549556.009066526
> 4801796.3531214)";"POINT(-8.38839299999999
> 43.3666118995462)"
> The second coordinate of the transformation to 4326 changes
> by 0.004 degrees (approx).
> 
> If I use cs2cs from command line (version proj446_win32), I
> get:
> 
> 
> -8.38839300     43.36661190
> 
> Why do I get a different result in postgis 1.3.1 and in
> postgis 1.3.6?
> 
> Why do I get the same result in PROJ4 4.4.6?

see http://trac.osgeo.org/proj/wiki/FAQ#WhydoIgetdifferentresultswith4.5.0and4.6.0


Hamish



      



From ndzinn at comcast.net  Wed May 27 03:26:51 2009
From: ndzinn at comcast.net (Noel Zinn)
Date: Wed, 27 May 2009 05:26:51 -0500
Subject: [Proj] Coordinate change transforming to EPSG:4326
In-Reply-To: <354757.13192.qm@web110009.mail.gq1.yahoo.com>
References: <354757.13192.qm@web110009.mail.gq1.yahoo.com>
Message-ID: <655CEE539BD448E796479DB42D5050D7@PowerSpec>

In this regard, be aware of EPSG dataset coordinate operation method 1024
("Popular Visualization Pseudo Mercator"), which solves this problem
correctly by defining a new projection.

Section 1.3.3.2 of Guidance Note 7-2 at www.epsg.org

Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Hamish
Sent: Wednesday, May 27, 2009 1:43 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Coordinate change transforming to EPSG:4326


Miguel wrote:
> I am using proj.4 as part of PostGIS. Version 1.3.1 of
> postgis included PRO Rel. 4.5.0, whereas version 1.36
> includes PROJ Rel. 4.6.1
> 
> When I transform a coordinate from EPSG:23209 to EPSG:4326
> I get the following results.
> 
> 
> In Postgis 1.3.1 (PROJ.4 Rel. 4.5.0):
> 
> "POINT(549556.009066526
> 4801796.3531214)";"POINT(-8.38839299999999
> 43.3657910268222)"
> 
> In Postgis 1.3.6 (PROJ Rel. 4.6.1):
> 
> 
> "POINT(549556.009066526
> 4801796.3531214)";"POINT(-8.38839299999999
> 43.3666118995462)"
> The second coordinate of the transformation to 4326 changes
> by 0.004 degrees (approx).
> 
> If I use cs2cs from command line (version proj446_win32), I
> get:
> 
> 
> -8.38839300     43.36661190
> 
> Why do I get a different result in postgis 1.3.1 and in
> postgis 1.3.6?
> 
> Why do I get the same result in PROJ4 4.4.6?

see
http://trac.osgeo.org/proj/wiki/FAQ#WhydoIgetdifferentresultswith4.5.0and4.6
.0


Hamish



      

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From jerome at georezo.net  Wed May 27 11:13:01 2009
From: jerome at georezo.net (=?iso-8859-1?Q?Cuinet_J=E9r=F4me?=)
Date: Wed, 27 May 2009 20:13:01 +0200
Subject: [Proj] Coordinate change transforming to EPSG:4326
In-Reply-To: <6171aaeb0905260903q5b33c901l249a0f2b21f91d07@mail.gmail.com>
References: <6171aaeb0905260903q5b33c901l249a0f2b21f91d07@mail.gmail.com>
Message-ID: <2553C9A96E104782A4078F8CB8351E3D@JCPORTABLE>

I have snooped EPSG:23209 definition and I haven't found any definition.

What is this coordinate system ?



Jérôme
----- Original Message ----- 
From: "Miguel R. Luaces" <miguelrluaces at gmail.com>
To: <proj at lists.maptools.org>
Sent: Tuesday, May 26, 2009 6:03 PM
Subject: [Proj] Coordinate change transforming to EPSG:4326


> Dear all,
>
> I am using proj.4 as part of PostGIS. Version 1.3.1 of postgis included 
> PRO
> Rel. 4.5.0, whereas version 1.36 includes PROJ Rel. 4.6.1
>
> When I transform a coordinate from EPSG:23209 to EPSG:4326 I get the
> following results.
>
> In Postgis 1.3.1 (PROJ.4 Rel. 4.5.0):
>
> "POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
> 43.3657910268222)"
>
> In Postgis 1.3.6 (PROJ Rel. 4.6.1):
>
> "POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
> 43.3666118995462)"
>
> The second coordinate of the transformation to 4326 changes by 0.004 
> degrees
> (approx).
>
> If I use cs2cs from command line (version proj446_win32), I get:
>
> -8.38839300     43.36661190
>
> Why do I get a different result in postgis 1.3.1 and in postgis 1.3.6?
>
> Why do I get the same result in PROJ4 4.4.6?
>
> I do not understand. I hope anybody can help me.
>
> Best regards,
>  Miguel
>


--------------------------------------------------------------------------------


> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj 



From miguelrluaces at gmail.com  Thu May 28 00:39:22 2009
From: miguelrluaces at gmail.com (Miguel R. Luaces)
Date: Thu, 28 May 2009 09:39:22 +0200
Subject: [Proj] Coordinate change transforming to EPSG:4326
In-Reply-To: <2553C9A96E104782A4078F8CB8351E3D@JCPORTABLE>
References: <6171aaeb0905260903q5b33c901l249a0f2b21f91d07@mail.gmail.com>
	<2553C9A96E104782A4078F8CB8351E3D@JCPORTABLE>
Message-ID: <6171aaeb0905280039k31288f8ds618c707eaf78afd4@mail.gmail.com>

Dear Jérôme,

sorry, I meant EPSG:23029

Best regards,
  Miguel

On Wed, May 27, 2009 at 8:13 PM, Cuinet Jérôme <jerome at georezo.net> wrote:

> I have snooped EPSG:23209 definition and I haven't found any definition.
>
> What is this coordinate system ?
>
>
>
> Jérôme
> ----- Original Message -----
> From: "Miguel R. Luaces" <miguelrluaces at gmail.com>
> To: <proj at lists.maptools.org>
> Sent: Tuesday, May 26, 2009 6:03 PM
> Subject: [Proj] Coordinate change transforming to EPSG:4326
>
>
> > Dear all,
> >
> > I am using proj.4 as part of PostGIS. Version 1.3.1 of postgis included
> > PRO
> > Rel. 4.5.0, whereas version 1.36 includes PROJ Rel. 4.6.1
> >
> > When I transform a coordinate from EPSG:23209 to EPSG:4326 I get the
> > following results.
> >
> > In Postgis 1.3.1 (PROJ.4 Rel. 4.5.0):
> >
> > "POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
> > 43.3657910268222)"
> >
> > In Postgis 1.3.6 (PROJ Rel. 4.6.1):
> >
> > "POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
> > 43.3666118995462)"
> >
> > The second coordinate of the transformation to 4326 changes by 0.004
> > degrees
> > (approx).
> >
> > If I use cs2cs from command line (version proj446_win32), I get:
> >
> > -8.38839300     43.36661190
> >
> > Why do I get a different result in postgis 1.3.1 and in postgis 1.3.6?
> >
> > Why do I get the same result in PROJ4 4.4.6?
> >
> > I do not understand. I hope anybody can help me.
> >
> > Best regards,
> >  Miguel
> >
>
>
>
> --------------------------------------------------------------------------------
>
>
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20090528/9aa387c2/attachment.html>

From jerome at georezo.net  Thu May 28 10:37:10 2009
From: jerome at georezo.net (=?iso-8859-1?Q?Cuinet_J=E9r=F4me?=)
Date: Thu, 28 May 2009 19:37:10 +0200
Subject: [Proj] Coordinate change transforming to EPSG:4326
In-Reply-To: <6171aaeb0905280039k31288f8ds618c707eaf78afd4@mail.gmail.com>
References: <6171aaeb0905260903q5b33c901l249a0f2b21f91d07@mail.gmail.com><2553C9A96E104782A4078F8CB8351E3D@JCPORTABLE>
	<6171aaeb0905280039k31288f8ds618c707eaf78afd4@mail.gmail.com>
Message-ID: <6B90264F159A4688911EA14FF4C81C02@JCPORTABLE>

23029, it's better :D, the understanding name is ED50 / UTM zone 29N

And when you say ED50 and WGS84, I will answer datum shift. Datum shift has 
a trac ticket http://trac.osgeo.org/proj/ticket/32 and for extrem west 
europa the CoordinateTransformation EPSG code is 1145.

But the shift only on latitude coordinate is weird. Also, as you have the 
same results with Proj 4.4.6 and Proj 4.6.1, and a various result with Proj 
4.6.1 the problem should be with PostGIS !

Have you tried another conversion software in order to compare these results 
?

----- Original Message ----- 
From: "Miguel R. Luaces" <miguelrluaces at gmail.com>
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Sent: Thursday, May 28, 2009 9:39 AM
Subject: Re: [Proj] Coordinate change transforming to EPSG:4326


Dear Jérôme,

sorry, I meant EPSG:23029

Best regards,
  Miguel

On Wed, May 27, 2009 at 8:13 PM, Cuinet Jérôme <jerome at georezo.net> wrote:

> I have snooped EPSG:23209 definition and I haven't found any definition.
>
> What is this coordinate system ?
>
>
>
> Jérôme
> ----- Original Message -----
> From: "Miguel R. Luaces" <miguelrluaces at gmail.com>
> To: <proj at lists.maptools.org>
> Sent: Tuesday, May 26, 2009 6:03 PM
> Subject: [Proj] Coordinate change transforming to EPSG:4326
>
>
> > Dear all,
> >
> > I am using proj.4 as part of PostGIS. Version 1.3.1 of postgis included
> > PRO
> > Rel. 4.5.0, whereas version 1.36 includes PROJ Rel. 4.6.1
> >
> > When I transform a coordinate from EPSG:23209 to EPSG:4326 I get the
> > following results.
> >
> > In Postgis 1.3.1 (PROJ.4 Rel. 4.5.0):
> >
> > "POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
> > 43.3657910268222)"
> >
> > In Postgis 1.3.6 (PROJ Rel. 4.6.1):
> >
> > "POINT(549556.009066526 4801796.3531214)";"POINT(-8.38839299999999
> > 43.3666118995462)"
> >
> > The second coordinate of the transformation to 4326 changes by 0.004
> > degrees
> > (approx).
> >
> > If I use cs2cs from command line (version proj446_win32), I get:
> >
> > -8.38839300     43.36661190
> >
> > Why do I get a different result in postgis 1.3.1 and in postgis 1.3.6?
> >
> > Why do I get the same result in PROJ4 4.4.6?
> >
> > I do not understand. I hope anybody can help me.
> >
> > Best regards,
> >  Miguel
> >
>
>
>
> --------------------------------------------------------------------------------
>
>
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



--------------------------------------------------------------------------------


> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj 



From geraldi.evenden at gmail.com  Fri May 29 19:54:18 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Fri, 29 May 2009 22:54:18 -0400
Subject: [Proj] cs2cs the fast way
Message-ID: <200905292254.18749.geraldi.evenden@gmail.com>

I resurrected the Chebyshev code, cleaned out some error and built a quickie 
prototype to show the fast way to do datum conversions for large data sets.  
I did not do a true datum conversion but merely converting x-y from one 
ellipsoid to another---more on this later.  The method is outlined in the 
scaffold program below:

#include "projects.h"
#include <stdio.h>
#include <stdlib.h>
/* a structure to transport the proj constants through to the
 * func procedure 
 */
typedef struct {
	PROJ *P1, *P2;
} PP;
static PP Ps;
/* procedure called by the Chebychev routine in generating
 * coefficients.
 */
	PROJ_ANY
func(PROJ_ANY arg, PP *P) {
	PROJ_ANY v;
/* NOTE: here we use the "old" calls denigrated by the infamous email some 
time ago. Of course using the "modern call" suggested would have been a 
coding nightmare */
	v.xy = proj_fwd(proj_inv(arg.xy, P->P1), P->P2);  <<---- NOTE this line.
	v.xy.x -= arg.xy.x; // return correction
	v.xy.y -= arg.xy.y;
	return v;
}
/* this binds it all together */
int main(int argc, char **argv) {
	PROJ_UV a={-300000.,4000000.}, b={300000.,4500000.}, resid;
	PROJ_Tseries *t;
	double r=0.001;

/* open up a projection constants for the Clark '66 ellipsoid and
 * the WGS84 ellipsoid */
	if (((Ps.P1 = proj_initstr("proj=tmerc ellps=clrk66 lon_0=0")) == NULL) ||
		((Ps.P2 = proj_initstr("proj=tmerc ellps=wgs84 lon_0=0")) == NULL)) {
		fprintf(stderr, "failed to open projections\n");
		exit(1);
	}
/*  call there coefficient generator with the data range (a, b in meters)
 *  r= desired precision, residual precision, function from above and
 *  projection constants, maximum coefficient array sizes, and "0" for
 *  Chebychev coefficients (rather than polynomial) */
	if ((t = proj_mk_cheby(a, b, r, &resid, func, &Ps, 14, 14, 0)) == NULL) {
		fprintf(stderr, "failed to open approximation\n");
		exit(1);
	}
/* print out max error and coefficient arrays */
	printf("resid: %g %g\n", resid.u, resid.v);
	proj_prnt_tseries(t, stdout, "%.4e");
}

The results of the above are:

resid: 0.000429018 0.000316773
u: 4
1 3 -1.5140e+01 -4.2727e-01 -1.9885e-03
3 1 2.2328e-03
v: 3
0 4 8.2507e+02 1.0405e+01 -5.3504e-01 -1.6595e-03
2 2 -2.5693e-01 -2.3924e-03

Those coefficients are all that have to be evaluated in doing the ellipsoid 
recalculation.

The transform error is kept under a meter and I would think that evaluating 
the above coefficients might be a bit faster than churning through tmerc 
twice.

Again, note the line emphasized in the "func" procedure.  If we are doing a 
true datum shift with a function prototype:

PROJ_LP datum_shift(PROJ_LP, void *Pconst);

the line would look something like:

v.xy = proj_fwd(
                 datum_shift(
                          proj_inv(arg.xy, P->P1),    P->Pconst),    P->P2);

The datum shift may add a few coefficients but we do not have to evaluated a 
possibly complex datum routine.

Obviously, this is not yet ready for prime time.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ndzinn at comcast.net  Sat May 30 12:11:38 2009
From: ndzinn at comcast.net (Noel Zinn)
Date: Sat, 30 May 2009 14:11:38 -0500
Subject: [Proj] cs2cs the fast way
In-Reply-To: <200905292254.18749.geraldi.evenden@gmail.com>
References: <200905292254.18749.geraldi.evenden@gmail.com>
Message-ID: <E4EEC81EF9654E7FAA13D72D5BE561B6@PowerSpec>

Gerald, I agree.  You were right to abandon geodesy in favor of cartography.
-Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
Sent: Friday, May 29, 2009 9:54 PM
To: PROJ.4 and general Projections Discussions
Subject: [Proj] cs2cs the fast way

I resurrected the Chebyshev code, cleaned out some error and built a quickie

prototype to show the fast way to do datum conversions for large data sets.

I did not do a true datum conversion but merely converting x-y from one 
ellipsoid to another---more on this later.  The method is outlined in the 
scaffold program below:

#include "projects.h"
#include <stdio.h>
#include <stdlib.h>
/* a structure to transport the proj constants through to the
 * func procedure 
 */
typedef struct {
	PROJ *P1, *P2;
} PP;
static PP Ps;
/* procedure called by the Chebychev routine in generating
 * coefficients.
 */
	PROJ_ANY
func(PROJ_ANY arg, PP *P) {
	PROJ_ANY v;
/* NOTE: here we use the "old" calls denigrated by the infamous email some 
time ago. Of course using the "modern call" suggested would have been a 
coding nightmare */
	v.xy = proj_fwd(proj_inv(arg.xy, P->P1), P->P2);  <<---- NOTE this
line.
	v.xy.x -= arg.xy.x; // return correction
	v.xy.y -= arg.xy.y;
	return v;
}
/* this binds it all together */
int main(int argc, char **argv) {
	PROJ_UV a={-300000.,4000000.}, b={300000.,4500000.}, resid;
	PROJ_Tseries *t;
	double r=0.001;

/* open up a projection constants for the Clark '66 ellipsoid and
 * the WGS84 ellipsoid */
	if (((Ps.P1 = proj_initstr("proj=tmerc ellps=clrk66 lon_0=0")) ==
NULL) ||
		((Ps.P2 = proj_initstr("proj=tmerc ellps=wgs84 lon_0=0")) ==
NULL)) {
		fprintf(stderr, "failed to open projections\n");
		exit(1);
	}
/*  call there coefficient generator with the data range (a, b in meters)
 *  r= desired precision, residual precision, function from above and
 *  projection constants, maximum coefficient array sizes, and "0" for
 *  Chebychev coefficients (rather than polynomial) */
	if ((t = proj_mk_cheby(a, b, r, &resid, func, &Ps, 14, 14, 0)) ==
NULL) {
		fprintf(stderr, "failed to open approximation\n");
		exit(1);
	}
/* print out max error and coefficient arrays */
	printf("resid: %g %g\n", resid.u, resid.v);
	proj_prnt_tseries(t, stdout, "%.4e");
}

The results of the above are:

resid: 0.000429018 0.000316773
u: 4
1 3 -1.5140e+01 -4.2727e-01 -1.9885e-03
3 1 2.2328e-03
v: 3
0 4 8.2507e+02 1.0405e+01 -5.3504e-01 -1.6595e-03
2 2 -2.5693e-01 -2.3924e-03

Those coefficients are all that have to be evaluated in doing the ellipsoid 
recalculation.

The transform error is kept under a meter and I would think that evaluating 
the above coefficients might be a bit faster than churning through tmerc 
twice.

Again, note the line emphasized in the "func" procedure.  If we are doing a 
true datum shift with a function prototype:

PROJ_LP datum_shift(PROJ_LP, void *Pconst);

the line would look something like:

v.xy = proj_fwd(
                 datum_shift(
                          proj_inv(arg.xy, P->P1),    P->Pconst),    P->P2);

The datum shift may add a few coefficients but we do not have to evaluated a

possibly complex datum routine.

Obviously, this is not yet ready for prime time.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From geraldi.evenden at gmail.com  Sat May 30 12:56:34 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sat, 30 May 2009 15:56:34 -0400
Subject: [Proj] cs2cs the fast way
In-Reply-To: <E4EEC81EF9654E7FAA13D72D5BE561B6@PowerSpec>
References: <200905292254.18749.geraldi.evenden@gmail.com>
	<E4EEC81EF9654E7FAA13D72D5BE561B6@PowerSpec>
Message-ID: <200905301556.34972.geraldi.evenden@gmail.com>

On Saturday 30 May 2009 3:11:38 pm Noel Zinn wrote:
> Gerald, I agree.  You were right to abandon geodesy in favor of
> cartography. -Noel

I'm sorry, I do not understand?  What is or was abandoned where?

> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
> Sent: Friday, May 29, 2009 9:54 PM
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] cs2cs the fast way
>
> I resurrected the Chebyshev code, cleaned out some error and built a
> quickie
	...

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ndzinn at comcast.net  Sat May 30 13:34:41 2009
From: ndzinn at comcast.net (Noel Zinn)
Date: Sat, 30 May 2009 15:34:41 -0500
Subject: [Proj] cs2cs the fast way
In-Reply-To: <200905301556.34972.geraldi.evenden@gmail.com>
References: <200905292254.18749.geraldi.evenden@gmail.com><E4EEC81EF9654E7FAA13D72D5BE561B6@PowerSpec>
	<200905301556.34972.geraldi.evenden@gmail.com>
Message-ID: <FD1A13C8FDCE41A3B67624AA8064F031@PowerSpec>

Gerald, you've railed against proj4 for conflating geodesy (datum shifts)
with cartography (map projections), but you've done that yourself with this
Chebyshev code, x/y (one ellipsoid) => x/y (different ellipsoid).  Why?
Just because it's computationally faster?  Have you analyzed the effect of
your polynomial on the properties of the map projections involved,
conformality, for example?  Shouldn't you?  -Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
Sent: Saturday, May 30, 2009 2:57 PM
To: proj at lists.maptools.org
Subject: Re: [Proj] cs2cs the fast way

On Saturday 30 May 2009 3:11:38 pm Noel Zinn wrote:
> Gerald, I agree.  You were right to abandon geodesy in favor of
> cartography. -Noel

I'm sorry, I do not understand?  What is or was abandoned where?

> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
> Sent: Friday, May 29, 2009 9:54 PM
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] cs2cs the fast way
>
> I resurrected the Chebyshev code, cleaned out some error and built a
> quickie
	...

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From support.mn at elisanet.fi  Sat May 30 14:25:52 2009
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sun, 31 May 2009 00:25:52 +0300 (EEST)
Subject: [Proj] cs2cs the fast way
Message-ID: <28269971.4457541243718753805.JavaMail.support.mn@elisanet.fi>

"Gerald I. Evenden" [geraldi.evenden at gmail.com] kirjoitti: 
> The datum shift may add a few coefficients but we do not have to evaluated a 
> possibly complex datum routine.
> 
> Obviously, this is not yet ready for prime time.
> 

Ok. If the results are exactly (to adjustable degree) the same and you can
do it faster, then you have really improved something.

BTW: I am sure that there must be several ways to make routines faster for
example by moving calculations to the initialization phase. Since the current
computers have huge fast memories that might be a nice resource to be used
to gain speed (using tables to speed up for example).

Yes, there is always need for speed. That makes everything run smoother.

Janne. / MNS Support



From geraldi.evenden at gmail.com  Sat May 30 15:08:00 2009
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sat, 30 May 2009 18:08:00 -0400
Subject: [Proj] cs2cs the fast way
In-Reply-To: <28269971.4457541243718753805.JavaMail.support.mn@elisanet.fi>
References: <28269971.4457541243718753805.JavaMail.support.mn@elisanet.fi>
Message-ID: <200905301808.00403.geraldi.evenden@gmail.com>

On Saturday 30 May 2009 5:25:52 pm support.mn at elisanet.fi wrote:
> "Gerald I. Evenden" [geraldi.evenden at gmail.com] kirjoitti:
> > The datum shift may add a few coefficients but we do not have to
> > evaluated a possibly complex datum routine.
> >
> > Obviously, this is not yet ready for prime time.
>
> Ok. If the results are exactly (to adjustable degree) the same and you can
> do it faster, then you have really improved something.
>
> BTW: I am sure that there must be several ways to make routines faster for
> example by moving calculations to the initialization phase. Since the
> current computers have huge fast memories that might be a nice resource to
> be used to gain speed (using tables to speed up for example).
>
> Yes, there is always need for speed. That makes everything run smoother.
>
> Janne. / MNS Support

There is nothing new with this Chebychev stuff.  Back in the '80s proj 
generated these Chebychev files for use in the program system called MAPGEN.  
Because MAPGEN only made large scale maps (down to 1:250,000) in the mid 
latitudes this system worked fine.  Also, because we were working on mini 
computers where 1Mb was a big thing, the graphic programs did not have to 
have all the projection software aboard---only the routine to evaluate the 
the two polynomials.  Speed and size of the software were both 
considerations.

As for more ancient history: circa the mid 60's there was a popular routine 
for doing Transverse Mercator.  The interesting bit was the use of bivariate 
approximating polynomials.  The region was divided into about several zones 
in the N-S direction with a set of polynomials for each segment.  I do recall 
if I ever knew where this version came from but I never saw it again.  Of 
course this routine was hard-wired for Clarke '66.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


