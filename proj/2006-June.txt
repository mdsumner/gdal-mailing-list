From gerald.evenden at verizon.net  Sun Jun  4 12:24:07 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 04 Jun 2006 15:24:07 -0400
Subject: [Proj] Revised DMS output formatter
Message-ID: <200606041524.07814.gerald.evenden@verizon.net>

Because the old DMS output routine was somewhat limited in capability and
was *not* thread proof, a new output format procedure is available that
will replace the old one in future lproj releases.

The prototype is:

int proj_rad2dms(char *field, size_t n, const char *format, double val,
    const char *sign)

where:
	'field' is a character array to hold the formated string of 'val'
        'n' is the size of 'field'
        'format' is the C format string
        'val' is the double precision radian value to be formated
	'sign' is a two character string for suffix sign where 'sign[0]' is
		used for positive sign of 'val' and 'sign[1]' is used for
		negative 'val'.  A %c specification in format designates
		that the suffix form is to be used, otherwise normal '-' prefix
		sign will be used.

The procedure is thread proof and requires C99 level compiler/libraries.

The following is the output of a test procedure that demonstrates the
usage of 'proj_rad2dms:

classic lproj DMS output format
test format:[%dd%d'%.3f"] sign[]

     input:  33 3 7
return:  11: <33d3'7.000">
     input:  -3 7 45.555555
return:  11: <-3d7'45.556">
     input:  0 0 77.3333333
return:  11: <0d1'17.333">
     input:  0 0 -22.5
return:  11: <-0d0'22.500">
------------------------
Classic DMS output with sign suffix
test format:[%d°%02d'%07.4f"%c] sign[NS]

     input:  33 3 7
return:  16: <33°03'07.0000"N>
     input:  -3 7 45.555555
return:  15: <3°07'45.5556"S>
     input:  0 0 77.3333333
return:  15: <0°01'17.3333"N>
     input:  0 0 -22.5
return:  15: <0°00'22.5000"S>
------------------------
DM output with suffix
test format:[%d°%07.4f'%c] sign[EW]

     input:  33 3 7
return:  13: <33°03.1167'E>
     input:  -3 7 45.555555
return:  12: <3°07.7593'W>
     input:  0 0 77.3333333
return:  12: <0°01.2889'E>
     input:  0 0 -22.5
return:  12: <0°00.3750'W>
------------------------
GRASS style (at least in the old days(?))
test format:[%d:%d:%7.4f] sign[EW]

     input:  33 3 7
return:  12: <33:3: 7.0000>
     input:  -3 7 45.555555
return:  11: <-3:7:45.5556>
     input:  0 0 77.3333333
return:  11: <0:1:17.3333>
     input:  0 0 -22.5
return:  11: <-0:0:22.5000>
------------------------
simple degree output
test format:[%g] sign[]

     input:  33 3 7
return:   7: <33.0519>
     input:  -3 7 45.555555
return:   8: <-3.12932>
     input:  0 0 77.3333333
return:   9: <0.0214815>
     input:  0 0 -22.5
return:   8: <-0.00625>

For anyone wanting a copy of the procedure for testing or application
in an existing application, I will be glad to email a tgz file containing:
proj_rad2dms.c, test.c, rad2dms.h, Makefile, and test1 script.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary



From sthnew at gmail.com  Sun Jun  4 17:10:44 2006
From: sthnew at gmail.com (sthnew)
Date: Sun, 4 Jun 2006 20:10:44 -0400
Subject: [Proj] difference between EPSG:4326 and Plate Carree?
Message-ID: <42f588ca0606041710y13a3c123xf8a288df69e16cbe@mail.gmail.com>

 Hi all,

I just subscribed the mailing list and am relatively new to projection
terms...

To my knowledge, EPSG:4326 is generally "unprojected": lat/long as X/Y
coordinates. So:

1. what's the difference between the map in EPSG4326 and the one in
Equidistant Cylindrical projection (+proj=eqc)?

2. Plate Carree is only one type within equiditant cylindrical
projection,right? How to tell their difference?

Thanks so much!

Ying
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060604/2c19e874/attachment.html>

From hamish_nospam at yahoo.com  Sun Jun  4 18:01:22 2006
From: hamish_nospam at yahoo.com (Hamish)
Date: Mon, 5 Jun 2006 13:01:22 +1200
Subject: [Proj] Revised DMS output formatter
In-Reply-To: <200606041524.07814.gerald.evenden@verizon.net>
References: <200606041524.07814.gerald.evenden@verizon.net>
Message-ID: <20060605130122.3a1fef7f.hamish_nospam@yahoo.com>

Gerald I. Evenden wrote:

> GRASS style (at least in the old days(?))
> test format:[%d:%d:%7.4f] sign[EW]


It is still the same,

http://freegis.org/cgi-bin/viewcvs.cgi/grass6/lib/gis/ll_format.c?rev=HEAD&content-type=text/vnd.viewcvs-markup



Hamish


From surgpub at telkomsa.net  Mon Jun  5 15:00:25 2006
From: surgpub at telkomsa.net (Paul Surgeon)
Date: Tue, 6 Jun 2006 00:00:25 +0200
Subject: [Proj] MapInfo coordsys to proj.4 syntax
Message-ID: <200606060000.26055.surgpub@telkomsa.net>

I'm trying to convert a MapInfo coordinate system into something that proj.4 
understands but my high school maths doesn't seem to be helping me much.

The TAB files look like this :
Type "RASTER"
(830000.00,2050000.00) (0,0) Label "Pt 1",
(840000.00,2050000.00) (2000,0) Label "Pt 2",
(840000.00,2040000.00) (2000,2000) Label "Pt 3",
(830000.00,2040000.00) (0,2000) Label "Pt 4"
CoordSys Earth Projection 
3,1002,7,0,46.8,45.898918964419,47.696014502038,600000,2200000
Units "m"

I've read some MapInfo docs and managed to break it down to :
Name of projection = CoordSys Earth Projection 3
Projection type = 3 = Lambert Conformal Conic
Datum = 1002 = NTF (Paris)
Ellipsoid = Modified Clark 1880
Units = 7 = meters
Origin lon = 0 (central meridian)
Origin lat = 46.8
Standard parallel 1 = 45.898918964419
Standard parallel 2 = 47.696014502038
False Easting = 600000
False Northing = 2200000

I tried to use one of the standard NTF (Paris) EPSG definitions as a base to 
work from but that doesn't seem to work.

My attempt :
+proj=lcc +lon_0=0.0 +lat_0=46.8 +lat_1=45.898918964419 +lat_2=47.696014502038 
+k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 
+towgs84=-168,-60,320,0,0,0,0 +pm=greenwich +units=m +no_defs

I assigned this srs definition with gdal_translate and then used gdalwarp to 
warp the raster into a standard UTM zone.
However I must be really far out with the proj.4 syntax because when I try to 
lay the resulting raster over another it's so far out that I can't identify 
anything common between the two images.

Any ideas where I'm going wrong?
Paul


From AnthonyD at rocketmail.com  Mon Jun  5 17:00:57 2006
From: AnthonyD at rocketmail.com (Anthony Dunk)
Date: Mon, 5 Jun 2006 17:00:57 -0700 (PDT)
Subject: [Proj] MapInfo coordsys to proj.4 syntax
In-Reply-To: <200606060000.26055.surgpub@telkomsa.net>
Message-ID: <20060606000057.74202.qmail@web50814.mail.yahoo.com>

Hi Paul,

NTF uses a prime meridian of 2.337229166667 (Paris), not Greenwich.

Below is the correct PROJ string for converting from Lat/Lon WGS84 to
projected NTF (French Lambert II Centre).

cs2cs +proj=latlong +a=6378137.0 +rf=298.257223563 +towgs84=0,0,0 +to
+proj=lcc +lon_0=2.337229166667 +lat_0=46.8 +lat_1=45.898918964419
+lat_2=47.696014502038 +x_0=600000 +y_0=200000 +a=6378249.2
+rf=293.4660213 +towgs84=-168,-60,320,0,0,0,0 +units=m +no_defs 

Using this an input point of 2.33333E, 48.8667N is projected to
599766.90 mE, 429819.60 mN. This agrees with MapInfo's projection of
the same point.

Anthony.

--- Paul Surgeon <surgpub at telkomsa.net> wrote:

> I'm trying to convert a MapInfo coordinate system into something that
> proj.4 
> understands but my high school maths doesn't seem to be helping me
> much.
> 
> The TAB files look like this :
> Type "RASTER"
> (830000.00,2050000.00) (0,0) Label "Pt 1",
> (840000.00,2050000.00) (2000,0) Label "Pt 2",
> (840000.00,2040000.00) (2000,2000) Label "Pt 3",
> (830000.00,2040000.00) (0,2000) Label "Pt 4"
> CoordSys Earth Projection 
> 3,1002,7,0,46.8,45.898918964419,47.696014502038,600000,2200000
> Units "m"
> 
> I've read some MapInfo docs and managed to break it down to :
> Name of projection = CoordSys Earth Projection 3
> Projection type = 3 = Lambert Conformal Conic
> Datum = 1002 = NTF (Paris)
> Ellipsoid = Modified Clark 1880
> Units = 7 = meters
> Origin lon = 0 (central meridian)
> Origin lat = 46.8
> Standard parallel 1 = 45.898918964419
> Standard parallel 2 = 47.696014502038
> False Easting = 600000
> False Northing = 2200000
> 
> I tried to use one of the standard NTF (Paris) EPSG definitions as a
> base to 
> work from but that doesn't seem to work.
> 
> My attempt :
> +proj=lcc +lon_0=0.0 +lat_0=46.8 +lat_1=45.898918964419
> +lat_2=47.696014502038 
> +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 
> +towgs84=-168,-60,320,0,0,0,0 +pm=greenwich +units=m +no_defs
> 
> I assigned this srs definition with gdal_translate and then used
> gdalwarp to 
> warp the raster into a standard UTM zone.
> However I must be really far out with the proj.4 syntax because when
> I try to 
> lay the resulting raster over another it's so far out that I can't
> identify 
> anything common between the two images.
> 
> Any ideas where I'm going wrong?
> Paul
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 




__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 


From jalopcar at gmail.com  Mon Jun  5 18:00:07 2006
From: jalopcar at gmail.com (Jaime Lopez)
Date: Tue, 6 Jun 2006 03:00:07 +0200
Subject: [Proj] libproj.so.0 problem
Message-ID: <138315cf0606051800s447d01eep48686624cb05f566@mail.gmail.com>

Hi friends,

I have installed GRASS 6.0.2 with linux mandrake 10.0 and proj.4.4.8, but I
got this problem
"Error in startup script: ps.map:error while loading shared libraries:
libproj.so.0: cannot open shared object file: No such file o directory

How can I fix it?

Thanks in advance.

-- 
Jaime Lopez
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060606/77aa93f0/attachment.html>

From surgpub at telkomsa.net  Tue Jun  6 01:04:56 2006
From: surgpub at telkomsa.net (Paul Surgeon)
Date: Tue, 6 Jun 2006 10:04:56 +0200
Subject: [Proj] MapInfo coordsys to proj.4 syntax
In-Reply-To: <20060606000057.74202.qmail@web50814.mail.yahoo.com>
References: <20060606000057.74202.qmail@web50814.mail.yahoo.com>
Message-ID: <200606061004.56965.surgpub@telkomsa.net>

That helped a bit Anthony although it's not quite there yet.

I changed the false northing from 200000 to 2200000 because the MapInfo user 
created their own coordsys definition and didn't use a stock NTF one. Using 
the standard NTF false northing of 200000 shifts the data about 20 degrees 
too far to the North.

I tried :
gdal_translate -a_srs "+proj=lcc +lon_0=2.337229166667 +lat_0=46.8 
+lat_1=45.898918964419 +lat_2=47.696014502038 +x_0=600000 +y_0=2200000 
+a=6378249.2 +rf=293.4660213 +towgs84=-168,-60,320,0,0,0,0 +units=m +no_defs" 
temp1.tif temp2.tif

Now the raster data is only about 480 meters too far to the South and 48 
meters too far to the East (rough estimate).
So something still isn't quite right.

Paul


On Tuesday 06 June 2006 02:00, Anthony Dunk wrote:
> Hi Paul,
>
> NTF uses a prime meridian of 2.337229166667 (Paris), not Greenwich.
>
> Below is the correct PROJ string for converting from Lat/Lon WGS84 to
> projected NTF (French Lambert II Centre).
>
> cs2cs +proj=latlong +a=6378137.0 +rf=298.257223563 +towgs84=0,0,0 +to
> +proj=lcc +lon_0=2.337229166667 +lat_0=46.8 +lat_1=45.898918964419
> +lat_2=47.696014502038 +x_0=600000 +y_0=200000 +a=6378249.2
> +rf=293.4660213 +towgs84=-168,-60,320,0,0,0,0 +units=m +no_defs
>
> Using this an input point of 2.33333E, 48.8667N is projected to
> 599766.90 mE, 429819.60 mN. This agrees with MapInfo's projection of
> the same point.
>
> Anthony.


From hamish_nospam at yahoo.com  Tue Jun  6 03:07:20 2006
From: hamish_nospam at yahoo.com (Hamish)
Date: Tue, 6 Jun 2006 22:07:20 +1200
Subject: [Proj] libproj.so.0 problem
In-Reply-To: <138315cf0606051800s447d01eep48686624cb05f566@mail.gmail.com>
References: <138315cf0606051800s447d01eep48686624cb05f566@mail.gmail.com>
Message-ID: <20060606220720.0ff9af22.hamish_nospam@yahoo.com>

"Jaime Lopez" <jalopcar at gmail.com> wrote:

> I have installed GRASS 6.0.2 with linux mandrake 10.0 and proj.4.4.8,
> but I got this problem
> "Error in startup script: ps.map:error while loading shared libraries:
> libproj.so.0: cannot open shared object file: No such file o directory


Hi,

either:

add /usr/local/lib to /etc/ld.so.conf and run ldconfig

or 

locate libproj.so
ln -s /where/it/was/libproj.so /usr/local/lib/libproj.so.0

if /usr/local/ is in /etc/ld.so.conf or libproj.so.0 is in /usr/lib/
then I don't know.

For futher help try the grass user-list as I don't think this one is
proj's fault.



Hamish


From jjpastormg at telefonica.net  Fri Jun  2 23:46:06 2006
From: jjpastormg at telefonica.net (jjpastor)
Date: Sat, 3 Jun 2006 08:46:06 +0200
Subject: [Proj] Snyder ISEA
Message-ID: <000501c686d9$63dd98d0$2101a8c0@portatil>

Hi Paul

I've downloaded Snyder's personal software and since you offer also your operational notes about it I'd appreciate you to tell me how to get a copy of them.

Many thanks

Juan Jose Pastor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060603/6024728e/attachment.html>

From bob.basques at ci.stpaul.mn.us  Tue Jun  6 08:33:36 2006
From: bob.basques at ci.stpaul.mn.us (Bob Basques)
Date: Tue, 06 Jun 2006 10:33:36 -0500
Subject: [Proj] Method to use for getting a set of projections added to the
 EPSG code list.
Message-ID: <4485A050.5030406@ci.stpaul.mn.us>

All,

I was forwarded to this list because of a need to add in some 
Projections to the EPSG list.

I would like to have added the seperate County Projections for the State 
of Minnesota.

What procedures need to be followed to get something like this moving ahead?

Thanks

bobb





From warmerdam at pobox.com  Tue Jun  6 09:24:11 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 06 Jun 2006 12:24:11 -0400
Subject: [Proj] Method to use for getting a set of projections added to
	the EPSG code list.
In-Reply-To: <4485A050.5030406@ci.stpaul.mn.us>
References: <4485A050.5030406@ci.stpaul.mn.us>
Message-ID: <4485AC2B.3010805@pobox.com>

Bob Basques wrote:
> All,
> 
> I was forwarded to this list because of a need to add in some 
> Projections to the EPSG list.
> 
> I would like to have added the seperate County Projections for the State 
> of Minnesota.
> 
> What procedures need to be followed to get something like this moving 
> ahead?

Bob,

You can extend your local proj.4 'epsg' translation file as you wish.
However, the original EPSG database is not under our control so if you
want the county projections added to the core EPSG database you will need
to contact the OGP Surveying and Positioning Committee.

   http://www.epsg.org/

I am not keen on adding non-EPSG approved codes into the PROJ.4 epsg
translation file.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGF, http://osgeo.org



From Tom.Kralidis at ec.gc.ca  Tue Jun  6 09:26:23 2006
From: Tom.Kralidis at ec.gc.ca (Kralidis,Tom [Burlington])
Date: Tue, 6 Jun 2006 12:26:23 -0400
Subject: [Proj] Method to use for getting a set of projections added tothe
	EPSG code list.
Message-ID: <2576812186CDD411BF1500508B6DCE950E91114F@ecnwri1.ontario.int.ec.gc.ca>


> 
> Bob Basques wrote:
> > All,
> > 
> > I was forwarded to this list because of a need to add in some
> > Projections to the EPSG list.
> > 
> > I would like to have added the seperate County Projections for the 
> > State
> > of Minnesota.
> > 
> > What procedures need to be followed to get something like 
> this moving
> > ahead?
> 
> Bob,
> 
> You can extend your local proj.4 'epsg' translation file as 
> you wish. However, the original EPSG database is not under 
> our control so if you want the county projections added to 
> the core EPSG database you will need to contact the OGP 
> Surveying and Positioning Committee.
> 
>    http://www.epsg.org/
> 
> I am not keen on adding non-EPSG approved codes into the 
> PROJ.4 epsg translation file.
> 

Bob,

You might also want to chat with CubeWerx (http://www.cubewerx.com/),
who holds the 42xxx slotsof EPSG; they may be an easier and more
expedient approach.

..Tom



From AnthonyD at rocketmail.com  Tue Jun  6 17:15:37 2006
From: AnthonyD at rocketmail.com (Anthony Dunk)
Date: Tue, 6 Jun 2006 17:15:37 -0700 (PDT)
Subject: [Proj] MapInfo coordsys to proj.4 syntax
In-Reply-To: <200606061004.56965.surgpub@telkomsa.net>
Message-ID: <20060607001537.30792.qmail@web50803.mail.yahoo.com>

Hi Paul,

The MapInfo "French Lambert II Carto\p27582" has a false easting of
600000 and a false northing of 2200000, so that may be the one your
user is using.

Your parameters look correct, so I don't know why you're getting
coordinates which are so far out.

When I project my test point (2.33333E, 48.8667N) using my own program
(which uses PROJ) I get 599766.9 mE, 2429819.6 mN. I also tried this in
MapInfo and I get pretty close to the same coordinates (599765.59 mE,
2429819.22 mN).

I suspect the problem is that the UTM and Lambert Conformal Conic
projections distort your raster image differently. Also check what UTM
zone you're using. I think you should be using UTM Zone 31 Northern
Hemisphere.

Cheers,
Anthony.


--- Paul Surgeon <surgpub at telkomsa.net> wrote:

> That helped a bit Anthony although it's not quite there yet.
> 
> I changed the false northing from 200000 to 2200000 because the
> MapInfo user 
> created their own coordsys definition and didn't use a stock NTF one.
> Using 
> the standard NTF false northing of 200000 shifts the data about 20
> degrees 
> too far to the North.
> 
> I tried :
> gdal_translate -a_srs "+proj=lcc +lon_0=2.337229166667 +lat_0=46.8 
> +lat_1=45.898918964419 +lat_2=47.696014502038 +x_0=600000
> +y_0=2200000 
> +a=6378249.2 +rf=293.4660213 +towgs84=-168,-60,320,0,0,0,0 +units=m
> +no_defs" 
> temp1.tif temp2.tif
> 
> Now the raster data is only about 480 meters too far to the South and
> 48 
> meters too far to the East (rough estimate).
> So something still isn't quite right.
> 
> Paul
> 
> 
> On Tuesday 06 June 2006 02:00, Anthony Dunk wrote:
> > Hi Paul,
> >
> > NTF uses a prime meridian of 2.337229166667 (Paris), not Greenwich.
> >
> > Below is the correct PROJ string for converting from Lat/Lon WGS84
> to
> > projected NTF (French Lambert II Centre).
> >
> > cs2cs +proj=latlong +a=6378137.0 +rf=298.257223563 +towgs84=0,0,0
> +to
> > +proj=lcc +lon_0=2.337229166667 +lat_0=46.8 +lat_1=45.898918964419
> > +lat_2=47.696014502038 +x_0=600000 +y_0=200000 +a=6378249.2
> > +rf=293.4660213 +towgs84=-168,-60,320,0,0,0,0 +units=m +no_defs
> >
> > Using this an input point of 2.33333E, 48.8667N is projected to
> > 599766.90 mE, 429819.60 mN. This agrees with MapInfo's projection
> of
> > the same point.
> >
> > Anthony.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 




__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 


From martin.vermeer at hut.fi  Tue Jun  6 23:35:35 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Wed, 07 Jun 2006 09:35:35 +0300
Subject: [Proj] Method to use for getting a set of projections added
	to	the EPSG code list.
In-Reply-To: <4485AC2B.3010805@pobox.com>
References: <4485A050.5030406@ci.stpaul.mn.us>  <4485AC2B.3010805@pobox.com>
Message-ID: <1149662135.15798.2.camel@geo9.hut.fi>

On Tue, 2006-06-06 at 12:24 -0400, Frank Warmerdam wrote:
> Bob Basques wrote:
> > All,
> > 
> > I was forwarded to this list because of a need to add in some 
> > Projections to the EPSG list.
> > 
> > I would like to have added the seperate County Projections for the State 
> > of Minnesota.
> > 
> > What procedures need to be followed to get something like this moving 
> > ahead?
> 
> Bob,
> 
> You can extend your local proj.4 'epsg' translation file as you wish.
> However, the original EPSG database is not under our control so if you
> want the county projections added to the core EPSG database you will need
> to contact the OGP Surveying and Positioning Committee.
> 
>    http://www.epsg.org/
> 
> I am not keen on adding non-EPSG approved codes into the PROJ.4 epsg
> translation file.

What is the status of the 'world' file under nad? (And why is it under
nad? What is the directory tree logic, if any?)

- Martin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060607/4daa6328/attachment.sig>

From warmerdam at pobox.com  Wed Jun  7 06:47:55 2006
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 07 Jun 2006 09:47:55 -0400
Subject: [Proj] Method to use for getting a set of projections added	to
	the EPSG code list.
In-Reply-To: <1149662135.15798.2.camel@geo9.hut.fi>
References: <4485A050.5030406@ci.stpaul.mn.us> <4485AC2B.3010805@pobox.com>
	<1149662135.15798.2.camel@geo9.hut.fi>
Message-ID: <4486D90B.3090806@pobox.com>

Martin Vermeer wrote:
> What is the status of the 'world' file under nad? (And why is it under
> nad? What is the directory tree logic, if any?)

Martin,

The world init file was presumably an earlier effort to list common
projections from around the world.  It's origins come from before my time.
I do fix things in it if problems are pointed out to me, but I'm not making
any effort to extend it or promote it.

All the init file stuff is in the nad directory, presumably because originally
the first init files were the ones for the nad83 and nad27 state plane zones.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGF, http://osgeo.org



From jason.askew at gmail.com  Wed Jun  7 13:45:43 2006
From: jason.askew at gmail.com (Jason Askew)
Date: Wed, 7 Jun 2006 15:45:43 -0500
Subject: [Proj] .NET / C# port of proj4
Message-ID: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>

I am 10 hours into a C# / .NET port of proj4.

My current focus is getting one specific function to work, that being
pj_transform from pj_transform.c

I am at the point now that I'm dealing with PJ_GRIDINFO and
pj_apply_gridshift and other such matters.

Kinda of a top down approach, if you will.

This is not my first C to C# conversion but is definately by far the
most challenging.

Anyway, I have questions.  As this will probably be the first post of
many, I'm going to use .NET / C# as the start of all my subjects lines
to keep a common format for this topic going.

Most questions should be about the logic or concepts behind the project.

So, question one:

In file: pj_transform.c

projected_loc is defined as so:

XY         projected_loc;

XY being defined as:

typedef struct { double x, y; }     XY;

buy then later in pj_transform.c, u and v members show up in
pj_transforms.c, like so:

                    projected_loc.u = x[point_offset * i];
                    projected_loc.v = y[point_offset * i];

I must be missing something painfully obvious.  I see the defines
wrapped around the def of the XY struct, i.e.:

#ifndef PJ_LIB__
#define XY projUV
#define LP projUV
#else
typedef struct { double x, y; }     XY;
typedef struct { double lam, phi; } LP;
#endif

but PJ_LIB__ is defined.

Not to mention pj_inv and pj_inv expect the XY for and not the projUV form.

I must be missing something obvious.

Jason


From glynn at gclements.plus.com  Wed Jun  7 16:27:48 2006
From: glynn at gclements.plus.com (Glynn Clements)
Date: Thu, 8 Jun 2006 00:27:48 +0100
Subject: [Proj] .NET / C# port of proj4
In-Reply-To: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>
References: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>
Message-ID: <17543.24820.496888.986556@cerise.gclements.plus.com>


Jason Askew wrote:

> So, question one:
> 
> In file: pj_transform.c
> 
> projected_loc is defined as so:
> 
> XY         projected_loc;
> 
> XY being defined as:
> 
> typedef struct { double x, y; }     XY;

Not in pj_transform.c; see below.

> buy then later in pj_transform.c, u and v members show up in
> pj_transforms.c, like so:
> 
>                     projected_loc.u = x[point_offset * i];
>                     projected_loc.v = y[point_offset * i];
> 
> I must be missing something painfully obvious.  I see the defines
> wrapped around the def of the XY struct, i.e.:
> 
> #ifndef PJ_LIB__
> #define XY projUV
> #define LP projUV
> #else
> typedef struct { double x, y; }     XY;
> typedef struct { double lam, phi; } LP;
> #endif
> 
> but PJ_LIB__ is defined.

It's defined on a file-by-file basis. The PJ_*.c files define it, as
do some of the pj_*.c files, but pj_transform.c doesn't.

> Not to mention pj_inv and pj_inv expect the XY for and not the projUV form.

pj_inv.c defines PJ_LIB__.

-- 
Glynn Clements <glynn at gclements.plus.com>


From jason.askew at gmail.com  Wed Jun  7 16:41:18 2006
From: jason.askew at gmail.com (Jason Askew)
Date: Wed, 7 Jun 2006 16:41:18 -0700
Subject: [Proj] .NET / C# port of proj4
In-Reply-To: <17543.24820.496888.986556@cerise.gclements.plus.com>
References: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>
	<17543.24820.496888.986556@cerise.gclements.plus.com>
Message-ID: <f7caaa290606071641v36b89feu8aea077ed3d603de@mail.gmail.com>

To paraphrase:  So the signature changes but the struct stays the same
at the memory level, so it just works.

Ok, I can deal with that.





On 6/7/06, Glynn Clements <glynn at gclements.plus.com> wrote:
>
> Jason Askew wrote:
>
> > So, question one:
> >
> > In file: pj_transform.c
> >
> > projected_loc is defined as so:
> >
> > XY         projected_loc;
> >
> > XY being defined as:
> >
> > typedef struct { double x, y; }     XY;
>
> Not in pj_transform.c; see below.
>
> > buy then later in pj_transform.c, u and v members show up in
> > pj_transforms.c, like so:
> >
> >                     projected_loc.u = x[point_offset * i];
> >                     projected_loc.v = y[point_offset * i];
> >
> > I must be missing something painfully obvious.  I see the defines
> > wrapped around the def of the XY struct, i.e.:
> >
> > #ifndef PJ_LIB__
> > #define XY projUV
> > #define LP projUV
> > #else
> > typedef struct { double x, y; }     XY;
> > typedef struct { double lam, phi; } LP;
> > #endif
> >
> > but PJ_LIB__ is defined.
>
> It's defined on a file-by-file basis. The PJ_*.c files define it, as
> do some of the pj_*.c files, but pj_transform.c doesn't.
>
> > Not to mention pj_inv and pj_inv expect the XY for and not the projUV form.
>
> pj_inv.c defines PJ_LIB__.
>
> --
> Glynn Clements <glynn at gclements.plus.com>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>


From EMiller at dfg.ca.gov  Wed Jun  7 16:55:09 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Wed, 07 Jun 2006 16:55:09 -0700
Subject: [Proj] .NET / C# port of proj4
Message-ID: <s4870504.082@dfg.ca.gov>

Can't recall if we went over this already, but I wrote a C# wrapper for PROJ.4 that works just fine.  The download address has changed:  http://ftp.dfg.ca.gov/Public/BDB/Tools/proj4/csharp.zip  

I'm currently using it for a projection transform webservice which is working out quite nicely.  Seems like a lot of work to port all that C code to C#.  The macro abuse in PROJ.4 is impossible to replicate in C#.

>>> jason.askew at gmail.com 6/7/2006 1:45:43 PM >>>
I am 10 hours into a C# / .NET port of proj4.

My current focus is getting one specific function to work, that being
pj_transform from pj_transform.c

I am at the point now that I'm dealing with PJ_GRIDINFO and
pj_apply_gridshift and other such matters.

Kinda of a top down approach, if you will.

This is not my first C to C# conversion but is definately by far the
most challenging.

Anyway, I have questions.  As this will probably be the first post of
many, I'm going to use .NET / C# as the start of all my subjects lines
to keep a common format for this topic going.

Most questions should be about the logic or concepts behind the project.

So, question one:

In file: pj_transform.c

projected_loc is defined as so:

XY         projected_loc;

XY being defined as:

typedef struct { double x, y; }     XY;

buy then later in pj_transform.c, u and v members show up in
pj_transforms.c, like so:

                    projected_loc.u = x[point_offset * i];
                    projected_loc.v = y[point_offset * i];

I must be missing something painfully obvious.  I see the defines
wrapped around the def of the XY struct, i.e.:

#ifndef PJ_LIB__
#define XY projUV
#define LP projUV
#else
typedef struct { double x, y; }     XY;
typedef struct { double lam, phi; } LP;
#endif

but PJ_LIB__ is defined.

Not to mention pj_inv and pj_inv expect the XY for and not the projUV form.

I must be missing something obvious.

Jason
_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From gerald.evenden at verizon.net  Wed Jun  7 18:18:48 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 07 Jun 2006 21:18:48 -0400
Subject: [Proj] .NET / C# port of proj4
In-Reply-To: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>
References: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>
Message-ID: <200606072118.48272.gerald.evenden@verizon.net>

On Wednesday 07 June 2006 4:45 pm, Jason Askew wrote:
> I am 10 hours into a C# / .NET port of proj4.
>
> My current focus is getting one specific function to work, that being
> pj_transform from pj_transform.c
>
> I am at the point now that I'm dealing with PJ_GRIDINFO and
> pj_apply_gridshift and other such matters.
>
> Kinda of a top down approach, if you will.
>
> This is not my first C to C# conversion but is definately by far the
> most challenging.
>
> Anyway, I have questions.  As this will probably be the first post of
> many, I'm going to use .NET / C# as the start of all my subjects lines
> to keep a common format for this topic going.
>
> Most questions should be about the logic or concepts behind the project.
>
> So, question one:
>
> In file: pj_transform.c
>
> projected_loc is defined as so:
>
> XY         projected_loc;
>
> XY being defined as:
>
> typedef struct { double x, y; }     XY;
>
> buy then later in pj_transform.c, u and v members show up in
> pj_transforms.c, like so:
>
>                     projected_loc.u = x[point_offset * i];
>                     projected_loc.v = y[point_offset * i];
>
> I must be missing something painfully obvious.  I see the defines
> wrapped around the def of the XY struct, i.e.:
>
> #ifndef PJ_LIB__
> #define XY projUV
> #define LP projUV
> #else
> typedef struct { double x, y; }     XY;
> typedef struct { double lam, phi; } LP;
> #endif
>
> but PJ_LIB__ is defined.
>
> Not to mention pj_inv and pj_inv expect the XY for and not the projUV form.
>
> I must be missing something obvious.
>
> Jason

As the one who started all that, I will take the blame.  In some cases it does 
not matter whether it is geographic or Cartesian data being passed around so 
I used a generic UV name for a reference of material that was identical as 
far as the hardware was concerned.

PROJ_LIB__ (same as old PJ_LIB__) designates that lib_proj.h is being used in 
a projection routine and the the macros defined inside its area are only 
applicable in those routines.

I think PROJ_UV is only used in lproj.c.

Don't worry about it. ;-)

Can't C material be linked to C# software?  If not, pity.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From jason.askew at gmail.com  Thu Jun  8 06:17:28 2006
From: jason.askew at gmail.com (Jason Askew)
Date: Thu, 8 Jun 2006 08:17:28 -0500
Subject: [Proj] .NET / C# port of proj4
In-Reply-To: <200606072118.48272.gerald.evenden@verizon.net>
References: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>
	<200606072118.48272.gerald.evenden@verizon.net>
Message-ID: <f7caaa290606080617r3de0c961o71bac19299d07566@mail.gmail.com>

 C software can most definately be linked into C#.  But that crosses
the mangaed/unmanaged code space, which isn't ideal.

I can think of several advantages, however (and I'm sure someone can
counter-match some disadvantages).

First off, I don't feel bad putting code into c# / .NET becuase it is
fairly portable with the Mono project covering the Unix/Linux side of
things.

The other is the vast simplifications I've encoutered and will
continue to do so, I'm sure.

Like the linked list for paralist and PJ_GRIDINFO...  they're gone,
replaced with very simple storage classes using C# generics.  All the
code to handle those linked list is gone, replaced mainly with a
foreach loop.

And string manipulation has gone from the world of pointers, strcpy,
sprintf to actual human readable code =).

File manipulation is easier.

I digress.

There is another side to this, this one is specific to windows...
I've got a hardware accelerated DirectX GIS viewer prototype working,
along with thin-plate-spline image warping (realtime!).  My end goal
is a real-time hardware acclerated (there's a lot of horsepower in the
GPUs these days) for doing image rectification/georeferencing.

I probably don't need to explain the aspect that Proj4 is filling in
such a piece of software.


On 6/7/06, Gerald I. Evenden <gerald.evenden at verizon.net> wrote:
> On Wednesday 07 June 2006 4:45 pm, Jason Askew wrote:
> > I am 10 hours into a C# / .NET port of proj4.
> >
> > My current focus is getting one specific function to work, that being
> > pj_transform from pj_transform.c
> >
> > I am at the point now that I'm dealing with PJ_GRIDINFO and
> > pj_apply_gridshift and other such matters.
> >
> > Kinda of a top down approach, if you will.
> >
> > This is not my first C to C# conversion but is definately by far the
> > most challenging.
> >
> > Anyway, I have questions.  As this will probably be the first post of
> > many, I'm going to use .NET / C# as the start of all my subjects lines
> > to keep a common format for this topic going.
> >
> > Most questions should be about the logic or concepts behind the project.
> >
> > So, question one:
> >
> > In file: pj_transform.c
> >
> > projected_loc is defined as so:
> >
> > XY         projected_loc;
> >
> > XY being defined as:
> >
> > typedef struct { double x, y; }     XY;
> >
> > buy then later in pj_transform.c, u and v members show up in
> > pj_transforms.c, like so:
> >
> >                     projected_loc.u = x[point_offset * i];
> >                     projected_loc.v = y[point_offset * i];
> >
> > I must be missing something painfully obvious.  I see the defines
> > wrapped around the def of the XY struct, i.e.:
> >
> > #ifndef PJ_LIB__
> > #define XY projUV
> > #define LP projUV
> > #else
> > typedef struct { double x, y; }     XY;
> > typedef struct { double lam, phi; } LP;
> > #endif
> >
> > but PJ_LIB__ is defined.
> >
> > Not to mention pj_inv and pj_inv expect the XY for and not the projUV form.
> >
> > I must be missing something obvious.
> >
> > Jason
>
> As the one who started all that, I will take the blame.  In some cases it does
> not matter whether it is geographic or Cartesian data being passed around so
> I used a generic UV name for a reference of material that was identical as
> far as the hardware was concerned.
>
> PROJ_LIB__ (same as old PJ_LIB__) designates that lib_proj.h is being used in
> a projection routine and the the macros defined inside its area are only
> applicable in those routines.
>
> I think PROJ_UV is only used in lproj.c.
>
> Don't worry about it. ;-)
>
> Can't C material be linked to C# software?  If not, pity.
> --
> Jerry and the low-riders: Daisy Mae and Joshua
> "Cogito cogito ergo cogito sum"
>    Ambrose Bierce, The Devil's Dictionary
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>


From richard.greenwood at gmail.com  Thu Jun  8 19:29:28 2006
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Thu, 8 Jun 2006 20:29:28 -0600
Subject: [Proj] .NET / C# port of proj4
In-Reply-To: <f7caaa290606080617r3de0c961o71bac19299d07566@mail.gmail.com>
References: <f7caaa290606071345l62d431d5k93805bf22d9be0cb@mail.gmail.com>
	<200606072118.48272.gerald.evenden@verizon.net>
	<f7caaa290606080617r3de0c961o71bac19299d07566@mail.gmail.com>
Message-ID: <ae9185aa0606081929q52f20153n3e4b30a223b62d4d@mail.gmail.com>

On 6/8/06, Jason Askew <jason.askew at gmail.com> wrote:
>  C software can most definately be linked into C#.  But that crosses
> the mangaed/unmanaged code space, which isn't ideal.
>
> I can think of several advantages, however (and I'm sure someone can
> counter-match some disadvantages).
>
> First off, I don't feel bad putting code into c# / .NET becuase it is
> fairly portable with the Mono project covering the Unix/Linux side of
> things.
>
> The other is the vast simplifications I've encoutered and will
> continue to do so, I'm sure.
>
> Like the linked list for paralist and PJ_GRIDINFO...  they're gone,
> replaced with very simple storage classes using C# generics.  All the
> code to handle those linked list is gone, replaced mainly with a
> foreach loop.
>
> And string manipulation has gone from the world of pointers, strcpy,
> sprintf to actual human readable code =).
>
> File manipulation is easier.
>
> I digress.
>
> There is another side to this, this one is specific to windows...
> I've got a hardware accelerated DirectX GIS viewer prototype working,
> along with thin-plate-spline image warping (realtime!).  My end goal
> is a real-time hardware acclerated (there's a lot of horsepower in the
> GPUs these days) for doing image rectification/georeferencing.
>
> I probably don't need to explain the aspect that Proj4 is filling in
> such a piece of software.
>

Sounds pretty cool to me. Please do keep the list posted on your progress.

On the other side of the Universe, I've been porting some of Proj.4 to
JavaScript.

Rich

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From jason.askew at gmail.com  Thu Jun  8 21:38:44 2006
From: jason.askew at gmail.com (Jason Askew)
Date: Thu, 8 Jun 2006 21:38:44 -0700
Subject: [Proj] C# / .NET questions - mainly file loading
Message-ID: <f7caaa290606082138g8af63f3v931686a948b1c30f@mail.gmail.com>

Just want to verify I have some logic correct:

pj_open_lib -

This just uses some logic to search for a file in different areas.

pj_gridinfo_init -

Checks the header.  There are three possible file types:

pj_gridinfo_init_ntv1 - ntv1
pj_gridinfo_init_ntv2 - ntv2
nad_ctable_init - ctable

Correct?

As a side note, are there solid docs on the format of each type?

I have done some research, concerning ntv2, from:

http://jgridshift.sourceforge.net/ntv2.html

The NTv2 spec does not specify big-endian or little-endian format for
binary files (the most commonly available). Canada opted for
big-endian, Australia for little-endian. To make matters worse the
first version of 'Australian' format files used a different record
length for some headers. Subsequently Australian binaries were
produced as strict little-endian versions of the Canadian file format.

Is there any compensation for this?  Looking at the code, it seems
that there is compensation for the system being big or little endian,
but not the file format itself?.

Additionally, I've found ntv2 in both binary and asc format...  how is
this handled?

I'm just not finding much info about ntv1, either.

And ctable... well, I'd like a good pointer on what this is about,
too.  This ends up being the default.  I've gone back and looked at
the mailing history, but I'm not finding what I'm seeking.

So...  ok, any help with the file formats would be good.

I can copy the current code functionality verbatim, but I would really
like to understand what I am copying.

Again, thanks.

Jason



ps,  I really enjoyed this:

static int  byte_order_test = 1;
#define IS_LSB	(((unsigned char *) (&byte_order_test))[0] == 1)

Cool.


From ovv at hetnet.nl  Mon Jun 12 02:47:49 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Mon, 12 Jun 2006 11:47:49 +0200
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde projection
Message-ID: <C0B304E5.72CB%ovv@hetnet.nl>

stmerc is a projection in the libproj4 package. There is no documentation.
Mr. Evenden mentioned it on this discussion list on 2004-03-26.
Recently I found a connection with a projection in real use, the
Gauss-Laborde type "sphère de courbure" (probably meaning: the projection
sphere has a radius equal to the radius of curvature at the point of
origin).
What is the connection? They are the same!

There is documentation available at the French Institut Géographique
National, publication "Notes Techniques", NT/G 73.
<http://www.ign.fr/affiche_rubrique.asp?rbr_id=1700&lng_id=FR#68096>
<http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_73.pdf>

This publication gives the algorithms of two more Gauss-Laborde type
projections, one with a "sphère equatoriale" and one with a "sphère
bitangente".
The "sphère de courbure" projection was or is still in use for Réunion.
I have no idea where the other two Labordes were used for.

More background information in:
ENSG-IGN, Didier Bouteloup, Cours de Géodésie, Chapitre 3: §4.5.d
"Représentation de Gauss-Laborde"
<http://www.ensg.ign.fr/~bouteloup/www/wwwfad/site_fad/pdf/index_pdf.htm>
<http://www.ensg.ign.fr/~bouteloup/www/wwwfad/site_fad/pdf/chap3.pdf>

Example:
International ellipsoid;
lat=-21; lon=55.5;
lat0=-21d7m; lon0=55d32m; x0=1.6e5; y0=5e4; k0=1;
x,y Laborde type 1 = stmerc = 156534.17713, 62916.92507





From gerald.evenden at verizon.net  Mon Jun 12 07:30:59 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Mon, 12 Jun 2006 10:30:59 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <C0B304E5.72CB%ovv@hetnet.nl>
References: <C0B304E5.72CB%ovv@hetnet.nl>
Message-ID: <200606121030.59651.gerald.evenden@verizon.net>

On Monday 12 June 2006 5:47 am, Oscar van Vlijmen wrote:
> stmerc is a projection in the libproj4 package. There is no documentation.
> Mr. Evenden mentioned it on this discussion list on 2004-03-26.
> Recently I found a connection with a projection in real use, the
> Gauss-Laborde type "sphère de courbure" (probably meaning: the projection
> sphere has a radius equal to the radius of curvature at the point of
> origin).
> What is the connection? They are the same!

The 's' in smerc comes from Schreiber Mercator fir which I have found very 
little documentation.  Snyder refers to it as an alternative transverse 
Mercator but gives no further useful information.

The libproj4 smerc is a Gauss transformation to the sphere, radius at lat_0,
and spherical transverse Mercator projection.

I cannot add anything about French usage but it has nothing to do with the 
Laborde projection used in Madagascar.

If anyone has mathematic documentation of the Schreiber Transverse Mercator I 
would be greatful for a copy.

> There is documentation available at the French Institut Géographique
> National, publication "Notes Techniques", NT/G 73.
> <http://www.ign.fr/affiche_rubrique.asp?rbr_id=1700&lng_id=FR#68096>
> <http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_73.pdf>
>
> This publication gives the algorithms of two more Gauss-Laborde type
> projections, one with a "sphère equatoriale" and one with a "sphère
> bitangente".
> The "sphère de courbure" projection was or is still in use for Réunion.
> I have no idea where the other two Labordes were used for.
>
> More background information in:
> ENSG-IGN, Didier Bouteloup, Cours de Géodésie, Chapitre 3: §4.5.d
> "Représentation de Gauss-Laborde"
> <http://www.ensg.ign.fr/~bouteloup/www/wwwfad/site_fad/pdf/index_pdf.htm>
> <http://www.ensg.ign.fr/~bouteloup/www/wwwfad/site_fad/pdf/chap3.pdf>
>
> Example:
> International ellipsoid;
> lat=-21; lon=55.5;
> lat0=-21d7m; lon0=55d32m; x0=1.6e5; y0=5e4; k0=1;
> x,y Laborde type 1 = stmerc = 156534.17713, 62916.92507
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary



From gerald.evenden at verizon.net  Mon Jun 12 10:42:53 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Mon, 12 Jun 2006 13:42:53 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <C0B304E5.72CB%ovv@hetnet.nl>
References: <C0B304E5.72CB%ovv@hetnet.nl>
Message-ID: <200606121342.53506.gerald.evenden@verizon.net>

On Monday 12 June 2006 5:47 am, Oscar van Vlijmen wrote:
> stmerc is a projection in the libproj4 package. There is no documentation.
> Mr. Evenden mentioned it on this discussion list on 2004-03-26.
> Recently I found a connection with a projection in real use, the
> Gauss-Laborde type "sphère de courbure" (probably meaning: the projection
> sphere has a radius equal to the radius of curvature at the point of
> origin).
> What is the connection? They are the same!

Looking at the NT/G 76, the tmerc projection described uses the isometric 
latitude as the intermediate latitude while stmerc in libproj4 uses the Gauss 
conformal latitude which is more complex in its conversion and has side 
effects such as creating a new radius (see the pj_gauss documentation in the
libproj4 manual).

However, other complicating factors later in the 76 development prohibits me 
from saying it is not the same as stmerc.  I will, however, safely say that 
is it not equivalent to Gauss-Kruger that we all know and love. :-)

I think I will code 76 up and see how things do compare.  Thankfully, C99 has 
complex arithmetic and math library.  I must add that NT/G series are quite 
useful for developing code.

BTW, I am having a devil of a time accessing the French site and keep timing 
out.  It took me nearly an hour to just access three of the documents and the 
browser finally completely gave up on the last one.  All other net access 
seems normal.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary



From lists at lazygranch.com  Tue Jun 13 00:12:04 2006
From: lists at lazygranch.com (gary)
Date: Tue, 13 Jun 2006 00:12:04 -0700
Subject: [Proj] gdalwarp and proj.4
Message-ID: <448E6544.4090202@lazygranch.com>

I'm running gdalwarp and getting the error message
ERROR6: Unable to load PROJ.4 library (libproj.so) ...

Any clues how to fix this?

PS: Moderator, please ignore my other message. I sent it from the wrong 
account and it got flagged.


From ovv at hetnet.nl  Tue Jun 13 01:51:05 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 13 Jun 2006 10:51:05 +0200
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <200606121342.53506.gerald.evenden@verizon.net>
Message-ID: <C0B44919.72EA%ovv@hetnet.nl>

>> stmerc is a projection in the libproj4 package. There is no documentation.
>> Mr. Evenden mentioned it on this discussion list on 2004-03-26.
>> Recently I found a connection with a projection in real use, the
>> Gauss-Laborde type "sphère de courbure" ...

Mr. Evenden wrote:

> Looking at the NT/G 76, the tmerc projection described uses the isometric
> latitude as the intermediate latitude while stmerc in libproj4 uses the Gauss
> conformal latitude which is more complex in its conversion and has side
> effects such as creating a new radius (see the pj_gauss documentation in the
> libproj4 manual).
...
> I think I will code 76 up and see how things do compare.  Thankfully, C99 has
> complex arithmetic and math library.  I must add that NT/G series are quite
> useful for developing code.

Going complex is not needed. Those few sums of complex sines can easily be
computed doing Re and Im separately in reals.

<http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_73.pdf>
NTG 73 describes 3 types of Gauss-Laborde projections. One of them, the
"sphère de courbure", is equal to stmerc.
If you throw a lot of lat, lon, lat0, k0 &c parameters to both and you get
the same results everywhere, they must be the same. This is no rigorous
proof of course.

<http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_76.pdf>
NTG 76 describes algorithms for the transverse Mercator projection, using
complex math. One of the advantages of this route is that you get very good
results for large differences in lon-lon0.
For instance, if you go 30 degrees away from the central meridian (lon0), at
latitude 10 degrees, you'll find that tmerc departs around 60 m in x and
around 30 m in y from the exact value.
Routines like the French are only microns away from the exact values.
Millimeter accuracy is still available to at least lon-lon0 = 70 degrees,
and beyond that, only for smaller values of the latitude (say <30 deg) the
function gets worse.

At least three geodetic services use routines approximating the exact TM
better than tmerc, DMA/NIMA/NGA and the like:
1) French IGN (see above)
2) Swedish Lantmäteriet
<http://www.lantmateriet.se/upload/filer/kartor/geodesi_gps_och_detaljmatnin
g/geodesi/Formelsaml%C3%ADng/Gauss_Conformal_Projection.pdf>
3) Finnish JHS
<http://www.jhs-suositukset.fi/intermin/hankkeet/jhs/home.nsf/files/JHS154/$
file/JHS154.pdf>
Each follow a slightly different route, but the differences in the results
are small.

For small values of lon-lon0, say less than 6 degrees, tmerc et alii perform
very well, so nothing can be gained using the above mentioned TMs.

Let's give a testpoint:
WGS84 ellipsoid
lat=40; lon=70; lon0=0; lat0=0; x0=5e5; y0=0; k0=0.9996;
x,y exact: 6289992.60347, 7531297.26735 m
The French routines do: 6289992.60342, 7531297.26746
The Finnish routines give: 6289992.60323, 7531297.26746
By the way, the Finnish routines compute a meridian convergence of 58.289
deg and a point scale factor of 1.43738.







From gerald.evenden at verizon.net  Tue Jun 13 08:22:54 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Tue, 13 Jun 2006 11:22:54 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French
	=?iso-8859-1?q?Gauss-Laborde=09projection?=
In-Reply-To: <C0B44919.72EA%ovv@hetnet.nl>
References: <C0B44919.72EA%ovv@hetnet.nl>
Message-ID: <200606131122.54179.gerald.evenden@verizon.net>

On Tuesday 13 June 2006 4:51 am, Oscar van Vlijmen wrote:
	 ...
> Going complex is not needed. Those few sums of complex sines can easily be
> computed doing Re and Im separately in reals.
>
> <http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_73.pdf>
> NTG 73 describes 3 types of Gauss-Laborde projections. One of them, the
> "sphère de courbure", is equal to stmerc.

After looking more closely last night I began to come to that conclusion.  I 
am somewhat curious about the term "sphère de courbure" which an online 
translator gives: "curve of sphere."  Also, I am not yet quite sure what 
simplifies in the équatoriale and bitangente cases.

> If you throw a lot of lat, lon, lat0, k0 &c parameters to both and you get
> the same results everywhere, they must be the same. This is no rigorous
> proof of course.
>
> <http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_76.pdf>
> NTG 76 describes algorithms for the transverse Mercator projection, using
> complex math. One of the advantages of this route is that you get very good
> results for large differences in lon-lon0.
> For instance, if you go 30 degrees away from the central meridian (lon0),
> at latitude 10 degrees, you'll find that tmerc departs around 60 m in x and
> around 30 m in y from the exact value.
> Routines like the French are only microns away from the exact values.
> Millimeter accuracy is still available to at least lon-lon0 = 70 degrees,
> and beyond that, only for smaller values of the latitude (say <30 deg) the
> function gets worse.

There is a solution out there that goes all the way but uses functions that 
are hard to find and/or need to be developed.  One fellow supposedly sped up 
the solution but I could not reproduce his results.

> At least three geodetic services use routines approximating the exact TM
> better than tmerc, DMA/NIMA/NGA and the like:
> 1) French IGN (see above)
> 2) Swedish Lantmäteriet
> <http://www.lantmateriet.se/upload/filer/kartor/geodesi_gps_och_detaljmatni
>n g/geodesi/Formelsaml%C3%ADng/Gauss_Conformal_Projection.pdf>
> 3) Finnish JHS
> <http://www.jhs-suositukset.fi/intermin/hankkeet/jhs/home.nsf/files/JHS154/
>$ file/JHS154.pdf>

I timed out trying to get to the above url.  I will try again later.

> Each follow a slightly different route, but the differences in the results
> are small.
>
> For small values of lon-lon0, say less than 6 degrees, tmerc et alii
> perform very well, so nothing can be gained using the above mentioned TMs.

One might question the practical need to go beyond 6 degrees.

BTW: what did you use to get the "exact" values?

> Let's give a testpoint:
> WGS84 ellipsoid
> lat=40; lon=70; lon0=0; lat0=0; x0=5e5; y0=0; k0=0.9996;
> x,y exact: 6289992.60347, 7531297.26735 m
> The French routines do: 6289992.60342, 7531297.26746
> The Finnish routines give: 6289992.60323, 7531297.26746
> By the way, the Finnish routines compute a meridian convergence of 58.289
> deg and a point scale factor of 1.43738.


-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary



From ovv at hetnet.nl  Tue Jun 13 11:59:40 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 13 Jun 2006 20:59:40 +0200
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <200606131122.54179.gerald.evenden@verizon.net>
Message-ID: <C0B4D7BC.7301%ovv@hetnet.nl>

>> <http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_73.pdf>
>> NTG 73 describes 3 types of Gauss-Laborde projections. One of them, the
>> "sphère de courbure", is equal to stmerc.
> 
> After looking more closely last night I began to come to that conclusion.  I
> am somewhat curious about the term "sphère de courbure" which an online
> translator gives: "curve of sphere."  Also, I am not yet quite sure what
> simplifies in the équatoriale and bitangente cases.

My interpretation of "sphère de courbure" was:
the projection sphere has a radius equal to the radius of curvature at the
point of origin. But how is this sphere positioned? Tangent at the origin
(lat0, lon0) perhaps?
The "équatoriale" case has something to do with the projection sphere
positioned on the equator. In the "bitangente" case probably the projection
sphere touches the ellipsoid twice, but where?
Schreiber knew; he developed several double projections!

>> For small values of lon-lon0, say less than 6 degrees, tmerc et alii
>> perform very well, so nothing can be gained using the above mentioned TMs.
> One might question the practical need to go beyond 6 degrees.
I understand that among others, ESRI has been busy developing such a TM. So
there must be a professional need for it.

> BTW: what did you use to get the "exact" values?
My own stuff.
I had a very hard time finding solid code. Several people are guarding the
principles as a secret and are deliberately vague. Or they are trying to get
solid money from it by selling software or books.
But I persevered in trying to get the Dozier show on the road.
You (mr. Evenden) already found one error in his code, but this error has to
be corrected in 3 places. It's the error of the elliptic parameter m, which
has to be the elliptic modulus k in 3 cases (tmfd, gk, tmid).
It appeared that the Dozier code - the complex Newton iteration - was
useless in some regions, especially large lon-lon0 and low latitudes. First
I used somewhat better elliptic functions from Cernlib. But, to more effect,
I concocted another iteration scheme based on TOMS algorithm 365, a very
slow downhill walkaround method, yet very powerful.
I checked my results with an on-line calculator from professor Schuhr, based
on the Klotz algorithms.
<http://gauss.fb1.fh-frankfurt.de/cgi-bin/cgi_gk>
This calculator fails for difficult areas (very large lon-lon0, small lat).
So I can only 'proof' my results in the difficult areas by doing a complete
round-trip and getting nearly the original data back.
And yes, I do the lon-lon0=90 degrees too.

The Dozier article:
<http://www2.bren.ucsb.edu/~dozier/publications.htm>





From cjmce at lsu.edu  Tue Jun 13 13:14:04 2006
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Tue, 13 Jun 2006 15:14:04 -0500
Subject: [Proj] Discovery: libproj4 stmerc = French
	Gauss-Laborde	projection
Message-ID: <OFE47EDE45.B193DA46-ON8625718C.006F26FE-8625718C.006F270C@lsu.edu>





The "sphère de courbure" is merely the Gaussian Sphere evaluated at the
geodetic latitude of origin.

Melita Kennedy of ESRI informed me a couple years ago that they
successfully programmed Jeff Dozier's TM equations and have incorporated
that routine into one of the ESRI packages, I don't remember which one.

Clifford J. Mugnier C.P.,C.M.S.
National Director (2006-2008)
Photogrammetric Applications Division
AMERICAN SOCIETY FOR PHOTOGRAMMETRY AND REMOTE SENSING
and
Chief of Geodesy
Center for GeoInformatics
LOUISIANA STATE UNIVERSITY
Dept. of Civil Engineering
CEBA 3223A
Baton Rouge, LA  70810
Voice:              (225) 578-8536
Facsimile:          (225) 578-8652
-----------------------------------------------------------
http://www.ASPRS.org/resources/GRIDS
http://www.cee.lsu.edu/facultyStaff/mugnier/index.html
-----------------------------------------------------------


>> <http://www.ign.fr/telechargement/MPro/geodesie/CIRCE/NTG_73.pdf>
>> NTG 73 describes 3 types of Gauss-Laborde projections. One of them, the
>> "sphère de courbure", is equal to stmerc.
>
> After looking more closely last night I began to come to that conclusion.
I
> am somewhat curious about the term "sphère de courbure" which an online
> translator gives: "curve of sphere."  Also, I am not yet quite sure what
> simplifies in the équatoriale and bitangente cases.

My interpretation of "sphère de courbure" was:
the projection sphere has a radius equal to the radius of curvature at the
point of origin. But how is this sphere positioned? Tangent at the origin
(lat0, lon0) perhaps?
The "équatoriale" case has something to do with the projection sphere
positioned on the equator. In the "bitangente" case probably the projection
sphere touches the ellipsoid twice, but where?
Schreiber knew; he developed several double projections!

>> For small values of lon-lon0, say less than 6 degrees, tmerc et alii
>> perform very well, so nothing can be gained using the above mentioned
TMs.
> One might question the practical need to go beyond 6 degrees.
I understand that among others, ESRI has been busy developing such a TM. So
there must be a professional need for it.

> BTW: what did you use to get the "exact" values?
My own stuff.
I had a very hard time finding solid code. Several people are guarding the
principles as a secret and are deliberately vague. Or they are trying to
get
solid money from it by selling software or books.
But I persevered in trying to get the Dozier show on the road.
You (mr. Evenden) already found one error in his code, but this error has
to
be corrected in 3 places. It's the error of the elliptic parameter m, which
has to be the elliptic modulus k in 3 cases (tmfd, gk, tmid).
It appeared that the Dozier code - the complex Newton iteration - was
useless in some regions, especially large lon-lon0 and low latitudes. First
I used somewhat better elliptic functions from Cernlib. But, to more
effect,
I concocted another iteration scheme based on TOMS algorithm 365, a very
slow downhill walkaround method, yet very powerful.
I checked my results with an on-line calculator from professor Schuhr,
based
on the Klotz algorithms.
<http://gauss.fb1.fh-frankfurt.de/cgi-bin/cgi_gk>
This calculator fails for difficult areas (very large lon-lon0, small lat).
So I can only 'proof' my results in the difficult areas by doing a complete
round-trip and getting nearly the original data back.
And yes, I do the lon-lon0=90 degrees too.

The Dozier article:
<http://www2.bren.ucsb.edu/~dozier/publications.htm>



_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




From gerald.evenden at verizon.net  Tue Jun 13 16:46:48 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Tue, 13 Jun 2006 19:46:48 -0400
Subject: [Proj] Discovery: libproj4 stmerc =
	=?iso-8859-1?q?French=09Gauss-Laborde=09projection?=
In-Reply-To: <OFE47EDE45.B193DA46-ON8625718C.006F26FE-8625718C.006F270C@lsu.edu>
References: <OFE47EDE45.B193DA46-ON8625718C.006F26FE-8625718C.006F270C@lsu.edu>
Message-ID: <200606131946.48375.gerald.evenden@verizon.net>

On Tuesday 13 June 2006 4:14 pm, Clifford J Mugnier wrote:
> The "sphère de courbure" is merely the Gaussian Sphere evaluated at the
> geodetic latitude of origin.
>
> Melita Kennedy of ESRI informed me a couple years ago that they
> successfully programmed Jeff Dozier's TM equations and have incorporated
> that routine into one of the ESRI packages, I don't remember which one.

I would only ask one question: was the code in the appendix of Dozier's 
article without error?

I bashed my head against that stuff several years ago to no avail.  I even 
converted the code into computer readable form two ways: by scanner and OCR 
and brute force keying in.
	...
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary



From gerald.evenden at verizon.net  Tue Jun 13 17:21:47 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Tue, 13 Jun 2006 20:21:47 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French
	=?iso-8859-1?q?Gauss-Laborde=09projection?=
In-Reply-To: <C0B4D7BC.7301%ovv@hetnet.nl>
References: <C0B4D7BC.7301%ovv@hetnet.nl>
Message-ID: <200606132021.47700.gerald.evenden@verizon.net>

On Tuesday 13 June 2006 2:59 pm, Oscar van Vlijmen wrote:
	...
> >> For small values of lon-lon0, say less than 6 degrees, tmerc et alii
> >> perform very well, so nothing can be gained using the above mentioned
> >> TMs.
> >
> > One might question the practical need to go beyond 6 degrees.
>
> I understand that among others, ESRI has been busy developing such a TM. So
> there must be a professional need for it.

It is an interesting academic problem but I fail to see any practical 
application.  Scale factor and large scale distortion goes to hell rapidly 
from the central meridian for any expanded Mercator aspect and thus 
unsuitable for cadastral or grid systems.  Old style navigation that 
justified Mercator navigations charts seems to be on the way out.  So other 
than demonstrating loxodromes what is the use of continental size 
Mercator---especially for the ellipsoid?

It seems peculiar that someone who has to watch expenditures would spend time 
on this activity.  There must be an unknown, external driving dollar.

Reminds me of the book about men who watch goats.

> > BTW: what did you use to get the "exact" values?
>
> My own stuff.
> I had a very hard time finding solid code. Several people are guarding the
> principles as a secret and are deliberately vague. Or they are trying to
> get solid money from it by selling software or books.

You may be right, but I do not see any visible results yet.  But again, I 
cannot see anyone in their right mind buying such stuff without there being a 
strong NEED.

> But I persevered in trying to get the Dozier show on the road.
> You (mr. Evenden) already found one error in his code, but this error has
> to be corrected in 3 places. It's the error of the elliptic parameter m,
> which has to be the elliptic modulus k in 3 cases (tmfd, gk, tmid).
> It appeared that the Dozier code - the complex Newton iteration - was
> useless in some regions, especially large lon-lon0 and low latitudes. First
> I used somewhat better elliptic functions from Cernlib. But, to more
> effect, I concocted another iteration scheme based on TOMS algorithm 365, a
> very slow downhill walkaround method, yet very powerful.
> I checked my results with an on-line calculator from professor Schuhr,
> based on the Klotz algorithms.

I believe I saw a reference to the Klotz article the calculator page.  Is it 
worthwhile?

> <http://gauss.fb1.fh-frankfurt.de/cgi-bin/cgi_gk>

Interesting site but the above url failed on my browsers and I had to back up 
two levels and guess my way in.  At the moment I have not figured out enough 
German to effectively work the calculator.  I have an easier time with 
French, can slowly work through simple German and throw up my hands in defeat 
with Polish.  :-(  And working in Grads is a bit of a nuisance.

An unrelated aside: most people are unaware that proj/lproj accepts radian 
input---suffix the value with r (0.123r).  It might be an idea to add a g 
suffix for grad.

> This calculator fails for difficult areas (very large lon-lon0, small lat).
> So I can only 'proof' my results in the difficult areas by doing a complete
> round-trip and getting nearly the original data back.
> And yes, I do the lon-lon0=90 degrees too.
>
> The Dozier article:
> <http://www2.bren.ucsb.edu/~dozier/publications.htm>

Dozier was nice enough to send me a copy but i got the feeling later that he 
had lost interest in the project.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From lists at lazygranch.com  Tue Jun 13 21:58:48 2006
From: lists at lazygranch.com (gary)
Date: Tue, 13 Jun 2006 21:58:48 -0700
Subject: [Proj] gdalwarp and proj.4
In-Reply-To: <448E6544.4090202@lazygranch.com>
References: <448E6544.4090202@lazygranch.com>
Message-ID: <448F9788.7020303@lazygranch.com>

I hate to be a pain here, but is this problem unsolvable?

gary wrote:
> I'm running gdalwarp and getting the error message
> ERROR6: Unable to load PROJ.4 library (libproj.so) ...
> 
> Any clues how to fix this?
> 
> PS: Moderator, please ignore my other message. I sent it from the wrong 
> account and it got flagged.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 


From Strebe at aol.com  Tue Jun 13 22:12:11 2006
From: Strebe at aol.com (Strebe at aol.com)
Date: Wed, 14 Jun 2006 01:12:11 EDT
Subject: [Proj] Re: Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
Message-ID: <406.47e46e2.31c0f4ab@aol.com>


You might contact Dr. David E. Wallis. He devised a much simpler method than 
Dozier's. I've implemented it for the full-ellipsoid. You can see a plot of an 
earth-like ellipsoid here:

http://mapthematics.com/Projection%20Images/Cylindrical/Transverse%20Mercator.
GIF

The method works for arbitrary eccentricities. Contact me privately if you're 
interested. Since it is Dr. Wallis's invention, I'll put you in contact with 
him. 

Regards,
-- daan Strebe


In a message dated 6/13/06 12:03:39, ovv at hetnet.nl writes:


> > BTW: what did you use to get the "exact" values?
> My own stuff.
> I had a very hard time finding solid code. Several people are guarding the
> principles as a secret and are deliberately vague. Or they are trying to get
> solid money from it by selling software or books.
> But I persevered in trying to get the Dozier show on the road.
> You (mr. Evenden) already found one error in his code, but this error has to
> be corrected in 3 places. It's the error of the elliptic parameter m, which
> has to be the elliptic modulus k in 3 cases (tmfd, gk, tmid).
> It appeared that the Dozier code - the complex Newton iteration - was
> useless in some regions, especially large lon-lon0 and low latitudes. First
> I used somewhat better elliptic functions from Cernlib. But, to more effect,
> I concocted another iteration scheme based on TOMS algorithm 365, a very
> slow downhill walkaround method, yet very powerful.
> I checked my results with an on-line calculator from professor Schuhr, based
> on the Klotz algorithms.
> <http://gauss.fb1.fh-frankfurt.de/cgi-bin/cgi_gk>
> This calculator fails for difficult areas (very large lon-lon0, small lat).
> So I can only 'proof' my results in the difficult areas by doing a complete
> round-trip and getting nearly the original data back.
> And yes, I do the lon-lon0=90 degrees too.
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060614/bbc7dd9f/attachment.html>

From hamish_nospam at yahoo.com  Wed Jun 14 00:02:24 2006
From: hamish_nospam at yahoo.com (Hamish)
Date: Wed, 14 Jun 2006 19:02:24 +1200
Subject: [Proj] gdalwarp and proj.4
In-Reply-To: <448F9788.7020303@lazygranch.com>
References: <448E6544.4090202@lazygranch.com> <448F9788.7020303@lazygranch.com>
Message-ID: <20060614190224.2c05aa42.hamish_nospam@yahoo.com>

> I hate to be a pain here, but is this problem unsolvable?
> 
> gary wrote:
> > I'm running gdalwarp and getting the error message
> > ERROR6: Unable to load PROJ.4 library (libproj.so) ...
> > 
> > Any clues how to fix this?

GDAL can't find the PROJ libary.


is proj installed fully & correctly?
do you have a file called "libproj.so"?

e.g.
/usr/lib/libproj.so
or
/usr/local/lib/libproj.so


if you have something "close" but not the actual name, you may need to
make a symlink,
ln -s /usr/lib/libproj.so.0 /usr/local/lib/libproj.so

if you have
/usr/local/lib/libproj.so

but it just doesn't work, check that "/usr/local/lib/" is listed in
/etc/ld.so.conf

If it isn't, add it to the end of that file and then run ldconfig as root.


good luck,
Hamish


From mateusz at loskot.net  Wed Jun 14 02:15:10 2006
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 14 Jun 2006 11:15:10 +0200
Subject: [Proj] gdalwarp and proj.4
In-Reply-To: <20060614190224.2c05aa42.hamish_nospam@yahoo.com>
References: <448E6544.4090202@lazygranch.com> <448F9788.7020303@lazygranch.com>
	<20060614190224.2c05aa42.hamish_nospam@yahoo.com>
Message-ID: <448FD39E.5090803@loskot.net>

Hamish wrote:
> if you have /usr/local/lib/libproj.so
> 
> but it just doesn't work, check that "/usr/local/lib/" is listed in 
> /etc/ld.so.conf
> 
> If it isn't, add it to the end of that file and then run ldconfig as
> root.

To Gary:
Also, after those steps above, check if ldconfig sees this PROJ's library:

$ ldconfig -p | grep libproj

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net


From gerald.evenden at verizon.net  Wed Jun 14 08:42:40 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 14 Jun 2006 11:42:40 -0400
Subject: [Proj] Re: Discovery: libproj4 stmerc = French
	=?utf-8?q?Gauss-Laborde=09projection?=
In-Reply-To: <406.47e46e2.31c0f4ab@aol.com>
References: <406.47e46e2.31c0f4ab@aol.com>
Message-ID: <200606141142.40386.gerald.evenden@verizon.net>

On Wednesday 14 June 2006 1:12 am, Strebe at aol.com wrote:
> You might contact Dr. David E. Wallis. He devised a much simpler method
> than Dozier's. I've implemented it for the full-ellipsoid. You can see a
> plot of an earth-like ellipsoid here:
>
> http://mapthematics.com/Projection%20Images/Cylindrical/Transverse%20Mercat
>or. GIF
>
> The method works for arbitrary eccentricities. Contact me privately if
> you're interested. Since it is Dr. Wallis's invention, I'll put you in
> contact with him.

Dr. Wells has a web page relating to the projection:

http://www.wallisphd.com/mercator.htm

that a Google search on his name will return.  Found this site several years 
ago during a previous discussion about tmerc.  To me, the web page appears 
unchanged and the "Publication Pending" notice at the top is certainly taking 
a long time.

I should post him a letter for further information and follow up with a phone 
call if no response.

The description of the equation present does not make much sense unless what 
looks like p in the tan term is not the p described as colatitude.  Again, 
the first line says p,lambda is the colatitude and longitude yet the 
description following the formula talks about a p for the Elliptic Integral 
of the second kind.

I must be missing something.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From strebe at aol.com  Wed Jun 14 10:50:37 2006
From: strebe at aol.com (strebe at aol.com)
Date: Wed, 14 Jun 2006 13:50:37 -0400
Subject: [Proj] Re: Discovery: libproj4 stmerc = French
	Gauss-Laborde	projection
In-Reply-To: <200606141142.40386.gerald.evenden@verizon.net>
References: <406.47e46e2.31c0f4ab@aol.com>
	<200606141142.40386.gerald.evenden@verizon.net>
Message-ID: <8C85DF22D8B7E45-99C-22FE@mblk-d37.sysops.aol.com>


Hm. I didn't know about that web page. Obviously it's wrong -- for some 
reason "p" appears in several different roles. I tend to think that's 
an error in conversion to a web page. (I see that the entire blurb is a 
single graphic, not HTML mark-up.) Certainly he's been pedantic and 
precise in all his communications with me.

The p/2 exponent should read (e/2), where e is the eccentricity.

Use some other variable (perhaps p') in place of p in "Then, the 
complex variable tan (p/2) can be obtained..." and "...yields the 
argument p..."

Regards,
-- daan Strebe


-----Original Message-----
From: Gerald I. Evenden <gerald.evenden at verizon.net>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Wed, 14 Jun 2006 11:42:40 -0400
Subject:  Re: [Proj] Re: Discovery: libproj4 stmerc = French 
Gauss-Laborde   projection

   On Wednesday 14 June 2006 1:12 am, Strebe at aol.com wrote:
> You might contact Dr. David E. Wallis. He devised a much simpler 
method
> than Dozier's. I've implemented it for the full-ellipsoid. You can 
see a
> plot of an earth-like ellipsoid here:
>
> 
http://mapthematics.com/Projection%20Images/Cylindrical/Transverse%20Merc
at
>or. GIF
>
> The method works for arbitrary eccentricities. Contact me privately if
> you're interested. Since it is Dr. Wallis's invention, I'll put you in
> contact with him.

Dr. Wells has a web page relating to the projection:

http://www.wallisphd.com/mercator.htm

that a Google search on his name will return.  Found this site several 
years
ago during a previous discussion about tmerc.  To me, the web page 
appears
unchanged and the "Publication Pending" notice at the top is certainly 
taking
a long time.

I should post him a letter for further information and follow up with a 
phone
call if no response.

The description of the equation present does not make much sense unless 
what
looks like p in the tan term is not the p described as colatitude.  
Again,
the first line says p,lambda is the colatitude and longitude yet the
description following the formula talks about a p for the Elliptic 
Integral
of the second kind.

I must be missing something.

--
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


________________________________________________________________________
Check out AOL.com today. Breaking news, video search, pictures, email 
and IM. All on demand. Always Free.



From ovv at hetnet.nl  Wed Jun 14 11:00:57 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Wed, 14 Jun 2006 20:00:57 +0200
Subject: [Proj] Re: Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <406.47e46e2.31c0f4ab@aol.com>
Message-ID: <C0B61B79.731C%ovv@hetnet.nl>

From: Strebe-aol.com

> You might contact Dr. David E. Wallis. He devised a much simpler method than
> Dozier's. I've implemented it for the full-ellipsoid. You can see a plot of an
> earth-like ellipsoid here:
>http://mapthematics.com/Projection%20Images/Cylindrical/Transverse%20Mercator.G
IF

Thanks for the nice picture!



A word of caution for all TM methods:
it is very difficult to get any accuracy at the edges, i.e. for very large
lon-lon0 at small values of lat, and very near the poles. Let's not
exaggerate our claims!

By using for instance an approximation like the Finnish Julkisen Hallinnon
Suositus or the French IGN uses, even the mathematical singularity at the
poles (lat=90) seems to vanish (Wallis claim).

It apparently seems not too difficult to devise a reasonable TM
approximation for the entire (hemi)sphere, good enough for large-scale
mapping. But to get high accuracy at the edges is very difficult.


From: gerald.evenden-verizon.net

>> I checked my results with an on-line calculator from professor Schuhr,
>> based on the Klotz algorithms.
>> <http://gauss.fb1.fh-frankfurt.de/>
> And working in Grads is a bit of a nuisance.

The German 'Grad' is the English 'degree'.
English 'grad' was in German 'Neugrad', now 'Gon'.




From gerald.evenden at verizon.net  Wed Jun 14 18:38:06 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 14 Jun 2006 21:38:06 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French
	=?iso-8859-1?q?Gauss-Laborde=09projection?=
In-Reply-To: <C0B4D7BC.7301%ovv@hetnet.nl>
References: <C0B4D7BC.7301%ovv@hetnet.nl>
Message-ID: <200606142138.06087.gerald.evenden@verizon.net>

On Tuesday 13 June 2006 2:59 pm, Oscar van Vlijmen wrote:
	...
> I checked my results with an on-line calculator from professor Schuhr,
> based on the Klotz algorithms.
> <http://gauss.fb1.fh-frankfurt.de/cgi-bin/cgi_gk>
> This calculator fails for difficult areas (very large lon-lon0, small lat).
> So I can only 'proof' my results in the difficult areas by doing a complete
> round-trip and getting nearly the original data back.

I finally cased out usage of the above site and agree that within the limits
of 6 degrees from the central meridian lproj agrees to about .1mm.  However, I 
did note that the above site's northing fails near the pole.  This is 
dependent upon the accuracy of the meridianal distance algorithm and where 
lproj's should be good to about 14 digits or about .1 nm.

Given the labor of hand keying test values on an online site, the test was not 
very rigorous.

I might have been able to push meridianal distance to IEEE 64 bit float limits 
but my interest in the project was began to wane.

With the exception of northing, lproj seems to agree to the .1mm of the site's 
display precision within the 3.5 degree range of UTM.  This range is certain 
the practical limits of TM.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From mkennedy2 at earthlink.net  Thu Jun 15 00:10:26 2006
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Thu, 15 Jun 2006 00:10:26 -0700
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
Message-ID: <uk1292h73qkoj16of51ki29qsmok4f4tuj@4ax.com>

> Cliff Mugnier wrote: 
> Melita Kennedy of ESRI informed me a couple years ago that they
> successfully programmed Jeff Dozier's TM equations and have incorporated
> that routine into one of the ESRI packages, I don't remember which one.

David Burrows implemented a complex math version of transverse Mercator
working from Dozier's equations. On a brief stop in the office today (he's
on vacation), he couldn't remember any errors in Dozier's equations
off-hand. He did mention that he could not make it work out to 90 degrees
from the central meridian as the paper states. I think we ended up limiting
it to 85 or 87 degrees. Next week he'll take a look at  his copy of the
paper to see if he wrote any notes down. 

Melita

-- 
Melita Kennedy
mkennedy2 at earthlnik.net



From martin.vermeer at hut.fi  Wed Jun 14 23:37:58 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Thu, 15 Jun 2006 09:37:58 +0300
Subject: [Proj] Re: Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <8C85DF22D8B7E45-99C-22FE@mblk-d37.sysops.aol.com>
References: <406.47e46e2.31c0f4ab@aol.com>
	<200606141142.40386.gerald.evenden@verizon.net>
	<8C85DF22D8B7E45-99C-22FE@mblk-d37.sysops.aol.com>
Message-ID: <1150353479.29975.24.camel@geo9.hut.fi>

On Wed, 2006-06-14 at 13:50 -0400, strebe at aol.com wrote:
> Hm. I didn't know about that web page. Obviously it's wrong -- for some 
> reason "p" appears in several different roles. I tend to think that's 
> an error in conversion to a web page. (I see that the entire blurb is a 
> single graphic, not HTML mark-up.) Certainly he's been pedantic and 
> precise in all his communications with me.
> 
> The p/2 exponent should read (e/2), where e is the eccentricity.

Yes, I agree.

> Use some other variable (perhaps p') in place of p in "Then, the 
> complex variable tan (p/2) can be obtained..." and "...yields the 
> argument p..."


Actually the argument p is simply the (ellipsoidal) co-latitude 
90d - phi.

The common expression in u and v corresponds to exp(psi), where psi is
the _isometric latitude_, i.e., essentially the "northing" in a
traditional (non-transverse) Mercator map plane.

Isometric latitude and longitude (psi, lambda) together as (x,y)
co-ordinates in a plane define a conformal mapping from the curved
Earth's surface. Using (psi, lambda) directly as rectangular
co-ordinates produces classical Mercator. Using

u + iv = exp(psi + i * lambda)

i.e., polar co-ordinates, produces the stereographic projection. This is
very much what Dr Wallis's formula looks like. Apparently for him it is
only a trick leading somewhere... but then I also get lost.

Regards Martin V

PS you may want to look at 

http://users.tkk.fi/~mvermeer/geom.pdf

pp 99-100 and around p. 90. Sorry it's in Fenno-ugrian formulese...


> Regards,
> -- daan Strebe
> 
> 
> -----Original Message-----
> From: Gerald I. Evenden <gerald.evenden at verizon.net>
> To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
> Sent: Wed, 14 Jun 2006 11:42:40 -0400
> Subject:  Re: [Proj] Re: Discovery: libproj4 stmerc = French 
> Gauss-Laborde   projection
> 
>    On Wednesday 14 June 2006 1:12 am, Strebe at aol.com wrote:
> > You might contact Dr. David E. Wallis. He devised a much simpler 
> method
> > than Dozier's. I've implemented it for the full-ellipsoid. You can 
> see a
> > plot of an earth-like ellipsoid here:
> >
> > 
> http://mapthematics.com/Projection%20Images/Cylindrical/Transverse%20Merc
> at
> >or. GIF
> >
> > The method works for arbitrary eccentricities. Contact me privately if
> > you're interested. Since it is Dr. Wallis's invention, I'll put you in
> > contact with him.
> 
> Dr. Wells has a web page relating to the projection:
> 
> http://www.wallisphd.com/mercator.htm
> 
> that a Google search on his name will return.  Found this site several 
> years
> ago during a previous discussion about tmerc.  To me, the web page 
> appears
> unchanged and the "Publication Pending" notice at the top is certainly 
> taking
> a long time.
> 
> I should post him a letter for further information and follow up with a 
> phone
> call if no response.
> 
> The description of the equation present does not make much sense unless 
> what
> looks like p in the tan term is not the p described as colatitude.  
> Again,
> the first line says p,lambda is the colatitude and longitude yet the
> description following the formula talks about a p for the Elliptic 
> Integral
> of the second kind.
> 
> I must be missing something.
> 
> --
> Jerry and the low-riders: Daisy Mae and Joshua
> "Cogito cogito ergo cogito sum"
>    Ambrose Bierce, The Devil's Dictionary
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> ________________________________________________________________________
> Check out AOL.com today. Breaking news, video search, pictures, email 
> and IM. All on demand. Always Free.
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060615/e27070b9/attachment.sig>

From Strebe at aol.com  Thu Jun 15 02:05:13 2006
From: Strebe at aol.com (Strebe at aol.com)
Date: Thu, 15 Jun 2006 05:05:13 EDT
Subject: [Proj] Re: libproj4 stmerc = French Gauss-Laborde projection
Message-ID: <4c7.1703e82.31c27cc9@aol.com>


I'm not lost. I've analyzed the method and programmed it. It works fine.

Yes, p is the parametric co-latitude in the first formula. It's wrong to use 
the same variable in the later formulae because p refers to something else 
there -- in fact, it's a complex variable in the later instances.

The "trick" is this: Wallis uses the polar stereographic because it's the 
simplest way to get a conformal mapping to the plane. Once the ellipsoid is 
mapped, he treats the plane as the complex plane and looks for a complex 
"co-latitude" which can be used with the polar stereographic, but this time treating the 
polar stereographic as function of a complex variable. The reason he does 
this is (a) to preserve conformality; and (b) so that the central meridian (in 
which the imaginary axis is 0) maps back to the parametric colatitude. At this 
point the ellipsoid is mapped conformally in such a way that leaves the central 
meridian effectively unmapped.

Leaving the complex plane aside, using the colatitude as the parameter to the 
elliptic integral of the second kind gives the distance from the pole to the 
colatitude. Since this odd mapping Wallis contrived effectively leaves the 
central meridian unmapped, and since any analytic function applied to a conformal 
mapping results in a conformal mapping, and since the elliptic integral has 
an analytic form, all that is left is to push the mapping through the complex 
form of the elliptic integral of the second kind. This "straightens out" the 
central meridian to its true differential lengths whilst dragging the whole 
complex plane with it in a conformal fashion. The result must be the transverse 
Mercator, since the central meridian is projected with correct scale and since a 
conformal projection is unique except with respect to scale and rotation.

Regards,
-- daan Strebe



In a message dated 6/15/06 01:18:47, martin.vermeer at hut.fi writes:


> On Wed, 2006-06-14 at 13:50 -0400, strebe at aol.com wrote:
> > Hm. I didn't know about that web page. Obviously it's wrong -- for some
> > reason "p" appears in several different roles. I tend to think that's
> > an error in conversion to a web page. (I see that the entire blurb is a
> > single graphic, not HTML mark-up.) Certainly he's been pedantic and
> > precise in all his communications with me.
> >
> > The p/2 exponent should read (e/2), where e is the eccentricity.
> 
> Yes, I agree.
> 
> > Use some other variable (perhaps p') in place of p in "Then, the
> > complex variable tan (p/2) can be obtained..." and "...yields the
> > argument p..."
> 
> 
> Actually the argument p is simply the (ellipsoidal) co-latitude
> 90d - phi.
> 
> The common expression in u and v corresponds to exp(psi), where psi is
> the _isometric latitude_, i.e., essentially the "northing" in a
> traditional (non-transverse) Mercator map plane.
> 
> Isometric latitude and longitude (psi, lambda) together as (x,y)
> co-ordinates in a plane define a conformal mapping from the curved
> Earth's surface. Using (psi, lambda) directly as rectangular
> co-ordinates produces classical Mercator. Using
> 
> u + iv = exp(psi + i * lambda)
> 
> i.e., polar co-ordinates, produces the stereographic projection. This is
> very much what Dr Wallis's formula looks like. Apparently for him it is
> only a trick leading somewhere... but then I also get lost.
> 
> Regards Martin V
> 
> PS you may want to look at
> 
> http://users.tkk.fi/~mvermeer/geom.pdf
> 
> pp 99-100 and around p. 90. Sorry it's in Fenno-ugrian formulese...
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060615/a261f8ea/attachment.html>

From martin.vermeer at hut.fi  Thu Jun 15 02:27:38 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Thu, 15 Jun 2006 12:27:38 +0300
Subject: [Proj] Re: libproj4 stmerc = French Gauss-Laborde projection
In-Reply-To: <4c7.1703e82.31c27cc9@aol.com>
References: <4c7.1703e82.31c27cc9@aol.com>
Message-ID: <1150363658.29975.38.camel@geo9.hut.fi>

On Thu, 2006-06-15 at 05:05 -0400, Strebe at aol.com wrote:
> 
> I'm not lost. I've analyzed the method and programmed it. It works
> fine.
> 
> Yes, p is the parametric co-latitude in the first formula. It's wrong
> to use the same variable in the later formulae because p refers to
> something else there -- in fact, it's a complex variable in the later
> instances.
> 
> The "trick" is this: Wallis uses the polar stereographic because it's
> the simplest way to get a conformal mapping to the plane. Once the
> ellipsoid is mapped, he treats the plane as the complex plane and
> looks for a complex "co-latitude" which can be used with the polar
> stereographic, but this time treating the polar stereographic as
> function of a complex variable. The reason he does this is (a) to
> preserve conformality; and (b) so that the central meridian (in which
> the imaginary axis is 0) maps back to the parametric colatitude. At
> this point the ellipsoid is mapped conformally in such a way that
> leaves the central meridian effectively unmapped.
> 
> Leaving the complex plane aside, using the colatitude as the parameter
> to the elliptic integral of the second kind gives the distance from
> the pole to the colatitude. Since this odd mapping Wallis contrived
> effectively leaves the central meridian unmapped, and since any
> analytic function applied to a conformal mapping results in a
> conformal mapping, and since the elliptic integral has an analytic
> form, all that is left is to push the mapping through the complex form
> of the elliptic integral of the second kind. This "straightens out"
> the central meridian to its true differential lengths whilst dragging
> the whole complex plane with it in a conformal fashion. The result
> must be the transverse Mercator, since the central meridian is
> projected with correct scale and since a conformal projection is
> unique except with respect to scale and rotation.
> 
> Regards,
> -- daan Strebe
> 

Ah! But that's precisely what I have been doing numerically, using a
polynomial expansion rather than an elliptic integral! (And starting
from classical Mercator rather than stereographic, so it will run into
problems at high latitudes.) It's essentially solving a boundary value
problem, with the set of PDEs being the Cauchy-Riemann conformity
conditions and the central meridian the boundary.

I suppose I have to get it written up in english ;-)

Thanks

Martin V

> 
> In a message dated 6/15/06 01:18:47, martin.vermeer at hut.fi writes:
> 
> 
> > On Wed, 2006-06-14 at 13:50 -0400, strebe at aol.com wrote:
> > > Hm. I didn't know about that web page. Obviously it's wrong -- for
> > some
> > > reason "p" appears in several different roles. I tend to think
> > that's
> > > an error in conversion to a web page. (I see that the entire blurb
> > is a
> > > single graphic, not HTML mark-up.) Certainly he's been pedantic
> > and
> > > precise in all his communications with me.
> > >
> > > The p/2 exponent should read (e/2), where e is the eccentricity.
> > 
> > Yes, I agree.
> > 
> > > Use some other variable (perhaps p') in place of p in "Then, the
> > > complex variable tan (p/2) can be obtained..." and "...yields the
> > > argument p..."
> > 
> > 
> > Actually the argument p is simply the (ellipsoidal) co-latitude
> > 90d - phi.
> > 
> > The common expression in u and v corresponds to exp(psi), where psi
> > is
> > the _isometric latitude_, i.e., essentially the "northing" in a
> > traditional (non-transverse) Mercator map plane.
> > 
> > Isometric latitude and longitude (psi, lambda) together as (x,y)
> > co-ordinates in a plane define a conformal mapping from the curved
> > Earth's surface. Using (psi, lambda) directly as rectangular
> > co-ordinates produces classical Mercator. Using
> > 
> > u + iv = exp(psi + i * lambda)
> > 
> > i.e., polar co-ordinates, produces the stereographic projection.
> > This is
> > very much what Dr Wallis's formula looks like. Apparently for him it
> > is
> > only a trick leading somewhere... but then I also get lost.
> > 
> > Regards Martin V
> > 
> > PS you may want to look at
> > 
> > http://users.tkk.fi/~mvermeer/geom.pdf
> > 
> > pp 99-100 and around p. 90. Sorry it's in Fenno-ugrian formulese...
> > 
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060615/67d94308/attachment.sig>

From gerald.evenden at verizon.net  Thu Jun 15 06:46:50 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Thu, 15 Jun 2006 09:46:50 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French
	=?iso-8859-1?q?Gauss-Laborde=09projection?=
In-Reply-To: <200606142138.06087.gerald.evenden@verizon.net>
References: <C0B4D7BC.7301%ovv@hetnet.nl>
	<200606142138.06087.gerald.evenden@verizon.net>
Message-ID: <200606150946.50751.gerald.evenden@verizon.net>

On Wednesday 14 June 2006 9:38 pm, Gerald I. Evenden wrote:
	...
> This is dependent upon the accuracy of the meridianal distance algorithm
> and where lproj's should be good to about 14 digits or about .1 nm.

	Duh! Sorry, I should have said .1 um (micrometer) rather than nano.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From archer at eskimo.com  Thu Jun 15 06:53:40 2006
From: archer at eskimo.com (Curt, WE7U)
Date: Thu, 15 Jun 2006 06:53:40 -0700 (PDT)
Subject: [Proj] Discovery: libproj4 stmerc = French
	=?iso-8859-1?q?Gauss-Laborde=09projection?=
In-Reply-To: <200606150946.50751.gerald.evenden@verizon.net>
References: <C0B4D7BC.7301%ovv@hetnet.nl>
	<200606142138.06087.gerald.evenden@verizon.net>
	<200606150946.50751.gerald.evenden@verizon.net>
Message-ID: <Pine.SUN.4.58.0606150652200.29568@eskimo.com>

On Thu, 15 Jun 2006, Gerald I. Evenden wrote:

> On Wednesday 14 June 2006 9:38 pm, Gerald I. Evenden wrote:
> 	...
> > This is dependent upon the accuracy of the meridianal distance algorithm
> > and where lproj's should be good to about 14 digits or about .1 nm.
>
> 	Duh! Sorry, I should have said .1 um (micrometer) rather than nano.

Question:  Isn't "nm" also an abbreviation for nautical mile?  A bit
of a difference between nautical mile and nanometer.

--
Curt, WE7U.   APRS Client Comparisons: http://www.eskimo.com/~archer
"Lotto:    A tax on people who are bad at math." -- unknown
"Windows:  Microsoft's tax on computer illiterates." -- WE7U
"The world DOES revolve around me:  I picked the coordinate system!"


From ovv at hetnet.nl  Thu Jun 15 11:16:34 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 15 Jun 2006 20:16:34 +0200
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <200606142138.06087.gerald.evenden@verizon.net>
Message-ID: <C0B770A2.733F%ovv@hetnet.nl>

> From: "Gerald I. Evenden" <gerald.evenden-verizon.net>

>> I checked my results with an on-line calculator from professor Schuhr,
>> based on the Klotz algorithms.
>> <http://gauss.fb1.fh-frankfurt.de/cgi-bin/cgi_gk>

> I finally cased out usage of the above site and agree that within the limits
> of 6 degrees from the central meridian lproj agrees to about .1mm.
...
> With the exception of northing, lproj seems to agree to the .1mm of the site's
> display precision within the 3.5 degree range of UTM.  This range is certain
> the practical limits of TM.

I ran a script, comparing the Dozier transverse Mercator with complex Newton
iteration, and tmerc.
Everything under IEEE-754 math; differences smaller than 1e-6 have probably
lost some significance.

cnewton iteration
wgs84 ellipsoid
lat0=0; lon0=0; x0=0; y0=0; k0=1;

Searching for the maximum differences in x and y per longitude, stepping 1
degree in latitude.

lon = 0.5...[0.5]...6...[1]...12...[3]...21
   lat = 0...[1]...89

lon-lon0 (deg), lat (deg) / max diff (m)
0.5, 0 / dxmax 2.4e-9
0.5, 84 / dymax 1.5e-8
1, 1 / dxmax 5.2e-8
1, 88 / dymax 3.9e-8
1.5, 0 / dxmax 4.1e-7
1.5, 89 / dymax 3.4e-8
2, 0 / dxmax 1.81e-6
2, 16 / dymax 5.9e-8
2.5, 0 / dxmax 5.85e-6
2.5, 16 / dymax 2.3e-7
3, 0 / dxmax 1.55e-5
3, 15 / dymax 7.3e-7
3.5, 0 / dxmax 3.61e-5
3.5, 15 / dymax 1.93e-6
4, 0 / dxmax 7.63e-5
4, 15 / dymax 4.55e-6
4.5, 0 / dxmax 0.000150
4.5, 15 / dymax 9.80e-6
5, 0 / dxmax 0.000277
5, 15 / dymax 0.0000197
5.5, 0 / dxmax 0.000489
5.5, 15 / dymax 0.0000373
6, 0 / dxmax 0.000831
6, 15 / dymax 0.0000676
7, 0 / dxmax 0.00218
7, 15 / dymax 0.000198
8, 0 / dxmax 0.00516
8, 14 / dymax 0.000518
9, 0 / dxmax 0.0113
9, 14 / dymax 0.00123
10, 0 / dxmax 0.0231
10, 14 / dymax 0.00273
11, 0 / dxmax 0.045
11, 14 / dymax 0.00571
12, 0 / dxmax 0.0836
12, 14 / dymax 0.0113
15, 0 / dxmax 0.433
15, 14 / dymax 0.0695
18, 0 / dxmax 1.758
18, 13 / dymax 0.326
21, 0 / dxmax 5.99
21, 13 / dymax 1.26

So, till a longitude difference of 6 degrees tmerc has better than
millimeter accuracy. Beyond 9 degrees no longer centimeter accuracy.

Additionally: libproj's mdist (meridional distance) is very accurate, about
machine precision, compared to a formula based on the elliptical integral.
But I can't recommend mdist for eccentricities larger than about 0.9.





From gerald.evenden at verizon.net  Thu Jun 15 11:33:46 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Thu, 15 Jun 2006 14:33:46 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French
	=?iso-8859-1?q?Gauss-Laborde=09projection?=
In-Reply-To: <C0B770A2.733F%ovv@hetnet.nl>
References: <C0B770A2.733F%ovv@hetnet.nl>
Message-ID: <200606151433.46194.gerald.evenden@verizon.net>

On Thursday 15 June 2006 2:16 pm, Oscar van Vlijmen wrote:
	...
> Additionally: libproj's mdist (meridional distance) is very accurate, about
> machine precision, compared to a formula based on the elliptical integral.
> But I can't recommend mdist for eccentricities larger than about 0.9.

I don't know at what point we would be spinning off the planet.  Should I put 
a caveat about this limit?  ;-)

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From Tim.Loesch at dnr.state.mn.us  Fri Jun 16 09:04:25 2006
From: Tim.Loesch at dnr.state.mn.us (Tim Loesch)
Date: Fri, 16 Jun 2006 11:04:25 -0500
Subject: [Proj] Re: Proj Digest, Vol 25,
	Issue 12 (NOTICE - Out of the office)
Message-ID: <s492904f.036@co5.dnr.state.mn.us>

I'm out of the office and will return Tuesday June 20th. If this is a GIS technical related issue contact Chris Pouliot or Mike Tronrud.





From g at lazygranch.com  Tue Jun 13 00:09:02 2006
From: g at lazygranch.com (gary)
Date: Tue, 13 Jun 2006 00:09:02 -0700
Subject: [Proj] gdalwarp and proj.4
Message-ID: <448E648E.3030007@lazygranch.com>

I'm running gdalwarp and getting the error message
ERROR6: Unable to load PROJ.4 library (libproj.so) ...

Any clues how to fix this?


From jalopcar at gmail.com  Sat Jun 17 17:12:56 2006
From: jalopcar at gmail.com (Jaime Lopez)
Date: Sat, 17 Jun 2006 19:12:56 -0500
Subject: [Proj] gdalwarp and proj.4
In-Reply-To: <448E648E.3030007@lazygranch.com>
References: <448E648E.3030007@lazygranch.com>
Message-ID: <138315cf0606171712o4eb18b97t72d5e1e923b1fbe@mail.gmail.com>

Hi Gary,

I could fix that problem this way, you must write :

ln -s /usr/local/ /usr/local/bin

this make a link with the file libproj.so

I hope this helps you,

Jaime Lopez


2006/6/13, gary <g at lazygranch.com>:
>
> I'm running gdalwarp and getting the error message
> ERROR6: Unable to load PROJ.4 library (libproj.so) ...
>
> Any clues how to fix this?
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



-- 
Jaime Lopez
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060617/34915b42/attachment.html>

From lists at lazygranch.com  Sun Jun 18 07:26:28 2006
From: lists at lazygranch.com (gary)
Date: Sun, 18 Jun 2006 07:26:28 -0700
Subject: [Proj] gdalwarp and proj.4
In-Reply-To: <138315cf0606171712o4eb18b97t72d5e1e923b1fbe@mail.gmail.com>
References: <448E648E.3030007@lazygranch.com>
	<138315cf0606171712o4eb18b97t72d5e1e923b1fbe@mail.gmail.com>
Message-ID: <44956294.8060704@lazygranch.com>

It took a symbolic link, though not that one. I guess every build of 
GRASS is a slightly different. For Suse 10.0, this was needed.

ln -s /usr/lib/libproj.so.0.5.0 /usr/local/lib/libproj.so


Jaime Lopez wrote:
> Hi Gary,
>  
> I could fix that problem this way, you must write :
>  
> ln -s /usr/local/ /usr/local/bin
>  
> this make a link with the file libproj.so
>  
> I hope this helps you,
>  
> Jaime Lopez
> 
>  
> 2006/6/13, gary <g at lazygranch.com <mailto:g at lazygranch.com>>:
> 
>     I'm running gdalwarp and getting the error message
>     ERROR6: Unable to load PROJ.4 library (libproj.so) ...
> 
>     Any clues how to fix this?
>     _______________________________________________
>     Proj mailing list
>     Proj at lists.maptools.org <mailto:Proj at lists.maptools.org>
>     http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> 
> 
> -- 
> Jaime Lopez
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj


From gerald.evenden at verizon.net  Sun Jun 18 07:58:45 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 18 Jun 2006 10:58:45 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <uk1292h73qkoj16of51ki29qsmok4f4tuj@4ax.com>
References: <uk1292h73qkoj16of51ki29qsmok4f4tuj@4ax.com>
Message-ID: <200606181058.45970.gerald.evenden@verizon.net>

On Thursday 15 June 2006 3:10 am, Melita Kennedy wrote:
> > Cliff Mugnier wrote:
> > Melita Kennedy of ESRI informed me a couple years ago that they
> > successfully programmed Jeff Dozier's TM equations and have incorporated
> > that routine into one of the ESRI packages, I don't remember which one.
>
> David Burrows implemented a complex math version of transverse Mercator
> working from Dozier's equations. On a brief stop in the office today (he's
> on vacation), he couldn't remember any errors in Dozier's equations
> off-hand. He did mention that he could not make it work out to 90 degrees
> from the central meridian as the paper states. I think we ended up limiting
> it to 85 or 87 degrees. Next week he'll take a look at  his copy of the
> paper to see if he wrote any notes down.
>
> Melita

I managed to dig out my old work with the Dozier package---dates on the files 
are 2003.

I AGAIN compared my original copy of his original paper code and noted a few  
problems I detected several years ago:

1. I had to add a header file to all files to define the complex declaration:
typedef struct {
        double re, im;
} complex;

2. Three files did not declare complex functions---which were added.

3. Around line 70 in file tmw.c I did the following change:
/* old
     70     ms.re *= m;
     71     ms.im *= m;
     72   new */
     73     ms.re *= k_tran;
     74     ms.im *= k_tran;
     75 /* end change */
At the moment I would have to dig for my reason.

I did get the code to run but could not get it to agree with tmerc to better 
than about .1%.  Obviously, not very good.  (also in the lon < 3degree 
range).

There are a number of questionable code practices but most are unlikely to 
produce errors.  The code is VERY early K&R and would be GREATLY improved 
with updating to modern declarative standards.  Most, if not all, of the 
basic complex routines are available in either C99 library or GSL (Gnu 
Scientific Library).

After I hopefully solve my problems with the French version I will try to 
regress to my 2003 problems with Dozier.  If anyone has any news of Dozier's 
reexamining this material I would be greatly appreciative of learning of any 
errata.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From edward.hyer at nrlmry.navy.mil  Sun Jun 18 09:31:33 2006
From: edward.hyer at nrlmry.navy.mil (Hyer, Dr. Edward (Post Doc))
Date: Sun, 18 Jun 2006 09:31:33 -0700
Subject: [Proj] cs2cs for datum conversion and the "towgs84" parameter
In-Reply-To: <200606171747.k5HHkR2q017429@duke.maptools.org>
Message-ID: <0C3547C820A2AC44BD317A2DB596647F012D31@zeus.w2k.nrlmry.navy.mil>

Hi,

I got involved with this because I received some imagery in plate-carree projection which used the SAD69 datum. Interestingly, while ENVI claims to support this projection, IDL does not, which is odd since they are supposed to be the same product. For my application, I am working with a large list of points for which I need imagery values, so IDL was my choice, and I found I could do the datum conversion with a shell script using cs2cs.

Googled, googled, googled, someone must have done this before. And found different solutions:
1)  'cs2cs +proj=latlong +datum=WGS84 +to +proj=latlong +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +no_defs -f "%.5f" -w5 '
2) People who were dealing with UTM coordinates had a different value for +towgs84 : 75,1,44
3) This guy's doctoral dissertation (in Portuguese) (http://www.teses.usp.br/teses/disponiveis/3/3138/tde-06122002-115813/publico/03capitulo02.pdf) claims that SAD69 to WGS84 is nothing but a shift of -66.87 meters X, +4.37 meters Y, -38.52 meters Z. He also states that this is by Presidential Decree. Is this like the "pi=3" thing here in the States?

The error with getting the datum conversion wrong is below the resolution of any of my data sets, so I don't have easy ways to check my conversion. However, since my project here is actually about the consequences of this poor spatial resolution, I think I should try and get it right. Can someone help?

Obrigado antes,

Dr. Edward J. Hyer
Post-Doctoral Researcher
Naval Research Laboratory
Marine Meteorology Division
7 Grace Hopper Avenue, Stop 2
Monterey, California 93940
831-656-4023
FAX 831-656-4769
edward.hyer at nrlmry.navy.mil




From gerald.evenden at verizon.net  Sun Jun 18 13:14:16 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 18 Jun 2006 16:14:16 -0400
Subject: [Proj] cs2cs for datum conversion and the "towgs84" parameter
In-Reply-To: <0C3547C820A2AC44BD317A2DB596647F012D31@zeus.w2k.nrlmry.navy.mil>
References: <0C3547C820A2AC44BD317A2DB596647F012D31@zeus.w2k.nrlmry.navy.mil>
Message-ID: <200606181614.16817.gerald.evenden@verizon.net>

On Sunday 18 June 2006 12:31 pm, Hyer, Dr. Edward (Post Doc) wrote:
> Hi,
>
> I got involved with this because I received some imagery in plate-carree
> projection which used the SAD69 datum. Interestingly, while ENVI claims to
> support this projection, IDL does not, which is odd since they are supposed
> to be the same product. For my application, I am working with a large list
> of points for which I need imagery values, so IDL was my choice, and I
> found I could do the datum conversion with a shell script using cs2cs.

Within standard proj/libproj system, Plate-Carree is referred to a Equidistant 
Cylindrical or +proj=eqc.  There are many names for this projection with some 
based upon specifying a latitude of true scale.

> Googled, googled, googled, someone must have done this before. And found
> different solutions: 1)  'cs2cs +proj=latlong +datum=WGS84 +to
> +proj=latlong +ellps=GRS67 +towgs84=-57,1,-41,0,0,0,0 +no_defs -f "%.5f"

I do not believe you did a projection in the above, just a geographic 
coordinate to geographic coordinate conversion while shifting datums.  If 
+proj=eqc were selected it is only in spherical form so selecting +ellps=xxx 
only means that the major axis (a) of xxx is used as radius of the sphere.

> -w5 ' 2) People who were dealing with UTM coordinates had a different value
> for +towgs84 : 75,1,44 3) This guy's doctoral dissertation (in Portuguese)
> (http://www.teses.usp.br/teses/disponiveis/3/3138/tde-06122002-115813/publi
>co/03capitulo02.pdf) claims that SAD69 to WGS84 is nothing but a shift of
> -66.87 meters X, +4.37 meters Y, -38.52 meters Z. He also states that this
> is by Presidential Decree. Is this like the "pi=3" thing here in the
> States?

I feel that confusion of the above is related to persistant lack of 
documentation/education that will separate the concepts of projections and 
datum shifts.  But, alas, I am beating an old drum.  Sorry.

> The error with getting the datum conversion wrong is below the resolution
> of any of my data sets, so I don't have easy ways to check my conversion.
> However, since my project here is actually about the consequences of this
> poor spatial resolution, I think I should try and get it right. Can someone
> help?
>
> Obrigado antes,
>
> Dr. Edward J. Hyer
> Post-Doctoral Researcher
> Naval Research Laboratory
> Marine Meteorology Division
> 7 Grace Hopper Avenue, Stop 2
> Monterey, California 93940
> 831-656-4023
> FAX 831-656-4769
> edward.hyer at nrlmry.navy.mil
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From cjmce at lsu.edu  Sun Jun 18 14:21:27 2006
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Sun, 18 Jun 2006 16:21:27 -0500
Subject: [Proj] cs2cs for datum conversion and the "towgs84" parameter
Message-ID: <OF841E052E.13FC3257-ON86257191.00755233-86257191.0075524C@lsu.edu>





In general, geodetic relationships, formulae, and parameters as you list
below "by Presidential Decree" are the normal and proper way of providing
order in a legal manner for a nation.  We do the same through the Federal
Register and the various Revised Statues of our 50 states.  The magnitude
of the values are within the expected range that DMA/NIMA/NGA posted in TR
8350.2, although the U.S. Military did not go to that level of precision.
I would expect the centimeter-level of precision to be for an area no
larger than a province/state, if even that large.

Some real property rights are conveyed via descriptions with only
coordinates, particularly rights to explore and develop mineral rights,
including offshore hydrocarbons.  In the U.S. Gulf of Mexico, we do it with
"NADCON" as published in the Federal Register for offshore lease blocks
that sell via sealed bids for hundreds of millions of dollars through the
U.S. Minerals Management Service in Kenner, LA.  Same goes for Trinidad &
Tobago, Angola, Nigeria, Greece, Indonesia, etc.

The concept is well-known; I cannot speak for the specific values of the
parameters listed.  No, it is not the same as Pi=3.0.

De nada,

Clifford J. Mugnier, C.P., C.M.S.
National Director (2006-2008),
Photogrammetric Applications Division
American Society for Photogrammetry and Remote Sensing
and
Chief of Geodesy,
CENTER FOR GEOINFORMATICS
Department of Civil Engineering
CEBA 3223A
LOUISIANA STATE UNIVERSITY
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic]
Voice and Facsimile:  (225) 578-4474 [Research]
Honorary Life Member of the
Louisiana Society of Professional Surveyors
======================================================
http://www.asprs.org/resources/GRIDS/
http://appl003.lsu.edu/eng/ceeweb.nsf/$Content/Mugnier
======================================================



Hi,

I got involved with this because I received some imagery in plate-carree
projection which used the SAD69 datum. Interestingly, while ENVI claims to
support this projection, IDL does not, which is odd since they are supposed
to be the same product. For my application, I am working with a large list
of points for which I need imagery values, so IDL was my choice, and I
found I could do the datum conversion with a shell script using cs2cs.

Googled, googled, googled, someone must have done this before. And found
different solutions:
1)  'cs2cs +proj=latlong +datum=WGS84 +to +proj=latlong +ellps=GRS67
+towgs84=-57,1,-41,0,0,0,0 +no_defs -f "%.5f" -w5 '
2) People who were dealing with UTM coordinates had a different value for
+towgs84 : 75,1,44
3) This guy's doctoral dissertation (in Portuguese)
(http://www.teses.usp.br/teses/disponiveis/3/3138/tde-06122002-115813/publico/03capitulo02.pdf)
 claims that SAD69 to WGS84 is nothing but a shift of -66.87 meters X,
+4.37 meters Y, -38.52 meters Z. He also states that this is by
Presidential Decree. Is this like the "pi=3" thing here in the States?

The error with getting the datum conversion wrong is below the resolution
of any of my data sets, so I don't have easy ways to check my conversion.
However, since my project here is actually about the consequences of this
poor spatial resolution, I think I should try and get it right. Can someone
help?

Obrigado antes,

Dr. Edward J. Hyer
Post-Doctoral Researcher
Naval Research Laboratory
Marine Meteorology Division
7 Grace Hopper Avenue, Stop 2
Monterey, California 93940
831-656-4023
FAX 831-656-4769
edward.hyer at nrlmry.navy.mil



From gerald.evenden at verizon.net  Sun Jun 18 18:28:13 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 18 Jun 2006 21:28:13 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <uk1292h73qkoj16of51ki29qsmok4f4tuj@4ax.com>
References: <uk1292h73qkoj16of51ki29qsmok4f4tuj@4ax.com>
Message-ID: <200606182128.13566.gerald.evenden@verizon.net>

The French Transverse Mercator (NT/G 76 publication) is now in libproj4 on my 
desk---+proj=ftmerc .  It extends well beyond the 5 degree limit of tmerc but 
starts to fail with low latitudes and extended longitudes beyond 40 degrees.  
It compares with the German online site within +-0.2mm.  Unfortunately the 
German site does not display major axis and ellipsoid parameters so it is 
possible that errors in this range are due to minor variations of these 
figures and/or how they are specified.

ftmerc has forward and inverse mode.

This release of libproj4 will not be on my web site until the documentation is 
brought up to date and the new output formating routine is installed.

If anyone wants a prelim copy of proj_ftmerc.c and proj_psi.c, I can email 
these files.

I am not going to do anything at the moment with the Dozier method.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From hamish_nospam at yahoo.com  Sun Jun 18 18:39:22 2006
From: hamish_nospam at yahoo.com (Hamish)
Date: Mon, 19 Jun 2006 13:39:22 +1200
Subject: [Proj] cs2cs for datum conversion and the "towgs84" parameter
In-Reply-To: <200606181614.16817.gerald.evenden@verizon.net>
References: <0C3547C820A2AC44BD317A2DB596647F012D31@zeus.w2k.nrlmry.navy.mil>
	<200606181614.16817.gerald.evenden@verizon.net>
Message-ID: <20060619133922.049c533e.hamish_nospam@yahoo.com>

Gerald I. Evenden wrote:

> I feel that confusion of the above is related to persistant lack of 
> documentation/education that will separate the concepts of projections
> and datum shifts.  But, alas, I am beating an old drum.  Sorry.


Hi,

I have attempted to gather some relevant information at the link below;
expansion of the wiki page with further documentation (links,
paragraphs) suited for new users is warmly encouraged, as is linking to
the page if you find it useful or need to refer someone to a quick cite.
It needn't be GRASS specific and will probably end up being better
written if it isn't.

http://grass.gdf-hannover.de/wiki/Gis_Concepts#Background_material


> education that will separate the concepts of projections and datum
> shifts.

Such a paragraph written by an expert hand could be a quite useful
addition.


regards,
Hamish


From ovv at hetnet.nl  Mon Jun 19 05:09:30 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Mon, 19 Jun 2006 14:09:30 +0200
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <200606181058.45970.gerald.evenden@verizon.net>
Message-ID: <C0BC609A.73AB%ovv@hetnet.nl>

> From: Strebe-aol.com

> The "trick" is this: Wallis uses the polar stereographic because it's the
> simplest way to get a conformal mapping to the plane. Once the ellipsoid is
> mapped, he treats the plane as the complex plane and looks for a complex
> "co-latitude" which can be used with the polar stereographic, but this time
> treating the polar stereographic as function of a complex variable.

Now where have I seen this again?
Ah yes:

"Transverse Mercator Map Projection of the Spheroid Using Transformation of
the Elliptic Integral software (NPO-18086)."
"... Using the colatitude (complement of latitude) and the longitude
(departure), the initial step is to map the point to the North Polar
Stereographic Projection. The closed-form, analytic function that coincides
with the North Polar Stereographic Projection of the spheroid along the
principal meridian is put into a Newton-Raphson iteration that solves for
the tangent of one half the parametric colatitude, generalized to the
complex plane. ..."
Etcetera.

There is documentation available ($) and Fortran software ($). Export out of
the USA is forbidden.
"The program was developed in 1989."
<http://www.openchannelfoundation.org/projects/Transverse_Mercator_Map_Proje
c/>

Texts between "" are quotes from web pages found at the Open Channel
Foundation.




From ovv at hetnet.nl  Mon Jun 19 05:09:55 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Mon, 19 Jun 2006 14:09:55 +0200
Subject: [Proj] cs2cs for datum conversion and the "towgs84" parameter
In-Reply-To: <0C3547C820A2AC44BD317A2DB596647F012D31@zeus.w2k.nrlmry.navy.mil>
Message-ID: <C0BC60B3.73AB%ovv@hetnet.nl>

> From: "Hyer, Dr. Edward \(Post Doc\)" <edward.hyer-nrlmry.navy.mil>

> 3) This guy's doctoral dissertation (in Portuguese)
> (http://www.teses.usp.br/teses/disponiveis/3/3138/tde-06122002-115813/publico/
> 03capitulo02.pdf) claims that SAD69 to WGS84 is nothing but a shift of -66.87
> meters X, +4.37 meters Y, -38.52 meters Z. He also states that this is by
> Presidential Decree. Is this like the "pi=3" thing here in the States?

You can find the decree at:
<http://www.ibge.gov.br/home/geociencias/geodesia/default_normas.shtm?c=14>
Or follow from the main page the menu Geociências > Geodésia, then
Documentação > Especificações e Normas.
It's a file "rpr-2389.pdf" with:
"RESOLUÇÃO No 23, DE 21 DE FEVEREIRO DE 1989"




From gerald.evenden at verizon.net  Mon Jun 19 07:42:51 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Mon, 19 Jun 2006 10:42:51 -0400
Subject: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <C0BC609A.73AB%ovv@hetnet.nl>
References: <C0BC609A.73AB%ovv@hetnet.nl>
Message-ID: <200606191042.51786.gerald.evenden@verizon.net>

On Monday 19 June 2006 8:09 am, Oscar van Vlijmen wrote:
	...
>
> There is documentation available ($) and Fortran software ($). Export out
> of the USA is forbidden.
> "The program was developed in 1989."
> <http://www.openchannelfoundation.org/projects/Transverse_Mercator_Map_Proj
>e c/>
>
> Texts between "" are quotes from web pages found at the Open Channel
> Foundation.

Sounds like a private clone of NTIS where a 18 minute VHS video tape on charts 
and projections sells for $110US.  I believe the above goes for $11US for the 
documentation and $50US for the FORTRAN code.

At least NTIS does not forbid export.

What BS and complete nonsense!!

Interesting: I could not find an author associated with the product--maybe it 
is Dr. Wallis.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From strebe at aol.com  Mon Jun 19 09:59:59 2006
From: strebe at aol.com (strebe at aol.com)
Date: Mon, 19 Jun 2006 12:59:59 -0400
Subject: [Proj] Re: Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <C0BC609A.73AB%ovv@hetnet.nl>
Message-ID: <8C861D8EEDA66FB-CBC-408@mblk-d38.sysops.aol.com>


I doubt the Open Channel Foundation source code has anything to do with 
Wallis unless the program was written by someone else he communicated 
with without his knowledge. Dr. Wallis has never tried to sell me 
anything; never mentioned the existence of commercial source code; and 
has communicated with me about his own implementation, including 
algorithmic subtleties and requests for independent confirmation of 
accuracy. He also considers the method to be "obvious" and not worth 
publication on its own. On the other hand, either he believes he 
originated the method, or else wanted me to believe he did.

I can't say whether the product mentioned before came first, or whether 
Dr. Wallis's method came first. I made Dr. Wallis's acquaintance in 
1996, and I know he had written his implementation years before that, 
though I don't know how many. I'll contact him about the Open Channel 
Foundation program.

$61 for source code and documentation seems modest enough, but the 
inane export restrictions won't help Mr. van Vlijmen. While I will not 
supply source code, I'm happy to answer specific questions about 
implementing the method.

Regards,
-- daan Strebe


-----Original Message-----
From: Gerald I. Evenden <gerald.evenden at verizon.net>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Mon, 19 Jun 2006 10:42:51 -0400
Subject: Re: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde

...

Interesting: I could not find an author associated with the 
product--maybe it is Dr. Wallis.

-----

and

-----

-----Original Message-----
From: Oscar van Vlijmen <ovv at hetnet.nl>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Mon, 19 Jun 2006 14:09:30 +0200
Subject: Re: [Proj] Discovery: libproj4 stmerc = French Gauss-Laborde

   > From: Strebe-aol.com

> The "trick" is this: Wallis uses the polar stereographic because it's 
the
> simplest way to get a conformal mapping to the plane. Once the 
ellipsoid is
> mapped, he treats the plane as the complex plane and looks for a 
complex
> "co-latitude" which can be used with the polar stereographic, but 
this time
> treating the polar stereographic as function of a complex variable.

Now where have I seen this again?
Ah yes:

"Transverse Mercator Map Projection of the Spheroid Using 
Transformation of
the Elliptic Integral software (NPO-18086)."
"... Using the colatitude (complement of latitude) and the longitude
(departure), the initial step is to map the point to the North Polar
Stereographic Projection. The closed-form, analytic function that 
coincides
with the North Polar Stereographic Projection of the spheroid along the
principal meridian is put into a Newton-Raphson iteration that solves 
for
the tangent of one half the parametric colatitude, generalized to the
complex plane. ..."
Etcetera.

There is documentation available ($) and Fortran software ($). Export 
out of
the USA is forbidden.
"The program was developed in 1989."
<http://www.openchannelfoundation.org/projects/Transverse_Mercator_Map_Pr
oje
c/>

Texts between "" are quotes from web pages found at the Open Channel
Foundation.


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


________________________________________________________________________
Check out AOL.com today. Breaking news, video search, pictures, email 
and IM. All on demand. Always Free.



From gerald.evenden at verizon.net  Mon Jun 19 10:43:21 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Mon, 19 Jun 2006 13:43:21 -0400
Subject: [Proj] Re: Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <8C861D8EEDA66FB-CBC-408@mblk-d38.sysops.aol.com>
References: <8C861D8EEDA66FB-CBC-408@mblk-d38.sysops.aol.com>
Message-ID: <200606191343.21728.gerald.evenden@verizon.net>

On Monday 19 June 2006 12:59 pm, strebe at aol.com wrote:
> I doubt the Open Channel Foundation source code has anything to do with
> Wallis unless the program was written by someone else he communicated
> with without his knowledge. Dr. Wallis has never tried to sell me
> anything; never mentioned the existence of commercial source code; and
> has communicated with me about his own implementation, including
> algorithmic subtleties and requests for independent confirmation of
> accuracy. He also considers the method to be "obvious" and not worth
> publication on its own. On the other hand, either he believes he
> originated the method, or else wanted me to believe he did.

Sorry, my statement was only idle speculation because of the similarity of the 
subject and the fact Dr. Wallis promised to publish the code several years 
ago.  It could have been an outlet for him and probably easier than going 
thought the pains of a professional publication---peer review, etc..

> I can't say whether the product mentioned before came first, or whether
> Dr. Wallis's method came first. I made Dr. Wallis's acquaintance in
> 1996, and I know he had written his implementation years before that,
> though I don't know how many. I'll contact him about the Open Channel
> Foundation program.

I did post a letter to Dr. Wallis a few days ago.  I explained my interests 
and promised that I would not release any material related to his work 
without his prior permission.  The reason for a letter was to communicate 
information related to libproj4 web site that is difficult to convey 
verbally.  I hope he has not moved.

> $61 for source code and documentation seems modest enough, but the
> inane export restrictions won't help Mr. van Vlijmen. While I will not
> supply source code, I'm happy to answer specific questions about
> implementing the method.

My objection to the ten bucks for the documentation reminds me of similar 
costs for NTIS material and only getting one or two pages of a totally 
worthless dissertation.  If the source code is commercially useful than it is 
worth more than $50 but seems steep to me for just academic interest.  
Especially considering the amount and often high quality of material 
available on the net for nothing.  There also seem to be chance of hidden 
strings to seeing the material that might compromise my being able to use and 
document derived material.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From mkennedy2 at earthlink.net  Tue Jun 20 11:02:11 2006
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Tue, 20 Jun 2006 11:02:11 -0700 (GMT-07:00)
Subject: [Proj] Re: Re: Discovery: libproj4 stmerc = French Gauss-Laborde
Message-ID: <17844722.1150826531608.JavaMail.root@elwamui-muscovy.atl.sa.earthlink.net>

Here's a website that does list the author as Dr. Wallis:

http://www.nttc.edu/cosmic/pub/authors.html

Yet another website mentioned that "international" prices were $22/doc, $100/code. 

http://www.nttc.edu/cosmic/abstracts/npo-18086.html

Melita

>------------------------------
>
>Date: Mon, 19 Jun 2006 13:43:21 -0400
>From: "Gerald I. Evenden" <gerald.evenden at verizon.net>
>Subject: Re: [Proj] Re: Discovery: libproj4 stmerc = French
>	Gauss-Laborde
>To: "PROJ.4 and general Projections Discussions"
>	<proj at lists.maptools.org>
>Message-ID: <200606191343.21728.gerald.evenden at verizon.net>
>
>On Monday 19 June 2006 12:59 pm, strebe at aol.com wrote:
>> I doubt the Open Channel Foundation source code has anything to do with
>> Wallis unless the program was written by someone else he communicated
>> with without his knowledge. Dr. Wallis has never tried to sell me
>> anything; never mentioned the existence of commercial source code; and
>> has communicated with me about his own implementation, including
>> algorithmic subtleties and requests for independent confirmation of
>> accuracy. He also considers the method to be "obvious" and not worth
>> publication on its own. On the other hand, either he believes he
>> originated the method, or else wanted me to believe he did.
>
>Sorry, my statement was only idle speculation because of the similarity of the 
>subject and the fact Dr. Wallis promised to publish the code several years 
>ago.  It could have been an outlet for him and probably easier than going 
>thought the pains of a professional publication---peer review, etc..
>
>> I can't say whether the product mentioned before came first, or whether
>> Dr. Wallis's method came first. I made Dr. Wallis's acquaintance in
>> 1996, and I know he had written his implementation years before that,
>> though I don't know how many. I'll contact him about the Open Channel
>> Foundation program.
>
>I did post a letter to Dr. Wallis a few days ago.  I explained my interests 
>and promised that I would not release any material related to his work 
>without his prior permission.  The reason for a letter was to communicate 
>information related to libproj4 web site that is difficult to convey 
>verbally.  I hope he has not moved.
>
>> $61 for source code and documentation seems modest enough, but the
>> inane export restrictions won't help Mr. van Vlijmen. While I will not
>> supply source code, I'm happy to answer specific questions about
>> implementing the method.
>
>My objection to the ten bucks for the documentation reminds me of similar 
>costs for NTIS material and only getting one or two pages of a totally 
>worthless dissertation.  If the source code is commercially useful than it is 
>worth more than $50 but seems steep to me for just academic interest.  
>Especially considering the amount and often high quality of material 
>available on the net for nothing.  There also seem to be chance of hidden 
>strings to seeing the material that might compromise my being able to use and 
>document derived material.
>
>-- 
>Jerry and the low-riders: Daisy Mae and Joshua
>"Cogito cogito ergo cogito sum"
>   Ambrose Bierce, The Devil's Dictionary
>
>
>------------------------------



From holl at gdf-hannover.de  Wed Jun 21 03:11:19 2006
From: holl at gdf-hannover.de (Stephan Holl)
Date: Wed, 21 Jun 2006 12:11:19 +0200
Subject: [Proj] Crosscompiling proj w/ nad datumgrids fails
Message-ID: <20060621121119.67a7c905@butan.gdf-hannover.de>

Dear list,

I try to crosscompile proj (with mingw under linux for win) with the
proj-datumgrid-1.3.tar.gz[1] enabled during compilation.

Consequently this fails because it needs nad2bin during creation of the
nad-grid-files. (nad2bin.exe is only available and not much helpful
here).

Is there another way to crosscompile proj with the datum-grids enabled?

Thanks for your help.

	Stephan

[1] ftp://ftp.remotesensing.org/proj/proj-datumgrid-1.3.zip

-- 
GDF Hannover - Solutions for spatial data analysis and remote sensing
Hannover Office      -     Mengendamm 16d      -     D-30177 Hannover
Internet: www.gdf-hannover.de      -      Email: holl at gdf-hannover.de
Phone : ++49-(0)511.39088507       -        Fax: ++49-(0)511.39088508


From gerald.evenden at verizon.net  Wed Jun 21 11:49:45 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 21 Jun 2006 14:49:45 -0400
Subject: [Proj] Re: Re: Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <17844722.1150826531608.JavaMail.root@elwamui-muscovy.atl.sa.earthlink.net>
References: <17844722.1150826531608.JavaMail.root@elwamui-muscovy.atl.sa.earthlink.net>
Message-ID: <200606211449.46045.gerald.evenden@verizon.net>

On Tuesday 20 June 2006 2:02 pm, Melita Kennedy wrote:
> Here's a website that does list the author as Dr. Wallis:
>
> http://www.nttc.edu/cosmic/pub/authors.html
>
> Yet another website mentioned that "international" prices were $22/doc,
> $100/code.
>
> http://www.nttc.edu/cosmic/abstracts/npo-18086.html
>
> Melita
>
> >------------------------------
> >
> >Date: Mon, 19 Jun 2006 13:43:21 -0400
> >From: "Gerald I. Evenden" <gerald.evenden at verizon.net>
> >Subject: Re: [Proj] Re: Discovery: libproj4 stmerc = French
> >	Gauss-Laborde
> >To: "PROJ.4 and general Projections Discussions"
> >	<proj at lists.maptools.org>
> >Message-ID: <200606191343.21728.gerald.evenden at verizon.net>
> >
> >On Monday 19 June 2006 12:59 pm, strebe at aol.com wrote:
> >> I doubt the Open Channel Foundation source code has anything to do with
> >> Wallis unless the program was written by someone else he communicated
> >> with without his knowledge. Dr. Wallis has never tried to sell me
> >> anything; never mentioned the existence of commercial source code; and
> >> has communicated with me about his own implementation, including
> >> algorithmic subtleties and requests for independent confirmation of
> >> accuracy. He also considers the method to be "obvious" and not worth
> >> publication on its own. On the other hand, either he believes he
> >> originated the method, or else wanted me to believe he did.
> >
> >Sorry, my statement was only idle speculation because of the similarity of
> > the subject and the fact Dr. Wallis promised to publish the code several
> > years ago.  It could have been an outlet for him and probably easier than
> > going thought the pains of a professional publication---peer review,
> > etc..

Well, well.  I guessed right.

NASA putting a copyright on the material---what bull shit!  Sorry, but there 
is no other appropriate description.  US tax dollars at work!!

Presumably there is no patent on the idea then redeveloping the software in 
another language is no problems---especially if one does not view the source 
code.

Sorry, but my blood pressure is starting to get out of hand so ... 

If I get a reply from Dr. Wallis I wonder what it will say?

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From gerald.evenden at verizon.net  Wed Jun 21 12:55:45 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 21 Jun 2006 15:55:45 -0400
Subject: [Proj] Re: Re: Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <17844722.1150826531608.JavaMail.root@elwamui-muscovy.atl.sa.earthlink.net>
References: <17844722.1150826531608.JavaMail.root@elwamui-muscovy.atl.sa.earthlink.net>
Message-ID: <200606211555.45991.gerald.evenden@verizon.net>

On Tuesday 20 June 2006 2:02 pm, Melita Kennedy wrote:
> Here's a website that does list the author as Dr. Wallis:
>
> http://www.nttc.edu/cosmic/pub/authors.html
>
> Yet another website mentioned that "international" prices were $22/doc,
> $100/code.
>
> http://www.nttc.edu/cosmic/abstracts/npo-18086.html
>
> Melita
	
Another item from the above:

"DISTRIBUTION MEDIA: 5.25 Inch IBM PC DOS Format Diskette"

I have three computers in my house and not a one of them has a floppy 
disk---5.25 nor 3.5---especially 5.25.  Threw all that stuff out a long time 
ago.  So I am safe from seeing the source code.

The distribution outfit must be in the dark age.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From dmorissette at mapgears.com  Wed Jun 21 13:49:00 2006
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Wed, 21 Jun 2006 16:49:00 -0400
Subject: [Proj] lists.maptools.org problems
Message-ID: <4499B0BC.30505@mapgears.com>

You may have noticed delays with the delivery of some messages to this 
list and other maptools.org lists, this is due to some problems we are 
having with the list server and that we are working to resolve.

In the meantime, the contents of the mail queue is being flushed... 
slowly... sorry about this.

Daniel
-- 
Daniel Morissette
http://www.mapgears.com/


From martin.vermeer at hut.fi  Thu Jun 22 00:37:46 2006
From: martin.vermeer at hut.fi (Martin Vermeer)
Date: Thu, 22 Jun 2006 10:37:46 +0300
Subject: [Proj] Re: libproj4 stmerc = French Gauss-Laborde projection
In-Reply-To: <1150363658.29975.38.camel@geo9.hut.fi>
References: <4c7.1703e82.31c27cc9@aol.com>
	<1150363658.29975.38.camel@geo9.hut.fi>
Message-ID: <1150961866.17884.19.camel@geo9.hut.fi>

On Thu, 2006-06-15 at 12:27 +0300, Martin Vermeer wrote:
> On Thu, 2006-06-15 at 05:05 -0400, Strebe at aol.com wrote:
> > 
> > I'm not lost. I've analyzed the method and programmed it. It works
> > fine.
> > 
> > Yes, p is the parametric co-latitude in the first formula. It's wrong
> > to use the same variable in the later formulae because p refers to
> > something else there -- in fact, it's a complex variable in the later
> > instances.
> > 
> > The "trick" is this: Wallis uses the polar stereographic because it's
> > the simplest way to get a conformal mapping to the plane. Once the
> > ellipsoid is mapped, he treats the plane as the complex plane and
> > looks for a complex "co-latitude" which can be used with the polar
> > stereographic, but this time treating the polar stereographic as
> > function of a complex variable. The reason he does this is (a) to
> > preserve conformality; and (b) so that the central meridian (in which
> > the imaginary axis is 0) maps back to the parametric colatitude. At
> > this point the ellipsoid is mapped conformally in such a way that
> > leaves the central meridian effectively unmapped.
> > 
> > Leaving the complex plane aside, using the colatitude as the parameter
> > to the elliptic integral of the second kind gives the distance from
> > the pole to the colatitude. Since this odd mapping Wallis contrived
> > effectively leaves the central meridian unmapped, and since any
> > analytic function applied to a conformal mapping results in a
> > conformal mapping, and since the elliptic integral has an analytic
> > form, all that is left is to push the mapping through the complex form
> > of the elliptic integral of the second kind. This "straightens out"
> > the central meridian to its true differential lengths whilst dragging
> > the whole complex plane with it in a conformal fashion. The result
> > must be the transverse Mercator, since the central meridian is
> > projected with correct scale and since a conformal projection is
> > unique except with respect to scale and rotation.
> > 
> > Regards,
> > -- daan Strebe
> > 
> 
> Ah! But that's precisely what I have been doing numerically, using a
> polynomial expansion rather than an elliptic integral! (And starting
> from classical Mercator rather than stereographic, so it will run into
> problems at high latitudes.) It's essentially solving a boundary value
> problem, with the set of PDEs being the Cauchy-Riemann conformity
> conditions and the central meridian the boundary.
> 
> I suppose I have to get it written up in english ;-)


Just found my Matlab routines for playing with this. Posted them here:

http://users.tkk.fi/~mvermeer/gk.zip

You run it as 

>> gkmain(phi, lab, [phimin phimax delta maxk refphi]);

e.g.

>> gkmain(60, 5, [55 65 0.5 12 60])

(lab is the distance from the central meridian)

With this I have also obtained sub-millimeter precision (in typical
situations). Yes, it breaks down at the poles due to using Mercator as
the starting projection. Replacing this by stereographic as Dr Wallis
did, shouldn't be hard.

Using a polynomial expansion (instead of the elliptic integral /
Newton-Raphson thing) has the advantage of simplicity in implementation.
One disadvantage that I noticed is, that the normal matrix for
estimating the coefficients gets poorly conditioned for expansion degree
maxk = 15 or more.

I used this code in an exercise for my students; in a production
environment you would print out and hardwire the estimated coefficients
for the area of interest into your code.

The exercise instruction (in Finnish :) at

http://users.tkk.fi/~mvermeer/kotiharjB.pdf


- Martin

> > 
> > In a message dated 6/15/06 01:18:47, martin.vermeer at hut.fi writes:
> > 
> > 
> > > On Wed, 2006-06-14 at 13:50 -0400, strebe at aol.com wrote:
> > > > Hm. I didn't know about that web page. Obviously it's wrong -- for
> > > some
> > > > reason "p" appears in several different roles. I tend to think
> > > that's
> > > > an error in conversion to a web page. (I see that the entire blurb
> > > is a
> > > > single graphic, not HTML mark-up.) Certainly he's been pedantic
> > > and
> > > > precise in all his communications with me.
> > > >
> > > > The p/2 exponent should read (e/2), where e is the eccentricity.
> > > 
> > > Yes, I agree.
> > > 
> > > > Use some other variable (perhaps p') in place of p in "Then, the
> > > > complex variable tan (p/2) can be obtained..." and "...yields the
> > > > argument p..."
> > > 
> > > 
> > > Actually the argument p is simply the (ellipsoidal) co-latitude
> > > 90d - phi.
> > > 
> > > The common expression in u and v corresponds to exp(psi), where psi
> > > is
> > > the _isometric latitude_, i.e., essentially the "northing" in a
> > > traditional (non-transverse) Mercator map plane.
> > > 
> > > Isometric latitude and longitude (psi, lambda) together as (x,y)
> > > co-ordinates in a plane define a conformal mapping from the curved
> > > Earth's surface. Using (psi, lambda) directly as rectangular
> > > co-ordinates produces classical Mercator. Using
> > > 
> > > u + iv = exp(psi + i * lambda)
> > > 
> > > i.e., polar co-ordinates, produces the stereographic projection.
> > > This is
> > > very much what Dr Wallis's formula looks like. Apparently for him it
> > > is
> > > only a trick leading somewhere... but then I also get lost.
> > > 
> > > Regards Martin V
> > > 
> > > PS you may want to look at
> > > 
> > > http://users.tkk.fi/~mvermeer/geom.pdf
> > > 
> > > pp 99-100 and around p. 90. Sorry it's in Fenno-ugrian formulese...
> > > 
> > 
> > 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 191 bytes
Desc: This is a digitally signed message part
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060622/7ff908b6/attachment.sig>

From Strebe at aol.com  Thu Jun 22 01:23:26 2006
From: Strebe at aol.com (Strebe at aol.com)
Date: Thu, 22 Jun 2006 04:23:26 EDT
Subject: [Proj] Re: libproj4 stmerc = French Gauss-Laborde projection
Message-ID: <529.9a8852.31cbad7e@aol.com>


I heartily recommend the AGM method for computing the elliptic integral. It's 
fast and accurate everywhere, and can be implemented to arbitrary precision. 
Polynomials seem a poor choice for this.

See Abramowitz & Stegun, p. 598 (17.6). Bulirsch (1965) supplies an excellent 
implementation of the AGM, but you can use it as described in Abramowitz & 
Stegun with great efficiency.

Regards
-- daan Strebe


In a message dated 6/22/06 00:39:37, martin.vermeer at hut.fi writes:


> On Thu, 2006-06-15 at 12:27 +0300, Martin Vermeer wrote:
> > On Thu, 2006-06-15 at 05:05 -0400, Strebe at aol.com wrote:
> > >
> > > I'm not lost. I've analyzed the method and programmed it. It works
> > > fine.
> > >
> > > Yes, p is the parametric co-latitude in the first formula. It's wrong
> > > to use the same variable in the later formulae because p refers to
> > > something else there -- in fact, it's a complex variable in the later
> > > instances.
> > >
> > > The "trick" is this: Wallis uses the polar stereographic because it's
> > > the simplest way to get a conformal mapping to the plane. Once the
> > > ellipsoid is mapped, he treats the plane as the complex plane and
> > > looks for a complex "co-latitude" which can be used with the polar
> > > stereographic, but this time treating the polar stereographic as
> > > function of a complex variable. The reason he does this is (a) to
> > > preserve conformality; and (b) so that the central meridian (in which
> > > the imaginary axis is 0) maps back to the parametric colatitude. At
> > > this point the ellipsoid is mapped conformally in such a way that
> > > leaves the central meridian effectively unmapped.
> > >
> > > Leaving the complex plane aside, using the colatitude as the parameter
> > > to the elliptic integral of the second kind gives the distance from
> > > the pole to the colatitude. Since this odd mapping Wallis contrived
> > > effectively leaves the central meridian unmapped, and since any
> > > analytic function applied to a conformal mapping results in a
> > > conformal mapping, and since the elliptic integral has an analytic
> > > form, all that is left is to push the mapping through the complex form
> > > of the elliptic integral of the second kind. This "straightens out"
> > > the central meridian to its true differential lengths whilst dragging
> > > the whole complex plane with it in a conformal fashion. The result
> > > must be the transverse Mercator, since the central meridian is
> > > projected with correct scale and since a conformal projection is
> > > unique except with respect to scale and rotation.
> > >
> > > Regards,
> > > -- daan Strebe
> > >
> >
> > Ah! But that's precisely what I have been doing numerically, using a
> > polynomial expansion rather than an elliptic integral! (And starting
> > from classical Mercator rather than stereographic, so it will run into
> > problems at high latitudes.) It's essentially solving a boundary value
> > problem, with the set of PDEs being the Cauchy-Riemann conformity
> > conditions and the central meridian the boundary.
> >
> > I suppose I have to get it written up in english ;-)
> 
> 
> Just found my Matlab routines for playing with this. Posted them here:
> 
> http://users.tkk.fi/~mvermeer/gk.zip
> 
> You run it as
> 
> >> gkmain(phi, lab, [phimin phimax delta maxk refphi]);
> 
> e.g.
> 
> >> gkmain(60, 5, [55 65 0.5 12 60])
> 
> (lab is the distance from the central meridian)
> 
> With this I have also obtained sub-millimeter precision (in typical
> situations). Yes, it breaks down at the poles due to using Mercator as
> the starting projection. Replacing this by stereographic as Dr Wallis
> did, shouldn't be hard.
> 
> Using a polynomial expansion (instead of the elliptic integral /
> Newton-Raphson thing) has the advantage of simplicity in implementation.
> One disadvantage that I noticed is, that the normal matrix for
> estimating the coefficients gets poorly conditioned for expansion degree
> maxk = 15 or more.
> 
> I used this code in an exercise for my students; in a production
> environment you would print out and hardwire the estimated coefficients
> for the area of interest into your code.
> 
> The exercise instruction (in Finnish :) at
> 
> http://users.tkk.fi/~mvermeer/kotiharjB.pdf
> 
> 
> - Martin
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060622/25ebc4aa/attachment.html>

From hamish_nospam at yahoo.com  Thu Jun 22 02:56:50 2006
From: hamish_nospam at yahoo.com (Hamish)
Date: Thu, 22 Jun 2006 21:56:50 +1200
Subject: [Proj] Re: Re: Discovery: libproj4 stmerc = French Gauss-Laborde
In-Reply-To: <200606211449.46045.gerald.evenden@verizon.net>
References: <17844722.1150826531608.JavaMail.root@elwamui-muscovy.atl.sa.earthlink.net>
	<200606211449.46045.gerald.evenden@verizon.net>
Message-ID: <20060622215650.30ae00e2.hamish_nospam@yahoo.com>

Gerald I. Evenden wrote:

> NASA putting a copyright on the material---what bull shit!  Sorry, but
> there is no other appropriate description.  US tax dollars at work!!
> 
> Presumably there is no patent on the idea then redeveloping the
> software in another language is no problems---especially if one does
> not view the source code.


US Code title 17, ch 1, section 105:
"Copyright protection under this title is not available for any work of
the United States Government, but the United States Government is not
precluded from receiving and holding copyrights transferred to it by
assignment, bequest, or otherwise."

http://www.law.cornell.edu/uscode/html/uscode17/usc_sec_17_00000105----000-.html
http://www.law.cornell.edu/uscode/html/uscode17/usc_sec_17_00000105----000-notes.html
http://en.wikipedia.org/wiki/Work_of_the_United_States_Government
http://en.wikipedia.org/wiki/United_States_copyright_law


re. the "limited exception for national technical information service"
in the notes section- if we are talking 5.25" floppies I think it is
pretty safe to say that any 5 yr copyright period will have expired by
now!


Hamish


From EMiller at dfg.ca.gov  Thu Jun 22 08:50:35 2006
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Thu, 22 Jun 2006 08:50:35 -0700
Subject: [Proj] Re: Re: Discovery: libproj4 stmerc = French Gauss-Laborde
Message-ID: <s49a59fe.012@dfg.ca.gov>

Well, the NASA Technical Reports Server has a reference, so maybe you can get it from them (or CASI actually).  But, it'll still probably cost money for the reproduction and you may only get a copy of a source print out of the Fortran code.  But, there shouldn't be any license restriction if NASA is the clear copyright holder (which the reference claims is the case).

NTRS REFERENCE:

http://tinyurl.com/rpj37 (Document Id: 19940003196, Publication Date: Jan. 1, 1994)

GENERAL ORDERING CONTACT INFO:

http://ntrs.nasa.gov/index.cgi?method=ordering

PRICE LIST:

http://www.sti.nasa.gov/price1.pdf 

>>> hamish_nospam at yahoo.com 6/22/2006 2:56:50 AM >>>
Gerald I. Evenden wrote:

> NASA putting a copyright on the material---what bull shit!  Sorry, but
> there is no other appropriate description.  US tax dollars at work!!
> 
> Presumably there is no patent on the idea then redeveloping the
> software in another language is no problems---especially if one does
> not view the source code.


US Code title 17, ch 1, section 105:
"Copyright protection under this title is not available for any work of
the United States Government, but the United States Government is not
precluded from receiving and holding copyrights transferred to it by
assignment, bequest, or otherwise."

http://www.law.cornell.edu/uscode/html/uscode17/usc_sec_17_00000105----000-.html 
http://www.law.cornell.edu/uscode/html/uscode17/usc_sec_17_00000105----000-notes.html 
http://en.wikipedia.org/wiki/Work_of_the_United_States_Government 
http://en.wikipedia.org/wiki/United_States_copyright_law 


re. the "limited exception for national technical information service"
in the notes section- if we are talking 5.25" floppies I think it is
pretty safe to say that any 5 yr copyright period will have expired by
now!


Hamish
_______________________________________________
Proj mailing list
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj




From roger at opq.se  Mon Jun 26 05:50:04 2006
From: roger at opq.se (Roger Oberholtzer)
Date: Mon, 26 Jun 2006 14:50:04 +0200
Subject: [Proj] [A bit OT] NMEA, GGA and GGK
Message-ID: <1151326204.31088.12.camel@acme>

This is not really a proj question. But there is certainly relevant
experience on this list.

When computing locations from NMEA data, it is possible to have both GGA
and GGK records containing location information. Given the choice, is
one better to use than the other? I suspect this is very receiver
dependent. But I do not know this. Opinions?

-- 
Roger Oberholtzer

OPQ Systems AB
Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Tel: Int +46 8-615 60 20
Fax: Int +46 8-31 42 23



From gerald.evenden at verizon.net  Mon Jun 26 13:16:04 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Mon, 26 Jun 2006 16:16:04 -0400
Subject: [Proj] Re: Discovery: libproj4 stmerc = French
	=?utf-8?q?Gauss-Laborde=09projection?=
In-Reply-To: <406.47e46e2.31c0f4ab@aol.com>
References: <406.47e46e2.31c0f4ab@aol.com>
Message-ID: <200606261616.04155.gerald.evenden@verizon.net>

On Wednesday 14 June 2006 1:12 am, Strebe at aol.com wrote:
> You might contact Dr. David E. Wallis. He devised a much simpler method
> than Dozier's. I've implemented it for the full-ellipsoid. You can see a
> plot of an earth-like ellipsoid here:
>
> http://mapthematics.com/Projection%20Images/Cylindrical/Transverse%20Mercat
>or. GIF
>
> The method works for arbitrary eccentricities. Contact me privately if
> you're interested. Since it is Dr. Wallis's invention, I'll put you in
> contact with him.

I wrote to the address on the web site but letter was returned undeliverable.  
I suspect that the web page is several years old and not maintained.

Not to beat a dead horse of several years ago, I have stared at the above gif 
and it still bothers me and it does not seem real.  The cusps at the ends of 
the equator seem unnatural.  Also, why does both of the other procedures that 
we have looked at all contain discontinuities at the limits---most commonly, 
they require isometric latitude which fails at 90 degrees.  What magic twist 
allows Wallis to come up with the above map when all others want to extend to 
infinity?  Is it truly a normal transverse mercator where the scale factor is 
1. along the central meridian?  Has that been checked?  Sorry, I am still a 
skeptic until I see the math and a functional program that can demonstrate 
the conformal properties of the projection.

The cusps at the ends of the equator sure look like violations of conformality 
to me.

As previously noted, the French TM has been added to libproj4 and the Dozier 
procedure has also been pretty well conquered and will be add to 
libproj4---probably as dtmerc.  Neither of these routines will do |lat|=90 
nor |lon|=90.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From gerald.evenden at verizon.net  Mon Jun 26 13:57:04 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Mon, 26 Jun 2006 16:57:04 -0400
Subject: [Proj] Re: Discovery: libproj4 stmerc = French
	=?utf-8?q?Gauss-Laborde=09projection?=
In-Reply-To: <200606261616.04155.gerald.evenden@verizon.net>
References: <406.47e46e2.31c0f4ab@aol.com>
	<200606261616.04155.gerald.evenden@verizon.net>
Message-ID: <200606261657.04804.gerald.evenden@verizon.net>

	...
> Sorry, I am still a skeptic until I see the math and a
> functional program that can demonstrate the conformal properties of the
> projection.

And a remaining note: this projection has not been published in an any 
cartographic journal and has not been subject to normal peer review nor the 
review of subsequent readers.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From hamish_nospam at yahoo.com  Mon Jun 26 15:26:28 2006
From: hamish_nospam at yahoo.com (Hamish)
Date: Tue, 27 Jun 2006 10:26:28 +1200
Subject: [Proj] [A bit OT] NMEA, GGA and GGK
In-Reply-To: <1151326204.31088.12.camel@acme>
References: <1151326204.31088.12.camel@acme>
Message-ID: <20060627102628.62c93fa2.hamish_nospam@yahoo.com>

Roger Oberholtzer wrote:

> This is not really a proj question. But there is certainly relevant
> experience on this list.
> 
> When computing locations from NMEA data, it is possible to have both GGA
> and GGK records containing location information. Given the choice, is
> one better to use than the other? I suspect this is very receiver
> dependent. But I do not know this. Opinions?


this question is perhaps better posed to the gpsd mailing list,
  http://gpsd.berlios.de

(which is worth checking out anyway if you are thinking of NMEA parsing)


GGA is definitely the more standard - I've never heard of GGK.
RMC,GLL are worth a look as well.


My guess is that ultimately it depends on your GPS.

do a web search for "nmeafaq.txt"  It might help.



Hamish


From Strebe at aol.com  Mon Jun 26 22:36:24 2006
From: Strebe at aol.com (Strebe at aol.com)
Date: Tue, 27 Jun 2006 01:36:24 EDT
Subject: [Proj] Re: Discovery: libproj4 stmerc = French
	Gauss-Laborde	projection
Message-ID: <2d3.9b831d3.31d21dd8@aol.com>

 gerald.evenden at verizon.net writes:
(Original e-mail in full at the end.)

> 
> The cusps at the ends of the equator seem unnatural. 
> 
> ...

> The cusps at the ends of the equator sure look like violations of 
> conformality
> to me.
> 
> 
Do the cusps on the August epicycloidal or the Eisenlohr seem unnatural? If 
so, do you believe those projections are not really conformal? If not, then 
what do you think the difference is?

The position of the cusps is directly related to the eccentricity -- in fact, 
the relationship is surprisingly simple:

Longitude of cusp = (pi/2) * (1 - e) radians

The spherical form is infinite because the cusp is at the pole... which 
projects to infinity. The greater the eccentricity, the closer to the prime 
meridian starts the cusps, and the stubbier the map.


> Also, why does both of the other procedures that
> we have looked at all contain discontinuities at the limits
> 
> 
Why is 1 - sqrt (1 - k) when k approaches zero ill-conditioned when computed 
as is, but marvelously well-behaved when computed as a series? The question is 
not the mathematics of the projection. We're talking about the same 
projection, whether Dozier, Kruger, or Wallis. The question is only how the projection 
is formulated. Wallis's formulation avoids poor conditioning. They all express 
the same underlying mathematics.


> And a remaining note: this projection has not been published in an any
> cartographic journal and has not been subject to normal peer review nor the
> review of subsequent readers.
> 
> 
I think you mean to say that Wallis' formulation has not been published. 
Obviously the projection has, by any number of people over nearly two centuries.


> What magic twist
> allows Wallis to come up with the above map when all others want to extend 
> to
> infinity?
> 
> 
You are misundertanding the problem. The others don't "want" to extend to 
infinity; their accuracy simply degrades into uselessness.


> Is it truly a normal transverse mercator where the scale factor is
> 1. along the central meridian? 
> 
> 
Yes.


> Has that been checked? 
> 
> 
Yes, empirically, and yes, analytically.


> Sorry, I am still a
> skeptic until I see the math and a functional program that can demonstrate
> the conformal properties of the projection.
> 
> 
You might avail yourself of a copy of L.P. Lee's monograph, "Conformal 
Projections Based on Elliptic Functions", Cartographica, Monograph Number 16, 1976. 
Quoting verbatim from p. 97:

"The positive y-axis represents part of the equator, extending from lambda = 
0 to lambda = (pi/2)*(1-k)... At this point the equator changes smoothly from 
a straight line to a curve... The projection of the entire spheroid is shown 
in Fig. 46, again using the eccentricity of the International (Hayford) 
Spheroid. It can be seen that the entire spheroid is represented withing the finite 
area without singular points..."

If you will take your attention to page 99, you will see a rendition of the 
(only true) transverse Mercator projection for the ellipsoid, generated by 
means of Thompson's 1945 formulation, succeeding across the entire ellipsoid 
because Lee (or someone) took the time to reformulate the problematic regions to 
make them suitable for calculation. The diagram is indistinguishable from the 
one I posted online and drew using Wallis's formulation.

Dozier seems to follow the formulation of Thompson, more or less, which is 
probably why it runs into trouble at the extremes and is certainly why it's more 
complicated than necessary. Wallis solves the boundary condition in a 
different way. It's not without its problems; you need to find a root which, for 
arbitrary eccentricities, defies any formulaic seed value. Nonetheless that can be 
solved efficiently in most cases and merely solved in all cases. There are 
one or two places where one must be careful of numeric techniques, like many 
other projections.

Regards,
-- daan Strebe


In a message dated 6/26/06 13:22:06, gerald.evenden at verizon.net writes:



> And a remaining note: this projection has not been published in an any
> cartographic journal and has not been subject to normal peer review nor the
> review of subsequent readers.
> 
> 


> On Wednesday 14 June 2006 1:12 am, Strebe at aol.com wrote:
> > You might contact Dr. David E. Wallis. He devised a much simpler method
> > than Dozier's. I've implemented it for the full-ellipsoid. You can see a
> > plot of an earth-like ellipsoid here:
> >
> > 
> http://mapthematics.com/Projection%20Images/Cylindrical/Transverse%20Mercat
> >or. GIF
> >
> > The method works for arbitrary eccentricities. Contact me privately if
> > you're interested. Since it is Dr. Wallis's invention, I'll put you in
> > contact with him.
> 
> I wrote to the address on the web site but letter was returned 
> undeliverable. 
> I suspect that the web page is several years old and not maintained.
> 
> Not to beat a dead horse of several years ago, I have stared at the above 
> gif
> and it still bothers me and it does not seem real.  The cusps at the ends of
> the equator seem unnatural.  Also, why does both of the other procedures 
> that
> we have looked at all contain discontinuities at the limits---most commonly,
> they require isometric latitude which fails at 90 degrees.  What magic twist
> allows Wallis to come up with the above map when all others want to extend 
> to
> infinity?  Is it truly a normal transverse mercator where the scale factor 
> is
> 1. along the central meridian?  Has that been checked?  Sorry, I am still a
> skeptic until I see the math and a functional program that can demonstrate
> the conformal properties of the projection.
> 
> The cusps at the ends of the equator sure look like violations of 
> conformality
> to me.
> 
> As previously noted, the French TM has been added to libproj4 and the Dozier
> procedure has also been pretty well conquered and will be add to
> libproj4---probably as dtmerc.  Neither of these routines will do |lat|=90
> nor |lon|=90.
> --
> Jerry and the low-riders: Daisy Mae and Joshua
> "Cogito cogito ergo cogito sum"
>    Ambrose Bierce, The Devil's Dictionary
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060627/c6ea5bee/attachment.html>

From ovv at hetnet.nl  Tue Jun 27 06:18:24 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 27 Jun 2006 15:18:24 +0200
Subject: [Proj] Re: Discovery: libproj4 stmerc = French Gauss-Laborde
	projection
In-Reply-To: <2d3.9b831d3.31d21dd8@aol.com>
Message-ID: <C0C6FCC0.74C5%ovv@hetnet.nl>

From: Strebe-aol.com

>> What magic twist allows Wallis to come up with the above map when
>> all others want to extend to infinity?
> You are misunderstanding the problem. The others don't "want" to extend to
> infinity; their accuracy simply degrades into uselessness.

Recently I've been looking for a moment at the Transverse Mercator method
Michael Gendt et al. present in a seminar paper. I get the impression that
he is following Klotz from his 1993 publication.
The derived code is very lean, but fails in the same regions as Dozier's:
low latitude at high delta-longitude and above latitude 89.9999993 deg or
so. At low lat/high delta-long there can be convergence in the iterations,
but the answer is wrong.

Reference:
Geodätisches Seminar zum Thema Koordinatentransformationen mittels einer
analytischen Lösung der Gaußschen Abbildung
Michael Gendt, Frank Oheim, Stephan Gehrke
Technische Universität Berlin, 2000-12-21
<http://www.geodesy.tu-berlin.de/~rainer/seminararbeit/gendt/ut.pdf>
Equation 2.14c is wrong: d_n should be k_n.

Other methods - possibly Wallis' - perform a transformation and probably
reposition the difficult areas.
That means that under the finite precision of IEEE-754 math one has to use
two or three methods to cover really a complete (hemi)sphere with high
accuracy.

>From mr. Evenden:
> And a remaining note: this projection has not been published in an any
> cartographic journal and has not been subject to normal peer review nor the
> review of subsequent readers.
>From mr. Strebe:
> Wallis solves the boundary condition in a different way. It's not without its
> problems; you need to find a root which, for arbitrary eccentricities, defies
> any formulaic seed value. Nonetheless that can be solved efficiently in most
> cases and merely solved in all cases. There are one or two places where one
> must be careful of numeric techniques, like many other projections.
Hush hush, say no more - it's a secret!
Either big money or the NSA/CIA must be involved?
[One might want to grin or laugh at this point.]

By the way: will more discussions on this subject follow? Shouldn't we
change the subject title into "Complex Transverse Mercator" or so?






From ovv at hetnet.nl  Tue Jun 27 10:34:44 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 27 Jun 2006 19:34:44 +0200
Subject: [Proj] Complex Transverse Mercator
In-Reply-To: <2d3.9b831d3.31d21dd8@aol.com>
Message-ID: <C0C738D4.74CC%ovv@hetnet.nl>

From: Strebe-aol.com:

You might avail yourself of a copy of L.P. Lee's monograph, "Conformal
Projections Based on Elliptic Functions", Cartographica, Monograph Number
16, 1976. Quoting verbatim from p. 97:
"The positive y-axis represents part of the equator, extending from lambda =
0 to lambda = (pi/2)*(1-k)... At this point the equator changes smoothly
from a straight line to a curve... The projection of the entire spheroid is
shown in Fig. 46, again using the eccentricity of the International
(Hayford) Spheroid. It can be seen that the entire spheroid is represented
withing the finite area without singular points..."

Reply:

Thanks for this explanation!
The numbers show it too:

International ellipsoid:
90*(1-eccentricity) = 82.62073 decimal deg

Tranverse Mercator:
lat0=0; lon0=0; x0=5e5; y0=0; k0=0.9996;
// International ellipsoid
lat=0; lon=82.50;  x,y = 18712722.276, 0 meters
lat=0; lon=82.60;  x,y = 18840409.942, 0
lat=0; lon=82.61;  x,y = 18853673.034, 0
lat=0; lon=82.62;  x,y = 18867090.964, 0
lat=0; lon=82.621; x,y = 18868446.553, 0.2947
lat=0; lon=82.63;  x,y = 18880722.285, 107.602
lat=0; lon=82.64;  x,y = 18894438.954, 366.186
lat=0; lon=82.65;  x,y = 18908216.295, 738.078
lat=0; lon=82.70;  x,y = 18977788.411, 3947.057
lat=0; lon=82.80;  x,y = 19119409.657, 15745.905

For what it's worth: alculated with my improved version of 'Dozier'.



From gerald.evenden at verizon.net  Tue Jun 27 13:40:24 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Tue, 27 Jun 2006 16:40:24 -0400
Subject: [Proj] Complex Transverse Mercator
In-Reply-To: <C0C738D4.74CC%ovv@hetnet.nl>
References: <C0C738D4.74CC%ovv@hetnet.nl>
Message-ID: <200606271640.24653.gerald.evenden@verizon.net>

On Tuesday 27 June 2006 1:34 pm, Oscar van Vlijmen wrote:
> From: Strebe-aol.com:
>
> You might avail yourself of a copy of L.P. Lee's monograph, "Conformal
> Projections Based on Elliptic Functions", Cartographica, Monograph Number
> 16, 1976. Quoting verbatim from p. 97:
> "The positive y-axis represents part of the equator, extending from lambda
> = 0 to lambda = (pi/2)*(1-k)... At this point the equator changes smoothly
> from a straight line to a curve... The projection of the entire spheroid is
> shown in Fig. 46, again using the eccentricity of the International
> (Hayford) Spheroid. It can be seen that the entire spheroid is represented
> withing the finite area without singular points..."
 Just a quick note as Tuesday is my "day off" from cartography.  What is the k 
above---e or e^2?

What bothers me about the Wallis plot the curve is not a "smooth" transition 
but suddenly takes off on an angle.  This may a graphic problem, but ... .

Yes, I need to look into Lee and a couple of other papers but getting them out 
here in the boondocks of Cape Cod is not that easy.

Regarding your numbers, I am going to wait until I get proj_dtmerc going so I 
can provide all the other support for the projection like ellipsoids, etc..  
What I was using before was just a skeleton main executing gkfor with input 
lines of lat-lon.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From gerald.evenden at verizon.net  Wed Jun 28 09:45:54 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 28 Jun 2006 12:45:54 -0400
Subject: [Proj] Complex Transverse Mercator
In-Reply-To: <C0C738D4.74CC%ovv@hetnet.nl>
References: <C0C738D4.74CC%ovv@hetnet.nl>
Message-ID: <200606281245.54466.gerald.evenden@verizon.net>

Sorry that I did not reply earlier.
On Tuesday 27 June 2006 1:34 pm, Oscar van Vlijmen wrote:
> From: Strebe-aol.com:
>
> You might avail yourself of a copy of L.P. Lee's monograph, "Conformal
> Projections Based on Elliptic Functions", Cartographica, Monograph Number
> 16, 1976. Quoting verbatim from p. 97:
> "The positive y-axis represents part of the equator, extending from lambda
> = 0 to lambda = (pi/2)*(1-k)... At this point the equator changes smoothly
> from a straight line to a curve... The projection of the entire spheroid is
> shown in Fig. 46, again using the eccentricity of the International
> (Hayford) Spheroid. It can be seen that the entire spheroid is represented
> withing the finite area without singular points..."
>
> Reply:
>
> Thanks for this explanation!
> The numbers show it too:
>
> International ellipsoid:
> 90*(1-eccentricity) = 82.62073 decimal deg

I strongly do not believe any of these new extended TMs should be use for UTM 
as the "standard UTM" is defined as the taylor expansion---warts and all.  
Anyone who has abused the limits of UTM will have trouble when using new 
versions.  Secondly, UTM is bound by "law" to the limits of +-3.5 degrees so 
these extensions are immaterial.

> Tranverse Mercator:
> lat0=0; lon0=0; x0=5e5; y0=0; k0=0.9996;
> // International ellipsoid
> lat=0; lon=82.50;  x,y = 18712722.276, 0 meters
> lat=0; lon=82.60;  x,y = 18840409.942, 0
> lat=0; lon=82.61;  x,y = 18853673.034, 0
> lat=0; lon=82.62;  x,y = 18867090.964, 0
> lat=0; lon=82.621; x,y = 18868446.553, 0.2947
> lat=0; lon=82.63;  x,y = 18880722.285, 107.602
> lat=0; lon=82.64;  x,y = 18894438.954, 366.186
> lat=0; lon=82.65;  x,y = 18908216.295, 738.078
> lat=0; lon=82.70;  x,y = 18977788.411, 3947.057
> lat=0; lon=82.80;  x,y = 19119409.657, 15745.905

As per  my comments three years ago, none of this make any intuitive sense.  
This probably explains why the German web page deviates as one approaches 
pi/2.

BTW, how do these numbers stack up with the German web page.

I seem to recall the Lee article and must double check that I might have it 
and forgotten about it.  If I do not have it, it is a pain to try and get a 
copy.

The forward is functioning in libproj4 but I have not done any polishing other 
than trimming Dozier's code.  I'll check out the inverse (which is coded) 
this PM and then start looking at the details.
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From cjmce at lsu.edu  Wed Jun 28 11:35:33 2006
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Wed, 28 Jun 2006 13:35:33 -0500
Subject: [Proj] Complex Transverse Mercator
Message-ID: <OF8645E597.8176975B-ON8625719B.006621F6-8625719B.00662214@lsu.edu>





"Secondly, UTM is bound by "law" to the limits of +-3.5 degrees so these
extensions are immaterial."

Actually, that's not exactly true.  Army TM-5-241-41 is a copious tome of
"Zone to Zone Extention Tables" that also document the Gauss-Krueger
Transverse Mercator to the (if I recall correctly), Fourteenth Derivative.
That extension of the series allows "round-trip" transformations to be made
to ±24° of the Central Meridian with an accuracy of 0.1mm.  That document
is the true "legal" extension, as far as the U.S. Army is concerned.

A long time ago, when I was a Topographic Engineer in the U.S. Army, I was
issued a COMPLETE set of the "TM" books of tables (all ellipsoids, etc.).
That was standard issue, and the stuff was carried around (about 60 lbs.),
from one duty station to another because of the truism, "All major battles
will be fought at UTM Zone Boundaries and/or Datum Boundaries!"  The
Topographic Engineers had to compute the zone extensions so that the
Artillery Corps could effectively supply indirect fire beyond the "normal"
zone limits.

Clifford J. Mugnier C.P.,C.M.S.
National Director (2006-2008)
Photogrammetric Applications Division
AMERICAN SOCIETY FOR PHOTOGRAMMETRY AND REMOTE SENSING
and
Chief of Geodesy
Center for GeoInformatics
LOUISIANA STATE UNIVERSITY
Dept. of Civil Engineering
CEBA 3223A
Baton Rouge, LA  70810
Voice:              (225) 578-8536
Facsimile:          (225) 578-8652
-----------------------------------------------------------
http://www.ASPRS.org/resources/GRIDS
http://www.cee.lsu.edu/facultyStaff/mugnier/index.html
-----------------------------------------------------------




From ovv at hetnet.nl  Wed Jun 28 13:33:42 2006
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Wed, 28 Jun 2006 22:33:42 +0200
Subject: [Proj] Complex Transverse Mercator
In-Reply-To: <200606281245.54466.gerald.evenden@verizon.net>
Message-ID: <C0C8B445.74F7%ovv@hetnet.nl>

> From: "Gerald I. Evenden"

> I strongly do not believe any of these new extended TMs should be use for UTM
> as the "standard UTM" is defined as the taylor expansion---warts and all.
> Anyone who has abused the limits of UTM will have trouble when using new
> versions.  Secondly, UTM is bound by "law" to the limits of +-3.5 degrees so
> these extensions are immaterial.

>From my memory: wasn't the definition 3 degrees with an overlap of 40
kilometers? Is about the same, but legally different.


> As per  my comments three years ago, none of this make any intuitive sense.
> This probably explains why the German web page deviates as one approaches
> pi/2.
> 
> BTW, how do these numbers stack up with the German web page.
If this is about Schuhr's web calculator after Klotz, located at:
<http://gauss.fb1.fh-frankfurt.de/cgi-bin/cgi_gk?modus=intro>
then I can only repeat:
This calculator suffers from the usual problems at low latitudes coupled
with large longitude differences with CM.

[more details including numbers replied to mr. Evenden personally. Let me
know if you're interested in the numbers].




From gerald.evenden at verizon.net  Wed Jun 28 17:45:54 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Wed, 28 Jun 2006 20:45:54 -0400
Subject: [Proj] Complex Transverse Mercator
In-Reply-To: <C0C8B445.74F7%ovv@hetnet.nl>
References: <C0C8B445.74F7%ovv@hetnet.nl>
Message-ID: <200606282045.54269.gerald.evenden@verizon.net>

On Wednesday 28 June 2006 4:33 pm, Oscar van Vlijmen wrote:
> > From: "Gerald I. Evenden"
> >
> > I strongly do not believe any of these new extended TMs should be use for
> > UTM as the "standard UTM" is defined as the taylor expansion---warts and
> > all. Anyone who has abused the limits of UTM will have trouble when using
> > new versions.  Secondly, UTM is bound by "law" to the limits of +-3.5
> > degrees so these extensions are immaterial.
> >
> >From my memory: wasn't the definition 3 degrees with an overlap of 40
>
> kilometers? Is about the same, but legally different.

You're probably right about that.

Another note, at the equator one only has to go about 4.5 degrees from the CM 
before the easting goes negative.  A no-no for grid applications.

-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From gerald.evenden at verizon.net  Thu Jun 29 08:41:20 2006
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Thu, 29 Jun 2006 11:41:20 -0400
Subject: [Proj] Dozier's TM method---my summary
Message-ID: <200606291141.20235.gerald.evenden@verizon.net>

I think the basic idea presented by Dozier sounds feasible but his execution 
falls short of the goal.

Although the the method of computing elliptic integral of the second kind with 
complex argument may be OK it has troubles with large arguments when 
evaluating the Jacobian Zeta function.  The second, and I believe the more 
serious problem, is the Newton-Raphson method employed.  He has expanded the 
basic real function and applied it to a complex variable.  I am not sure that 
this is appropriate and searching through the net and all leads me to the 
conclusion that we are getting into deep water when dealing with the complex 
plane.  Also, it looks like we are also dealing with multiple roots, 
especially when longitude exceeds a certain value (suggested to be 
(pi/2)*(1-k))---a factor not addressed in Dozier's solution.

Note that the cusp (poorly displayed in the previously mention gif url) 
appears to be the beginning of the multiple root solution.  I say poorly 
displayed as the gradation of the equitorial parallel should *smoothly* begin 
a swing to the north OR (importantly) to the south.  Selecting the north or 
south root becomes a practical problem for a projection program and is a 
problem with any method dealing with the comprehensive TM projection.

Because I have no training and no experience in working with complex variable 
problems and have failed to find any practical material related to alternate 
methods to compute elliptic integrals with complex arguments and, more 
importantly, a Newton-Raphson routine for determining roots of complex 
functions, I have decide to suspend again any activity on the Dozier method.

One has to know when to throw in the towel.  ;-)
-- 
Jerry and the low-riders: Daisy Mae and Joshua
"Cogito cogito ergo cogito sum"
   Ambrose Bierce, The Devil's Dictionary


From Tim.Loesch at dnr.state.mn.us  Thu Jun 29 09:03:02 2006
From: Tim.Loesch at dnr.state.mn.us (Tim Loesch)
Date: Thu, 29 Jun 2006 11:03:02 -0500
Subject: [Proj] Re: Proj Digest, Vol 25,
	Issue 23 (NOTICE - Out of the office)
Message-ID: <s4a3b371.054@co5.dnr.state.mn.us>

I'm out of the office and will return Wednesday July 5th. If this is a GIS technical related issue contact Chris Pouliot or Mike Tronrud.





From Strebe at aol.com  Thu Jun 29 12:30:24 2006
From: Strebe at aol.com (Strebe at aol.com)
Date: Thu, 29 Jun 2006 15:30:24 EDT
Subject: [Proj] Re: Dozier's TM method---my summary
Message-ID: <328.6931b99.31d58450@aol.com>


In a message dated 6/29/06 08:45:00, gerald.evenden at verizon.net writes:
(Full text of message at end.)

> ...is the Newton-Raphson method employed.  He has expanded the
> basic real function and applied it to a complex variable.  I am not sure 
> that
> this is appropriate...
> 
I haven't looked at Dozier in depth, but in general there is nothing less 
appropriate about Newton-Raphson when applied to complex variables than there is 
when applied to real-valued variables. It's quite easy to get yourself into 
trouble when finding roots even of real-valued functions. While the function in 
question has problematic regions, that has nothing to do with the fact that it 
is complex-valued.

> plane.  Also, it looks like we are also dealing with multiple roots,
> especially when longitude exceeds a certain value   (suggested to be
> (pi/2)*(1-k))---a factor not addressed in Dozier's solution
> 
I do not understand why you think the fact of multiple roots supports your 
notion of the intractability of the solution.
> 
> Note that the cusp (poorly displayed in the previously mention gif url)
> appears to be the beginning of the multiple root solution.  I say poorly
> displayed as the gradation of the equitorial parallel should *smoothly* 
> begin
> a swing to the north OR (importantly) to the south. 
> 
The cusp is poorly observed, not poorly displayed. The illustration is exact 
to sub-pixel resolution and it matches Lee's illustration precisely despite 
using a different method of calculation. It seems you do not know a continuously 
differentiable curve when you see one.

You have remarked previously that the projection is "not intuitive". To you, 
of course. Not necessarily to the reading audience. You didn't like the cusp; 
you thought it indicated the projection wasn't really conformal. Once the cusp 
was demonstrated (by means of a 30-year old peer-reviewed journal article) to 
be an attribute of the projection, you decided you didn't like how it looked 
in an image I supplied, even though that image precisely matches the one on 
the peer-reviewed article. It is curious that you believe it appropriate to cast 
public aspersion based on your own, flawed notions rather than objective 
facts. If that is how you talk yourself out of a project then I don't suppose 
there is much anyone can do about it, since reason clearly has nothing to do with 
it.

To those interested in the full-spheroid transverse Mercator, I urge you not 
to be skeptical of its existence or attainability based on Mr. Evenden's 
comments. There is nothing controversial about either. The mathematics has been 
published in peer-reviewed journals, confirmed any number of times by people who 
understand the mathematics, and expressed by at least three different 
calculational methods (whatever method Lee used; Dozier; and Wallis) in at least five 
implementations that I know of. While there is treacherous calculational 
territory to traverse, that is true of many projections. As always, you must 
understand the domain and choose numerical techniques appropriate to it.

To that end, please feel free to contine the discussion on the "Complex 
Transverse Mercator" thread.

Regards,
-- daan Strebe


In a message dated 6/29/06 08:45:00, gerald.evenden at verizon.net writes:

> I think the basic idea presented by Dozier sounds feasible but his 
> execution
> falls short of the goal.
> 
> Although the the method of computing elliptic integral of the second kind 
> with
> complex argument may be OK it has troubles with large arguments when
> evaluating the Jacobian Zeta function.  The second, and I believe the more
> serious problem, is the Newton-Raphson method employed.  He has expanded the
> basic real function and applied it to a complex variable.  I am not sure 
> that
> this is appropriate and searching through the net and all leads me to the
> conclusion that we are getting into deep water when dealing with the complex
> plane.  Also, it looks like we are also dealing with multiple roots,
> especially when longitude exceeds a certain value (suggested to be
> (pi/2)*(1-k))---a factor not addressed in Dozier's solution.
> 
> Note that the cusp (poorly displayed in the previously mention gif url)
> appears to be the beginning of the multiple root solution.  I say poorly
> displayed as the gradation of the equitorial parallel should *smoothly* 
> begin
> a swing to the north OR (importantly) to the south.  Selecting the north or
> south root becomes a practical problem for a projection program and is a
> problem with any method dealing with the comprehensive TM projection.
> 
> Because I have no training and no experience in working with complex 
> variable
> problems and have failed to find any practical material related to alternate
> methods to compute elliptic integrals with complex arguments and, more
> importantly, a Newton-Raphson routine for determining roots of complex
> functions, I have decide to suspend again any activity on the Dozier method.
> 
> One has to know when to throw in the towel.  ;-)
> --
> Jerry and the low-riders: Daisy Mae and Joshua
> "Cogito cogito ergo cogito sum"
>    Ambrose Bierce, The Devil's Dictionary
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060629/d417061c/attachment.html>

From Strebe at aol.com  Thu Jun 29 18:55:52 2006
From: Strebe at aol.com (Strebe at aol.com)
Date: Thu, 29 Jun 2006 21:55:52 EDT
Subject: [Proj] Re: Complex Transverse Mercator
Message-ID: <54b.146ba22.31d5dea8@aol.com>


The values in the table below agree with my calculations based on Wallis, 
down to millimeter precision. It's a fine validation of both methods.

Regards,
-- daan Strebe


In a message dated 6/27/06 10:40:04, ovv at hetnet.nl writes:


> From: Strebe-aol.com:
> 
> You might avail yourself of a copy of L.P. Lee's monograph, "Conformal
> Projections Based on Elliptic Functions", Cartographica, Monograph Number
> 16, 1976. Quoting verbatim from p. 97:
> "The positive y-axis represents part of the equator, extending from lambda =
> 0 to lambda = (pi/2)*(1-k)... At this point the equator changes smoothly
> from a straight line to a curve... The projection of the entire spheroid is
> shown in Fig. 46, again using the eccentricity of the International
> (Hayford) Spheroid. It can be seen that the entire spheroid is represented
> withing the finite area without singular points..."
> 
> Reply:
> 
> Thanks for this explanation!
> The numbers show it too:
> 
> International ellipsoid:
> 90*(1-eccentricity) = 82.62073 decimal deg
> 
> Tranverse Mercator:
> lat0=0; lon0=0; x0=5e5; y0=0; k0=0.9996;
> // International ellipsoid
> lat=0; lon=82.50;  x,y = 18712722.276, 0 meters
> lat=0; lon=82.60;  x,y = 18840409.942, 0
> lat=0; lon=82.61;  x,y = 18853673.034, 0
> lat=0; lon=82.62;  x,y = 18867090.964, 0
> lat=0; lon=82.621; x,y = 18868446.553, 0.2947
> lat=0; lon=82.63;  x,y = 18880722.285, 107.602
> lat=0; lon=82.64;  x,y = 18894438.954, 366.186
> lat=0; lon=82.65;  x,y = 18908216.295, 738.078
> lat=0; lon=82.70;  x,y = 18977788.411, 3947.057
> lat=0; lon=82.80;  x,y = 19119409.657, 15745.905
> 
> For what it's worth: alculated with my improved version of 'Dozier'.
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20060629/397bcc2d/attachment.html>

From miked at jamagination.com  Fri Jun 30 09:23:46 2006
From: miked at jamagination.com (Mike D'Ambrogia)
Date: Fri, 30 Jun 2006 09:23:46 -0700
Subject: [Proj] Command line conversion problem
In-Reply-To: <s4a3b371.054@co5.dnr.state.mn.us>
Message-ID: <003701c69c61$906d49c0$0501a8c0@toshiba>

Trying to convert NAD27 DD.DDDDD to WGS84 UTM

I use:

cs2cs +init=epsg:26711 +to +init=epsg:32611 

Trying to convert 38.1703 -119.7385 and all I can get out is "*       *
0.00", I should get 260102E 4228255N

I'm goofing something up, hoping it's simple and someone can quickly
point me in the right direction

Thanks in advance

Mike



From fb at aec2000.it  Fri Jun 30 12:33:43 2006
From: fb at aec2000.it (Fabrizio Bernardini)
Date: Fri, 30 Jun 2006 19:33:43 +0000 (UTC)
Subject: [Proj] New ellipsoid
Message-ID: <loom.20060630T212949-698@post.gmane.org>

I am new in this list and I do not know if this topic has been discussed yet. 
I tried to search for it but got no useful results.

My question is:
How can I change ellipsoid and specify a completely 
new one, for instance for a planet which is NOT Earth. 
Will the projection library still work in this case?

Did anybody ever discussed this issue? 
Is there a reference to that anywhere?

Thanks,

Fabrizio




