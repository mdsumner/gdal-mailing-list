From zoltans at geograph.co.za  Wed Sep  1 00:00:32 2010
From: zoltans at geograph.co.za (Zoltan Szecsei)
Date: Wed, 01 Sep 2010 09:00:32 +0200
Subject: [Proj] Conferting from WGS84 latlong to Transverse Mercator
In-Reply-To: <AANLkTikQ5BcWyg2tx9qSEMaL-1agoyq50=vL=0fFMrkB@mail.gmail.com>
References: <AANLkTikQ5BcWyg2tx9qSEMaL-1agoyq50=vL=0fFMrkB@mail.gmail.com>
Message-ID: <4C7DFA10.9030603@geograph.co.za>

On 2010-09-01 08:43, Hanlie Pretorius wrote:
> Hi,
>
> My latlong coordinates are in South Africa: 28.375E and 27.375S
>
> I'm using pyproj to convert from latlong to a Transverse Meractor PCS
> centred on 29 deg East:
>
> ---
> import pyproj
>
> pr_tm = pyproj.Proj('+proj=tmerc +lat_0=0 +lon_0=29 +k=1 +x_0=0 +y_0=0
> +ellps=WGS84 +units=m +no_defs')
>
> x_latlong = 28.375
> y_latlong = -27.375
>
> x_tm, y_tm = pr_tm(x_latlong, y_latlong)
>
> print x_tm,y_tm
> -----
>
> output:
> -----
> -61827.9202408 -3029337.78594
> -----
>
> My question is this: why is the x-coordinate in the TM PCS negative?
> It is in the eastern hemisphere, so surely it should be positive? Or
> am I missing something?
>
>    

Hi Hanlie,
Your point is west of the central meridian of Lo29.
Because you are using -ve South convention, West is also -ve, so in this 
example, the signs of the result are correct.

HTH,
Zoltan--

===========================================
Zoltan Szecsei PrGISc [PGP0031]
Geograph (Pty) Ltd.
P.O. Box 7, Muizenberg 7950, South Africa.

65 Main Road, Muizenberg 7945
Western Cape, South Africa.

34° 6'16.35"S 18°28'5.62"E

Tel: +27-21-7884897  Mobile: +27-83-6004028
Fax: +27-86-6115323     www.geograph.co.za
===========================================



From Heiko.Klein at met.no  Wed Sep  1 02:23:59 2010
From: Heiko.Klein at met.no (Heiko Klein)
Date: Wed, 01 Sep 2010 11:23:59 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
Message-ID: <4C7E1BAF.6000706@met.no>

Hi,

I'm working with meteorological model-data. The models usually use a 
spherical earth. Since the resolution of the models is now ~1km, I have 
to think more about converting those data for people using GIS systems. 
I have only a very rough understanding of datum, geocentric and 
geodetic. Up to now I've only used the ellps-parameters of proj to 
describe the earth.

If I understand it correctly, a spherical earth is completely described 
by the major axis, and geodetic and geocentric coordinates are the same?


Using the following does not change the coordinates

./cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +to +proj=latlong 
+ellps=WGS84
10 60
10dE	60dN 0.000

since it calculates completely in geocentric coordinates?



Giving a WGS84 datum on both input and output gives geodetic coordinates?
/cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +datum=WGS84 +to 
+proj=latlong +ellps=WGS84 +datum=WGS84
10 60
10dE	60d9'58.075"N 8921.648


Why should the sphere-datum be WGS84? Using NAD27 gives me geocentric 
coordinates?
./cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +datum=NAD27 +to 
+proj=latlong +ellps=WGS84 +datum=WGS84
10 60
10dE	60dN 0.000

Does there exist a correct 'datum' for a sphere? Isn't it all the same 
for a sphere? Why do I have to give it at all?
If I have a measurement station with GPS coordinates, latitude and 
longitude, are they geocentric or geodetic?

And the final and most important question: What is the best description 
of a spherical earth to convert from with cs2cs?


Best regards,

Heiko


From j.l.h.hartmann at uva.nl  Wed Sep  1 03:54:44 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Wed, 01 Sep 2010 12:54:44 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C7E1BAF.6000706@met.no>
References: <4C7E1BAF.6000706@met.no>
Message-ID: <4C7E30F4.8040000@uva.nl>

  In my opinion this is a bug. When trying to convert  a lonlat value 
from one ellipse to another, cs2cs ignores the change of ellipsoid. Some 
time ago a decision was made to only perform a datum transform when both 
input and output projections had a full datum description, i.e. both 
ellipsoid and towgs84 parameters.  This is the right way of doing datum 
transform, but unfortunately it also seems to prevent a conversion from 
latlong to latlong on different ellipses where no datum shift has to be 
applied (+nadgrids=@null doesn't work in this case).

Funny thing is that for projected coordinates a transform between 
different ellipses *does* work. It took me a long time to figure this 
out when trying to convert 19th century latlon values, as computed on a 
slightly smaller ellipsoid, to contemporary latlon values on the Bessel 
ellips, where no datum shift had taken place, i.e. where the direction 
and alignment of the axes of the ellipsoid were the same and only their 
extents were different. The solution turned out to be to convert the 
original latlongs to an intermediate projection on the original 
ellipsoid, convert those projected coordinates to a modern projection 
based on the modern ellipsoid, and convert those modern coordinates back 
to latlon values on the target ellipsoid.

I don't like this procedure, as the original 19th century triangulation 
was computed with spheroidical coordinates that were only afterwards 
converted to a planar projection. There were small errors on those 
original tables (around 50 meters) that were extremely hard to pinpoint, 
so every intermediate computational step should be avoided. Especially 
so when the point of reference for the ellipsoid computation is a place 
as outlandish as Amsterdam. I think I solved the problem now, but IMHO 
it shouldn't have existed in the first place. The same location on the 
world globe has *different* latlong values when computed on the basis of 
different ellipsoids, and that is not shown by cs2cs.

Jan

On 09/01/10 11:23, Heiko Klein wrote:
> Hi,
>
> I'm working with meteorological model-data. The models usually use a
> spherical earth. Since the resolution of the models is now ~1km, I have
> to think more about converting those data for people using GIS systems.
> I have only a very rough understanding of datum, geocentric and
> geodetic. Up to now I've only used the ellps-parameters of proj to
> describe the earth.
>
> If I understand it correctly, a spherical earth is completely described
> by the major axis, and geodetic and geocentric coordinates are the same?
>
>
> Using the following does not change the coordinates
>
> ./cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +to +proj=latlong
> +ellps=WGS84
> 10 60
> 10dE	60dN 0.000
>
> since it calculates completely in geocentric coordinates?
>
>
>
> Giving a WGS84 datum on both input and output gives geodetic coordinates?
> /cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +datum=WGS84 +to
> +proj=latlong +ellps=WGS84 +datum=WGS84
> 10 60
> 10dE	60d9'58.075"N 8921.648
>
>
> Why should the sphere-datum be WGS84? Using NAD27 gives me geocentric
> coordinates?
> ./cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +datum=NAD27 +to
> +proj=latlong +ellps=WGS84 +datum=WGS84
> 10 60
> 10dE	60dN 0.000
>
> Does there exist a correct 'datum' for a sphere? Isn't it all the same
> for a sphere? Why do I have to give it at all?
> If I have a measurement station with GPS coordinates, latitude and
> longitude, are they geocentric or geodetic?
>
> And the final and most important question: What is the best description
> of a spherical earth to convert from with cs2cs?
>
>
> Best regards,
>
> Heiko
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100901/f1c70ec2/attachment.html>

From peifer at gmx.eu  Wed Sep  1 08:37:27 2010
From: peifer at gmx.eu (Hermann Peifer)
Date: Wed, 01 Sep 2010 17:37:27 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C7E30F4.8040000@uva.nl>
References: <4C7E1BAF.6000706@met.no> <4C7E30F4.8040000@uva.nl>
Message-ID: <i5ls13$e1c$1@dough.gmane.org>

On 01/09/2010 12:54, Jan Hartmann wrote:
> The same location on the
> world globe has *different* latlong values when computed on the basis of
> different ellipsoids, and that is not shown by cs2cs.
>

I am not so sure about different *long* values. Anyway, can't you just 
convince cs2cs to do the calculation by putting +towgs84=0,0,0 on both 
sides of the equation?

$ cs2cs -v +proj=latlong +ellps=sphere +a=6371000 +towgs84=0,0,0 +to 
+proj=latlong +ellps=WGS84 +towgs84=0,0,0

# ---- From Coordinate System ----
#Lat/long (Geodetic alias)
#
# +proj=latlong +ellps=sphere +a=6371000 +towgs84=0,0,0
# ---- To Coordinate System ----
#Lat/long (Geodetic alias)
#
# +proj=latlong +ellps=WGS84 +towgs84=0,0,0
10 60
10dE    60d9'57.992"N 8919.390


Hermann



From j.l.h.hartmann at uva.nl  Wed Sep  1 11:06:32 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Wed, 01 Sep 2010 20:06:32 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <i5ls13$e1c$1@dough.gmane.org>
References: <4C7E1BAF.6000706@met.no> <4C7E30F4.8040000@uva.nl>
	<i5ls13$e1c$1@dough.gmane.org>
Message-ID: <4C7E9628.6050902@uva.nl>

  On 09/01/10 17:37, Hermann Peifer wrote:
> On 01/09/2010 12:54, Jan Hartmann wrote:
>> The same location on the
>> world globe has *different* latlong values when computed on the basis of
>> different ellipsoids, and that is not shown by cs2cs.
> I am not so sure about different *long* values. Anyway, can't you just
> convince cs2cs to do the calculation by putting +towgs84=0,0,0 on both
> sides of the equation?
>
> $ cs2cs -v +proj=latlong +ellps=sphere +a=6371000 +towgs84=0,0,0 +to
> +proj=latlong +ellps=WGS84 +towgs84=0,0,0
>
Thanks for your reaction. That's what I thought too, but the values are 
wrong. Around 1850, the latlon values of about 1000 reference points 
were computed on the basis of a slightly smaller ellipsoid than is used 
nowadays. The modern latlon values for the same points (on the Bessel 
ellipsoid) are about 50 meters to the south. How can I use cs2cs to 
transform the old value to the new?

1) using latlon for input and output with different ellipsoids:
cs2cs -f "%8.6f" +proj=longlat +a=6376950.4 +rf=309.65 +to +proj=longlat 
+ellps=bessel
4.8838828 51.5
4.883883        51.500000 0.000000

No change

2) Adding +towgs84=0,0,0 to input and output:
cs2cs -f "%8.6f" +proj=longlat +a=6376950.4 +rf=309.65 +towgs84=0,0,0 
+to +proj=longlat +ellps=bessel +towgs84=0,0,0
4.8838828 51.5
4.883883        51.506347 -3.768025

Using PostGIS to compute the distance:
  select st_distance_spheroid(st_geomfromtext('POINT(4.883883 
51.5)',4308),st_geomfromtext('POINT(4.883883 51.506347)',4308), 
'SPHEROID["K",6376950.4,309.65]');
  st_distance_spheroid
----------------------
      706.037082633133
(1 row)

Distance far too great.

The only way I can get from the old latlon value to the new is using 
intermediate projections: from old latlon to old projected coordinates, 
from old projected coordinates to new projected coordinates using the 
old ellipsoid, and from new projected coordinates back to latlon on the 
new ellipsoid. The results look OK (within 10 meters), but I don't 
understand what I am doing here. I certainly dislike the faking of an 
old ellipsoid on a new projection.

It's important, because all pre-1900 maps have to be georeferenced this 
way, and I need to have accuracy on meter level. I still think 
transformation 1) should do the job

Jan

BTW Both latitude and longitude are different in the 1850 and modern 
tables, although the differences in latitudes are much larger.


From Mikael.Rittri at carmenta.com  Thu Sep  2 00:30:55 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Thu, 2 Sep 2010 07:30:55 +0000
Subject: [Proj] looking for the right params for RSO
In-Reply-To: <4C7A8B88.1010904@gmx.eu>
References: <20100827065714.317880@gmx.net> <4C7A8B88.1010904@gmx.eu>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49D56C@SETHNWS023.carmenta.se>

I think the gamma parameter for omerc isn't yet supported in Proj.4.

Although the PROJ.4 timeline says it was added in March 1, 2010 
( http://trac.osgeo.org/proj/timeline?from=2010-03-17T15%3A18%3A06Z&precision=second ),
when I tried FWTools 2.4.7 for Windows, the gamma had no effect, and
the -v option (verbose) said it was unrecognized.  

Hermann Peifer gave the solution to use the +rot_conv flag instead.   
In general, the semantics of the two obscurely-named omerc flags is 
as follows, I think:

+no_uoff omitted:

    The origin, the point with projected coordinates (FalseEasting, FalseNorthing), 
    is at the projection center, on the longitude of center and latitude of center.

+no_uoff included: 

    The origin is the so-called natural origin, on the initial line near the equator.

+rot_conv omitted:

    The projected grid gets a final rotation so that grid north equals true north 
    on the projection center.  Use this when alpha (azimuth) and gamma 
    (rectified-to-grid angle) are equal, which they usually are outside Malaysia.

+rot_conv included:

    The final rotation makes grid north equal true north at the natural origin.
    Use this when alpha and gamma differs, which only happens in Malaysia. 

---

As for the datum shift, I think you can use the datum shift 
    
    EPSG:8659, "Kertau (RSO) to WGS 84 (1)"

which EPSG presents as a concatenated datum shift via "Kertau 1968". But I think 
it is equivalent to having 

    +towgs84=-11,851,5

provided you modify the equatorial radius to be +a=6377295.664 instead. 

I also noticed that if the CRS is meant to be EPSG:3168, "Kertau (RSO) / RSO Malaya (m)", 
then the False Easting of your Well-Known Text differs by 1.05 meters from the 
EPSG value, which is 804670.24 m.  (On the other hand, EPSG says that the 
accuracy of the datum shift is only 15 meters).  

Best regards,
  Mikael Rittri
  Carmenta AB
  Sweden
  www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Hermann Peifer
Sent: den 29 augusti 2010 18:32
To: PROJ.4 and general Projections Discussions
Cc: Christoph Dohmen
Subject: Re: [Proj] looking for the right params for RSO

On 27/08/2010 08:57, Christoph Dohmen wrote:
> Hi list,
>
> I'm searching for the right parameter set for RSO projected coordinates.
>
> Given a dedicated point from google earth with lat-long = 100.563743E 
> 5.389524N
>
> Having a raster dataset with a projection set as the following:
>
> PROJCS["Kertau_RSO_Malaya_Meters",
>      GEOGCS["GCS_Kertau",
>          DATUM["D_Kertau",
>              SPHEROID["Everest_1830_Modified",6377304.063,300.8017]],
>          PRIMEM["Greenwich",0.0],
>          UNIT["Degree",0.0174532925199433]],
>      PROJECTION["Rectified_Skew_Orthomorphic_Natural_Origin"],
>      PARAMETER["False_Easting",804671.299775],
>      PARAMETER["False_Northing",0.0],
>      PARAMETER["Scale_Factor",0.99984],
>      PARAMETER["Azimuth",-36.97420943711801],
>      PARAMETER["Longitude_Of_Center",102.25],
>      PARAMETER["Latitude_Of_Center",4.0],
>      PARAMETER["XY_Plane_Rotation",-36.86989764584402],
>      UNIT["Meter",1.0]]
>
> Inside the dedicated point has the coordinates 286400m east 596700m north.
>
> Now I want to set up a translation first via proj directly and later 
> on for a gdal-warp to transform the rasterdataset.
>
> I tried out the parameter:
>
> cs2cs +init=epsg:4326 +to +proj=omerc +a=6377304.063 +rf=300.8017 
> +lat_0=4.0 +lonc=102.25 +alpha=323.025790562881987 
> +gamma=323.13010235415598 +k_0=0.99984 +x_0=804671.299775
>
> but the result is 617824.69 153846.36
>

You are getting somewhat closer to the expected result with:

cs2cs -v +init=epsg:4326 +to +proj=omerc +a=6377304.063 +rf=300.8017 
+lat_0=4.0 +lonc=102.25 +alpha=323.025790562881987 +k_0=0.99984
+x_0=804671.299775 +no_uoff +rot_conv

286289.13  596607.56 0.00

You might have to look for appropriate towgs84 parameter values.

Hermann
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From Heiko.Klein at met.no  Thu Sep  2 01:35:30 2010
From: Heiko.Klein at met.no (Heiko Klein)
Date: Thu, 02 Sep 2010 10:35:30 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C7E1BAF.6000706@met.no>
References: <4C7E1BAF.6000706@met.no>
Message-ID: <4C7F61D2.5000807@met.no>

 From the source of the pj_transform function, it is approx. like this:

  * convert to latlon (unless latlon) (from whichever projection, 
ellipsoid or spherical formular)

  * if datum exists on input and output:
     - apply geodetic->geocentric conversion
     - apply towgs conversion (from input)
     - apply fromwgs conversion (to output)
     - apply geocentric->gedetic conversion

  * convert to requested projection (ellipsoid or spherical formular)


The geodetic<->geocentric code depends only on the spheroid/ellipsoid, 
not of further datum information, and it is strange that this code is 
not run without both datum information, even if the ellipsoid changes.

If I give the NAD27 datum on the input, the code run for datum 
conversion is:

   * pj_apply_gridshift(srcdef)

Nothing is run for geocentric<->geodetic conversion, no towgs code is run.

I'm still very confused on what to use to convert from a spherical earth 
model to one or another projection.

Best regards,

Heiko


On 2010-09-01 11:23, Heiko Klein wrote:
> Hi,
>
> I'm working with meteorological model-data. The models usually use a
> spherical earth. Since the resolution of the models is now ~1km, I have
> to think more about converting those data for people using GIS systems.
> I have only a very rough understanding of datum, geocentric and
> geodetic. Up to now I've only used the ellps-parameters of proj to
> describe the earth.
>
> If I understand it correctly, a spherical earth is completely described
> by the major axis, and geodetic and geocentric coordinates are the same?
>
>
> Using the following does not change the coordinates
>
> ./cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +to +proj=latlong
> +ellps=WGS84
> 10 60
> 10dE	60dN 0.000
>
> since it calculates completely in geocentric coordinates?
>
>
>
> Giving a WGS84 datum on both input and output gives geodetic coordinates?
> /cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +datum=WGS84 +to
> +proj=latlong +ellps=WGS84 +datum=WGS84
> 10 60
> 10dE	60d9'58.075"N 8921.648
>
>
> Why should the sphere-datum be WGS84? Using NAD27 gives me geocentric
> coordinates?
> ./cs2cs +proj=latlong +ellps=sphere +a=6371000 +e=0 +datum=NAD27 +to
> +proj=latlong +ellps=WGS84 +datum=WGS84
> 10 60
> 10dE	60dN 0.000
>
> Does there exist a correct 'datum' for a sphere? Isn't it all the same
> for a sphere? Why do I have to give it at all?
> If I have a measurement station with GPS coordinates, latitude and
> longitude, are they geocentric or geodetic?
>
> And the final and most important question: What is the best description
> of a spherical earth to convert from with cs2cs?
>
>
> Best regards,
>
> Heiko
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

-- 
Dr. Heiko Klein                              Tel. + 47 22 96 32 58
Development Section / IT Department          Fax. + 47 22 69 63 55
Norwegian Meteorological Institute           http://www.met.no
P.O. Box 43 Blindern  0313 Oslo NORWAY


From ovv at hetnet.nl  Thu Sep  2 03:25:21 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Thu, 2 Sep 2010 12:25:21 +0200
Subject: [Proj] looking for the right params for RSO
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49D56C@SETHNWS023.carmenta.se>
References: <20100827065714.317880@gmx.net> <4C7A8B88.1010904@gmx.eu>
	<E4AB3DD44D22854B819908379DE4AD49D56C@SETHNWS023.carmenta.se>
Message-ID: <F08A8278DAB34BE5B4F86A6657664AA2@PCHP>

Van: proj-bounces at lists.maptools.org namens Mikael Rittri
Aan: PROJ.4 and general Projections Discussions
CC: Christoph Dohmen
Onderwerp: Re: [Proj] looking for the right params for RSO


I think the gamma parameter for omerc isn't yet supported in Proj.4.

......


Hermann Peifer gave the solution to use the +rot_conv flag instead.


REPLY:



Indeed, if I'm not mistaken, in PROJ only an alpha parameter is supported. 
But if you use +rot_conv, then the alpha is taken as a gamma.

In Evenden's libproj software both alpha and gamma can be given 
independently.

By the way: is Kertau on the Everest 1930 ellipsoid or on the Modified 
Everest 1830 ellipsoid?

>From ESRI parameters:

8058 Kertau_To_WGS_1984
GEOGTRAN["Kertau_To_WGS_1984",GEOGCS["GCS_Kertau",DATUM["D_Kertau",SPHEROID["Everest_1830_Modified",6377304.063,300.8017]].....

Oscar van Vlijmen






From ovv at hetnet.nl  Thu Sep  2 03:27:43 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Thu, 2 Sep 2010 12:27:43 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C7E9628.6050902@uva.nl>
References: <4C7E1BAF.6000706@met.no>
	<4C7E30F4.8040000@uva.nl><i5ls13$e1c$1@dough.gmane.org>
	<4C7E9628.6050902@uva.nl>
Message-ID: <2A8DA6B697D249579331C45A743E5300@PCHP>

Van: proj-bounces at lists.maptools.org namens Jan Hartmann
Verzonden: wo 1-9-2010 20:06
Aan: PROJ.4 and general Projections Discussions
CC: Hermann Peifer
Onderwerp: Re: [Proj] How to convert a sphere to ellipsoid with correct 
datum?


........


The only way I can get from the old latlon value to the new is using
intermediate projections: from old latlon to old projected coordinates,
from old projected coordinates to new projected coordinates using the
old ellipsoid, and from new projected coordinates back to latlon on the
new ellipsoid. The results look OK (within 10 meters), but I don't
understand what I am doing here. I certainly dislike the faking of an
old ellipsoid on a new projection.


REPLY:

Please elaborate on that! How do you calculate the new grid coordinates on 
the new ellipsoid starting just from grid coordinates on the old ellipsoid?

In my opinion it would be simpler or even better to do a conversion from 
lat-lon to cartesian XYZ starting with the old ellipsoid and to convert back 
from cartesian to lat-lon with the parameters for the new ellipsoid. Regular 
datum transformation routines do that, but a Helmert transform is done in 
between (in cartesian space). So inactivate the Helmert transformation by 
giving dx=dy=dz=0, rx=ry=rz=0, ds=1.0.

This should also work for converting spherical coordinates to ellipsoidal or 
the other way around, but then the geodetic/cartesian conversion routines 
must have a support for the sphere and I don't believe the PROJ routines 
have.

Oscar van Vlijmen





From peifer at gmx.eu  Thu Sep  2 05:41:09 2010
From: peifer at gmx.eu (peifer)
Date: Thu, 2 Sep 2010 05:41:09 -0700 (PDT)
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <2A8DA6B697D249579331C45A743E5300@PCHP>
References: <4C7E1BAF.6000706@met.no> <4C7E30F4.8040000@uva.nl>
	<i5ls13$e1c$1@dough.gmane.org> <4C7E9628.6050902@uva.nl>
	<2A8DA6B697D249579331C45A743E5300@PCHP>
Message-ID: <1283431269116-5490944.post@n2.nabble.com>



OvV_HN wrote:
> 
> 
> In my opinion it would be simpler or even better to do a conversion from 
> lat-lon to cartesian XYZ starting with the old ellipsoid and to convert
> back 
> from cartesian to lat-lon with the parameters for the new ellipsoid.
> Regular 
> datum transformation routines do that, but a Helmert transform is done in 
> between (in cartesian space). So inactivate the Helmert transformation by 
> giving dx=dy=dz=0, rx=ry=rz=0, ds=1.0.
> 
> This should also work for converting spherical coordinates to ellipsoidal
> or 
> the other way around, but then the geodetic/cartesian conversion routines 
> must have a support for the sphere and I don't believe the PROJ routines 
> have.
> 
> Oscar van Vlijmen
> 
> 


Oscar,

in practical terms of cs2cs usage (and leaving out the question about the
spherical case), doesn't this simply mean that one has to add +towgs84=0,0,0
on both sides, as I suggested earlier?


Or +towgs84=0,0,0,0,0,0,0  or +towgs84=0,0,0,0,0,0,1. It doesn't seem to
make much of a difference.

Hermann


cs2cs +proj=latlong +ellps=bessel  +to +proj=latlong +ellps=WGS84                                   
10 60
10dE    60dN 0.000
^C

cs2cs +proj=latlong +ellps=bessel +towgs84=0,0,0  +to +proj=latlong
+ellps=WGS84 +towgs84=0,0,0     
10 60
10dE    60d0'1.864"N -690.016
^C

cs2cs  +proj=latlong +ellps=bessel +towgs84=0,0,0,0,0,0,0  +to +proj=latlong
+ellps=WGS84 +towgs84=0,0,0,0,0,0,0
10 60
10dE    60d0'1.864"N -690.016
^C

cs2cs +proj=latlong +ellps=bessel +towgs84=0,0,0,0,0,0,1  +to +proj=latlong
+ellps=WGS84 +towgs84=0,0,0,0,0,0,1
10 60
10dE    60d0'1.864"N -690.016
^C
    
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/How-to-convert-a-sphere-to-ellipsoid-with-correct-datum-tp5486117p5490944.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From warmerdam at pobox.com  Thu Sep  2 07:17:13 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 02 Sep 2010 10:17:13 -0400
Subject: [Proj] looking for the right params for RSO
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49D56C@SETHNWS023.carmenta.se>
References: <20100827065714.317880@gmx.net> <4C7A8B88.1010904@gmx.eu>
	<E4AB3DD44D22854B819908379DE4AD49D56C@SETHNWS023.carmenta.se>
Message-ID: <4C7FB1E9.7020600@pobox.com>

Mikael Rittri wrote:
> I think the gamma parameter for omerc isn't yet supported in Proj.4.
> 
> Although the PROJ.4 timeline says it was added in March 1, 2010 
> ( http://trac.osgeo.org/proj/timeline?from=2010-03-17T15%3A18%3A06Z&precision=second ),
> when I tried FWTools 2.4.7 for Windows, the gamma had no effect, and
> the -v option (verbose) said it was unrecognized.  

Folks,

FWTools isn't really being produced anymore, but I did just update the
PROJ.4 package in OSGeo4W to include the latest PROJ.4 trunk code so it
should have the referenced omerc changes.

   http://osgeo4w.osgeo.org/

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From warmerdam at pobox.com  Thu Sep  2 07:19:32 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 02 Sep 2010 10:19:32 -0400
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C7F61D2.5000807@met.no>
References: <4C7E1BAF.6000706@met.no> <4C7F61D2.5000807@met.no>
Message-ID: <4C7FB274.6080707@pobox.com>

Heiko Klein wrote:
> The geodetic<->geocentric code depends only on the spheroid/ellipsoid, 
> not of further datum information, and it is strange that this code is 
> not run without both datum information, even if the ellipsoid changes.

Heiko,

Note that it used to just convert to geocentric from one ellipsoid and
the back to geodetic on the second ellipsoid.  But very often it turned
out this was not appropriate and caused lots of problems for users.  So
after most of a decade I bowed to pressure and stopped doing this as it is
rarely the right thing to do apparently.

> I'm still very confused on what to use to convert from a spherical earth 
> model to one or another projection.

I also don't know.  It really "depends".  What I have seen in the past
is that when data was apparently processed on a sphere was really intended
to be treated as if the geographic coordinates were in WGS 84.  So doing
an automatic sphere to ellipsoid conversion resulted in huge offsets in
the north south direction.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From j.l.h.hartmann at uva.nl  Thu Sep  2 08:17:53 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Thu, 02 Sep 2010 17:17:53 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <2A8DA6B697D249579331C45A743E5300@PCHP>
References: <4C7E1BAF.6000706@met.no>	<4C7E30F4.8040000@uva.nl><i5ls13$e1c$1@dough.gmane.org>	<4C7E9628.6050902@uva.nl>
	<2A8DA6B697D249579331C45A743E5300@PCHP>
Message-ID: <4C7FC021.3030501@uva.nl>



On 09/02/10 12:27, OvV_HN wrote:
> ........
>
>
> The only way I can get from the old latlon value to the new is using
> intermediate projections: from old latlon to old projected coordinates,
> from old projected coordinates to new projected coordinates using the
> old ellipsoid, and from new projected coordinates back to latlon on the
> new ellipsoid. The results look OK (within 10 meters), but I don't
> understand what I am doing here. I certainly dislike the faking of an
> old ellipsoid on a new projection.
>
>
> REPLY:
>
> Please elaborate on that! How do you calculate the new grid coordinates on
> the new ellipsoid starting just from grid coordinates on the old ellipsoid?
>
> In my opinion it would be simpler or even better to do a conversion from
> lat-lon to cartesian XYZ starting with the old ellipsoid and to convert back
> from cartesian to lat-lon with the parameters for the new ellipsoid. Regular
> datum transformation routines do that, but a Helmert transform is done in
> between (in cartesian space). So inactivate the Helmert transformation by
> giving dx=dy=dz=0, rx=ry=rz=0, ds=1.0.
>
Yes, that's logical but it just doesn't work. Doing a transformation 
with Helmert transformation parameters set to 0 and 1 just gives results 
that are hundreds of meters off.

Jan


From ovv at hetnet.nl  Thu Sep  2 08:25:44 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Thu, 2 Sep 2010 17:25:44 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <i5ls13$e1c$1@dough.gmane.org>
References: <4C7E1BAF.6000706@met.no> <4C7E30F4.8040000@uva.nl>
	<i5ls13$e1c$1@dough.gmane.org>
Message-ID: <78E1A2401B9147A3B64CACBBAD020B03@PCHP>

From: peifer <peifer <at> gmx.eu>
Subject: Re: How to convert a sphere to ellipsoid with correct datum?
Date: 2010-09-02 12:41:09 GMT

Oscar,

in practical terms of cs2cs usage (and leaving out the question about the
spherical case), doesn't this simply mean that one has to add +towgs84=0,0,0
on both sides, as I suggested earlier?

Or +towgs84=0,0,0,0,0,0,0  or +towgs84=0,0,0,0,0,0,1. It doesn't seem to
make much of a difference.

Hermann

cs2cs +proj=latlong +ellps=bessel  +to +proj=latlong +ellps=WGS84
10 60
10dE    60dN 0.000
^C

cs2cs +proj=latlong +ellps=bessel +towgs84=0,0,0  +to +proj=latlong
+ellps=WGS84 +towgs84=0,0,0
10 60
10dE    60d0'1.864"N -690.016
^C

.......

REPLY:

This is indeed what you get with a simple conversion from lat-lon on Bessel 
1841 to geocentric and then from geocentric to lat-lon on WGS84. If this 
conversion makes any sense, one has to judge carefully. Frank is very right 
about that!

BTW: in my earlier mail I suggested a scaling parameter ds=1.0.
This should be 0. What I meant was a scaling of one, but usually a number in 
ppm is asked, which will be added to 1.0 internally by the conversion 
routine.

Exactly HOW cs2cs works, I don't know. Read the manual or ask Frank.


Oscar van Vlijmen





From peifer at gmx.eu  Thu Sep  2 12:15:19 2010
From: peifer at gmx.eu (Hermann Peifer)
Date: Thu, 02 Sep 2010 21:15:19 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C7FC021.3030501@uva.nl>
References: <4C7E1BAF.6000706@met.no>	<4C7E30F4.8040000@uva.nl><i5ls13$e1c$1@dough.gmane.org>	<4C7E9628.6050902@uva.nl>	<2A8DA6B697D249579331C45A743E5300@PCHP>
	<4C7FC021.3030501@uva.nl>
Message-ID: <4C7FF7C7.9020301@gmx.eu>

On 02/09/2010 17:17, Jan Hartmann wrote:
> On 09/02/10 12:27, OvV_HN wrote:
>> In my opinion it would be simpler or even better to do a conversion from
>> lat-lon to cartesian XYZ starting with the old ellipsoid and to convert back
>> from cartesian to lat-lon with the parameters for the new ellipsoid. Regular
>> datum transformation routines do that, but a Helmert transform is done in
>> between (in cartesian space). So inactivate the Helmert transformation by
>> giving dx=dy=dz=0, rx=ry=rz=0, ds=1.0.
>>
> Yes, that's logical but it just doesn't work. Doing a transformation
> with Helmert transformation parameters set to 0 and 1 just gives results
> that are hundreds of meters off.
>

As an exercise, I just transformed lat-lon from one ellipsoid to another 
one by ussing the "Abridged Molodensky transformation" (EPSG dataset 
coordinate operation method code 9605) which doesn't go the long route 
(geographic 3D to geocentric + geocentric to geocentric + geocentric to 
geographic 3D) but uses some sort of shortcut. Using the 3 parameters dX 
= dY = dZ = O, I ended up with results which are pretty close to those 
from cs2cs. 1 meter away, perhaps. So I guess your hundreds of meters 
offset must have other reasons.

Hermann


From j.l.h.hartmann at uva.nl  Fri Sep  3 01:59:58 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Fri, 03 Sep 2010 10:59:58 +0200
Subject: [Proj] looking for the right params for RSO
In-Reply-To: <4C7FB1E9.7020600@pobox.com>
References: <20100827065714.317880@gmx.net>
	<4C7A8B88.1010904@gmx.eu>	<E4AB3DD44D22854B819908379DE4AD49D56C@SETHNWS023.carmenta.se>
	<4C7FB1E9.7020600@pobox.com>
Message-ID: <4C80B90E.6050207@uva.nl>



On 09/02/10 16:17, Frank Warmerdam wrote:
>
> FWTools isn't really being produced anymore

Hi Frank, any reason for that?

Jan


From j.l.h.hartmann at uva.nl  Fri Sep  3 03:52:49 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Fri, 03 Sep 2010 12:52:49 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C7FF7C7.9020301@gmx.eu>
References: <4C7E1BAF.6000706@met.no>	<4C7E30F4.8040000@uva.nl><i5ls13$e1c$1@dough.gmane.org>	<4C7E9628.6050902@uva.nl>	<2A8DA6B697D249579331C45A743E5300@PCHP>
	<4C7FC021.3030501@uva.nl> <4C7FF7C7.9020301@gmx.eu>
Message-ID: <4C80D381.9080807@uva.nl>

  On 09/02/10 21:15, Hermann Peifer wrote:
> On 02/09/2010 17:17, Jan Hartmann wrote:
>>
>> Yes, that's logical but it just doesn't work. Doing a transformation
>> with Helmert transformation parameters set to 0 and 1 just gives results
>> that are hundreds of meters off.
>>
>
> As an exercise, I just transformed lat-lon from one ellipsoid to 
> another one by ussing the "Abridged Molodensky transformation" (EPSG 
> dataset coordinate operation method code 9605) which doesn't go the 
> long route (geographic 3D to geocentric + geocentric to geocentric + 
> geocentric to geographic 3D) but uses some sort of shortcut. Using the 
> 3 parameters dX = dY = dZ = O, I ended up with results which are 
> pretty close to those from cs2cs. 1 meter away, perhaps. So I guess 
> your hundreds of meters offset must have other reasons.
>
>
That's a good hint. Could you give me the exact commands and data you 
used and their results, so I can adapt them to my situation?

Jan


From peifer at gmx.eu  Fri Sep  3 04:44:29 2010
From: peifer at gmx.eu (Hermann Peifer)
Date: Fri, 03 Sep 2010 13:44:29 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C80D381.9080807@uva.nl>
References: <4C7E1BAF.6000706@met.no>	<4C7E30F4.8040000@uva.nl><i5ls13$e1c$1@dough.gmane.org>	<4C7E9628.6050902@uva.nl>	<2A8DA6B697D249579331C45A743E5300@PCHP>
	<4C7FC021.3030501@uva.nl> <4C7FF7C7.9020301@gmx.eu>
	<4C80D381.9080807@uva.nl>
Message-ID: <4C80DF9D.7030805@gmx.eu>

  On 03/09/2010 12:52, Jan Hartmann wrote:
>  On 09/02/10 21:15, Hermann Peifer wrote:
>> On 02/09/2010 17:17, Jan Hartmann wrote:
>>>
>>> Yes, that's logical but it just doesn't work. Doing a transformation
>>> with Helmert transformation parameters set to 0 and 1 just gives 
>>> results
>>> that are hundreds of meters off.
>>>
>>
>> As an exercise, I just transformed lat-lon from one ellipsoid to 
>> another one by ussing the "Abridged Molodensky transformation" (EPSG 
>> dataset coordinate operation method code 9605) which doesn't go the 
>> long route (geographic 3D to geocentric + geocentric to geocentric + 
>> geocentric to geographic 3D) but uses some sort of shortcut. Using 
>> the 3 parameters dX = dY = dZ = O, I ended up with results which are 
>> pretty close to those from cs2cs. 1 meter away, perhaps. So I guess 
>> your hundreds of meters offset must have other reasons.
>>
>>
> That's a good hint. Could you give me the exact commands and data you 
> used and their results, so I can adapt them to my situation?
>
> Jan

You posted your cs2cs results before and I get the same here:

[peifer]> cs2cs -f "%.6f" +proj=longlat +a=6376950.4 +rf=309.65 
+towgs84=0,0,0 +to +proj=longlat +ellps=bessel +towgs84=0,0,0
4.8838828 51.5
4.883883        51.506347 -3.768025

The Bessel values are:

[peifer]> cs2cs -le | grep bessel
    bessel a=6377397.155    rf=299.1528128   Bessel 1841

Using my molodensky_abridged script from yesterday gives:

[peifer]> awk -v parms=6376950.4,309.65,6377397.155,299.1528128 -f 
molodensky_abridged.awk
4.8838828 51.5
4.883883        51.506342       -3.27222

The diff in latitude is around half a meter. There is no diff in 
longitude.  And I wouldn't know why there should be a diff in longitude 
when changing from one ellipsoid to another.

I could send you the awk code separately, as I doubt that there is a 
general interest in it. There should also be plenty of freeware and 
online converters out there.

Hermann


From j.l.h.hartmann at uva.nl  Sat Sep  4 05:15:32 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Sat, 04 Sep 2010 14:15:32 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C8120C0.9070009@gmx.eu>
References: <4C7E1BAF.6000706@met.no>	<4C7E30F4.8040000@uva.nl><i5ls13$e1c$1@dough.gmane.org>	<4C7E9628.6050902@uva.nl>	<2A8DA6B697D249579331C45A743E5300@PCHP>
	<4C7FC021.3030501@uva.nl> <4C7FF7C7.9020301@gmx.eu>
	<4C80D381.9080807@uva.nl> <4C80DF9D.7030805@gmx.eu>
	<4C8116DC.3090802@uva.nl> <4C8120C0.9070009@gmx.eu>
Message-ID: <4C823864.2060906@uva.nl>



On 09/03/10 18:22, Hermann Peifer wrote:
>
> I think this story with the Dutch church towers already circulated 
> through the proj mailing list, in 2008, as far as I can see:
> http://osgeo-org.1803224.n2.nabble.com/template/TplServlet.jtp?tpl=search-page&node=2062109&query=Dutch+church+towers 
> <http://osgeo-org.1803224.n2.nabble.com/template/TplServlet.jtp?tpl=search-page&node=2062109&query=Dutch+church+towers> 
>
>
> I see that you started it, so it seems to be an ongoing issue? I am 
> sorry, but I do not have any special expert knowledge in this specific 
> case.
>
>
Thanks Hermann, that was really great help. To explain why I keep coming 
back on the issue: I am georeferencing the oldest cadastral maps of the 
Netherland from 1830. There was no nation-wide triangulation then, but 
for the zero point of the local grids the surveyors chose in most cases 
the same church towers that were twenty years later used for the 
national triangulation. If I can put that point exactly on the modern 
map, I can also put the whole cadastral map of a particular community on 
the modern cadastral map, with accurucies up to a few meters.

That accuracy is important, since there are lots of legal issues about 
old buildings, parcels and landscapes that influence their price and 
what you are legally allowed to do with them. A difference of 50 meters 
in  a very parcellated city like Amsterdam can have severe consequences 
for prices, subsidies, "protectability" etc and could affect lots of 
real people at this actual moment.

So the 60 meters accuracy I can get by just using the conventional PROJ 
parameters in transforming from the 19th to the 20th century system just 
isn't enough. I can transfer the zero point of the 19th century 
triangulation by 60 m., but as long as I can't underpin that in a 
rigorous mathematical way, the results will always be disputable. I 
really expect to open a big can of worms when people overlay their 
historic properties over Google satellite with an apparent meter-like 
accuracy, that turns out to be disputable when they have a closer look 
at the methods I have used.

Again thanks for your help: I am now confident that converting latlon 
values on different ellipsoids give correct results when using 
+towgs84=0,0,0 to both parameter lists. I still have to hunt for the 
last 60 meters of accuracy, though. The devil is, as always, in the 
latest en finest detail.

Jan


From support.mn at elisanet.fi  Mon Sep  6 06:04:53 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Mon, 6 Sep 2010 16:04:53 +0300 (EEST)
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
Message-ID: <24202253.2835151283778294304.JavaMail.support.mn@elisanet.fi>

Hello,

The datum shift (towgs84...) is exactly what you need to fix most of the
common errors found in most local mapping datums. It can fix x-y-z-shif,
x-y-z-rotation and scale (7 parameter version). If you need more
adjustment, you have to add some polynomial fitting function
somewhere between the input and output.

There are methods to find those parameters when given some
data to be fixed. 60 m should not be any problem.

If that was not the question I answered it anyway.

Janne.

-------------------------------

Jan Hartmann [j.l.h.hartmann at uva.nl] kirjoitti: 
> 
> 
> Again thanks for your help: I am now confident that converting latlon 
> values on different ellipsoids give correct results when using 
> +towgs84=0,0,0 to both parameter lists. I still have to hunt for the 
> last 60 meters of accuracy, though. The devil is, as always, in the 
> latest en finest detail.
> 
> Jan



From j.l.h.hartmann at uva.nl  Mon Sep  6 06:15:28 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Mon, 06 Sep 2010 15:15:28 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C832EB7.8070504@gmx.eu>
References: <4C7E1BAF.6000706@met.no>	<4C7E30F4.8040000@uva.nl><i5ls13$e1c$1@dough.gmane.org>	<4C7E9628.6050902@uva.nl>	<2A8DA6B697D249579331C45A743E5300@PCHP>
	<4C7FC021.3030501@uva.nl> <4C7FF7C7.9020301@gmx.eu>
	<4C80D381.9080807@uva.nl> <4C80DF9D.7030805@gmx.eu>
	<4C8116DC.3090802@uva.nl> <4C8120C0.9070009@gmx.eu>
	<4C823864.2060906@uva.nl> <4C832EB7.8070504@gmx.eu>
Message-ID: <4C84E970.6000207@uva.nl>



On 09/05/10 07:46, Hermann Peifer wrote:
>
>  On 04/09/2010 14:15, Jan Hartmann wrote:
>> Thanks Hermann, that was really great help. To explain why I keep 
>> coming back on the issue: I am georeferencing the oldest cadastral 
>> maps of the Netherland from 1830. There was no nation-wide 
>> triangulation then,..
>
> You're welcome.
>
> You wrote in an earlier post that you observed a N-S and a (smaller, 
> but noticeable) E-W shift in you transformations. As we all agree (I 
> hope), the E-W shift must be unrelated to any change in ellipsoid. In 
> this case, I would have immediately checked if the tool's (cs2cs, 
> proj) Bonne projection is the culprit. Maybe some rare variant of 
> Bonne was used back then in 1830, or a weird projection parameter, 
> which is not supported in 
> trac.osgeo.org/proj/browser/trunk/proj/src/PJ_bonne.c 
> <http://trac.osgeo.org/proj/browser/trunk/proj/src/PJ_bonne.c>, or 
> something like that.
>
> I would have taken a textbook (better: two) and implemented the Dutch 
> Bonne in my favourite scripting language in order to verify if this 
> possible source of errors can be excluded. It shouldn't take more than 
> one sunny Sunday afternoon to do this check.
>
> Hermann
OK, that's another good suggestion I never thought of. The complete math 
behind the projection used in 1850 is described in the "Meetkunstige 
Beschrijving van het Koningrijk der Nederlanden" (Geometric Descriptrion 
of the Kingdom of the Netherlands), which is even online, I see, now I 
am replying this email:

http://books.google.nl/books?id=sWZAAAAAcAAJ&printsec=frontcover&dq=meetkunstige+beschrijving&source=bl&ots=VEzppSD5t3&sig=huYtXD4vB4izVnselVhGEO_mF_8&hl=nl&ei=t-aETKPtNcSiOPGBpcAO&sa=X&oi=book_result&ct=result&resnum=3&ved=0CCEQ6AEwAg#v=onepage&q&f=false

I have a few handbooks on my desk, including Snyder's 
(http://en.wikipedia.org/wiki/John_P._Snyder):

http://books.google.nl/books?id=m346AAAAIAAJ&printsec=frontcover&dq=snyder+map+projections&source=bl&ots=vrTxpoRD5x&sig=ivPjkkaisBvAARsrzM2A-F2KF7A&hl=nl&ei=fOeETM-wHcrKOMOCkOcP&sa=X&oi=book_result&ct=result&resnum=1&ved=0CBUQ6AEwAA#v=onepage&q&f=false

or:

http://pubs.er.usgs.gov/publication/pp1395

I'm not sure I can tackle this on one Sunday afternoon, sunny or rainy, 
though. Any bidders from the list :-)? A translation from Dutch to 
English would not be beyond my powers.

Jan



From j.l.h.hartmann at uva.nl  Mon Sep  6 06:33:59 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Mon, 06 Sep 2010 15:33:59 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <24202253.2835151283778294304.JavaMail.support.mn@elisanet.fi>
References: <24202253.2835151283778294304.JavaMail.support.mn@elisanet.fi>
Message-ID: <4C84EDC7.9030400@uva.nl>



On 09/06/10 15:04, support.mn at elisanet.fi wrote:
> There are methods to find those parameters when given some
> data to be fixed. 60 m should not be any problem.
Hi Janne,

Where do I find those methods?

Jan


From Mikael.Rittri at carmenta.com  Tue Sep  7 00:04:17 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 7 Sep 2010 07:04:17 +0000
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C84EDC7.9030400@uva.nl>
References: <24202253.2835151283778294304.JavaMail.support.mn@elisanet.fi>
	<4C84EDC7.9030400@uva.nl>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49E2A0@SETHNWS023.carmenta.se>

Janne wrote:

> There are methods to find those parameters when given some 
> data to be fixed. 60 m should not be any problem.

I agree with Janne. In fact, I think you, Jan, were right
in your earlier thread, that started with 

  http://lists.maptools.org/pipermail/proj/2008-November/004041.html

that what you need is a datum shift from a Dutch datum of 
the 1850s to the more modern Amersfoort datum.  Or, if you 
want to use cs2cs, you need a datum shift from the 1850s 
datum directly to WGS84.  

Your problem is just that you haven't found a published datum shift.

In the November 2008 thread, a few people said that a north-south 
mismatch of about 650 meters was too large to be blamed on differences 
between datums.  They seem to have convinced you that it is not a datum 
shift you are looking for. However, I think the 650 meters mismatch was 
artificially created by your attempt to do an ellipsoid-to-ellipsoid 
conversion without any datum shifts, which is the same as implicitly 
assuming that the Ackermann ellipsoid of the 1850s datum and the Bessel 
ellipsoid of the Amersfoort datum have coinciding centers and axes. 
(As Frank also noted, http://lists.maptools.org/pipermail/proj/2008-November/004050.html ).
This implicit assumption is just wrong. I'd guess that it is 600 - 700 
meters between the ellipsoid centers. 

If you, instead, had just directly compared longitudes and latitudes 
between coordinates in the 1850s datum and in Amersfoort, regarding 
1 minute of latitude as 1 nautical mile, I think you'll find that 
the north-south mismatch is more like 50 - 60 meters.  This means
that it is an ordinary datum shift you are looking for. 

What I'd do, if I were you, is to take those positions that you know 
in both datums (the 1850s one and Amersfoort).  Those in Amersfoort I 
would convert to WGS84 by the appropriate 7-parameter datum shift.  
Then, I would convert the coordinates to geocentric Cartesian X,Y,Z 
coordinates, both for the 1850s datum and for WGS84.  Now, for each 
position, take the vector difference from its X,Y,Z-coordinates in 
the 1850s datum to its X,Y-Z-coordinates in WGS84.  Then take the 
average of all those difference vectors.  This average should be 
a reasonable 3-parameter datum shift from the 1850s datum to WGS84.

The standard deviation of the difference vectors, and the outliers
compared to the average, should give you an estimate of the accuracy
of the 3-parameter datum shift.

If you have enough common points, you can also derive a 7-parameter 
datum shift, which could compensate overall rotation and overall 
scale difference between the 1850s datum and WGS84.  But I don't 
really know the mathematics for deriving a 7-parameter datum shift.  
There should be software available, but I don't know if there is 
any open source or free software.

If the 1850s datum has many local distortions, a 7-parameter datum 
shift for all of the Netherlands might not be so accurate anyway.  
Another approach would then be to construct many local 3-parameter 
datum shifts, each one based only on the common positions in a 
local area, like a county, or perhaps the common positions that
are nearest each of your local church of interest. 

Best regards,

Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com


From j.l.h.hartmann at uva.nl  Tue Sep  7 03:10:24 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Tue, 07 Sep 2010 12:10:24 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49E2A0@SETHNWS023.carmenta.se>
References: <24202253.2835151283778294304.JavaMail.support.mn@elisanet.fi>
	<4C84EDC7.9030400@uva.nl>
	<E4AB3DD44D22854B819908379DE4AD49E2A0@SETHNWS023.carmenta.se>
Message-ID: <4C860F90.1060605@uva.nl>

  Thanks Mikkael, I'll follow that road too. I corresponded over this 
with a Dutch geodesist who programmed a datum conversion tool (Jan 
Hendrikse, http://members.home.nl/hendrikse/), but the results were not 
as good as transforming the triangulation points using the original PROJ 
formula, and afterwards rubbersheeting them to their exact modern 
position. There was a problem wit GDAL, though: it's not possible to 
rubbersheet an already georeferenced map, due to a limitation in the 
Geotiff format. I think now that it can be done by using the VRT format.

And there remains the question of proof. I can (and will) compute the 
datum shift, and can get a map that is within 10m accuracy, about the 
theoretical maximum, but is a datum shift really the reason for the 
deviation? Did they really use an ellipsoid with a different center and 
location in 1850? I find it hard to believe, at least I never found an 
indication for that, and I read the handbooks used in 1850. And Cliff 
Mugnier doesn't think it either 
(http://lists.maptools.org/pipermail/proj/2008-November/004042.html).

So, while I know now how to solve the problem computationally  and get a 
map that is as exact as can be (thanks to all you input, thanks!), I am 
still wondering about the reasons for the deviation. There could be some 
legal issues (although I am not much afraid of those, it's too long 
ago), but for the most I don't wont to be right for the wrong reasons. 
I'm not a great believer in statistical "proofs" where the underlying 
law or model is unknown.

Thanks again for all your responses,

Jan

On 09/07/10 09:04, Mikael Rittri wrote:
> Janne wrote:
>
>> There are methods to find those parameters when given some
>> data to be fixed. 60 m should not be any problem.
> I agree with Janne. In fact, I think you, Jan, were right
> in your earlier thread, that started with
>
>    http://lists.maptools.org/pipermail/proj/2008-November/004041.html
>
> that what you need is a datum shift from a Dutch datum of
> the 1850s to the more modern Amersfoort datum.  Or, if you
> want to use cs2cs, you need a datum shift from the 1850s
> datum directly to WGS84.
>
> Your problem is just that you haven't found a published datum shift.
>
> In the November 2008 thread, a few people said that a north-south
> mismatch of about 650 meters was too large to be blamed on differences
> between datums.  They seem to have convinced you that it is not a datum
> shift you are looking for. However, I think the 650 meters mismatch was
> artificially created by your attempt to do an ellipsoid-to-ellipsoid
> conversion without any datum shifts, which is the same as implicitly
> assuming that the Ackermann ellipsoid of the 1850s datum and the Bessel
> ellipsoid of the Amersfoort datum have coinciding centers and axes.
> (As Frank also noted,http://lists.maptools.org/pipermail/proj/2008-November/004050.html  ).
> This implicit assumption is just wrong. I'd guess that it is 600 - 700
> meters between the ellipsoid centers.
>
> If you, instead, had just directly compared longitudes and latitudes
> between coordinates in the 1850s datum and in Amersfoort, regarding
> 1 minute of latitude as 1 nautical mile, I think you'll find that
> the north-south mismatch is more like 50 - 60 meters.  This means
> that it is an ordinary datum shift you are looking for.
>
> What I'd do, if I were you, is to take those positions that you know
> in both datums (the 1850s one and Amersfoort).  Those in Amersfoort I
> would convert to WGS84 by the appropriate 7-parameter datum shift.
> Then, I would convert the coordinates to geocentric Cartesian X,Y,Z
> coordinates, both for the 1850s datum and for WGS84.  Now, for each
> position, take the vector difference from its X,Y,Z-coordinates in
> the 1850s datum to its X,Y-Z-coordinates in WGS84.  Then take the
> average of all those difference vectors.  This average should be
> a reasonable 3-parameter datum shift from the 1850s datum to WGS84.
>
> The standard deviation of the difference vectors, and the outliers
> compared to the average, should give you an estimate of the accuracy
> of the 3-parameter datum shift.
>
> If you have enough common points, you can also derive a 7-parameter
> datum shift, which could compensate overall rotation and overall
> scale difference between the 1850s datum and WGS84.  But I don't
> really know the mathematics for deriving a 7-parameter datum shift.
> There should be software available, but I don't know if there is
> any open source or free software.
>
> If the 1850s datum has many local distortions, a 7-parameter datum
> shift for all of the Netherlands might not be so accurate anyway.
> Another approach would then be to construct many local 3-parameter
> datum shifts, each one based only on the common positions in a
> local area, like a county, or perhaps the common positions that
> are nearest each of your local church of interest.
>
> Best regards,
>
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100907/dbd95c8d/attachment.html>

From ovv at hetnet.nl  Tue Sep  7 10:35:37 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Tue, 7 Sep 2010 19:35:37 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
Message-ID: <08072ECF4A6349D0AFB1F766CEA2AD76@PCHP>

In the mean time I've found a contemporary reference about the modified 
Flamsteed projection.

Traité de topographique, d'arpentage et de nivellement, L. Puissant, 2ème 
edition, Paris, 1820.
Chapitre III: Théorie analytique de la projection modifiée de Flamsteed, pp. 
114 f.f.

It's on google books.

This chapter gives a mathematical description of said projection. It's 
probably worth checking this projection against the (current interpretation 
of the) Bonne projection you used.

Oscar van Vlijmen


IN REPLY TO:

From: Jan Hartmann <j.l.h.hartmann <at> uva.nl>
Subject: Re: How to convert a sphere to ellipsoid with correct datum?
Date: 2010-09-07 10:10:24 GMT

Thanks Mikkael, I'll follow that road too. I corresponded over this with a 
Dutch geodesist who programmed a datum conversion tool (Jan Hendrikse, 
http://members.home.nl/hendrikse/), but the results were not as good as 
transforming the triangulation points using the original PROJ formula, and 
afterwards rubbersheeting them to their exact modern position. There was a 
problem wit GDAL, though: it's not possible to rubbersheet an already 
georeferenced map, due to a limitation in the Geotiff format. I think now 
that it can be done by using the VRT format.

And there remains the question of proof. I can (and will) compute the datum 
shift, and can get a map that is within 10m accuracy, about the theoretical 
maximum, but is a datum shift really the reason for the deviation? Did they 
really use an ellipsoid with a different center and location in 1850? I find 
it hard to believe, at least I never found an indication for that, and I 
read the handbooks used in 1850. And Cliff Mugnier doesn't think it either 
(http://lists.maptools.org/pipermail/proj/2008-November/004042.html).

So, while I know now how to solve the problem computationally  and get a map 
that is as exact as can be (thanks to all you input, thanks!), I am still 
wondering about the reasons for the deviation. There could be some legal 
issues (although I am not much afraid of those, it's too long ago), but for 
the most I don't wont to be right for the wrong reasons. I'm not a great 
believer in statistical "proofs" where the underlying law or model is 
unknown.

Thanks again for all your responses,

Jan





From cjmce at lsu.edu  Tue Sep  7 11:13:36 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Tue, 7 Sep 2010 13:13:36 -0500
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
References: <08072ECF4A6349D0AFB1F766CEA2AD76@PCHP>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A649D@email002.lsu.edu>

This has been an interesting thread.  Consider taking a look at: 
 
G. Timár, and C.J. Mugnier, GIS Integration of the 1:75,000 Romanian Topographic Map Series from the World War I, Geophysical Research Abstracts, Vol. 11, EGU2009-1-3, 2009.  
 
If you look up more of Dr. Timár's publications, you will find a number of helpful insights in georeferencing ancient maps of Europe.
 
Cliff
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of OvV_HN
Sent: Tue 07-Sep-10 12:35
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] How to convert a sphere to ellipsoid with correct datum?



In the mean time I've found a contemporary reference about the modified
Flamsteed projection.

Traité de topographique, d'arpentage et de nivellement, L. Puissant, 2ème
edition, Paris, 1820.
Chapitre III: Théorie analytique de la projection modifiée de Flamsteed, pp.
114 f.f.

It's on google books.

This chapter gives a mathematical description of said projection. It's
probably worth checking this projection against the (current interpretation
of the) Bonne projection you used.

Oscar van Vlijmen


IN REPLY TO:

From: Jan Hartmann <j.l.h.hartmann <at> uva.nl>
Subject: Re: How to convert a sphere to ellipsoid with correct datum?
Date: 2010-09-07 10:10:24 GMT

Thanks Mikkael, I'll follow that road too. I corresponded over this with a
Dutch geodesist who programmed a datum conversion tool (Jan Hendrikse,
http://members.home.nl/hendrikse/), but the results were not as good as
transforming the triangulation points using the original PROJ formula, and
afterwards rubbersheeting them to their exact modern position. There was a
problem wit GDAL, though: it's not possible to rubbersheet an already
georeferenced map, due to a limitation in the Geotiff format. I think now
that it can be done by using the VRT format.

And there remains the question of proof. I can (and will) compute the datum
shift, and can get a map that is within 10m accuracy, about the theoretical
maximum, but is a datum shift really the reason for the deviation? Did they
really use an ellipsoid with a different center and location in 1850? I find
it hard to believe, at least I never found an indication for that, and I
read the handbooks used in 1850. And Cliff Mugnier doesn't think it either
(http://lists.maptools.org/pipermail/proj/2008-November/004042.html).

So, while I know now how to solve the problem computationally  and get a map
that is as exact as can be (thanks to all you input, thanks!), I am still
wondering about the reasons for the deviation. There could be some legal
issues (although I am not much afraid of those, it's too long ago), but for
the most I don't wont to be right for the wrong reasons. I'm not a great
believer in statistical "proofs" where the underlying law or model is
unknown.

Thanks again for all your responses,

Jan



_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100907/7359ec66/attachment.html>

From support.mn at elisanet.fi  Tue Sep  7 14:18:38 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Wed, 8 Sep 2010 00:18:38 +0300 (EEST)
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
Message-ID: <10055419.1377341283894319123.JavaMail.support.mn@elisanet.fi>

Hello,

You could start reading this:

http://en.wikipedia.org/wiki/Helmert_transformation#Calculating_the_parameters

"This gives a system of linear equations with seven equations and seven unknowns, which can be solved."

and continue here:

http://en.wikipedia.org/wiki/System_of_linear_equations

check also the links given there.

regards: Janne

------------------------------------------------------

Jan Hartmann [j.l.h.hartmann at uva.nl] kirjoitti:
> Hi Janne,
> Where do I find those methods?
> Jan



From j.l.h.hartmann at uva.nl  Wed Sep  8 00:47:32 2010
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Wed, 08 Sep 2010 09:47:32 +0200
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7026A649D@email002.lsu.edu>
References: <08072ECF4A6349D0AFB1F766CEA2AD76@PCHP>
	<B597ADFC46B67741B18EA6AA13613FF7026A649D@email002.lsu.edu>
Message-ID: <4C873F94.7000009@uva.nl>

  Hi Cliff,

Thanks for the hints. Could you send a copy of that article? The journal 
is not available in the Netherlands.

And would appreciate if you could give me a few of Dr. Timar's titles. 
The search interface of our National Library shows thousands of hits on 
that name, mostly in Hungarian by people called Attilla.

Regards,

Jan

On 09/07/10 20:13, Clifford J Mugnier wrote:
> This has been an interesting thread.  Consider taking a look at:
> G. Timár, and C.J. Mugnier, *GIS Integration of the 1:75,000 Romanian 
> Topographic Map Series from the World War I, *Geophysical Research 
> Abstracts, Vol. 11, EGU2009-1-3, 2009.
> If you look up more of Dr. Timár's publications, you will find a 
> number of helpful insights in georeferencing ancient maps of Europe.
> Cliff
> Clifford J. Mugnier, C.P., C.M.S.
> Chief of Geodesy,
> *Center for GeoInformatics*
> Department of Civil Engineering
> Patrick F. Taylor Hall 3223A
> *LOUISIANA STATE UNIVERSITY *
> Baton Rouge, LA 70803
> Voice and Facsimile: (225) 578-8536 [Academic]
> Voice and Facsimile: (225) 578-4578 [Research]
> Cell: (225) 238-8975 [Academic & Research]
> Honorary Life Member of the
> Louisiana Society of Professional Surveyors
> Fellow Emeritus of the ASPRS
> Member of the Americas Petroleum Survey Group
>
>
> ------------------------------------------------------------------------
> *From:* proj-bounces at lists.maptools.org on behalf of OvV_HN
> *Sent:* Tue 07-Sep-10 12:35
> *To:* PROJ.4 and general Projections Discussions
> *Subject:* Re: [Proj] How to convert a sphere to ellipsoid with 
> correct datum?
>
> In the mean time I've found a contemporary reference about the modified
> Flamsteed projection.
>
> Traité de topographique, d'arpentage et de nivellement, L. Puissant, 2ème
> edition, Paris, 1820.
> Chapitre III: Théorie analytique de la projection modifiée de 
> Flamsteed, pp.
> 114 f.f.
>
> It's on google books.
>
> This chapter gives a mathematical description of said projection. It's
> probably worth checking this projection against the (current 
> interpretation
> of the) Bonne projection you used.
>
> Oscar van Vlijmen
>
>
> IN REPLY TO:
>
> From: Jan Hartmann <j.l.h.hartmann <at> uva.nl>
> Subject: Re: How to convert a sphere to ellipsoid with correct datum?
> Date: 2010-09-07 10:10:24 GMT
>
> Thanks Mikkael, I'll follow that road too. I corresponded over this with a
> Dutch geodesist who programmed a datum conversion tool (Jan Hendrikse,
> http://members.home.nl/hendrikse/), but the results were not as good as
> transforming the triangulation points using the original PROJ formula, and
> afterwards rubbersheeting them to their exact modern position. There was a
> problem wit GDAL, though: it's not possible to rubbersheet an already
> georeferenced map, due to a limitation in the Geotiff format. I think now
> that it can be done by using the VRT format.
>
> And there remains the question of proof. I can (and will) compute the 
> datum
> shift, and can get a map that is within 10m accuracy, about the 
> theoretical
> maximum, but is a datum shift really the reason for the deviation? Did 
> they
> really use an ellipsoid with a different center and location in 1850? 
> I find
> it hard to believe, at least I never found an indication for that, and I
> read the handbooks used in 1850. And Cliff Mugnier doesn't think it either
> (http://lists.maptools.org/pipermail/proj/2008-November/004042.html).
>
> So, while I know now how to solve the problem computationally  and get 
> a map
> that is as exact as can be (thanks to all you input, thanks!), I am still
> wondering about the reasons for the deviation. There could be some legal
> issues (although I am not much afraid of those, it's too long ago), 
> but for
> the most I don't wont to be right for the wrong reasons. I'm not a great
> believer in statistical "proofs" where the underlying law or model is
> unknown.
>
> Thanks again for all your responses,
>
> Jan
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20100908/e137ae91/attachment.html>

From Mikael.Rittri at carmenta.com  Wed Sep  8 02:57:55 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 8 Sep 2010 09:57:55 +0000
Subject: [Proj] How to convert a sphere to ellipsoid with correct datum?
In-Reply-To: <4C873F94.7000009@uva.nl>
References: <08072ECF4A6349D0AFB1F766CEA2AD76@PCHP>
	<B597ADFC46B67741B18EA6AA13613FF7026A649D@email002.lsu.edu>
	<4C873F94.7000009@uva.nl>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49E37F@SETHNWS023.carmenta.se>

Jan Hartmann wrote

> ...if you could give me a few of Dr. Timár's titles.

Dr. Timár has a website,

http://sas2.elte.hu/tg/tge.html

including a long list of publications,

http://sas2.elte.hu/tg/tgpublist_en.htm

Regards,
  Mikael Rittri
  Carmenta AB
  Sweden
  www.carmenta.com

________________________________

From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Jan Hartmann
Sent: den 8 september 2010 09:48
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] How to convert a sphere to ellipsoid with correct datum?

[--- text deleted ---]

From anitagraser at gmx.at  Wed Sep  8 05:05:07 2010
From: anitagraser at gmx.at (Anita Graser)
Date: Wed, 08 Sep 2010 15:05:07 +0300
Subject: [Proj] Discontinous projections
Message-ID: <op.vipqis2hna7rjy@anita-pc.mshome.net>

Hi,

Does proj4 support discontinous projections like Butterfly? This question  
arose on gis.stackexchange  
(http://gis.stackexchange.com/questions/1775/discontinous-or-interrupted-map-projections).  
 From what I've found so far, I'd guess it doesn't.

Best wishes,
Anita


From ckarney at sarnoff.com  Sun Sep 12 04:35:07 2010
From: ckarney at sarnoff.com (Charles Karney)
Date: Sun, 12 Sep 2010 07:35:07 -0400
Subject: [Proj] Area of a geodesic polygon
Message-ID: <19596.47851.238324.83448@petrel.petrel.org>

GeographicLib now includes a utility Planimeter for computing the areas
of geodesic polygons.  See

  http://geographiclib.sf.net/html/utilities.html#planimeter

The basic method entails computing the area "under" a geodesic, i.e.,
the area bounded by a geodesic, 2 meridians, and the equator and is
adapted from

    J. Danielsen,
    The Area under the Geodesic,
    Survey Review 30 (232), 61-66 (1989)

who sets up a rigorous framework for the problem.  I've extended his
series so that the truncation error is less than roundoff and rearranged
the terms to give a simple trigonometric series which is amenable to
Clenshaw summation.  The roundoff error is typically 0.1 m^2 per vertex
or so.

A similar formulation is given by

    L.E. Sjöberg,
    Determination of areas on the plane, sphere and ellipsoid,
    Survey Review 38 (301), 583-593 (July, 2006)

but this results in integrals which diverge for geodesics which pass
close to a pole.

In my reformulation of Danielsen's method, I express the area under the
geodesic, S12, as

  S12 = S(sigma2) - S(sigma1)
  S(sigma) = c^2*alpha + e^2*a^2 * cos(alpha0)*sin(alpha0) * I4(sigma)
  I4(sigma) = - integrate(
       (t(ep^2) - t(k^2*sin(sigma)^2)) / (ep^2 - k^2*sin(sigma)^2),
       sigma)
  t(x) = sqrt(1+1/x) * asinh(sqrt(x)) + x

  a = major radius
  c = authalic radius (area of ellipsoid = 4*pi*c^2)
  e = eccentricity
  ep = second eccentricity, ep^2 = e^2/(1-e^2)
  alpha = azimuth of geodesic
  alpha0 = azimuth at the equator crossing
  k = ep*cos(alpha0)
  sigma = arc length on auxiliary sphere (measured from the equator)

This expression for S12 is exact.  I then expand I4 in a joint Taylor
series in ep^2 and k^2 to give a rapidly convergent expansion similar to
Danielsen's.  The coefficients of the expansion C4[i] are given in

  http://geographiclib.sf.net/html/geodesic.html#geodseries

The attractive feature of this method is that computing the area of an
polygon with N sides take a time which scales as O(N).  The standard
alternative method is to transform the points to an equal-area
projection and compute the plane area.  However this will take a time
which scales as the length of the perimeter (so that the geodesic sides
may be faithfully represented in the projected space).  This comparison
supposes, of course, that the sides of the polygon are geodesics.

-- 
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662


From al001 at uni-koeln.de  Sun Sep 12 10:32:37 2010
From: al001 at uni-koeln.de (Irwin Scollar)
Date: Sun, 12 Sep 2010 19:32:37 +0200
Subject: [Proj] Belgian 2008 Coordinates
In-Reply-To: <mailman.1.1284310801.494.proj@lists.maptools.org>
References: <mailman.1.1284310801.494.proj@lists.maptools.org>
Message-ID: <201009121732.o8CHWdiS010811@smtp-auth.uni-koeln.de>

I need to use EPSG 3812 to read and write GeoTiffs using code from 
LibGeoTiff 1.3.0, and although the parameters are in the 
coordinate_reference_system.csv file, I can't open a GeoTiff file 
with these parameters correctly and receive an "unkown 3812" error in 
the geotifcp output.

The proj4 entry in the EPSG Spatial Reference is empty, but the Human 
Readable OGC WKT entry correctly shows:

PROJCS["ETRS89 / Belgian Lambert 2008",
     GEOGCS["ETRS89",
         DATUM["European Terrestrial Reference System 1989",
             SPHEROID["GRS 1980",6378137.0,298.257222101,
                 AUTHORITY["EPSG","7019"]],
             TOWGS84[0.0,0.0,0.0,0.0,0.0,0.0,0.0],
             AUTHORITY["EPSG","6258"]],
         PRIMEM["Greenwich",0.0,
             AUTHORITY["EPSG","8901"]],
         UNIT["degree",0.017453292519943295],
         AXIS["Geodetic latitude",NORTH],
         AXIS["Geodetic longitude",EAST],
         AUTHORITY["EPSG","4258"]],
     PROJECTION["Lambert Conic Conformal (2SP)",
         AUTHORITY["EPSG","9802"]],
     PARAMETER["central_meridian",4.359215833333335],
     PARAMETER["latitude_of_origin",50.79781500000001],
     PARAMETER["standard_parallel_1",49.833333333333336],
     PARAMETER["false_easting",649328.0],
     PARAMETER["false_northing",665262.0],
     PARAMETER["standard_parallel_2",51.16666666666667],
     UNIT["m",1.0],
     AXIS["Easting",EAST],
     AXIS["Northing",NORTH],
     AUTHORITY["EPSG","3812"]]

Can this be patched in libgeotif?  If so, where should the patch(es) 
be made, and what should be the correct entry in epsg_pcs.inc ?

I tried

/* Newer PCS */
ValuePair(PCS_ETRS89_Belgium_Lambert_2008, 3812)

without success.

Irwin Scollar



From alexander.bruy at gmail.com  Wed Sep 15 11:00:00 2010
From: alexander.bruy at gmail.com (Alexander Bruy)
Date: Wed, 15 Sep 2010 21:00:00 +0300
Subject: [Proj] Using Proj with Delphi
Message-ID: <AANLkTikEpDx2nEmTsaEKouUO4jfPxE_Nhv7sFUgM9s8M@mail.gmail.com>

Hi all,

I want to use Proj with Delphi and FreePascal. At the Proj site i find
Pascal interface units for Proj 4.4.3, 4.4.6 and 4.4.7 [1]. This units are
bit outdated and to use them users need to build Proj from
modified sources.

I decide to create bindings for latest Proj version 4.7.0 that don't need
any modifications in library source code. Anyone working on this or
interested in Pascal Proj bindings?


Also I want to know is it possible to do affine transformation with Proj?
I look at docs and find nothing about this.

Thanks

[1] http://www.triplexware.huckfinn.de/geogfix.html#proj

-- 
Alexander Bruy


From ckarney at sarnoff.com  Sun Sep 19 06:37:31 2010
From: ckarney at sarnoff.com (Charles Karney)
Date: Sun, 19 Sep 2010 09:37:31 -0400
Subject: [Proj] Area of a spherical polygon
Message-ID: <19606.4635.633619.610549@petrel.petrel.org>

The area of a polygon on a (unit) sphere is given by the spherical
excess

  A = 2*pi - sum(exterior angles)

However this is badly conditioned if the polygon is small.  In this
case, use

  A = sum S_{i,i+1} over the edges of the polygon

where S12 is the area of the quadrilateral bounded by an edge of the
polygon, two meridians, and the equator, i.e., with vertices

  (phi1,lambda1); (phi2,lambda2);
  (0,   lambda1); (0,   lambda2); 

S12 is given by

  tan(S12/2) = tan(lambda12/2) * ( tan(phi1/2) + tan(phi2/2) )
                           / ( 1 + tan(phi1/2) * tan(phi2/2) )
             = tan(lambda12/2) * tanh( (lam(phi1) + lam(phi2))/2 )

where lambda12 = lambda2 - lambda1 and lam(x) is the lambertian (or
inverse gudermannian) function

  lam(x) = asinh(tan(x)) = atanh(sin(x)) = 2*atanh(tan(x/2))

Notes:

* the formula for S12 is exact, except that...

* it is indeterminate if an edge is a semi-circle;

* the formula for A applies only if the polygon does not include a pole
  (if it does, then add +/- pi to the result);

* in the limit of small phi and lambda, S12 reduces to the trapezoidal
  formula, S12 = (lambda2 - lambda1) * (phi1 + phi2)/2;

* I derived this result from the equation for the area of a spherical
  triangle in terms of two edges and the included angle given by, e.g.,
  Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).  See
    http://books.google.com/books?id=3uBHAAAAIAAJ&pg=PA71

* I would be interested to know if this formula for S12 is already
  known.

  --Charles

-- 
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662


From hamed.amini at hotmail.co.uk  Mon Sep 20 03:04:25 2010
From: hamed.amini at hotmail.co.uk (Hamed Amini)
Date: Mon, 20 Sep 2010 03:04:25 -0700 (PDT)
Subject: [Proj] ED50_UTM to ED50_TM (Not sure!)
Message-ID: <1284977065989-5549777.post@n2.nabble.com>


Hi there,

I'd like to perform a transformation using cs2cs as a beginner. Can you
please if I can do the following conversion using proj, and if so, what
command should I use?

Thanks,
Hamed


FROM 

--------------------------------------------------------------------------------
GEODETIC DATUM AS SURVEY  ED50        INTERNATIONA 6378388.000 297.0000000
DATUM SHIFT ED50 TO WGS84  -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000
GEODETIC DATUM POSTPROC.  ED50        INTERNATIONA 6378388.000 297.0000000
DATUM SHIFT ED50 TO WGS84  -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000
DATUM SHIFTS                 0.0   0.0   0.0 0.000 0.000 0.000 0.0000000
VERTICAL DATUM            ES                      ECHO SOUNDER POSITION
PROJECTION                001 U.T.M. NORTHERN HEMISHPERE
ZONE                      31 N
GRID UNITS                1 INTERNATIONAL METERS    1.000000000000
HEIGHT UNITS              1 INTERNATIONAL METERS    1.000000000000
ANGULAR UNITS             1 DEGREES
--------------------------------------------------------------------------------

TO 

--------------------------------------------------------------------------------
GEODETIC DATUM (SURVEY)    ED50-UK     HAYFORD INT  6378388.000 297.0000000
1ED-50 TO WGS 84             -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000  
GEODETIC DATUM (POST PLOT) ED50-UK     HAYFORD INT  6378388.000 297.0000000
ED-50 TO WGS 84             -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000  
DATUM SHIFT H1400-H1500       0.0   0.0   0.0 0.000 0.000 0.000 0.0000000  
VERTICAL DATUM             SL  : ECHOSOUNDER                               
0PROJECTION                 003 TM NORTH                                    
0GRID UNITS                 1INTERNATIONAL METRES     1.000000000000        
HEIGHT UNITS               1INTERNATIONAL METRES     1.000000000000        
ANGULAR UNIT               1DEGREES                                        
CENTRAL MERIDIAN           0000000.000E                                    
GRID ORIGIN                0000000.000N0000000.000E                        
GRID COORD. AT ORIGIN        500000.00E 0000000.00N                        
SCALE FACTOR               0.9996000000                                    
LAT/LON WHERE SCALE DEF    0000000.000N0000000.000E  
CENTRAL MERIDIAN            3 0 0.000E

-----------------------------------------------------------------------------EOF

-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/ED50-UTM-to-ED50-TM-Not-sure-tp5549777p5549777.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From Mikael.Rittri at carmenta.com  Tue Sep 21 02:06:50 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 21 Sep 2010 09:06:50 +0000
Subject: [Proj] Area of a spherical polygon
In-Reply-To: <19606.4635.633619.610549@petrel.petrel.org>
References: <19606.4635.633619.610549@petrel.petrel.org>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49EFC2@SETHNWS023.carmenta.se>

Hello Charles,
you wrote:

> * the formula for A applies only if the polygon does not include a pole
>   (if it does, then add +/- pi to the result); 

Don't you mean +/- 2pi ?  

> * I would be interested to know if this formula for S12 is already
>   known.

There is an article

Robert D. Miller, Computing the area of a spherical polygon, 
Graphic Gems IV, chapter II.4, pages 132 - 137.  It is on 
books.google.com, but without pages 135 and 136:

http://books.google.com/books?id=CCqzMm_-WucC&pg=PA132&lpg=PA132&dq=miller+area+spherical+polygon+gems&source=bl&ots=mrnvZ6NJcm&sig=CMg8eaD8dzP5snMaPeCQzgoFWUk&hl=sv&ei=4G-YTKv5GsWZOI-mmZQP&sa=X&oi=book_result&ct=result&resnum=1&ved=0CBQQ6AEwAA#v=onepage&q&f=false

Your formula for S12 does not appear (in any obvious form),
but Miller's method reminds me a little of yours. Instead of 
summing the areas between each segment and the equator, Miller 
sums the areas between each segment and a pole.  I don't know 
how well-conditioned his method is for small polygons. 

Regards,

Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Charles Karney
Sent: den 19 september 2010 15:38
To: proj at lists.maptools.org
Cc: deakin at rmit.edu.au; michka at microsoft.com; thomas.meyer at uconn.edu; lsjo at kth.se; Craig.M.Rollins at nga.mil
Subject: [Proj] Area of a spherical polygon

The area of a polygon on a (unit) sphere is given by the spherical excess

  A = 2*pi - sum(exterior angles)

However this is badly conditioned if the polygon is small.  In this case, use

  A = sum S_{i,i+1} over the edges of the polygon

where S12 is the area of the quadrilateral bounded by an edge of the polygon, two meridians, and the equator, i.e., with vertices

  (phi1,lambda1); (phi2,lambda2);
  (0,   lambda1); (0,   lambda2); 

S12 is given by

  tan(S12/2) = tan(lambda12/2) * ( tan(phi1/2) + tan(phi2/2) )
                           / ( 1 + tan(phi1/2) * tan(phi2/2) )
             = tan(lambda12/2) * tanh( (lam(phi1) + lam(phi2))/2 )

where lambda12 = lambda2 - lambda1 and lam(x) is the lambertian (or inverse gudermannian) function

  lam(x) = asinh(tan(x)) = atanh(sin(x)) = 2*atanh(tan(x/2))

Notes:

* the formula for S12 is exact, except that...

* it is indeterminate if an edge is a semi-circle;

* the formula for A applies only if the polygon does not include a pole
  (if it does, then add +/- pi to the result);

* in the limit of small phi and lambda, S12 reduces to the trapezoidal
  formula, S12 = (lambda2 - lambda1) * (phi1 + phi2)/2;

* I derived this result from the equation for the area of a spherical
  triangle in terms of two edges and the included angle given by, e.g.,
  Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).  See
    http://books.google.com/books?id=3uBHAAAAIAAJ&pg=PA71

* I would be interested to know if this formula for S12 is already
  known.

  --Charles

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From ckarney at Sarnoff.com  Tue Sep 21 13:45:47 2010
From: ckarney at Sarnoff.com (Karney, Charles)
Date: Tue, 21 Sep 2010 16:45:47 -0400
Subject: [Proj] Area of a spherical polygon
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49EFC2@SETHNWS023.carmenta.se>
References: <19606.4635.633619.610549@petrel.petrel.org>,
	<E4AB3DD44D22854B819908379DE4AD49EFC2@SETHNWS023.carmenta.se>
Message-ID: <CED6B4B383C5F0418DAFEA443A0033C2F90E2796B5@MALIBU.sarnoff.internal>

> From: Mikael Rittri [Mikael.Rittri at carmenta.com]
> Sent: Tuesday, September 21, 2010 05:06
>
> Hello Charles,
> you wrote:
>
> > * the formula for A applies only if the polygon does not include a pole
> >   (if it does, then add +/- pi to the result);
>
> Don't you mean +/- 2pi ?

Yup.  Sorry about that.

> > * I would be interested to know if this formula for S12 is already
> >   known.
>
> There is an article
>
> Robert D. Miller, Computing the area of a spherical polygon, Graphic
> Gems IV, chapter II.4, pages 132 - 137.  It is on books.google.com,
> but without pages 135 and 136:
>
> Your formula for S12 does not appear (in any obvious form), but
> Miller's method reminds me a little of yours. Instead of summing the
> areas between each segment and the equator, Miller sums the areas
> between each segment and a pole.  I don't know how well-conditioned
> his method is for small polygons.

Thanks for the pointer.  I have located the code that implements this
algorithm at

http://people.sc.fsu.edu/~jburkardt/cpp_src/geometry/geometry.html

routine, sphere_polygon_area_3d, in geometry.C.  This uses L'Huilier's
theorem

http://books.google.com/books?id=3uBHAAAAIAAJ&pg=PA70

for the area of a spherical triangle in terms of its three sides.  If
the edge is specified by the latitudes and longitudes of its endpoints,
then this entails computing the length of the edge and substituting the
result in a somewhat elaborate formula.

In contrast, I started with the formula for the area of a spherical
triangle in terms of two sides and the included angle (on p 71 of
Todhunter).  If one vertex is the pole then the sides are the two
co-latitudes, the included angle is the longitude difference, and the
formula can be used directly without the need to calculate an
intermediate result.  My (meager) contribution is to recast the formula
to give the area between the edge and the equator.

My expectation is that this will yield more accurate results than
Miller's method.  I will benchmark both approaches to confirm or refute
this.

By the way, Miller's paper contains one geographic howler: In the
section "Geographic Particulars" he says that ellipsoidal effects can be
included for small polygons by taking the effective radius to be

    r(phi) = a/sqrt(1 - e^2 * sin(phi)^2)

Surely, this should be

    r(phi) = b/(1 - e^2 * sin(phi)^2)

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662



This message (and any attachments) contains Sarnoff proprietary information. Such information may be subject to the terms of confidentiality or other agreements. If you are not the named addressee, you should not disseminate, distribute, or copy this email. If you have received this email by mistake, please notify the sender immediately by email and delete this email from your system. If you are not the intended recipient, you are notified that disclosing, copying, distributing, or taking any action in reliance on the contents of this information is strictly prohibited.


From ndzinn at comcast.net  Tue Sep 21 14:20:18 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Tue, 21 Sep 2010 16:20:18 -0500
Subject: [Proj] Area of a spherical polygon
In-Reply-To: <CED6B4B383C5F0418DAFEA443A0033C2F90E2796B5@MALIBU.sarnoff.internal>
References: <19606.4635.633619.610549@petrel.petrel.org>,
	<E4AB3DD44D22854B819908379DE4AD49EFC2@SETHNWS023.carmenta.se>
	<CED6B4B383C5F0418DAFEA443A0033C2F90E2796B5@MALIBU.sarnoff.internal>
Message-ID: <4680277B997D45449A37395F3E57A307@NoelHmPC>

pi / 2pi, what you really want is tau.  Follow these links!

http://www.math.utah.edu/~palais/pi.pdf

http://tauday.com/

Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Karney, Charles" <ckarney at Sarnoff.com>
Sent: Tuesday, September 21, 2010 3:45 PM
To: "Mikael Rittri" <Mikael.Rittri at carmenta.com>; "PROJ.4 and general 
ProjectionsDiscussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Area of a spherical polygon

>> From: Mikael Rittri [Mikael.Rittri at carmenta.com]
>> Sent: Tuesday, September 21, 2010 05:06
>>
>> Hello Charles,
>> you wrote:
>>
>> > * the formula for A applies only if the polygon does not include a pole
>> >   (if it does, then add +/- pi to the result);
>>
>> Don't you mean +/- 2pi ?
>
> Yup.  Sorry about that.
>
>> > * I would be interested to know if this formula for S12 is already
>> >   known.
>>
>> There is an article
>>
>> Robert D. Miller, Computing the area of a spherical polygon, Graphic
>> Gems IV, chapter II.4, pages 132 - 137.  It is on books.google.com,
>> but without pages 135 and 136:
>>
>> Your formula for S12 does not appear (in any obvious form), but
>> Miller's method reminds me a little of yours. Instead of summing the
>> areas between each segment and the equator, Miller sums the areas
>> between each segment and a pole.  I don't know how well-conditioned
>> his method is for small polygons.
>
> Thanks for the pointer.  I have located the code that implements this
> algorithm at
>
> http://people.sc.fsu.edu/~jburkardt/cpp_src/geometry/geometry.html
>
> routine, sphere_polygon_area_3d, in geometry.C.  This uses L'Huilier's
> theorem
>
> http://books.google.com/books?id=3uBHAAAAIAAJ&pg=PA70
>
> for the area of a spherical triangle in terms of its three sides.  If
> the edge is specified by the latitudes and longitudes of its endpoints,
> then this entails computing the length of the edge and substituting the
> result in a somewhat elaborate formula.
>
> In contrast, I started with the formula for the area of a spherical
> triangle in terms of two sides and the included angle (on p 71 of
> Todhunter).  If one vertex is the pole then the sides are the two
> co-latitudes, the included angle is the longitude difference, and the
> formula can be used directly without the need to calculate an
> intermediate result.  My (meager) contribution is to recast the formula
> to give the area between the edge and the equator.
>
> My expectation is that this will yield more accurate results than
> Miller's method.  I will benchmark both approaches to confirm or refute
> this.
>
> By the way, Miller's paper contains one geographic howler: In the
> section "Geographic Particulars" he says that ellipsoidal effects can be
> included for small polygons by taking the effective radius to be
>
>    r(phi) = a/sqrt(1 - e^2 * sin(phi)^2)
>
> Surely, this should be
>
>    r(phi) = b/(1 - e^2 * sin(phi)^2)
>
> --
> Charles Karney <ckarney at sarnoff.com>
> Sarnoff Corporation, Princeton, NJ 08543-5300
>
> Tel: +1 609 734 2312
> Fax: +1 609 734 2662
>
>
>
> This message (and any attachments) contains Sarnoff proprietary 
> information. Such information may be subject to the terms of 
> confidentiality or other agreements. If you are not the named addressee, 
> you should not disseminate, distribute, or copy this email. If you have 
> received this email by mistake, please notify the sender immediately by 
> email and delete this email from your system. If you are not the intended 
> recipient, you are notified that disclosing, copying, distributing, or 
> taking any action in reliance on the contents of this information is 
> strictly prohibited.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From ckarney at Sarnoff.com  Wed Sep 22 10:24:24 2010
From: ckarney at Sarnoff.com (Karney, Charles)
Date: Wed, 22 Sep 2010 13:24:24 -0400
Subject: [Proj] Area of a spherical polygon
In-Reply-To: <CED6B4B383C5F0418DAFEA443A0033C2F90E2796B5@MALIBU.sarnoff.internal>
References: <19606.4635.633619.610549@petrel.petrel.org>,
	<E4AB3DD44D22854B819908379DE4AD49EFC2@SETHNWS023.carmenta.se>,
	<CED6B4B383C5F0418DAFEA443A0033C2F90E2796B5@MALIBU.sarnoff.internal>
Message-ID: <CED6B4B383C5F0418DAFEA443A0033C2F90E2796B9@MALIBU.sarnoff.internal>

> From: Karney, Charles
> Sent: Tuesday, September 21, 2010 16:45
>
> > From: Mikael Rittri [Mikael.Rittri at carmenta.com]
> > Sent: Tuesday, September 21, 2010 05:06
> >
> > There is an article
> >
> > Robert D. Miller, Computing the area of a spherical polygon, Graphic
> > Gems IV, chapter II.4, pages 132 - 137.
>
> Thanks for the pointer.  I have located the code that implements this
> algorithm at
>
> http://people.sc.fsu.edu/~jburkardt/cpp_src/geometry/geometry.html
>
> routine, sphere_polygon_area_3d, in geometry.C.  This uses L'Huilier's
> theorem.
>
> My expectation is that this will yield more accurate results than
> Miller's method.  I will benchmark both approaches...

I tested Miller's method for spherical areas (based on L'Huilier's
theorem) against my formula:

  tan(S12/2) = tan(lambda12/2) * ( tan(phi1/2) + tan(phi2/2) )
                           / ( 1 + tan(phi1/2) * tan(phi2/2) )

I used a sphere of radius 20.0e6/pi m and equilateral triangles of area
0.001 m^2 thru 1.0e11 m^2 (sides 48 mm thru 480 km) at a variety of
positions and orientations.  I did not use triangles which included a
pole because both methods need to be used with care in this case.  I
also fixed Miller's broken implementation of the haversine function.

The maximum absolute error in the area is

  Miller: 9.0e5 m^2 (approx 900 m square)
  Karney: 0.004 m^2 (approx 60 mm square)

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662



This message (and any attachments) contains Sarnoff proprietary information. Such information may be subject to the terms of confidentiality or other agreements. If you are not the named addressee, you should not disseminate, distribute, or copy this email. If you have received this email by mistake, please notify the sender immediately by email and delete this email from your system. If you are not the intended recipient, you are notified that disclosing, copying, distributing, or taking any action in reliance on the contents of this information is strictly prohibited.


From Mikael.Rittri at carmenta.com  Wed Sep 22 23:57:21 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Thu, 23 Sep 2010 06:57:21 +0000
Subject: [Proj] ED50_UTM to ED50_TM (Not sure!)
In-Reply-To: <1284977065989-5549777.post@n2.nabble.com>
References: <1284977065989-5549777.post@n2.nabble.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49F153@SETHNWS023.carmenta.se>

I am not familiar with your metadata format, but it
seems to me that the FROM and TO systems are identical
(although expressed in slightly different ways).

Regards,
Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Hamed Amini
Sent: den 20 september 2010 12:04
To: proj at lists.maptools.org
Subject: [Proj] ED50_UTM to ED50_TM (Not sure!)


Hi there,

I'd like to perform a transformation using cs2cs as a beginner. Can you please if I can do the following conversion using proj, and if so, what command should I use?

Thanks,
Hamed


FROM 

--------------------------------------------------------------------------------
GEODETIC DATUM AS SURVEY  ED50        INTERNATIONA 6378388.000 297.0000000
DATUM SHIFT ED50 TO WGS84  -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000
GEODETIC DATUM POSTPROC.  ED50        INTERNATIONA 6378388.000 297.0000000
DATUM SHIFT ED50 TO WGS84  -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000
DATUM SHIFTS                 0.0   0.0   0.0 0.000 0.000 0.000 0.0000000
VERTICAL DATUM            ES                      ECHO SOUNDER POSITION
PROJECTION                001 U.T.M. NORTHERN HEMISHPERE
ZONE                      31 N
GRID UNITS                1 INTERNATIONAL METERS    1.000000000000
HEIGHT UNITS              1 INTERNATIONAL METERS    1.000000000000
ANGULAR UNITS             1 DEGREES
--------------------------------------------------------------------------------

TO 

--------------------------------------------------------------------------------
GEODETIC DATUM (SURVEY)    ED50-UK     HAYFORD INT  6378388.000 297.0000000
1ED-50 TO WGS 84             -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000  
GEODETIC DATUM (POST PLOT) ED50-UK     HAYFORD INT  6378388.000 297.0000000
ED-50 TO WGS 84             -89.5 -93.8-123.1 0.000 0.000-0.156 1.2000000  
DATUM SHIFT H1400-H1500       0.0   0.0   0.0 0.000 0.000 0.000 0.0000000  
VERTICAL DATUM             SL  : ECHOSOUNDER                               
0PROJECTION                 003 TM NORTH                                    
0GRID UNITS                 1INTERNATIONAL METRES     1.000000000000        
HEIGHT UNITS               1INTERNATIONAL METRES     1.000000000000        
ANGULAR UNIT               1DEGREES                                        
CENTRAL MERIDIAN           0000000.000E                                    
GRID ORIGIN                0000000.000N0000000.000E                        
GRID COORD. AT ORIGIN        500000.00E 0000000.00N                        
SCALE FACTOR               0.9996000000                                    
LAT/LON WHERE SCALE DEF    0000000.000N0000000.000E  
CENTRAL MERIDIAN            3 0 0.000E

-----------------------------------------------------------------------------EOF

--
View this message in context: http://osgeo-org.1803224.n2.nabble.com/ED50-UTM-to-ED50-TM-Not-sure-tp5549777p5549777.html
Sent from the PROJ.4 mailing list archive at Nabble.com.
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From hamed.amini at hotmail.co.uk  Thu Sep 23 01:20:38 2010
From: hamed.amini at hotmail.co.uk (Hamed Amini)
Date: Thu, 23 Sep 2010 01:20:38 -0700 (PDT)
Subject: [Proj] ED50_UTM to ED50_TM (Not sure!)
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49F153@SETHNWS023.carmenta.se>
References: <1284977065989-5549777.post@n2.nabble.com>
	<E4AB3DD44D22854B819908379DE4AD49F153@SETHNWS023.carmenta.se>
Message-ID: <1285230038056-5562147.post@n2.nabble.com>


Thanks Mikael,
Here is the approximate coordinates of a point in two systems:

FROM 
-------------------------------------------------------------------------------- 
x: 391401.4
y: 6381482.7
-------------------------------------------------------------------------------- 

TO 
-------------------------------------------------------------------------------- 
x: 570820.5
Y: 6380565.1
-----------------------------------------------------------------------------EOF
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/ED50-UTM-to-ED50-TM-Not-sure-tp5549777p5562147.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jrepetto at free.fr  Thu Sep 23 01:47:20 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Thu, 23 Sep 2010 10:47:20 +0200
Subject: [Proj] ED50_UTM to ED50_TM (Not sure!)
In-Reply-To: <1285230038056-5562147.post@n2.nabble.com>
References: <1284977065989-5549777.post@n2.nabble.com>	<E4AB3DD44D22854B819908379DE4AD49F153@SETHNWS023.carmenta.se>
	<1285230038056-5562147.post@n2.nabble.com>
Message-ID: <4C9B1418.4040104@free.fr>

Le 23/09/2010 10:20, Hamed Amini a écrit :
>
> Thanks Mikael,
> Here is the approximate coordinates of a point in two systems:
>
> FROM
> --------------------------------------------------------------------------------
> x: 391401.4
> y: 6381482.7
> --------------------------------------------------------------------------------
>
> TO
> --------------------------------------------------------------------------------
> x: 570820.5
> Y: 6380565.1
> -----------------------------------------------------------------------------EOF


cs2cs +proj=tmerc +lat_0=0 +lon_0=3 +k=0.9996 +x_0=500000 +y_0=0 
+ellps=intl +towgs84=-89.5,-93.8,-123.1,0.000,0.000,-0.156,1.2 +units=m 
+no_defs +to +proj=tmerc +lat_0=0 +lon_0=0 +k=0.9996 +x_0=500000 +y_0=0 
+ellps=intl +towgs84=-89.5,-93.8,-123.1,0.000,0.000,-0.156,1.2 +units=m 
+no_defs
391401.4 6381482.7
570890.80	6380649.35 0.00

The result is not too far from yours.

Jean-Claude



From ckarney at sarnoff.com  Thu Sep 23 08:44:01 2010
From: ckarney at sarnoff.com (Charles Karney)
Date: Thu, 23 Sep 2010 11:44:01 -0400
Subject: [Proj] Translation of Bessel's paper on geodesics
Message-ID: <19611.30145.818058.520950@puffin.sarnoff.com>

The translation of Bessel's paper on geodesics is now available as

  F. W. Bessel,
  The calculation of longitude and latitude from
  geodesic measurements (1825),
  Astron. Nachr. 331(8), 852-861 (2010);
  translation of Astron. Nachr. 4, 241-254 (1825),
  by C. F. F. Karney and R. E. Deakin.

Original: http://dx.doi.org/10.1002/asna.18260041601
Translation: http://dx.doi.org/10.1002/asna.201011352

I am happy to E-mail a reprint to those who request one.

  --Charles


From peifer at gmx.eu  Thu Sep 23 11:46:58 2010
From: peifer at gmx.eu (Hermann Peifer)
Date: Thu, 23 Sep 2010 20:46:58 +0200
Subject: [Proj] ED50_UTM to ED50_TM (Not sure!)
In-Reply-To: <4C9B1418.4040104@free.fr>
References: <1284977065989-5549777.post@n2.nabble.com>	<E4AB3DD44D22854B819908379DE4AD49F153@SETHNWS023.carmenta.se>	<1285230038056-5562147.post@n2.nabble.com>
	<4C9B1418.4040104@free.fr>
Message-ID: <4C9BA0A2.4060203@gmx.eu>

On 23/09/2010 10:47, Jean-Claude REPETTO wrote:
>
> cs2cs +proj=tmerc +lat_0=0 +lon_0=3 +k=0.9996 +x_0=500000 +y_0=0
> +ellps=intl +towgs84=-89.5,-93.8,-123.1,0.000,0.000,-0.156,1.2 +units=m
> +no_defs +to +proj=tmerc +lat_0=0 +lon_0=0 +k=0.9996 +x_0=500000 +y_0=0
> +ellps=intl +towgs84=-89.5,-93.8,-123.1,0.000,0.000,-0.156,1.2 +units=m
> +no_defs
> 391401.4 6381482.7
> 570890.80	6380649.35 0.00
>
> The result is not too far from yours.

As Hamid also asked for "...using proj", here an alternative option:

echo "391401.4 6381482.7" |
invproj +proj=tmerc +lat_0=0 +lon_0=3 +k=0.9996 \
   +x_0=500000 +y_0=0  +ellps=intl |
proj +proj=tmerc +lat_0=0 +lon_0=0 +k=0.9996 \
   +x_0=500000 +y_0=0 +ellps=intl
570890.80       6380649.35

Hermann


