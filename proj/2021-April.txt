From Roger.Bivand at nhh.no  Mon Apr 12 02:10:29 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 12 Apr 2021 11:10:29 +0200
Subject: [PROJ] Suggestion - add EPSG version to proj_info()
Message-ID: <b8139a4-e595-e66f-b87b-f51aec62d4d6@reclus.nhh.no>

I realise that simple SQL on proj.db can return the EPSG.VERSION key from 
the metadata table in proj.db, and that PROJ and EPSG versions are 
hard-wired in a single run-time. Could also the built-time EPSG version be 
made available?

In https://github.com/rsbivand/rgrass7/issues/27, two Windows binaries, 
each built against PROJ, but different versions, one EPSG 9 and one EPSG 
10, so that when one (rgdal) resets PROJ_LIB to EPSG 10, GRASS fails to 
read proj.db because it is EPSG 10, with g.proj -w returning an error.

An alternative would be a mechanism to allow rgdal to use "its" PROJ 
search path, and GRASS (or other binary software) to use "its" search 
path, but while I implemented this for PROJ 6 in rgdal, I went back to 
PROJ_LIB because we need both the proj.db directory and the CDN download 
directory (on both sides, I expect).

The problem only affects stand-alone binary distributions without an 
underlying package manager to ensure harmonisation across installed 
software.

Interested in views, I've raised this on grass-dev too, but I think that 
it is more general, hence post here.

Best wishes,

Roger

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Mon Apr 12 02:37:01 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 12 Apr 2021 11:37:01 +0200
Subject: [PROJ] Suggestion - add EPSG version to proj_info()
In-Reply-To: <b8139a4-e595-e66f-b87b-f51aec62d4d6@reclus.nhh.no>
References: <b8139a4-e595-e66f-b87b-f51aec62d4d6@reclus.nhh.no>
Message-ID: <506a409b-af5c-609d-cba0-16728409b266@spatialys.com>

Roger,


Le 12/04/2021 ? 11:10, Roger Bivand a ?crit?:
> I realise that simple SQL on proj.db can return the EPSG.VERSION key 
> from the metadata table in proj.db, and that PROJ and EPSG versions 
> are hard-wired in a single run-time. Could also the built-time EPSG 
> version be made available?

You can use proj_context_get_database_metadata(ctxt, "EPSG.VERSION")


>
> An alternative would be a mechanism to allow rgdal to use "its" PROJ 
> search path, and GRASS (or other binary software) to use "its" search 
> path, but while I implemented this for PROJ 6 in rgdal, I went back to 
> PROJ_LIB because we need both the proj.db directory and the CDN 
> download directory (on both sides, I expect).

You can use proj_context_get_user_writable_directory() to retrieve it 
and then add it along your regular "PROJ_LIB" directory with 
proj_context_set_search_paths()

Even


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From Roger.Bivand at nhh.no  Mon Apr 12 02:45:07 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 12 Apr 2021 11:45:07 +0200
Subject: [PROJ] Suggestion - add EPSG version to proj_info()
In-Reply-To: <506a409b-af5c-609d-cba0-16728409b266@spatialys.com>
References: <b8139a4-e595-e66f-b87b-f51aec62d4d6@reclus.nhh.no>
 <506a409b-af5c-609d-cba0-16728409b266@spatialys.com>
Message-ID: <3ac42716-6c97-bd13-f448-c95b4d96d7b@reclus.nhh.no>

Even,

On Mon, 12 Apr 2021, Even Rouault wrote:

> Roger,
>
>
> Le 12/04/2021 ? 11:10, Roger Bivand a ?crit?:
>>  I realise that simple SQL on proj.db can return the EPSG.VERSION key from
>>  the metadata table in proj.db, and that PROJ and EPSG versions are
>>  hard-wired in a single run-time. Could also the built-time EPSG version be
>>  made available?
>
> You can use proj_context_get_database_metadata(ctxt, "EPSG.VERSION")
>
>

Thanks, this is useful, and will be informative for others. Is there a 
table of PROJ version and EPSG version correspondence?

>>
>>  An alternative would be a mechanism to allow rgdal to use "its" PROJ
>>  search path, and GRASS (or other binary software) to use "its" search
>>  path, but while I implemented this for PROJ 6 in rgdal, I went back to
>>  PROJ_LIB because we need both the proj.db directory and the CDN download
>>  directory (on both sides, I expect).
>
> You can use proj_context_get_user_writable_directory() to retrieve it and 
> then add it along your regular "PROJ_LIB" directory with 
> proj_context_set_search_paths()
>

OK, thanks. For R packages (now rgdal, sf, terra and others distribute 
share/proj when built binary - Windows and MacOS), we'll need to work out 
in consort whether to combine our efforts, which may be tricky.

Thanks again!

Best wishes,

Roger

> Even
>
>
>

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Mon Apr 12 02:56:23 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 12 Apr 2021 11:56:23 +0200
Subject: [PROJ] Suggestion - add EPSG version to proj_info()
In-Reply-To: <3ac42716-6c97-bd13-f448-c95b4d96d7b@reclus.nhh.no>
References: <b8139a4-e595-e66f-b87b-f51aec62d4d6@reclus.nhh.no>
 <506a409b-af5c-609d-cba0-16728409b266@spatialys.com>
 <3ac42716-6c97-bd13-f448-c95b4d96d7b@reclus.nhh.no>
Message-ID: <7dfe509c-9fd8-c848-daaf-064ad7144ae7@spatialys.com>


> Thanks, this is useful, and will be informative for others. Is there a 
> table of PROJ version and EPSG version correspondence?

No. But starting with PROJ 8.1, there will also be a "PROJ.VERSION" key 
in the metadata table of proj.db


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From Jochem.Lesparre at kadaster.nl  Mon Apr 12 05:06:38 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 12 Apr 2021 12:06:38 +0000
Subject: [PROJ] Suggestion - add EPSG version to proj_info()
In-Reply-To: <506a409b-af5c-609d-cba0-16728409b266@spatialys.com>
References: <b8139a4-e595-e66f-b87b-f51aec62d4d6@reclus.nhh.no>
 <506a409b-af5c-609d-cba0-16728409b266@spatialys.com>
Message-ID: <AM0P192MB0482A3E72CEA302A898D6EA7EF709@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

> You can use proj_context_get_database_metadata(ctxt, "EPSG.VERSION")

Is there also a command line equivalent?

Regards, Jochem


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.

From even.rouault at spatialys.com  Mon Apr 12 05:25:26 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 12 Apr 2021 14:25:26 +0200
Subject: [PROJ] Suggestion - add EPSG version to proj_info()
In-Reply-To: <AM0P192MB0482A3E72CEA302A898D6EA7EF709@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
References: <b8139a4-e595-e66f-b87b-f51aec62d4d6@reclus.nhh.no>
 <506a409b-af5c-609d-cba0-16728409b266@spatialys.com>
 <AM0P192MB0482A3E72CEA302A898D6EA7EF709@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <767d6c36-9a2e-3d80-be58-ccef0d0883bc@spatialys.com>

$ sqlite3 proj.db? "select value from metadata where key = 'EPSG.VERSION'"

Le 12/04/2021 ? 14:06, Lesparre, Jochem a ?crit?:
>> You can use proj_context_get_database_metadata(ctxt, "EPSG.VERSION")
> Is there also a command line equivalent?
>
> Regards, Jochem
>
>
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee without the consent
> of the Kadaster is unlawful. If you have received this message, but are not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message.

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From j1 at jimenezshaw.com  Mon Apr 12 08:29:17 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 12 Apr 2021 17:29:17 +0200
Subject: [PROJ] Compound ESRI+EPSG
Message-ID: <CADRrdKvhuZaHaUXA3h=JFat-CEZZMKvWvGHftRtwpOPHUOmU7w@mail.gmail.com>

Hi

I am wondering how to combine a horizontal ESRI crs with a vertical EPSG
crs. I would say there is no problem if I just create a WKT string with the
combination, right?
Let's say ESRI:103668 "NAD_1983_HARN_Adj_MN_Ramsey_Meters" and EPSG:5703
"NAVD88 height". Is there any shortcut in projinfo to create it?

Is there any "compressed" way to identify it? Something like
"ESRI:103668+EPSG:5703"

Thanks,
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210412/ce2c1190/attachment.html>

From even.rouault at spatialys.com  Mon Apr 12 08:49:45 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 12 Apr 2021 17:49:45 +0200
Subject: [PROJ] Compound ESRI+EPSG
In-Reply-To: <CADRrdKvhuZaHaUXA3h=JFat-CEZZMKvWvGHftRtwpOPHUOmU7w@mail.gmail.com>
References: <CADRrdKvhuZaHaUXA3h=JFat-CEZZMKvWvGHftRtwpOPHUOmU7w@mail.gmail.com>
Message-ID: <6bcdde62-6648-7b44-a554-d78f23ab44ef@spatialys.com>

Javier,

Several options are already possible:

- by name: "NAD_1983_HARN_Adj_MN_Ramsey_Meters + NAVD88 height"

- using OGC URN compound CRS syntax: 
"urn:ogc:def:crs,crs:ESRI::103668,crs:EPSG::5703"

That said having "ESRI:103668+EPSG:5703" to work would be good (I can't 
remember OGC URN syntax without looking at an example). You could have a 
try at that after 
https://github.com/OSGeo/PROJ/blob/master/src/iso19111/io.cpp#L6381 with 
a new tokens.size() == 3 case.

Even

Le 12/04/2021 ? 17:29, Javier Jimenez Shaw a ?crit?:
> Hi
>
> I am wondering how to combine a horizontal ESRI crs with a vertical 
> EPSG crs. I would say there is no problem if I just create a WKT 
> string with the combination, right?
> Let's say ESRI:103668 "NAD_1983_HARN_Adj_MN_Ramsey_Meters" and 
> EPSG:5703 "NAVD88 height". Is there any shortcut in projinfo to create it?
>
> Is there any "compressed" way to identify it? Something like 
> "ESRI:103668+EPSG:5703"
>
> Thanks,
> Javier
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210412/64750461/attachment-0001.html>

From j1 at jimenezshaw.com  Mon Apr 12 14:50:34 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 12 Apr 2021 23:50:34 +0200
Subject: [PROJ] Compound ESRI+EPSG
In-Reply-To: <6bcdde62-6648-7b44-a554-d78f23ab44ef@spatialys.com>
References: <CADRrdKvhuZaHaUXA3h=JFat-CEZZMKvWvGHftRtwpOPHUOmU7w@mail.gmail.com>
 <6bcdde62-6648-7b44-a554-d78f23ab44ef@spatialys.com>
Message-ID: <CADRrdKs8vbv_AEux_=4SZEGBEgGF0KgjVKpyMStMwHvzAC3HyQ@mail.gmail.com>

Which version of clang-format are we using?
I am modifying src/iso19111/io.cpp , and a couple of lines not related has
been formatted. My Ubuntu 18.04 (soon will be 20.04) has clang-format-6.0

Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Mon, 12 Apr 2021 at 17:49, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier,
>
> Several options are already possible:
>
> - by name: "NAD_1983_HARN_Adj_MN_Ramsey_Meters + NAVD88 height"
>
> - using OGC URN compound CRS syntax:
> "urn:ogc:def:crs,crs:ESRI::103668,crs:EPSG::5703"
>
> That said having "ESRI:103668+EPSG:5703" to work would be good (I can't
> remember OGC URN syntax without looking at an example). You could have a
> try at that after
> https://github.com/OSGeo/PROJ/blob/master/src/iso19111/io.cpp#L6381 with
> a new tokens.size() == 3 case.
>
> Even
> Le 12/04/2021 ? 17:29, Javier Jimenez Shaw a ?crit :
>
> Hi
>
> I am wondering how to combine a horizontal ESRI crs with a vertical EPSG
> crs. I would say there is no problem if I just create a WKT string with the
> combination, right?
> Let's say ESRI:103668 "NAD_1983_HARN_Adj_MN_Ramsey_Meters" and EPSG:5703
> "NAVD88 height". Is there any shortcut in projinfo to create it?
>
> Is there any "compressed" way to identify it? Something like
> "ESRI:103668+EPSG:5703"
>
> Thanks,
> Javier
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210412/d9756fc8/attachment.html>

From even.rouault at spatialys.com  Mon Apr 12 15:19:02 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 13 Apr 2021 00:19:02 +0200
Subject: [PROJ] Compound ESRI+EPSG
In-Reply-To: <CADRrdKs8vbv_AEux_=4SZEGBEgGF0KgjVKpyMStMwHvzAC3HyQ@mail.gmail.com>
References: <CADRrdKvhuZaHaUXA3h=JFat-CEZZMKvWvGHftRtwpOPHUOmU7w@mail.gmail.com>
 <6bcdde62-6648-7b44-a554-d78f23ab44ef@spatialys.com>
 <CADRrdKs8vbv_AEux_=4SZEGBEgGF0KgjVKpyMStMwHvzAC3HyQ@mail.gmail.com>
Message-ID: <1f61b2f6-1107-974c-cb93-7350ce7437df@spatialys.com>

I've upgraded recently to? 20.04 and am using clang-format-10

https://github.com/OSGeo/PROJ/pull/2668 should help

Le 12/04/2021 ? 23:50, Javier Jimenez Shaw a ?crit?:
> Which version of clang-format are we using?
> I am modifying src/iso19111/io.cpp , and a couple of lines not related 
> has been formatted. My Ubuntu 18.04 (soon will be 20.04) has 
> clang-format-6.0
>
> Javier
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Mon, 12 Apr 2021 at 17:49, Even Rouault <even.rouault at spatialys.com 
> <mailto:even.rouault at spatialys.com>> wrote:
>
>     Javier,
>
>     Several options are already possible:
>
>     - by name: "NAD_1983_HARN_Adj_MN_Ramsey_Meters + NAVD88 height"
>
>     - using OGC URN compound CRS syntax:
>     "urn:ogc:def:crs,crs:ESRI::103668,crs:EPSG::5703"
>
>     That said having "ESRI:103668+EPSG:5703" to work would be good (I
>     can't remember OGC URN syntax without looking at an example). You
>     could have a try at that after
>     https://github.com/OSGeo/PROJ/blob/master/src/iso19111/io.cpp#L6381
>     <https://github.com/OSGeo/PROJ/blob/master/src/iso19111/io.cpp#L6381>
>     with a new tokens.size() == 3 case.
>
>     Even
>
>     Le 12/04/2021 ? 17:29, Javier Jimenez Shaw a ?crit?:
>>     Hi
>>
>>     I am wondering how to combine a horizontal ESRI crs with a
>>     vertical EPSG crs. I would say there is no problem if I just
>>     create a WKT string with the combination, right?
>>     Let's say ESRI:103668 "NAD_1983_HARN_Adj_MN_Ramsey_Meters" and
>>     EPSG:5703 "NAVD88 height". Is there any shortcut in projinfo to
>>     create it?
>>
>>     Is there any "compressed" way to identify it? Something like
>>     "ESRI:103668+EPSG:5703"
>>
>>     Thanks,
>>     Javier
>>     .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>>     Entre dos pensamientos racionales
>>     hay infinitos pensamientos irracionales.
>>
>>
>>     _______________________________________________
>>     PROJ mailing list
>>     PROJ at lists.osgeo.org  <mailto:PROJ at lists.osgeo.org>
>>     https://lists.osgeo.org/mailman/listinfo/proj  <https://lists.osgeo.org/mailman/listinfo/proj>
>
>     -- 
>     http://www.spatialys.com  <http://www.spatialys.com>
>     My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210413/764966e0/attachment.html>

From info at xctrails.org  Thu Apr 15 00:32:16 2021
From: info at xctrails.org (XCTrails)
Date: Thu, 15 Apr 2021 09:32:16 +0200
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2 meter
 offset
Message-ID: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>

Hi,

I have input polygon in epsg:31468 which I need to transform to epsg:4326

My current code boils down to this:

project = pyproj.Transformer.from_crs("EPSG:31468","EPSG:4326",
always_xy=True)
poly = transform(project.transform, poly)

The problem however is that the resulting polygons have a 1-2 meter offset
according to visual inspection in QGIS. On reddit, someone suggested that I
might also need a datum transformation, on the pyproj4 issue tracker
someone said, that datum transformations are no longer needed in PROJ 6+
and that I should ask for clarification here. So here I am ;-)

Can anyone shed any light on why I get these offsets and what I can do to
fix this?
There's no offset if I manually reproject this in QGIS and compare it with
the original.

Thanks,
Armin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/c91cc614/attachment.html>

From alansnow21 at gmail.com  Thu Apr 15 05:51:20 2021
From: alansnow21 at gmail.com (Alan Snow)
Date: Thu, 15 Apr 2021 07:51:20 -0500
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
Message-ID: <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>

Original question: https://github.com/pyproj4/pyproj/discussions/814

What he is asking is if TOWGS84 parameters are needed for datum
transformations.

Thanks ?

On Thu, Apr 15, 2021, 2:32 AM XCTrails <info at xctrails.org> wrote:

> Hi,
>
> I have input polygon in epsg:31468 which I need to transform to epsg:4326
>
> My current code boils down to this:
>
> project = pyproj.Transformer.from_crs("EPSG:31468","EPSG:4326",
> always_xy=True)
> poly = transform(project.transform, poly)
>
> The problem however is that the resulting polygons have a 1-2 meter offset
> according to visual inspection in QGIS. On reddit, someone suggested that I
> might also need a datum transformation, on the pyproj4 issue tracker
> someone said, that datum transformations are no longer needed in PROJ 6+
> and that I should ask for clarification here. So here I am ;-)
>
> Can anyone shed any light on why I get these offsets and what I can do to
> fix this?
> There's no offset if I manually reproject this in QGIS and compare it with
> the original.
>
> Thanks,
> Armin
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/21d50645/attachment.html>

From gdt at lexort.com  Thu Apr 15 06:03:42 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 15 Apr 2021 09:03:42 -0400
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 (XCTrails's message of "Thu, 15 Apr 2021 09:32:16 +0200")
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
Message-ID: <rmimttzr975.fsf@s1.lexort.com>


XCTrails <info at xctrails.org> writes:

> I have input polygon in epsg:31468 which I need to transform to epsg:4326
>
> My current code boils down to this:
>
> project = pyproj.Transformer.from_crs("EPSG:31468","EPSG:4326",
> always_xy=True)
> poly = transform(project.transform, poly)
>
> The problem however is that the resulting polygons have a 1-2 meter offset
> according to visual inspection in QGIS. On reddit, someone suggested that I
> might also need a datum transformation, on the pyproj4 issue tracker
> someone said, that datum transformations are no longer needed in PROJ 6+
> and that I should ask for clarification here. So here I am ;-)

I'm not familiear with 31468 (but am with similar concepts in the US,
where all the details are different), so take this with a grain of salt.
Even if I'm wrong trying to explain to me how I'm wrong is likely a
useful clarifying exercise :-)

You said "1-2 meter offset" but you didn't say what was offset to what,
and the project CRS (equivalent concept applies outside of qgis) is.

I am unclear on how DHDN relates to ETRS.

It's not clear to me what the intrinsic error in transforms from DHDN to
other frames.  In the use, we have NAD27 (from 1927) and if when workign
with that you got only 1-2m offset you would be overjoyed and lucky.
With recent NAD83 (as of 2011), it's possible to talk about 0.5m offsets
sensibly.  I do not konw the vintage of DHDN but am guessing it is on
the older side.


EPSG:4326 is "WGS84", which is a datum ensemble, and thus a low-quality
datum.  Almost more or less by definition, "WGS84" and "1-2 meter
offset" do not go together; there is 1-2-m of variation between the
oldest member of the ensemble and WGS84(G1762), the newest and current
member.  However, there is no even medium-quality data in the oldest
member, so this would be of only academic interest if transformations to
WGS84 were not chosen as null because the old realization exists.

So, you could finesse this by transforming to ITRF2008 and then
transforming to WGS84.  If that's different from the one-step transform
to WGS84, that's a clue you are having null transform problems.



So I recommend that you understand very clearly:

  what datum are you using for your project CRS

  if you think you need to deal with WGS84, understand why, and think
  about mitigating the ensemble problem by choosing ITRF2008 instead,
  which is the same as WGS84(G1762) at the several mm level.

  how proj and hence qgis chooses null transforms when WGS84 is involved
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/0a5e108f/attachment.sig>

From gdt at lexort.com  Thu Apr 15 06:10:25 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 15 Apr 2021 09:10:25 -0400
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 (Alan Snow's message of "Thu, 15 Apr 2021 07:51:20 -0500")
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
Message-ID: <rmiim4nr8vy.fsf@s1.lexort.com>


You made a really good point about checking that the grids are available
in the issue.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/81a8ac47/attachment.sig>

From even.rouault at spatialys.com  Thu Apr 15 06:11:49 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 15 Apr 2021 15:11:49 +0200
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
Message-ID: <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>

projinfo is often the answer to such questions. Datum transformations 
*are* generally needed. What is generally no longer required in PROJ 6 
era is to use the explict +nadgrids / +towgs84 terms. PROJ will find 
which ones are needed, but the user may still have to arbitrate because 
there's not always a single possibility.

So the most precise transformation uses the BETA2007 grid, or you have 2 
potential Helmert-based transformations depending on the location

$ projinfo -s EPSG:4326 -t EPSG:31468 --spatial-test intersects -o PROJ
Candidate operations found: 3
-------------------------------------
Operation No. 1:

unknown id, Inverse of DHDN to WGS 84 (4) + 3-degree Gauss-Kruger zone 
4, 1 m, Germany - onshore - states of Baden-Wurtemberg, Bayern, Berlin, 
Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern, 
Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Sachsen, 
Sachsen-Anhalt, Schleswig-Holstein, Thuringen.

PROJ string:
+proj=pipeline
 ? +step +proj=axisswap +order=2,1
 ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
 ? +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
 ? +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 
+ellps=bessel
 ? +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 2:

unknown id, Inverse of DHDN to WGS 84 (2) + 3-degree Gauss-Kruger zone 
4, 3 m, Germany - states of former West Germany onshore - 
Baden-Wurtemberg, Bayern, Bremen, Hamburg, Hessen, Niedersachsen, 
Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Schleswig-Holstein.

PROJ string:
+proj=pipeline
 ? +step +proj=axisswap +order=2,1
 ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
 ? +step +proj=push +v_3
 ? +step +proj=cart +ellps=WGS84
 ? +step +inv +proj=helmert +x=598.1 +y=73.7 +z=418.2 +rx=0.202 +ry=0.045
 ??????? +rz=-2.455 +s=6.7 +convention=position_vector
 ? +step +inv +proj=cart +ellps=bessel
 ? +step +proj=pop +v_3
 ? +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 
+ellps=bessel
 ? +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 3:

unknown id, Inverse of DHDN to WGS 84 (3) + 3-degree Gauss-Kruger zone 
4, 2 m, Germany - states of former East Germany - Berlin, Brandenburg; 
Mecklenburg-Vorpommern; Sachsen; Sachsen-Anhalt; Thuringen.

PROJ string:
+proj=pipeline
 ? +step +proj=axisswap +order=2,1
 ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
 ? +step +proj=push +v_3
 ? +step +proj=cart +ellps=WGS84
 ? +step +inv +proj=helmert +x=612.4 +y=77 +z=440.2 +rx=-0.054 +ry=0.057
 ??????? +rz=-2.797 +s=2.55 +convention=position_vector
 ? +step +inv +proj=cart +ellps=bessel
 ? +step +proj=pop +v_3
 ? +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 
+ellps=bessel
 ? +step +proj=axisswap +order=2,1

Le 15/04/2021 ? 14:51, Alan Snow a ?crit?:
> Original question: https://github.com/pyproj4/pyproj/discussions/814 
> <https://github.com/pyproj4/pyproj/discussions/814>
>
> What he is asking is if TOWGS84 parameters are needed for datum 
> transformations.
>
> Thanks ?
>
> On Thu, Apr 15, 2021, 2:32 AM XCTrails <info at xctrails.org 
> <mailto:info at xctrails.org>> wrote:
>
>     Hi,
>
>     I have input polygon in epsg:31468 which I need to transform to
>     epsg:4326
>
>     My current code boils down to this:
>
>     project = pyproj.Transformer.from_crs("EPSG:31468","EPSG:4326",
>     always_xy=True)
>     poly = transform(project.transform, poly)
>
>     The problem however is that the resulting polygons have a 1-2
>     meter offset according to visual inspection in QGIS. On reddit,
>     someone suggested that I might also need a datum transformation,
>     on the pyproj4 issue tracker someone said, that datum
>     transformations are no longer needed in PROJ 6+ and that I should
>     ask for clarification here. So here I am ;-)
>
>     Can anyone shed any light on why I get these offsets and what I
>     can do to fix this?
>     There's no offset if I manually reproject this in QGIS and compare
>     it with the original.
>
>     Thanks,
>     Armin
>     _______________________________________________
>     PROJ mailing list
>     PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/proj
>     <https://lists.osgeo.org/mailman/listinfo/proj>
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/d6d1e1a4/attachment-0001.html>

From info at xctrails.org  Thu Apr 15 07:26:23 2021
From: info at xctrails.org (XCTrails)
Date: Thu, 15 Apr 2021 16:26:23 +0200
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
Message-ID: <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>

Ok, I clearly need to research this more judging from your answers so far.

Maybe as background from where the problem originates:

I'm getting shapes in EPSG:31468 which will subsequently be imported/mapped
to OpenstreetMap. Eventually, there will be updates to the EPSG:31468
shapes and I'm in the process of writing a script which should detect shape
changes/deletions/additions. In order to be able to geometrically compare
the 2 datasets, my current workaround is to perform the transformation from
EPSG:31468 to EPSG:4326 manually in QGIS, the diff then runs on 2 4326
geojson files and produces reasonable polygon matches with an intersection
over union approach. Ideally, I'd like to get rid of the manual
transformation step in QGIS (along the way understanding the underlying
issue).

So, if I understand this correctly: creating a pyproj transformation using
one of the mentioned PROJ strings/pipelines should yield better results?
Within the limits of WGS84 - which might by in the same range as my
initially observed offset.

Am Do., 15. Apr. 2021 um 15:19 Uhr schrieb Even Rouault <
even.rouault at spatialys.com>:

> projinfo is often the answer to such questions. Datum transformations
> *are* generally needed. What is generally no longer required in PROJ 6 era
> is to use the explict +nadgrids / +towgs84 terms. PROJ will find which ones
> are needed, but the user may still have to arbitrate because there's not
> always a single possibility.
>
> So the most precise transformation uses the BETA2007 grid, or you have 2
> potential Helmert-based transformations depending on the location
>
> $ projinfo -s EPSG:4326 -t EPSG:31468 --spatial-test intersects -o PROJ
> Candidate operations found: 3
> -------------------------------------
> Operation No. 1:
>
> unknown id, Inverse of DHDN to WGS 84 (4) + 3-degree Gauss-Kruger zone 4,
> 1 m, Germany - onshore - states of Baden-Wurtemberg, Bayern, Berlin,
> Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern,
> Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Sachsen,
> Sachsen-Anhalt, Schleswig-Holstein, Thuringen.
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
>   +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
> +ellps=bessel
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 2:
>
> unknown id, Inverse of DHDN to WGS 84 (2) + 3-degree Gauss-Kruger zone 4,
> 3 m, Germany - states of former West Germany onshore - Baden-Wurtemberg,
> Bayern, Bremen, Hamburg, Hessen, Niedersachsen, Nordrhein-Westfalen,
> Rheinland-Pfalz, Saarland, Schleswig-Holstein.
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +proj=push +v_3
>   +step +proj=cart +ellps=WGS84
>   +step +inv +proj=helmert +x=598.1 +y=73.7 +z=418.2 +rx=0.202 +ry=0.045
>         +rz=-2.455 +s=6.7 +convention=position_vector
>   +step +inv +proj=cart +ellps=bessel
>   +step +proj=pop +v_3
>   +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
> +ellps=bessel
>   +step +proj=axisswap +order=2,1
>
> -------------------------------------
> Operation No. 3:
>
> unknown id, Inverse of DHDN to WGS 84 (3) + 3-degree Gauss-Kruger zone 4,
> 2 m, Germany - states of former East Germany - Berlin, Brandenburg;
> Mecklenburg-Vorpommern; Sachsen; Sachsen-Anhalt; Thuringen.
>
> PROJ string:
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +proj=push +v_3
>   +step +proj=cart +ellps=WGS84
>   +step +inv +proj=helmert +x=612.4 +y=77 +z=440.2 +rx=-0.054 +ry=0.057
>         +rz=-2.797 +s=2.55 +convention=position_vector
>   +step +inv +proj=cart +ellps=bessel
>   +step +proj=pop +v_3
>   +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
> +ellps=bessel
>   +step +proj=axisswap +order=2,1
>
> Le 15/04/2021 ? 14:51, Alan Snow a ?crit :
>
> Original question: https://github.com/pyproj4/pyproj/discussions/814
>
> What he is asking is if TOWGS84 parameters are needed for datum
> transformations.
>
> Thanks ?
>
> On Thu, Apr 15, 2021, 2:32 AM XCTrails <info at xctrails.org> wrote:
>
>> Hi,
>>
>> I have input polygon in epsg:31468 which I need to transform to epsg:4326
>>
>> My current code boils down to this:
>>
>> project = pyproj.Transformer.from_crs("EPSG:31468","EPSG:4326",
>> always_xy=True)
>> poly = transform(project.transform, poly)
>>
>> The problem however is that the resulting polygons have a 1-2 meter
>> offset according to visual inspection in QGIS. On reddit, someone suggested
>> that I might also need a datum transformation, on the pyproj4 issue tracker
>> someone said, that datum transformations are no longer needed in PROJ 6+
>> and that I should ask for clarification here. So here I am ;-)
>>
>> Can anyone shed any light on why I get these offsets and what I can do to
>> fix this?
>> There's no offset if I manually reproject this in QGIS and compare it
>> with the original.
>>
>> Thanks,
>> Armin
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/7d08548a/attachment.html>

From Jochem.Lesparre at kadaster.nl  Thu Apr 15 07:53:30 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Thu, 15 Apr 2021 14:53:30 +0000
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
 <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
Message-ID: <AM0P192MB0482A31A9BB7BF0EB159DE9FEF4D9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

I don?t understand why you are using EPSG:4326 (WGS84) when a 2 metre offset is not acceptable for you. EPSG:4326 is a general code for a collection (datum ensemble) of more precise defined datums (WGS84 realisations) with their own codes. The differences within the datums of the ensemble prevent a transformation to EPSG:4326 that is more precise than 2 metres. So if you what a higher accuracy, you will have to use a CRS based on another datum, e.g. EPSG:9000 (ITRF2014).

Regards, Jochem



From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of XCTrails
Sent: donderdag 15 april 2021 16:26
To: Even Rouault <even.rouault at spatialys.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2 meter offset

Ok, I clearly need to research this more judging from your answers so far.

Maybe as background from where the problem originates:

I'm getting shapes in EPSG:31468 which will subsequently be imported/mapped to OpenstreetMap. Eventually, there will be updates to the EPSG:31468 shapes and I'm in the process of writing a script which should detect shape changes/deletions/additions. In order to be able to geometrically compare the 2 datasets, my current workaround is to perform the transformation from EPSG:31468 to EPSG:4326 manually in QGIS, the diff then runs on 2 4326 geojson files and produces reasonable polygon matches with an intersection over union approach. Ideally, I'd like to get rid of the manual transformation step in QGIS (along the way understanding the underlying issue).

So, if I understand this correctly: creating a pyproj transformation using one of the mentioned PROJ strings/pipelines should yield better results? Within the limits of WGS84 - which might by in the same range as my initially observed offset.

Am Do., 15. Apr. 2021 um 15:19 Uhr schrieb Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>:

projinfo is often the answer to such questions. Datum transformations *are* generally needed. What is generally no longer required in PROJ 6 era is to use the explict +nadgrids / +towgs84 terms. PROJ will find which ones are needed, but the user may still have to arbitrate because there's not always a single possibility.

So the most precise transformation uses the BETA2007 grid, or you have 2 potential Helmert-based transformations depending on the location

$ projinfo -s EPSG:4326 -t EPSG:31468 --spatial-test intersects -o PROJ
Candidate operations found: 3
-------------------------------------
Operation No. 1:

unknown id, Inverse of DHDN to WGS 84 (4) + 3-degree Gauss-Kruger zone 4, 1 m, Germany - onshore - states of Baden-Wurtemberg, Bayern, Berlin, Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern, Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Sachsen, Sachsen-Anhalt, Schleswig-Holstein, Thuringen.

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
  +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel
  +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 2:

unknown id, Inverse of DHDN to WGS 84 (2) + 3-degree Gauss-Kruger zone 4, 3 m, Germany - states of former West Germany onshore - Baden-Wurtemberg, Bayern, Bremen, Hamburg, Hessen, Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Schleswig-Holstein.

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +proj=push +v_3
  +step +proj=cart +ellps=WGS84
  +step +inv +proj=helmert +x=598.1 +y=73.7 +z=418.2 +rx=0.202 +ry=0.045
        +rz=-2.455 +s=6.7 +convention=position_vector
  +step +inv +proj=cart +ellps=bessel
  +step +proj=pop +v_3
  +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel
  +step +proj=axisswap +order=2,1

-------------------------------------
Operation No. 3:

unknown id, Inverse of DHDN to WGS 84 (3) + 3-degree Gauss-Kruger zone 4, 2 m, Germany - states of former East Germany - Berlin, Brandenburg; Mecklenburg-Vorpommern; Sachsen; Sachsen-Anhalt; Thuringen.

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +proj=push +v_3
  +step +proj=cart +ellps=WGS84
  +step +inv +proj=helmert +x=612.4 +y=77 +z=440.2 +rx=-0.054 +ry=0.057
        +rz=-2.797 +s=2.55 +convention=position_vector
  +step +inv +proj=cart +ellps=bessel
  +step +proj=pop +v_3
  +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0 +ellps=bessel
  +step +proj=axisswap +order=2,1
Le 15/04/2021 ? 14:51, Alan Snow a ?crit :
Original question: https://github.com/pyproj4/pyproj/discussions/814

What he is asking is if TOWGS84 parameters are needed for datum transformations.

Thanks ?

On Thu, Apr 15, 2021, 2:32 AM XCTrails <info at xctrails.org<mailto:info at xctrails.org>> wrote:
Hi,

I have input polygon in epsg:31468 which I need to transform to epsg:4326

My current code boils down to this:

project = pyproj.Transformer.from_crs("EPSG:31468","EPSG:4326", always_xy=True)
poly = transform(project.transform, poly)

The problem however is that the resulting polygons have a 1-2 meter offset according to visual inspection in QGIS. On reddit, someone suggested that I might also need a datum transformation, on the pyproj4 issue tracker someone said, that datum transformations are no longer needed in PROJ 6+ and that I should ask for clarification here. So here I am ;-)

Can anyone shed any light on why I get these offsets and what I can do to fix this?
There's no offset if I manually reproject this in QGIS and compare it with the original.

Thanks,
Armin
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj


_______________________________________________

PROJ mailing list

PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/proj

--

http://www.spatialys.com

My software is free, but my time generally not.
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/0a9a3c3d/attachment-0001.html>

From gdt at lexort.com  Thu Apr 15 08:02:17 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 15 Apr 2021 11:02:17 -0400
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
 (XCTrails's message of "Thu, 15 Apr 2021 16:26:23 +0200")
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
 <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
Message-ID: <rmieefbr3pi.fsf@s1.lexort.com>


XCTrails <info at xctrails.org> writes:

> Maybe as background from where the problem originates:
>
> I'm getting shapes in EPSG:31468 which will subsequently be imported/mapped
> to OpenstreetMap. Eventually, there will be updates to the EPSG:31468
> shapes and I'm in the process of writing a script which should detect shape
> changes/deletions/additions. In order to be able to geometrically compare
> the 2 datasets, my current workaround is to perform the transformation from
> EPSG:31468 to EPSG:4326 manually in QGIS, the diff then runs on 2 4326
> geojson files and produces reasonable polygon matches with an intersection
> over union approach. Ideally, I'd like to get rid of the manual
> transformation step in QGIS (along the way understanding the underlying
> issue).
>
> So, if I understand this correctly: creating a pyproj transformation using
> one of the mentioned PROJ strings/pipelines should yield better results?
> Within the limits of WGS84 - which might by in the same range as my
> initially observed offset.

I have also been transforming data for openstreetmap.   Some hints
from my experience:

Openstreetmap is documented to use WGS84.  This, strictly speaking means
that data is in some realization of WGS84 and you don't know which.
This is not a useful or reasonable approach in 2021, because the old
version of WGS84 that contributes the most to the uncertainty has not
been in use since the 90s and you are transforming *to* WGS84, so the
idea that you don't know which realization you are transforming to is
nonsensical.  Therefore, you should transform to a datum which is
precisely defined and which is equivalent to the modern version of
WGS84.  Candidates are IRF2008, ITRF2014 and WGS84(G1762) itself.
However I had difficulty expressing WGS84(G1762) in proj so that the
right thing happened.

My source data is in "NAD83(2011) epoch 2010.0", which is similar to
DHDN in that it is not ITRF/WGS84.  (Some of my data I have observed
with RTK, and some is from government databases.)

There is a particular problem in the US in that the first realization of
NAD83 and first realization of WGS84 are equivalent, but WGS84 quickly
moved towards ITRF.  But this leads to "transform NAD83 to WGS84" having
a null transform, which is basically a wrong answer while technically
true.  I do not know if this applies to your situation.

So, what I have ended up doing is transforming the data from NAD83(2011)
to ITRF2014, and then treating that as WGS84 for the purpose of using it
in OSM.  This results in observed points lining up well with imagery
published by my state government.  My original data in NAD83(2011)
aligns with the imagery in its native NAD83(2011) coordinates within
10-20cm.  And the transformed-to-ITRF2014 data align with the imagery as
published as TMS, so they have obviously done a (non-null) transform as
well.

You will still need the grids, and also to understand what transform
paths are available.  I would expect a lower-error path from DHDN to
some ETRS to ITRF but that is wild speculation.  And you can look up the
metadata on the grids that transform to "WGS84" and see when that is
from and if it targets a particular realization.

Beware that the EPSG database adopts error estimates from transforms
without validating and correcting them, so what proj is doing by finding
a min-error path is, while the best approach possible, strictly not
really the right thing.  But the effort of determining consistent error
bounds is enormous, and there is no indication anyone is going to do it.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/9cb1efb4/attachment.sig>

From gdt at lexort.com  Thu Apr 15 08:08:48 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 15 Apr 2021 11:08:48 -0400
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <AM0P192MB0482A31A9BB7BF0EB159DE9FEF4D9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 (Jochem via PROJ Lesparre's message of "Thu, 15 Apr 2021 14:53:30
 +0000")
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
 <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
 <AM0P192MB0482A31A9BB7BF0EB159DE9FEF4D9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <rmia6pzr3en.fsf@s1.lexort.com>


"Lesparre, Jochem via PROJ" <proj at lists.osgeo.org> writes:

> I don?t understand why you are using EPSG:4326 (WGS84) when a 2 metre
> offset is not acceptable for you. EPSG:4326 is a general code for a
> collection (datum ensemble) of more precise defined datums (WGS84
> realisations) with their own codes. The differences within the datums
> of the ensemble prevent a transformation to EPSG:4326 that is more
> precise than 2 metres. So if you what a higher accuracy, you will have
> to use a CRS based on another datum, e.g. EPSG:9000 (ITRF2014).

OSM is defined to use WGS84.  From a viewpoint with an understanding of
geodesy in 2021, that's a bug.  In 2007 when people had available
single-frequency GPS receivers that only did navigation solutions, it
made sense.  But even the WGS84 that was in use in 2007 was very close;
if the pre-2007 realizations are excluded, the fuzz wouldn't be a
problem for most.

TMS is also defined to use WGS84, and that has the exact same problem.
I am not aware of any momentum to fix that.  Plus, with 15cm or better
imagery and velocities on the order of 5 cm, one needs to carry epoch
and velocity models, and that is well beyond what it seems webmapping is
up to dealing with.

Someone needs to rant less and actually figure out how to make proj
choose to transform to WGS84(G1762) when asked to transform to or from
WGS84 and submit a patch :-)   It's fair that the accuracy should be
degraded but there's no reason to drop the best-guess transform.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/0a80e60c/attachment.sig>

From Jochem.Lesparre at kadaster.nl  Thu Apr 15 08:43:36 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Thu, 15 Apr 2021 15:43:36 +0000
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <rmia6pzr3en.fsf@s1.lexort.com>
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
 <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
 <AM0P192MB0482A31A9BB7BF0EB159DE9FEF4D9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <rmia6pzr3en.fsf@s1.lexort.com>
Message-ID: <AM0P192MB048218E7D24BD685FD53D49CEF4D9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

Greg wrote:
> make proj choose to transform to WGS84(G1762) when asked to transform to or from WGS84 and submit a patch :-)

That is a good idea that would make my life easier too. I think EPSG should do that instead of PROJ?
However, the real solution is to make people stop using EPSG:4326.

Jochem


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.

From j1 at jimenezshaw.com  Thu Apr 15 09:19:28 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 15 Apr 2021 18:19:28 +0200
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <rmieefbr3pi.fsf@s1.lexort.com>
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
 <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
 <rmieefbr3pi.fsf@s1.lexort.com>
Message-ID: <CADRrdKtTm_qO6dbkpsk+g2c22HdaMjCF61MqaCYUJssS61uCTg@mail.gmail.com>

That relates to a question I have:

The conversion from ITRF2014 to NAD83(2011) has velocities. What should I
set in the 4th dimension converting with proj?
- 2010 (that is the EPOCH of ITRF2014 I guess. BTW, strange name then)
- 2021.3 (the date of the measurement I did this morning)
- something else
- it does not matter (it does, because it returns different values in
projinfo)

Thanks
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Thu, 15 Apr 2021 at 17:02, Greg Troxel <gdt at lexort.com> wrote:

>
> XCTrails <info at xctrails.org> writes:
>
> > Maybe as background from where the problem originates:
> >
> > I'm getting shapes in EPSG:31468 which will subsequently be
> imported/mapped
> > to OpenstreetMap. Eventually, there will be updates to the EPSG:31468
> > shapes and I'm in the process of writing a script which should detect
> shape
> > changes/deletions/additions. In order to be able to geometrically compare
> > the 2 datasets, my current workaround is to perform the transformation
> from
> > EPSG:31468 to EPSG:4326 manually in QGIS, the diff then runs on 2 4326
> > geojson files and produces reasonable polygon matches with an
> intersection
> > over union approach. Ideally, I'd like to get rid of the manual
> > transformation step in QGIS (along the way understanding the underlying
> > issue).
> >
> > So, if I understand this correctly: creating a pyproj transformation
> using
> > one of the mentioned PROJ strings/pipelines should yield better results?
> > Within the limits of WGS84 - which might by in the same range as my
> > initially observed offset.
>
> I have also been transforming data for openstreetmap.   Some hints
> from my experience:
>
> Openstreetmap is documented to use WGS84.  This, strictly speaking means
> that data is in some realization of WGS84 and you don't know which.
> This is not a useful or reasonable approach in 2021, because the old
> version of WGS84 that contributes the most to the uncertainty has not
> been in use since the 90s and you are transforming *to* WGS84, so the
> idea that you don't know which realization you are transforming to is
> nonsensical.  Therefore, you should transform to a datum which is
> precisely defined and which is equivalent to the modern version of
> WGS84.  Candidates are IRF2008, ITRF2014 and WGS84(G1762) itself.
> However I had difficulty expressing WGS84(G1762) in proj so that the
> right thing happened.
>
> My source data is in "NAD83(2011) epoch 2010.0", which is similar to
> DHDN in that it is not ITRF/WGS84.  (Some of my data I have observed
> with RTK, and some is from government databases.)
>
> There is a particular problem in the US in that the first realization of
> NAD83 and first realization of WGS84 are equivalent, but WGS84 quickly
> moved towards ITRF.  But this leads to "transform NAD83 to WGS84" having
> a null transform, which is basically a wrong answer while technically
> true.  I do not know if this applies to your situation.
>
> So, what I have ended up doing is transforming the data from NAD83(2011)
> to ITRF2014, and then treating that as WGS84 for the purpose of using it
> in OSM.  This results in observed points lining up well with imagery
> published by my state government.  My original data in NAD83(2011)
> aligns with the imagery in its native NAD83(2011) coordinates within
> 10-20cm.  And the transformed-to-ITRF2014 data align with the imagery as
> published as TMS, so they have obviously done a (non-null) transform as
> well.
>
> You will still need the grids, and also to understand what transform
> paths are available.  I would expect a lower-error path from DHDN to
> some ETRS to ITRF but that is wild speculation.  And you can look up the
> metadata on the grids that transform to "WGS84" and see when that is
> from and if it targets a particular realization.
>
> Beware that the EPSG database adopts error estimates from transforms
> without validating and correcting them, so what proj is doing by finding
> a min-error path is, while the best approach possible, strictly not
> really the right thing.  But the effort of determining consistent error
> bounds is enormous, and there is no indication anyone is going to do it.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/e14599af/attachment-0001.html>

From gdt at lexort.com  Thu Apr 15 10:01:54 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 15 Apr 2021 13:01:54 -0400
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CADRrdKtTm_qO6dbkpsk+g2c22HdaMjCF61MqaCYUJssS61uCTg@mail.gmail.com>
 (Javier Jimenez Shaw's message of "Thu, 15 Apr 2021 18:19:28 +0200")
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
 <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
 <rmieefbr3pi.fsf@s1.lexort.com>
 <CADRrdKtTm_qO6dbkpsk+g2c22HdaMjCF61MqaCYUJssS61uCTg@mail.gmail.com>
Message-ID: <rmih7k7pjlp.fsf@s1.lexort.com>


Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:

> That relates to a question I have:
>
> The conversion from ITRF2014 to NAD83(2011) has velocities. What should I
> set in the 4th dimension converting with proj?

The traditional view is that ITRF2014 is a dynamic datum, that stations
have velocities and you need to specify the epoch of data but that NAD83
is a static plate-fixed datum.  However, NAD83 really has velocities
too, just about 10x smaller than the same station's ITRF velocities (on
the NA plate; as always YMMY in CA).  People don't worry about this much
in practice because they are small, but also because NAD83 coordinates
are ~always expressed as "NAD83(2011) epoch 2010"; it requires extra
effort to get current epoch NAD83.

> - 2010 (that is the EPOCH of ITRF2014 I guess. BTW, strange name then)

2010 is the reference epoch, yes, but that means that the published
coordinates are given for 2010.0 and then you use another date - 2010.0
* velocity to get current coordinates.

> - 2021.3 (the date of the measurement I did this morning)

probably this

> - something else

If you did a navigation solution that is somehow accurate enough or
you're being careful for fun, then the right answer is hard.  A guess is
the epoch at which the station coordinates used for broadcast orbits
were updated (seems to be end of January every year), combined with some
plate motion model, and this is I suspect impossible to distinguish from
2021.3.

> - it does not matter (it does, because it returns different values in
> projinfo)

The big question is how you did your measurement.  Surely you are
talking carrier phase differential, because otherwise this wouldn't
matter.  Therefore your output coordinates are in the frame of the
reference stations.  I have the impression that for NGS OPUS (PAGES) you
get NAD83(2011) epoch 2010 or you get ITRF2014 epoch of data (because
they reckon the CORS coordinates to that epoch).  And similar for NRCAN
PPP.

In the US, you may also want to look at HTDP, which attempts to do more
careful modeling of velocities than a fixed value.  This was used as
part of the NAD83(2011) adjustment process.

  https://www.ngs.noaa.gov/TOOLS/Htdp/Htdp.shtml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210415/11be6941/attachment.sig>

From info at xctrails.org  Sat Apr 17 10:07:40 2021
From: info at xctrails.org (XCTrails)
Date: Sat, 17 Apr 2021 19:07:40 +0200
Subject: [PROJ] Transforming from epsg:4326 to epsg:31468 produces a 2
 meter offset
In-Reply-To: <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
References: <CAMt9zrvTAEukcL-6FD5N_uAGBVgxrCbBXrLPEKFT0Pg69=w2XA@mail.gmail.com>
 <CAGybdFS-drFsGY-0XQt799+0hP=17Dc5GEzKkFRnttxoEv8X-Q@mail.gmail.com>
 <3fb90a70-71ee-5996-e9ec-e8279d2d011d@spatialys.com>
 <CAMt9zrtdJo7rN=2hSPvXroui9H04a=GZG4cV0LAac92nO4tVrA@mail.gmail.com>
Message-ID: <CAMt9zrtNNuhNxaC=79swuBj7ov+Ug4JYgx4FAhGYwoC1-rmeMQ@mail.gmail.com>

Back to report some kind of success.

First of all, none of the pipeline strings produced by projinfo here work
in my case. I either get a Pipeline: Bad step definition: inv (failed to
load datum shift file) error (although I have a copy of de_adv_BETA2007.tif
in my pyproj.datadir.get_data_dir()), or I get a null geometry when I use
BETA2007.gsb instead.

Before diving into yet another rathole and with now knowing that I can
initialize a pyproj.Transformer from a pipeline string, I looked again at
QGIS - which actually shows me a pipeline string when loading the
EPSG:31468 into a EPSG:4326 project - claiming that this transformation has
a 1m accuracy:

+proj=pipeline
+step +inv +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
+ellps=bessel
+step +proj=hgridshift +grids=BETA2007.gsb
+step +proj=unitconvert +xy_in=rad +xy_out=deg

With that at last, I get identical results between transforming the shapes
in QGIS or in Python. I know I'm still only scratching the surface of all
the details involved here, but I think as a CS and not a GIS guy, I can
live with that for now ;-) So thanks for pushing me into the right
direction!

Am Do., 15. Apr. 2021 um 16:26 Uhr schrieb XCTrails <info at xctrails.org>:

> Ok, I clearly need to research this more judging from your answers so far.
>
> Maybe as background from where the problem originates:
>
> I'm getting shapes in EPSG:31468 which will subsequently be
> imported/mapped to OpenstreetMap. Eventually, there will be updates to the
> EPSG:31468 shapes and I'm in the process of writing a script which should
> detect shape changes/deletions/additions. In order to be able to
> geometrically compare the 2 datasets, my current workaround is to perform
> the transformation from EPSG:31468 to EPSG:4326 manually in QGIS, the diff
> then runs on 2 4326 geojson files and produces reasonable polygon matches
> with an intersection over union approach. Ideally, I'd like to get rid of
> the manual transformation step in QGIS (along the way understanding the
> underlying issue).
>
> So, if I understand this correctly: creating a pyproj transformation using
> one of the mentioned PROJ strings/pipelines should yield better results?
> Within the limits of WGS84 - which might by in the same range as my
> initially observed offset.
>
> Am Do., 15. Apr. 2021 um 15:19 Uhr schrieb Even Rouault <
> even.rouault at spatialys.com>:
>
>> projinfo is often the answer to such questions. Datum transformations
>> *are* generally needed. What is generally no longer required in PROJ 6 era
>> is to use the explict +nadgrids / +towgs84 terms. PROJ will find which ones
>> are needed, but the user may still have to arbitrate because there's not
>> always a single possibility.
>>
>> So the most precise transformation uses the BETA2007 grid, or you have 2
>> potential Helmert-based transformations depending on the location
>>
>> $ projinfo -s EPSG:4326 -t EPSG:31468 --spatial-test intersects -o PROJ
>> Candidate operations found: 3
>> -------------------------------------
>> Operation No. 1:
>>
>> unknown id, Inverse of DHDN to WGS 84 (4) + 3-degree Gauss-Kruger zone 4,
>> 1 m, Germany - onshore - states of Baden-Wurtemberg, Bayern, Berlin,
>> Brandenburg, Bremen, Hamburg, Hessen, Mecklenburg-Vorpommern,
>> Niedersachsen, Nordrhein-Westfalen, Rheinland-Pfalz, Saarland, Sachsen,
>> Sachsen-Anhalt, Schleswig-Holstein, Thuringen.
>>
>> PROJ string:
>> +proj=pipeline
>>   +step +proj=axisswap +order=2,1
>>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>>   +step +inv +proj=hgridshift +grids=de_adv_BETA2007.tif
>>   +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
>> +ellps=bessel
>>   +step +proj=axisswap +order=2,1
>>
>> -------------------------------------
>> Operation No. 2:
>>
>> unknown id, Inverse of DHDN to WGS 84 (2) + 3-degree Gauss-Kruger zone 4,
>> 3 m, Germany - states of former West Germany onshore - Baden-Wurtemberg,
>> Bayern, Bremen, Hamburg, Hessen, Niedersachsen, Nordrhein-Westfalen,
>> Rheinland-Pfalz, Saarland, Schleswig-Holstein.
>>
>> PROJ string:
>> +proj=pipeline
>>   +step +proj=axisswap +order=2,1
>>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>>   +step +proj=push +v_3
>>   +step +proj=cart +ellps=WGS84
>>   +step +inv +proj=helmert +x=598.1 +y=73.7 +z=418.2 +rx=0.202 +ry=0.045
>>         +rz=-2.455 +s=6.7 +convention=position_vector
>>   +step +inv +proj=cart +ellps=bessel
>>   +step +proj=pop +v_3
>>   +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
>> +ellps=bessel
>>   +step +proj=axisswap +order=2,1
>>
>> -------------------------------------
>> Operation No. 3:
>>
>> unknown id, Inverse of DHDN to WGS 84 (3) + 3-degree Gauss-Kruger zone 4,
>> 2 m, Germany - states of former East Germany - Berlin, Brandenburg;
>> Mecklenburg-Vorpommern; Sachsen; Sachsen-Anhalt; Thuringen.
>>
>> PROJ string:
>> +proj=pipeline
>>   +step +proj=axisswap +order=2,1
>>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>>   +step +proj=push +v_3
>>   +step +proj=cart +ellps=WGS84
>>   +step +inv +proj=helmert +x=612.4 +y=77 +z=440.2 +rx=-0.054 +ry=0.057
>>         +rz=-2.797 +s=2.55 +convention=position_vector
>>   +step +inv +proj=cart +ellps=bessel
>>   +step +proj=pop +v_3
>>   +step +proj=tmerc +lat_0=0 +lon_0=12 +k=1 +x_0=4500000 +y_0=0
>> +ellps=bessel
>>   +step +proj=axisswap +order=2,1
>>
>> Le 15/04/2021 ? 14:51, Alan Snow a ?crit :
>>
>> Original question: https://github.com/pyproj4/pyproj/discussions/814
>>
>> What he is asking is if TOWGS84 parameters are needed for datum
>> transformations.
>>
>> Thanks ?
>>
>> On Thu, Apr 15, 2021, 2:32 AM XCTrails <info at xctrails.org> wrote:
>>
>>> Hi,
>>>
>>> I have input polygon in epsg:31468 which I need to transform to
>>> epsg:4326
>>>
>>> My current code boils down to this:
>>>
>>> project = pyproj.Transformer.from_crs("EPSG:31468","EPSG:4326",
>>> always_xy=True)
>>> poly = transform(project.transform, poly)
>>>
>>> The problem however is that the resulting polygons have a 1-2 meter
>>> offset according to visual inspection in QGIS. On reddit, someone suggested
>>> that I might also need a datum transformation, on the pyproj4 issue tracker
>>> someone said, that datum transformations are no longer needed in PROJ 6+
>>> and that I should ask for clarification here. So here I am ;-)
>>>
>>> Can anyone shed any light on why I get these offsets and what I can do
>>> to fix this?
>>> There's no offset if I manually reproject this in QGIS and compare it
>>> with the original.
>>>
>>> Thanks,
>>> Armin
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>
>>
>> _______________________________________________
>> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>>
>> -- http://www.spatialys.com
>> My software is free, but my time generally not.
>>
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210417/3a1b043b/attachment.html>

From j1 at jimenezshaw.com  Sat Apr 17 12:44:17 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sat, 17 Apr 2021 21:44:17 +0200
Subject: [PROJ] World UTM in a proper datum
Message-ID: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>

Hi

Maybe there is a better place to talk about this, but I do not know which
one. I hope somebody from EPSG is reading this, and may give me a clue.

We have talked many times about the lack of accuracy of WGS84 (EPSG:4326),
the datum ensemble, etc.
The problem is that I miss an accurate equivalent of the projected family
"WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60
and Y is N or S. It would be nice something similar (a worldwide projected
CRSs on UTM), but over a proper accurate and well defined geographic CRS
(ITRF2014, WGS84(G1762), etc).

Do you know if there is any plan? Or do they exist and I was not able to
find them?

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210417/0858f141/attachment.html>

From ndzinn at comcast.net  Sat Apr 17 13:24:11 2021
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Sat, 17 Apr 2021 15:24:11 -0500
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
Message-ID: <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>

Unlike an empirically-derived datum transformation (e.g. WGS <> ITRF), which can have different levels of "accuracy" depending how it was derived, a map projection (lat/lon <> N/E) is defined mathematically and is precise, i.e. without error.  Having said that, there are better and worse algorithms for UTM, but that's not the question you're asking.  In a datum transformation sense UTM will always be as (and only as) "accurate" as the geographicals you convert to N/E.  So, use EPSG:326XX and EPSG327XX, but plug in your precise geographicals.  


From: Javier Jimenez Shaw 
Sent: Saturday, April 17, 2021 2:44 PM
To: proj 
Subject: [PROJ] World UTM in a proper datum

Hi 

Maybe there is a better place to talk about this, but I do not know which one. I hope somebody from EPSG is reading this, and may give me a clue.

We have talked many times about the lack of accuracy of WGS84 (EPSG:4326), the datum ensemble, etc.
The problem is that I miss an accurate equivalent of the projected family "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60 and Y is N or S. It would be nice something similar (a worldwide projected CRSs on UTM), but over a proper accurate and well defined geographic CRS (ITRF2014, WGS84(G1762), etc).

Do you know if there is any plan? Or do they exist and I was not able to find them?

Thanks.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales 
hay infinitos pensamientos irracionales.




--------------------------------------------------------------------------------
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210417/0c1364da/attachment.html>

From j1 at jimenezshaw.com  Sat Apr 17 13:56:10 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sat, 17 Apr 2021 22:56:10 +0200
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
Message-ID: <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>

Hi Noel,
If I am the only user of the data, I can do that (and whatever I want). But
if I have to produce accurate data processed by somebody else, I fall into
the hole of vagueness of WGS84. For instance, if I create a precise GeoTIFF
and I want to tag it with an EPSG, using EPSG:326XX is... vague. Or a GCP,
or anything else. There are several alternatives for the geographic crs.
I know I can apply UTM over ITRF2014 (GDAL does it easily). But there is no
EPSG code for that.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Sat, 17 Apr 2021 at 22:24, Noel Zinn (cc) <ndzinn at comcast.net> wrote:

> Unlike an empirically-derived datum transformation (e.g. WGS <> ITRF),
> which can have different levels of "accuracy" depending how it was derived,
> a map projection (lat/lon <> N/E) is defined mathematically and is precise,
> i.e. without error.  Having said that, there are better and worse
> algorithms for UTM, but that's not the question you're asking.  In a
> datum transformation sense UTM will always be as (and only as) "accurate"
> as the geographicals you convert to N/E.  So, use EPSG:326XX and
> EPSG327XX, but plug in your precise geographicals.
>
> *From:* Javier Jimenez Shaw <j1 at jimenezshaw.com>
> *Sent:* Saturday, April 17, 2021 2:44 PM
> *To:* proj <PROJ at lists.osgeo.org>
> *Subject:* [PROJ] World UTM in a proper datum
>
> Hi
>
> Maybe there is a better place to talk about this, but I do not know which
> one. I hope somebody from EPSG is reading this, and may give me a clue.
>
> We have talked many times about the lack of accuracy of WGS84 (EPSG:4326),
> the datum ensemble, etc.
> The problem is that I miss an accurate equivalent of the projected family
> "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60
> and Y is N or S. It would be nice something similar (a worldwide projected
> CRSs on UTM), but over a proper accurate and well defined geographic CRS
> (ITRF2014, WGS84(G1762), etc).
>
> Do you know if there is any plan? Or do they exist and I was not able to
> find them?
>
> Thanks.
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
> ------------------------------
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210417/7f7d2ad4/attachment.html>

From ndzinn at comcast.net  Sat Apr 17 14:59:16 2021
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Sat, 17 Apr 2021 16:59:16 -0500
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
Message-ID: <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>

We really need two codes, don?t we?  One for the geographical datum (ITRF2014 in GRS80, which is EPSG:7789 in your case) and one for the projection UTM in GRS80 (which, I guess, doesn?t exist), perhaps an EPSG architecture problem.  To be frank, your expectation that the EPSG do for ITRF2014 what it?s done for WGS84/UTM is unrealistic.  Add ITRF2008 and so on, how many combinations would that be?


From: Javier Jimenez Shaw 
Sent: Saturday, April 17, 2021 3:56 PM
To: Noel Zinn (cc) 
Cc: proj 
Subject: Re: [PROJ] World UTM in a proper datum

Hi Noel, 
If I am the only user of the data, I can do that (and whatever I want). But if I have to produce accurate data processed by somebody else, I fall into the hole of vagueness of WGS84. For instance, if I create a precise GeoTIFF and I want to tag it with an EPSG, using EPSG:326XX is... vague. Or a GCP, or anything else. There are several alternatives for the geographic crs.
I know I can apply UTM over ITRF2014 (GDAL does it easily). But there is no EPSG code for that.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales 
hay infinitos pensamientos irracionales.




On Sat, 17 Apr 2021 at 22:24, Noel Zinn (cc) <ndzinn at comcast.net> wrote:

  Unlike an empirically-derived datum transformation (e.g. WGS <> ITRF), which can have different levels of "accuracy" depending how it was derived, a map projection (lat/lon <> N/E) is defined mathematically and is precise, i.e. without error.  Having said that, there are better and worse algorithms for UTM, but that's not the question you're asking.  In a datum transformation sense UTM will always be as (and only as) "accurate" as the geographicals you convert to N/E.  So, use EPSG:326XX and EPSG327XX, but plug in your precise geographicals.  


  From: Javier Jimenez Shaw 
  Sent: Saturday, April 17, 2021 2:44 PM
  To: proj 
  Subject: [PROJ] World UTM in a proper datum

  Hi 

  Maybe there is a better place to talk about this, but I do not know which one. I hope somebody from EPSG is reading this, and may give me a clue.

  We have talked many times about the lack of accuracy of WGS84 (EPSG:4326), the datum ensemble, etc.
  The problem is that I miss an accurate equivalent of the projected family "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60 and Y is N or S. It would be nice something similar (a worldwide projected CRSs on UTM), but over a proper accurate and well defined geographic CRS (ITRF2014, WGS84(G1762), etc).

  Do you know if there is any plan? Or do they exist and I was not able to find them?

  Thanks.

  .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
  Entre dos pensamientos racionales 
  hay infinitos pensamientos irracionales.



------------------------------------------------------------------------------
  _______________________________________________
  PROJ mailing list
  PROJ at lists.osgeo.org
  https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210417/a1861b90/attachment-0001.html>

From Jochem.Lesparre at kadaster.nl  Sun Apr 18 00:20:02 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Sun, 18 Apr 2021 07:20:02 +0000
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
Message-ID: <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

This is indeed a major problem with (the way most software and people are using) EPSG. By just using EPSG CRS codes, one needs a unique EPSG CRS code for every possible combination of datum and projection. However, the number of possible combinations is way too large. I think, the solution is to split the datum definition (WGS84, WGS84G1762, ITRF2014, ETRF2000, etc.) and the projection definition (UTM, pseudomercator, LAEA, LCC, etc.). For the datum definition one can use the normal EPSG CRS codes. For the projection definition one could use the lesser known EPSG conversion codes, e.g. EPSG conversion code 16031 (https://epsg.org/conversion_16031/UTM-zone-31N.html) for UTM zoned 31N. Isn?t this the approach used in WKT strings?

Jochem

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Noel Zinn (cc)
Sent: zaterdag 17 april 2021 23:59
To: Javier Jimenez Shaw <j1 at jimenezshaw.com>
Cc: proj <PROJ at lists.osgeo.org>
Subject: Re: [PROJ] World UTM in a proper datum

We really need two codes, don?t we?  One for the geographical datum (ITRF2014 in GRS80, which is EPSG:7789 in your case) and one for the projection UTM in GRS80 (which, I guess, doesn?t exist), perhaps an EPSG architecture problem.  To be frank, your expectation that the EPSG do for ITRF2014 what it?s done for WGS84/UTM is unrealistic.  Add ITRF2008 and so on, how many combinations would that be?


From: Javier Jimenez Shaw<mailto:j1 at jimenezshaw.com>
Sent: Saturday, April 17, 2021 3:56 PM
To: Noel Zinn (cc)<mailto:ndzinn at comcast.net>
Cc: proj<mailto:PROJ at lists.osgeo.org>
Subject: Re: [PROJ] World UTM in a proper datum

Hi Noel,
If I am the only user of the data, I can do that (and whatever I want). But if I have to produce accurate data processed by somebody else, I fall into the hole of vagueness of WGS84. For instance, if I create a precise GeoTIFF and I want to tag it with an EPSG, using EPSG:326XX is... vague. Or a GCP, or anything else. There are several alternatives for the geographic crs.
I know I can apply UTM over ITRF2014 (GDAL does it easily). But there is no EPSG code for that.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.


On Sat, 17 Apr 2021 at 22:24, Noel Zinn (cc) <ndzinn at comcast.net<mailto:ndzinn at comcast.net>> wrote:
Unlike an empirically-derived datum transformation (e.g. WGS <> ITRF), which can have different levels of "accuracy" depending how it was derived, a map projection (lat/lon <> N/E) is defined mathematically and is precise, i.e. without error.  Having said that, there are better and worse algorithms for UTM, but that's not the question you're asking.  In a datum transformation sense UTM will always be as (and only as) "accurate" as the geographicals you convert to N/E.  So, use EPSG:326XX and EPSG327XX, but plug in your precise geographicals.

From: Javier Jimenez Shaw<mailto:j1 at jimenezshaw.com>
Sent: Saturday, April 17, 2021 2:44 PM
To: proj<mailto:PROJ at lists.osgeo.org>
Subject: [PROJ] World UTM in a proper datum

Hi

Maybe there is a better place to talk about this, but I do not know which one. I hope somebody from EPSG is reading this, and may give me a clue.

We have talked many times about the lack of accuracy of WGS84 (EPSG:4326), the datum ensemble, etc.
The problem is that I miss an accurate equivalent of the projected family "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60 and Y is N or S. It would be nice something similar (a worldwide projected CRSs on UTM), but over a proper accurate and well defined geographic CRS (ITRF2014, WGS84(G1762), etc).

Do you know if there is any plan? Or do they exist and I was not able to find them?

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
________________________________
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/460be3b4/attachment-0001.html>

From j1 at jimenezshaw.com  Sun Apr 18 02:45:59 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sun, 18 Apr 2021 11:45:59 +0200
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <CADRrdKv=bSHs4FaAeG0dxRkmHDWWfvG+_rcAbZLpHhyz+NoCYQ@mail.gmail.com>

Hi Jochem,
I do not need to reach that far. You can do that with a "personalized" WKT
string, it is easy... but probably not supported by many software.
Every combination of geographic crs and projection does not make sense in
EPSG. Coordinate reference systems are usually defined by the state/country
authority. In Spain for instance the oficial for maps is ETRS89 + UTM (3
zones). Nobody uses a LCC. In Switzerland they use a single projection
(Hotine_Oblique_Mercator_Azimuth_Center). USA has... well, this is a
different chaos; but it has a limit.

My problem comes with the lack of a
 a) worldwide
 b) accurate / well defined
 c) projected system
 d) in EPSG
for general purpose.
(When I say b), I would include an associated geoid, EGM2008?)

WGS84 / UTM does not fulfill b).
WGS84(G1762), ITRF2008, ITRF2014, and other similar do not fulfill c).
NAD83(2011) / Any projection does not fulfill a)
A personalized WKT does not fulfill d)

I do not need every combination. I just need "one".
Later I can convert -if needed- to my local crs in my country using
(probably) an accurate transformation.

Cheers,
Javier

PS. Dear Santa. All I want this year is a substitute for WGS84. One that we
all agree, we all love, accurate and useful. One easy and accurate to
transform to the personal needs. One with a nice family of projected
children in EPSG that we all can enjoy and play with. Not only for my
friends an me, but for everybody in the world.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Sun, 18 Apr 2021 at 09:20, Lesparre, Jochem <Jochem.Lesparre at kadaster.nl>
wrote:

> This is indeed a major problem with (the way most software and people are
> using) EPSG. By just using EPSG CRS codes, one needs a unique EPSG CRS code
> for every possible combination of datum and projection. However, the number
> of possible combinations is way too large. I think, the solution is to
> split the datum definition (WGS84, WGS84G1762, ITRF2014, ETRF2000, etc.)
> and the projection definition (UTM, pseudomercator, LAEA, LCC, etc.). For
> the datum definition one can use the normal EPSG CRS codes. For the
> projection definition one could use the lesser known EPSG conversion codes,
> e.g. EPSG conversion code 16031 (
> https://epsg.org/conversion_16031/UTM-zone-31N.html) for UTM zoned 31N.
> Isn?t this the approach used in WKT strings?
>
>
>
> Jochem
>
>
>
> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Noel Zinn (cc)
> *Sent:* zaterdag 17 april 2021 23:59
> *To:* Javier Jimenez Shaw <j1 at jimenezshaw.com>
> *Cc:* proj <PROJ at lists.osgeo.org>
> *Subject:* Re: [PROJ] World UTM in a proper datum
>
>
>
> We really need two codes, don?t we?  One for the geographical datum
> (ITRF2014 in GRS80, which is EPSG:7789 in your case) and one for the
> projection UTM in GRS80 (which, I guess, doesn?t exist), perhaps an EPSG
> architecture problem.  To be frank, your expectation that the EPSG do for
> ITRF2014 what it?s done for WGS84/UTM is unrealistic.  Add ITRF2008 and so
> on, how many combinations would that be?
>
>
>
>
>
> *From:* Javier Jimenez Shaw <j1 at jimenezshaw.com>
>
> *Sent:* Saturday, April 17, 2021 3:56 PM
>
> *To:* Noel Zinn (cc) <ndzinn at comcast.net>
>
> *Cc:* proj <PROJ at lists.osgeo.org>
>
> *Subject:* Re: [PROJ] World UTM in a proper datum
>
>
>
> Hi Noel,
>
> If I am the only user of the data, I can do that (and whatever I want).
> But if I have to produce accurate data processed by somebody else, I fall
> into the hole of vagueness of WGS84. For instance, if I create a precise
> GeoTIFF and I want to tag it with an EPSG, using EPSG:326XX is... vague. Or
> a GCP, or anything else. There are several alternatives for the geographic
> crs.
>
> I know I can apply UTM over ITRF2014 (GDAL does it easily). But there is
> no EPSG code for that.
>
>
>
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
>
>
> On Sat, 17 Apr 2021 at 22:24, Noel Zinn (cc) <ndzinn at comcast.net> wrote:
>
> Unlike an empirically-derived datum transformation (e.g. WGS <> ITRF),
> which can have different levels of "accuracy" depending how it was derived,
> a map projection (lat/lon <> N/E) is defined mathematically and is precise,
> i.e. without error.  Having said that, there are better and worse
> algorithms for UTM, but that's not the question you're asking.  In a datum
> transformation sense UTM will always be as (and only as) "accurate" as the
> geographicals you convert to N/E.  So, use EPSG:326XX and EPSG327XX, but
> plug in your precise geographicals.
>
>
>
> *From:* Javier Jimenez Shaw <j1 at jimenezshaw.com>
>
> *Sent:* Saturday, April 17, 2021 2:44 PM
>
> *To:* proj <PROJ at lists.osgeo.org>
>
> *Subject:* [PROJ] World UTM in a proper datum
>
>
>
> Hi
>
>
>
> Maybe there is a better place to talk about this, but I do not know which
> one. I hope somebody from EPSG is reading this, and may give me a clue.
>
>
>
> We have talked many times about the lack of accuracy of WGS84 (EPSG:4326),
> the datum ensemble, etc.
>
> The problem is that I miss an accurate equivalent of the projected family
> "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60
> and Y is N or S. It would be nice something similar (a worldwide projected
> CRSs on UTM), but over a proper accurate and well defined geographic CRS
> (ITRF2014, WGS84(G1762), etc).
>
>
>
> Do you know if there is any plan? Or do they exist and I was not able to
> find them?
>
>
>
> Thanks.
>
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
> ------------------------------
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming van
> het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan
> verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee
> without the consent
> of the Kadaster is unlawful. If you have received this message, but are
> not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/bdd9e81c/attachment.html>

From even.rouault at spatialys.com  Sun Apr 18 02:51:23 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 18 Apr 2021 11:51:23 +0200
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <2bb3f7d9-4204-8aa4-e194-ff43e3040979@spatialys.com>

Yes, I assume that the large number of codes that should be created, and 
still for relatively marginal use cases, is what makes IOGP refrain from 
doing that.

What you describe is exactly the not so known OGC URN syntax for 
combined objects (see OGC 07-092r2, para 7.5.4 : 
https://portal.ogc.org/files/?artifact_id=29533 )

For example for UTM 31N / WGS 84 (G1762), that is

urn:ogc:def:crs,crs:EPSG::9057,cs:EPSG::4400,coordinateOperation:EPSG::16031

and you can use that with projinfo / proj_create()

If you use that in GeoTIFF, what would be missing though is the 
coordinate epoch. You'll have to store it in a TIFF tag. There's no way 
in the GeoTIFF encoding itself to store it.

Even

Le 18/04/2021 ? 09:20, Lesparre, Jochem via PROJ a ?crit?:
>
> This is indeed a major problem with (the way most software and people 
> are using) EPSG. By just using EPSG CRS codes, one needs a unique EPSG 
> CRS code for every possible combination of datum and projection. 
> However, the number of possible combinations is way too large. I 
> think, the solution is to split the datum definition (WGS84, 
> WGS84G1762, ITRF2014, ETRF2000, etc.) and the projection definition 
> (UTM, pseudomercator, LAEA, LCC, etc.). For the datum definition one 
> can use the normal EPSG CRS codes. For the projection definition one 
> could use the lesser known EPSG conversion codes, e.g. EPSG conversion 
> code 16031 (https://epsg.org/conversion_16031/UTM-zone-31N.html 
> <https://epsg.org/conversion_16031/UTM-zone-31N.html>) for UTM zoned 
> 31N. Isn?t this the approach used in WKT strings?
>
> Jochem
>
> *From:*PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Noel Zinn (cc)
> *Sent:* zaterdag 17 april 2021 23:59
> *To:* Javier Jimenez Shaw <j1 at jimenezshaw.com>
> *Cc:* proj <PROJ at lists.osgeo.org>
> *Subject:* Re: [PROJ] World UTM in a proper datum
>
> We really need two codes, don?t we?? One for the geographical datum 
> (ITRF2014 in GRS80, which is EPSG:7789 in your case) and one for the 
> projection UTM in GRS80 (which, I guess, doesn?t exist), perhaps an 
> EPSG architecture problem.? To be frank, your expectation that the 
> EPSG do for ITRF2014 what it?s done for WGS84/UTM is unrealistic.? Add 
> ITRF2008 and so on, how many combinations would that be?
>
> *From:*Javier Jimenez Shaw <mailto:j1 at jimenezshaw.com>
>
> *Sent:*Saturday, April 17, 2021 3:56 PM
>
> *To:*Noel Zinn (cc) <mailto:ndzinn at comcast.net>
>
> *Cc:*proj <mailto:PROJ at lists.osgeo.org>
>
> *Subject:*Re: [PROJ] World UTM in a proper datum
>
> Hi Noel,
>
> If I am the only user of the data, I can do that (and whatever I 
> want). But if I have to produce accurate data processed by somebody 
> else, I fall into the hole of vagueness of WGS84. For instance, if I 
> create a precise GeoTIFF and I want to tag it with an EPSG, using 
> EPSG:326XX is... vague. Or a GCP, or anything else. There are several 
> alternatives for the geographic crs.
>
> I know I can apply UTM over ITRF2014 (GDAL does it easily). But there 
> is no EPSG code for that.
>
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
> On Sat, 17 Apr 2021 at 22:24, Noel Zinn (cc) <ndzinn at comcast.net 
> <mailto:ndzinn at comcast.net>> wrote:
>
>     Unlike an empirically-derived datum transformation (e.g. WGS <>
>     ITRF), which can have different levels of "accuracy" depending how
>     it was derived, a map projection (lat/lon <> N/E) is defined
>     mathematically and is precise, i.e. without error. ?Having said
>     that, there are better and worse algorithms for UTM, but that's
>     not the question you're asking. ?In a datum transformation sense
>     UTM will always be as (and only as) "accurate" as the
>     geographicals you convert to N/E. ?So, use EPSG:326XX and
>     EPSG327XX, but plug in your precise geographicals.
>
>     *From:*Javier Jimenez Shaw <mailto:j1 at jimenezshaw.com>
>
>     *Sent:*Saturday, April 17, 2021 2:44 PM
>
>     *To:*proj <mailto:PROJ at lists.osgeo.org>
>
>     *Subject:*[PROJ] World UTM in a proper datum
>
>     Hi
>
>     Maybe there is a better place to talk about this, but I do not
>     know which one. I hope somebody from EPSG is reading this, and may
>     give me a clue.
>
>     We have talked many times about the lack of accuracy of WGS84
>     (EPSG:4326), the datum ensemble, etc.
>
>     The problem is that I miss an accurate equivalent of the projected
>     family "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX
>     between 1 and 60 and Y is N or S. It would be nice something
>     similar (a worldwide projected CRSs on UTM), but over a proper
>     accurate and well defined geographic CRS (ITRF2014, WGS84(G1762),
>     etc).
>
>     Do you know if there is any plan? Or do they exist and I was not
>     able to find them?
>
>     Thanks.
>
>     .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>     Entre dos pensamientos racionales
>     hay infinitos pensamientos irracionales.
>
>     ------------------------------------------------------------------------
>
>     _______________________________________________
>     PROJ mailing list
>     PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/proj
>     <https://lists.osgeo.org/mailman/listinfo/proj>
>
>
>
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming 
> van het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, 
> dan verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee 
> without the consent
> of the Kadaster is unlawful. If you have received this message, but 
> are not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/eb337627/attachment-0001.html>

From Jochem.Lesparre at kadaster.nl  Sun Apr 18 07:37:10 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Sun, 18 Apr 2021 14:37:10 +0000
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <2bb3f7d9-4204-8aa4-e194-ff43e3040979@spatialys.com>
 <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>
Message-ID: <AM0P192MB0482D663CA25EB9EFD5850AFEF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

Duncan wrote:
> As an onlooker, I have a question: what is UTM/WGS84 intended to mean? Is it (A) the UTM projection using the WGS84 ellipsoid
as a parameter, or (B)  is it meant to imply also that the coordinates are in a datum that is one of the several labelled WGS84? A is clear and completely unambiguous; B isn't, partly because it is subject to change as data are collected (not to mention plate motions). Data-dependence is also a problem with geoid models: it is why there are so many, after all.

Duncan, I think WGS84-UTM is normally intended to mean both A and B so it is using a datum of WGS84 realisation and the WGS84 ellipsoid. According to ISO and EPSG de ellipsoid is part of the datum, so in that case the answer A and B is the same as just B.

Jochem


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/adc9b5a9/attachment.html>

From raife at tp-regen.co.uk  Sat Apr 17 13:04:01 2021
From: raife at tp-regen.co.uk (Raife Crookes)
Date: Sat, 17 Apr 2021 20:04:01 +0000
Subject: [PROJ] Assistance with GDALWarp - ESPG:27700 to ESPG:4326 - Elipsod
 level not sea level
Message-ID: <LO0P265MB30836AE093365C7D92294935C34B9@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>

Good evening,

I am hoping that someone could assist me with the completion of a reprojection of a geotiff lidar data set to WGS84.

The transformation should me making an elevation change of roughly 50m for known points however after running GDAL warp the elevations are staying the same when viewed through QGIS.

For some reason it seems to be defaulting to the WGS84 geoid height not the ellipsoid height I require for import onto our drone. (My knowledge is that EPSG:4326 should equate to the wgs lat/long and ellipsoid height.)

GDALWARP instructions:
gdalwarp  -s_srs EPSG:27700 -t_srs EPSG:4326
gdalwarp  -s_srs -t_srs EPSG:4326



Proj info return:
C:\>projinfo -s EPSG:27700 -t EPSG:4326 -o PROJ
Candidate operations found: 1
Note: using '--spatial-test intersects' would bring more results (7)
-------------------------------------
Operation No. 1:

unknown id, Inverse of British National Grid + OSGB 1936 to WGS 84 (9), 1 m, UK - Britain and UKCS 49??46'N to 61??01'N, 7??33'W to 3??33'E

PROJ string:
+proj=pipeline +step +inv +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +step +proj=hgridshift +grids=OSTN15_NTv2_OSGBtoETRS.gsb +step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1



I can send copies of the original file if requested.

Hoping that its something stupid like im using the wrong EPSG code but have a terrible feeling that a catch all to prevent users accidentally using the ellipsoid height is catching me out.

(Ground height OSGB - 30m  in WGS84 = 82m)

Really look forward to your help/

Kind regards

Raife

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210417/17b2fe38/attachment-0001.html>

From dagnew at ucsd.edu  Sun Apr 18 06:41:22 2021
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Sun, 18 Apr 2021 06:41:22 -0700
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <2bb3f7d9-4204-8aa4-e194-ff43e3040979@spatialys.com>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <2bb3f7d9-4204-8aa4-e194-ff43e3040979@spatialys.com>
Message-ID: <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>

As an onlooker, I have a question: what is UTM/WGS84 intended to mean? Is
it (A) the UTM projection using the WGS84 ellipsoid
as a parameter, or (B)  is it meant to imply also that the coordinates are
in a datum that is one of the several labelled WGS84? A is clear and
completely unambiguous; B isn't, partly because it is subject to change as
data are collected (not to mention plate motions). Data-dependence is also
a problem with geoid models: it is why there are so many, after all.

On Sun, Apr 18, 2021 at 2:51 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Yes, I assume that the large number of codes that should be created, and
> still for relatively marginal use cases, is what makes IOGP refrain from
> doing that.
>
> What you describe is exactly the not so known OGC URN syntax for combined
> objects (see OGC 07-092r2, para 7.5.4 :
> https://portal.ogc.org/files/?artifact_id=29533
> <https://urldefense.com/v3/__https://portal.ogc.org/files/?artifact_id=29533__;!!Mih3wA!W6E8KjQeH8H-OnMjrZ9cWSBnPkQEeS2Ow1ldMT0tZvbKVM5fTlD9r718H5HVjC4$>
> )
>
> For example for UTM 31N / WGS 84 (G1762), that is
>
>
> urn:ogc:def:crs,crs:EPSG::9057,cs:EPSG::4400,coordinateOperation:EPSG::16031
>
> and you can use that with projinfo / proj_create()
>
> If you use that in GeoTIFF, what would be missing though is the coordinate
> epoch. You'll have to store it in a TIFF tag. There's no way in the GeoTIFF
> encoding itself to store it.
>
> Even
> Le 18/04/2021 ? 09:20, Lesparre, Jochem via PROJ a ?crit :
>
> This is indeed a major problem with (the way most software and people are
> using) EPSG. By just using EPSG CRS codes, one needs a unique EPSG CRS code
> for every possible combination of datum and projection. However, the number
> of possible combinations is way too large. I think, the solution is to
> split the datum definition (WGS84, WGS84G1762, ITRF2014, ETRF2000, etc.)
> and the projection definition (UTM, pseudomercator, LAEA, LCC, etc.). For
> the datum definition one can use the normal EPSG CRS codes. For the
> projection definition one could use the lesser known EPSG conversion codes,
> e.g. EPSG conversion code 16031 (
> https://epsg.org/conversion_16031/UTM-zone-31N.html
> <https://urldefense.com/v3/__https://epsg.org/conversion_16031/UTM-zone-31N.html__;!!Mih3wA!W6E8KjQeH8H-OnMjrZ9cWSBnPkQEeS2Ow1ldMT0tZvbKVM5fTlD9r718m8HlkqY$>)
> for UTM zoned 31N. Isn?t this the approach used in WKT strings?
>
>
>
> Jochem
>
>
>
> *From:* PROJ <proj-bounces at lists.osgeo.org> <proj-bounces at lists.osgeo.org> *On
> Behalf Of *Noel Zinn (cc)
> *Sent:* zaterdag 17 april 2021 23:59
> *To:* Javier Jimenez Shaw <j1 at jimenezshaw.com> <j1 at jimenezshaw.com>
> *Cc:* proj <PROJ at lists.osgeo.org> <PROJ at lists.osgeo.org>
> *Subject:* Re: [PROJ] World UTM in a proper datum
>
>
>
> We really need two codes, don?t we?  One for the geographical datum
> (ITRF2014 in GRS80, which is EPSG:7789 in your case) and one for the
> projection UTM in GRS80 (which, I guess, doesn?t exist), perhaps an EPSG
> architecture problem.  To be frank, your expectation that the EPSG do for
> ITRF2014 what it?s done for WGS84/UTM is unrealistic.  Add ITRF2008 and so
> on, how many combinations would that be?
>
>
>
>
>
> *From:* Javier Jimenez Shaw <j1 at jimenezshaw.com>
>
> *Sent:* Saturday, April 17, 2021 3:56 PM
>
> *To:* Noel Zinn (cc) <ndzinn at comcast.net>
>
> *Cc:* proj <PROJ at lists.osgeo.org>
>
> *Subject:* Re: [PROJ] World UTM in a proper datum
>
>
>
> Hi Noel,
>
> If I am the only user of the data, I can do that (and whatever I want).
> But if I have to produce accurate data processed by somebody else, I fall
> into the hole of vagueness of WGS84. For instance, if I create a precise
> GeoTIFF and I want to tag it with an EPSG, using EPSG:326XX is... vague. Or
> a GCP, or anything else. There are several alternatives for the geographic
> crs.
>
> I know I can apply UTM over ITRF2014 (GDAL does it easily). But there is
> no EPSG code for that.
>
>
>
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
>
>
> On Sat, 17 Apr 2021 at 22:24, Noel Zinn (cc) <ndzinn at comcast.net> wrote:
>
> Unlike an empirically-derived datum transformation (e.g. WGS <> ITRF),
> which can have different levels of "accuracy" depending how it was derived,
> a map projection (lat/lon <> N/E) is defined mathematically and is precise,
> i.e. without error.  Having said that, there are better and worse
> algorithms for UTM, but that's not the question you're asking.  In a datum
> transformation sense UTM will always be as (and only as) "accurate" as the
> geographicals you convert to N/E.  So, use EPSG:326XX and EPSG327XX, but
> plug in your precise geographicals.
>
>
>
> *From:* Javier Jimenez Shaw <j1 at jimenezshaw.com>
>
> *Sent:* Saturday, April 17, 2021 2:44 PM
>
> *To:* proj <PROJ at lists.osgeo.org>
>
> *Subject:* [PROJ] World UTM in a proper datum
>
>
>
> Hi
>
>
>
> Maybe there is a better place to talk about this, but I do not know which
> one. I hope somebody from EPSG is reading this, and may give me a clue.
>
>
>
> We have talked many times about the lack of accuracy of WGS84 (EPSG:4326),
> the datum ensemble, etc.
>
> The problem is that I miss an accurate equivalent of the projected family
> "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60
> and Y is N or S. It would be nice something similar (a worldwide projected
> CRSs on UTM), but over a proper accurate and well defined geographic CRS
> (ITRF2014, WGS84(G1762), etc).
>
>
>
> Do you know if there is any plan? Or do they exist and I was not able to
> find them?
>
>
>
> Thanks.
>
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
> ------------------------------
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> <https://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!W6E8KjQeH8H-OnMjrZ9cWSBnPkQEeS2Ow1ldMT0tZvbKVM5fTlD9r718Osx8jCY$>
>
>
>
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming van
> het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan
> verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee
> without the consent
> of the Kadaster is unlawful. If you have received this message, but are
> not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message.
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj <https://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!W6E8KjQeH8H-OnMjrZ9cWSBnPkQEeS2Ow1ldMT0tZvbKVM5fTlD9r718Osx8jCY$>
>
> -- http://www.spatialys.com <https://urldefense.com/v3/__http://www.spatialys.com__;!!Mih3wA!W6E8KjQeH8H-OnMjrZ9cWSBnPkQEeS2Ow1ldMT0tZvbKVM5fTlD9r718aCkmz9c$>
> My software is free, but my time generally not.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
>
> https://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!W6E8KjQeH8H-OnMjrZ9cWSBnPkQEeS2Ow1ldMT0tZvbKVM5fTlD9r718Osx8jCY$
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/09b0bce4/attachment-0001.html>

From dave at stellacore.com  Sun Apr 18 10:18:16 2021
From: dave at stellacore.com (Dave Knopp)
Date: Sun, 18 Apr 2021 11:18:16 -0600
Subject: [PROJ] Geo/Carto concepts to discuss Re: World UTM in a proper datum
In-Reply-To: <AM0P192MB0482D663CA25EB9EFD5850AFEF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <2bb3f7d9-4204-8aa4-e194-ff43e3040979@spatialys.com>
 <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>
 <AM0P192MB0482D663CA25EB9EFD5850AFEF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <86928b1b-7195-7473-6d62-475c23a7f44c@stellacore.com>


This post is a bit from the "cheap seats" - it's been ages since I last
used Proj firsthand and it's evolved considerably (not to mention what
I've forgotten;-). However, FWIW...

I hope the following might offer some useful framework for the ongoing
discussion about what types of attribute codes may be desirable to
represent what properties.

Below is a quick (off-the cuff) high level inventory of several relevant
geodesy/cartography concepts with which the various codes interact.

Perhaps thinking/typing discussion in terms of these concepts may help
clarify which codes involve which properties.

In a ideal perfect world, one would use separate independent codes to
refer to each of the half dozen or so independent property choices.
However, back here on Earth;-), the practical question is probably how
best to keep code-to-property(ies) associations most consistent with
existing widespread current usage - while also recognizing the
continuously advancing precision and detail involved in geospatial
representations.

Dave


== H) Horizontal

H1) Earth Modeling

 H1.1) - Geometric Ellipsoid (aka Horizontal Datum) - used for
  -- LLA/XYZ conversions which in turn allow
  -- Accurate approximation for conversion between H.Datums
  (e.g. ClarkXX, GRS80, WGS84-Ellipsoid)

 H1.2) - Geoid - Only for Vertical unless for astrodetic lon/lat


H2) Cartographic Modeling

 H2.1) - Generating Surface
         (Math abstraction)
         (eg often a sphere but could be ellipsoid or even arbitrary)
         (often just consider as part of function below)

 H2.2) - Projection/developing function
         (e.g. Stereograhic, Lambert, UTM, etc)


== V) Vertical

V1) Geometry Modeling

 V1.1 - Distance from Earth Model reference surface
   (e.g. commonly the separation from same Geometric Ellipsoid in H1.1)
   (aka ellipsoidal height)


V2) Energy (Hydraulic Head) Modeling

 V2.1) - Work-integral to point from V.Datum reference surface
   (A specific Geoid is the reference surface)
   (aka orthometric height)
   (Approximately proportional to *difference* in ellipsoid altitudes)
   (geopotential model is used for the integration - if very pedantic)

 V2.2) - Alternatively - the rate at which (very precise) clocks run
   (function of ratio of clock speeds at a point vs on the Geoid)


==

Overall note that a point may be associated with *five* numbers, one is
time, three are spatial, one is energy/work - eg (t, x,y,z, w).

In most current geospatial applications, "t" is mostly discarded, and
only partial coordinate descriptions are provided as either location
(x,y,z) or hybrid pseudo-location (x,y,w). Here interpret "x,y" as
either lon/lat or map East/North.

### - dk


Lesparre, Jochem via PROJ wrote on 4/18/21 8:37 AM:
> Duncan wrote:
> 
>> As an onlooker, I have a question: what is UTM/WGS84 intended to mean? Is it (A) the UTM projection using the WGS84 ellipsoid
> 
> as a parameter, or (B)? is it meant to imply also that the coordinates
> are in a datum that is one of the several labelled WGS84? A is clear and
> completely unambiguous; B isn't, partly because it is subject to change
> as data are collected (not to mention plate motions). Data-dependence is
> also a problem with geoid models: it is why there are so many, after all.
> 
> ?
> 
> Duncan, I think WGS84-UTM is normally intended to mean both A and B so
> it is using a datum of WGS84 realisation and the WGS84 ellipsoid.
> According to ISO and EPSG de ellipsoid is part of the datum, so in that
> case the answer A and B is the same as just B.
> 
> ?
> 
> Jochem
> 
> 
> 
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming
> van het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan
> verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
> 
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee
> without the consent
> of the Kadaster is unlawful. If you have received this message, but are
> not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message.
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> 

From njacadieux.gitlab at gmail.com  Sun Apr 18 13:41:14 2021
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Sun, 18 Apr 2021 16:41:14 -0400
Subject: [PROJ] Assistance with GDALWarp - ESPG:27700 to ESPG:4326 -
 Elipsod level not sea level
In-Reply-To: <LO0P265MB30836AE093365C7D92294935C34B9@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>
References: <LO0P265MB30836AE093365C7D92294935C34B9@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <0C34A251-090A-48F7-8A16-08CB9F0FAF41@gmail.com>

Hi,
You may be able to remove the geiod height with Gdal but I would use vdatum https://vdatum.noaa.gov/

Nicolas Cadieux
https://gitlab.com/njacadieux

> Le 18 avr. 2021 ? 11:17, Raife Crookes <raife at tp-regen.co.uk> a ?crit :
> 
> ?
> Good evening,
>  
> I am hoping that someone could assist me with the completion of a reprojection of a geotiff lidar data set to WGS84.
>  
> The transformation should me making an elevation change of roughly 50m for known points however after running GDAL warp the elevations are staying the same when viewed through QGIS.
>  
> For some reason it seems to be defaulting to the WGS84 geoid height not the ellipsoid height I require for import onto our drone. (My knowledge is that EPSG:4326 should equate to the wgs lat/long and ellipsoid height.)
>  
> GDALWARP instructions:
> gdalwarp  -s_srs EPSG:27700 -t_srs EPSG:4326
> gdalwarp  -s_srs -t_srs EPSG:4326
>  
>  
>  
> Proj info return:
> C:\>projinfo -s EPSG:27700 -t EPSG:4326 -o PROJ
> Candidate operations found: 1
> Note: using '--spatial-test intersects' would bring more results (7)
> -------------------------------------
> Operation No. 1:
>  
> unknown id, Inverse of British National Grid + OSGB 1936 to WGS 84 (9), 1 m, UK - Britain and UKCS 49??46'N to 61??01'N, 7??33'W to 3??33'E
>  
> PROJ string:
> +proj=pipeline +step +inv +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +step +proj=hgridshift +grids=OSTN15_NTv2_OSGBtoETRS.gsb +step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1
>  
>  
>  
> I can send copies of the original file if requested.
>  
> Hoping that its something stupid like im using the wrong EPSG code but have a terrible feeling that a catch all to prevent users accidentally using the ellipsoid height is catching me out.
>  
> (Ground height OSGB ? 30m  in WGS84 = 82m)
>  
> Really look forward to your help/
>  
> Kind regards
>  
> Raife
>  
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/4b0fd74d/attachment.html>

From j1 at jimenezshaw.com  Sun Apr 18 13:54:28 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sun, 18 Apr 2021 22:54:28 +0200
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <AM0P192MB0482D663CA25EB9EFD5850AFEF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <2bb3f7d9-4204-8aa4-e194-ff43e3040979@spatialys.com>
 <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>
 <AM0P192MB0482D663CA25EB9EFD5850AFEF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <CADRrdKvwYLN8_1t8+QnkCAzA5s7RSHZR3Lcn0a02pKuwy=s4rQ@mail.gmail.com>

Reading some answers, I realized that the term "WGS84" is very polysemic.
To see the different meanings (are there more?), let's use this WKT:

projinfo EPSG:32632 -o WKT1:GDAL -q

PROJCS["WGS 84 / UTM zone 32N",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.0174532925199433,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4326"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",9],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AXIS["Easting",EAST],
    AXIS["Northing",NORTH],
    AUTHORITY["EPSG","32632"]]

We see that WGS84 can be:
 - Spheroid/Ellipsoid (EPSG:7030)
 - Datum (EPSG:6320). A datum ensemble in this case (more about that later)
 - The prefix of all the 6 datums members of that datum ensemble EPSG:6320,
like WGS84(transit) or WGS84(G1762)
 - Geographic CRS (EPSG:4326)
 - The prefix of many projected CRS. All those that have EPSG:4326 as the
base geographic crs, like "WGS 84 / UTM zone 32N"

In addition to that, I met some people using it wrongly
 - Some people use it to refer to any UTM projection over WGS84 (the one
that affects them). They say "WGS84" instead of "WGS84 / UTM zone 30N"
 - As the "one and only" lat-long system

The accuracy problem I mentioned in previous emails is due to the fact that
the datum "WGS_1984" is a datum ensemble, that produces that you are not
sure about which one are you talking about:
https://epsg.org/datum_6326/World-Geodetic-System-1984-ensemble.html
(actually EPSG marks it with an accuracy of 2 m)
The same happens to the associated geographic crs, WGS84 EPSG:4326. And
that "pollutes" all the projected crs that use EPSG:4326 as the geographic
crs.

The last member of that ensemble, WGS84(G1762), has a geographic crs,
EPSG:9057. However, there are no projected crs on it in EPSG.

Cheers,
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Sun, 18 Apr 2021 at 16:37, Lesparre, Jochem <Jochem.Lesparre at kadaster.nl>
wrote:

> Duncan wrote:
>
> > As an onlooker, I have a question: what is UTM/WGS84 intended to mean? Is
> it (A) the UTM projection using the WGS84 ellipsoid
>
> as a parameter, or (B)  is it meant to imply also that the coordinates are
> in a datum that is one of the several labelled WGS84? A is clear and
> completely unambiguous; B isn't, partly because it is subject to change as
> data are collected (not to mention plate motions). Data-dependence is also
> a problem with geoid models: it is why there are so many, after all.
>
>
>
> Duncan, I think WGS84-UTM is normally intended to mean both A and B so it
> is using a datum of WGS84 realisation and the WGS84 ellipsoid. According to
> ISO and EPSG de ellipsoid is part of the datum, so in that case the answer
> A and B is the same as just B.
>
>
>
> Jochem
>
>
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming van
> het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan
> verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee
> without the consent
> of the Kadaster is unlawful. If you have received this message, but are
> not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/8ce42c39/attachment.html>

From njacadieux.gitlab at gmail.com  Sun Apr 18 14:09:26 2021
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Sun, 18 Apr 2021 17:09:26 -0400
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>
References: <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>
Message-ID: <14DD068D-C756-443E-A91E-1EAC2E14F6B7@gmail.com>

Hi Duncan,

WGS84 or EPSG 4326 is a global CRS that uses longitudes and latitudes. It uses the WGS ellipsoid. Distances are measured in degrees. UTM zones for WGS84 (or universal Transverse Mercator) is based on EPSG 4326 and uses meters instead.  Meters North- South are calculated in meters from the equator, as determined by EPSG 4326 and meter EAST - Ouest and determine east and ouest from a specific latitudes as determined by ESPG 4326.  The zones spans 6 degrees. 

Geiod on the other hand give you a model of gravity.  Is basically tells you where the average sea level should be anywhere on earth.  There are many models because a)you need to agree on the centre or the earth, you need to agree on the best ellipsoid to use, you need to agree on the average sea level, you need to measure the gravity on earth.  The centre of the earth and the level of gravity change as models get better with newer data (ei satellites data vs ground level data)... Therefore, models change as the knowledge improves.

Nicolas Cadieux
https://gitlab.com/njacadieux

> Le 18 avr. 2021 ? 11:25, Duncan Agnew via PROJ <proj at lists.osgeo.org> a ?crit :
> 
> ?
> As an onlooker, I have a question: what is UTM/WGS84 intended to mean? Is it (A) the UTM projection using the WGS84 ellipsoid
> as a parameter, or (B)  is it meant to imply also that the coordinates are in a datum that is one of the several labelled WGS84? A is clear and completely unambiguous; B isn't, partly because it is subject to change as data are collected (not to mention plate motions). Data-dependence is also a problem with geoid models: it is why there are so many, after all.
> 
>> On Sun, Apr 18, 2021 at 2:51 AM Even Rouault <even.rouault at spatialys.com> wrote:
>> Yes, I assume that the large number of codes that should be created, and still for relatively marginal use cases, is what makes IOGP refrain from doing that.
>> 
>> What you describe is exactly the not so known OGC URN syntax for combined objects (see OGC 07-092r2, para 7.5.4 : https://portal.ogc.org/files/?artifact_id=29533 )
>> 
>> For example for UTM 31N / WGS 84 (G1762), that is
>> 
>> urn:ogc:def:crs,crs:EPSG::9057,cs:EPSG::4400,coordinateOperation:EPSG::16031
>> 
>> and you can use that with projinfo / proj_create()
>> 
>> If you use that in GeoTIFF, what would be missing though is the coordinate epoch. You'll have to store it in a TIFF tag. There's no way in the GeoTIFF encoding itself to store it.
>> 
>> Even
>> 
>> Le 18/04/2021 ? 09:20, Lesparre, Jochem via PROJ a ?crit :
>>> This is indeed a major problem with (the way most software and people are using) EPSG. By just using EPSG CRS codes, one needs a unique EPSG CRS code for every possible combination of datum and projection. However, the number of possible combinations is way too large. I think, the solution is to split the datum definition (WGS84, WGS84G1762, ITRF2014, ETRF2000, etc.) and the projection definition (UTM, pseudomercator, LAEA, LCC, etc.). For the datum definition one can use the normal EPSG CRS codes. For the projection definition one could use the lesser known EPSG conversion codes, e.g. EPSG conversion code 16031 (https://epsg.org/conversion_16031/UTM-zone-31N.html) for UTM zoned 31N. Isn?t this the approach used in WKT strings?
>>> 
>>>  
>>> 
>>> Jochem
>>> 
>>>  
>>> 
>>> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Noel Zinn (cc)
>>> Sent: zaterdag 17 april 2021 23:59
>>> To: Javier Jimenez Shaw <j1 at jimenezshaw.com>
>>> Cc: proj <PROJ at lists.osgeo.org>
>>> Subject: Re: [PROJ] World UTM in a proper datum
>>> 
>>>  
>>> 
>>> We really need two codes, don?t we?  One for the geographical datum (ITRF2014 in GRS80, which is EPSG:7789 in your case) and one for the projection UTM in GRS80 (which, I guess, doesn?t exist), perhaps an EPSG architecture problem.  To be frank, your expectation that the EPSG do for ITRF2014 what it?s done for WGS84/UTM is unrealistic.  Add ITRF2008 and so on, how many combinations would that be?
>>> 
>>>  
>>> 
>>>  
>>> 
>>> From: Javier Jimenez Shaw
>>> 
>>> Sent: Saturday, April 17, 2021 3:56 PM
>>> 
>>> To: Noel Zinn (cc)
>>> 
>>> Cc: proj
>>> 
>>> Subject: Re: [PROJ] World UTM in a proper datum
>>> 
>>>  
>>> 
>>> Hi Noel,
>>> 
>>> If I am the only user of the data, I can do that (and whatever I want). But if I have to produce accurate data processed by somebody else, I fall into the hole of vagueness of WGS84. For instance, if I create a precise GeoTIFF and I want to tag it with an EPSG, using EPSG:326XX is... vague. Or a GCP, or anything else. There are several alternatives for the geographic crs.
>>> 
>>> I know I can apply UTM over ITRF2014 (GDAL does it easily). But there is no EPSG code for that.
>>> 
>>>  
>>> 
>>> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>>> Entre dos pensamientos racionales 
>>> hay infinitos pensamientos irracionales.
>>> 
>>>  
>>> 
>>>  
>>> 
>>> On Sat, 17 Apr 2021 at 22:24, Noel Zinn (cc) <ndzinn at comcast.net> wrote:
>>> 
>>> Unlike an empirically-derived datum transformation (e.g. WGS <> ITRF), which can have different levels of "accuracy" depending how it was derived, a map projection (lat/lon <> N/E) is defined mathematically and is precise, i.e. without error.  Having said that, there are better and worse algorithms for UTM, but that's not the question you're asking.  In a datum transformation sense UTM will always be as (and only as) "accurate" as the geographicals you convert to N/E.  So, use EPSG:326XX and EPSG327XX, but plug in your precise geographicals.  
>>> 
>>>  
>>> 
>>> From: Javier Jimenez Shaw
>>> 
>>> Sent: Saturday, April 17, 2021 2:44 PM
>>> 
>>> To: proj
>>> 
>>> Subject: [PROJ] World UTM in a proper datum
>>> 
>>>  
>>> 
>>> Hi
>>> 
>>>  
>>> 
>>> Maybe there is a better place to talk about this, but I do not know which one. I hope somebody from EPSG is reading this, and may give me a clue.
>>> 
>>>  
>>> 
>>> We have talked many times about the lack of accuracy of WGS84 (EPSG:4326), the datum ensemble, etc.
>>> 
>>> The problem is that I miss an accurate equivalent of the projected family "WGS84 / UTM zone XXY"(EPSG:326XX and EPSG327XX) for XX between 1 and 60 and Y is N or S. It would be nice something similar (a worldwide projected CRSs on UTM), but over a proper accurate and well defined geographic CRS (ITRF2014, WGS84(G1762), etc).
>>> 
>>>  
>>> 
>>> Do you know if there is any plan? Or do they exist and I was not able to find them?
>>> 
>>>  
>>> 
>>> Thanks.
>>> 
>>> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>>> Entre dos pensamientos racionales 
>>> hay infinitos pensamientos irracionales.
>>> 
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
>>> 
>>> 
>>> 
>>> Disclaimer:
>>> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
>>> Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
>>> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
>>> dit direct te melden aan de verzender en het bericht te vernietigen.
>>> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>>> 
>>> Disclaimer:
>>> The content of this message is meant to be received by the addressee only.
>>> Use of the content of this message by anyone other than the addressee without the consent
>>> of the Kadaster is unlawful. If you have received this message, but are not the addressee,
>>> please contact the sender immediately and destroy the message.
>>> No rights can be derived from the content of this message.
>>> 
>>> 
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
>> -- 
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!W6E8KjQeH8H-OnMjrZ9cWSBnPkQEeS2Ow1ldMT0tZvbKVM5fTlD9r718Osx8jCY$ 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/97936818/attachment-0001.html>

From patrick.mckendree.young at gmail.com  Sun Apr 18 19:30:37 2021
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Sun, 18 Apr 2021 20:30:37 -0600
Subject: [PROJ] Assistance with GDALWarp - ESPG:27700 to ESPG:4326 -
 Elipsod level not sea level
In-Reply-To: <LO0P265MB30836AE093365C7D92294935C34B9@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>
References: <LO0P265MB30836AE093365C7D92294935C34B9@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <CADXYQQ6Y4xJOEKTH4=CX0_izNWZbNqed-v1KFbwGUedK0LZgLg@mail.gmail.com>

Hi Raife,

I think what is missing is the explicit vertical datum associated with that
code.  I've come across this myself when converting a DTM to ellipsoidal
heights.  Here's an example from my bash history that converts the heights
with gdalwarp:

gdalwarp -s_srs "+proj=longlat +datum=WGS84 +no_defs
+geoidgrids=egm96_15.gtx" -t_srs "EPSG:4326" dem-geoid.tif dem-hae.tif

I think the trick is just figuring out the right proj strings/finding the
right EPSG compound code (there's an example at the bottom of this page
https://gdal.org/programs/gdalwarp.html#gdalwarp).  I think under the hood
it's using this fellow, so at the end of the day you just have to find the
right grid:

https://gdal.org/api/gdal_alg.html?highlight=applyvert#_CPPv426GDALApplyVerticalShiftGrid12GDALDatasetH12GDALDatasetHiddPPCKc

P


On Sun, Apr 18, 2021 at 9:17 AM Raife Crookes <raife at tp-regen.co.uk> wrote:

> Good evening,
>
>
>
> I am hoping that someone could assist me with the completion of a
> reprojection of a geotiff lidar data set to WGS84.
>
>
>
> The transformation should me making an elevation change of roughly 50m for
> known points however after running GDAL warp the elevations are staying the
> same when viewed through QGIS.
>
>
>
> For some reason it seems to be defaulting to the WGS84 geoid height not
> the ellipsoid height I require for import onto our drone. (My knowledge is
> that EPSG:4326 should equate to the wgs lat/long and ellipsoid height.)
>
>
>
> GDALWARP instructions:
>
> gdalwarp  -s_srs EPSG:27700 -t_srs EPSG:4326
>
> gdalwarp  -s_srs -t_srs EPSG:4326
>
>
>
>
>
>
>
> Proj info return:
>
> C:\>projinfo -s EPSG:27700 -t EPSG:4326 -o PROJ
>
> Candidate operations found: 1
>
> Note: using '--spatial-test intersects' would bring more results (7)
>
> -------------------------------------
>
> Operation No. 1:
>
>
>
> unknown id, Inverse of British National Grid + OSGB 1936 to WGS 84 (9), 1
> m, UK - Britain and UKCS 49??46'N to 61??01'N, 7??33'W to 3??33'E
>
>
>
> PROJ string:
>
> +proj=pipeline +step +inv +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717
> +x_0=400000 +y_0=-100000 +ellps=airy +step +proj=hgridshift
> +grids=OSTN15_NTv2_OSGBtoETRS.gsb +step +proj=unitconvert +xy_in=rad
> +xy_out=deg +step +proj=axisswap +order=2,1
>
>
>
>
>
>
>
> I can send copies of the original file if requested.
>
>
>
> Hoping that its something stupid like im using the wrong EPSG code but
> have a terrible feeling that a catch all to prevent users accidentally
> using the ellipsoid height is catching me out.
>
>
>
> (Ground height OSGB ? 30m  in WGS84 = 82m)
>
>
>
> Really look forward to your help/
>
>
>
> Kind regards
>
>
>
> Raife
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210418/32584ee3/attachment.html>

From Jochem.Lesparre at kadaster.nl  Mon Apr 19 01:09:04 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 19 Apr 2021 08:09:04 +0000
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <CADRrdKvwYLN8_1t8+QnkCAzA5s7RSHZR3Lcn0a02pKuwy=s4rQ@mail.gmail.com>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <AM0P192MB0482863CDE6C8399ED53F691EF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <2bb3f7d9-4204-8aa4-e194-ff43e3040979@spatialys.com>
 <CAG6Em0CqLo2qhsmBmCVsRM+HH=Dtza24g+rO-DrdjrQ=qhPhiw@mail.gmail.com>
 <AM0P192MB0482D663CA25EB9EFD5850AFEF4A9@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <CADRrdKvwYLN8_1t8+QnkCAzA5s7RSHZR3Lcn0a02pKuwy=s4rQ@mail.gmail.com>
Message-ID: <AM0P192MB0482FACBB0AB9BF9EB94C87AEF499@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

Thanks Javier, for the effort of explaining it so clearly to all readers. Two things are missing in your overview, though.

(1) Each lat-lon CRS has 3 different EPSG codes:

  *   2D lat, lon (e.g. WGS84: EPSG:4326)
  *   3D lat, lon, ellipsoidal height (e.g. WGS84: EPSG:4979)
  *   XYZ in metres (e.g. WGS84: EPSG:4978)

NB: XYZ is not a projected CRS and the axis are generally not aligned with the earth surface.


(2) There are four Global Navigation Satellite Systems (official abbreviation: GNSS, but commonly all referred to as GPS):

  *   GPS Navstar by US military with CRS: WGS84
  *   Glonass by Russian military with CRS: PZ-90
  *   Galileo by EU (civilian) with CRS: GTRS
  *   BeiDou by Chinese military with CRS: BDC

The 4 GNSS are managed by organisations of different countries. Using WGS84 as the standard CRS is a political choice. But the choice for WGS84 mostly originates from ignorance about the different world-wide datums. Therefore, the term WGS84 often means: ?lat-lon coordinates in any datum, I don?t know which?.

There is a more precise and politically neutral scientific alternative CRS available: ITRS, with most recent realisation ITRF2014 (2D EPSG:9000, 3D EPSG:7912, XYZ EPSG7789). There is no EPSG code for the datum ensemble ITRS, nor projected CRS for ITRF2014 in EPSG.

Jochem


From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Javier Jimenez Shaw
Sent: zondag 18 april 2021 22:54
To: proj <PROJ at lists.osgeo.org>
Subject: Re: [PROJ] World UTM in a proper datum

Reading some answers, I realized that the term "WGS84" is very polysemic. To see the different meanings (are there more?), let's use this WKT:

projinfo EPSG:32632 -o WKT1:GDAL -q

PROJCS["WGS 84 / UTM zone 32N",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.0174532925199433,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4326"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",9],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AXIS["Easting",EAST],
    AXIS["Northing",NORTH],
    AUTHORITY["EPSG","32632"]]

We see that WGS84 can be:
 - Spheroid/Ellipsoid (EPSG:7030)
 - Datum (EPSG:6320). A datum ensemble in this case (more about that later)
 - The prefix of all the 6 datums members of that datum ensemble EPSG:6320, like WGS84(transit) or WGS84(G1762)
 - Geographic CRS (EPSG:4326)
 - The prefix of many projected CRS. All those that have EPSG:4326 as the base geographic crs, like "WGS 84 / UTM zone 32N"

In addition to that, I met some people using it wrongly
 - Some people use it to refer to any UTM projection over WGS84 (the one that affects them). They say "WGS84" instead of "WGS84 / UTM zone 30N"
 - As the "one and only" lat-long system

The accuracy problem I mentioned in previous emails is due to the fact that the datum "WGS_1984" is a datum ensemble, that produces that you are not sure about which one are you talking about:
https://epsg.org/datum_6326/World-Geodetic-System-1984-ensemble.html
(actually EPSG marks it with an accuracy of 2 m)
The same happens to the associated geographic crs, WGS84 EPSG:4326. And that "pollutes" all the projected crs that use EPSG:4326 as the geographic crs.

The last member of that ensemble, WGS84(G1762), has a geographic crs, EPSG:9057. However, there are no projected crs on it in EPSG.

Cheers,
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.


On Sun, 18 Apr 2021 at 16:37, Lesparre, Jochem <Jochem.Lesparre at kadaster.nl<mailto:Jochem.Lesparre at kadaster.nl>> wrote:
Duncan wrote:
> As an onlooker, I have a question: what is UTM/WGS84 intended to mean? Is it (A) the UTM projection using the WGS84 ellipsoid
as a parameter, or (B)  is it meant to imply also that the coordinates are in a datum that is one of the several labelled WGS84? A is clear and completely unambiguous; B isn't, partly because it is subject to change as data are collected (not to mention plate motions). Data-dependence is also a problem with geoid models: it is why there are so many, after all.

Duncan, I think WGS84-UTM is normally intended to mean both A and B so it is using a datum of WGS84 realisation and the WGS84 ellipsoid. According to ISO and EPSG de ellipsoid is part of the datum, so in that case the answer A and B is the same as just B.

Jochem


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210419/933b9895/attachment-0001.html>

From gdt at lexort.com  Mon Apr 19 06:05:33 2021
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 19 Apr 2021 09:05:33 -0400
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC> (Noel Zinn's
 message of "Sat, 17 Apr 2021 16:59:16 -0500")
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
Message-ID: <rmi35vma0gy.fsf@s1.lexort.com>


I think it's important to separate the multiple problems:

  1) People label data as "WGS84" when with omly a little care it could be
  labeled with a particular realization.

  2) People think their data is in WGS84 because it came out of a GNSS
  receiver, but they don't know if they were using SBAS, and even
  clueful people have a really hard time figuring out what datums the
  various SBAS are in.  And I have seen nothing that describes how any
  particular receiver deals with multiconstellation solutions and
  transforms (or not) among the frames, or e.g. what the output frame is
  when one configures for GLONASS only.

  3) Standards for data representation specify WGS84.  The two that come
  to mind are GPX and TMS, and I hope that's it.  In my view the bigger
  problem is TMS, because it is relatively easy to avoid GPX and use
  geojson instead in most cases, or it's simply "transform to GPX and
  load into device".

  4) People transform data to WGS84.  It doesn't really make sense to
  transform to an ensemble.  I suppose one could do a survey about
  prevalance and flip coins and pick a realization from the ensemble and
  transform to that, and then label it as the ensemble.  (Yes, I know
  that's ridiculous, but it points out how nonsensical transforming to
  an ensemble is.)

  5) People want to transform to WGS84, contrary to (4), because of (3).

  6) proj's behavior when transforming to an ensemble is sometimes to
  skip the transform because more or less the logical distance from
  source CRS to the ensemble is small compared to the ensemble intrinsic
  error.

  7) The fact that WGS84 was defined by one country is not a problem;
  many other datums were defined by one country.  If that were the only
  issue, people would only be talking about point 3 above, and arguing
  about the political point of saying WGS84(G1762) instead of ITRF2008,
  and not having data accuracy issues from incorrect null transforms.
  It would therefore not be a proj-land issue.

We in proj-land can't fix 1 and 2.  We certainly cannot fix 7.

We can rail against 3, but probably with little success.

Given 3, we can't do much about 5 and 4, other than to tell people to
transform to the most recent realization instead and then use the data
in situations calling for WGS84, but there's little hope of any
significant number of them listening.  (I personally transform from
NAD83(2011) to ITRF2014 for use in web mapping, so that the transform
actually happens.)

We can fix 6, where

  Ensembles have a notion of "most recent/best member".  (For WGS84 it
  is uncontroversial that today this is WGS84(G7162).)

  Transforms to an ensemble are interpreted as a transform to the best
  member of the ensemble.  The error budget does not include the
  ensemble fuzz, but the output is labeled as the ensemble as
  requested.  (Therefore if there is another transform in a pipeline the
  ensemble error will be attributed.)

  Transforms from an ensemble are treated as a concatenation of a
  transform from the ensemble to the best member, followed by the
  appopriate transform from the best member.  The first of those is a
  null transform carrying the ensemble intrinsic error, and the second
  is how it is

  (This requires adjusting the EPSG database to remove/avoid using
  transforms that are from or to the ensemble if there are reasonable
  paths from/to the best member)

  (Probably this should lead to examining all transforms to/from
  ensembles i the database and seeing if they are really to/from a
  specific member.)

Another approach (could be done in parallel) is:

  Take a poll and ask if anyone has any data in WGS84(TRANSIT).  Ask
  what the sigma is.  Ask them to explain how they obtained it.  Decline
  to accept "I had NAD83 and I just relabeled it" as valid.

  Failing to find any, decide that the term WGS84 as an ensemble will,
  in proj-land, not include WGS84(TRANSIT), and that anyone with data in
  that frame thus needs to label it precisely.  This removes most of the
  intrinsic error, creating a great benefit to many, while causing
  nearly zero harm to perhaps zero actual people.

  repeat for WGS84(G730), and possibly for the next, but by now the
  realizations have converged pretty well.

In other words, I assert that there is no data in either TRANSIT or G730
that has anywhere near 2m accuracy, and thus kicking them out of the
ensemble -- which is a device to accomodate people who are being fuzzy
-- does no harm.

Greg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210419/8c9e59ef/attachment.sig>

From Jochem.Lesparre at kadaster.nl  Mon Apr 19 06:47:00 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 19 Apr 2021 13:47:00 +0000
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <rmi35vma0gy.fsf@s1.lexort.com>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC> <rmi35vma0gy.fsf@s1.lexort.com>
Message-ID: <AM0P192MB0482595F69B739562E262815EF499@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

The use of WGS84(G1762) in international standards would make no sense, ITRF2014 should be used instead. So I strongly disagree with Greg on this (his point 7). But I admit this is a minor problem. However, I would prefer a different solution for the main problem too.

I think we should consider to NOT solve the inaccurate transformation of the ensemble (point 6), because keeping it like this forces people to stop using the ensemble label WGS84 for precise applications and make them use a precise realisation (e.g. ITRF2014) instead, thus solving the main problem completely (point 2, 3, 4, 5). For inaccurate applications the label WGS84 for the ensemble is fine, so we do not need to make people to change that (point 1).

If we partly solve the inaccuracy of the transformation of the ensemble (point 6) in one of the two ways Greg suggests, it will be much harder to make people aware of the remaining accuracy problem of the ensemble and it will therefore take much longer (if ever) too get that solved (point 1, 2, 3, 4, 5, 7).

Kind regards, Jochem


-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Greg Troxel
Sent: maandag 19 april 2021 15:06
To: proj at lists.osgeo.org
Subject: Re: [PROJ] World UTM in a proper datum


I think it's important to separate the multiple problems:

  1) People label data as "WGS84" when with omly a little care it could be
  labeled with a particular realization.

  2) People think their data is in WGS84 because it came out of a GNSS
  receiver, but they don't know if they were using SBAS, and even
  clueful people have a really hard time figuring out what datums the
  various SBAS are in.  And I have seen nothing that describes how any
  particular receiver deals with multiconstellation solutions and
  transforms (or not) among the frames, or e.g. what the output frame is
  when one configures for GLONASS only.

  3) Standards for data representation specify WGS84.  The two that come
  to mind are GPX and TMS, and I hope that's it.  In my view the bigger
  problem is TMS, because it is relatively easy to avoid GPX and use
  geojson instead in most cases, or it's simply "transform to GPX and
  load into device".

  4) People transform data to WGS84.  It doesn't really make sense to
  transform to an ensemble.  I suppose one could do a survey about
  prevalance and flip coins and pick a realization from the ensemble and
  transform to that, and then label it as the ensemble.  (Yes, I know
  that's ridiculous, but it points out how nonsensical transforming to
  an ensemble is.)

  5) People want to transform to WGS84, contrary to (4), because of (3).

  6) proj's behavior when transforming to an ensemble is sometimes to
  skip the transform because more or less the logical distance from
  source CRS to the ensemble is small compared to the ensemble intrinsic
  error.

  7) The fact that WGS84 was defined by one country is not a problem;
  many other datums were defined by one country.  If that were the only
  issue, people would only be talking about point 3 above, and arguing
  about the political point of saying WGS84(G1762) instead of ITRF2008,
  and not having data accuracy issues from incorrect null transforms.
  It would therefore not be a proj-land issue.

We in proj-land can't fix 1 and 2.  We certainly cannot fix 7.

We can rail against 3, but probably with little success.

Given 3, we can't do much about 5 and 4, other than to tell people to transform to the most recent realization instead and then use the data in situations calling for WGS84, but there's little hope of any significant number of them listening.  (I personally transform from
NAD83(2011) to ITRF2014 for use in web mapping, so that the transform actually happens.)

We can fix 6, where

  Ensembles have a notion of "most recent/best member".  (For WGS84 it
  is uncontroversial that today this is WGS84(G7162).)

  Transforms to an ensemble are interpreted as a transform to the best
  member of the ensemble.  The error budget does not include the
  ensemble fuzz, but the output is labeled as the ensemble as
  requested.  (Therefore if there is another transform in a pipeline the
  ensemble error will be attributed.)

  Transforms from an ensemble are treated as a concatenation of a
  transform from the ensemble to the best member, followed by the
  appopriate transform from the best member.  The first of those is a
  null transform carrying the ensemble intrinsic error, and the second
  is how it is

  (This requires adjusting the EPSG database to remove/avoid using
  transforms that are from or to the ensemble if there are reasonable
  paths from/to the best member)

  (Probably this should lead to examining all transforms to/from
  ensembles i the database and seeing if they are really to/from a
  specific member.)

Another approach (could be done in parallel) is:

  Take a poll and ask if anyone has any data in WGS84(TRANSIT).  Ask
  what the sigma is.  Ask them to explain how they obtained it.  Decline
  to accept "I had NAD83 and I just relabeled it" as valid.

  Failing to find any, decide that the term WGS84 as an ensemble will,
  in proj-land, not include WGS84(TRANSIT), and that anyone with data in
  that frame thus needs to label it precisely.  This removes most of the
  intrinsic error, creating a great benefit to many, while causing
  nearly zero harm to perhaps zero actual people.

  repeat for WGS84(G730), and possibly for the next, but by now the
  realizations have converged pretty well.

In other words, I assert that there is no data in either TRANSIT or G730 that has anywhere near 2m accuracy, and thus kicking them out of the ensemble -- which is a device to accomodate people who are being fuzzy
-- does no harm.

Greg


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.

From gdt at lexort.com  Mon Apr 19 07:00:47 2021
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 19 Apr 2021 10:00:47 -0400
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <AM0P192MB0482595F69B739562E262815EF499@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 (Jochem Lesparre's message of "Mon, 19 Apr 2021 13:47:00 +0000")
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>
 <rmi35vma0gy.fsf@s1.lexort.com>
 <AM0P192MB0482595F69B739562E262815EF499@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
Message-ID: <rmituo28jcg.fsf@s1.lexort.com>


"Lesparre, Jochem" <Jochem.Lesparre at kadaster.nl> writes:

> I think we should consider to NOT solve the inaccurate transformation
> of the ensemble (point 6), because keeping it like this forces people
> to stop using the ensemble label WGS84 for precise applications and
> make them use a precise realisation (e.g. ITRF2014) instead, thus
> solving the main problem completely (point 2, 3, 4, 5). For inaccurate
> applications the label WGS84 for the ensemble is fine, so we do not
> need to make people to change that (point 1).
>
> If we partly solve the inaccuracy of the transformation of the
> ensemble (point 6) in one of the two ways Greg suggests, it will be
> much harder to make people aware of the remaining accuracy problem of
> the ensemble and it will therefore take much longer (if ever) too get
> that solved (point 1, 2, 3, 4, 5, 7).

I think your view is extremely misguided, continuing to cause people to
get inaccurate results as a way to apply pressure to them.  This is
especially true as the people harmed have very little understanding and
even less leverage in fixing the problems.  I wonder if you would take
this approach if you weren't offended by the political point.

So, how about you:

  Raise the issue of WGS48 with the GPX specification, and make a
  concrete proposal to replace it.  Note that "ITRF2014" is not really a
  good answer as this sort of specification has a notion of tracking
  datum families, which for non-specialist use does not seem
  problematic.  (Using a family is problematic; tracking a family is
  different.)  So it's probably more "GPX data data is defined to be in
  the most recent realization of ITRF as [whatever now-its-official
  condition makes sense]", and when this changes, it should be treated
  as a minor error in older data.  Or maybe something else.

  Do the same with TMS.

And let us know how it goes.  I don't mean to be sarcastic; making these
fixes would be a good thing.  But I honestly do not expect that you will
have success.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210419/2db1e268/attachment.sig>

From Jochem.Lesparre at kadaster.nl  Mon Apr 19 09:17:33 2021
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 19 Apr 2021 16:17:33 +0000
Subject: [PROJ] World UTM in a proper datum
In-Reply-To: <rmituo28jcg.fsf@s1.lexort.com>
References: <CADRrdKt_3-SDz-zppJj3GMGtmW1RbrM7NPKuqEhOfCOn=y1Txg@mail.gmail.com>
 <37E4E3487C15435BAD9D4EB59815466A@NoelDellPC>
 <CADRrdKtLbFFP-3736Nw=fPFyjcGorxTfNNVGTvc1RRRyiCO96A@mail.gmail.com>
 <BAA611F25B094D90966F2156E6CA98DB@NoelDellPC>	<rmi35vma0gy.fsf@s1.lexort.com>
 <AM0P192MB0482595F69B739562E262815EF499@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>
 <rmituo28jcg.fsf@s1.lexort.com>
Message-ID: <AM0P192MB04821A35FBA03C876E52B9C1EF499@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

> I think your view is extremely misguided, continuing to cause people to get inaccurate results as a way to apply pressure to them.  This is especially true as the people harmed have very little understanding and even less leverage in fixing the problems.

Sometimes it is better to accept that it takes a bit more time to solve a problem completely, than to implement a partial solution that makes it even harder to get the problem completely solved. Yes, it will cause everyone to get 2 metre errors for a longer time, but people who need high precision will notice this and they can use a custom transformation to solve it. However, with the solutions you suggest, people will keep getting errors at centimetre level forever without noticing it. This is more harmful and will last longer.

Indeed, the solutions you suggest are an great improvement, but please consider that unnoticed small errors are often worse than a large error that is easily detectable.


> I wonder if you would take this approach if you weren't offended by the political point.

Yes, I would. My plea for a political neutral CRS in international standards is in completely unrelated to my opinion on how to solve the transformation inaccuracies caused by the use of a datum ensemble. But how about you, did you open-mindedly consider the advantages of my suggestion or were you a bit annoyed by my minor political point?


> So, how about you Raise the issue of WGS48 with the GPX specification [...] Do the same with TMS. And let us know how it goes.  I don't mean to be sarcastic; making these fixes would be a good thing.  But I honestly do not expect that you will have success.

I do not have time for that at the moment myself (but if someone knows a contact address, I will give it a try). I am too busy fixing the National CRS problems in the Netherlands (that is my official job) to have much time left to solve the world's CRS problems too. I do enjoy this discussion. Consider it as my contribution to find the best solution for the ensemble problem. Because that is my only incentive: to discuss all possibilities to find the best (long term) solution. If you would have some good ideas on how to solve the remaining centimetre errors in the long term, I might support your suggestions to partly solve the 2 metre errors in the short term.

Kind regards, Jochem




Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.

From njacadieux.gitlab at gmail.com  Mon Apr 19 15:55:13 2021
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Mon, 19 Apr 2021 18:55:13 -0400
Subject: [PROJ] Assistance with GDALWarp - ESPG:27700 to ESPG:4326 -
 Elipsod level not sea level
In-Reply-To: <LO0P265MB3083F6433D3B9AD138792805C3499@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>
References: <LO0P265MB30836AE093365C7D92294935C34B9@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>
 <CADXYQQ6Y4xJOEKTH4=CX0_izNWZbNqed-v1KFbwGUedK0LZgLg@mail.gmail.com>
 <LO0P265MB3083F6433D3B9AD138792805C3499@LO0P265MB3083.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <3e00cbd3-5683-7d4a-72e0-fd54a2dc2ad3@gmail.com>

Hi,

VDATUM will change the GEIOD anywhere on earth so you start with a 
vertical transformation in gdal and then with the horizontal 
transformation in VDATUM.

Nicolas

On 2021-04-19 11:04 a.m., Raife Crookes wrote:
>
> Good afternoon Patrick and Nicolas,
>
> Many thanks for your input,
>
> Nicolas unfortunately the VDatum doesn?t yet have transformation for 
> UK co-ordinate systems.
>
> Patrick, your code below
>
> ?gdalwarp -s_srs "+proj=longlat +datum=WGS84 +no_defs 
> +geoidgrids=egm96_15.gtx" -t_srs "EPSG:4326" dem-geoid.tif dem-hae.tif?
>
> Has done the job if I do it in two steps:
>
> 1^st import the EPSG:27700 data set and translate this to EPSG:4326.
>
> 2^nd Run the code you suggested to correct for elevation.
>
> It would be ace to have found a way to do this in one step but frankly 
> the two step seems workable.
>
> Kind regards,
>
> Raife
>
> *From:*Patrick Young <patrick.mckendree.young at gmail.com>
> *Sent:* 19 April 2021 03:31
> *To:* Raife Crookes <raife at tp-regen.co.uk>
> *Cc:* proj at lists.osgeo.org
> *Subject:* Re: [PROJ] Assistance with GDALWarp - ESPG:27700 to 
> ESPG:4326 - Elipsod level not sea level
>
> Hi Raife,
>
> I think what is missing is the explicit vertical datum associated with 
> that code.? I've come across this myself when converting a DTM to 
> ellipsoidal heights.? Here's an example from my bash history that 
> converts the heights with gdalwarp:
>
> gdalwarp -s_srs "+proj=longlat +datum=WGS84 +no_defs 
> +geoidgrids=egm96_15.gtx" -t_srs "EPSG:4326" dem-geoid.tif dem-hae.tif
>
> I think the trick is just figuring out the right proj strings/finding 
> the right EPSG compound code (there's an example at the bottom of this 
> page https://gdal.org/programs/gdalwarp.html#gdalwarp 
> <https://gdal.org/programs/gdalwarp.html#gdalwarp>). I think under the 
> hood it's using this fellow, so at the end of the day you just have to 
> find the right grid:
>
> https://gdal.org/api/gdal_alg.html?highlight=applyvert#_CPPv426GDALApplyVerticalShiftGrid12GDALDatasetH12GDALDatasetHiddPPCKc 
> <https://gdal.org/api/gdal_alg.html?highlight=applyvert#_CPPv426GDALApplyVerticalShiftGrid12GDALDatasetH12GDALDatasetHiddPPCKc>
>
> P
>
> On Sun, Apr 18, 2021 at 9:17 AM Raife Crookes <raife at tp-regen.co.uk 
> <mailto:raife at tp-regen.co.uk>> wrote:
>
>     Good evening,
>
>     I am hoping that someone could assist me with the completion of a
>     reprojection of a geotiff lidar data set to WGS84.
>
>     The transformation should me making an elevation change of roughly
>     50m for known points however after running GDAL warp the
>     elevations are staying the same when viewed through QGIS.
>
>     For some reason it seems to be defaulting to the WGS84 geoid
>     height not the ellipsoid height I require for import onto our
>     drone. (My knowledge is that EPSG:4326 should equate to the wgs
>     lat/long and ellipsoid height.)
>
>     GDALWARP instructions:
>
>     gdalwarp -s_srs EPSG:27700 -t_srs EPSG:4326
>
>     gdalwarp -s_srs -t_srs EPSG:4326
>
>     Proj info return:
>
>     C:\>projinfo -s EPSG:27700 -t EPSG:4326 -o PROJ
>
>     Candidate operations found: 1
>
>     Note: using '--spatial-test intersects' would bring more results (7)
>
>     -------------------------------------
>
>     Operation No. 1:
>
>     unknown id, Inverse of British National Grid + OSGB 1936 to WGS 84
>     (9), 1 m, UK - Britain and UKCS 49??46'N to 61??01'N, 7??33'W to
>     3??33'E
>
>     PROJ string:
>
>     +proj=pipeline +step +inv +proj=tmerc +lat_0=49 +lon_0=-2
>     +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +step
>     +proj=hgridshift +grids=OSTN15_NTv2_OSGBtoETRS.gsb +step
>     +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap
>     +order=2,1
>
>     I can send copies of the original file if requested.
>
>     Hoping that its something stupid like im using the wrong EPSG code
>     but have a terrible feeling that a catch all to prevent users
>     accidentally using the ellipsoid height is catching me out.
>
>     (Ground height OSGB ? 30m ?in WGS84 = 82m)
>
>     Really look forward to your help/
>
>     Kind regards
>
>     Raife
>
>     _______________________________________________
>     PROJ mailing list
>     PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/proj
>     <https://lists.osgeo.org/mailman/listinfo/proj>
>
-- 
Nicolas Cadieux
https://gitlab.com/njacadieux

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210419/383f89af/attachment.html>

From j1 at jimenezshaw.com  Tue Apr 20 09:47:05 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 20 Apr 2021 18:47:05 +0200
Subject: [PROJ] Get possible geoidmodels
Message-ID: <CADRrdKvsuMonHgDS970X6zZT2Bpx+WvAZj3Wm60EkhccHKGt=w@mail.gmail.com>

Hi

Given a vertical CRS, I would like to get the list of possible geoid models
that apply to it.
Is there any way in the C++ API to get that information?
(use case: give the user a list of available geoid models, to select the
desired one).

If not, I am happy to make a PR using an SQL query (that is the only way I
found). The input would be the CRS auth-code, the output a list of strings.

Cheers,
Javier.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210420/82012b24/attachment.html>

From alansnow21 at gmail.com  Tue Apr 20 09:51:14 2021
From: alansnow21 at gmail.com (Alan Snow)
Date: Tue, 20 Apr 2021 11:51:14 -0500
Subject: [PROJ] Get possible geoidmodels
In-Reply-To: <CADRrdKvsuMonHgDS970X6zZT2Bpx+WvAZj3Wm60EkhccHKGt=w@mail.gmail.com>
References: <CADRrdKvsuMonHgDS970X6zZT2Bpx+WvAZj3Wm60EkhccHKGt=w@mail.gmail.com>
Message-ID: <CAGybdFT2of2TVYRzNv59-fJ=iXtVuwv6QOJfU-+sgsQ-BGnRkA@mail.gmail.com>

Personally, I would like to see the PR added. Past issue on the topic:
https://github.com/OSGeo/PROJ/issues/1841

On Tue, Apr 20, 2021 at 11:47 AM Javier Jimenez Shaw <j1 at jimenezshaw.com>
wrote:

> Hi
>
> Given a vertical CRS, I would like to get the list of possible geoid
> models that apply to it.
> Is there any way in the C++ API to get that information?
> (use case: give the user a list of available geoid models, to select the
> desired one).
>
> If not, I am happy to make a PR using an SQL query (that is the only way I
> found). The input would be the CRS auth-code, the output a list of strings.
>
> Cheers,
> Javier.
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Alan Snow
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210420/dbbd497a/attachment-0001.html>

From even.rouault at spatialys.com  Tue Apr 20 09:56:57 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Apr 2021 18:56:57 +0200
Subject: [PROJ] Get possible geoidmodels
In-Reply-To: <CADRrdKvsuMonHgDS970X6zZT2Bpx+WvAZj3Wm60EkhccHKGt=w@mail.gmail.com>
References: <CADRrdKvsuMonHgDS970X6zZT2Bpx+WvAZj3Wm60EkhccHKGt=w@mail.gmail.com>
Message-ID: <f68a5990-2b67-33bb-6ce9-d3a045dbe5b8@spatialys.com>

Javier,

No, there's no such function.

I'm wondering if we shouldn't generalize that as a function that returns 
all known transformations that have a specified CRS as the source or target

PJ_OBJ_LIST* proj_crs_get_related_operations(PJ_CONTEXT* ctxt, const PJ* 
crs, const char* const *options)

Even

Le 20/04/2021 ? 18:47, Javier Jimenez Shaw a ?crit?:
> Hi
>
> Given a vertical CRS, I would like to get the list of possible geoid 
> models that apply to it.
> Is there any way in the C++ API to get that information?
> (use case: give the user a list of available geoid models, to select 
> the desired one).
>
> If not, I am happy to make a PR using an SQL query (that is the only 
> way I found). The input would be the CRS auth-code, the output a list 
> of strings.
>
> Cheers,
> Javier.
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210420/9f1a0937/attachment.html>

From j1 at jimenezshaw.com  Wed Apr 21 03:21:14 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 21 Apr 2021 12:21:14 +0200
Subject: [PROJ] Is there Doxygen documentation?
Message-ID: <CADRrdKtP51vh0TpJ6kZ=jYT74WEUyqCLnx-nnRqYuhaGkYN6_g@mail.gmail.com>

Hi

In GDAL you can use two different C++ documentations:
 - Sphinx : https://gdal.org/api/index.html#id3
 - Doxygen : https://gdal.org/doxygen/index.html

However in PROJ I could only find it in Sphinx format
 - https://proj.org/development/reference/cpp/index.html#

Am I missing something? Is there doxygen style doc for PROJ somewhere?

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210421/5ebaa945/attachment.html>

From even.rouault at spatialys.com  Wed Apr 21 03:41:09 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 21 Apr 2021 12:41:09 +0200
Subject: [PROJ] Is there Doxygen documentation?
In-Reply-To: <CADRrdKtP51vh0TpJ6kZ=jYT74WEUyqCLnx-nnRqYuhaGkYN6_g@mail.gmail.com>
References: <CADRrdKtP51vh0TpJ6kZ=jYT74WEUyqCLnx-nnRqYuhaGkYN6_g@mail.gmail.com>
Message-ID: <ce319705-1513-61a0-18a7-4617369d5157@spatialys.com>

Javier,

GDAL publishes Doxygen because it used to do it before we switched to 
Sphinx.

PROJ Doxygen doc isn't pushed on proj.org, but you can consult it locally

Run ./scripts/doxygen.sh

and open generated files in docs/build/doxygen_html/index.html

Even

Le 21/04/2021 ? 12:21, Javier Jimenez Shaw a ?crit?:
> Hi
>
> In GDAL you can use two different C++ documentations:
> ?- Sphinx : https://gdal.org/api/index.html#id3 
> <https://gdal.org/api/index.html#id3>
> ?- Doxygen : https://gdal.org/doxygen/index.html 
> <https://gdal.org/doxygen/index.html>
>
> However in PROJ I could only find it in Sphinx format
> ?- https://proj.org/development/reference/cpp/index.html# 
> <https://proj.org/development/reference/cpp/index.html#>
>
> Am I missing something? Is there doxygen style doc for PROJ somewhere?
>
> Thanks.
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210421/7f1d0730/attachment.html>

From kristianevers at gmail.com  Sun Apr 25 03:18:19 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Sun, 25 Apr 2021 12:18:19 +0200
Subject: [PROJ] Slight postponement of PROJ 8.0.1
Message-ID: <447354ED-0668-4766-B5B4-17EBD9621E14@gmail.com>

All,

A quick service announcement.

I?ve got a particularly tight schedule the coming weeks so I have to postpone
the release of PROJ 8.0.1 slightly from it?s planned released date of May 1st. 

Expect the first release candidate on Wednesday April 28th and if all goes 
according to plan the final release on Wednesday May 5th.

/Kristian

From kristianevers at gmail.com  Wed Apr 28 03:49:23 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 28 Apr 2021 12:49:23 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
Message-ID: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>

All,

I have prepared candidates for the upcoming PROJ 8.0.1 and PROJ-data 1.6 releases. 

The packages are available from 
  
http://download.osgeo.org/proj/proj-8.0.1RC1.tar.gz
http://download.osgeo.org/proj/proj-8.0.1RC1.zip and 
http://download.osgeo.org/proj/proj-data-1.6RC1.tar.gz
http://download.osgeo.org/proj/proj-data-1.6RC1.zip

The PROJ release includes a number of bug fixes and updates to the transformation database
(see details below). The data package is extended with grids and tinshift files for Norwegian
transformations and the Swiss CHGeo2004 geoid model.

Please test the release candidates and report your findings back to the mailing list.

/Kristian 


???????????????????????????????????????

8.0.1 Release Notes
-------------------

 Updates
 -------

 o Database: update to EPSG v10.018 (#2636)

 o Add transformations for CHGeo2004, Swiss geoid model (#2604)

 o Additions to the norwegian NKG2020 transformation (#2600)

 Bug fixes
 ---------

 o pj_vlog(): fix buffer overflow in case of super lengthy error message (#2693)

 o Revert "proj_create_crs_to_crs_from_pj(): do not use PROJ_SPATIAL_CRITERION_PARTIAL_INTERSECTION if area is specified" (#2679)

 o UTM: error out when value of +zone= is not an integer (#2672)

 o getCRSInfoList(): make result order deterministic (by increasing auth_name,
   code) (#2661)

 o createOperation(): make sure no to discard deprecated operations if the
   replacement uses an unknow grid (#2623)

 o Fix build on Solaris 11.4 (#2621)

 o Add mapping of ESRI Equal_Area projection method to EPSG (#2612)

 o Fix incorrect EPGS extent code for EPSG:7789>EPSG:4976 NKG transformation (#2599)

 o fix wrong capitalization of CHENyx06_ETRS.gsb (#2597)

 o createOperations(): improve handling of vertical transforms when
   when compound CRSs are used (#2592)

 o CRS::promoteTo3D(): propagate the extent from the 2D CRS (#2589)

 o createFromCRSCodesWithIntermediates(): improve performance when there is
   no match (#2583)

 o Fix proj_clone() to work on 'meta' coordinate operation PJ* objects that
   can be returned by proj_create_crs_to_crs() (#2582)

 o add PROJ_COMPUTE_VERSION, PROJ_VERSION_NUMBER,
   PROJ_AT_LEAST_VERSION macros (#2581)

 o Make proj_lp_dist() and proj_geod() work on a PJ* CRS object (#2570)

 o Fix gcc 11 -Wnonnull compilation warnings (#2559)

 o Fix use of uninitialized memory in gie tests (#2558)

 o createOperations(): fix incorrect height transformation between 3D promoted RGF93 and CH1903+ (#2555)

From sebastic at xs4all.nl  Wed Apr 28 03:53:53 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 28 Apr 2021 12:53:53 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
Message-ID: <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>

On 4/28/21 12:49 PM, Kristian Evers wrote:
> The packages are available from 
>   
> http://download.osgeo.org/proj/proj-8.0.1RC1.tar.gz
> http://download.osgeo.org/proj/proj-8.0.1RC1.zip and 

These don't exist (yet).

> http://download.osgeo.org/proj/proj-data-1.6RC1.tar.gz
> http://download.osgeo.org/proj/proj-data-1.6RC1.zip

These do.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Wed Apr 28 03:55:17 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 28 Apr 2021 12:55:17 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
Message-ID: <a3fcfb83-69e4-abb2-96d2-a4a2cb3e97ea@spatialys.com>

Kristian
>    
> http://download.osgeo.org/proj/proj-8.0.1RC1.tar.gz
> http://download.osgeo.org/proj/proj-8.0.1RC1.zip and

The 2 above files aren't yet present on the server.

Even

-- 

http://www.spatialys.com
My software is free, but my time generally not.


From sebastic at xs4all.nl  Wed Apr 28 04:04:07 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 28 Apr 2021 13:04:07 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
Message-ID: <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>

On 4/28/21 12:53 PM, Sebastiaan Couwenberg wrote:
> On 4/28/21 12:49 PM, Kristian Evers wrote:
>> The packages are available from 
>>   
>> http://download.osgeo.org/proj/proj-8.0.1RC1.tar.gz
>> http://download.osgeo.org/proj/proj-8.0.1RC1.zip and 
> 
> These don't exist (yet).

It seems the version is wrong, the proj-8.0.0RC1 tarballs were updated
today.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kristianevers at gmail.com  Wed Apr 28 04:14:49 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 28 Apr 2021 13:14:49 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
Message-ID: <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>

God dammit. I forgot to bump the version numbers and apparently didn?t look
close enough on the file names. Give me a minute and I?ll have the correct files
uploaded.

/Kristian

> On 28 Apr 2021, at 13:04, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> On 4/28/21 12:53 PM, Sebastiaan Couwenberg wrote:
>> On 4/28/21 12:49 PM, Kristian Evers wrote:
>>> The packages are available from 
>>> 
>>> http://download.osgeo.org/proj/proj-8.0.1RC1.tar.gz
>>> http://download.osgeo.org/proj/proj-8.0.1RC1.zip and 
>> 
>> These don't exist (yet).
> 
> It seems the version is wrong, the proj-8.0.0RC1 tarballs were updated
> today.
> 
> Kind Regards,
> 
> Bas
> 
> -- 
> GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From kristianevers at gmail.com  Wed Apr 28 04:20:50 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 28 Apr 2021 13:20:50 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
Message-ID: <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>

The 8.0.1RC1 files should now be in place. Sorry for the mishap.

Unfortunately the 8.0.0RC1 files was overwritten with the faulty
8.0.1RC archives. I am not sure how to best revert that. Is there
a mirror of the OSGeo download server or perhaps a backup I
can retrieve the old files from?

/Kristian

> On 28 Apr 2021, at 13:14, Kristian Evers <kristianevers at gmail.com> wrote:
> 
> God dammit. I forgot to bump the version numbers and apparently didn?t look
> close enough on the file names. Give me a minute and I?ll have the correct files
> uploaded.
> 
> /Kristian
> 
>> On 28 Apr 2021, at 13:04, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>> 
>> On 4/28/21 12:53 PM, Sebastiaan Couwenberg wrote:
>>> On 4/28/21 12:49 PM, Kristian Evers wrote:
>>>> The packages are available from 
>>>> 
>>>> http://download.osgeo.org/proj/proj-8.0.1RC1.tar.gz
>>>> http://download.osgeo.org/proj/proj-8.0.1RC1.zip and 
>>> 
>>> These don't exist (yet).
>> 
>> It seems the version is wrong, the proj-8.0.0RC1 tarballs were updated
>> today.
>> 
>> Kind Regards,
>> 
>> Bas
>> 
>> -- 
>> GPG Key ID: 4096R/6750F10AE88D4AF1
>> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From sebastic at xs4all.nl  Wed Apr 28 04:27:34 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 28 Apr 2021 13:27:34 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
 <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
Message-ID: <09cdbe1d-bd4d-c488-a16a-a57a803de846@xs4all.nl>

On 4/28/21 1:20 PM, Kristian Evers wrote:
> Unfortunately the 8.0.0RC1 files was overwritten with the faulty
> 8.0.1RC archives. I am not sure how to best revert that. Is there
> a mirror of the OSGeo download server or perhaps a backup I
> can retrieve the old files from?

Can't you just regenerate them from the relevant commit?

I still have the tar.gz file, you can get it from:

 https://linuxminded.nl/tmp/proj-8.0.0RC1.tar.gz

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kristianevers at gmail.com  Wed Apr 28 04:30:42 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 28 Apr 2021 13:30:42 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <09cdbe1d-bd4d-c488-a16a-a57a803de846@xs4all.nl>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
 <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
 <09cdbe1d-bd4d-c488-a16a-a57a803de846@xs4all.nl>
Message-ID: <2570AFFA-A4A6-4CC5-B11B-80CD5CD5B235@gmail.com>

Yes, that?s possible. Will the files be identical though? I know some systems
use MD5 (or similar) hashes to verify that they?ve got the right file. I would
assume that will break if I regenerate the file. Probably not the highest risk
to do it on a release candidate but still?

/Kristian

> Can't you just regenerate them from the relevant commit?
> 
> I still have the tar.gz file, you can get it from:
> 
> https://linuxminded.nl/tmp/proj-8.0.0RC1.tar.gz
> 
> Kind Regards,
> 
> Bas
> 
> -- 
> GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From sebastic at xs4all.nl  Wed Apr 28 04:38:30 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 28 Apr 2021 13:38:30 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <2570AFFA-A4A6-4CC5-B11B-80CD5CD5B235@gmail.com>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
 <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
 <09cdbe1d-bd4d-c488-a16a-a57a803de846@xs4all.nl>
 <2570AFFA-A4A6-4CC5-B11B-80CD5CD5B235@gmail.com>
Message-ID: <90fe8d9e-ae6c-53c1-0e9c-a5b456a066f0@xs4all.nl>

On 4/28/21 1:30 PM, Kristian Evers wrote:
> Yes, that?s possible. Will the files be identical though? I know some systems
> use MD5 (or similar) hashes to verify that they?ve got the right file. I would
> assume that will break if I regenerate the file. Probably not the highest risk
> to do it on a release candidate but still?

The checksums will be different, tar is easily reproducible, although
pristine-tar does a reasonable job. The checksums can be updated along
with the tarballs.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kristianevers at gmail.com  Wed Apr 28 04:40:12 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 28 Apr 2021 13:40:12 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <90fe8d9e-ae6c-53c1-0e9c-a5b456a066f0@xs4all.nl>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
 <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
 <09cdbe1d-bd4d-c488-a16a-a57a803de846@xs4all.nl>
 <2570AFFA-A4A6-4CC5-B11B-80CD5CD5B235@gmail.com>
 <90fe8d9e-ae6c-53c1-0e9c-a5b456a066f0@xs4all.nl>
Message-ID: <8DE4BB01-41D0-4B79-B22B-20B086C0D45A@gmail.com>

> 
> The checksums will be different, tar is easily reproducible, although
> pristine-tar does a reasonable job. The checksums can be updated along
> with the tarballs.
> 

Yes, locally on the OSGeo server but I can?t update them in conda for instance.
Oh well, not a big deal considering that we are talking release candidates. I?ll sort
it out.

/Kristian


From jef at norbit.de  Wed Apr 28 04:44:32 2021
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Wed, 28 Apr 2021 13:44:32 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
 <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
Message-ID: <20210428114432.6z5z4uxubpbm5wia@norbit.de>

Hi Kristian,

On Wed, 28. Apr 2021 at 13:20:50 +0200, Kristian Evers wrote:
> Unfortunately the 8.0.0RC1 files was overwritten with the faulty
> 8.0.1RC archives. I am not sure how to best revert that. Is there
> a mirror of the OSGeo download server or perhaps a backup I
> can retrieve the old files from?

Restored from the osuosl mirror - including the timestamps I think.


J?rgen

-- 
J?rgen E. Fischer         norBIT GmbH               Tel. +49-4931-918175-31
Dipl.-Inf. (FH)           Rheinstra?e 13            Fax. +49-4931-918175-50
Software Engineer         D-26506 Norden              https://www.norbit.de
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210428/3fc1cd45/attachment.sig>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Pflichtangaben
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210428/3fc1cd45/attachment.ksh>

From even.rouault at spatialys.com  Wed Apr 28 04:45:11 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 28 Apr 2021 13:45:11 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <8DE4BB01-41D0-4B79-B22B-20B086C0D45A@gmail.com>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
 <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
 <09cdbe1d-bd4d-c488-a16a-a57a803de846@xs4all.nl>
 <2570AFFA-A4A6-4CC5-B11B-80CD5CD5B235@gmail.com>
 <90fe8d9e-ae6c-53c1-0e9c-a5b456a066f0@xs4all.nl>
 <8DE4BB01-41D0-4B79-B22B-20B086C0D45A@gmail.com>
Message-ID: <a219d3f3-0550-5fc2-3213-d76d2ddcc57a@spatialys.com>

I'd say to not bother and just remove the 8.0.0RC1 files. They are of 
little value by themselves, especially once the corresponding release 
has been promoted to final

Le 28/04/2021 ? 13:40, Kristian Evers a ?crit?:
>> The checksums will be different, tar is easily reproducible, although
>> pristine-tar does a reasonable job. The checksums can be updated along
>> with the tarballs.
>>
> Yes, locally on the OSGeo server but I can?t update them in conda for instance.
> Oh well, not a big deal considering that we are talking release candidates. I?ll sort
> it out.
>
> /Kristian
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From kristianevers at gmail.com  Wed Apr 28 04:52:20 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 28 Apr 2021 13:52:20 +0200
Subject: [PROJ] PROJ 8.0.1RC1 and PROJ-data 1.6RC1
In-Reply-To: <20210428114432.6z5z4uxubpbm5wia@norbit.de>
References: <98933FEB-946C-4BAD-9709-52589D4A9DF9@gmail.com>
 <60b94f64-a916-5ebe-36d8-a490321a39e4@xs4all.nl>
 <a6b6d893-f9f0-7a80-ece7-6529217cb2ed@xs4all.nl>
 <7280C592-06BD-4F5A-9C22-E9864896D0C0@gmail.com>
 <FE8F2EE8-610A-4869-9EE6-DA9595CD4B65@gmail.com>
 <20210428114432.6z5z4uxubpbm5wia@norbit.de>
Message-ID: <1E1ADCB8-CB77-437D-AF64-AC75B5EC0169@gmail.com>

Thanks, J?rgen!

> On 28 Apr 2021, at 13:44, J?rgen E. Fischer <jef at norbit.de> wrote:
> 
> Hi Kristian,
> 
> On Wed, 28. Apr 2021 at 13:20:50 +0200, Kristian Evers wrote:
>> Unfortunately the 8.0.0RC1 files was overwritten with the faulty
>> 8.0.1RC archives. I am not sure how to best revert that. Is there
>> a mirror of the OSGeo download server or perhaps a backup I
>> can retrieve the old files from?
> 
> Restored from the osuosl mirror - including the timestamps I think.
> 
> 
> J?rgen
> 
> -- 
> J?rgen E. Fischer         norBIT GmbH               Tel. +49-4931-918175-31
> Dipl.-Inf. (FH)           Rheinstra?e 13            Fax. +49-4931-918175-50
> Software Engineer         D-26506 Norden              https://www.norbit.de
> norBIT Gesellschaft fuer Unternehmensberatung und Informationssysteme mbH
> Rheinstrasse 13, 26506 Norden
> GF: Juergen Fischer, Nils Kutscher HR: Amtsgericht Aurich HRB 100827
> Datenschutzerklaerung: https://www.norbit.de/83/


From j1 at jimenezshaw.com  Thu Apr 29 03:04:25 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 29 Apr 2021 12:04:25 +0200
Subject: [PROJ] ballpark transformation ITRF2014 -> CH1903+
Message-ID: <CADRrdKvX2grsARQChLTd6Eh=gYezwQLEJ0s3-8HfX3eiKYmKEg@mail.gmail.com>

I tried in master this transformation, and I got surprised that it is just
ballpark.

projinfo -s EPSG:9000 -t EPSG:4150 --spatial-test intersects Candidate
operations found: 1 ------------------------------------- Operation No. 1:
unknown id, Ballpark geographic offset from ITRF2014 to CH1903+, unknown
accuracy, World, has ballpark transformation PROJ string: +proj=noop


There is a transformation from ETRS89 to CH1903+ with 0.1m accuracy. Why is
not using it (nested with ITRF2014 -> ETRS89)?

projinfo -s ETRS89 -t EPSG:4150 --spatial-test intersects
Candidate operations found: 1
-------------------------------------
Operation No. 1:

INVERSE(EPSG):1647, Inverse of CH1903+ to ETRS89 (1), 0.1 m, Liechtenstein;
Switzerland.

PROJ string:
+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +proj=push +v_3
  +step +proj=cart +ellps=GRS80
  +step +proj=helmert +x=-674.374 +y=-15.056 +z=-405.346
  +step +inv +proj=cart +ellps=bessel
  +step +proj=pop +v_3
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210429/ad501698/attachment.html>

From even.rouault at spatialys.com  Thu Apr 29 03:14:35 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 29 Apr 2021 12:14:35 +0200
Subject: [PROJ] ballpark transformation ITRF2014 -> CH1903+
In-Reply-To: <CADRrdKvX2grsARQChLTd6Eh=gYezwQLEJ0s3-8HfX3eiKYmKEg@mail.gmail.com>
References: <CADRrdKvX2grsARQChLTd6Eh=gYezwQLEJ0s3-8HfX3eiKYmKEg@mail.gmail.com>
Message-ID: <a16cc580-a7aa-b8e4-7c07-c7d6e14b8fc1@spatialys.com>


> There is a transformation from ETRS89 to CH1903+ with 0.1m accuracy. 
> Why is not using it (nested with ITRF2014 -> ETRS89)?

Because there is no transformation registered between ITRF2014 and 
ETRS89 (*), so there's no reason to use the ETRS89 intermediate because 
the result would have a unknown accuracy.

(*) actually if you do "projinfo -s "ITRF2014"? -t ETRS89 --spatial-test 
intersects", you'll see that it manages to compute transformation paths 
for Nordic countries, but this is already using an intermediate ETRF2014 
pivot, so PROJ logic wouldn't be able to do ITRF2014 -> ETRF2014 -> .... 
-> ETRS89 -> CH1903+, and anyway the area of use aren't compatible

-- 

http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210429/bb57740c/attachment.html>

From daltonhardt at gmail.com  Thu Apr 29 04:38:26 2021
From: daltonhardt at gmail.com (Dalton Hardt)
Date: Thu, 29 Apr 2021 08:38:26 -0300
Subject: [PROJ] Geodesic transformation question
Message-ID: <CAB0h5BweKctWV2v7Rwa54sgHK3ha2jphMjv=2xe-xWzWEk6sUQ@mail.gmail.com>

Hello everyone,

I have a particular question about geodesic transformation.
In fact, I want to transform a ground movement (x,y) displacements into
spatial coordinates (lat, lon).
The idea is to plot the gyroscope and accelerometer displacements data
using matplotlib or any other graphics plot library using python.
Does anyone have any clue on doing that?

Thank you all and stay safe!
-- 

DALTON HARDT
4Factory Ltda.
+55(47)99927-4997

[Sent from my iPhone]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210429/9f0f18b1/attachment.html>

From j1 at jimenezshaw.com  Thu Apr 29 06:08:47 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 29 Apr 2021 15:08:47 +0200
Subject: [PROJ] ballpark transformation ITRF2014 -> CH1903+
In-Reply-To: <a16cc580-a7aa-b8e4-7c07-c7d6e14b8fc1@spatialys.com>
References: <CADRrdKvX2grsARQChLTd6Eh=gYezwQLEJ0s3-8HfX3eiKYmKEg@mail.gmail.com>
 <a16cc580-a7aa-b8e4-7c07-c7d6e14b8fc1@spatialys.com>
Message-ID: <CADRrdKuM_hSPjU_PpRf5gT2P59wMYrKCD+gwY_mVqogt6FxX1Q@mail.gmail.com>

Ouch.

Thanks Even for the response.

I could not expect that such transformation was not published.
Now I see that WGS84(G1762) to ETRS89 goes through WGS84, with an accuracy
of 3m. Looks like Europe is isolated from the World (in a datum accurate
transformation sense ;)

Cheers.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Thu, 29 Apr 2021 at 12:14, Even Rouault <even.rouault at spatialys.com>
wrote:

>
> There is a transformation from ETRS89 to CH1903+ with 0.1m accuracy. Why
> is not using it (nested with ITRF2014 -> ETRS89)?
>
> Because there is no transformation registered between ITRF2014 and ETRS89
> (*), so there's no reason to use the ETRS89 intermediate because the result
> would have a unknown accuracy.
>
> (*) actually if you do "projinfo -s "ITRF2014"  -t ETRS89 --spatial-test
> intersects", you'll see that it manages to compute transformation paths for
> Nordic countries, but this is already using an intermediate ETRF2014 pivot,
> so PROJ logic wouldn't be able to do ITRF2014 -> ETRF2014 -> .... -> ETRS89
> -> CH1903+, and anyway the area of use aren't compatible
> --
>
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210429/43ef144c/attachment.html>

From gdt at lexort.com  Thu Apr 29 06:22:32 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 29 Apr 2021 09:22:32 -0400
Subject: [PROJ] ballpark transformation ITRF2014 -> CH1903+
In-Reply-To: <CADRrdKuM_hSPjU_PpRf5gT2P59wMYrKCD+gwY_mVqogt6FxX1Q@mail.gmail.com>
 (Javier Jimenez Shaw's message of "Thu, 29 Apr 2021 15:08:47 +0200")
References: <CADRrdKvX2grsARQChLTd6Eh=gYezwQLEJ0s3-8HfX3eiKYmKEg@mail.gmail.com>
 <a16cc580-a7aa-b8e4-7c07-c7d6e14b8fc1@spatialys.com>
 <CADRrdKuM_hSPjU_PpRf5gT2P59wMYrKCD+gwY_mVqogt6FxX1Q@mail.gmail.com>
Message-ID: <rmir1itql7r.fsf@s1.lexort.com>


Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:

> I could not expect that such transformation was not published.
> Now I see that WGS84(G1762) to ETRS89 goes through WGS84, with an accuracy
> of 3m. Looks like Europe is isolated from the World (in a datum accurate
> transformation sense ;)

It seems to be quite published (by an author whose name will be quite
familiar to followers of ITRF).  It seems that it is merely not
expressed in the EPSG database.

  http://etrs89.ensg.ign.fr/pub/EUREF-TN-1.pdf

Also there's the minor issue that ETRS89 is a system not a frame and
there are many ETRFnn and ETRFnnnn frames.  So ETRS89 appears to be one
of those pesky datum ensembles, from a pedantic view.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210429/3b17ceaa/attachment.sig>

From even.rouault at spatialys.com  Thu Apr 29 06:35:40 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 29 Apr 2021 15:35:40 +0200
Subject: [PROJ] ballpark transformation ITRF2014 -> CH1903+
In-Reply-To: <rmir1itql7r.fsf@s1.lexort.com>
References: <CADRrdKvX2grsARQChLTd6Eh=gYezwQLEJ0s3-8HfX3eiKYmKEg@mail.gmail.com>
 <a16cc580-a7aa-b8e4-7c07-c7d6e14b8fc1@spatialys.com>
 <CADRrdKuM_hSPjU_PpRf5gT2P59wMYrKCD+gwY_mVqogt6FxX1Q@mail.gmail.com>
 <rmir1itql7r.fsf@s1.lexort.com>
Message-ID: <e8eb12e9-00cb-e1a7-d113-14bdc907d391@spatialys.com>


Le 29/04/2021 ? 15:22, Greg Troxel a ?crit?:
> Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:
>
>> I could not expect that such transformation was not published.
>> Now I see that WGS84(G1762) to ETRS89 goes through WGS84, with an accuracy
>> of 3m. Looks like Europe is isolated from the World (in a datum accurate
>> transformation sense ;)
> It seems to be quite published (by an author whose name will be quite
> familiar to followers of ITRF).  It seems that it is merely not
> expressed in the EPSG database.
>
>    http://etrs89.ensg.ign.fr/pub/EUREF-TN-1.pdf

Actually the data from table 1, 2 and 3 of this paper is in EPSG. But 
you need to invoke the precise ETRFxx frame, not just the generic ETRS89

$ projinfo -s ETRF89 -t ITRF89 -o PROJ -q
+proj=pipeline
 ? +step +proj=axisswap +order=2,1
 ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
 ? +step +proj=cart +ellps=GRS80
 ? +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0 +ry=0 +rz=0 +s=0 +dx=0 
+dy=0
 ??????? +dz=0 +drx=0.00011 +dry=0.00057 +drz=-0.00071 +ds=0 +t_epoch=1989
 ??????? +convention=position_vector
 ? +step +inv +proj=cart +ellps=GRS80
 ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
 ? +step +proj=axisswap +order=2,1

$ projinfo -s ETRF2014 -t ITRF2014 -o PROJ -q
+proj=pipeline
 ? +step +proj=axisswap +order=2,1
 ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
 ? +step +proj=cart +ellps=GRS80
 ? +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0.001785 +ry=0.011151 
+rz=-0.01617
 ??????? +s=0 +dx=0 +dy=0 +dz=0 +drx=8.5e-05 +dry=0.000531 +drz=-0.00077 
+ds=0
 ??????? +t_epoch=2010 +convention=position_vector
 ? +step +inv +proj=cart +ellps=GRS80
 ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
 ? +step +proj=axisswap +order=2,1

$ projinfo -s ETRF89 -t ITRF2014 -o PROJ -q
+proj=pipeline
 ? +step +proj=axisswap +order=2,1
 ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
 ? +step +proj=cart +ellps=GRS80
 ? +step +inv +proj=helmert +x=0 +y=0 +z=0 +rx=0 +ry=0 +rz=0 +s=0 +dx=0 
+dy=0
 ??????? +dz=0 +drx=0.00011 +dry=0.00057 +drz=-0.00071 +ds=0 +t_epoch=1989
 ??????? +convention=position_vector
 ? +step +proj=helmert +x=-0.0304 +y=-0.0355 +z=0.1308 +rx=0 +ry=0 
+rz=-0.00026
 ??????? +s=-0.00819 +dx=-0.0001 +dy=0.0005 +dz=0.0033 +drx=0 +dry=0 
+drz=-2e-05
 ??????? +ds=-0.00012 +t_epoch=2010 +convention=position_vector
 ? +step +inv +proj=cart +ellps=GRS80
 ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
 ? +step +proj=axisswap +order=2,1


>
> Also there's the minor issue that ETRS89 is a system not a frame and
> there are many ETRFnn and ETRFnnnn frames.  So ETRS89 appears to be one
> of those pesky datum ensembles, from a pedantic view.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210429/857a6fa5/attachment-0001.html>

