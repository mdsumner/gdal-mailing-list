From patrick.van.dijk at gmail.com  Wed Jan  3 05:03:38 2007
From: patrick.van.dijk at gmail.com (Patrick van Dijk)
Date: Wed, 3 Jan 2007 13:03:38 +0000 (UTC)
Subject: [Proj] Compiling VS2005
Message-ID: <loom.20070103T140128-439@post.gmane.org>


When compiling using VS2005 I found that a change is required for
makefile.vc

The /MD switch needs to be changed to /MT
so change the following lines of makefile.vc:

# Uncomment the first for an optimized build, or the second for debug.
OPTFLAGS=	/nologo /Ox /MD
#OPTFLAGS=	/nologo /Zi /MD /Fdproj.pdb

to:

# Uncomment the first for an optimized build, or the second for debug.
OPTFLAGS=	/nologo /Ox /MT
#OPTFLAGS=	/nologo /Zi /MT /Fdproj.pdb


Then it is no longer required to ship the msvcrt80.dll along with the proj.exe.

Cheers,

Patrick 



From peter.bogaert at ugent.be  Thu Jan  4 03:10:58 2007
From: peter.bogaert at ugent.be (Peter Bogaert)
Date: Thu, 4 Jan 2007 12:10:58 +0100
Subject: [Proj] Proj4 for Macintosh
Message-ID: <enin3h$47n$1@sea.gmane.org>

Dear all,

Does anyone have some experience with using the proj4 on Mac OS X. If so, 
could you give me some notes on compiling the source code into a library. Or 
does there exist an object library which is precompiled and can be linked 
with other programming languages?

Kind regards
Peter Bogaert 





From sorokina at ornl.gov  Thu Jan  4 06:24:36 2007
From: sorokina at ornl.gov (Sorokine, Alexandre)
Date: Thu, 04 Jan 2007 09:24:36 -0500
Subject: [Proj] Proj4 for Macintosh
In-Reply-To: <enin3h$47n$1@sea.gmane.org>
Message-ID: <428543BBA8AC7443BA10B0F491C6B05601E5EE45@ORNLEXCHANGE.ornl.gov>

Peter,

Proj4 is one of the packages available with Fink.  It includes both
executable and a share library.  The package web page is here:
http://pdb.finkproject.org/pdb/package.php/proj

--
Alex Sorokine, Ph.D. <sorokina at ornl.gov>
Oak Ridge National Lab
 

> -----Original Message-----
> From: proj-bounces at lists.maptools.org 
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Peter Bogaert
> Sent: Thursday, January 04, 2007 6:11 AM
> To: proj at lists.maptools.org
> Subject: [Proj] Proj4 for Macintosh
> 
> Dear all,
> 
> Does anyone have some experience with using the proj4 on Mac 
> OS X. If so, 
> could you give me some notes on compiling the source code 
> into a library. Or 
> does there exist an object library which is precompiled and 
> can be linked 
> with other programming languages?
> 
> Kind regards
> Peter Bogaert 
> 
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From gdt at ir.bbn.com  Thu Jan  4 06:55:19 2007
From: gdt at ir.bbn.com (Greg Troxel)
Date: Thu, 04 Jan 2007 09:55:19 -0500
Subject: [Proj] Proj4 for Macintosh
In-Reply-To: <enin3h$47n$1@sea.gmane.org> (Peter Bogaert's message of "Thu\, 4
	Jan 2007 12\:10\:58 +0100")
References: <enin3h$47n$1@sea.gmane.org>
Message-ID: <rmiodpergdk.fsf@fnord.ir.bbn.com>


proj is in pkgsrc as misc/proj.
pkgsrc supports OS X.

http://www.netbsd.org/Documentation/software/packages.html

See 'binary distribution' for a "bootstrap kit".  Then you can use
pkgsrc to build proj.  (I haven't tried this since I don't have a mac
but many people seem to use it.)

pkgsrc will also enable you to build py-proj, geos and postgis.

-- 
    Greg Troxel <gdt at ir.bbn.com>


From woklist at kyngchaos.com  Thu Jan  4 07:11:28 2007
From: woklist at kyngchaos.com (William Kyngesburye)
Date: Thu, 4 Jan 2007 09:11:28 -0600
Subject: [Proj] Proj4 for Macintosh
In-Reply-To: <428543BBA8AC7443BA10B0F491C6B05601E5EE45@ORNLEXCHANGE.ornl.gov>
References: <428543BBA8AC7443BA10B0F491C6B05601E5EE45@ORNLEXCHANGE.ornl.gov>
Message-ID: <8ED9AD5A-DAB6-4388-B670-3BFCAF624576@kyngchaos.com>

I have PROJ available built as a Universal framework, with  
executables.  There is also a companion Xcode project if you like to  
build things yourself.

Otherwise, PROJ is a VERY easy build from source - configure-make- 
install, no configure options needed.  No Fink needed.

A universal build is tricky, due to an endian problem in the NAD  
files.  My Xcode project takes care of patching the source.  I'm not  
sure Fink does (I don't know if Fink does universal at all, in which  
case it wouldn't matter).  A configure-make-install for your Mac  
processor won't have endian problems.

On Jan 4, 2007, at 8:24 AM, Sorokine, Alexandre wrote:

> Peter,
>
> Proj4 is one of the packages available with Fink.  It includes both
> executable and a share library.  The package web page is here:
> http://pdb.finkproject.org/pdb/package.php/proj
>
> --
> Alex Sorokine, Ph.D. <sorokina at ornl.gov>
> Oak Ridge National Lab
>
>
>> -----Original Message-----
>> From: proj-bounces at lists.maptools.org
>> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Peter Bogaert
>> Sent: Thursday, January 04, 2007 6:11 AM
>> To: proj at lists.maptools.org
>> Subject: [Proj] Proj4 for Macintosh
>>
>> Dear all,
>>
>> Does anyone have some experience with using the proj4 on Mac
>> OS X. If so,
>> could you give me some notes on compiling the source code
>> into a library. Or
>> does there exist an object library which is precompiled and
>> can be linked
>> with other programming languages?
>>
>> Kind regards
>> Peter Bogaert

-----
William Kyngesburye <kyngchaos at kyngchaos.com>
http://www.kyngchaos.com/

"I ache, therefore I am.  Or in my case - I am, therefore I ache."

- Marvin




From Chris.Barker at noaa.gov  Thu Jan  4 09:05:31 2007
From: Chris.Barker at noaa.gov (Christopher Barker)
Date: Thu, 04 Jan 2007 09:05:31 -0800
Subject: [Proj] Proj4 for Macintosh
In-Reply-To: <8ED9AD5A-DAB6-4388-B670-3BFCAF624576@kyngchaos.com>
References: <428543BBA8AC7443BA10B0F491C6B05601E5EE45@ORNLEXCHANGE.ornl.gov>
	<8ED9AD5A-DAB6-4388-B670-3BFCAF624576@kyngchaos.com>
Message-ID: <459D33DB.10003@noaa.gov>

William Kyngesburye wrote:
> I have PROJ available built as a Universal framework, with executables.  

very cool!


>  I'm not sure Fink
> does (I don't know if Fink does universal at all

I don't think it does -- but there is little need to with fink, as you 
don't bundle up re-distributable applications with it anyway.

-Chris

-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov


From NGignac at odpem.org.jm  Thu Jan  4 09:41:01 2007
From: NGignac at odpem.org.jm (NGignac at odpem.org.jm)
Date: Thu, 4 Jan 2007 12:41:01 -0500
Subject: [Proj] Jamaica Projection...
In-Reply-To: <458C34D2.2080004@pobox.com>
Message-ID: <OFC018AA74.A6E1207B-ON05257259.00610534-05257259.00612395@odpem.org.jm>



So, can it be integrate into the EPSG code for all other projects? Because
when I used other applications (e.g. PostGIS or others), JAD2001 is not
integrated in the list.

Thanks.

Nicolas



                                                                           
             Frank Warmerdam                                               
             <warmerdam at pobox.                                             
             com>                                                       To 
             Sent by:                  "PROJ.4 and general Projections     
             proj-bounces at list         Discussions"                        
             s.maptools.org            <proj at lists.maptools.org>           
                                                                        cc 
                                                                           
             22/12/2006 02:41                                      Subject 
             PM                        Re: [Proj] Jamaica Projection...    
                                                                           
                                                                           
             Please respond to                                             
                "PROJ.4 and                                                
                  general                                                  
                Projections                                                
               Discussions"                                                
             <proj at lists.mapto                                             
                 ols.org>                                                  
                                                                           
                                                                           




NGignac at odpem.org.jm wrote:
> Is it possible to add this new Jamaican Projection in the project?
>
> See this link for more details on the projection:
> http://www.jamaicancaves.org/jad2001.htm

Nicolas,

I am not aware of a corresponding EPSG code for JAD2001, but you can
represent it in PROJ.4 with the following definition:

   +proj=lcc +lat_1=18 +lat_2=18 +lon_0=77W +lat_0=18 \
             +x_0=750000 +y_0=650000 +datum=WGS84

Best regards,
--
---------------------------------------+--------------------------------------

I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




From EMiller at dfg.ca.gov  Thu Jan  4 10:20:33 2007
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Thu, 04 Jan 2007 10:20:33 -0800
Subject: [Proj] Jamaica Projection...
In-Reply-To: <OFC018AA74.A6E1207B-ON05257259.00610534-05257259.00612395@odpem.org.jm>
References: <458C34D2.2080004@pobox.com>
	<OFC018AA74.A6E1207B-ON05257259.00610534-05257259.00612395@odpem.org.jm>
Message-ID: <459CD4FA.95FD.00E4.0@dfg.ca.gov>

The EPSG database is maintained by the EPSG (http:/www.epsg.org).

They have a comments form specifically for this purpose:
http://www.epsg.org/Comms/Comment.asp 

You can always add an entry to your copy of the epsg file (
proj/nad/epsg ).  You should use a code number greater than 32767 so it
won't conflict with future additions to the EPSG database.  You'll have
to take additional steps for other programs that utilize proj.4 (like
PostGIS or mapserver).

For Example:

# Jamaica JAD2001
<45000> +proj=lcc +lat_1=18 +lat_2=18 +lon_0=77W +lat_0=18 +x_0=750000
+y_0=650000 +datum=WGS84 +ellps=WGS84 +units=m +no_defs  <>

>>> On 1/4/2007 at 9:41 AM, <NGignac at odpem.org.jm> wrote:

> 
> So, can it be integrate into the EPSG code for all other projects?
Because
> when I used other applications (e.g. PostGIS or others), JAD2001 is
not
> integrated in the list.
> 
> Thanks.
> 
> Nicolas
> 
> 
> 
>                                                                      
     
>              Frank Warmerdam                                         
     
>              <warmerdam at pobox.                                       
     
>              com>                                                    
  To 
>              Sent by:                  "PROJ.4 and general
Projections     
>              proj-bounces at list         Discussions"                  
     
>              s.maptools.org            <proj at lists.maptools.org>     
     
>                                                                      
  cc 
>                                                                      
     
>              22/12/2006 02:41                                     
Subject 
>              PM                        Re: [Proj] Jamaica
Projection...    
>                                                                      
     
>                                                                      
     
>              Please respond to                                       
     
>                 "PROJ.4 and                                          
     
>                   general                                            
     
>                 Projections                                          
     
>                Discussions"                                          
     
>              <proj at lists.mapto                                       
     
>                  ols.org>                                            
     
>                                                                      
     
>                                                                      
     
> 
> 
> 
> 
> NGignac at odpem.org.jm wrote:
>> Is it possible to add this new Jamaican Projection in the project?
>>
>> See this link for more details on the projection:
>> http://www.jamaicancaves.org/jad2001.htm 
> 
> Nicolas,
> 
> I am not aware of a corresponding EPSG code for JAD2001, but you can
> represent it in PROJ.4 with the following definition:
> 
>    +proj=lcc +lat_1=18 +lat_2=18 +lon_0=77W +lat_0=18 \
>              +x_0=750000 +y_0=650000 +datum=WGS84
> 
> Best regards,
> --
>
---------------------------------------+--------------------------------------
> 
> I set the clouds in motion - turn up   | Frank Warmerdam,
> warmerdam at pobox.com 
> light and sound - activate the windows | http://pobox.com/~warmerdam

> and watch the world go round - Rush    | President OSGeo,
http://osgeo.org 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj 
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj


From patrick.van.dijk at gmail.com  Thu Jan  4 12:43:34 2007
From: patrick.van.dijk at gmail.com (Patrick van Dijk)
Date: Thu, 4 Jan 2007 20:43:34 +0000 (UTC)
Subject: [Proj] NADCON
Message-ID: <loom.20070104T214036-318@post.gmane.org>

I am wondering how the NAD datum conversion is implemented in Proj.4
>From the NADCON site I have learned there are .laa and .loa ASCII files
with .las  and .los as their binary counterparts.
And the NADCON source code is written in Fortran.

But Proj.4 is using .lla files and the source code is in C.

Have the .lla files been converted from .laa and .loa?
Is the C code a conversion from the Fortran implementation?

Thanks,

Patrick 




From bavay at slf.ch  Fri Jan  5 01:50:02 2007
From: bavay at slf.ch (Mathias bavay)
Date: Fri, 05 Jan 2007 10:50:02 +0100
Subject: [Proj] Conversion to UTM
Message-ID: <459E1F4A.7020507@slf.ch>

Hi!

I am wondering: why is the UTM zone not computed by cs2cs when 
converting coordinates to utm? Is it because a specific algorithm would 
have to be implemented for each projection?

Mathias
PS: I am working on a qt GUI for cs2cs. I should be able to release its 
first version soon! (my goal is to make something useful, convenient and 
that casual users can use without making obvious mistakes)


From warmerdam at pobox.com  Fri Jan  5 07:57:13 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 05 Jan 2007 10:57:13 -0500
Subject: [Proj] Conversion to UTM
In-Reply-To: <459E1F4A.7020507@slf.ch>
References: <459E1F4A.7020507@slf.ch>
Message-ID: <459E7559.1060505@pobox.com>

Mathias bavay wrote:
> Hi!
> 
> I am wondering: why is the UTM zone not computed by cs2cs when 
> converting coordinates to utm? Is it because a specific algorithm would 
> have to be implemented for each projection?

Mathias,

Three reasons:
  1) It doesn't fit the model.  Different UTM zones are different coordinate
     systems, and the proj interface is setup such that the output coordinate
     system is initialized in advance.

  2) There are perfectly legitimate reasons to use a UTM zone somewhat outside
     it's defined area of appropriateness.

  3) There would be know way to know what UTM zone was used for a set of
     UTM coordinates coming out of cs2cs so the projected locations essentially
     would become meaningless.

It would be nice to have a function to suggest the most appropriate UTM zone
for a given lat/long location but this is not trivial if you want to apply
the special zone mappings in Scandinavia (and perhaps other places).

> Mathias
> PS: I am working on a qt GUI for cs2cs. I should be able to release its 
> first version soon! (my goal is to make something useful, convenient and 
> that casual users can use without making obvious mistakes)

Sounds cool.

Best regards,
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From giorgio.agugiaro at unipd.it  Mon Jan  8 06:58:48 2007
From: giorgio.agugiaro at unipd.it (Giorgio Agugiaro)
Date: Mon, 8 Jan 2007 15:58:48 +0100
Subject: [Proj] UTM32N-GaussBoaga datum shift problems
Message-ID: <KLEGKAGGLKLDJPCFGMDOOEMICAAA.giorgio.agugiaro@unipd.it>

Hi everybody!
First of all, happy 2007! ;-)

Before you "enjoy" this long mail, I summarise it here.
I have some troubles with datum-shift results using cs2cs.
I am using proj 4.50 compiled on a Mandriva 2007 box.

Am I doing something wrong? Could please someone help?
Thanks in advance for any help and/or suggestions!!

Giorgio Agugiaro
(giorgio.agugiaro at unipd.it)


-----------------------

So, to the topic:
I need to set up proj in order to use it for a datum shift from Grass GIS
via r.proj and v.proj.
I calculated (and checked the results with other programs) the 7 parameters
from the following test points:

WGS84-UTM32N
Northing    |   Easting | h_ell| Point_id
-----------------------------------------
5022649.211  718871.227  52.537  #1000
5022602.837  718852.690  52.096  #4000
5022584.125  718899.004  52.027  #5000
5022565.657  718945.481  51.732  #6000
5022519.163  718926.858  51.777  #8000
5022519.189  718872.883  51.556  #9000
5022500.582  718919.424  51.651  #10000

Roma40, Zone 1 (GaussBoaga)
Northing    |    Easting  | h_orto | Point_id
-------------------------------------------------------
5022670.5000  1718900.5000  12.00000 #1000
5022624.1156  1718881.9935  11.56889 #4000
5022605.4286  1718928.3421  11.50839 #5000
5022587.0136  1718974.8102  11.21289 #6000
5022540.5104  1718956.2347  11.26078 #8000
5022540.4791  1718902.2595  11.03863 #9000
5022521.9201  1718948.8186  11.13414 #10000

calculated 7 parameters are (deltax m, deltay m,deltaz m,rx sec,ry sec,rz
sec,scale_factor ppm):
-927.3934,-426.678,166.8859,-129.10138,-5.11282,-118.30878,65.7674

In order to check the transformation I do:

cs2cs -rsf %.4f +datum=WGS84 +proj=utm +zone=32 +north +unit=m +to
+ellps=intl
     +proj=tmerc +lat_0=0.0 +lon_0=9.0 +k=0.9996 +x_0=1500000 +y=0.0 +unit=m
     +towgs84=-927.3934,-426.678,166.8859,-129.10138,-5.11282,-118.30878,65.
7674 mg84grid.txt

(file mg84grid.txt contains the WGS84-UTM32N coordinates shown above)
Output is:
5022672.0592    1718901.5497 12.1290
5022625.6723    1718883.0528 11.6925
5022607.0004    1718929.3798 11.6276
5022588.5726    1718975.8696 11.3367
5022542.0656    1718957.2869 11.3862
5022542.0462    1718903.3151 11.1629
5022523.4795    1718949.8690 11.2620

As you can see, Delta_N is about 1.5 m and a Delta_E is about 1 m.
These parameters generally allow me to get datum-shifted values with (more
or less) cm delta_N and delta_E.

So, where am I doing something wrong?

On a side note, I used successfully cs2cs in a similar datum-shift with
these test points and parameters:

Points
AA   WGS84-UTM32N                 45 24 05.7680 N   11 52 02.5800 E   59.57
     Gauss Boaga Roma40           45 24 03.3760 N   11 52 03.3920 E
BB   WGS84-UTM32N                 45 16 25.1360 N   12 02 50.4560 E   48.58
     Gauss Boaga Roma40           45 16 22.7553 N   12 02 51.2230 E
CC   WGS84-UTM32N                 45 13 34.9090 N   11 32 03.5180 E   59.81
     Gauss Boaga Roma40           45 13 32.5269 N   11 32 04.3701 E
DD   WGS84-UTM32N                 45 30 37.6240 N   11 37 36.3980 E   74.00
     Gauss Boaga Roma40           45 30 35.2256 N   11 37 37.2298 E
EE   WGS84-UTM32N                 45 07 10.2550 N   11 35 25.8400 E   52.32
     Gauss Boaga Roma40           45 07 07.8739 N   11 35 26.6984 E

calculated 7 parameters were (units as above):
-135.9406,-28.3596,-10.6462,-0.24989,-2.48329,-1.57131,-15.6918

resulting transformed points differed about 20/30 cm.
--------------------------------------------------------------------

--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.16.7/619 - Release Date: 07/01/07
18.29



From bavay at slf.ch  Tue Jan  9 07:43:55 2007
From: bavay at slf.ch (Mathias bavay)
Date: Tue, 09 Jan 2007 16:43:55 +0100
Subject: [Proj] Conversion to Swiss coordinates
Message-ID: <45A3B83B.4070302@slf.ch>

Hi!

I found in the epsg file the transformation for Swiss coordinates. I 
then tried to convert (47.38195,8.54879) (lat/long) to Swiss coordinates 
using the following command line:

echo "47.38195 8.54879" | cs2cs -r -s +proj=latlong +datum=WGS84 +to 
+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 
+x_0=2600000 +y_0=1200000 +ellps=bessel 
+towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs

Basically, everything after the "+to" is a cut and paste of the epsg 
file. But instead of (600920,228685) it gives me "1248494.59      
2683831.35 -47.46"

So, my question is, what am I doing wrong?

My second question is, is there any way to tell cs2cs that I want to 
convert to/from CH1903 (or code <2056>) or do I simply have to cut and 
paste the line given in the epsg file every time?

Thank you very much,
Mathias


From warmerdam at pobox.com  Tue Jan  9 08:24:14 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 09 Jan 2007 11:24:14 -0500
Subject: [Proj] Conversion to Swiss coordinates
In-Reply-To: <45A3B83B.4070302@slf.ch>
References: <45A3B83B.4070302@slf.ch>
Message-ID: <45A3C1AE.3010801@pobox.com>

Mathias bavay wrote:
> Hi!
> 
> I found in the epsg file the transformation for Swiss coordinates. I 
> then tried to convert (47.38195,8.54879) (lat/long) to Swiss coordinates 
> using the following command line:
> 
> echo "47.38195 8.54879" | cs2cs -r -s +proj=latlong +datum=WGS84 +to 
> +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 
> +x_0=2600000 +y_0=1200000 +ellps=bessel 
> +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs
> 
> Basically, everything after the "+to" is a cut and paste of the epsg 
> file. But instead of (600920,228685) it gives me "1248494.59      
> 2683831.35 -47.46"

Mathias,

Sorry, I don't know why you aren't getting the results you expect.
I have reproduced similar behavior to what you are seeing.

> My second question is, is there any way to tell cs2cs that I want to 
> convert to/from CH1903 (or code <2056>) or do I simply have to cut and 
> paste the line given in the epsg file every time?

You can use +init=epsg:2056 instead like this:

cs2cs -r -s +proj=latlong +datum=WGS84 +to +init=epsg:2056

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From ovv at hetnet.nl  Tue Jan  9 10:46:56 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 09 Jan 2007 19:46:56 +0100
Subject: [Proj] UTM32N-GaussBoaga datum shift problems
In-Reply-To: <KLEGKAGGLKLDJPCFGMDOOEMICAAA.giorgio.agugiaro@unipd.it>
Message-ID: <C1C9A1B0.9CED%ovv@hetnet.nl>

> From: "Giorgio Agugiaro"
> Date: Mon, 8 Jan 2007 15:58:48 +0100
> Subject: [Proj] UTM32N-GaussBoaga datum shift problems
...
> I have some troubles with datum-shift results using cs2cs.
...
> I calculated (and checked the results with other programs) the 7 parameters
> from the following test points:
> WGS84-UTM32N
> Northing    |   Easting | h_ell| Point_id
> -----------------------------------------
> 5022649.211  718871.227  52.537  #1000
...
> Roma40, Zone 1 (GaussBoaga)
> Northing    |    Easting  | h_orto | Point_id
> -------------------------------------------------------
> 5022670.5000  1718900.5000  12.00000 #1000
...
> In order to check the transformation I do:
> cs2cs -rsf %.4f +datum=WGS84 +proj=utm +zone=32 +north +unit=m +to
> +ellps=intl
> +proj=tmerc +lat_0=0.0 +lon_0=9.0 +k=0.9996 +x_0=1500000 +y=0.0 +unit=m
> +towgs84=-927.3934,-426.678,166.8859,-129.10138,-5.11282,-118.30878,65.
> 7674 mg84grid.txt
...
> Output is:
> 5022672.0592    1718901.5497 12.1290
...

Disturbing. I got x=1718900.9018, y=5022671.7300, h=12.0459 and there
shouldn't be any significant difference between my procedures and
proj/cs2cs.
Looking at the "other programs" values of 5022670.5000  1718900.5000
12.00000: I can't reproduce them either with the given information, not even
with the Italian Gauss-Boaga equations from Hirvonen instead of PROJ tmerc.

...
> On a side note, I used successfully cs2cs in a similar datum-shift with
> these test points and parameters:
> 
> Points
> AA   WGS84-UTM32N                 45 24 05.7680 N   11 52 02.5800 E   59.57
> Gauss Boaga Roma40           45 24 03.3760 N   11 52 03.3920 E
...
> calculated 7 parameters were (units as above):
> -135.9406,-28.3596,-10.6462,-0.24989,-2.48329,-1.57131,-15.6918

I got 45d 24m 03.3772s, 11d 52m 03.3812s, 59.5709 m
That differs by 0.238 m on the globe. Disturbing....

Returning to:
> I calculated (and checked the results with other programs) the 7 parameters
> from the following test points:
It is possible that the error in the closest fit of the calculated
transformation parameters is a bit larger than you hoped for.
But that is no explanation for the differences mentioned above.




From ovv at hetnet.nl  Tue Jan  9 10:47:01 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 09 Jan 2007 19:47:01 +0100
Subject: [Proj] Conversion to Swiss coordinates
In-Reply-To: <45A3B83B.4070302@slf.ch>
Message-ID: <C1C9A1B5.9CED%ovv@hetnet.nl>

> From: Mathias bavay
> Date: Tue, 09 Jan 2007 16:43:55 +0100
> Subject: [Proj] Conversion to Swiss coordinates

> I found in the epsg file the transformation for Swiss coordinates. I
> then tried to convert (47.38195,8.54879) (lat/long) to Swiss coordinates
> using the following command line:
> 
> echo "47.38195 8.54879" | cs2cs -r -s +proj=latlong +datum=WGS84 +to
> +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333
> +x_0=2600000 +y_0=1200000 +ellps=bessel
> +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs
> 
> Basically, everything after the "+to" is a cut and paste of the epsg
> file. But instead of (600920,228685) it gives me "1248494.59
> 2683831.35 -47.46"

Superficially I should say: the coordinates 600920, 228685 look like LV03
coordinates which has x0 = 600000; y0 = 200000;
See epsg init no. 21781.
But with these parameters I get 683748.143, 248341.745.
With the LV95 parameters (see epsg init 2056) I get the mentioned
1248494.593, 2683831.350, -47.460.



From John.C.Cartwright at noaa.gov  Fri Jan 12 15:18:39 2007
From: John.C.Cartwright at noaa.gov (John Cartwright)
Date: Fri, 12 Jan 2007 16:18:39 -0700
Subject: [Proj] implementing inverse equirectangular projection
Message-ID: <45A8174F.8080108@noaa.gov>

Hello All,

I'm trying to implement the inverse projection for the equirectangular 
(Plate Carree) projection.

The context for this is a map viewer that needs to convert from pixels 
to geographic decimal degrees w/ each mouse move.  I have the 
equirectangular coordinates  in meters for the map image.   The formula 
as described in USGS Bulletin 1532 or MathWorld 
(http://mathworld.wolfram.com/CylindricalEquidistantProjection.html) 
seems very simple, but I don't seem to be implementing it correctly.

It looks like it should be:

#lon,lat in radians; central meridian in decimal degrees
#R=radius of earth in meters; x,y= projected coordinates in meters
lon = math.radians(centralMeridian) + x
lat = y / R

However, the calculated longitude values are incorrect.  GDAL/OSR and 
proj4 (naturally) produce correct results. Here's the Well Known Text 
I'm using to define the projection:

'PROJCS["World_Plate_Carree", GEOGCS["WGS 84", DATUM["WGS_1984", 
SPHEROID["WGS_1984", 6378137.0, 298.257223563]], PRIMEM["Greenwich", 
0.0], UNIT["degree",0.017453292519943295]], 
PROJECTION["Equirectangular"], PARAMETER["false_easting",  0.0], 
PARAMETER["false_northing", 0.0], PARAMETER["Central_Meridian", -180.0], 
UNIT["Meter",1.0]]'

and this is the proj4 command I'm using to test:

cs2cs +proj=eqc +lon_0=-180 +datum=WGS84 +to  +proj=longlat +datum=WGS84


Can anyone help me out here?

Thanks so much!

-- john



From geldner.list.reg at gmx.net  Thu Jan 18 06:20:33 2007
From: geldner.list.reg at gmx.net (Lars Geldner)
Date: Thu, 18 Jan 2007 06:20:33 -0800 (PST)
Subject: [Proj] dmstor return negative value
Message-ID: <8431532.post@talk.nabble.com>


Dear all,

I'm transforming WGS84 coordinates into x/y coordinates of the UTM
projection.

The input WGS84 values have the following format, e.g. 8d29'30.74 as
longitude.

UTM Zone is 33.

The first step is to transform the DMS data (8d29'30.74 as longitude) to
radian data using dmstor function.
The second step is to transform the radian data (returned by dmstor) to UTM
using pj_fwd function.

The result of the steps mentioned above is a negative value (-481324.644767)
returned by pj_fwd.

What indicates the UTM x-value -481324.644767 of the WGS84 longitude
8d29'30.74?

The inverse transformation of -481324.644767 returns a longitude of
0d0'0.085"E but not 8d29'30.74.

Any help is appreciated!

TIA,

Lars Geldner
-- 
View this message in context: http://www.nabble.com/dmstor-return-negative-value-tf3034418.html#a8431532
Sent from the PROJ.4 mailing list archive at Nabble.com.



From ovv at hetnet.nl  Thu Jan 18 07:35:45 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Thu, 18 Jan 2007 16:35:45 +0100
Subject: [Proj] dmstor return negative value
In-Reply-To: <8431532.post@talk.nabble.com>
Message-ID: <C1D55261.A077%ovv@hetnet.nl>

> From: Lars Geldner
> Date: Thu, 18 Jan 2007 06:20:33 -0800 (PST)
> Subject: [Proj] dmstor return negative value

> I'm transforming WGS84 coordinates into x/y coordinates of the UTM
> projection.
> The input WGS84 values have the following format, e.g. 8d29'30.74 as
> longitude.
> UTM Zone is 33.
> The first step is to transform the DMS data (8d29'30.74 as longitude) to
> radian data using dmstor function.
> The second step is to transform the radian data (returned by dmstor) to UTM
> using pj_fwd function.
> The result of the steps mentioned above is a negative value (-481324.644767)
> returned by pj_fwd.
.....
My guess: don't convert lat, lon to radians or set proj to accepting radians
instead of degrees. Seems to be mentioned in 'the' manual.



From jagoncal at fc.up.pt  Thu Jan 18 07:57:24 2007
From: jagoncal at fc.up.pt (=?ISO-8859-1?Q?Jos=E9_Alberto_Gon=E7alves?=)
Date: Thu, 18 Jan 2007 15:57:24 +0000
Subject: [Proj] dmstor return negative value
In-Reply-To: <8431532.post@talk.nabble.com>
References: <8431532.post@talk.nabble.com>
Message-ID: <45AF98E4.3020606@fc.up.pt>

Your longitude (8d... East) is in Zone 32. Zone 33 goes from 12  to 18 
degrees East longitude, so it is likely that you get a negative X when 
you project your point in zone 33.

Regards


Jose Gonçalves






Lars Geldner wrote:

>Dear all,
>
>I'm transforming WGS84 coordinates into x/y coordinates of the UTM
>projection.
>
>The input WGS84 values have the following format, e.g. 8d29'30.74 as
>longitude.
>
>UTM Zone is 33.
>
>The first step is to transform the DMS data (8d29'30.74 as longitude) to
>radian data using dmstor function.
>The second step is to transform the radian data (returned by dmstor) to UTM
>using pj_fwd function.
>
>The result of the steps mentioned above is a negative value (-481324.644767)
>returned by pj_fwd.
>
>What indicates the UTM x-value -481324.644767 of the WGS84 longitude
>8d29'30.74?
>
>The inverse transformation of -481324.644767 returns a longitude of
>0d0'0.085"E but not 8d29'30.74.
>
>Any help is appreciated!
>
>TIA,
>
>Lars Geldner
>



From geldner.list.reg at gmx.net  Fri Jan 19 00:10:45 2007
From: geldner.list.reg at gmx.net (Lars Geldner)
Date: Fri, 19 Jan 2007 00:10:45 -0800 (PST)
Subject: [Proj] dmstor return negative value
In-Reply-To: <45AF98E4.3020606@fc.up.pt>
References: <8431532.post@talk.nabble.com> <45AF98E4.3020606@fc.up.pt>
Message-ID: <8445519.post@talk.nabble.com>


Dear Jose,

you're right, the longitude is in zone 32. Thus, I changed my program to the
following:

static char *parms[] = 
{
	"proj=utm",
	"zone=32u",
	"datum=WGS84"
};

My DMS longitude is 8d29'30.74. Starting from this longitude my task is to
add an x distance in UTM projection. After that, the task is to re-transform
the x value of UTM projection back to DMS (WGS84).

At first, I used dmstor function:
data.u = dmstor(lPos, 0); // lpos is 8d29'30.74

Then I used the proj forward transform function:
data = pj_fwd(data, ref);

Now, data.u is negative: data.u is -90178.546738 (Zone 32 used!)

For testing issues, I did not add an x distance in UTM projection but
re-transformed data.u (x) back to DMS (WGS84). The result has to be
8d29'30.74:

in.u = data.u;
in = pj_inv(in, ref); // re-transform
char dms_x[20];
rtodms(dms_x, in.u, 'E', 'W');
printf("dms_x is: %s\n", dms_x);

OUTPUT: dms_x is: 0d0'0.001"

My question is: Why I'm getting 0d0'0.001" instead of 8d29'30.74? I can't
face it!
The same proceeding works fine with the latitude of 53d55'49.03! My problem
is the longitude.

What is the correct proceeding to get the longitude 8d29'30.74?

Thanks,

Lars


José Alberto Gonçalves wrote:
> 
> Your longitude (8d... East) is in Zone 32. Zone 33 goes from 12  to 18 
> degrees East longitude, so it is likely that you get a negative X when 
> you project your point in zone 33.
> 
> Regards
> 
> 
> Jose Gonçalves
> 
> 
> 
> 
> 
> 
> Lars Geldner wrote:
> 
>>Dear all,
>>
>>I'm transforming WGS84 coordinates into x/y coordinates of the UTM
>>projection.
>>
>>The input WGS84 values have the following format, e.g. 8d29'30.74 as
>>longitude.
>>
>>UTM Zone is 33.
>>
>>The first step is to transform the DMS data (8d29'30.74 as longitude) to
>>radian data using dmstor function.
>>The second step is to transform the radian data (returned by dmstor) to
UTM
>>using pj_fwd function.
>>
>>The result of the steps mentioned above is a negative value
(-481324.644767)
>>returned by pj_fwd.
>>
>>What indicates the UTM x-value -481324.644767 of the WGS84 longitude
>>8d29'30.74?
>>
>>The inverse transformation of -481324.644767 returns a longitude of
>>0d0'0.085"E but not 8d29'30.74.
>>
>>Any help is appreciated!
>>
>>TIA,
>>
>>Lars Geldner
>>
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 

-- 
View this message in context: http://www.nabble.com/dmstor-return-negative-value-tf3034418.html#a8445519
Sent from the PROJ.4 mailing list archive at Nabble.com.




From EMiller at dfg.ca.gov  Fri Jan 19 09:48:58 2007
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Fri, 19 Jan 2007 09:48:58 -0800
Subject: [Proj] dmstor return negative value
In-Reply-To: <8445519.post@talk.nabble.com>
References: <8431532.post@talk.nabble.com> <45AF98E4.3020606@fc.up.pt>
	<8445519.post@talk.nabble.com>
Message-ID: <45B0940B.95FD.00E4.0@dfg.ca.gov>

PROJ doesn't know about UTM grid zones.  So, the zone should just be "32."  However, the trailing letter is probably ignored during parsing.  You haven't provided a latitude for where you say the program fails.  If you provide a complete example, it will be easier to diagnose your error.  Below is a sample that may help you.

#include <stdio.h>
#include <stddef.h>
#include "projects.h"
#include "proj_api.h"

int main()
{
	char* params[] = {"proj=utm", "zone=32", "datum=WGS84"};
	const char *longitude = "8d29'30.74E";
	const char *latitude = "45N";
	projPJ utm32 = pj_init(sizeof(params)/ sizeof(params[0]), params);
	projLP lp;
	projXY xy;
	lp.u = dmstor(longitude, NULL);
	lp.v = dmstor(latitude, NULL);
	xy = pj_fwd(lp, utm32);
	printf("src: (%s, %s)\nradians: (%f, %f)\nutm: (%f, %f)",
		longitude, latitude, lp.u, lp.v, xy.u, xy.v);
	return 0;
}

>>> On 1/19/2007 at 12:10 AM, Lars Geldner <geldner.list.reg at gmx.net> wrote:

> Dear Jose,
> 
> you're right, the longitude is in zone 32. Thus, I changed my program to the
> following:
> 
> static char *parms[] = 
> {
> 	"proj=utm",
> 	"zone=32u",
> 	"datum=WGS84"
> };
> 
> My DMS longitude is 8d29'30.74. Starting from this longitude my task is to
> add an x distance in UTM projection. After that, the task is to re-transform
> the x value of UTM projection back to DMS (WGS84).
> 
> At first, I used dmstor function:
> data.u = dmstor(lPos, 0); // lpos is 8d29'30.74
> 
> Then I used the proj forward transform function:
> data = pj_fwd(data, ref);
> 
> Now, data.u is negative: data.u is -90178.546738 (Zone 32 used!)
> 
> For testing issues, I did not add an x distance in UTM projection but
> re-transformed data.u (x) back to DMS (WGS84). The result has to be
> 8d29'30.74:
> 
> in.u = data.u;
> in = pj_inv(in, ref); // re-transform
> char dms_x[20];
> rtodms(dms_x, in.u, 'E', 'W');
> printf("dms_x is: %s\n", dms_x);
> 
> OUTPUT: dms_x is: 0d0'0.001"
> 
> My question is: Why I'm getting 0d0'0.001" instead of 8d29'30.74? I can't
> face it!
> The same proceeding works fine with the latitude of 53d55'49.03! My problem
> is the longitude.
> 
> What is the correct proceeding to get the longitude 8d29'30.74?
> 
> Thanks,
> 
> Lars
> 
> 
> José Alberto Gonçalves wrote:
>> 
>> Your longitude (8d... East) is in Zone 32. Zone 33 goes from 12  to 18 
>> degrees East longitude, so it is likely that you get a negative X when 
>> you project your point in zone 33.
>> 
>> Regards
>> 
>> 
>> Jose Gonçalves
>> 
>> 
>> 
>> 
>> 
>> 
>> Lars Geldner wrote:
>> 
>>>Dear all,
>>>
>>>I'm transforming WGS84 coordinates into x/y coordinates of the UTM
>>>projection.
>>>
>>>The input WGS84 values have the following format, e.g. 8d29'30.74 as
>>>longitude.
>>>
>>>UTM Zone is 33.
>>>
>>>The first step is to transform the DMS data (8d29'30.74 as longitude) to
>>>radian data using dmstor function.
>>>The second step is to transform the radian data (returned by dmstor) to
> UTM
>>>using pj_fwd function.
>>>
>>>The result of the steps mentioned above is a negative value
> (-481324.644767)
>>>returned by pj_fwd.
>>>
>>>What indicates the UTM x-value -481324.644767 of the WGS84 longitude
>>>8d29'30.74?
>>>
>>>The inverse transformation of -481324.644767 returns a longitude of
>>>0d0'0.085"E but not 8d29'30.74.
>>>
>>>Any help is appreciated!
>>>
>>>TIA,
>>>
>>>Lars Geldner
>>>
>> 
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org 
>> http://lists.maptools.org/mailman/listinfo/proj 
>> 
>> 
> 
> -- 
> View this message in context: 
> http://www.nabble.com/dmstor-return-negative-value-tf3034418.html#a8445519 
> Sent from the PROJ.4 mailing list archive at Nabble.com.
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj




From ovv at hetnet.nl  Fri Jan 19 13:27:27 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Fri, 19 Jan 2007 22:27:27 +0100
Subject: [Proj] dmstor return negative value
In-Reply-To: <45B0940B.95FD.00E4.0@dfg.ca.gov>
Message-ID: <C1D6F64E.A114%ovv@hetnet.nl>

> From: "Eric Miller"
> Date: Fri, 19 Jan 2007 09:48:58 -0800
> Subject: Re: [Proj] dmstor return negative value

> PROJ doesn't know about UTM grid zones.  So, the zone should just be "32."
> However, the trailing letter is probably ignored during parsing.  You haven't
> provided a latitude for where you say the program fails.  If you provide a
> complete example, it will be easier to diagnose your error.  Below is a sample
> that may help you.

Mr. Geldner did supply a latitude in his second letter: 53d55'49.03.
But even with this information I was not able to reproduce his answers.
I did get some negative eastings if I gave the projection engine a radian
longitude where it expected a degrees longitude, and also by setting x0 to 0
instead of the UTM value of 5e5.
It is possible that the problem at hand is a direct result of using parts of
the PROJ package instead of the whole. Initializations and
pre/postprocessing could be missed or mutilated.




From oliver.eichler at dspsolutions.de  Mon Jan 22 03:14:10 2007
From: oliver.eichler at dspsolutions.de (Oliver Eichler)
Date: Mon, 22 Jan 2007 12:14:10 +0100
Subject: [Proj] C API to calculate distances
Message-ID: <45B49C82.3090604@dspsolutions.de>


Hi,

I wonder if there is a C API to calculate the real great circle distance
of two points on a WGS84 ellipsoid. I know there is "geod" on the
command line. I had a look at it's source code however this looked quite
complicated. As this must be a standard problem isn't there something like;

distance(p1,p1, d, dir)

p1:  point 1
p2:  point 2
d:   distance
dir: direction in degrees





Oliver


From geraldi.evenden at gmail.com  Mon Jan 22 08:14:26 2007
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 22 Jan 2007 11:14:26 -0500
Subject: [Proj] C API to calculate distances
In-Reply-To: <45B49C82.3090604@dspsolutions.de>
References: <45B49C82.3090604@dspsolutions.de>
Message-ID: <200701221114.27134.geraldi.evenden@gmail.com>

On Monday 22 January 2007 6:14 am, Oliver Eichler wrote:
> Hi,
>
> I wonder if there is a C API to calculate the real great circle distance
> of two points on a WGS84 ellipsoid. I know there is "geod" on the
> command line. I had a look at it's source code however this looked quite
> complicated. As this must be a standard problem isn't there something like;
>
> distance(p1,p1, d, dir)
>
> p1:  point 1
> p2:  point 2
> d:   distance
> dir: direction in degrees

For the "inverse" problem: input is geographic coordinates for each point 
along with all the ellipsoid parameters: equitorial radius and one of the 
ellipsoid parameters (eccentricity, flattening, etc.).

Return value is distance and the azimuths at each of the points.

An alternative is the FORTRAN procedures available from NGS but they require 
the same arguments and return the same (slightly more accurate) results.

It is unlikely that any general library would supply a procedure just 
configured for one ellipsoid.
-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939)  British psychologist


From oliver.eichler at dspsolutions.de  Mon Jan 22 08:51:07 2007
From: oliver.eichler at dspsolutions.de (Oliver Eichler)
Date: Mon, 22 Jan 2007 17:51:07 +0100
Subject: [Proj] C API to calculate distances
In-Reply-To: <200701221114.27134.geraldi.evenden@gmail.com>
References: <45B49C82.3090604@dspsolutions.de>
	<200701221114.27134.geraldi.evenden@gmail.com>
Message-ID: <45B4EB7B.30501@dspsolutions.de>

Gerald I. Evenden wrote:
> On Monday 22 January 2007 6:14 am, Oliver Eichler wrote:
>> Hi,
>>
>> I wonder if there is a C API to calculate the real great circle distance
>> of two points on a WGS84 ellipsoid. I know there is "geod" on the
>> command line. I had a look at it's source code however this looked quite
>> complicated. As this must be a standard problem isn't there something like;
>>
>> distance(p1,p1, d, dir)
>>
>> p1:  point 1
>> p2:  point 2
>> d:   distance
>> dir: direction in degrees
> 
> For the "inverse" problem: input is geographic coordinates for each point 
> along with all the ellipsoid parameters: equitorial radius and one of the 
> ellipsoid parameters (eccentricity, flattening, etc.).
> 
> Return value is distance and the azimuths at each of the points.

Yeah, that's what I need. I guess my pseudo code was misleading. Does
proj4 implement such an API? Or do I have to make my own C function of
Vincenty’s formula as described at
'http://www.movable-type.co.uk/scripts/LatLongVincenty.html' ?


Oliver
> 
> An alternative is the FORTRAN procedures available from NGS but they require 
> the same arguments and return the same (slightly more accurate) results.
> 
> It is unlikely that any general library would supply a procedure just 
> configured for one ellipsoid.






From mfinn at usgs.gov  Mon Jan 22 09:22:37 2007
From: mfinn at usgs.gov (Michael P Finn)
Date: Mon, 22 Jan 2007 11:22:37 -0600
Subject: [Proj] C API to calculate distances
In-Reply-To: <45B49C82.3090604@dspsolutions.de>
Message-ID: <OF3ACEC842.A2E24A29-ON8625726B.005F2079-8625726B.005F73E2@usgs.gov>

Oliver,

Sounds like you want to use the Vincinty calculations for geodesic 
distance. Try one of these sites: 
http://www.movable-type.co.uk/scripts/LatLongVincenty.html or 
http://www.ga.gov.au/geodesy/datums/vincenty_inverse.jsp


Mike



Michael P. Finn
Research Cartographer
National Geospatial Technical Operations Center
U. S. Geological Survey
Rolla, MO

(573) 308-3931
mfinn at usgs.gov 

http://carto-research.er.usgs.gov/







Oliver Eichler <oliver.eichler at dspsolutions.de> 
Sent by: proj-bounces at lists.maptools.org
01/22/2007 05:14 AM
Please respond to
oliver.eichler at dspsolutions.de; Please respond to
"PROJ.4 and general Projections Discussions"    <proj at lists.maptools.org>


To
proj at lists.maptools.org
cc

Subject
[Proj] C API to calculate distances







Hi,

I wonder if there is a C API to calculate the real great circle distance
of two points on a WGS84 ellipsoid. I know there is "geod" on the
command line. I had a look at it's source code however this looked quite
complicated. As this must be a standard problem isn't there something 
like;

distance(p1,p1, d, dir)

p1:  point 1
p2:  point 2
d:   distance
dir: direction in degrees





Oliver
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070122/e1dd42a6/attachment.html>

From yrusinov at gmail.com  Tue Jan 23 06:13:45 2007
From: yrusinov at gmail.com (Yuriy Rusinov)
Date: Tue, 23 Jan 2007 17:13:45 +0300
Subject: [Proj] Coordinate transformation from meters to longitude/latitude
Message-ID: <1ac023f40701230613w5007858eoe9aa6472ab37539d@mail.gmail.com>

Hello !

I want to transform some coordinates from its own projection
invproj +proj=tmerc +lat_0=0 +lon_0=38.99999952571766 +k=1.000000 +x_0=0
+y_0=0 +ellps=WGS84 +units=m +no_defs
7.41094e+06 6.16614e+06
Results are
135d51'17.113"W 234d40'40.974"N
These data exceeds latitude limits and no errors, no asterisks in output. Is
this error and where it can be contains ?


-- 
Best regards,
Sincerely yours,
Yuriy Rusinov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070123/8de61691/attachment.html>

From yrusinov at gmail.com  Tue Jan 23 06:45:29 2007
From: yrusinov at gmail.com (Yuriy Rusinov)
Date: Tue, 23 Jan 2007 17:45:29 +0300
Subject: [Proj] Coordinate transformation from meters to longitude/latitude
Message-ID: <1ac023f40701230645s10716e34t54b603db6561c805@mail.gmail.com>

Hello !

I want to transform some cartesian coordinates from its own projection
invproj +proj=tmerc +lat_0=0 +lon_0=38.99999952571766 +k=1.000000 +x_0=0
+y_0=0 +ellps=WGS84 +units=m +no_defs
7.41094e+06 6.16614e+06
Results are
135d51'17.113"W 234d40'40.974"N
These data exceeds latitude limits and no errors, no asterisks in output. Is
this error and where it can be contains ?  Any ideas ? Thanks in advance.


-- 
Best regards,
Sincerely yours,
Yuriy Rusinov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070123/9d167768/attachment.html>

From warmerdam at pobox.com  Tue Jan 23 08:27:07 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 23 Jan 2007 11:27:07 -0500
Subject: [Proj] Coordinate transformation from meters to longitude/latitude
In-Reply-To: <1ac023f40701230645s10716e34t54b603db6561c805@mail.gmail.com>
References: <1ac023f40701230645s10716e34t54b603db6561c805@mail.gmail.com>
Message-ID: <45B6375B.9000508@pobox.com>

Yuriy Rusinov wrote:
> Hello !
> 
> I want to transform some cartesian coordinates from its own projection
> invproj +proj=tmerc +lat_0=0 +lon_0=38.99999952571766 +k=1.000000 +x_0=0 
> +y_0=0 +ellps=WGS84 +units=m +no_defs
> 7.41094e+06 6.16614e+06
> Results are
> 135d51'17.113"W 234d40'40.974"N
> These data exceeds latitude limits and no errors, no asterisks in 
> output. Is this error and where it can be contains ?  Any ideas ? Thanks 
> in advance.

Yuriy,

I see the same result.  I must confess to not understanding the math
involved, but Transverse Mercator is a projection without a well
defined boundary at which it becomes invalid.  Instead as you go further
and further from the central meridian things become more distorted and
bizarre effects accumulate.  And 7 million meters east of the central
meridian is a *long* ways.

I think the lesson is that you can't just throw locations several million
meters from the central meridian into TM and expect meaningful results.
But worse, the projection itself has no way of indicating it's reduced
meaningfulness.

Hopefully Gerald will give a less "black box" oriented answer.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From ed at topozone.com  Tue Jan 23 09:24:27 2007
From: ed at topozone.com (Ed McNierney)
Date: Tue, 23 Jan 2007 12:24:27 -0500
Subject: [Proj] Coordinate transformation from meters to longitude/latitude
In-Reply-To: <45B6375B.9000508@pobox.com>
Message-ID: <C1DBAEFB.1BFAE%ed@topozone.com>

Yuriy -

Frank's quite correct, and I think the source of the problem is some very
strange input data.

You're describing a projection centered on the Equator at 40 degrees East
longitude.  Your input point is 7 million meters east of 40 degrees East and
6 million meters north of the Equator, as measured in your projected
coordinate system.  That's a very strange place to be in a transverse
Mercator projection.

Do you have a description of where (on the Earth) you think that input point
is supposed to be?

     - Ed


-- 
Ed McNierney
President and Chief Mapmaker
Maps a la carte, Inc. / TopoZone.com
73 Princeton Street, Suite 305
North Chelmsford, MA  01863
Phone: (978) 251-4242
Fax: (978) 251-1396
ed at topozone.com

> From: Frank Warmerdam <warmerdam at pobox.com>
> Reply-To: "PROJ.4 and general Projections Discussions"
> <proj at lists.maptools.org>
> Date: Tue, 23 Jan 2007 11:27:07 -0500
> To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
> Subject: Re: [Proj] Coordinate transformation from meters to
> longitude/latitude
> 
> Yuriy Rusinov wrote:
>> Hello !
>> 
>> I want to transform some cartesian coordinates from its own projection
>> invproj +proj=tmerc +lat_0=0 +lon_0=38.99999952571766 +k=1.000000 +x_0=0
>> +y_0=0 +ellps=WGS84 +units=m +no_defs
>> 7.41094e+06 6.16614e+06
>> Results are
>> 135d51'17.113"W 234d40'40.974"N
>> These data exceeds latitude limits and no errors, no asterisks in
>> output. Is this error and where it can be contains ?  Any ideas ? Thanks
>> in advance.
> 
> Yuriy,
> 
> I see the same result.  I must confess to not understanding the math
> involved, but Transverse Mercator is a projection without a well
> defined boundary at which it becomes invalid.  Instead as you go further
> and further from the central meridian things become more distorted and
> bizarre effects accumulate.  And 7 million meters east of the central
> meridian is a *long* ways.
> 
> I think the lesson is that you can't just throw locations several million
> meters from the central meridian into TM and expect meaningful results.
> But worse, the projection itself has no way of indicating it's reduced
> meaningfulness.
> 
> Hopefully Gerald will give a less "black box" oriented answer.
> 
> Best regards,
> -- 
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | President OSGeo, http://osgeo.org
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From ovv at hetnet.nl  Tue Jan 23 10:35:41 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 23 Jan 2007 19:35:41 +0100
Subject: [Proj] Coordinate transformation from meters to longitude/latitude
In-Reply-To: <1ac023f40701230645s10716e34t54b603db6561c805@mail.gmail.com>
Message-ID: <C1DC140D.A2C4%ovv@hetnet.nl>

> From: "Yuriy Rusinov"
> Date: Tue, 23 Jan 2007 17:45:29 +0300
> Subject: [Proj] Coordinate transformation from meters to longitude/latitude

> I want to transform some cartesian coordinates from its own projection
> invproj +proj=tmerc +lat_0=0 +lon_0=38.99999952571766 +k=1.000000 +x_0=0
> +y_0=0 +ellps=WGS84 +units=m +no_defs
> 7.41094e+06 6.16614e+06
> Results are 
> 135d51'17.113"W 234d40'40.974"N
> These data exceeds latitude limits and no errors, no asterisks in output. Is
> this error and where it can be contains ?  Any ideas ? Thanks in advance.

With my complex transverse Mercator (impoved Dozier):
(assuming x=easting, y=northing):

x=7.41094e6; y=6.16614e6;
// WGS84
lat0=0; lon0=38.99999952571766; x0=0; y0=0; k0=1;
it_type=1; // iteration type
-> lat=27.998246; lon=107.510519 deg

Back: 
lat=27.998245807358206; lon=107.51051923345856;
etc.
-> x=7410940.0000; y=6166140.0000

For the "ultrawide" or "exact" transverse Mercator projection the input data
are not so strange.
But since more "common" TM functions like tmerc work with approximations,
they have a very limited range. Going from latitude, longitude to easting,
northing, the developer could check for an excessive (e.g. >7 deg) departure
from the central meridian, but going from easting, northing to latitude,
longitude, it's not so easy to check for valid input.





From gok at aerometric-ak.com  Tue Jan 23 10:40:42 2007
From: gok at aerometric-ak.com (Gennady Khokhorin)
Date: Tue, 23 Jan 2007 09:40:42 -0900
Subject: [Proj] what is wrong with unit Foot?
Message-ID: <3054411AF4728548AD6D7137190D56B302B578C0@admin1.aeromap.com>

Hello, PROJ!

Was testing gdalwarp converting images from one coord. system to another and found that using WKT
in form of esri' .prj file is producing Unknown units on result image if .prj contains UNIT["Foot_US", 0.3048].
As a result it is interpreted as a meters and output image seats in wrong position.
Using projections with units Meter is fine.

Command line for the test:
gdalwarp.exe -rn -co "INTERLEAVE=PIXEL" -co "COMPRESS=LZW" -t_srs "ESRI::c:\shared\NAD 1983 StatePlane Alaska 4 FIPS 5004 (Feet).prj" -dstnodata 255 i61147a1_utm.tif i61147a1_asp.tif

Test image i61147a1_utm.tif (36Mb): ftp://aerometric-ak:amak2014 at ftp.aerometric-ak.com (gok/ImageProcessing folder)

Did somebody experienced the same problem? Is there any work around or it is just a bug/limitation?

Thanks in advance,
Gennady




From geraldi.evenden at gmail.com  Tue Jan 23 11:02:29 2007
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Tue, 23 Jan 2007 14:02:29 -0500
Subject: [Proj] Coordinate transformation from meters to longitude/latitude
In-Reply-To: <45B6375B.9000508@pobox.com>
References: <1ac023f40701230645s10716e34t54b603db6561c805@mail.gmail.com>
	<45B6375B.9000508@pobox.com>
Message-ID: <200701231402.29646.geraldi.evenden@gmail.com>

On Tuesday 23 January 2007 11:27 am, Frank Warmerdam wrote:
> Yuriy Rusinov wrote:
> > Hello !
> >
> > I want to transform some cartesian coordinates from its own projection
> > invproj +proj=tmerc +lat_0=0 +lon_0=38.99999952571766 +k=1.000000 +x_0=0
> > +y_0=0 +ellps=WGS84 +units=m +no_defs
> > 7.41094e+06 6.16614e+06
> > Results are
> > 135d51'17.113"W 234d40'40.974"N
> > These data exceeds latitude limits and no errors, no asterisks in
> > output. Is this error and where it can be contains ?  Any ideas ? Thanks
> > in advance.
>
> Yuriy,
>
> I see the same result.  I must confess to not understanding the math
> involved, but Transverse Mercator is a projection without a well
> defined boundary at which it becomes invalid.  Instead as you go further
> and further from the central meridian things become more distorted and
> bizarre effects accumulate.  And 7 million meters east of the central
> meridian is a *long* ways.
>
> I think the lesson is that you can't just throw locations several million
> meters from the central meridian into TM and expect meaningful results.
> But worse, the projection itself has no way of indicating it's reduced
> meaningfulness.
>
> Hopefully Gerald will give a less "black box" oriented answer.

The reason for the failure is quite simple and harks back to a long thread 
related to the full earth Transverse Mercator projection.

Evaluation of both the forward and inverse of the Transverse Mercator used in 
lproj and its predecessors is a polynomial approximation.  As with many of 
these types of solutions there is a limited range where arguments produce 
valid results.  In geographic coordinates, tmerc longitude is limited to the 
range of about ±5° of the central meridian for acceptably precise results.  
At the equator 5° is about 560,000m and decreases as one proceeds N-S from 
the equator.

In the above example, the easting limit was exceeded by 10 times and thus went 
well beyond the capability of the inverse polynomial.  Note also that the 
polynomials are bivariate (functions of both x and y or lat and lon) so that 
an range excess in one coordinate will affect both axis.

Except for limiting the range of longitude internally to 180° and that the 
absolute value of latitude is less than or equal to 90° there is little range 
checking of input arguments.  Virtually none for the inverse cases unless 
they produce failure in the math operations such as non-convergent 
iterations.  In the tmerc case there definitely no check.

The problem would be quite different if the user had used a spherical earth 
where a closed form equation if employed and the only problems that would 
appear when longitude approaches 180°.
-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939)  British psychologist



From geraldi.evenden at gmail.com  Tue Jan 23 11:15:58 2007
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Tue, 23 Jan 2007 14:15:58 -0500
Subject: [Proj] what is wrong with unit Foot?
In-Reply-To: <3054411AF4728548AD6D7137190D56B302B578C0@admin1.aeromap.com>
References: <3054411AF4728548AD6D7137190D56B302B578C0@admin1.aeromap.com>
Message-ID: <200701231415.58335.geraldi.evenden@gmail.com>

On Tuesday 23 January 2007 1:40 pm, Gennady Khokhorin wrote:
> Hello, PROJ!
>
> Was testing gdalwarp converting images from one coord. system to another
> and found that using WKT in form of esri' .prj file is producing Unknown
> units on result image if .prj contains UNIT["Foot_US", 0.3048]. As a result
> it is interpreted as a meters and output image seats in wrong position.
> Using projections with units Meter is fine.

NOTE: the US foot used in US surveying is: 0.304800609601219m

The 0.3048 value is a "International" foot based upon the exact 2.54 cm/inch
standard.

The above may not solve your problems but it is important if one is dealing 
with precise cadastral surveying.  I spent a long time learning this fact 
when first trying to resolve differences in the results of the initial proj 
software and benchmark values many years ago.  :-(

> Command line for the test:
> gdalwarp.exe -rn -co "INTERLEAVE=PIXEL" -co "COMPRESS=LZW" -t_srs
> "ESRI::c:\shared\NAD 1983 StatePlane Alaska 4 FIPS 5004 (Feet).prj"
> -dstnodata 255 i61147a1_utm.tif i61147a1_asp.tif
>
> Test image i61147a1_utm.tif (36Mb):
> ftp://aerometric-ak:amak2014 at ftp.aerometric-ak.com (gok/ImageProcessing
> folder)
>
> Did somebody experienced the same problem? Is there any work around or it
> is just a bug/limitation?
>
> Thanks in advance,
> Gennady
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939)  British psychologist


From Maxc at spicergroup.com  Fri Jan 26 16:59:58 2007
From: Maxc at spicergroup.com (Clever, Max)
Date: Fri, 26 Jan 2007 19:59:58 -0500
Subject: [Proj] URGENT Non-existent Projection Definition (Oblique Mercator
	RSO Natural Origin)
Message-ID: <32D23697A962F448A53443A717E87E410EA1A4@skywalker.spicergroup.com>

Hello everyone,

 

I am emailing to push for the addition of the coordinate system known as
the Rectified Skew Orthomorphic Oblique Mercator Natural Origin
(sometimes known as Hotine Oblique Mercator Natural Origin).  I have
come to the conclusion that this projection is not capable of being
defined properly in the current version of Proj.  This email is very
urgent as it applies to not only Alaska State Plane zone 1 but also
Michigan Georef (the most widely used projection for freely available
data in the state of Michigan).  This projection problem has been posted
multiple times over the course of more than 2 years and has still not
been fixed.  If you read through prior posts, you will see that a proper
solution has never been developed although Melita Kennedy has made it
known that ArcMap does support this projection.  Additionally, I have
supplied the code for this transformation in the form of Visual Basic
Code on a previous post which is not as accurate as it could be with the
proper help from this group.  The transformation algorithm is available
via EPSG's website but may contain a small error for the computation of
gamma or some other parameter.  Please note the urgency of this problem,
as this deficiency hinders the users of most open source mapping
software (Mapguide and Mapserver) for anyone in Michigan or Alaska.
Below is an outline of the correct transformation of an example
coordinate and also the incorrect transformation results from using
proj. 

 

Michigan Georef Meters as Defined in GPS Pathfinder Office (Uses a
Correct Transformation)

Datum Name= NAD 1983 (Conus)

Datum Method= Molodensky

Projection= Oblique Mercator Angle (RSO)

Positive Coordinate Direction= North and East

Central Latitude= 45Deg 18Min 33Sec North

Central Longitude= 86Deg 00Min 00Sec West

False Northing(meters)= -4354009.816

False Easting(meters)= 2546731.496

Scale Factor= 0.9996

Azimuth in Seconds= 1214120

Azimuth located at center of projection 

Origin located at Equator

 

Point 1 Georef Meters

665104.166 x correct

341261.925 y correct

 

Point 2 Georef Meters

662000.00 x correct

341000.00 y correct

 

Point 1 State Plane South Meters

4033461.471 x correct

233802.762 y correct

 

Point 2 State Plane South Meters

4030351.750 x correct

233602.528 y correct

 

Transformation using Autodesk Map 3D 2007 (Also uses a correct
transformation)

I imported a shapefile with the same 2 Georef Coordinates as the above
example.

The shapefile that was imported was defined according to Autodesk as
MI83-OB and transformed into the Michigan State Plane South Meters
Projection (MI83-S) and it also gave me the correct coordinates.

 

Point 1 State Plane South Meters

4033461.471 x correct

233802.762 y correct

 

Point 2 State Plane South Meters

4030351.750 x correct

233602.528 y correct

 

*Proj4 attempted RSO natural origin projection definitions

 

Michigan State Plane South Meters

This is the definition that I used to project my Michigan Georef Data
to.  Please also note that I changed the false easting (+x_0) to 4000000
(correct) instead of 3999999.99999###..(wrong false easting unless the
small variation is making up for something that happens in this
projection engine)

 

+proj=lcc +lat_1=43.66666666666667 +lat_2=42.1 +lat_0=41.5
+lon_0=-84.36666666666667 +x_0=4000000.0 +y_0=0 +ellps=GRS80
+datum=NAD83 +units=m

 

I used a few different variations of the omerc projection to try to
represent a natural origin RSO properly but could not get it to work
right.  I think this is because Proj does not support natural origins.
(Origin located at Equator)

 

*Here are my CS2CS point transformation examples and results of two
forward examples and two reverse examples

 

*This example has the parameter +no_uoff applied to the georef
definition

cs2cs +proj=omerc +k_0=0.9996 +alpha=337.25555555555556
+lat_0=45.30916666666667 +lonc=86.00000000000000 +no_uoff
+x_0=2546731.496 +y_0=-4354009.816 +ellps=GRS80 +datum=NAD83 +units=m
+to +proj=lcc +lat_1=43.66666666666667 +lat_2=42.1 +lat_0=41.5
+lon_0=-84.36666666666667 +x_0=4000000.0 +y_0=0 +ellps=GRS80
+datum=NAD83 +units=m

665104.166 341261.925

10038527.39 10152300.28

 

*This example does not have the parameter +no_uoff applied

cs2cs +proj=omerc +k_0=0.9996 +alpha=337.25555555555556
+lat_0=45.30916666666667 +lonc=86.00000000000000 +x_0=2546731.496
+y_0=-4354009.816 +ellps=GRS80 +datum=NAD83 +units=m +to +proj=lcc
+lat_1=43.66666666666667 +lat_2=42.1 +lat_0=41.5
+lon_0=-84.36666666666667 +x_0=4000000.0 +y_0=0 +ellps=GRS80
+datum=NAD83 +units=m

665104.166 341261.925

6630581.93 5400202.21

 

*This reverse example does not have the parameter +no_uoff applied

cs2cs +proj=lcc +lat_1=43.66666666666667 +lat_2=42.1 +lat_0=41.5
+lon_0=-84.36666666666667 +x_0=4000000.0 +y_0=0 +ellps=GRS80
+datum=NAD83 +units=m +to +proj=omerc +k_0=0.9996
+alpha=337.25555555555556 +lat_0=45.30916666666667
+lonc=86.00000000000000 +x_0=2546731.496 +y_0=-4354009.816 +ellps=GRS80
+datum=NAD83 +units=m

4033461.471 233802.762

238971.78 5627717.79

 

*This reverse example has the parameter +no_uoff applied (it apparently
doesn't matter when projecting TO oblique mercator)

cs2cs +proj=lcc +lat_1=43.66666666666667 +lat_2=42.1 +lat_0=41.5
+lon_0=-84.36666666666667 +x_0=4000000.0 +y_0=0 +no_uoff +ellps=GRS80
+datum=NAD83 +units=m +to +proj=omerc +k_0=0.9996
+alpha=337.25555555555556 +lat_0=45.30916666666667
+lonc=86.00000000000000 +x_0=2546731.496 +y_0=-4354009.816 +ellps=GRS80
+datum=NAD83 +units=m

4033461.471 233802.762

238971.78 5627717.79 

 

Again, it is very urgent that this projection be supported.  Thank you
all for your help.  If you have any questions please post them as soon
as possible.

 


Max Clever, L.S.I.T.


Staff Surveyor

Spicer Group, Inc.

230 S. Washington Avenue

Saginaw, MI  48607

Phone:  (989) 754-4065 ext. 5584

Cell:       (989) 989-928-8028

Fax:       (989) 754-4440

mailto: maxc at spicergroup.com <mailto:maxc at spicergroup.com> 

 

www.spicergroup.com

 

Spicer Group's Engineers, Surveyors, and Planners strive for perfection
in everything we do.  We take the best that exists & make it better.
When it doesn't exist, we design it!

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070126/2309b83d/attachment.html>

From ovv at hetnet.nl  Sat Jan 27 11:16:42 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Sat, 27 Jan 2007 20:16:42 +0100
Subject: [Proj] URGENT Non-existent Projection Definition (Oblique
	Mercator RSO Natural Origin)
In-Reply-To: <32D23697A962F448A53443A717E87E410EA1A4@skywalker.spicergroup.com>
Message-ID: <C1E163AA.A43B%ovv@hetnet.nl>

> From: "Clever, Max"
> Date: Fri, 26 Jan 2007 19:59:58 -0500
> Subject: [Proj] URGENT Non-existent Projection Definition (Oblique Mercator
RSO Natural Origin)

> I am emailing to push for the addition of the coordinate system known as the
> Rectified Skew Orthomorphic Oblique Mercator Natural Origin (sometimes known
> as Hotine Oblique Mercator Natural Origin).  I have come to the conclusion
> that this projection is not capable of being defined properly in the current
> version of Proj. 
....
> If you read through prior posts, you will see that a proper solution has never
> been developed .....
....
> Below is an outline of the correct transformation of an example coordinate and
> also the incorrect transformation results from using proj.

The examples you provided seemed to me overly complex and not complete.
(a) What has reprojecting through LCC got to do with Oblique Mercator
problems?
(b) If you merely provide easting, northing without telling from which
latitude, longitude they were calculated, nothing can be properly diagnosed
or checked.

Furthermore: several times it was mentioned on this list that Michigan,
Alaska and Borneo RSO's can be done with libproj's and proj's omerc with the
no_off/no_uoff flag set and in some cases with an adjusted false
easting/northing.




From Maxc at spicergroup.com  Sun Jan 28 22:00:12 2007
From: Maxc at spicergroup.com (Clever, Max)
Date: Mon, 29 Jan 2007 01:00:12 -0500
Subject: [Proj] URGENT Non-existent Projection Definition (Oblique Mercator
References: <200701281700.l0SH06A8003912@duke.maptools.org>
Message-ID: <32D23697A962F448A53443A717E87E410714BD@skywalker.spicergroup.com>

Oscar,
 
Sorry for the bad coordinate comparisons.  I have read from a previous post of yours and Melita Kennedy that you were able to get the correct coordinates using the "no_off" tag using your customized proj program.  I am using proj 4.4.6 and still getting the wrong results with +no_uoff.  Does Proj446 use libproj definitions?  Here is a comparison using the example lat long that you and Melita used, and also an extra point.  Your calculations using "type = 5" and "norot, no_off" from July 23, 2006 appear to exactly match the Autodesk points  The following two points were transformed using Michigan Georef to Lat Long NAD83 in AutoDesk Map 2007.
 
Point 1
-86 Longitude NAD83
43 Latitude NAD83
499864.5000769 X georef meters Correct
272108.8592635 Y georef meters Correct
 
Point 2
-84 Longitude NAD83
44   Latitude NAD83
662870.1177213 X georef meters correct
341261.925 Y georef meters correct
 
Here are my results of Lat Long NAD83 to Michigan Georef using the "+no_uoff" flag on Point 1
cs2cs +proj=latlong +datum=NAD83 +to +proj=omerc +k_0=0.9996 +alpha=337.25555555555556 +lat_0=45.30916666666667 +lonc=86 +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +ellps=GRS80 +datum=NAD83 +units=m 
-1691884.49 X, 10656222.28 Y
 
Here are my results of Lat Long NAD83 to Michigan Georef using the "no_rot" and "+no_uoff" flag on Point 1
18028485.13 -2459745.46
 
Here are my results of Lat Long NAD83 to Michigan Georef using the neither the "no_rot" nor the "+no_uoff" flag on Point 1
355007.17 5773612.22

I know you have gotten this to work on your program, could you tell me what I am doing wrong?  Is there a different definition than "proj=omerc" in epsg format that would be the equivalent of your "type=5" omerc?  Once I get this corrected, I would hope to have this formally and permanently added to the epsg file with the proper parameters.  Thanks for the help.

-Max
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 5184 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070129/549d075c/attachment.bin>

From ovv at hetnet.nl  Mon Jan 29 10:37:18 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Mon, 29 Jan 2007 19:37:18 +0100
Subject: [Proj] Re: URGENT Non-existent Projection Definition (Oblique
	Mercator
In-Reply-To: <32D23697A962F448A53443A717E87E410714BD@skywalker.spicergroup.com>
Message-ID: <C1E3FD6E.A4F3%ovv@hetnet.nl>

> From: "Clever, Max"
> Date: Mon, 29 Jan 2007 07:00:12 +0100
> Subject: URGENT Non-existent Projection Definition (Oblique Mercator

> .... Here is a comparison using the example lat long that you and Melita used,
> and also an extra point.  Your calculations using "type = 5" and "norot,
> no_off" from July 23, 2006 appear to exactly match the Autodesk points  The
> following two points were transformed using Michigan Georef to Lat Long NAD83
> in AutoDesk Map 2007.
 
> Point 1
> -86 Longitude NAD83
> 43 Latitude NAD83
> 499864.5000769 X georef meters Correct
> 272108.8592635 Y georef meters Correct

> Here are my results of Lat Long NAD83 to Michigan Georef using the "+no_uoff"
> flag on Point 1
> cs2cs +proj=latlong +datum=NAD83 +to +proj=omerc +k_0=0.9996
> +alpha=337.25555555555556 +lat_0=45.30916666666667 +lonc=86
> +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +ellps=GRS80
> +datum=NAD83 +units=m
> -1691884.49 X, 10656222.28 Y

Please try again with +lonc=-86 (it's West!)
I can reproduce your -1691884.49 X, 10656222.28 Y exactly with lonc = +86
deg, so you must be able to reproduce the AutoDesk values with the correct
lonc!
Hope this will help.





From mkennedy2 at earthlink.net  Mon Jan 29 12:42:04 2007
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Mon, 29 Jan 2007 15:42:04 -0500 (EST)
Subject: [Proj] Re: URGENT Non-existent Projection Definition (Oblique
	Mercator)
Message-ID: <5562550.1170103324507.JavaMail.root@elwamui-cypress.atl.sa.earthlink.net>

I'm close...I'll keep working on it. Here's the settings (notice the lonc value). Didn't we get this far before? Anyway, officially the alpha value is 337.25556. I tried it with a longer one, and the results were the same.

D:\PROJ4\proj>cs2cs +proj=latlong +datum=NAD83 +to +proj=omerc +k=0.9996 +alpha=337.25556 +lat_0=45.309166666667 +lonc=-86 +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +datum=NAD83 +units=m

-86.0 43.0
499864.92       272108.92 0.000

Melita

>----------------------------------------------------------------------
>
>Date: Mon, 29 Jan 2007 01:00:12 -0500
>From: "Clever, Max" <Maxc at spicergroup.com>
>Subject: [Proj] URGENT Non-existent Projection Definition (Oblique
>	Mercator
>To: <proj at lists.maptools.org>
>
>Oscar,
> 
>Sorry for the bad coordinate comparisons.  I have read from a previous post of yours and Melita Kennedy that you were able to get the correct coordinates using the "no_off" tag using your customized proj program.  I am using proj 4.4.6 and still getting the wrong results with +no_uoff.  Does Proj446 use libproj definitions?  Here is a comparison using the example lat long that you and Melita used, and also an extra point.  Your calculations using "type = 5" and "norot, no_off" from July 23, 2006 appear to exactly match the Autodesk points  The following two points were transformed using Michigan Georef to Lat Long NAD83 in AutoDesk Map 2007.
> 
>Point 1
>-86 Longitude NAD83
>43 Latitude NAD83
>499864.5000769 X georef meters Correct
>272108.8592635 Y georef meters Correct
> 
>Point 2
>-84 Longitude NAD83
>44   Latitude NAD83
>662870.1177213 X georef meters correct
>341261.925 Y georef meters correct
> 
>Here are my results of Lat Long NAD83 to Michigan Georef using the "+no_uoff" flag on Point 1
>cs2cs +proj=latlong +datum=NAD83 +to +proj=omerc +k_0=0.9996 +alpha=337.25555555555556 +lat_0=45.30916666666667 +lonc=86 +x_0=2546731.496 +y_0=-4354009.816 +no_uoff +ellps=GRS80 +datum=NAD83 +units=m 
>-1691884.49 X, 10656222.28 Y
> 
>Here are my results of Lat Long NAD83 to Michigan Georef using the "no_rot" and "+no_uoff" flag on Point 1
>18028485.13 -2459745.46
> 
>Here are my results of Lat Long NAD83 to Michigan Georef using the neither the "no_rot" nor the "+no_uoff" flag on Point 1
>355007.17 5773612.22
>
>I know you have gotten this to work on your program, could you tell me what I am doing wrong?  Is there a different definition than "proj=omerc" in epsg format that would be the equivalent of your "type=5" omerc?  Once I get this corrected, I would hope to have this formally and permanently added to the epsg file with the proper parameters.  Thanks for the help.
>
>-Max
>
>_______________________________________________
>Proj mailing list
>Proj at lists.maptools.org
>http://lists.maptools.org/mailman/listinfo/proj
>
>End of Proj Digest, Vol 32, Issue 16
>************************************



From Maxc at spicergroup.com  Tue Jan 30 07:04:31 2007
From: Maxc at spicergroup.com (Clever, Max)
Date: Tue, 30 Jan 2007 10:04:31 -0500
Subject: [Proj] Michigan Georef Defition Fixed!
Message-ID: <32D23697A962F448A53443A717E87E410EA1B3@skywalker.spicergroup.com>

Oscar and Melita,

 

Thank you, so very much for your help.  I was finally able to get the
coordinates to match up when I switched the longitude to -86.  Also,
please disregard the Point 2 output results I got from autocad in my
last message I misread them.  I've posted new point comparisons below.
I hope you don't feel like I wasted your time after going through all
this!  I do have a couple questions though, now that I can get it to
work correctly.  



1.	I know I can edit the epsg file myself to get this coordinate
system in there using an epsg index number higher than 32800.  What
needs to happen to get this projection officially added to the epsg file
so that in the most current build of proj the "nad" folder will contain
this projection in epsg?  It would be nice to have prepackaged builds of
GRASS, Mapserver, and Mapguide OS using this projection "out of the
box".
	
	
2.	Also, when using proj 446 through the command line, it only gave
me return answers to the nearest centimeter.  When it is used in
programs like GRASS, Mapserver, or Mapguide OS is it still only
producing answers to the nearest 2 decimal places?

 

Again, thanks so much in helping me in getting this thing working.
Here's the final point comparison.  I checked the transformation in
reverse (not shown) and it worked as well.

 

Point 1

-86 longitude

43 latitude

 

Point 2

-84 longitude

44 latitude

 

Point 1 transformed by Autocad

499864.50007694 X georef meters

272108.85926347 Y georef meters

Point 1 transformed using proj 446

499864.50 X georef meters

272108.86 Y georef meters

 

Point 2 transformed by Autocad

660180.92564610 X georef meters

385135.16670815 Y georef meters

Point 2 transformed using proj 446

660180.93 georef meters

385135.17 georef meters

 

-Max Clever

maxc at spicergroup.com

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070130/499026b1/attachment.html>

From warmerdam at pobox.com  Tue Jan 30 09:05:53 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 30 Jan 2007 12:05:53 -0500
Subject: [Proj] Michigan Georef Defition Fixed!
In-Reply-To: <32D23697A962F448A53443A717E87E410EA1B3@skywalker.spicergroup.com>
References: <32D23697A962F448A53443A717E87E410EA1B3@skywalker.spicergroup.com>
Message-ID: <45BF7AF1.3070009@pobox.com>

Clever, Max wrote:
> Oscar and Melita,
> 
>  
> 
> Thank you, so very much for your help.  I was finally able to get the 
> coordinates to match up when I switched the longitude to -86.  Also, 
> please disregard the Point 2 output results I got from autocad in my 
> last message I misread them.  I’ve posted new point comparisons below.  
> I hope you don’t feel like I wasted your time after going through all 
> this!  I do have a couple questions though, now that I can get it to 
> work correctly. 
> 
>    1. I know I can edit the epsg file myself to get this coordinate
>       system in there using an epsg index number higher than 32800. 
>       What needs to happen to get this projection officially added to
>       the epsg file so that in the most current build of proj the “nad”
>       folder will contain this projection in epsg?  It would be nice to
>       have prepackaged builds of GRASS, Mapserver, and Mapguide OS using
>       this projection “out of the box”.

Max,

File a bug report in the PROJ.4 bugzilla with the issue, the correct encoding
as well as a bit of supporting information (such as test points).  I can then
add it as an override or possible if I understand the pattern I will be able
to modify the epsg translation script (and GDAL/OGR, etc) to handle this
properly throughout.

I must admit I stopped following this thread in detail.  Is there a general
lesson on how a particular EPSG projection method code should be rendered
into PROJ.4 format that I should be taking away from this?

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From ovv at hetnet.nl  Tue Jan 30 11:32:09 2007
From: ovv at hetnet.nl (Oscar van Vlijmen)
Date: Tue, 30 Jan 2007 20:32:09 +0100
Subject: [Proj] Michigan Georef Defition Fixed!
In-Reply-To: <32D23697A962F448A53443A717E87E410EA1B3@skywalker.spicergroup.com>
Message-ID: <C1E55BC9.A559%ovv@hetnet.nl>

From: "Clever, Max"
Date: Tue, 30 Jan 2007 10:04:31 -0500
Subject: [Proj] Michigan Georef Defition Fixed!

> Oscar and Melita,
> Thank you, so very much for your help.  I was finally able to get the
> coordinates to match up when I switched the longitude to -86.
...
> I hope you don¹t feel like I wasted your time after going through all this!
Never. Some projections, like the oblique mercator, are difficult to
implement, so your experiences are of use to more people!

...
> What needs to happen to get this projection officially added to the epsg file
> so that in the most current build of proj the ³nad² folder will contain this
...
A quick procedure is to add an epsg entry to your own copy, with a text
editor.
A more robust but slow procedure is to write a comment to the epsg database
maintainers. Use the link at the bottom of the home page www.epsg.org
An updated epsg database will eventually get processed by mr. Warmerdam in
order to produce a PROJ epsg file. Then again, what are the chances that the
no_uoff option actually will find its way into the PROJ epsg file? It would
probably need adjustment of the processing scripts.





From warmerdam at pobox.com  Tue Jan 30 13:11:34 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 30 Jan 2007 16:11:34 -0500
Subject: [Proj] Michigan Georef Defition Fixed!
In-Reply-To: <C1E55BC9.A559%ovv@hetnet.nl>
References: <C1E55BC9.A559%ovv@hetnet.nl>
Message-ID: <45BFB486.3070305@pobox.com>

Oscar van Vlijmen wrote:
> A more robust but slow procedure is to write a comment to the epsg database
> maintainers. Use the link at the bottom of the home page www.epsg.org
> An updated epsg database will eventually get processed by mr. Warmerdam in
> order to produce a PROJ epsg file. Then again, what are the chances that the
> no_uoff option actually will find its way into the PROJ epsg file? It would
> probably need adjustment of the processing scripts.

Folks,

Note, that you should only be contacting the EPSG database maintainers if
you are very confident that the problem is actually in their database,
and not in the translation I do.  I'm sure they are already getting somewhat
annoyed at the number of PROJ.4 related reports they are getting that
actually have nothing to do with their database itself.

So, in this case the question would be whether they have referenced a
proper projection method for the Michigan coordinate system or not.  Perhaps
they do, and I just translate it improperly in which case - don't bug them!

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From Maxc at spicergroup.com  Tue Jan 30 12:05:23 2007
From: Maxc at spicergroup.com (Clever, Max)
Date: Tue, 30 Jan 2007 15:05:23 -0500
Subject: [Proj] Geref Projection Definition Fixed!
Message-ID: <32D23697A962F448A53443A717E87E410EA1B5@skywalker.spicergroup.com>

Frank,

 

Rectified Skew Orthomorphic Oblique Mercators with Natural Origins can
be handled by proj.  The flag that determines whether it is a "natural
origin" (origin at the equator) or a projection center origin is
determined by the inclusion of the "+no_uoff" flag in the projection
parameters.  The Michigan Georef coordinate system requires that the
"+no_uoff" parameter is inserted.  I'm not sure if that exact parameter
exists in epsg definitions.  It might need to be changed to no_off or
something like that.  There really was no fix needed in the proj engine,
just a correct definition for the projection.  

 


Max Clever, L.S.I.T.


Staff Surveyor

Spicer Group, Inc.

230 S. Washington Avenue

Saginaw, MI  48607

Phone:  (989) 754-4065 ext. 5584

Cell:       (989) 989-928-8028

Fax:       (989) 754-4440

mailto: maxc at spicergroup.com

 

www.spicergroup.com

 

Spicer Group's Engineers, Surveyors, and Planners strive for perfection
in everything we do.  We take the best that exists & make it better.
When it doesn't exist, we design it!

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20070130/fa4446e5/attachment.html>

From mkennedy2 at earthlink.net  Tue Jan 30 13:24:23 2007
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Tue, 30 Jan 2007 13:24:23 -0800 (GMT-08:00)
Subject: [Proj] Re: URGENT Non-existent Projection Definition (Oblique
	Mercator)
Message-ID: <2762934.1170192263697.JavaMail.root@elwamui-wigeon.atl.sa.earthlink.net>

EPSG already has codes for 2 versions of Michigan GeoRef, although they call them "Michigan Oblique Mercator". 

3078 is based upon NAD83 and uses meters. 
3079 is based upon NAD83(HARN) and also uses meters. 

The method listed is "Hotine Oblique Mercator" (9812) with these parameters (note the azimuth):

latitude of projection center: 45 18 33.0 N
longitude of projection center: 86 0 0.0 W
Azimuth of initial line: 337 15 20.016
Angle of rectified to skew grid: 337 15 20.016
scale factor on initial line: 0.9996
false easting: 2546731.496
false northing: -4354009.816

EPSG Note: If using Oblique Mercator (9815), Ec = 499840.252 m and Nc = 528600.303 m

Melita


From warmerdam at pobox.com  Tue Jan 30 20:08:21 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 30 Jan 2007 23:08:21 -0500
Subject: [Proj] Geref Projection Definition Fixed!
In-Reply-To: <32D23697A962F448A53443A717E87E410EA1B5@skywalker.spicergroup.com>
References: <32D23697A962F448A53443A717E87E410EA1B5@skywalker.spicergroup.com>
Message-ID: <45C01635.9040006@pobox.com>

Clever, Max wrote:
  > Rectified Skew Orthomorphic Oblique Mercators with Natural Origins can
> be handled by proj.  The flag that determines whether it is a “natural 
> origin” (origin at the equator) or a projection center origin is 
> determined by the inclusion of the “+no_uoff” flag in the projection 
> parameters.  The Michigan Georef coordinate system requires that the 
> “+no_uoff” parameter is inserted.  I’m not sure if that exact parameter 
> exists in epsg definitions.  It might need to be changed to no_off or 
> something like that.  There really was no fix needed in the proj engine, 
> just a correct definition for the projection. 

Melita Kennedy wrote:
 > EPSG already has codes for 2 versions of Michigan GeoRef, although they call 
them "Michigan Oblique Mercator".
 >
 > 3078 is based upon NAD83 and uses meters.
 > 3079 is based upon NAD83(HARN) and also uses meters.
 >
 > The method listed is "Hotine Oblique Mercator" (9812) with these parameters 
(note the azimuth):
 >
 > latitude of projection center: 45 18 33.0 N
 > longitude of projection center: 86 0 0.0 W
 > Azimuth of initial line: 337 15 20.016
 > Angle of rectified to skew grid: 337 15 20.016
 > scale factor on initial line: 0.9996
 > false easting: 2546731.496
 > false northing: -4354009.816
 >
 > EPSG Note: If using Oblique Mercator (9815), Ec = 499840.252 m and Nc = 
528600.303 m

Max / Melita,

It it true that there are two projections methods associated with the EPSG
projection method 9815, those being (in ESRI projection engine WKT terms) as
follows?

   Hotine_Oblique_Mercator_Azimuth_Natural_Origin
   Hotine_Oblique_Mercator_Azimuth_Center

Is it also fair to say that Hotine_Oblique_Mercator_Azimuth_Natural_Origin
is what is also sometimes known as Rectified Skew Orthomorphic Oblique
Mercator?

Is there a way to distinguish the two above projection methods by examining
a 9815 record in EPSG?  Perhaps if the angle of rectified to skew grid is
non zero or something like that?

I would add I already have code in my translation to PROJ.4 for distinguishing
swiss oblique mercator (proj=somerc) from plain oblique mercator (proj=omerc).

There are just too many things going by the name oblique mercator!

PS. I still don't see a bug report summarizing this issue.   without one there
is a great danger of my losing track of the issue and it being left unresolved
in the core for another few years.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org



From massimodisasha at yahoo.it  Wed Jan 31 09:38:26 2007
From: massimodisasha at yahoo.it (epifanio)
Date: Wed, 31 Jan 2007 18:38:26 +0100
Subject: [Proj] Helmert 7 parameters
Message-ID: <640FD124-8D3E-44A7-938D-640398EF3E65@yahoo.it>

Hi,

i've a list of double points in two different coordinate system
  (WGS84 + GaussBoaga-Rome40 - zone East)
this 43 double - points  are located in a restricted area
(about 200x90 Km )

for this points i have the specific 7 parameters

this is what i've for each point :

1)   EN wgs84    EN GBr40   Tx   Ty   Tz   Rx   Ry   Rz
....
43) ....

is possible to use this data to define a new set of 7 parameters that  
can used on all the area extend ?


thanks for any suggestion! !

Massimo.





From campbell.smith at gmail.com  Wed Jan 31 10:34:53 2007
From: campbell.smith at gmail.com (Campbell S)
Date: Wed, 31 Jan 2007 10:34:53 -0800 (PST)
Subject: [Proj] Transverse mercator to WGS84
Message-ID: <8734179.post@talk.nabble.com>


Hi this is the first time I have used proj4 and  I cannot find how to convert
the point 

845863 4345919 to WGS84 where 

Lat of origin = 0
Long o f central meridian = -60(w)
False northing 10000000
False easting 500000
Scale factor 0.9996

every time I try it I get a point north and east rather than south and west
near the Falklands where I am expecting it.

Can someone help with the syntax for this?

TIA,
C
-- 
View this message in context: http://www.nabble.com/Transverse-mercator-to-WGS84-tf3150242.html#a8734179
Sent from the PROJ.4 mailing list archive at Nabble.com.



