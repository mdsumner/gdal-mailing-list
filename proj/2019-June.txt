From kreve at sdfe.dk  Sat Jun  1 00:58:46 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sat, 1 Jun 2019 07:58:46 +0000
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <CAM2FmMpYJQC5o1E9ce1dRy6bSamR+VpVifZP7_zQGyDR6U2NYQ@mail.gmail.com>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
 <CAH0YoEPwMhHJjjOYLQM7nj6Q-ZmG-fQA6o5ZRAQFZtScnA9XsA@mail.gmail.com>
 <0AC6E15C-4518-4E01-992D-53346E8BB6B4@hobu.co>
 <CAGybdFQLtjtiUHzNaAvcsrqysUQjaDrHFJKRd-mywttA2tUUiA@mail.gmail.com>
 <CAM2FmMpYJQC5o1E9ce1dRy6bSamR+VpVifZP7_zQGyDR6U2NYQ@mail.gmail.com>
Message-ID: <356C1133-4216-4E8E-A78C-5E285A2A4A60@sdfe.dk>



> On 1 Jun 2019, at 06:00, Mike Taves <mwtoews at gmail.com> wrote:
> 
> On Sat, 1 Jun 2019 at 09:19, Alan Snow <alansnow21 at gmail.com> wrote:
>> 
>> This is great. What is the plan for the timing of renaming the github repo to PROJ?
> 
> I think GitHub repos can be renamed without too much disruption to forks.
> 

Yes, GitHub makes sure to redirect old URL’s to the new address. I did some tests of
this a while back and couldn’t find any issues with it. I will change the GitHub project
name on Monday unless someone comes up with a good reason for not doing so in
the mean time.

> Similar question: will the project name remain as PROJ.4, or rename to
> PROJ to align with the current website and software name?

I think it’s time to purge the PROJ.4 altogether now. The only reason we kept
as the PROJ.4 project name was to align with the website URL. It was a work
around, nothing more. If anyone disagrees with this, please speak up.

/Kristian

> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From jmckenna at gatewaygeomatics.com  Sat Jun  1 11:24:14 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sat, 1 Jun 2019 14:24:14 -0400
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
Message-ID: <4ed98244-8a31-179d-74bf-a5dfd742650a@gatewaygeomatics.com>

Awesome news!  I wonder if this should be mentioned somewhere on the new 
site, on a history page (history can be lost and forgotten over time, or 
hidden in mailing list archives).

Cool news!

-jeff



On 2019-05-30 11:12 AM, Howard Butler wrote:
> All,
> 
> It's good to have friends in high places. Paul Ramsey was able to 
> encourage the owner of proj.org <http://proj.org> to donate the domain 
> to our cause. The domain has been transferred to the OSGeo registrar and 
> is currently in finalization at this time. Once that is complete (in the 
> next few days), we can begin our transition from proj4.org 
> <http://proj4.org> to proj.org <http://proj.org> if the PSC is 
> supportive of such a migration. I know I am!
> 
> I propose that we keep another GH page up at https://proj4.org that 301s 
> -> https://proj.org for quite a while, and we adapt the CNAME of our 
> current proj-docs repo to proj.org <http://proj.org>.  Hopefully the 
> transition does not need to be any rougher than that. If we need an RFC 
> and vote to do this, someone chime in and we can do so, but I think the 
> sentiment is we've wanted proj.org <http://proj.org> all along and we 
> are very glad to get it.
> 
> Thanks again to Paul Ramsey and the contributor of the domain (Paul can 
> name him if that is ok). We really appreciate it!
> 
> Howard
> 
> ___

From bugs at gnu.support  Sat Jun  1 11:56:51 2019
From: bugs at gnu.support (Jean Louis)
Date: Sat, 1 Jun 2019 20:56:51 +0200
Subject: [PROJ] Conversion from Tanzanian ARC1960 to WGS84
Message-ID: <20190601185651.GE27567@protected.rcdrun.com>

Hello,

I would like to get possibility to convert
programmatically from ARC1960 how it is used in
Tanzania, to WGS84.

I did read this file:
http://lists.maptools.org/pipermail/proj/2009-August/004849.html

and this thread:
https://github.com/OSGeo/proj.4/issues/1110

And I am still not getting right result.

I have got the coordinate -1.47927 34.56933 from
GEOTRANS software. And I have compared it to the
Tanzanian mining cadastre, it is apparently the
same. 

However, I am not achieving with the below
conversion to obtain accurate coordinate.

Please help me if you can, so that I find permanet
solution, as it affects very many people who live
in Tanzania.

<gie>

operation	+proj=molodensky +ellps=clrk80 +da=-112.145 +df=-0.54750714e-4 +dx=-175 +dy=-23 +dz=-303
tolerance	2 m

accept		-1.47666 34.56861
expect		-1.47927 34.56933

</gie>


Jean

From alansnow21 at gmail.com  Sun Jun  2 17:56:54 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Sun, 2 Jun 2019 19:56:54 -0500
Subject: [PROJ] Conversion from Tanzanian ARC1960 to WGS84
In-Reply-To: <20190601185651.GE27567@protected.rcdrun.com>
References: <20190601185651.GE27567@protected.rcdrun.com>
Message-ID: <CAGybdFQXTg2X1rfH4kNCoamWiGiR4pXE_A8L_T9g1uMM9rN0DQ@mail.gmail.com>

Hi Jean,

This is not necessarily the correct answer, but it may help.
>From what I can tell, https://epsg.io/4210-1285 is the projection for
ARC1960.

$ cs2cs 'epsg:4210' 'epsg:4326' -f "%.5f"
-1.47666 34.56861
-1.47926 34.56938 0.00000

Best,
Alan


On Sat, Jun 1, 2019 at 2:02 PM Jean Louis <bugs at gnu.support> wrote:

> Hello,
>
> I would like to get possibility to convert
> programmatically from ARC1960 how it is used in
> Tanzania, to WGS84.
>
> I did read this file:
> http://lists.maptools.org/pipermail/proj/2009-August/004849.html
>
> and this thread:
> https://github.com/OSGeo/proj.4/issues/1110
>
> And I am still not getting right result.
>
> I have got the coordinate -1.47927 34.56933 from
> GEOTRANS software. And I have compared it to the
> Tanzanian mining cadastre, it is apparently the
> same.
>
> However, I am not achieving with the below
> conversion to obtain accurate coordinate.
>
> Please help me if you can, so that I find permanet
> solution, as it affects very many people who live
> in Tanzania.
>
> <gie>
>
> operation       +proj=molodensky +ellps=clrk80 +da=-112.145
> +df=-0.54750714e-4 +dx=-175 +dy=-23 +dz=-303
> tolerance       2 m
>
> accept          -1.47666 34.56861
> expect          -1.47927 34.56933
>
> </gie>
>
>
> Jean
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Alan Snow
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190602/eaed08d4/attachment.html>

From bugs at gnu.support  Sun Jun  2 23:58:03 2019
From: bugs at gnu.support (Jean Louis)
Date: Mon, 3 Jun 2019 08:58:03 +0200
Subject: [PROJ] Conversion from Tanzanian ARC1960 to WGS84
In-Reply-To: <CAGybdFQXTg2X1rfH4kNCoamWiGiR4pXE_A8L_T9g1uMM9rN0DQ@mail.gmail.com>
References: <20190601185651.GE27567@protected.rcdrun.com>
 <CAGybdFQXTg2X1rfH4kNCoamWiGiR4pXE_A8L_T9g1uMM9rN0DQ@mail.gmail.com>
Message-ID: <20190603065803.GT30808@protected.rcdrun.com>

* Alan Snow <alansnow21 at gmail.com> [2019-06-03 02:57]:
> Hi Jean,
> 
> This is not necessarily the correct answer, but it may help.
> From what I can tell, https://epsg.io/4210-1285 is the projection for
> ARC1960.
> 
> $ cs2cs 'epsg:4210' 'epsg:4326' -f "%.5f"
> -1.47666 34.56861
> -1.47926 34.56938 0.00000

Thank you, good to know the link and facts.

echo -1.47666 34.56861 | cs2cs -f %.10f "Arc 1960" WGS84
-1.4792594337   34.5693813904 0.0000000000

echo -1.47666 34.56861 | cs2cs 'epsg:4210' 'epsg:4326' -f "%.10f"
-1.4792594337   34.5693813904 0.0000000000

I am getting so far quite same result.

Jean

From kreve at sdfe.dk  Tue Jun  4 13:03:40 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 4 Jun 2019 20:03:40 +0000
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <356C1133-4216-4E8E-A78C-5E285A2A4A60@sdfe.dk>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
 <CAH0YoEPwMhHJjjOYLQM7nj6Q-ZmG-fQA6o5ZRAQFZtScnA9XsA@mail.gmail.com>
 <0AC6E15C-4518-4E01-992D-53346E8BB6B4@hobu.co>
 <CAGybdFQLtjtiUHzNaAvcsrqysUQjaDrHFJKRd-mywttA2tUUiA@mail.gmail.com>
 <CAM2FmMpYJQC5o1E9ce1dRy6bSamR+VpVifZP7_zQGyDR6U2NYQ@mail.gmail.com>
 <356C1133-4216-4E8E-A78C-5E285A2A4A60@sdfe.dk>
Message-ID: <3B6122E8-24BF-453D-B756-70EDF87CB4D8@sdfe.dk>



Yes, GitHub makes sure to redirect old URL’s to the new address. I did some tests of
this a while back and couldn’t find any issues with it. I will change the GitHub project
name on Monday unless someone comes up with a good reason for not doing so in
the mean time.


I have now changed the repo name to PROJ (previously proj.4). New GitHub URL
is https://github.com/OSGeo/PROJ. I have done a few tests on my local git clone
without updating the URL and URL-redirecting seems to be working fine. Please
let me know if you encounter any problems.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190604/a03c6965/attachment.html>

From even.rouault at spatialys.com  Thu Jun  6 05:23:55 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Jun 2019 14:23:55 +0200
Subject: [PROJ] proj4.org -> proj.org migration
In-Reply-To: <3B6122E8-24BF-453D-B756-70EDF87CB4D8@sdfe.dk>
References: <B1BAA36B-C44B-488C-A3F9-1D31E2557946@hobu.co>
 <356C1133-4216-4E8E-A78C-5E285A2A4A60@sdfe.dk>
 <3B6122E8-24BF-453D-B756-70EDF87CB4D8@sdfe.dk>
Message-ID: <10405185.ZZ1GepASzy@even-i700>

> I have now changed the repo name to PROJ (previously proj.4). New GitHub
> URL
 is https://github.com/OSGeo/PROJ. I have done a few tests on my local
> git clone without updating the URL and URL-redirecting seems to be working
> fine. Please let me know if you encounter any problems.

There was an issue with coveralls that was no longer updated, which prevented 
the following step in Travis-CI, website building, to be run. So I've created
https://coveralls.io/github/OSGeo/PROJ and things are now back to work.
I guess we should now delete the old https://coveralls.io/github/OSGeo/proj.4 
to avoid confusion ?
Similarly I've created https://ci.appveyor.com/project/OSGeo/PROJ, and
https://ci.appveyor.com/project/OSGeo/proj-4 should be deleted ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Jochem.Lesparre at kadaster.nl  Fri Jun  7 04:39:19 2019
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Fri, 7 Jun 2019 11:39:19 +0000
Subject: [PROJ] Precedence of multiple vertical grids
Message-ID: <AM0P192MB042022A160C52675B58A1D5CEF100@AM0P192MB0420.EURP192.PROD.OUTLOOK.COM>

Hi,

After the PROJ. tutorial at the EUREF symposium I got started with PROJ.6. I'm very happy, as this solves many of my problems with introducing a new national transformation for the Netherlands. However, I do notice some odd behaviour now and then. This is the first one.

The order of precedence of vertical grids in PROJ. seems not to work as described in the documentation (https://proj.org/operations/transformations/vgridshift.html?highlight=gridshift):

(base) D:\>cct +proj=pipeline +step +proj=vgridshift +grids=D:\nlgeo2018beta.gtx,null
5 52 43
  5.0000000000   52.0000000000       43.0000           inf
0 0 43
  0.0000000000    0.0000000000       43.0000           inf
^Z

(base) D:\>cct +proj=pipeline +step +proj=vgridshift +grids=null,D:\nlgeo2018beta.gtx
5 52 43
  5.0000000000   52.0000000000       -0.4754           inf
0 0 43
  0.0000000000    0.0000000000       43.0000           inf
^Z

Confusingly, for horizontal grid shifts PROJ. does work as described in the documentation:

(base) D:\>cct +proj=pipeline +step +proj=hgridshift +grids=D:\rdtrans2018beta.gsb,null
5 52 43
  4.9996207144   51.9990307906       43.0000           inf
0 0 43
  0.0000000000    0.0000000000       43.0000           inf
^Z

(base) D:\>cct +proj=pipeline +step +proj=hgridshift +grids=null,D:\rdtrans2018beta.gsb
5 52 43
  5.0000000000   52.0000000000       43.0000           inf
0 0 43
  0.0000000000    0.0000000000       43.0000           inf
^Z

I tend to say that the documentation and the horizontal grid shift are correct and that the code for the vertical grid shift should be adapted?

Kind regards, Jochem



Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190607/3e693879/attachment.html>

From F.Gross at sbp.de  Fri Jun 14 06:40:47 2019
From: F.Gross at sbp.de (Fabian Gross)
Date: Fri, 14 Jun 2019 15:40:47 +0200
Subject: [PROJ] How to apply Helmert trafo
Message-ID: <OF6C696E1F.7C225F7D-ONC1258419.004A03FC-C1258419.004B256C@sbp.de>

Dear proj-members,

I would like to apply a Helmert trafo as part of a datum shift.
The example follows the EPSG geomatics guidance 7/2 (report 373-7-2):

>From WGS72 (4984) -> WGS84 (4978).

There are 2 issues:
1. How to apply Helmert-Trafo? I.e. 
with or 
without the push/pop of the ellipsoidal height. 
Only if it is not pushed/popped do the values fit to the reference and the 
direct/naive implementation of Helmert.
2. The scale parameters in the example (0.219) and the EPSG catalogue of 
pyproj (0.2263)  do not agree.

The attached file has the test case.


Kind regards

Fabian Gross
Telefon +49 (711) 648 71-995
_________________________________________________
sbp 
schlaich
bergermann partner

Beratende Ingenieure
für erneuerbare Energie

Stuttgart . Berlin . New York
São Paulo . Shanghai . Paris

sbp sonne gmbh

Markus Balz Dipl.Ing. (FH)
Andreas Keil Dipl.Ing.

Schwabstrasse 43
70197 Stuttgart
Telefon +49 (711) 648 71-0

www.sbp.de
_________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190614/4f468304/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: how_to_helmert.py
Type: application/octet-stream
Size: 4502 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190614/4f468304/attachment.obj>

From Jochem.Lesparre at kadaster.nl  Mon Jun 17 00:30:52 2019
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 17 Jun 2019 07:30:52 +0000
Subject: [PROJ] How to apply Helmert trafo
In-Reply-To: <OF6C696E1F.7C225F7D-ONC1258419.004A03FC-C1258419.004B256C@sbp.de>
References: <OF6C696E1F.7C225F7D-ONC1258419.004A03FC-C1258419.004B256C@sbp.de>
Message-ID: <AM0P192MB0420FD31E5C37F3A6588606AEFEB0@AM0P192MB0420.EURP192.PROD.OUTLOOK.COM>

Dear Fabian,

For this transformation push/pop is not needed. That only makes sense in other situations, like when you use a geoid.

If the scale factor also differs from the primary source (EPSG is a secondary source), it should be adapted in the example to avoid confusion. If EPSG differs with the primary source, EPSG should be notified that there might be a mistake in their registry.

Kind regards, Jochem

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Fabian Gross
Sent: Friday, June 14, 2019 3:41 PM
To: proj at lists.osgeo.org
Subject: [PROJ] How to apply Helmert trafo

Dear proj-members,

I would like to apply a Helmert trafo as part of a datum shift.
The example follows the EPSG geomatics guidance 7/2 (report 373-7-2):

From WGS72 (4984) -> WGS84 (4978).

There are 2 issues:
1. How to apply Helmert-Trafo? I.e.

  *   with or
  *   without the push/pop of the ellipsoidal height.
Only if it is not pushed/popped do the values fit to the reference and the direct/naive implementation of Helmert.
2. The scale parameters in the example (0.219) and the EPSG catalogue of pyproj (0.2263)  do not agree.

The attached file has the test case.


Kind regards

Fabian Gross
Telefon +49 (711) 648 71-995
_________________________________________________
sbp
schlaich
bergermann partner

Beratende Ingenieure
für erneuerbare Energie

Stuttgart . Berlin . New York
São Paulo . Shanghai . Paris

sbp sonne gmbh

Markus Balz Dipl.Ing. (FH)
Andreas Keil Dipl.Ing.

Schwabstrasse 43
70197 Stuttgart
Telefon +49 (711) 648 71-0

www.sbp.de<http://www.sbp.de/>
_________________________________________________


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190617/b315a2cb/attachment.html>

From mkennedy2 at earthlink.net  Wed Jun 19 12:01:19 2019
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Wed, 19 Jun 2019 12:01:19 -0700 (GMT-07:00)
Subject: [PROJ] WGS72 to WGS84 transformations (was Re: PROJ Digest, Vol 8,
 Issue 8)
Message-ID: <677657153.5761.1560970880074@wamui-jasmine.atl.sa.earthlink.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190619/35c2f1d0/attachment.html>

From cameron.shorter at gmail.com  Fri Jun 21 01:06:12 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Fri, 21 Jun 2019 18:06:12 +1000
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <1604074.RSeUgcd6NO@even-i700>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <1604074.RSeUgcd6NO@even-i700>
Message-ID: <CABqeU+jH=v_4GzGN=K4Zq7W7quKPUHcZzhAkqdT5yQf2PakS_g@mail.gmail.com>

Thanks Evan, I'm switching this email to the proj email list as suggested.

In answer to Evan's question:
> Why ? I don't see a contradiction between those 3 statements, because as
you
> mentioned, WGS84 is dynamic.

I believe that the problem is that WGS84 is being used in webmapping
situations as if it were a static datum, locked to a fixed epoch, and in
other cases it is treated as if it were a dynamic datum.

This has led to the situation we have in Australia where:

WGS94 -transform-> WGS2020 (leads to a coordinate shift of ~ 1.8 metres)
WGS94 -null transform-> WGS84 (which was correct in 1994)
WGS2020 -null transform-> WGS84 (which will be correct in 2020)

I can see that I will need to write this up more clearly, which I'm in the
process of doing. I'll share when done (early next week).

Cheers, Cameron


On Fri, 21 Jun 2019 at 08:20, Even Rouault <even.rouault at spatialys.com>
wrote:

> Cameron,
>
> This would be more a topic for proj at lists.osgeo.org .
>
> >
> > Our Australian spatial data users are about to face a systematic mismatch
> > challenge when trying to use multiple static datums (GDA2020, GDA94) with
> > the dynamic datum (WGS84). At the moment, it is government agencies
> > grappling with the problem, but it is about to become a mainstream issue.
> >
> > Australia now has static datums for the years 1994 and 2020 and uses
> WGS84
> > (a time-dependent datum!), for web-mapping and web-services.  We
> recognise:
> > 1. Transforming from GDA94 to GDA2020 reflects Australia’s tectonic
> > movement of ~ 1.8 metres to the North East.
> > 2. GDA94 was defined as ‘equal to WGS84’ in 1994.
> > 3. GDA2020  was defined as ‘equal to WGS84’ in 2020.
> > All three statements can’t be accurate.
>
> Why ? I don't see a contradiction between those 3 statements, because as
> you
> mentionned, WGS84 is dynamic.
>
> > I believe this is a problem the whole world needs to address,
>
> I'm not sure to have understood what the problem you're facing to is
> exactly.
> Is it when combining data sources from several of those 3 CRS ?
>
> There are transformation paths between GDA94 and GDA2020 in the EPSG
> dataset,
> with static Helmert-based or grid-based transformations.
>
> With PROJ 6:
> $ projinfo -s GDA94 -t GDA2020 --summary --spatial-test intersects
> Candidate operations found: 5
> EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia - GDA
> EPSG:8447, GDA94 to GDA2020 (2), 0.05 m, Australia - onshore, at least one
> grid missing
> EPSG:8446, GDA94 to GDA2020 (3), 0.05 m, Australia - onshore, at least one
> grid missing
> EPSG:8445, GDA94 to GDA2020 (5), 0.05 m, Cocos (Keeling) Islands -
> onshore, at
> least one grid missing
> EPSG:8444, GDA94 to GDA2020 (4), 0.05 m, Christmas Island - onshore, at
> least
> one grid missing
>
> Mixing with data referenced to WGS84 is going to be more problematic,
> because
> of its dynamic nature indeed. So typically you will need to know if
> coordinates are expressed to one of the particular realizations of WGS84:
> CRS EPSG:7816: WGS 84 (Transit)
> CRS EPSG:7657: WGS 84 (G730)
> CRS EPSG:7659: WGS 84 (G873)
> CRS EPSG:7661: WGS 84 (G1150)
> CRS EPSG:7663: WGS 84 (G1674)
> CRS EPSG:7665: WGS 84 (G1762)
>
> The EPSG datset contains coordinate operations between those WGS 84 or
> equivalent ITRF realizations, and GDA94 or GDA2020
>
> To/from GDA2020:
> - EPSG:8049: "ITRF2014 to GDA2020 (1)'" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:8448: "GDA2020 to WGS 84 (G1762)" (Time-dependent Coordinate Frame
> rotation)
>
> To/from GDA94:
> - EPSG:6276: "ITRF2008 to GDA94 (1)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6277: "ITRF2005 to GDA94 (1)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6278: "ITRF2000 to GDA94 (2)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6279: "ITRF97 to GDA94 (2)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6280: "ITRF96 to GDA94 (2)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6313: "ITRF96 to GDA94 (1)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6314: "ITRF97 to GDA94 (1)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6315: "ITRF2000 to GDA94 (1)" (Time-dependent Coordinate Frame
> rotation)
> - EPSG:6392: "ITRF97 to GDA94 (1)" (Time-dependent Coordinate Frame
> rotation)
>
> So it seems to me that the needed operations are there. GDAL 3 and PROJ 6
> should be able to use them. What is probably more difficult is to figure
> out
> the WGS84 / ITRF realization and the epoch in which your coordinates are
> expressed.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190621/1902c0b8/attachment.html>

From even.rouault at spatialys.com  Fri Jun 21 02:26:26 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 21 Jun 2019 11:26:26 +0200
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <CABqeU+jH=v_4GzGN=K4Zq7W7quKPUHcZzhAkqdT5yQf2PakS_g@mail.gmail.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <1604074.RSeUgcd6NO@even-i700>
 <CABqeU+jH=v_4GzGN=K4Zq7W7quKPUHcZzhAkqdT5yQf2PakS_g@mail.gmail.com>
Message-ID: <1672757.5JD1AB68na@even-i700>

> I believe that the problem is that WGS84 is being used in webmapping
> situations as if it were a static datum, locked to a fixed epoch, and in
> other cases it is treated as if it were a dynamic datum.
> 
> This has led to the situation we have in Australia where:
> 
> WGS94 -transform-> WGS2020 (leads to a coordinate shift of ~ 1.8 metres)
> WGS94 -null transform-> WGS84 (which was correct in 1994)
> WGS2020 -null transform-> WGS84 (which will be correct in 2020)

You likely meant GDA94 (instead of WGS94) and GDA2020 (instead of WGS2020).

Yes, indeed if you look in the EPSG dataset, and transform between GDA94 and 
EPSG:4326 (the "average" WGS84 CRS), you'll get a null transform, but 
advertized with a 3m accuracy only, whereas direct transformation between 
GDA94 and GDA2020 has 1 or 5cm accuracy depending on which method is taken. 
And same for GDA2020. So there is no transitivity in chaining transformations.

The thing is that EPSG:4326 is really a not super accurate CRS, given that its 
underlying datum is actually a "datum ensemble" in the modern geodetic 
terminology:
http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#53

If you look at the candidate for the new CRS WKT revised standard
https://portal.opengeospatial.org/files/81176
you' ll see this

	ENSEMBLE["WGS 84 ensemble",
	  MEMBER["WGS 84 (TRANSIT)",ID["EPSG",1166]],
	  MEMBER["WGS 84 (G730)",ID["EPSG",1152]],
	  MEMBER["WGS 84 (G834)",ID["EPSG",1153]],
	  MEMBER["WGS 84 (G1150)",ID["EPSG",1154]],
	  MEMBER["WGS 84 (G1674)",ID["EPSG",1155]],
	  MEMBER["WGS 84 (G1762)",ID["EPSG",1156]],
	  ELLIPSOID["WGS 84",6378137,298.2572236,LENGTHUNIT["metre",1.0]],
	  ENSEMBLEACCURACY[2]
	]

And I've heard that EPSG might consider to revise their future dataset to use 
that datum ensemble as the base for CRS EPSG:4326 to better reflect this 
reality, instead of basing it on the datum EPSG:6326, which is not really well 
defined.
So mapping to EPSG:4326 makes only sense if you don't need accuracy lower than 
2 meters.

You might pick up one of the WGS 84 realization, and use the time-dependent 
transformations I mentionned in my previous email to go from GDA94 or GDA2020 
to that realization.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cameron.shorter at gmail.com  Sat Jun 22 20:14:24 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Sun, 23 Jun 2019 13:14:24 +1000
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <1672757.5JD1AB68na@even-i700>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <1604074.RSeUgcd6NO@even-i700>
 <CABqeU+jH=v_4GzGN=K4Zq7W7quKPUHcZzhAkqdT5yQf2PakS_g@mail.gmail.com>
 <1672757.5JD1AB68na@even-i700>
Message-ID: <8d83b366-f4ac-1382-d7b1-19ac6a9c9048@gmail.com>

Thanks Even, I really appreciate your feedback.

I'm pretty sure we have a problem which needs to be addressed at an 
international level - likely through the OGC.

I've drafted a one pager, in simple language, which incorporates 
feedback from both Joel Haasdyk and Even Rouault. The aim is to provide 
this doc to decision makers who are probably not technically across the 
details.

https://docs.google.com/document/d/15uBX2qICODRkiHXeksT0zEy6TuysanIxuc4anV0o5F0/edit#heading=h.e745vpszg17c

I'm unclear on the exact definition of WGS 84 and whether I'm explaining 
it correctly.

I'd also unclear on what URLs should be referred to from this type of 
document to reference different EPSG codes and the like.

All, feel free to reply with suggestions via email, or add comments into 
this document. (Please use your google login before doing so, so we can 
see who has said what).

For the record, the version of the doc I've just edited is version 1.2, 
and after Joel's prior review was 1.1.

Cheers, Cameron

On 21/6/19 7:26 pm, Even Rouault wrote:
>> I believe that the problem is that WGS84 is being used in webmapping
>> situations as if it were a static datum, locked to a fixed epoch, and in
>> other cases it is treated as if it were a dynamic datum.
>>
>> This has led to the situation we have in Australia where:
>>
>> WGS94 -transform-> WGS2020 (leads to a coordinate shift of ~ 1.8 metres)
>> WGS94 -null transform-> WGS84 (which was correct in 1994)
>> WGS2020 -null transform-> WGS84 (which will be correct in 2020)
> You likely meant GDA94 (instead of WGS94) and GDA2020 (instead of WGS2020).
>
> Yes, indeed if you look in the EPSG dataset, and transform between GDA94 and
> EPSG:4326 (the "average" WGS84 CRS), you'll get a null transform, but
> advertized with a 3m accuracy only, whereas direct transformation between
> GDA94 and GDA2020 has 1 or 5cm accuracy depending on which method is taken.
> And same for GDA2020. So there is no transitivity in chaining transformations.
>
> The thing is that EPSG:4326 is really a not super accurate CRS, given that its
> underlying datum is actually a "datum ensemble" in the modern geodetic
> terminology:
> http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#53
>
> If you look at the candidate for the new CRS WKT revised standard
> https://portal.opengeospatial.org/files/81176
> you' ll see this
>
> 	ENSEMBLE["WGS 84 ensemble",
> 	  MEMBER["WGS 84 (TRANSIT)",ID["EPSG",1166]],
> 	  MEMBER["WGS 84 (G730)",ID["EPSG",1152]],
> 	  MEMBER["WGS 84 (G834)",ID["EPSG",1153]],
> 	  MEMBER["WGS 84 (G1150)",ID["EPSG",1154]],
> 	  MEMBER["WGS 84 (G1674)",ID["EPSG",1155]],
> 	  MEMBER["WGS 84 (G1762)",ID["EPSG",1156]],
> 	  ELLIPSOID["WGS 84",6378137,298.2572236,LENGTHUNIT["metre",1.0]],
> 	  ENSEMBLEACCURACY[2]
> 	]
>
> And I've heard that EPSG might consider to revise their future dataset to use
> that datum ensemble as the base for CRS EPSG:4326 to better reflect this
> reality, instead of basing it on the datum EPSG:6326, which is not really well
> defined.
> So mapping to EPSG:4326 makes only sense if you don't need accuracy lower than
> 2 meters.
>
> You might pick up one of the WGS 84 realization, and use the time-dependent
> transformations I mentionned in my previous email to go from GDA94 or GDA2020
> to that realization.
>
> Even
>
-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254


From dagnew at ucsd.edu  Sat Jun 22 22:46:19 2019
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Sat, 22 Jun 2019 22:46:19 -0700
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <8d83b366-f4ac-1382-d7b1-19ac6a9c9048@gmail.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <1604074.RSeUgcd6NO@even-i700>
 <CABqeU+jH=v_4GzGN=K4Zq7W7quKPUHcZzhAkqdT5yQf2PakS_g@mail.gmail.com>
 <1672757.5JD1AB68na@even-i700>
 <8d83b366-f4ac-1382-d7b1-19ac6a9c9048@gmail.com>
Message-ID: <CAG6Em0ArX2QbagAkqc6ep25Lp+3JjUVnSYxGht7mx-MwhAWL=w@mail.gmail.com>

All:

        As a geophysicist who studies crustal deformation, I'll weigh
in and say that the issue is not (I think) the dynamic nature of the
datum, but plate tectonics.

        Taking WGS84 (of various dates) to be matched to the various
releases of the ITRF, I'd say that the latter is as fixed as it is
possible to make it: origin at the Earth's center of mass, Z axis
to the Conventional International Origin, X axis defined so the X-Z
plane is parallel to the local vertical through Greenwich (to maintain
continuity of Universal Time). The ITRF deals with plate tectonics
by including a model of what the plate motions are, and then chooses
a variation of orientation that makes the these motions,
averaged over the Earth, zero: as close as we can get to "average
Earth motion". As the data series get longer and the coverage better,
there are new releases, but the differences between them are small.

        What isn't small is the plate motion relative to this system:
in it, a location on the Australian plate moves northeast at the rate
of of 1.8 m from 1994 to 2020. This isn't because of updates to the
datum, it is because the ITRF coordinate system is designed to be fixed
relative to the average Earth. That is, the datum, and the coordinate
system, is fixed, but the location of a point on the ground in that
system varies with time.

        The only way around this, so far as I know, is to include dates
with coordinates and have some code that will allow you to convert
measured coordinates between epochs. For Australia, Europe, and much
of North America this is just a time-dependent shift that is nearly the
same everywhere: on a plate boundary it is a lot more complicated, as
is shown by the NGS HTDP program, which has lots of grids and allowances
for earthquakes.

        In summary: the different releases of the WGS/ITRF are different,
but this doesn't make them "dynamic datums": they are fixed, to the
the Earth on average, but relative to that different parts of the Earth's
surface are moving. Not a new problem, but one that complicates things.

        Hope this clarifies rather than muddies.

Thanks
Duncan Agnew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190622/49977e19/attachment.html>

From kreve at sdfe.dk  Sun Jun 23 11:38:50 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Sun, 23 Jun 2019 18:38:50 +0000
Subject: [PROJ] PROJ 6.1.1RC1
Message-ID: <15093254-C5A2-45B7-91F9-694E2A4C352F@sdfe.dk>

All,

With a scheduled release of PROJ 6.1.1. on July 1st it is time to put out a 
release candidate. 

Download the archives here:

https://download.osgeo.org/proj/proj-6.1.1RC1.tar.gz (https://download.osgeo.org/proj/proj-6.1.1RC1.tar.gz.md5) 
https://download.osgeo.org/proj/proj-6.1.1RC1.zip    (https://download.osgeo.org/proj/proj-6.1.1RC1.zip.md5)

Please test the release candidate and report back any problems you
may encounter. See the release notes below.

/Kristian

—————————————————————————————————————————————————


6.1.1 Release Notes
-------------------

 Updates
 -------

 o Update EPSG registry to version 9.6.3 (1485)


 Bug Fixes
 ---------

 o Take the passed authority into account when identifying
   objects (#1466)

 o Avoid exception when transforming from NAD83 to projected
   CRS using NAD83(2011) (#1477)

 o Avoid off-by-one reading of name argument if name of resource
   file has length 1 (#1489)

 o Do not include PROJ_LIB in proj_info().searchpath when context
   search path is set (#1498)

 o Use  correct delimeter for the current platform when parsing
   PROJ_LIB (#1497)

 o Do not confuse 'ID74' CRS with WKT2 ID[] node (#1506)

 o WKT1 importer: do case insensitive comparison for axis
   direction (#1509)

 o Avoid compile errors on GCC 4.9.3 (#1512)

 o Make sure that pipelines including +proj=ob_tran can be
   created (#1526)


 THANKS TO
 ------------

 Version 6.1.1 is made possible by the following contributors:


 Alan D. Snow
 Paul Menzel
 Mateusz Łoskot
 Bas Couwenberg
 Peter Limkilde Svendsen
 Mike Taves
 Howard Butler
 Nyall Dawson
 Andrew Bell
 Kristian Evers
 Even Rouault


From nick_mein at trimble.com  Sun Jun 23 19:49:46 2019
From: nick_mein at trimble.com (Nick Mein)
Date: Mon, 24 Jun 2019 14:49:46 +1200
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <CAG6Em0ArX2QbagAkqc6ep25Lp+3JjUVnSYxGht7mx-MwhAWL=w@mail.gmail.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <1604074.RSeUgcd6NO@even-i700>
 <CABqeU+jH=v_4GzGN=K4Zq7W7quKPUHcZzhAkqdT5yQf2PakS_g@mail.gmail.com>
 <1672757.5JD1AB68na@even-i700>
 <8d83b366-f4ac-1382-d7b1-19ac6a9c9048@gmail.com>
 <CAG6Em0ArX2QbagAkqc6ep25Lp+3JjUVnSYxGht7mx-MwhAWL=w@mail.gmail.com>
Message-ID: <CAF3Sn4X0axTPCUDGRLJCwQ82xJsU5QCyr9nhb6aq8GH8WJZ21Q@mail.gmail.com>

Hi Duncan, Cameron,

Interesting discussion. As far as terminology is concerned, refer to, eg
Donnelly et. al Dynamic Datum Transformations in Australia and New Zealand
<http://ceur-ws.org/Vol-1142/paper6.pdf>:

The points being measured are attached to the surface of the Earth, which
is continually moving due to crustal
dynamics and other localised deformations. Thus if a point is regularly
re-measured, its coordinates will change to
reflect the reality that the point’s relationship to the centre of the
Earth has changed due to crustal dynamics. A
reference frame or datum which enables this changing position to be tracked
is referred to as ‘dynamic’.


I believe that is common usage. A reference frame in which coordinates of
points on the surface of the earth are more-or-less constant over time is
referred to as being "static" or "plate fixed". An exemplar is GDA2020. A
reference frame in which coordinates of points on the surface of the earth
are time dependent is referred to as being "dynamic".

As Cameron points out, this is muddied by the fact that WGS-84 was
originally considered to be a "static" datum, and is still treated as such
by a lot of software. See Mike Craymer's Making Sense of Evolving Datums:
WGS84 and NAD83 <http://www.naref.org/transf/nad83_hydroscan2006.pdf> for a
nice overview.

Cameron's proposed solution is:

To support web-mapping use cases, at centimetre level accuracy, we require
an internationally accepted static datum (and accompanying projection). As
WGS84 Web-Mercator has become the world’s defacto-standard, we propose that
the international community select, and lock in a specific WGS84 epoch
(date)


Actually, I suggest that the solution is more along the lines of making
sure that any spatial data set is clearly tagged with the reference frame
that it refers to. That gives us a chance of being able to combine data
sets. For example, if you have a data set referring to GDA94, with a known
accuracy, and you have a second data set referring to GDA2020, with a known
accuracy, and you have a transformation GDA94 -> GDA2020, with known
accuracy, then you can make a reasonable estimate of how well the two data
sets will fit together. In practice, the reference frame for a cm level
data set is going to be either one of the ITRF's (eg ITRF2014) or it is
going to be a national datum (eg GDA2020). We need to reserve the term
"WGS-84" to refer to positions based on broadcast GPS orbits - having an
accuracy of a couple of meters.

Regards,
Nick.


On Sun, 23 Jun 2019 at 19:00, Duncan Agnew <dagnew at ucsd.edu> wrote:

> All:
>
>         As a geophysicist who studies crustal deformation, I'll weigh
> in and say that the issue is not (I think) the dynamic nature of the
> datum, but plate tectonics.
>
>         Taking WGS84 (of various dates) to be matched to the various
> releases of the ITRF, I'd say that the latter is as fixed as it is
> possible to make it: origin at the Earth's center of mass, Z axis
> to the Conventional International Origin, X axis defined so the X-Z
> plane is parallel to the local vertical through Greenwich (to maintain
> continuity of Universal Time). The ITRF deals with plate tectonics
> by including a model of what the plate motions are, and then chooses
> a variation of orientation that makes the these motions,
> averaged over the Earth, zero: as close as we can get to "average
> Earth motion". As the data series get longer and the coverage better,
> there are new releases, but the differences between them are small.
>
>         What isn't small is the plate motion relative to this system:
> in it, a location on the Australian plate moves northeast at the rate
> of of 1.8 m from 1994 to 2020. This isn't because of updates to the
> datum, it is because the ITRF coordinate system is designed to be fixed
> relative to the average Earth. That is, the datum, and the coordinate
> system, is fixed, but the location of a point on the ground in that
> system varies with time.
>
>         The only way around this, so far as I know, is to include dates
> with coordinates and have some code that will allow you to convert
> measured coordinates between epochs. For Australia, Europe, and much
> of North America this is just a time-dependent shift that is nearly the
> same everywhere: on a plate boundary it is a lot more complicated, as
> is shown by the NGS HTDP program, which has lots of grids and allowances
> for earthquakes.
>
>         In summary: the different releases of the WGS/ITRF are different,
> but this doesn't make them "dynamic datums": they are fixed, to the
> the Earth on average, but relative to that different parts of the Earth's
> surface are moving. Not a new problem, but one that complicates things.
>
>         Hope this clarifies rather than muddies.
>
> Thanks
> Duncan Agnew
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190624/e6db64d6/attachment.html>

From even.rouault at spatialys.com  Mon Jun 24 00:53:40 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 24 Jun 2019 09:53:40 +0200
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <CAG6Em0ArX2QbagAkqc6ep25Lp+3JjUVnSYxGht7mx-MwhAWL=w@mail.gmail.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <8d83b366-f4ac-1382-d7b1-19ac6a9c9048@gmail.com>
 <CAG6Em0ArX2QbagAkqc6ep25Lp+3JjUVnSYxGht7mx-MwhAWL=w@mail.gmail.com>
Message-ID: <1869575.vOaMWDItcd@even-i700>

>         In summary: the different releases of the WGS/ITRF are different,
> but this doesn't make them "dynamic datums": they are fixed, to the
> the Earth on average, but relative to that different parts of the Earth's
> surface are moving. Not a new problem, but one that complicates things.

I believe one hurdle in that area (at least for a non-geodesist / non-
geophysist professional like me) is that the terminology seems to be somewhat 
fluctuating depending on speakers and a bit confusing in itself (not speaking 
here about even more complex beasts like NZGD2000 "semi-dynamic" datum)

ITRF realizations are considered by the ISO TC211 / OGC CRS WG as Dynamic 
reference frame.
See https://docs.opengeospatial.org/as/18-005r4/18-005r4.html#116
Given their definitions, my understanding is that any datum / CRS into which 
you need to qualify coordinates with an epoch is considered as a dynamic datum 
/ CRS.
The IOGP "Geomatics Guidance Note 25 – Dynamic versus static CRSs and use of 
the ITRF" (
https://www.iogp.org/bookstore/product/geomatics-guidance-note-25-dynamic-versus-static-crss-and-use-of-the-itrf/ ) also classifies ITRF and WGS84 as 
dyanmic reference frames.

At bottom of page 16 of this guidance note, there is even a quite funny 
discussion about whether NAD83(2011) should be considered as a static or 
dynamic CRS... The bottom line seems to be that it is in essence dynamic, but 
in practice, it is recommended to always express coordinates at epoch 2010.00

~~~

But those terminology discussions don't solve Cameron's pratical problem which 
is  that when transforming data that is originally in GDA94 or GDA2020 to 
WGS84 or WebMercator (using WGS84), the recommended transformations in EPSG, 
ESRI, etc... are null transformations, causign misalignments when mixing 
sources from GDA94 and GDA2020.

Using "some" realization of WGS84 with coordinates expressed at "some" epoch  
is perhaps not the best solution, since there are not so many accurate 
transformations published from fixed-plate datum to WGS84. Looking at a few 
"modern" CRS, it seems they are snapshots of ITRF realizations, with published 
transformations to ITRF realizations.
For example EPSG:8049 is "ITRF2014 to GDA2020 (1)" with an accuracy of 1mm, 
but EPSG:8848 is "GDA2020 to WGS 84 (G1762) (1)" (which uses the same 
parameters as EPSG:8049, at the sign difference excepted, due to the different 
direction of the transformation), is advertized to have an accuracy of 20cm. 
There is no transformation published from GDA94 to any WGS84 realization other 
than the generic one.
ITRF being defined from many sources, including satelite positionning, I guess 
we can assume it is inherently more accurately defined, right ?. Using 
something ITRF based would also have the communication advantage to no longer 
use the "WGS84" word for such a global CRS, and thus mark the break with the 
current practice.

So one could:
- select a ITRF realization (currently ITRF2014), and a
more or less arbitrary coordinate epoch into which to express coordinates. 
- ask all mapping agencies to publish official coordinate operations (possibly 
concatenated operations when coming from older CRS) from the popular fixed-
plate CRS (or dynamic CRS if those are the one adopted!) to that ITRF 
realization. The data might be already there. For example if that would 
ITRF2014, for GDA2020, there is a GDA2020->ITRF2014 transformation. But for 
GDA94, which path should be taken: GDA94->GDA2020->ITRF2014, or GDA94-> 
ITRF2005->ITRF2014 or GDA94->ITF2008->ITRF2014, or ... ? But as the epoch that 
would be selected would never be the epoch at which all fixed-plate CRS are 
related to ITRF, you need transformations that take into account at least 
plate motion (15-parameter Helmert might be sufficient for that), but if you 
need more accuracy, you might also need deformation models (grid based).
- that procedure should be repeated every 5 or 10 years, so as to minimize the 
difference between up-to-date coordinates and the one of the CRS. So if you 
decide for a 5 year cycle, then the coordinate epoch could be the middle date 
of the cycle: for example for 2020-2025, use 2022.50, etc.

[[[[ (if you're a geodesit, make sure the ceiling is high enough :-)

Or... I've a completely crazy idea, likely unsound from a geodesic point of 
view, but that might have some practical merits...

Let's define a "global mosaiced static CRS", that is the union / pachwork of 
the national/regional/continental CRS in current use.
For example right now, we would use GDA2020 in Australia, ETRS89 in Europe 
(*), NAD83(2011) for USA, NAD83(CSRS)v7 for Canada, JGD2011 for Japan, etc...
One issue in the definition of this global CRS is that some of those 
constituent CRS are dynamic, so a coordinate epoch should also be selected for 
those (not necessarily the same globally though. you might use 2010.0 for 
NAD83(2011) and something else for NAD83(CSRS)v7.

Advantages :
- in most cases, no datum transformation needed if you operate with recent 
enough data. (or a well-known one, like GDA94->GDA2020, NZGD49->NZGD2000, 
etc...)
- the fact that there is no datum transformation is not only saving 
computation time, but also solves the practical issue of getting 
transformation parameters. Not all grids needed to do some accurate 
transformations are available as open data, or easily available at all.
- coordinates in that CRS would have a legal validity in all considered areas, 
if you've selected constituent CRS that have a legal value.

Drawbacks:
- inconsistencies at the border between those CRSs, let's say the USA - Canada 
border, so seamless maps will show annoying discontinuities in those areas. 
(but I'm thinking that even with the previous ITRF based approach, you would 
also have discontinuities, as the transformation parameters might not be 
consistent on each side of borders, but probably the shift would be one or two 
order of magnitude lower than the gross approach of the global mosaiced 
static CRS)
- related to that: distance measurements that span over several of those 
countries/continents, etc will have an inaccuracy of possibly some metre 
level, wheras measurements inside one of those region will be as good as the 
original datum is !
- those effects can be minimized if it is possible to use constituent CRS that 
are snapshots of close enough ITRF realization at a close enough same epoch...
- if a constituent CRS is a dynamic CRS, then you still have the complexity of 
doing time-based transformations.

Like the ITRF-based solution, that process should be repeated every 5 or 10 
years to take into account the adoption of new static regional CRS and define 
a new version of this global mosaiced static CRS. 
]]]]]

Anyway, I guess any solution based on a static global CRS will involve 
repeating the definition process at regular interval (to avoid the current 
mess with 'WGS84'), so that Earth-fixed positions measured today and the 
corresponding ones on the static CRS don't diverge too much.

In both cases, you could still use the WebMercator projection parameters to 
transform the geographic coordinates to projected ones. So that would not be 
EPSG:3857, but something similar based on the global CRS. Actually, if you use 
the ITRF-based approach, it would be rather good to adopt a 'real' Mercator 
projection doing computation on the ellipsoid, like EPSG:3395 "WGS 84 / World 
Mercator", instead of the botched Popular Visualisation Pseudo-Mercator method 
of EPSG:3857 that has unpleasant cartographic properties (non-conformal, see
https://www.slideshare.net/NGA_GEOINT/ngas-position-on-webmercator)

Even

(*) But this is also tricky since ETRS89 is a system with multiple ETRFyy 
realizations, linked to ITRFyy realizations. The latest is ETRF2014. Each 
country may adopt a different ETRS89 realization. For example RGF93, the legal 
system in France, happens to be ETRS89 by realization of ETRF2000 at epoch 
2009.00 (in its v2. RGF93 v1 was ETRS89 by realization of ETRF93 @1993.00).

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From cameron.shorter at gmail.com  Mon Jun 24 04:18:51 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Mon, 24 Jun 2019 21:18:51 +1000
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <1869575.vOaMWDItcd@even-i700>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <8d83b366-f4ac-1382-d7b1-19ac6a9c9048@gmail.com>
 <CAG6Em0ArX2QbagAkqc6ep25Lp+3JjUVnSYxGht7mx-MwhAWL=w@mail.gmail.com>
 <1869575.vOaMWDItcd@even-i700>
Message-ID: <a618ecd0-8039-2cc4-f900-06bb841d7aa9@gmail.com>

Thanks for all the feedback so far.

For those CCed who are not on the email list, I suggest joining here: 
https://lists.osgeo.org/mailman/listinfo/proj

You can see other's comments in the archives here: 
https://lists.osgeo.org/pipermail/proj/2019-June/thread.html

Nick Brown has provided significant feedback to my original version of 
the doc: 
https://docs.google.com/document/d/15uBX2qICODRkiHXeksT0zEy6TuysanIxuc4anV0o5F0/ 
<https://docs.google.com/document/d/15uBX2qICODRkiHXeksT0zEy6TuysanIxuc4anV0o5F0/edit#>

* He has provided clarifications on terminology which is good. But the 
document is a bit of a mess now. I'll give others a few days to add 
comments, and then I will have another go a cleaning it up.

* Nick, you have raised concerns about "WGS84 Web Mercator" being a poor 
choice for accurate mapping. While this may be valid, I urge we treat 
that concern as a separate issue. Solving it will likely require 
significantly more inertia which has potential to derail the 
static/dynamic map alignment problems we have with GDA94/GDA2020/WGS84.

* Others, thanks for the feedback, ideas, and links to source material. 
I'm expecting we will have quite a bit more material to cover.


On 24/6/19 5:53 pm, Even Rouault wrote:
>>          In summary: the different releases of the WGS/ITRF are different,
>> but this doesn't make them "dynamic datums": they are fixed, to the
>> the Earth on average, but relative to that different parts of the Earth's
>> surface are moving. Not a new problem, but one that complicates things.
> I believe one hurdle in that area (at least for a non-geodesist / non-
> geophysist professional like me) is that the terminology seems to be somewhat
> fluctuating depending on speakers and a bit confusing in itself (not speaking
> here about even more complex beasts like NZGD2000 "semi-dynamic" datum)
>
> ITRF realizations are considered by the ISO TC211 / OGC CRS WG as Dynamic
> reference frame.
> See https://docs.opengeospatial.org/as/18-005r4/18-005r4.html#116
> Given their definitions, my understanding is that any datum / CRS into which
> you need to qualify coordinates with an epoch is considered as a dynamic datum
> / CRS.
> The IOGP "Geomatics Guidance Note 25 – Dynamic versus static CRSs and use of
> the ITRF" (
> https://www.iogp.org/bookstore/product/geomatics-guidance-note-25-dynamic-versus-static-crss-and-use-of-the-itrf/ ) also classifies ITRF and WGS84 as
> dyanmic reference frames.
>
> At bottom of page 16 of this guidance note, there is even a quite funny
> discussion about whether NAD83(2011) should be considered as a static or
> dynamic CRS... The bottom line seems to be that it is in essence dynamic, but
> in practice, it is recommended to always express coordinates at epoch 2010.00
>
> ~~~
>
> But those terminology discussions don't solve Cameron's pratical problem which
> is  that when transforming data that is originally in GDA94 or GDA2020 to
> WGS84 or WebMercator (using WGS84), the recommended transformations in EPSG,
> ESRI, etc... are null transformations, causign misalignments when mixing
> sources from GDA94 and GDA2020.
>
> Using "some" realization of WGS84 with coordinates expressed at "some" epoch
> is perhaps not the best solution, since there are not so many accurate
> transformations published from fixed-plate datum to WGS84. Looking at a few
> "modern" CRS, it seems they are snapshots of ITRF realizations, with published
> transformations to ITRF realizations.
> For example EPSG:8049 is "ITRF2014 to GDA2020 (1)" with an accuracy of 1mm,
> but EPSG:8848 is "GDA2020 to WGS 84 (G1762) (1)" (which uses the same
> parameters as EPSG:8049, at the sign difference excepted, due to the different
> direction of the transformation), is advertized to have an accuracy of 20cm.
> There is no transformation published from GDA94 to any WGS84 realization other
> than the generic one.
> ITRF being defined from many sources, including satelite positionning, I guess
> we can assume it is inherently more accurately defined, right ?. Using
> something ITRF based would also have the communication advantage to no longer
> use the "WGS84" word for such a global CRS, and thus mark the break with the
> current practice.
>
> So one could:
> - select a ITRF realization (currently ITRF2014), and a
> more or less arbitrary coordinate epoch into which to express coordinates.
> - ask all mapping agencies to publish official coordinate operations (possibly
> concatenated operations when coming from older CRS) from the popular fixed-
> plate CRS (or dynamic CRS if those are the one adopted!) to that ITRF
> realization. The data might be already there. For example if that would
> ITRF2014, for GDA2020, there is a GDA2020->ITRF2014 transformation. But for
> GDA94, which path should be taken: GDA94->GDA2020->ITRF2014, or GDA94->
> ITRF2005->ITRF2014 or GDA94->ITF2008->ITRF2014, or ... ? But as the epoch that
> would be selected would never be the epoch at which all fixed-plate CRS are
> related to ITRF, you need transformations that take into account at least
> plate motion (15-parameter Helmert might be sufficient for that), but if you
> need more accuracy, you might also need deformation models (grid based).
> - that procedure should be repeated every 5 or 10 years, so as to minimize the
> difference between up-to-date coordinates and the one of the CRS. So if you
> decide for a 5 year cycle, then the coordinate epoch could be the middle date
> of the cycle: for example for 2020-2025, use 2022.50, etc.
>
> [[[[ (if you're a geodesit, make sure the ceiling is high enough :-)
>
> Or... I've a completely crazy idea, likely unsound from a geodesic point of
> view, but that might have some practical merits...
>
> Let's define a "global mosaiced static CRS", that is the union / pachwork of
> the national/regional/continental CRS in current use.
> For example right now, we would use GDA2020 in Australia, ETRS89 in Europe
> (*), NAD83(2011) for USA, NAD83(CSRS)v7 for Canada, JGD2011 for Japan, etc...
> One issue in the definition of this global CRS is that some of those
> constituent CRS are dynamic, so a coordinate epoch should also be selected for
> those (not necessarily the same globally though. you might use 2010.0 for
> NAD83(2011) and something else for NAD83(CSRS)v7.
>
> Advantages :
> - in most cases, no datum transformation needed if you operate with recent
> enough data. (or a well-known one, like GDA94->GDA2020, NZGD49->NZGD2000,
> etc...)
> - the fact that there is no datum transformation is not only saving
> computation time, but also solves the practical issue of getting
> transformation parameters. Not all grids needed to do some accurate
> transformations are available as open data, or easily available at all.
> - coordinates in that CRS would have a legal validity in all considered areas,
> if you've selected constituent CRS that have a legal value.
>
> Drawbacks:
> - inconsistencies at the border between those CRSs, let's say the USA - Canada
> border, so seamless maps will show annoying discontinuities in those areas.
> (but I'm thinking that even with the previous ITRF based approach, you would
> also have discontinuities, as the transformation parameters might not be
> consistent on each side of borders, but probably the shift would be one or two
> order of magnitude lower than the gross approach of the global mosaiced
> static CRS)
> - related to that: distance measurements that span over several of those
> countries/continents, etc will have an inaccuracy of possibly some metre
> level, wheras measurements inside one of those region will be as good as the
> original datum is !
> - those effects can be minimized if it is possible to use constituent CRS that
> are snapshots of close enough ITRF realization at a close enough same epoch...
> - if a constituent CRS is a dynamic CRS, then you still have the complexity of
> doing time-based transformations.
>
> Like the ITRF-based solution, that process should be repeated every 5 or 10
> years to take into account the adoption of new static regional CRS and define
> a new version of this global mosaiced static CRS.
> ]]]]]
>
> Anyway, I guess any solution based on a static global CRS will involve
> repeating the definition process at regular interval (to avoid the current
> mess with 'WGS84'), so that Earth-fixed positions measured today and the
> corresponding ones on the static CRS don't diverge too much.
>
> In both cases, you could still use the WebMercator projection parameters to
> transform the geographic coordinates to projected ones. So that would not be
> EPSG:3857, but something similar based on the global CRS. Actually, if you use
> the ITRF-based approach, it would be rather good to adopt a 'real' Mercator
> projection doing computation on the ellipsoid, like EPSG:3395 "WGS 84 / World
> Mercator", instead of the botched Popular Visualisation Pseudo-Mercator method
> of EPSG:3857 that has unpleasant cartographic properties (non-conformal, see
> https://www.slideshare.net/NGA_GEOINT/ngas-position-on-webmercator)
>
> Even
>
> (*) But this is also tricky since ETRS89 is a system with multiple ETRFyy
> realizations, linked to ITRFyy realizations. The latest is ETRF2014. Each
> country may adopt a different ETRS89 realization. For example RGF93, the legal
> system in France, happens to be ETRS89 by realization of ETRF2000 at epoch
> 2009.00 (in its v2. RGF93 v1 was ETRS89 by realization of ETRF93 @1993.00).
>
-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190624/4ceb5307/attachment-0001.html>

From cameron.shorter at gmail.com  Mon Jun 24 10:04:41 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Tue, 25 Jun 2019 03:04:41 +1000
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <CALQGVr3-FK18wy4yFO1-vjTLnOMfVG_VAQDjmqVWXTKcRZh29g@mail.gmail.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CALQGVr3-FK18wy4yFO1-vjTLnOMfVG_VAQDjmqVWXTKcRZh29g@mail.gmail.com>
Message-ID: <6e008afe-5c66-c2c9-aa79-de87b7a26a68@gmail.com>

Thanks Doug, you have pointed me to Matt Higgins who is one of the 
Australians on this email's CC list. He has contributed toward 
identifying this problem. I believe we need to bring this conversation 
into an international forum, probably headed up by the OGC.

You might be able to suggest who we should connect with?

Warm regards, Cameron

On 24/6/19 11:30 pm, Newcomb, Doug wrote:
> Cameron,
>  I just emailed  someone working on this .  He sent me the links below.
>
> https://www.gps.gov/governance/advisory/
>
> https://www.gps.gov/governance/advisory/members/higgins/
>
> Doug
>
> On Thu, Jun 20, 2019 at 5:15 PM Cameron Shorter 
> <cameron.shorter at gmail.com <mailto:cameron.shorter at gmail.com>> wrote:
>
>     Hi folks,
>
>     Our Australian spatial data users are about to face a systematic
>     mismatch challenge when trying to use multiple static datums
>     (GDA2020, GDA94) with the dynamic datum (WGS84). At the moment, it
>     is government agencies grappling with the problem, but it is about
>     to become a mainstream issue.
>
>     Australia now has static datums for the years 1994 and 2020 and
>     uses WGS84 (a time-dependent datum!), for web-mapping and
>     web-services.  We recognise:
>     1. Transforming from GDA94 to GDA2020 reflects Australia’s
>     tectonic movement of ~ 1.8 metres to the North East.
>     2. GDA94 was defined as ‘equal to WGS84’ in 1994.
>     3. GDA2020  was defined as ‘equal to WGS84’ in 2020.
>     All three statements can’t be accurate. It results in mis-aligned
>     maps in WGS84
>
>     I believe this is a problem the whole world needs to address,
>     given the upcoming modernsation of significant national datums
>     including the U.S and we need to bring this topic into an
>     international conversation, ASAP.
>     I'm interested to know if anyone here is looking into and/or has
>     opinions on how it should be solved. I'd like to incorporate your
>     ideas into the recommendations that we are putting foward.
>     -- 
>     Cameron Shorter
>     Technology Demystifier
>     Open Technologies and Geospatial Consultant
>
>     M +61 (0) 419 142 254
>
>
>
>
>
> -- 
> Doug Newcomb - Cartographer
> USFWS
> 551F Pylon Dr
> Raleigh, NC
> 919-856-4520 ext. 14 doug_newcomb at fws.gov <mailto:doug_newcomb at fws.gov>
> ---------------------------------------------------------------------------------------------------------
>
> */NOTE: This email correspondence and any attachments to and from this 
> sender is subject to the Freedom of Information Act (FOIA) and may be 
> disclosed to third parties./*​

-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/cc1b6a06/attachment.html>

From nick_mein at trimble.com  Mon Jun 24 18:15:22 2019
From: nick_mein at trimble.com (Nick Mein)
Date: Tue, 25 Jun 2019 13:15:22 +1200
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <6e008afe-5c66-c2c9-aa79-de87b7a26a68@gmail.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CALQGVr3-FK18wy4yFO1-vjTLnOMfVG_VAQDjmqVWXTKcRZh29g@mail.gmail.com>
 <6e008afe-5c66-c2c9-aa79-de87b7a26a68@gmail.com>
Message-ID: <CAF3Sn4VDiGv97CURHZOC-JQ5YN_b_9uXmj3=gj259G4as=1Ccw@mail.gmail.com>

Hi Evan, Cameron,

See https://docs.opengeospatial.org/as/18-005r4/18-005r4.html#116


That is a great document. Thanks for sharing!

At bottom of page 16 of this guidance note, there is even a quite funny
> discussion about whether NAD83(2011) should be considered as a static or
> dynamic CRS


It really depends on where you are working. Over most of the continental US
you can consider NAD83(2011) to be a static reference frame. (I.e. you can
consider the velocity of points to be zero.) But that isn't true if you are
working in California.

But those terminology discussions don't solve Cameron's pratical problem
> which
> is  that when transforming data that is originally in GDA94 or GDA2020 to
> WGS84 or WebMercator (using WGS84), the recommended transformations in
> EPSG,
> ESRI, etc... are null transformations, causign misalignments when mixing
> sources from GDA94 and GDA2020.


Right. But there is a solution to Cameron's practical problem, which is to
transform his GDA94 dataset(s) to GDA2020.
In the longer term, we can all (practitioners, geospatial software
providers) help clear up misunderstandings by being more precise with our
terminology. Including pretending that there is such a thing as a precise
WGS-84 coordinate, or that GDA, GDA2020, NAD83, etc are equivalent to
"WGS-84".

Let's define a "global mosaiced static CRS", that is the union / pachwork of
> the national/regional/continental CRS in current use.


I'm pretty sure that is what products such as Google Maps must do, though
I'd love to get verification from someone that knows for sure.

A key point is - how do you access whatever reference frame you are using?
Traditionally you would do that by locating physical marks on the ground,
and looking up their published coordinates. Today, you are likely to using
a real time GNSS corrections network, or a post-processing service such as
OPUS/AUSPOS/etc, or you are going to be using a precise point positioning
service. The coordinates that you get are going to be either in a
local/regional reference frame such as GDA/NAD83/ETRF, or they are going to
be ITRF. For (large scale?) web mapping applications, munging together data
sets from different reference frames is fine. But ultimately you need to be
able to drill down to the original data.

Regards,
Nick.

On Tue, 25 Jun 2019 at 05:04, Cameron Shorter <cameron.shorter at gmail.com>
wrote:

> Thanks Doug, you have pointed me to Matt Higgins who is one of the
> Australians on this email's CC list. He has contributed toward identifying
> this problem. I believe we need to bring this conversation into an
> international forum, probably headed up by the OGC.
>
> You might be able to suggest who we should connect with?
>
> Warm regards, Cameron
> On 24/6/19 11:30 pm, Newcomb, Doug wrote:
>
> Cameron,
>  I just emailed  someone working on this .  He sent me the links below.
>
> https://www.gps.gov/governance/advisory/
>
> https://www.gps.gov/governance/advisory/members/higgins/
>
> Doug
>
> On Thu, Jun 20, 2019 at 5:15 PM Cameron Shorter <cameron.shorter at gmail.com>
> wrote:
>
>> Hi folks,
>>
>> Our Australian spatial data users are about to face a systematic mismatch
>> challenge when trying to use multiple static datums (GDA2020, GDA94) with
>> the dynamic datum (WGS84). At the moment, it is government agencies
>> grappling with the problem, but it is about to become a mainstream issue.
>>
>> Australia now has static datums for the years 1994 and 2020 and uses
>> WGS84 (a time-dependent datum!), for web-mapping and web-services.  We
>> recognise:
>> 1. Transforming from GDA94 to GDA2020 reflects Australia’s tectonic
>> movement of ~ 1.8 metres to the North East.
>> 2. GDA94 was defined as ‘equal to WGS84’ in 1994.
>> 3. GDA2020  was defined as ‘equal to WGS84’ in 2020.
>> All three statements can’t be accurate. It results in mis-aligned maps in
>> WGS84
>>
>> I believe this is a problem the whole world needs to address, given the
>> upcoming modernsation of significant national datums including the U.S and
>> we need to bring this topic into an international conversation, ASAP.
>> I'm interested to know if anyone here is looking into and/or has opinions
>> on how it should be solved. I'd like to incorporate your ideas into the
>> recommendations that we are putting foward.
>> --
>> Cameron Shorter
>> Technology Demystifier
>> Open Technologies and Geospatial Consultant
>>
>> M +61 (0) 419 142 254
>>
>>
>>
>>
>
> --
> Doug Newcomb - Cartographer
> USFWS
> 551F Pylon Dr
> Raleigh, NC
> 919-856-4520 ext. 14 doug_newcomb at fws.gov
>
> ---------------------------------------------------------------------------------------------------------
>
> *NOTE: This email correspondence and any attachments to and from this
> sender is subject to the Freedom of Information Act (FOIA) and may be
> disclosed to third parties.*​
>
> --
> Cameron Shorter
> Technology Demystifier
> Open Technologies and Geospatial Consultant
>
> M +61 (0) 419 142 254
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/1d2c4923/attachment.html>

From kreve at sdfe.dk  Mon Jun 24 23:14:31 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 25 Jun 2019 06:14:31 +0000
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <CAF3Sn4VDiGv97CURHZOC-JQ5YN_b_9uXmj3=gj259G4as=1Ccw@mail.gmail.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CALQGVr3-FK18wy4yFO1-vjTLnOMfVG_VAQDjmqVWXTKcRZh29g@mail.gmail.com>
 <6e008afe-5c66-c2c9-aa79-de87b7a26a68@gmail.com>
 <CAF3Sn4VDiGv97CURHZOC-JQ5YN_b_9uXmj3=gj259G4as=1Ccw@mail.gmail.com>
Message-ID: <3526557F-DCCE-4CC2-9D06-53D2DA4883E5@sdfe.dk>

This is a great discussion! I am happy to see that people outside of the
geodesy community is starting to realise that things can’t continue as they
have been. We’ve certainly done our fair share of the work here in PROJ
community but as Cameron points out there’s still some ways to go. From the
discussion it seems to me that everyone is converging towards a common
understanding of dynamic reference frames and what the challenges of them are.
I have worked quite extensively with the topic over the last couple of years
(see [0] for a summary) and there’s two important things that has not been
touched in this discussion yet:

1. WGS84 is practically equivalent to ITRF2008 and ITRF2014

The two frames coincide at the cm level [1] and hence there’s a
null-transformation between the two systems. This fact can be leveraged to
expand the number of direct transformation between WGS84 and regional/nation
frames. As Even pointed out often times the transformation between WGS84 and
national frame registered by the EPSG is a null transformation. Often times
there will be a transformation to a ITRFxxxx that offers better accuracy. This
of course requires that coordinates come with a timestamp, which brings me to
my next point:

2. GIS software does not offer reliable ways to store the observation time of
coordinates

To me this is the core of the problem in bringing dynamic reference frames into
practical use. Dynamic reference frames are inherently spatiotemporal - all
coordinates must consist of three spatial components and one temporal,
otherwise they simply are of no use. The timestamp of a coordinate has to be
the observation time of the coordinate and the timestamp must not be changed
during transformations (otherwise you can’t do the reverse transformation). If
those two criteria are met you can reliably transform between all reference
frames that are based on ITRFxxxx, for example between GDA94, WGS84 and GDA2020
as has been mentioned as currently being problematic in that regard.

So, if you keep track of time, it’s not all that difficult to work with dynamic
reference frames. The problem is that it is impossible in practice since there
is no standard that describes how to do this. The OGC Simple Features standard
which most file formats are based on simply doesn’t include time as a
dimension. At best, we can store X, Y, Z and M, with the M value being a
“measure” of some kind. This could in principle be observation times of the
coordinate but how would you distinguish between a time measure and some other
type of measure (e.g. a velocity)?

Cameron, if you want to take this up with the OGC, this is where you should
start. Most of what has been mentioned in this thread as problems are actually
solved in recent versions of PROJ and GDAL but we need GIS data formats that
can handle 4D coordinates before all those nice new features can be used to
their full extent. Most important is the Simple Features standard but I can
image that some minor tweaks will be needed in ISO19111 as well.

/Kristian


[0] http://www.geophysica.fi/pdf/geophysica_2019_54_kierulf.pdf
[1] ftp://itrf.ensg.ign.fr/pub/itrf/WGS84.TXT


On 25 Jun 2019, at 03:15, Nick Mein <nick_mein at trimble.com<mailto:nick_mein at trimble.com>> wrote:

Hi Evan, Cameron,

See https://docs.opengeospatial.org/as/18-005r4/18-005r4.html#116

That is a great document. Thanks for sharing!

At bottom of page 16 of this guidance note, there is even a quite funny
discussion about whether NAD83(2011) should be considered as a static or
dynamic CRS

It really depends on where you are working. Over most of the continental US you can consider NAD83(2011) to be a static reference frame. (I.e. you can consider the velocity of points to be zero.) But that isn't true if you are working in California.

But those terminology discussions don't solve Cameron's pratical problem which
is  that when transforming data that is originally in GDA94 or GDA2020 to
WGS84 or WebMercator (using WGS84), the recommended transformations in EPSG,
ESRI, etc... are null transformations, causign misalignments when mixing
sources from GDA94 and GDA2020.

Right. But there is a solution to Cameron's practical problem, which is to transform his GDA94 dataset(s) to GDA2020.
In the longer term, we can all (practitioners, geospatial software providers) help clear up misunderstandings by being more precise with our terminology. Including pretending that there is such a thing as a precise WGS-84 coordinate, or that GDA, GDA2020, NAD83, etc are equivalent to "WGS-84".

Let's define a "global mosaiced static CRS", that is the union / pachwork of
the national/regional/continental CRS in current use.

I'm pretty sure that is what products such as Google Maps must do, though I'd love to get verification from someone that knows for sure.

A key point is - how do you access whatever reference frame you are using? Traditionally you would do that by locating physical marks on the ground, and looking up their published coordinates. Today, you are likely to using a real time GNSS corrections network, or a post-processing service such as OPUS/AUSPOS/etc, or you are going to be using a precise point positioning service. The coordinates that you get are going to be either in a local/regional reference frame such as GDA/NAD83/ETRF, or they are going to be ITRF. For (large scale?) web mapping applications, munging together data sets from different reference frames is fine. But ultimately you need to be able to drill down to the original data.

Regards,
Nick.

On Tue, 25 Jun 2019 at 05:04, Cameron Shorter <cameron.shorter at gmail.com<mailto:cameron.shorter at gmail.com>> wrote:

Thanks Doug, you have pointed me to Matt Higgins who is one of the Australians on this email's CC list. He has contributed toward identifying this problem. I believe we need to bring this conversation into an international forum, probably headed up by the OGC.

You might be able to suggest who we should connect with?

Warm regards, Cameron

On 24/6/19 11:30 pm, Newcomb, Doug wrote:
Cameron,
 I just emailed  someone working on this .  He sent me the links below.

https://www.gps.gov/governance/advisory/

https://www.gps.gov/governance/advisory/members/higgins/

Doug

On Thu, Jun 20, 2019 at 5:15 PM Cameron Shorter <cameron.shorter at gmail.com<mailto:cameron.shorter at gmail.com>> wrote:
Hi folks,

Our Australian spatial data users are about to face a systematic mismatch challenge when trying to use multiple static datums (GDA2020, GDA94) with the dynamic datum (WGS84). At the moment, it is government agencies grappling with the problem, but it is about to become a mainstream issue.

Australia now has static datums for the years 1994 and 2020 and uses WGS84 (a time-dependent datum!), for web-mapping and web-services.  We recognise:
1. Transforming from GDA94 to GDA2020 reflects Australia’s tectonic movement of ~ 1.8 metres to the North East.
2. GDA94 was defined as ‘equal to WGS84’ in 1994.
3. GDA2020  was defined as ‘equal to WGS84’ in 2020.
All three statements can’t be accurate. It results in mis-aligned maps in WGS84

I believe this is a problem the whole world needs to address, given the upcoming modernsation of significant national datums including the U.S and we need to bring this topic into an international conversation, ASAP.
I'm interested to know if anyone here is looking into and/or has opinions on how it should be solved. I'd like to incorporate your ideas into the recommendations that we are putting foward.
--
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254





--
Doug Newcomb - Cartographer
USFWS
551F Pylon Dr
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov<mailto:doug_newcomb at fws.gov>
---------------------------------------------------------------------------------------------------------

NOTE: This email correspondence and any attachments to and from this sender is subject to the Freedom of Information Act (FOIA) and may be disclosed to third parties.​

--
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/92d8f2c7/attachment-0001.html>

From martin.desruisseaux at geomatys.com  Tue Jun 25 00:41:02 2019
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Tue, 25 Jun 2019 09:41:02 +0200
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <3526557F-DCCE-4CC2-9D06-53D2DA4883E5@sdfe.dk>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CALQGVr3-FK18wy4yFO1-vjTLnOMfVG_VAQDjmqVWXTKcRZh29g@mail.gmail.com>
 <6e008afe-5c66-c2c9-aa79-de87b7a26a68@gmail.com>
 <CAF3Sn4VDiGv97CURHZOC-JQ5YN_b_9uXmj3=gj259G4as=1Ccw@mail.gmail.com>
 <3526557F-DCCE-4CC2-9D06-53D2DA4883E5@sdfe.dk>
Message-ID: <a60bb91b-16d4-26e5-1373-67164ede4a66@geomatys.com>

Hello all

ISO 19111:2019 (Referencing by coordinates) already includes the
timestamp of coordinates. The standard defines a CoordinateMetadata
class with two properties:

  * crs: Identifier of the coordinate reference system to which a
    coordinate set is referenced.
  * coordinateEpoch: Epoch at which coordinate referenced to a dynamic
    CRS are valid.

ISO 19107 (the standard that defines geometry objects) has been revised.
I did not yet had a chance to look closely at it, but last time I
attended to the discussions at OGC my understanding was that the new
geometry objects would be associated to ISO 19111 CoordinateMetadata
class (and consequently include the coordinate epoch) instead than to
only the CRS.

Simple features are derived from ISO 19107 by the same author. I think I
have seen emails on OGC mailing list about drafts available, but did not
yet had a chance to look at them. At least, the current Simple Feature
editor is well aware of this coordinate epoch topic since he was present
at OGC meetings that debated about it. So I guess there is good chances
that coordinate epoch will be present in some way in simple features
(but did not verified).

    Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/2530b098/attachment.html>

From kreve at sdfe.dk  Tue Jun 25 01:09:12 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 25 Jun 2019 08:09:12 +0000
Subject: [PROJ] Nomination of Mike Taves for core committer status
Message-ID: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>

PSC Members,

I would like to nominate Mike Taves for core committer status.

Over the last couple of years Mike has been a valuable resource for the project,
especially when it comes to improving documentation and the CMake build setup.
Lately I have been relying almost entirely on Mikes advice regarding CMake and
at this point it is only fair to acknowledge his contributions and give him direct
access to the git repository.

While we don't have designated maintenance areas I will recommend that
Mike take a lead on the effort to improve the CMake setup.

I'll start with my +1.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/f411839c/attachment.html>

From kreve at sdfe.dk  Tue Jun 25 01:16:20 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 25 Jun 2019 08:16:20 +0000
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <a60bb91b-16d4-26e5-1373-67164ede4a66@geomatys.com>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CALQGVr3-FK18wy4yFO1-vjTLnOMfVG_VAQDjmqVWXTKcRZh29g@mail.gmail.com>
 <6e008afe-5c66-c2c9-aa79-de87b7a26a68@gmail.com>
 <CAF3Sn4VDiGv97CURHZOC-JQ5YN_b_9uXmj3=gj259G4as=1Ccw@mail.gmail.com>
 <3526557F-DCCE-4CC2-9D06-53D2DA4883E5@sdfe.dk>
 <a60bb91b-16d4-26e5-1373-67164ede4a66@geomatys.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0EB15C847A@S000014.PROD.SITAD.DK>

Hi Martin,

That is good news. I find it hard to keep up with the standards when they are still in drafts so I’m glad you can give us an update from time to time. I hope that you are right and the Simple Features model will be expanded to include the temporal dimension as well. If that is the case there’s light at the end of the tunnel :-) It is probably still going to take quite a while before the complete GIS software stack absorbs the updated standards but that is to be expected with such a radical change.

/Kristian

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Martin Desruisseaux
Sent: 25. juni 2019 09:41
To: proj at lists.osgeo.org
Subject: Re: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems


Hello all

ISO 19111:2019 (Referencing by coordinates) already includes the timestamp of coordinates. The standard defines a CoordinateMetadata class with two properties:

  *   crs: Identifier of the coordinate reference system to which a coordinate set is referenced.
  *   coordinateEpoch: Epoch at which coordinate referenced to a dynamic CRS are valid.

ISO 19107 (the standard that defines geometry objects) has been revised. I did not yet had a chance to look closely at it, but last time I attended to the discussions at OGC my understanding was that the new geometry objects would be associated to ISO 19111 CoordinateMetadata class (and consequently include the coordinate epoch) instead than to only the CRS.

Simple features are derived from ISO 19107 by the same author. I think I have seen emails on OGC mailing list about drafts available, but did not yet had a chance to look at them. At least, the current Simple Feature editor is well aware of this coordinate epoch topic since he was present at OGC meetings that debated about it. So I guess there is good chances that coordinate epoch will be present in some way in simple features (but did not verified).

    Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/202de9a8/attachment-0001.html>

From knudsen.thomas at gmail.com  Tue Jun 25 01:44:08 2019
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Tue, 25 Jun 2019 10:44:08 +0200
Subject: [PROJ] Nomination of Mike Taves for core committer status
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
Message-ID: <CAH0YoEN1hzVjHTHfJQXnTtcXWDQLk1p426iCtHS6pw4qoArSrw@mail.gmail.com>

+1  Thomas

Den tir. 25. jun. 2019 kl. 10.09 skrev Kristian Evers <kreve at sdfe.dk>:

> PSC Members,
>
>
>
> I would like to nominate Mike Taves for core committer status.
>
>
>
> Over the last couple of years Mike has been a valuable resource for the
> project,
>
> especially when it comes to improving documentation and the CMake build
> setup.
>
> Lately I have been relying almost entirely on Mikes advice regarding CMake
> and
>
> at this point it is only fair to acknowledge his contributions and give
> him direct
>
> access to the git repository.
>
>
>
> While we don’t have designated maintenance areas I will recommend that
>
> Mike take a lead on the effort to improve the CMake setup.
>
>
>
> I’ll start with my +1.
>
>
>
> /Kristian
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/94a9181c/attachment.html>

From even.rouault at spatialys.com  Tue Jun 25 01:46:32 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jun 2019 10:46:32 +0200
Subject: [PROJ] Nomination of Mike Taves for core committer status
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
Message-ID: <7047529.94z4ZzzGn9@even-i700>

On mardi 25 juin 2019 08:09:12 CEST Kristian Evers wrote:
> PSC Members,
> 
> I would like to nominate Mike Taves for core committer status.

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From a.furieri at lqt.it  Tue Jun 25 01:49:27 2019
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Tue, 25 Jun 2019 10:49:27 +0200
Subject: [PROJ] PROJ 6.1.1RC1
In-Reply-To: <15093254-C5A2-45B7-91F9-694E2A4C352F@sdfe.dk>
References: <15093254-C5A2-45B7-91F9-694E2A4C352F@sdfe.dk>
Message-ID: <4c8d99b46fe20cc81d0df14afbaaadf7@lqt.it>

On Sun, 23 Jun 2019 18:38:50 +0000, Kristian Evers wrote:
> Please test the release candidate and report back any problems you
> may encounter. See the release notes below.
>

Hi Kristian,

I've tested PROJ 6.1.1RC1 on both Linux and Windows (MinGW);
it builds nicely without any complaint, and the test coverage
of SpatiaLite runs smoothly without reporting any regression.
for me it's ok.

bye Sandro

From nyall.dawson at gmail.com  Tue Jun 25 03:26:48 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 25 Jun 2019 20:26:48 +1000
Subject: [PROJ] PROJ 6.1.1RC1
In-Reply-To: <4c8d99b46fe20cc81d0df14afbaaadf7@lqt.it>
References: <15093254-C5A2-45B7-91F9-694E2A4C352F@sdfe.dk>
 <4c8d99b46fe20cc81d0df14afbaaadf7@lqt.it>
Message-ID: <CAB28AshkHr3_Z6yWS+DdvJc72=JOkCmkR7ii_uWdcw8tvOJg4Q@mail.gmail.com>

On Tue, 25 Jun 2019 at 18:49, <a.furieri at lqt.it> wrote:
>
> On Sun, 23 Jun 2019 18:38:50 +0000, Kristian Evers wrote:
> > Please test the release candidate and report back any problems you
> > may encounter. See the release notes below.
> >
>
> Hi Kristian,
>
>  and the test coverage
> of SpatiaLite runs smoothly without reporting any regression.
> for me it's ok.

Ditto for QGIS -- I've tested with the RC and no regressions in the
QGIS unit tests (pending https://github.com/qgis/QGIS/pull/30382)

Nyall

From even.rouault at spatialys.com  Tue Jun 25 05:40:50 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jun 2019 14:40:50 +0200
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <3526557F-DCCE-4CC2-9D06-53D2DA4883E5@sdfe.dk>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CAF3Sn4VDiGv97CURHZOC-JQ5YN_b_9uXmj3=gj259G4as=1Ccw@mail.gmail.com>
 <3526557F-DCCE-4CC2-9D06-53D2DA4883E5@sdfe.dk>
Message-ID: <1978068.N0oljAQUFr@even-i700>

>  The timestamp of a
> coordinate has to be the observation time of the coordinate and the
> timestamp must not be changed during transformations (otherwise you can’t
> do the reverse transformation).

Unless you do a point motion operation, right ?

Quoting http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#68 :
"""The coordinates of a data set may be changed to any other epoch. Plate 
motion or other crustal deformation models are often used for this when 
estimated coordinate velocities are not available. Such models facilitate for 
example the change of coordinates from being referenced to ITRF2008 at epoch 
2017.53 to being referenced to ITRF2008 at epoch 2005.0."""

Which would be the case if you want to create for example a global raster 
dataset : you want all tiles to be referenced to the same coordinate epoch. 
But this would be the final step in the coordinate transformation process.
In a vector dataset, you may accept different features to be at different 
coordinate epochs.

To be noted tha the EPSG dataset is currently rather sparse in the area of 
point motion operations. There's just a single one available for the Canadian 
NAD83(CSRS)v6 case using a velocity grid. So currently if you have a 
coordinate referenced to a ITRF CRS, you can't transform it easily to another 
epoch in this CRS. Or in the Australian case, you'd have to go back to GDA2020 
using the ITRF2014<-->GDA2020 time dependent Helmet transformation... :

From ITRF2014 at 2018.00 to GDA2020
$ echo "-30 120 0 2018.00" | cs2cs -f "%.9f" EPSG:9000 EPSG:7844
-29.999998944 120.000000758 -0.000339830 2018.00

From GDA2020 to ITRF2014 at 2025.00
$ echo "-29.999998944 120.000000758 -0.000339830 2025.00" | \
		 cs2cs -I -f "%.9f" EPSG:9000 EPSG:7844
-29.999996305	120.000002652 -0.001189402 2025.00

Which makes it obvious that, even when/if we have point motion operation 
available to do directry CRS A @ epoch 1 -> CRS A @ epoch B, we don't have a 
clean way currently in PROJ of specifying the target coordinate epoch.

Actually I could do it in just one step by hacking the ITRF2014->GDA2020 
pipeline and using t_epoch=2025.00 to make it a ITRF2014 @ input_epoch -> 
ITRF2014 @ 2025.00 valid for Australia (probably only within a few years 
around epoch 2020.00, which also brings into light the lack in the EPSG 
dataset of metadata indicating the time range against which a coordinate 
operation is valid with the published accuracy...):

$ echo "-30 120 0 2018.00" | cct -d 9 +proj=pipeline \
    +step +proj=axisswap +order=2,1 \
    +step +proj=unitconvert +xy_in=deg +xy_out=rad \
    +step +proj=cart +ellps=GRS80 \
    +step +proj=helmert +x=0 +y=0 +z=0 +rx=0 +ry=0 +rz=0 +s=0 \
     +dx=0 +dy=0 +dz=0 +drx=0.00150379 +dry=0.00118346 +drz=0.00120716 +ds=0 \     
     +t_epoch=2025 +convention=coordinate_frame \
    +step +inv +proj=cart +ellps=GRS80 \
    +step +proj=unitconvert +xy_in=rad +xy_out=deg \
    +step +proj=axisswap +order=2,1
-29.999996305  120.000002652  -0.001189396     2018.0000

Except that 2018.000 in the output should be read as 2025 given the hack...


> The problem is that it is impossible in practice
> since there is no standard that describes how to do this. The OGC Simple
> Features standard which most file formats are based on simply doesn’t
> include time as a dimension.

You probably want the time to be included as a general metadata of the 
geometry rather than a per-vertex value (hopefully a single geometry is 
referenced to the same epoch...), which would be along the CoordinateMetadata 
class mentionned by Martin.
Yes, there is the issue of standards, but then it must percolate down to file 
/ geospatial database formats. GeoPackage and PostGIS for example are 
extensions of the WKB encoding of Simple Features, so if the later is updated, 
then the former might be able to upgrade. For web services, GML / WFS should 
be upgraded as well, both on the response side (you need the coordinate epoch) 
and in the request side (you probably also need to be able to specify that you 
want geometries at a given coordinate epoch)
The issue is the same with raster formats. How to do encode in a GeoTIFF the 
coordinate epoch
(I've just created https://github.com/opengeospatial/geotiff/issues/78), etc 
...

I guess that's why people keep creating new static CRS. That's so much 
convenient given the inertia on the file format side (how do you fix 
shapefiles to include coordinate epoch... A new sidecar file myshape.epoch :-) 
?)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From alansnow21 at gmail.com  Tue Jun 25 05:51:35 2019
From: alansnow21 at gmail.com (Alan Snow)
Date: Tue, 25 Jun 2019 07:51:35 -0500
Subject: [PROJ] PROJ 6.1.1RC1
In-Reply-To: <CAB28AshkHr3_Z6yWS+DdvJc72=JOkCmkR7ii_uWdcw8tvOJg4Q@mail.gmail.com>
References: <15093254-C5A2-45B7-91F9-694E2A4C352F@sdfe.dk>
 <4c8d99b46fe20cc81d0df14afbaaadf7@lqt.it>
 <CAB28AshkHr3_Z6yWS+DdvJc72=JOkCmkR7ii_uWdcw8tvOJg4Q@mail.gmail.com>
Message-ID: <CAGybdFRPOZf0+t8RTJdTTusmDJ9eP3CCDx4skHhSeOAfZy8POw@mail.gmail.com>

All works great for pyproj: https://github.com/pyproj4/pyproj/pull/353

On Tue, Jun 25, 2019, 5:27 AM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> On Tue, 25 Jun 2019 at 18:49, <a.furieri at lqt.it> wrote:
> >
> > On Sun, 23 Jun 2019 18:38:50 +0000, Kristian Evers wrote:
> > > Please test the release candidate and report back any problems you
> > > may encounter. See the release notes below.
> > >
> >
> > Hi Kristian,
> >
> >  and the test coverage
> > of SpatiaLite runs smoothly without reporting any regression.
> > for me it's ok.
>
> Ditto for QGIS -- I've tested with the RC and no regressions in the
> QGIS unit tests (pending https://github.com/qgis/QGIS/pull/30382)
>
> Nyall
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190625/f2843264/attachment.html>

From howard at hobu.co  Tue Jun 25 05:52:40 2019
From: howard at hobu.co (Howard Butler)
Date: Tue, 25 Jun 2019 07:52:40 -0500
Subject: [PROJ] Nomination of Mike Taves for core committer status
In-Reply-To: <7047529.94z4ZzzGn9@even-i700>
References: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
 <7047529.94z4ZzzGn9@even-i700>
Message-ID: <20555D4A-19F2-44A8-9F7D-33BDC7D801B7@hobu.co>



> On Jun 25, 2019, at 3:46 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On mardi 25 juin 2019 08:09:12 CEST Kristian Evers wrote:
>> PSC Members,
>> 
>> I would like to nominate Mike Taves for core committer status.
> 
> +1 Even

+1 Howard


From kreve at sdfe.dk  Tue Jun 25 07:11:02 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 25 Jun 2019 14:11:02 +0000
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <1978068.N0oljAQUFr@even-i700>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CAF3Sn4VDiGv97CURHZOC-JQ5YN_b_9uXmj3=gj259G4as=1Ccw@mail.gmail.com>
 <3526557F-DCCE-4CC2-9D06-53D2DA4883E5@sdfe.dk> <1978068.N0oljAQUFr@even-i700>
Message-ID: <2E885BB293AF0448A0181138489E9A0EB15C89B9@S000014.PROD.SITAD.DK>

> Unless you do a point motion operation, right ?

As long as you work entirely in dynamic coordinates it is okay to change
the timestamps as part of a transformation. When you transform coordinates
from a dynamic/temporal frame to a static frame (e.g. ITRF2014 -> ETRS89)
you need to keep the timestamp from coordinates in ITRF2014 if you want
to retain the ability to transform your data back to ITRF2014. Changing the
timestamp to 1989 or the realization epoch of the local ETRS89 realization
would make it impossible to return to the original coordinates. Unless the
information is kept track of elsewhere. But where would you do that? Worst
case a vector dataset has different observation times for all coordinates.

> Which makes it obvious that, even when/if we have point motion operation 
> available to do directry CRS A @ epoch 1 -> CRS A @ epoch B, we don't have a 
> clean way currently in PROJ of specifying the target coordinate epoch.

I agree with that. We could simply adapt the same convention as used by
geodesists: 

	cs2cs  <source> <destination>@<destination epoch>

I agree that it makes sense to change the coordinate timestamp when
Transforming from one dynamic reference to another. But there's a
caveat:

> Except that 2018.000 in the output should be read as 2025 given the hack...

How do you make the inverse transformation if you change the coordinate
time from 2018.0 to 2025.0? For the particular PJ object that made that
transformation you will not be able to reverse it, since you specified
+t_epoch=2025.0 your inverse operation will now be a null transformation
moving the coordinate from 2025.0 to 2025.0. This is why I opted to not
change the timestamps when I implemented the temporal Helmert.

It is not set in stone that the inverse of an operation should be able to be created
but it definitely makes life simpler. It is a principal decision to make if we want
break the possibility of creating the inverse of a temporal Helmert operation.

> I guess that's why people keep creating new static CRS. That's so much 
> convenient given the inertia on the file format side (how do you fix 
> shapefiles to include coordinate epoch... A new sidecar file myshape.epoch :-) 
> ?)

It is an approach that is absolutely worth considering by geodetic authorities.
It is many times simpler to work with and you still keep the good stuff from
the dynamic frame.


/Kristian

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: 25. juni 2019 14:41
To: proj at lists.osgeo.org
Cc: Kristian Evers <kreve at sdfe.dk>; Nick Mein <nick_mein at trimble.com>
Subject: Re: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems

>  The timestamp of a
> coordinate has to be the observation time of the coordinate and the
> timestamp must not be changed during transformations (otherwise you can’t
> do the reverse transformation).

Unless you do a point motion operation, right ?

Quoting http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#68 :
"""The coordinates of a data set may be changed to any other epoch. Plate 
motion or other crustal deformation models are often used for this when 
estimated coordinate velocities are not available. Such models facilitate for 
example the change of coordinates from being referenced to ITRF2008 at epoch 
2017.53 to being referenced to ITRF2008 at epoch 2005.0."""

Which would be the case if you want to create for example a global raster 
dataset : you want all tiles to be referenced to the same coordinate epoch. 
But this would be the final step in the coordinate transformation process.
In a vector dataset, you may accept different features to be at different 
coordinate epochs.

To be noted tha the EPSG dataset is currently rather sparse in the area of 
point motion operations. There's just a single one available for the Canadian 
NAD83(CSRS)v6 case using a velocity grid. So currently if you have a 
coordinate referenced to a ITRF CRS, you can't transform it easily to another 
epoch in this CRS. Or in the Australian case, you'd have to go back to GDA2020 
using the ITRF2014<-->GDA2020 time dependent Helmet transformation... :

From ITRF2014 at 2018.00 to GDA2020
$ echo "-30 120 0 2018.00" | cs2cs -f "%.9f" EPSG:9000 EPSG:7844
-29.999998944 120.000000758 -0.000339830 2018.00

From GDA2020 to ITRF2014 at 2025.00
$ echo "-29.999998944 120.000000758 -0.000339830 2025.00" | \
		 cs2cs -I -f "%.9f" EPSG:9000 EPSG:7844
-29.999996305	120.000002652 -0.001189402 2025.00

Which makes it obvious that, even when/if we have point motion operation 
available to do directry CRS A @ epoch 1 -> CRS A @ epoch B, we don't have a 
clean way currently in PROJ of specifying the target coordinate epoch.

Actually I could do it in just one step by hacking the ITRF2014->GDA2020 
pipeline and using t_epoch=2025.00 to make it a ITRF2014 @ input_epoch -> 
ITRF2014 @ 2025.00 valid for Australia (probably only within a few years 
around epoch 2020.00, which also brings into light the lack in the EPSG 
dataset of metadata indicating the time range against which a coordinate 
operation is valid with the published accuracy...):

$ echo "-30 120 0 2018.00" | cct -d 9 +proj=pipeline \
    +step +proj=axisswap +order=2,1 \
    +step +proj=unitconvert +xy_in=deg +xy_out=rad \
    +step +proj=cart +ellps=GRS80 \
    +step +proj=helmert +x=0 +y=0 +z=0 +rx=0 +ry=0 +rz=0 +s=0 \
     +dx=0 +dy=0 +dz=0 +drx=0.00150379 +dry=0.00118346 +drz=0.00120716 +ds=0 \     
     +t_epoch=2025 +convention=coordinate_frame \
    +step +inv +proj=cart +ellps=GRS80 \
    +step +proj=unitconvert +xy_in=rad +xy_out=deg \
    +step +proj=axisswap +order=2,1
-29.999996305  120.000002652  -0.001189396     2018.0000

Except that 2018.000 in the output should be read as 2025 given the hack...


> The problem is that it is impossible in practice
> since there is no standard that describes how to do this. The OGC Simple
> Features standard which most file formats are based on simply doesn’t
> include time as a dimension.

You probably want the time to be included as a general metadata of the 
geometry rather than a per-vertex value (hopefully a single geometry is 
referenced to the same epoch...), which would be along the CoordinateMetadata 
class mentionned by Martin.
Yes, there is the issue of standards, but then it must percolate down to file 
/ geospatial database formats. GeoPackage and PostGIS for example are 
extensions of the WKB encoding of Simple Features, so if the later is updated, 
then the former might be able to upgrade. For web services, GML / WFS should 
be upgraded as well, both on the response side (you need the coordinate epoch) 
and in the request side (you probably also need to be able to specify that you 
want geometries at a given coordinate epoch)
The issue is the same with raster formats. How to do encode in a GeoTIFF the 
coordinate epoch
(I've just created https://github.com/opengeospatial/geotiff/issues/78), etc 
...

I guess that's why people keep creating new static CRS. That's so much 
convenient given the inertia on the file format side (how do you fix 
shapefiles to include coordinate epoch... A new sidecar file myshape.epoch :-) 
?)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Jun 25 08:38:21 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jun 2019 17:38:21 +0200
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EB15C89B9@S000014.PROD.SITAD.DK>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <1978068.N0oljAQUFr@even-i700>
 <2E885BB293AF0448A0181138489E9A0EB15C89B9@S000014.PROD.SITAD.DK>
Message-ID: <2283548.SvZlHTmb2t@even-i700>

> I agree with that. We could simply adapt the same convention as used by
> geodesists: 
> 
> 	cs2cs  <source> <destination>@<destination epoch>

Makes sense (there would be the risk that people believes that the 
@destination epoch is part of the CRS designation, but
http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#68 indeed uses it.

> How do you make the inverse transformation if you change the coordinate
> time from 2018.0 to 2025.0? 

Good question ! Actually in my ISO related work of past months, I spotted this 
issue but left it a bit apart as there were so many other hotter topics to 
deal with.

ISO-19111 identifies the optional sourceCoordinateEpoch and 
targetCoordinateEpoch to be properties of the CoordinateOperation class.
See http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#58
In PROJ, we have a 4D X,Y,Z,time tuple instead, so there's a modelling gap 
here, which is propably the core reason for the issue you mention.

If we have
+proj=point_motion_geocentric +src_epoch= +tgt_epoch= +vx= +vy= +vz=
then this can be reversible.

You could have different modes:
- t_epoch only: then you take into account the input T, and this is not 
reversible
- s_epoch only: only possible to use in the reverse direction
- both: and then in the the forward direction, you must decide if you error 
out if the input T != src_epoch, or if you just override it with src_epoch. 
Similarly in the reverse direction.

If you chain a point motion with a 15-parameter Helmert as in some example of  
IOGP guidance note 25, then you need to change the coordinate epoch after the 
point motion operation (either by modifying the T in the coordinate tuple, or 
other internal means like filling the sourceCoordinateEpoch on the Helmert 
transformation which would then add a src_epoch parameter to the corresponding 
PROJ string ?), so that the 15-parameter Helmert operates on the new 
coordinate epoch.

> For the particular PJ object that made that
> transformation you will not be able to reverse it, since you specified
> +t_epoch=2025.0 your inverse operation will now be a null transformation
> moving the coordinate from 2025.0 to 2025.0. This is why I opted to not
> change the timestamps when I implemented the temporal Helmert.

Temporal Helmert nominately does not change the coordinate epoch, so that was 
a wise decision.

My example was clearly a hack to try to emulate the lack of a point motion 
operation for ITRF2014. In IOGP guidance note 25, point motion operations are 
either a velocity vector applied in the geocentric or geographic domains:
https://www.epsg-registry.org/export.htm?gml=urn:ogc:def:method:EPSG::1064
https://www.epsg-registry.org/export.htm?gml=urn:ogc:def:method:EPSG::1067
or with a grid:
https://www.epsg-registry.org/export.htm?gml=urn:ogc:def:method:EPSG::1070
But indeed there's perhaps a lack of expressing rotational terms in a compact 
way like Helmert allows to do.

> It is not set in stone that the inverse of an operation should be able to be
> created  but it definitely makes life simpler.

Indeed, I use and abuse of that a lot in the createOperations() code !

> It is a principal decision
> to make if we want break the possibility of creating the inverse of a
> temporal Helmert operation. 

As said above, I think the issue would affect only dedicated point motion 
operations, not 15-parameter Helmert whose central epoch parameter shouldn't 
affect coordinate epochs.
By the way: in 't_epoch', how should the t_ be interpreted: Time , Target, 
cenTral :-) ?

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Tue Jun 25 08:51:11 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 25 Jun 2019 15:51:11 +0000
Subject: [PROJ] [EXTERNAL] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <2283548.SvZlHTmb2t@even-i700>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <1978068.N0oljAQUFr@even-i700>
 <2E885BB293AF0448A0181138489E9A0EB15C89B9@S000014.PROD.SITAD.DK>
 <2283548.SvZlHTmb2t@even-i700>
Message-ID: <F046BEF7-9E8C-4355-951B-93A1A8A36CDD@sdfe.dk>



> On 25 Jun 2019, at 17:38, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> I agree with that. We could simply adapt the same convention as used by
>> geodesists: 
>> 
>> 	cs2cs  <source> <destination>@<destination epoch>
> 
> Makes sense (there would be the risk that people believes that the 
> @destination epoch is part of the CRS designation, but
> http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#68 indeed uses it.
> 
>> How do you make the inverse transformation if you change the coordinate
>> time from 2018.0 to 2025.0? 
> 
> Good question ! Actually in my ISO related work of past months, I spotted this 
> issue but left it a bit apart as there were so many other hotter topics to 
> deal with.
> 
> ISO-19111 identifies the optional sourceCoordinateEpoch and 
> targetCoordinateEpoch to be properties of the CoordinateOperation class.
> See http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#58
> In PROJ, we have a 4D X,Y,Z,time tuple instead, so there's a modelling gap 
> here, which is propably the core reason for the issue you mention.
> 
> If we have
> +proj=point_motion_geocentric +src_epoch= +tgt_epoch= +vx= +vy= +vz=
> then this can be reversible.
> 
> You could have different modes:
> - t_epoch only: then you take into account the input T, and this is not 
> reversible
> - s_epoch only: only possible to use in the reverse direction
> - both: and then in the the forward direction, you must decide if you error 
> out if the input T != src_epoch, or if you just override it with src_epoch. 
> Similarly in the reverse direction.
> 
> If you chain a point motion with a 15-parameter Helmert as in some example of  
> IOGP guidance note 25, then you need to change the coordinate epoch after the 
> point motion operation (either by modifying the T in the coordinate tuple, or 
> other internal means like filling the sourceCoordinateEpoch on the Helmert 
> transformation which would then add a src_epoch parameter to the corresponding 
> PROJ string ?), so that the 15-parameter Helmert operates on the new 
> coordinate epoch.

This could work, yes. Of course my suggestion above also extends to the source
epoch when applicable:

cs2cs  <source>@<source epoch>  <destination>@<destination epoch>

> 
>> For the particular PJ object that made that
>> transformation you will not be able to reverse it, since you specified
>> +t_epoch=2025.0 your inverse operation will now be a null transformation
>> moving the coordinate from 2025.0 to 2025.0. This is why I opted to not
>> change the timestamps when I implemented the temporal Helmert.
> 
> Temporal Helmert nominately does not change the coordinate epoch, so that was 
> a wise decision.

Well, that’s a first for me :-)

> 
> My example was clearly a hack to try to emulate the lack of a point motion 
> operation for ITRF2014. In IOGP guidance note 25, point motion operations are 
> either a velocity vector applied in the geocentric or geographic domains:
> https://www.epsg-registry.org/export.htm?gml=urn:ogc:def:method:EPSG::1064
> https://www.epsg-registry.org/export.htm?gml=urn:ogc:def:method:EPSG::1067
> or with a grid:
> https://www.epsg-registry.org/export.htm?gml=urn:ogc:def:method:EPSG::1070
> But indeed there's perhaps a lack of expressing rotational terms in a compact 
> way like Helmert allows to do.
> 
>> It is not set in stone that the inverse of an operation should be able to be
>> created  but it definitely makes life simpler.
> 
> Indeed, I use and abuse of that a lot in the createOperations() code !
> 
>> It is a principal decision
>> to make if we want break the possibility of creating the inverse of a
>> temporal Helmert operation. 
> 
> As said above, I think the issue would affect only dedicated point motion 
> operations, not 15-parameter Helmert whose central epoch parameter shouldn't 
> affect coordinate epochs.
> By the way: in 't_epoch', how should the t_ be interpreted: Time , Target, 
> cenTral :-) ?
> 

Time. In hindsigt I think +t_0 would have been a better parameter name. When
I first wrote this code I thought it would be necessary to include more +t_
parameters, for example +t_obs that was used in the deformation operation initially.
You live and learn, I guess.

> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From cameron.shorter at gmail.com  Tue Jun 25 11:38:08 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Wed, 26 Jun 2019 04:38:08 +1000
Subject: [PROJ] [gdal-dev] Static/Dynamic datum problems
In-Reply-To: <F4E49B51-9E1A-4C4B-A6E1-414D9C0C6FF7@opengeospatial.org>
References: <CABqeU+i83CjcUu9sdUq-EvfmpNfRv34pMzTuT_xpKR+MZgEyQg@mail.gmail.com>
 <CALQGVr3-FK18wy4yFO1-vjTLnOMfVG_VAQDjmqVWXTKcRZh29g@mail.gmail.com>
 <eff5242f-9e5b-c8b2-7a7c-2dbee53ccd7b@gmail.com>
 <A306973A-720F-4585-933D-3E67825A8CCB@opengeospatial.org>
 <F4E49B51-9E1A-4C4B-A6E1-414D9C0C6FF7@opengeospatial.org>
Message-ID: <183af656-1a4d-d25c-d779-b92256daafdd@gmail.com>

Hi proj folks, I'm sharing insights from Scott Simmons from the OGC, 
with his permission ...

On 25/6/19 5:02 pm, Scott Simmons wrote:
> Hi Cameron,
>
> I am glad that you are taking up this charge as well - this is a HUGE 
> issue.
>
> <snip>
>
> A few data points to consider.
>
> 1. The OGC Abstract Specification Topic #2 Referencing by Coordinates 
> (also ISO 19111:2019): 
> http://docs.opengeospatial.org/as/18-005r4/18-005r4.html was 
> specifically updated to address 4D coordinate reference systems (CRSs) 
> earlier this year. This standard forms the foundation for how CRSs are 
> used in other OGC and ISO standards.
>
> 2. Other OGC standards will automatically benefit from dynamic CRSs if 
> they leverage Referencing by Coordinates. We also have a handful of 
> temporal standards (like TimeseriesML). But many geometry standards 
> won’t get much out of these changes if the data don’t include temporal 
> information - huge issue!
>
> 3. We are in the midst of updating the Features and Geometries 
> standard such that it will also subsume Simple Features. Now is a good 
> time to ensure that time is adequately handled in this work.
>
> 4. We have both a CRS Domain and Standards Working Group (CRS DWG and 
> CRS SWG). The CRS DWG would be a good forum to develop the 
> requirements to push to other SWGs handling geometry standards. I’d be 
> happy to help setup such a discussion at our next TC Meeting.
>
> 5. And speaking of the next TC Meeting (starting 9 September 2019 in 
> Banff, Canada), we will have a keynote presentation and systems update 
> from the US GPS team.
>
> Best Regards,
> Scott
<snip>

-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190626/bc354ab8/attachment.html>

From F.Gross at sbp.de  Wed Jun 26 07:13:27 2019
From: F.Gross at sbp.de (Fabian Gross)
Date: Wed, 26 Jun 2019 16:13:27 +0200
Subject: [PROJ] Read vertical deflection from egm (96, 08, etc.)
Message-ID: <OF5E5040F1.6D6958D5-ONC1258425.004D8EDF-C1258425.004E2313@sbp.de>

Dear proj-members,

is there a way to read the vertical deflection (xi, eta) directly with 
proj?

My work-around is sampling the geoid-grid shift:

```python
def get_vertical_deflection(lon, lat):
    """
    take origin and 1 east + 1 north on GEOID, transform to topocentric 
and check
    :param lon: longitude of point of interest on WGS84 (°)
    :param lat: latitude of point of interest on WGS84 (°)
    :return: (xi, eta) deflection in meridional and prime vertical (rad)
    """
    eps = 0.0001  # °
    lons = np.array([lon, lon + eps, lon])
    lats = np.array([lat, lat,       lat + eps])
    geoid_heights = get_geoid_height_egm96(lons, lats)

    # W. E. Featherstone, "The Use and Abuse of Vertical Deflection" p. 4
    e = eccentricity(f_wgs84)
    phi = np.deg2rad(lat)

    # meridional, north/south
    # R_M, should be radius of curvature in the meridian at point of 
interest
    rad_meridian = get_radius_of_curvature_meridian(a_wgs84, e, phi)
    # d_North = R d_lat; in rad
    xi = -(geoid_heights[2] - geoid_heights[0])/(rad_meridian * 
np.deg2rad(eps))

    # prime vertical, east/west
    # R_N, should be radius of curvature in the prime vertical at point of 
interest
    rad_prime_vertical = get_radius_of_curvature_prime_vertical(a_wgs84, 
e, phi)
    # d_East = R cos(lat) d_long; in rad
    eta = -(geoid_heights[1] - geoid_heights[0])/(rad_prime_vertical * 
np.deg2rad(eps) * np.cos(phi))
    return xi, eta

```
Over which (arc) distance should I sample the geoid gtx?

Kind regards

Fabian Gross
Telefon +49 (711) 648 71-995
_________________________________________________
sbp 
schlaich
bergermann partner

Beratende Ingenieure
für erneuerbare Energie

Stuttgart . Berlin . New York
São Paulo . Shanghai . Paris

sbp sonne gmbh

Markus Balz Dipl.Ing. (FH)
Andreas Keil Dipl.Ing.

Schwabstrasse 43
70197 Stuttgart
Telefon +49 (711) 648 71-0

www.sbp.de
_________________________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190626/9deae0d7/attachment.html>

From charles.karney at sri.com  Wed Jun 26 07:27:10 2019
From: charles.karney at sri.com (Charles Karney)
Date: Wed, 26 Jun 2019 14:27:10 +0000
Subject: [PROJ] Read vertical deflection from egm (96, 08, etc.)
In-Reply-To: <OF5E5040F1.6D6958D5-ONC1258425.004D8EDF-C1258425.004E2313@sbp.de>
References: <OF5E5040F1.6D6958D5-ONC1258425.004D8EDF-C1258425.004E2313@sbp.de>
Message-ID: <1e1e9ab5-4cde-3a32-ce5f-c2b23fabc0ac@sri.com>

There are two problems here:

(1) you are numerically differentiating a noisy function, the height of
the geoid found by interpolating into a grid of values.

(2) the geoid is a surface of constant gravitional potential, however
the gravity vector is not normal to it!  This is because the geoid goes
under the land mass of the earth.

I recommend using the full gravity model to determine the vertical
deflection.  GeographicLib's GravityModel class gives you the tools to
do this.

Note: GeographicLib used to allow you to compute the gradient of the
geoid along the lines you suggest.  However, I took this functionality
out in 2016 (version 1.46) because of the shortcomings listed above.

   --Charles

On 6/26/19 10:13 AM, Fabian Gross wrote:
> Dear proj-members,
> 
> is there a way to read the vertical deflection (xi, eta) directly with 
> proj?
> 
> My work-around is sampling the geoid-grid shift:
> 
> ```python
> *def *get_vertical_deflection(lon, lat):
> /"""
>     take origin and 1 east + 1 north on GEOID, transform to topocentric 
> and check
> /*:param*/lon: longitude of point of interest on WGS84 (°)
> /*:param*/lat: latitude of point of interest on WGS84 (°)
> /*:return*/: (xi, eta) deflection in meridional and prime vertical (rad)
>     """
> /eps = 0.0001 /# °
> /lons = np.array([lon, lon + eps, lon])
>     lats = np.array([lat, lat,       lat + eps])
>     geoid_heights = get_geoid_height_egm96(lons, lats)
> 
> /# W. E. Featherstone, "The Use and Abuse of Vertical Deflection" p. 4
> /e = eccentricity(f_wgs84)
>     phi = np.deg2rad(lat)
> 
> /# meridional, north/south
>     # R_M, should be radius of curvature in the meridian at point of 
> interest
> /rad_meridian = get_radius_of_curvature_meridian(a_wgs84, e, phi)
> /# d_North = R d_lat; in rad
> /xi = -(geoid_heights[2] - geoid_heights[0])/(rad_meridian * 
> np.deg2rad(eps))
> 
> /# prime vertical, east/west
>     # R_N, should be radius of curvature in the prime vertical at point 
> of interest
> /rad_prime_vertical = get_radius_of_curvature_prime_vertical(a_wgs84, e, 
> phi)
> /# d_East = R cos(lat) d_long; in rad
> /eta = -(geoid_heights[1] - geoid_heights[0])/(rad_prime_vertical * 
> np.deg2rad(eps) * np.cos(phi))
> *return *xi, eta
> 
> ```
> Over which (arc) distance should I sample the geoid gtx?
> 
> Kind regards
> 
> Fabian Gross
> Telefon +49 (711) 648 71-995
> _________________________________________________*
> sbp* *
> schlaich
> bergermann partner*
> 
> Beratende Ingenieure
> für erneuerbare Energie
> 
> Stuttgart . Berlin . New York
> São Paulo . Shanghai . Paris
> *
> sbp sonne gmbh*
> 
> Markus Balz Dipl.Ing. (FH)
> Andreas Keil Dipl.Ing.
> 
> Schwabstrasse 43
> 70197 Stuttgart
> Telefon +49 (711) 648 71-0
> _
> __www.sbp.de_ <http://www.sbp.de/>
> _________________________________________________
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> 

From schwehr at gmail.com  Wed Jun 26 14:52:44 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 26 Jun 2019 14:52:44 -0700
Subject: [PROJ] GOES Geostationary Projection
Message-ID: <CACmBxys=1op4=XqHL-OrmsfaYaQnQmHJ2mtR=6pU+dgWKu74kQ@mail.gmail.com>

Hi all,

I'm trying to figure out how to convert GOES 16 & 17 weather data into a
form readable by GeoTools.  It looks like I'm possibly loosing the sweep
information.  Take for example this set of 16 bands:

gsutil cp
gs://gcp-public-data-goes-17/ABI-L1b-RadC/2019/151/21/OR_ABI-L1b-RadC-*_G17_s20191512131197_*.nc
.

if I do:

gdalwarp --version
GDAL 2.2.4, released 2018/03/19
# e.g. for all C1..C16
gdalwarp -t_srs EPSG:4326
NETCDF:OR_ABI-L1b-RadC-M6C16_G17_s20191512131197_e20191512133581_c20191512134014.nc:Rad
OR_ABI-L1b-RadC-M6C16_G17_s20191512131197_e20191512133581_c20191512134014_4326.tif

The imagery once tiled by and displayed by Earth Engine, it shows up in the
correct location.

But I would rather have the data stay in it's native projection and only be
transformed when used to which ever projection is needed.  (this is typical
of Earth Engine)

gdal_translate
NETCDF:OR_ABI-L1b-RadC-M6C16_G17_s20191512131197_e20191512133581_c20191512134014.nc:Rad
OR_ABI-L1b-RadC-M6C16_G17_s20191512131197_e20191512133581_c20191512134014.tif

Gives the imagery not quite in the correct location.   I briefly looked at
gdal_translate from proj at head and gdal at head, but our tiler is an
older version of gdal that can read the post "RFC 73: Integration of PROJ6
for WKT2" info.

Any one have suggestions on how to build a geotiff using gdal 2.2.4 from
the netcdf that keeps all the necessary projection info in a form that
GeoTools 19 can understand?

I've attached a screenshot from the Gulf of California where an island is
clearly offset between the renderings of the two assets (transformed from
the gdal_translate geotiff and the gdalwarp to EPSG:4326 geotiff)

Thanks!
-kurt
Engineer on Google Earth Engine

Earth Engine screen shots:
https://photos.app.goo.gl/sW1upk1iZ9p62MuY9
https://photos.app.goo.gl/UAGccF2rjPDfenS27

diff -u netcdf.info tif.info
--- netcdf.info 2019-06-26 10:54:22.512939636 -0700
+++ tif.info 2019-06-26 10:54:39.596731603 -0700
@@ -1,22 +1,23 @@
-Driver: netCDF/Network Common Data Format
-Files:
OR_ABI-L1b-RadC-M6C02_G17_s20191512131197_e20191512133570_c20191512133595.nc
+Driver: GTiff/GeoTIFF
+Files:
OR_ABI-L1b-RadC-M6C02_G17_s20191512131197_e20191512133570_c20191512133595.tif
 Size is 10000, 6000
 Coordinate System is:
-PROJCS["unnamed",
-    GEOGCS["unknown",
-        DATUM["unknown",
+PROJCS["Geostationary_Satellite",
+    GEOGCS["GCS_unknown",
+        DATUM["D_unknown",
             SPHEROID["Spheroid",6378137,298.2572221]],
         PRIMEM["Greenwich",0],
-        UNIT["degree",0.0174532925199433]],
+        UNIT["Degree",0.017453292519943295]],
     PROJECTION["Geostationary_Satellite"],
     PARAMETER["central_meridian",-137],
     PARAMETER["satellite_height",35786023],
     PARAMETER["false_easting",0],
     PARAMETER["false_northing",0],
-    EXTENSION["PROJ4","+proj=geos +lon_0=-137 +h=35786023 +x_0=0 +y_0=0
+ellps=GRS80 +units=m +no_defs  +sweep=x"]]
+    UNIT["Meter",1]]
 Origin = (-2505021.493779813405126,1583173.639055640902370)
 Pixel Size = (501.004328871885207,501.004328871885264)
 Metadata:
+  AREA_OR_POINT=Area
   goes_imager_projection#grid_mapping_name=geostationary
   goes_imager_projection#inverse_flattening=298.2572221
   goes_imager_projection#latitude_of_projection_origin=0
@@ -81,23 +82,16 @@
   y#scale_factor=-1.4e-05
   y#standard_name=projection_y_coordinate
   y#units=rad
-Geolocation:
-  LINE_OFFSET=0
-  LINE_STEP=1
-  PIXEL_OFFSET=0
-  PIXEL_STEP=1
-  SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
-  X_BAND=1
-
 X_DATASET=NETCDF:"OR_ABI-L1b-RadC-M6C02_G17_s20191512131197_e20191512133570_c20191512133595.nc":x
-  Y_BAND=1
-
 Y_DATASET=NETCDF:"OR_ABI-L1b-RadC-M6C02_G17_s20191512131197_e20191512133570_c20191512133595.nc":y
+Image Structure Metadata:
+  COMPRESSION=DEFLATE
+  INTERLEAVE=BAND
 Corner Coordinates:
-Upper Left  (-2505021.494, 1583173.639) (161d34'43.88"W, 14d47'44.39"N)
-Lower Left  (-2505021.494, 4589199.612) (175d33' 0.44"E, 53d31'38.26"N)
-Upper Right ( 2505021.795, 1583173.639) (112d25'16.11"W, 14d47'44.39"N)
-Lower Right ( 2505021.795, 4589199.612) ( 89d33' 0.41"W, 53d31'38.26"N)
+Upper Left  (-2505021.494, 1583173.639) (161d33'27.65"W, 14d49'58.11"N)
+Lower Left  (-2505021.494, 4589199.612) (175d46'57.22"E, 53d43' 3.62"N)
+Upper Right ( 2505021.795, 1583173.639) (112d26'32.33"W, 14d49'58.11"N)
+Lower Right ( 2505021.795, 4589199.612) ( 89d46'57.19"W, 53d43' 3.62"N)
 Center      (       0.151, 3086186.626) (136d59'59.99"W, 29d58' 0.14"N)
-Band 1 Block=10000x1 Type=Int16, ColorInterp=Undefined
+Band 1 Block=10000x1 Type=Int16, ColorInterp=Gray
   NoData Value=4095
   Unit Type: W m-2 sr-1 um-1
   Offset: -20.2899112701416,   Scale:0.158592373132706
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190626/eae683d8/attachment.html>

From even.rouault at spatialys.com  Wed Jun 26 15:15:32 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 27 Jun 2019 00:15:32 +0200
Subject: [PROJ] GOES Geostationary Projection
In-Reply-To: <CACmBxys=1op4=XqHL-OrmsfaYaQnQmHJ2mtR=6pU+dgWKu74kQ@mail.gmail.com>
References: <CACmBxys=1op4=XqHL-OrmsfaYaQnQmHJ2mtR=6pU+dgWKu74kQ@mail.gmail.com>
Message-ID: <3159269.ZHHW4VgxUl@even-i700>

> Gives the imagery not quite in the correct location.   I briefly looked at
> gdal_translate from proj at head and gdal at head, but our tiler is an
> older version of gdal that can read the post "RFC 73: Integration of PROJ6
> for WKT2" info.

PROJ6 support in GDAL won't help in any way. This is a pure GeoTIFF issue, 
since GeoTIFF doesn't support this projection method, and I'm afraid there is 
no clean resolution. Recent enough version of GDALs will incorporate a hacky 
WKT in a PCSCitationGeoKey with a EXTENSION["PROJ4", ...] as the example you 
shown. But I would be very surprised that GeoTools would understand that !

Actually you might add this use case to this ticket
https://github.com/opengeospatial/geotiff/issues/56 :-) if you want a 
ultimately clean solution for that. But even using latest WKT version wouldn't 
likely help, since as far as I remember, there is no standardized way in the 
EPSG dataset to represent the geostationary projection and the sweep 
parameter, so this would involve lobying at that level too.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Thu Jun 27 01:01:10 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 27 Jun 2019 08:01:10 +0000
Subject: [PROJ] Nomination of Mike Taves for core committer status
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
Message-ID: <2E885BB293AF0448A0181138489E9A0EB15CED9E@S000014.PROD.SITAD.DK>

I declare the motion passed with +1's from Howard, Even, Thomas and myself.



Welcome on the team, Mike :-)



/Kristian


From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Kristian Evers
Sent: 25. juni 2019 10:09
To: PROJ <proj at lists.osgeo.org>
Subject: [PROJ] Nomination of Mike Taves for core committer status

PSC Members,

I would like to nominate Mike Taves for core committer status.

Over the last couple of years Mike has been a valuable resource for the project,
especially when it comes to improving documentation and the CMake build setup.
Lately I have been relying almost entirely on Mikes advice regarding CMake and
at this point it is only fair to acknowledge his contributions and give him direct
access to the git repository.

While we don't have designated maintenance areas I will recommend that
Mike take a lead on the effort to improve the CMake setup.

I'll start with my +1.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190627/c62d01e0/attachment.html>

From mwtoews at gmail.com  Thu Jun 27 01:27:39 2019
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 27 Jun 2019 20:27:39 +1200
Subject: [PROJ] Nomination of Mike Taves for core committer status
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EB15CED9E@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0EB15C843D@S000014.PROD.SITAD.DK>
 <2E885BB293AF0448A0181138489E9A0EB15CED9E@S000014.PROD.SITAD.DK>
Message-ID: <CAM2FmMpoKPDJQxXvW6XoRDR67JnJaQcSedJ55Dr+79Y0ULvmwQ@mail.gmail.com>

On Thu, 27 Jun 2019 at 20:01, Kristian Evers <kreve at sdfe.dk> wrote:
>
> I declare the motion passed with +1's from Howard, Even, Thomas and myself.

Thanks all, I look forward to contributing!

From schwehr at gmail.com  Thu Jun 27 08:43:06 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 27 Jun 2019 08:43:06 -0700
Subject: [PROJ] GOES Geostationary Projection
In-Reply-To: <3159269.ZHHW4VgxUl@even-i700>
References: <CACmBxys=1op4=XqHL-OrmsfaYaQnQmHJ2mtR=6pU+dgWKu74kQ@mail.gmail.com>
 <3159269.ZHHW4VgxUl@even-i700>
Message-ID: <CACmBxyuqJrSF-q3QJ0+xswStcTF9AmE8eU7KaDe7OwHMxWVOdw@mail.gmail.com>

Thanks Even!

Since the end target isn't geotiff and it does have WKT, maybe I can work
with the GeoTools folks to get a solution if I cut geotiff out of the
middle.

On Wed, Jun 26, 2019 at 3:15 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> > Gives the imagery not quite in the correct location.   I briefly looked
> at
> > gdal_translate from proj at head and gdal at head, but our tiler is an
> > older version of gdal that can read the post "RFC 73: Integration of
> PROJ6
> > for WKT2" info.
>
> PROJ6 support in GDAL won't help in any way. This is a pure GeoTIFF issue,
> since GeoTIFF doesn't support this projection method, and I'm afraid there
> is
> no clean resolution. Recent enough version of GDALs will incorporate a
> hacky
> WKT in a PCSCitationGeoKey with a EXTENSION["PROJ4", ...] as the example
> you
> shown. But I would be very surprised that GeoTools would understand that !
>
> Actually you might add this use case to this ticket
> https://github.com/opengeospatial/geotiff/issues/56 :-) if you want a
> ultimately clean solution for that. But even using latest WKT version
> wouldn't
> likely help, since as far as I remember, there is no standardized way in
> the
> EPSG dataset to represent the geostationary projection and the sweep
> parameter, so this would involve lobying at that level too.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190627/cb02c7d8/attachment-0001.html>

From even.rouault at spatialys.com  Thu Jun 27 09:32:20 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 27 Jun 2019 18:32:20 +0200
Subject: [PROJ] GOES Geostationary Projection
In-Reply-To: <CACmBxyuqJrSF-q3QJ0+xswStcTF9AmE8eU7KaDe7OwHMxWVOdw@mail.gmail.com>
References: <CACmBxys=1op4=XqHL-OrmsfaYaQnQmHJ2mtR=6pU+dgWKu74kQ@mail.gmail.com>
 <3159269.ZHHW4VgxUl@even-i700>
 <CACmBxyuqJrSF-q3QJ0+xswStcTF9AmE8eU7KaDe7OwHMxWVOdw@mail.gmail.com>
Message-ID: <8150853.l8mGjZiPTA@even-i700>

On jeudi 27 juin 2019 08:43:06 CEST Kurt Schwehr wrote:
> Thanks Even!
> 
> Since the end target isn't geotiff and it does have WKT

Which WKT are you talking about ?
I consider the WKT1 with PROJ strings you'll find reported by GDAL on the 
netCDF or in GeoTIFF to be hack, but I don't know a standardized form of WKT 
for that. 

With GDAL 3 / PROJ 6, the WKT2 is probably a bit better (see just below). But 
the method name and parameter names are still my own invention (hopefully 
reasonable enough)

$ gdalsrsinfo "+proj=geos +sweep=x +h=35786023"

PROJ.4 : +proj=geos +sweep=x +lon_0=0 +h=35786023 +x_0=0 +y_0=0 +datum=WGS84 
+units=m +no_defs

OGC WKT2:2018 :
PROJCRS["unknown",
    BASEGEOGCRS["unknown",
        DATUM["World Geodetic System 1984",
            ELLIPSOID["WGS 84",6378137,298.257223563,
                LENGTHUNIT["metre",1]],
            ID["EPSG",6326]],
        PRIMEM["Greenwich",0,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8901]]],
    CONVERSION["unknown",
        METHOD["Geostationary Satellite (Sweep X)"],
        PARAMETER["Longitude of natural origin",0,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8802]],
        PARAMETER["Satellite Height",35786023,
            LENGTHUNIT["metre",1,
                ID["EPSG",9001]]],
        PARAMETER["False easting",0,
            LENGTHUNIT["metre",1],
            ID["EPSG",8806]],
        PARAMETER["False northing",0,
            LENGTHUNIT["metre",1],
            ID["EPSG",8807]]],
    CS[Cartesian,2],
        AXIS["(E)",east,
            ORDER[1],
            LENGTHUNIT["metre",1,
                ID["EPSG",9001]]],
        AXIS["(N)",north,
            ORDER[2],
            LENGTHUNIT["metre",1,
                ID["EPSG",9001]]]]


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Thu Jun 27 10:08:53 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 27 Jun 2019 10:08:53 -0700
Subject: [PROJ] GOES Geostationary Projection
In-Reply-To: <8150853.l8mGjZiPTA@even-i700>
References: <CACmBxys=1op4=XqHL-OrmsfaYaQnQmHJ2mtR=6pU+dgWKu74kQ@mail.gmail.com>
 <3159269.ZHHW4VgxUl@even-i700>
 <CACmBxyuqJrSF-q3QJ0+xswStcTF9AmE8eU7KaDe7OwHMxWVOdw@mail.gmail.com>
 <8150853.l8mGjZiPTA@even-i700>
Message-ID: <CACmBxysikqU89xZfnHQyxhXCsuJYuKQRjWYfArUQa5iCfRitBg@mail.gmail.com>

The GDAL in my tool chain is circa Oct-2018, so the hack.  But since I'm
writing a custom converter, I should be able to force the WKT to be what
ever GeoTools wants for GEOS 16 & 17.  I'll start up a discussion on the
GeoTools mailing list and link back to here.

On Thu, Jun 27, 2019 at 9:32 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 27 juin 2019 08:43:06 CEST Kurt Schwehr wrote:
> > Thanks Even!
> >
> > Since the end target isn't geotiff and it does have WKT
>
> Which WKT are you talking about ?
> I consider the WKT1 with PROJ strings you'll find reported by GDAL on the
> netCDF or in GeoTIFF to be hack, but I don't know a standardized form of
> WKT
> for that.
>
> With GDAL 3 / PROJ 6, the WKT2 is probably a bit better (see just below).
> But
> the method name and parameter names are still my own invention (hopefully
> reasonable enough)
>
> $ gdalsrsinfo "+proj=geos +sweep=x +h=35786023"
>
> PROJ.4 : +proj=geos +sweep=x +lon_0=0 +h=35786023 +x_0=0 +y_0=0
> +datum=WGS84
> +units=m +no_defs
>
> OGC WKT2:2018 :
> PROJCRS["unknown",
>     BASEGEOGCRS["unknown",
>         DATUM["World Geodetic System 1984",
>             ELLIPSOID["WGS 84",6378137,298.257223563,
>                 LENGTHUNIT["metre",1]],
>             ID["EPSG",6326]],
>         PRIMEM["Greenwich",0,
>             ANGLEUNIT["degree",0.0174532925199433],
>             ID["EPSG",8901]]],
>     CONVERSION["unknown",
>         METHOD["Geostationary Satellite (Sweep X)"],
>         PARAMETER["Longitude of natural origin",0,
>             ANGLEUNIT["degree",0.0174532925199433],
>             ID["EPSG",8802]],
>         PARAMETER["Satellite Height",35786023,
>             LENGTHUNIT["metre",1,
>                 ID["EPSG",9001]]],
>         PARAMETER["False easting",0,
>             LENGTHUNIT["metre",1],
>             ID["EPSG",8806]],
>         PARAMETER["False northing",0,
>             LENGTHUNIT["metre",1],
>             ID["EPSG",8807]]],
>     CS[Cartesian,2],
>         AXIS["(E)",east,
>             ORDER[1],
>             LENGTHUNIT["metre",1,
>                 ID["EPSG",9001]]],
>         AXIS["(N)",north,
>             ORDER[2],
>             LENGTHUNIT["metre",1,
>                 ID["EPSG",9001]]]]
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190627/67fbf578/attachment.html>

From schwehr at gmail.com  Thu Jun 27 10:29:21 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 27 Jun 2019 10:29:21 -0700
Subject: [PROJ] GOES Geostationary Projection
In-Reply-To: <CACmBxysikqU89xZfnHQyxhXCsuJYuKQRjWYfArUQa5iCfRitBg@mail.gmail.com>
References: <CACmBxys=1op4=XqHL-OrmsfaYaQnQmHJ2mtR=6pU+dgWKu74kQ@mail.gmail.com>
 <3159269.ZHHW4VgxUl@even-i700>
 <CACmBxyuqJrSF-q3QJ0+xswStcTF9AmE8eU7KaDe7OwHMxWVOdw@mail.gmail.com>
 <8150853.l8mGjZiPTA@even-i700>
 <CACmBxysikqU89xZfnHQyxhXCsuJYuKQRjWYfArUQa5iCfRitBg@mail.gmail.com>
Message-ID: <CACmBxys5=PBLdtmtvy=oKd08t86X6kisW0irwi3z_sPtCKyUWQ@mail.gmail.com>

Thread on geotools-devel at lists.sourceforge.net here
https://sourceforge.net/p/geotools/mailman/message/36704682/

On Thu, Jun 27, 2019 at 10:08 AM Kurt Schwehr <schwehr at gmail.com> wrote:

> The GDAL in my tool chain is circa Oct-2018, so the hack.  But since I'm
> writing a custom converter, I should be able to force the WKT to be what
> ever GeoTools wants for GEOS 16 & 17.  I'll start up a discussion on the
> GeoTools mailing list and link back to here.
>
> On Thu, Jun 27, 2019 at 9:32 AM Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> On jeudi 27 juin 2019 08:43:06 CEST Kurt Schwehr wrote:
>> > Thanks Even!
>> >
>> > Since the end target isn't geotiff and it does have WKT
>>
>> Which WKT are you talking about ?
>> I consider the WKT1 with PROJ strings you'll find reported by GDAL on the
>> netCDF or in GeoTIFF to be hack, but I don't know a standardized form of
>> WKT
>> for that.
>>
>> With GDAL 3 / PROJ 6, the WKT2 is probably a bit better (see just below).
>> But
>> the method name and parameter names are still my own invention (hopefully
>> reasonable enough)
>>
>> $ gdalsrsinfo "+proj=geos +sweep=x +h=35786023"
>>
>> PROJ.4 : +proj=geos +sweep=x +lon_0=0 +h=35786023 +x_0=0 +y_0=0
>> +datum=WGS84
>> +units=m +no_defs
>>
>> OGC WKT2:2018 :
>> PROJCRS["unknown",
>>     BASEGEOGCRS["unknown",
>>         DATUM["World Geodetic System 1984",
>>             ELLIPSOID["WGS 84",6378137,298.257223563,
>>                 LENGTHUNIT["metre",1]],
>>             ID["EPSG",6326]],
>>         PRIMEM["Greenwich",0,
>>             ANGLEUNIT["degree",0.0174532925199433],
>>             ID["EPSG",8901]]],
>>     CONVERSION["unknown",
>>         METHOD["Geostationary Satellite (Sweep X)"],
>>         PARAMETER["Longitude of natural origin",0,
>>             ANGLEUNIT["degree",0.0174532925199433],
>>             ID["EPSG",8802]],
>>         PARAMETER["Satellite Height",35786023,
>>             LENGTHUNIT["metre",1,
>>                 ID["EPSG",9001]]],
>>         PARAMETER["False easting",0,
>>             LENGTHUNIT["metre",1],
>>             ID["EPSG",8806]],
>>         PARAMETER["False northing",0,
>>             LENGTHUNIT["metre",1],
>>             ID["EPSG",8807]]],
>>     CS[Cartesian,2],
>>         AXIS["(E)",east,
>>             ORDER[1],
>>             LENGTHUNIT["metre",1,
>>                 ID["EPSG",9001]]],
>>         AXIS["(N)",north,
>>             ORDER[2],
>>             LENGTHUNIT["metre",1,
>>                 ID["EPSG",9001]]]]
>>
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>>
>
>
> --
> --
> http://schwehr.org
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190627/db98a88d/attachment.html>

From kreve at sdfe.dk  Thu Jun 27 21:57:38 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 28 Jun 2019 04:57:38 +0000
Subject: [PROJ] Motion: Promote PROJ 6.1.1RC1 to final release
Message-ID: <87E04689-142D-4189-9BA2-38FAFB3D8313@sdfe.dk>

PSC Members,

No problems with PROJ 6.1.1RC1 has been reported, so I hereby
motion that the release candidate be promoted to final release.

I’ll start with my +1

/Kristian

From cameron.shorter at gmail.com  Fri Jun 28 00:03:47 2019
From: cameron.shorter at gmail.com (Cameron Shorter)
Date: Fri, 28 Jun 2019 17:03:47 +1000
Subject: [PROJ] Multifaceted Dynamic/Static datum problem
Message-ID: <CABqeU+hK0-mtFVNKwHKqWBNQJhmbx8NNLN=OWf1MAvV6RH3pgQ@mail.gmail.com>

The dynamic/static datum problem we have been discussing appears to be
multifaceted. I feel it would be useful to define and then consider each
facet of the problem separately. Each has different characteristics and
there are different strategies that can be applied to each. Later we can
decide when, how and if we deal with each facet.

I’m interested to hear feedback. Have I’ve covered all the facets worth
mentioning? Am I using the right terminology? Do my descriptions make sense?



   1. Missing observation timestamp from coordinates:

Applications which capture coordinates will typically copy these
coordinates to a dataset on the server, in a specific datum.

Problem 1.1: In copying the coordinates to the server’s datum, the
coordinates’ observation timestamp is dropped. This means we won’t be able
to reverse engineer the (time, coordinate) when the observation was made.

Problem 1.2: An error is introduced when moving from the epoch of TODAY to
the epoch of the server’s datum. For example, an OpenStreetMap contributor
uses their mobile phone to create a track of their local street. When
loaded to the server, the latest WGS84 epoch is used instead of TODAY.

2. Using WGS84 dynamic datum as if it were static:

Problem 2.1: In many (most?) webmapping applications, the dynamic WGS84
datum is used as if it were a static datum:

   -

   WGS84 based maps are fixed in time when they are tiled.
   -

   Webmapping applications would typically collect and store coordinates in
   WGS84, fixing the coordinates at that point in time. (The datum moves on).


WGS84 Web Mercator is based on the WGS84 CRS (Lats, Longs), which is based
on “The World Geodetic System 84” which is defined in the EPSG Registry
<https://www.epsg-registry.org/> as a dynamic datum.

EPSG:3857 <- EPSG:4326 <- EPSG:6326


3. Webmapping has been topologically aligned, not always accurate:

To date web-mapping applications, based on the WGS84 datum, have been
precise but not always accurate. Or explained another way, within a region,
layers have been topologically aligned.

Problem 3.1: Webmapping has had tolerated low accuracy, as long as maps
were topologically aligned. However, EPSG definitions have focused only on
accuracy.

precision requirements and tolerance of low accuracy has not been
considered by providers of web services.

Problem 3.2: The poor accuracy of WGS84 Web Mercator has been masked from
system testers due to prior high precision. Effectively, there has been a
communication gap between the geospatial community and software developers
in understanding this problem.

4. Australia’s misaligned maps:

Australia is facing map mis-alignment challenges earlier than most due to
our advanced datum modernisation program
<https://www.ga.gov.au/scientific-topics/positioning-navigation/datum-modernisation>
.


Australia now has static datums for the years 1994 and 2020 and uses the
time-dependent WGS84 datum for web-mapping. We’ve defined:

   1.

   Transforming from GDA94 to GDA2020 reflects Australia’s movement of ~
   1.8 metres to the North East.
   2.

   GDA94 is defined as ‘equal to WGS84’, accurate to 3 metres.
   3.

   GDA2020 is defined as ‘equal to WGS84’, accurate to 3 metres.

Problem 4.1: While technically correct, combining map layers from GDA94 and
GDA2020 sources into WGS84 results in systematically mis-aligned maps,
(although technically within the 3 metre tolerance).

5. WGS84 datum is tied to different epochs in different regions:

We could set a convention to use a specific WGS84 epoch for web mapping
applications.

Problem 5.1: In fact, different regions currently use different epochs of
WGS84. For example, Australia’s epoch of WGS84 is tied to GDA94 from 1994,
USA is tied to NAD83 from 2011 etc.


-- 
Cameron Shorter
Technology Demystifier
Open Technologies and Geospatial Consultant

M +61 (0) 419 142 254
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190628/3cf43ed4/attachment.html>

From rdmailings at duif.net  Fri Jun 28 01:03:59 2019
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Fri, 28 Jun 2019 10:03:59 +0200
Subject: [PROJ] Meaning of (x) numbers in proj transformations in QGIS
Message-ID: <a5be53ad-9b4f-8a77-739c-2ad55b8301e6@duif.net>

Hi List,

coming from this QGIS Dev thread:

https://lists.osgeo.org/pipermail/qgis-developer/2019-June/057806.html

I was wondering which proper information an average QGIS user can use to
determine what transformation to pick...

And what information (numbers and text) in these dialogs come from proj
or from QGIS.

In the above thread I point to the images in this post:

http://www.qgis.nl/2019/06/27/english-proj-select-datum-transformations-for-epsg28992/?lang=en

First screenie being a 'choose transformation' dialog in QGIS 3.8 (with
proj5), the second one from QGIS master with proj6.

According to Nyall, he uses the info from proj to label the 'best fit'
green, but I also see 'higher order' numbers in the descriptions of the
options (numbers between brackets). My main reason to come here:
apparently (3) is by proj/Nyall seen as current, but then I wonder why
there is a (4) option...

But my main question: is "which proper information an average QGIS user
can use to determine what transformation to pick.." if presented with
one of those dialogs (as I had....)... and not being a projection guru :-)

Regards,

Richard Duivenvoorde

From even.rouault at spatialys.com  Fri Jun 28 01:08:13 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Jun 2019 10:08:13 +0200
Subject: [PROJ] Motion: Promote PROJ 6.1.1RC1 to final release
In-Reply-To: <87E04689-142D-4189-9BA2-38FAFB3D8313@sdfe.dk>
References: <87E04689-142D-4189-9BA2-38FAFB3D8313@sdfe.dk>
Message-ID: <5006729.S4xxryC5e1@even-i700>

On vendredi 28 juin 2019 04:57:38 CEST Kristian Evers wrote:
> PSC Members,
> 
> No problems with PROJ 6.1.1RC1 has been reported, so I hereby
> motion that the release candidate be promoted to final release.
> 
> I’ll start with my +1

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Jun 28 02:03:47 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Jun 2019 11:03:47 +0200
Subject: [PROJ] Meaning of (x) numbers in proj transformations in QGIS
In-Reply-To: <a5be53ad-9b4f-8a77-739c-2ad55b8301e6@duif.net>
References: <a5be53ad-9b4f-8a77-739c-2ad55b8301e6@duif.net>
Message-ID: <1700122.pj7eimXqJx@even-i700>

Hi Richard,

> According to Nyall, he uses the info from proj to label the 'best fit'
> green, but I also see 'higher order' numbers in the descriptions of the
> options (numbers between brackets). My main reason to come here:
> apparently (3) is by proj/Nyall seen as current, but then I wonder why
> there is a (4) option...

Tough topic. The numbers in brackets (3), (4) come directly from the name of 
the transformation from the EPSG dataset. I don't think they have a particular 
meaning, except to distinguish transformations which go from the same source 
to the same target. The latest number is probably the most recent, but PROJ 
doesn't make any such hypothesis.
So when PROJ collects all possible transformations and tries to filter and 
sort them from the most relevant to the less, it takes into account different 
parameters: accuracy advertized, area of use, availability of grids, 
supersession information, ... and when all those criteria are equal, it just 
sorts by name... Here EPSG:4833 (Amersfoort to WGS 84 (4)) and EPSG:15934 
(Amersfoort to WGS 84 (3)) have the same accuracy, area of use, don't require 
grids and ... are reported as being both current ! The text remark that EPSG:
4833 replaces EPSG:15934 isn't translated in a record in the 
'epsg_supersession' table (whereas EPSG:11125 and EPSG:1672 are clearly marked 
as superseded by other codes).
So for that particular case, PROJ probably makes the "wrong" (see final 
comment at end of email) choice based on incomplete information from the EPSG 
dataset. You should probably file a change request to IOGP so that they add an 
entry in the supersession table. Unless this is intended by them to keep only 
the last 2 valid entries (perhaps "replaced by" doesn't equate to "is 
superseded by"...), and just tag as supersed the previous ones.

If one wanted to improve the situation from the available information, there 
could be two choices:
- analyze text remarks to guess extra supersession information. That is look 
for pattern like "Replaces FOO (code BAR)"
- take into account the " (number)" trailing information, to put first 
transformation with higher number, but I'm wondering if that wouldn't be 
fragile in other situations.
Not sure which one I dislike the less :-)

Another thing is that currently the import process of the EPSG dataset to the 
PROJ dataset doesn't import remarks, so they are lost to the end user. I 
didn't want to do that for now to limit the size of the database, but that 
might be discussed.

> But my main question: is "which proper information an average QGIS user
> can use to determine what transformation to pick.." if presented with
> one of those dialogs (as I had....)... and not being a projection guru :-)

Ah ah, anyone knowning the answer would be multi-millionaire ;-)

But to come back to your particular transformation, the thing is that which 
one of "Amersfoort to WGS 84 (3)" or "Amersfoort to WGS 84 (4)" should be 
picked up depends probably more on which one was used by other data producers 
to do similar transformations. Given the accuracy of definition of both 
Amersfoort and WGS 84, both are OK. This is mostly an issue of using 
consistently the same one to avoid alignment problems.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Fri Jun 28 05:12:06 2019
From: howard at hobu.co (Howard Butler)
Date: Fri, 28 Jun 2019 07:12:06 -0500
Subject: [PROJ] Motion: Promote PROJ 6.1.1RC1 to final release
In-Reply-To: <5006729.S4xxryC5e1@even-i700>
References: <87E04689-142D-4189-9BA2-38FAFB3D8313@sdfe.dk>
 <5006729.S4xxryC5e1@even-i700>
Message-ID: <9B8DBEA7-6865-4198-A230-18ABF825749B@hobu.co>



> On Jun 28, 2019, at 3:08 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> On vendredi 28 juin 2019 04:57:38 CEST Kristian Evers wrote:
>> PSC Members,
>> 
>> No problems with PROJ 6.1.1RC1 has been reported, so I hereby
>> motion that the release candidate be promoted to final release.
>> 
>> I’ll start with my +1
> 
> +1 Even

+1 Howard

From even.rouault at spatialys.com  Fri Jun 28 07:17:05 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Jun 2019 16:17:05 +0200
Subject: [PROJ] PROJ debug build on Windows ?
Message-ID: <14214801.VEgJTMW22G@even-i700>

Hi,

Anyone knows if there's an issue to build PROJ in debug mode on Windows ?
(please keep Joaquim in CC as I'm not sure he's subscribed here)

Even

----------  Forwarded Message  ----------

Subject: RE: [gdal-dev] kml file with line length too long
Date: vendredi 28 juin 2019, 14:07:01 CEST
From: Joaquim Manuel Freire Luís <jluis at ualg.pt>
To: Even Rouault <even.rouault at spatialys.com>
CC: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>

|>Nothing strikes me as obviously wrong (just missing CPLFree() on pszWKT and
|>pszProj4, but that's not the cause of your issue).
|>You'll have to use your favorite debugging tool: gdb, valgrind ...

Hmm, landed in proj_as_wkt() but I'm not being able to build a proj debug. No 
matter setting
		-DCMAKE_BUILD_TYPE=Debug ^
		-DCMAKE_CONFIGURATION_TYPES=Debug ^
In cmake, I end up with a release build

-----------------------------------------
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmfluis at gmail.com  Fri Jun 28 07:23:59 2019
From: jmfluis at gmail.com (jmfluis at gmail.com)
Date: Fri, 28 Jun 2019 15:23:59 +0100
Subject: [PROJ] PROJ debug build on Windows ?
In-Reply-To: <14214801.VEgJTMW22G@even-i700>
References: <14214801.VEgJTMW22G@even-i700>
Message-ID: <002701d52dbd$21519040$63f4b0c0$@gmail.com>

Sorry (Even), false alarm. I have also a ConfigUser.cmake file that has the build type declared there too and apparently it takes precedence to the setting in command line. I have a debug dll now. 
... proceeding with the debug.


|>-----Original Message-----
|>From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
|>Sent: Friday, June 28, 2019 3:17 PM
|>To: proj at lists.osgeo.org
|>Cc: Joaquim Manuel Freire Luís <jluis at ualg.pt>
|>Subject: [PROJ] PROJ debug build on Windows ?
|>
|>Hi,
|>
|>Anyone knows if there's an issue to build PROJ in debug mode on Windows ?
|>(please keep Joaquim in CC as I'm not sure he's subscribed here)
|>
|>Even
|>
|>----------  Forwarded Message  ----------
|>
|>Subject: RE: [gdal-dev] kml file with line length too long
|>Date: vendredi 28 juin 2019, 14:07:01 CEST
|>From: Joaquim Manuel Freire Luís <jluis at ualg.pt>
|>To: Even Rouault <even.rouault at spatialys.com>
|>CC: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
|>
|>|>Nothing strikes me as obviously wrong (just missing CPLFree() on
|>|>pszWKT and pszProj4, but that's not the cause of your issue).
|>|>You'll have to use your favorite debugging tool: gdb, valgrind ...
|>
|>Hmm, landed in proj_as_wkt() but I'm not being able to build a proj debug. No
|>matter setting
|>		-DCMAKE_BUILD_TYPE=Debug ^
|>		-DCMAKE_CONFIGURATION_TYPES=Debug ^
|>In cmake, I end up with a release build
|>
|>-----------------------------------------
|>--
|>Spatialys - Geospatial professional services http://www.spatialys.com
|>_______________________________________________
|>PROJ mailing list
|>PROJ at lists.osgeo.org
|>https://lists.osgeo.org/mailman/listinfo/proj


From nyall.dawson at gmail.com  Fri Jun 28 23:06:47 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sat, 29 Jun 2019 16:06:47 +1000
Subject: [PROJ] Meaning of (x) numbers in proj transformations in QGIS
In-Reply-To: <1700122.pj7eimXqJx@even-i700>
References: <a5be53ad-9b4f-8a77-739c-2ad55b8301e6@duif.net>
 <1700122.pj7eimXqJx@even-i700>
Message-ID: <CAB28Asi8-SffQZoFZ=uWOu5iTuHCsM-8zF3t1Ukx+X7bCaT8jw@mail.gmail.com>

On Fri, 28 Jun 2019 at 19:03, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Another thing is that currently the import process of the EPSG dataset to the
> PROJ dataset doesn't import remarks, so they are lost to the end user. I
> didn't want to do that for now to limit the size of the database, but that
> might be discussed.
>

I'd be a big +1 to having access to these remarks through proj. It's
really the only loss we had when porting QGIS to proj 6 and dropping
our own bodgy db. I'd love some way to expose more information to end
users to help inform them of the suitability of different pipelines,
and having access to the EPSG "scope" and "remarks" seems ideal for
this purpose.

E.g. I'd want to expose this from the EPSG registry when giving users
a choice between an operation involving EPSG::8447 and EPSG::8446:

EPSG:8447
Scope: Transformation of GDA94 coordinates when localised distortion
needs to be taken into account, e.g. if GDA94 coordinates were derived
survey control monuments.
Remarks: See GDA94 to GDA2020 (1) or (3) (codes 8048 and 8446) for
alternative conformal-only transformation without local distortion
modelling. GDA2020 Technical Manual and fact sheet T1 give guidance on
which to use.

EPSG:8446:
Scope: Conformal transformation of GDA94 coordinates that have been
derived through GNSS CORS.
Remarks: Gives identical results to Helmert transformation GDA94 to
GDA2020 (1) (code 8048). See GDA94 to GDA2020 (2) (code 8447) for
alternative with local distortion modelling included. GDA2020
Technical Manual and fact sheet T1 give guidance on which to use.

Both the fields are needed to fully inform users on the applicability
of either pipeline.

Nyall



> > But my main question: is "which proper information an average QGIS user
> > can use to determine what transformation to pick.." if presented with
> > one of those dialogs (as I had....)... and not being a projection guru :-)
>
> Ah ah, anyone knowning the answer would be multi-millionaire ;-)
>
> But to come back to your particular transformation, the thing is that which
> one of "Amersfoort to WGS 84 (3)" or "Amersfoort to WGS 84 (4)" should be
> picked up depends probably more on which one was used by other data producers
> to do similar transformations. Given the accuracy of definition of both
> Amersfoort and WGS 84, both are OK. This is mostly an issue of using
> consistently the same one to avoid alignment problems.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From even.rouault at spatialys.com  Sat Jun 29 03:27:36 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 29 Jun 2019 12:27:36 +0200
Subject: [PROJ] Meaning of (x) numbers in proj transformations in QGIS
In-Reply-To: <CAB28Asi8-SffQZoFZ=uWOu5iTuHCsM-8zF3t1Ukx+X7bCaT8jw@mail.gmail.com>
References: <a5be53ad-9b4f-8a77-739c-2ad55b8301e6@duif.net>
 <1700122.pj7eimXqJx@even-i700>
 <CAB28Asi8-SffQZoFZ=uWOu5iTuHCsM-8zF3t1Ukx+X7bCaT8jw@mail.gmail.com>
Message-ID: <2457561.uQ1IpBApjY@even-i700>

On samedi 29 juin 2019 16:06:47 CEST Nyall Dawson wrote:
> On Fri, 28 Jun 2019 at 19:03, Even Rouault <even.rouault at spatialys.com> 
wrote:
> > Another thing is that currently the import process of the EPSG dataset to
> > the PROJ dataset doesn't import remarks, so they are lost to the end
> > user. I didn't want to do that for now to limit the size of the database,
> > but that might be discussed.
> 
> I'd be a big +1 to having access to these remarks through proj. 

OK I've addressed this per
https://github.com/OSGeo/PROJ/pull/1537

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Sat Jun 29 04:32:23 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sat, 29 Jun 2019 08:32:23 -0300
Subject: [PROJ] Meaning of (x) numbers in proj transformations in QGIS
In-Reply-To: <CAB28Asi8-SffQZoFZ=uWOu5iTuHCsM-8zF3t1Ukx+X7bCaT8jw@mail.gmail.com>
References: <a5be53ad-9b4f-8a77-739c-2ad55b8301e6@duif.net>
 <1700122.pj7eimXqJx@even-i700>
 <CAB28Asi8-SffQZoFZ=uWOu5iTuHCsM-8zF3t1Ukx+X7bCaT8jw@mail.gmail.com>
Message-ID: <2d0f58c1-d01b-f826-8dbf-1d5ed08a04e4@gatewaygeomatics.com>

I agree with Nyall that users really need access to those 'remarks'.  -jeff




On 2019-06-29 3:06 AM, Nyall Dawson wrote:
> On Fri, 28 Jun 2019 at 19:03, Even Rouault <even.rouault at spatialys.com> wrote:
>>
>> Another thing is that currently the import process of the EPSG dataset to the
>> PROJ dataset doesn't import remarks, so they are lost to the end user. I
>> didn't want to do that for now to limit the size of the database, but that
>> might be discussed.
>>
> 
> I'd be a big +1 to having access to these remarks through proj. It's
> really the only loss we had when porting QGIS to proj 6 and dropping
> our own bodgy db. I'd love some way to expose more information to end
> users to help inform them of the suitability of different pipelines,
> and having access to the EPSG "scope" and "remarks" seems ideal for
> this purpose.
> 
> E.g. I'd want to expose this from the EPSG registry when giving users
> a choice between an operation involving EPSG::8447 and EPSG::8446:
> 
> EPSG:8447
> Scope: Transformation of GDA94 coordinates when localised distortion
> needs to be taken into account, e.g. if GDA94 coordinates were derived
> survey control monuments.
> Remarks: See GDA94 to GDA2020 (1) or (3) (codes 8048 and 8446) for
> alternative conformal-only transformation without local distortion
> modelling. GDA2020 Technical Manual and fact sheet T1 give guidance on
> which to use.
> 
> EPSG:8446:
> Scope: Conformal transformation of GDA94 coordinates that have been
> derived through GNSS CORS.
> Remarks: Gives identical results to Helmert transformation GDA94 to
> GDA2020 (1) (code 8048). See GDA94 to GDA2020 (2) (code 8447) for
> alternative with local distortion modelling included. GDA2020
> Technical Manual and fact sheet T1 give guidance on which to use.
> 
> Both the fields are needed to fully inform users on the applicability
> of either pipeline.
> 
> Nyall
> 
> 
> 
>>> But my main question: is "which proper information an average QGIS user
>>> can use to determine what transformation to pick.." if presented with
>>> one of those dialogs (as I had....)... and not being a projection guru :-)
>>
>> Ah ah, anyone knowning the answer would be multi-millionaire ;-)
>>
>> But to come back to your particular transformation, the thing is that which
>> one of "Amersfoort to WGS 84 (3)" or "Amersfoort to WGS 84 (4)" should be
>> picked up depends probably more on which one was used by other data producers
>> to do similar transformations. Given the accuracy of definition of both
>> Amersfoort and WGS 84, both are OK. This is mostly an issue of using
>> consistently the same one to avoid alignment problems.
>>
>> Even
>>
>>

From kreve at sdfe.dk  Sun Jun 30 23:18:07 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 1 Jul 2019 06:18:07 +0000
Subject: [PROJ] Motion: Promote PROJ 6.1.1RC1 to final release
In-Reply-To: <9B8DBEA7-6865-4198-A230-18ABF825749B@hobu.co>
References: <87E04689-142D-4189-9BA2-38FAFB3D8313@sdfe.dk>
 <5006729.S4xxryC5e1@even-i700> <9B8DBEA7-6865-4198-A230-18ABF825749B@hobu.co>
Message-ID: <3AD745F8-F293-4C42-9223-9960A4FB414C@sdfe.dk>

Motion passed with +1’s from Thomas, Even and Howard.

I will announce the final release within the next couple of hours.

/Kristian

> On 28 Jun 2019, at 14:12, Howard Butler <howard at hobu.co> wrote:
> 
> 
> 
>> On Jun 28, 2019, at 3:08 AM, Even Rouault <even.rouault at spatialys.com> wrote:
>> 
>>> On vendredi 28 juin 2019 04:57:38 CEST Kristian Evers wrote:
>>> PSC Members,
>>> 
>>> No problems with PROJ 6.1.1RC1 has been reported, so I hereby
>>> motion that the release candidate be promoted to final release.
>>> 
>>> I’ll start with my +1
>> 
>> +1 Even
> 
> +1 Howard
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From sgh at sgh.dk  Sun Jun 30 23:19:04 2019
From: sgh at sgh.dk (=?ISO-8859-1?Q?S=F8ren?= Holm)
Date: Mon, 01 Jul 2019 08:19:04 +0200
Subject: [PROJ] Regarding deprecated API
Message-ID: <3138816.tcK9HqR71F@koontz>

Hi

I can't seem to find and description of the actual current API in relation to 
the deprecated API.

My current use of the old API is quite limited. Currently I use pj_init_plus 
for the initialization, pj_transform for the transforms and pj_strerrno.

Are thee there any guidelines available for migrating?

Thanks.

-- 
Søren Holm



From kreve at sdfe.dk  Sun Jun 30 23:28:23 2019
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 1 Jul 2019 06:28:23 +0000
Subject: [PROJ] Regarding deprecated API
In-Reply-To: <3138816.tcK9HqR71F@koontz>
References: <3138816.tcK9HqR71F@koontz>
Message-ID: <2273182F-6D70-4FA7-99C7-F7D137512015@sdfe.dk>

Søren,

Take a look at https://proj.org/development/migration.html.

/Kristian


On 1 Jul 2019, at 08:19, Søren Holm <sgh at sgh.dk<mailto:sgh at sgh.dk>> wrote:

Hi

I can't seem to find and description of the actual current API in relation to
the deprecated API.

My current use of the old API is quite limited. Currently I use pj_init_plus
for the initialization, pj_transform for the transforms and pj_strerrno.

Are thee there any guidelines available for migrating?

Thanks.

--
Søren Holm


_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20190701/b2da3f2a/attachment.html>

