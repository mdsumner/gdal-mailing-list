From aaron at cartopac.com  Fri Oct  1 08:34:01 2010
From: aaron at cartopac.com (Aaron Friesen)
Date: Fri, 1 Oct 2010 11:34:01 -0400
Subject: [Proj] Web Mercator vs. Web Mercator Auxiliary Sphere
Message-ID: <90200BC582E4FF488816D357540C1D4D2271E4D5E1@VMBX103.ihostexchange.net>

Curiosity question ...

>From the Proj4 FAQ, for Web Mercator, the setting should be:

+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 \
                   +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs

I am having to deal with data in "Web Mercator Auxiliary Sphere",
as apparently defined by ESRI.

The WKT form spatialreference.org is:

PROJCS["WGS_1984_Web_Mercator_Auxiliary_Sphere",
    GEOGCS["GCS_WGS_1984",
        DATUM["D_WGS_1984",
            SPHEROID["WGS_1984",6378137.0,298.257223563]],
        PRIMEM["Greenwich",0.0],
        UNIT["Degree",0.0174532925199433]],
    PROJECTION["Mercator_Auxiliary_Sphere"],
    PARAMETER["False_Easting",0.0],
    PARAMETER["False_Northing",0.0],
    PARAMETER["Central_Meridian",0.0],
    PARAMETER["Standard_Parallel_1",0.0],
    PARAMETER["Auxiliary_Sphere_Type",0.0],
    UNIT["Meter",1.0],
    AUTHORITY["ESRI","102100"]]

How does the proj4 definition need to change to match?

Is setting b=6356752.314245 sufficient?

Aaron



From robert at dgi.com  Fri Oct  1 09:14:22 2010
From: robert at dgi.com (Robert McFaul)
Date: Fri, 01 Oct 2010 09:14:22 -0700
Subject: [Proj] NAD 27 v 83 Distances
Message-ID: <4CA608DE.8080507@dgi.com>

Hi,

I'm concerned about whether ground surface distances are different between
NAD27 and NAD83. I'm in California (southern) and thinking about a 
conversion
of a project to NAD83. I have some cross section distances measured (1000 to
3000 feet in length) and suddenly am wondering what sort of differences 
might
be involved by this change in systems.

What can I expect here?

Thanks.

robert mcfaul
robert at dgi.com





From nhv at cape.com  Fri Oct  1 09:29:09 2010
From: nhv at cape.com (Norman Vine)
Date: Fri, 1 Oct 2010 12:29:09 -0400
Subject: [Proj] NAD 27 v 83 Distances
In-Reply-To: <4CA608DE.8080507@dgi.com>
References: <4CA608DE.8080507@dgi.com>
Message-ID: <A0555131-9B03-48DC-A17C-3FC549CC4753@cape.com>

use the proj geod utility

http://trac.osgeo.org/proj/wiki/man_geod


or NGS has an online calculator that you can test some points with

http://www.ngs.noaa.gov/cgi-bin/Inv_Fwd/inverse2.prl

 Norman

On Oct 1, 2010, at 12:14 PM, Robert McFaul wrote:

> Hi,
> 
> I'm concerned about whether ground surface distances are different between
> NAD27 and NAD83. I'm in California (southern) and thinking about a 
> conversion
> of a project to NAD83. I have some cross section distances measured (1000 to
> 3000 feet in length) and suddenly am wondering what sort of differences 
> might
> be involved by this change in systems.
> 
> What can I expect here?
> 
> Thanks.
> 
> robert mcfaul
> robert at dgi.com
> 
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101001/ef1a7236/attachment.html>

From warmerdam at pobox.com  Fri Oct  1 09:28:25 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 01 Oct 2010 12:28:25 -0400
Subject: [Proj] NAD 27 v 83 Distances
In-Reply-To: <4CA608DE.8080507@dgi.com>
References: <4CA608DE.8080507@dgi.com>
Message-ID: <4CA60C29.1010102@pobox.com>

Robert McFaul wrote:
> Hi,
> 
> I'm concerned about whether ground surface distances are different between
> NAD27 and NAD83. I'm in California (southern) and thinking about a 
> conversion
> of a project to NAD83. I have some cross section distances measured (1000 to
> 3000 feet in length) and suddenly am wondering what sort of differences 
> might
> be involved by this change in systems.

Robert,

The difference of distances should be modest between the two datums, with of
course the NAD83 distances being the better of the two.  I did a test for a
random point in southern california and the change is datum shift deltas over
one kilometer was about 1cm.  You can do similar tests for any area of interest:

cs2cs -f '%.4f' +proj=utm +zone=11 +datum=NAD27 +to +proj=utm +zone=11 +datum=NAD83
440000 3750000
439919.4833     3750196.3019 0.0000
440000 3751000
439919.4784     3751196.3100 0.0000

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From strebe at aol.com  Fri Oct  1 12:26:18 2010
From: strebe at aol.com (strebe at aol.com)
Date: Fri, 01 Oct 2010 15:26:18 -0400
Subject: [Proj] NAD 27 v 83 Distances
In-Reply-To: <4CA60C29.1010102@pobox.com>
References: <4CA608DE.8080507@dgi.com> <4CA60C29.1010102@pobox.com>
Message-ID: <8CD2FB5A7D5440D-1564-2172@webmail-d068.sysops.aol.com>


 

 
>The difference of distances should be modest between the two datums, with of
>course the NAD83 distances being the better of the two. 


 
Why would NAD83 be the better of the two?

Regards,
— daan Strebe


 

-----Original Message-----
From: Frank Warmerdam <warmerdam at pobox.com>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Fri, Oct 1, 2010 9:28 am
Subject: Re: [Proj] NAD 27 v 83 Distances


Robert McFaul wrote:
> Hi,
> 
> I'm concerned about whether ground surface distances are different between
> NAD27 and NAD83. I'm in California (southern) and thinking about a 
> conversion
> of a project to NAD83. I have some cross section distances measured (1000 to
> 3000 feet in length) and suddenly am wondering what sort of differences 
> might
> be involved by this change in systems.

Robert,

The difference of distances should be modest between the two datums, with of
course the NAD83 distances being the better of the two.  I did a test for a
random point in southern california and the change is datum shift deltas over
one kilometer was about 1cm.  You can do similar tests for any area of interest:

cs2cs -f '%.4f' +proj=utm +zone=11 +datum=NAD27 +to +proj=utm +zone=11 
+datum=NAD83
440000 3750000
439919.4833     3750196.3019 0.0000
440000 3751000
439919.4784     3751196.3100 0.0000

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101001/34e3b899/attachment.html>

From warmerdam at pobox.com  Fri Oct  1 12:29:43 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 01 Oct 2010 15:29:43 -0400
Subject: [Proj] NAD 27 v 83 Distances
In-Reply-To: <8CD2FB5A7D5440D-1564-2172@webmail-d068.sysops.aol.com>
References: <4CA608DE.8080507@dgi.com> <4CA60C29.1010102@pobox.com>
	<8CD2FB5A7D5440D-1564-2172@webmail-d068.sysops.aol.com>
Message-ID: <4CA636A7.9030201@pobox.com>

strebe at aol.com wrote:
> 
> 
>>The difference of distances should be modest between the two datums, with of
>>course the NAD83 distances being the better of the two. 
> 
> 
> Why would NAD83 be the better of the two?

Daan,

Because the differences between NAD83 and NAD27 primarily reflect survey
errors in the NAD27 datum.  At least that is my thinking.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From cjmce at lsu.edu  Fri Oct  1 12:42:08 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 1 Oct 2010 14:42:08 -0500
Subject: [Proj] NAD 27 v 83 Distances
References: <4CA608DE.8080507@dgi.com> <4CA60C29.1010102@pobox.com>
	<8CD2FB5A7D5440D-1564-2172@webmail-d068.sysops.aol.com>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A6542@email002.lsu.edu>

Because it is the current legal datum of the United States, and it is based in part on artificial satellite observations.  The semi-major axis of the GRS80 ellipsoid has been proven to be correct within a few centimeters based on decades of observing GPS orbits.
 
NAD27 is referenced to an ellipsoid computed by hand and published by COL Alexander Ross Clark, R.E. in 1866.
 
Since this is a discussion of distances, NAD83 is closest to the truth as a matter of scale and shape.
 
Best regards,
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of strebe at aol.com
Sent: Fri 01-Oct-10 14:26
To: proj at lists.maptools.org
Subject: Re: [Proj] NAD 27 v 83 Distances



>The difference of distances should be modest between the two datums, with of
>course the NAD83 distances being the better of the two. 

Why would NAD83 be the better of the two?

Regards,
- daan Strebe




-----Original Message-----
From: Frank Warmerdam <warmerdam at pobox.com>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Fri, Oct 1, 2010 9:28 am
Subject: Re: [Proj] NAD 27 v 83 Distances


Robert McFaul wrote:
> Hi,
> 
> I'm concerned about whether ground surface distances are different between
> NAD27 and NAD83. I'm in California (southern) and thinking about a 
> conversion
> of a project to NAD83. I have some cross section distances measured (1000 to
> 3000 feet in length) and suddenly am wondering what sort of differences 
> might
> be involved by this change in systems.

Robert,

The difference of distances should be modest between the two datums, with of
course the NAD83 distances being the better of the two.  I did a test for a
random point in southern california and the change is datum shift deltas over
one kilometer was about 1cm.  You can do similar tests for any area of interest:

cs2cs -f '%.4f' +proj=utm +zone=11 +datum=NAD27 +to +proj=utm +zone=11 
+datum=NAD83
440000 3750000
439919.4833     3750196.3019 0.0000
440000 3751000
439919.4784     3751196.3100 0.0000

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101001/b23b52b6/attachment.html>

From strebe at aol.com  Fri Oct  1 13:53:37 2010
From: strebe at aol.com (strebe at aol.com)
Date: Fri, 01 Oct 2010 16:53:37 -0400
Subject: [Proj] NAD 27 v 83 Distances
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7026A6542@email002.lsu.edu>
References: <B597ADFC46B67741B18EA6AA13613FF7026A6542@email002.lsu.edu>
Message-ID: <8CD2FC1DADA7D28-13A0-D61@webmail-d068.sysops.aol.com>


Does that follow? Aren’t the local datums, with ellipsoids fitted to the local surface, generally more accurate than a single ellipsoid for the entire earth? I’ve certainly found that vertical coordinates are generally worse on WGS84.

Granted, NAD27 covers a vast region, so perhaps it deviates further from reality than some of the more local datums in use around the world. But without a study computing deviations from the geoid on both, it seems a bit breezy to just claim the newer one is “better” given that its purpose is the best global system rather than the best local system. That fact that NAD83 is the “current legal datum” seems irrelevant to the question of accuracy of real distances.

Obviously not important in the context of the original posting; either surface is a fiction and real distances over real terrain will deviate from either datum far more than distances on the two datums will deviate from each other.

Regards,
— daan Strebe

 


 

 

-----Original Message-----
From: Clifford J Mugnier <cjmce at lsu.edu>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Fri, Oct 1, 2010 12:42 pm
Subject: Re: [Proj] NAD 27 v 83 Distances



Because it is the current legal datum of the United States, and it is based in part on artificial satellite observations.  The semi-major axis of the GRS80 ellipsoid has been proven to be correct within a few centimeters based on decades of observing GPS orbits.
 
NAD27 is referenced to an ellipsoid computed by hand and published by COL Alexander Ross Clark, R.E. in 1866.
 
Since this is a discussion of distances, NAD83 is closest to the truth as a matter of scale and shape.
 
Best regards,
 


Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group





From: proj-bounces at lists.maptools.org on behalf of strebe at aol.com
Sent: Fri 01-Oct-10 14:26
To: proj at lists.maptools.org
Subject: Re: [Proj] NAD 27 v 83 Distances






>The difference of distances should be modest between the two datums, with of
>course the NAD83 distances being the better of the two. 


Why would NAD83 be the better of the two?

Regards,
— daan Strebe




-----Original Message-----
From: Frank Warmerdam <warmerdam at pobox.com>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Fri, Oct 1, 2010 9:28 am
Subject: Re: [Proj] NAD 27 v 83 Distances


Robert McFaul wrote:
> Hi,
> 
> I'm concerned about whether ground surface distances are different between
> NAD27 and NAD83. I'm in California (southern) and thinking about a 
> conversion
> of a project to NAD83. I have some cross section distances measured (1000 to
> 3000 feet in length) and suddenly am wondering what sort of differences 
> might
> be involved by this change in systems.

Robert,

The difference of distances should be modest between the two datums, with of
course the NAD83 distances being the better of the two.  I did a test for a
random point in southern california and the change is datum shift deltas over
one kilometer was about 1cm.  You can do similar tests for any area of interest:

cs2cs -f '%.4f' +proj=utm +zone=11 +datum=NAD27 +to +proj=utm +zone=11 
+datum=NAD83
440000 3750000
439919.4833     3750196.3019 0.0000
440000 3751000
439919.4784     3751196.3100 0.0000

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



 
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101001/a423e83b/attachment.html>

From cjmce at lsu.edu  Fri Oct  1 15:49:34 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 1 Oct 2010 17:49:34 -0500
Subject: [Proj] NAD 27 v 83 Distances
References: <B597ADFC46B67741B18EA6AA13613FF7026A6542@email002.lsu.edu>
	<8CD2FC1DADA7D28-13A0-D61@webmail-d068.sysops.aol.com>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A6544@email002.lsu.edu>

There were next to no classical triangulation arcs in California as of 1860.  Therefore, the "fit" by COL Clark was really only to the East coast and west to the Lower Mississippi Valley, at best.  The NAVD88 is off only by a couple of centimeters according to the latest geoid models in Louisiana for NAD83/GRS80.  The  best geoid computed on the Clarke 1866 was an astrogeodetic geoid model computed by Dr. Irene Fisher of Army Map Service in the middle 1960s.  Besides which, the NAD27 was off (internal accuracy) by METERS in California - that's why the National Academy of Science recommended we go to a "new" horizontal datum.
 
In regard to "legal," if it's not recognized as a "legal" reference, ... what good is it?
 
Regards,
 
Cliff

________________________________

From: proj-bounces at lists.maptools.org on behalf of strebe at aol.com
Sent: Fri 01-Oct-10 15:53
To: proj at lists.maptools.org
Subject: Re: [Proj] NAD 27 v 83 Distances


Does that follow? Aren't the local datums, with ellipsoids fitted to the local surface, generally more accurate than a single ellipsoid for the entire earth? I've certainly found that vertical coordinates are generally worse on WGS84.

Granted, NAD27 covers a vast region, so perhaps it deviates further from reality than some of the more local datums in use around the world. But without a study computing deviations from the geoid on both, it seems a bit breezy to just claim the newer one is "better" given that its purpose is the best global system rather than the best local system. That fact that NAD83 is the "current legal datum" seems irrelevant to the question of accuracy of real distances.

Obviously not important in the context of the original posting; either surface is a fiction and real distances over real terrain will deviate from either datum far more than distances on the two datums will deviate from each other.

Regards,
- daan Strebe




-----Original Message-----
From: Clifford J Mugnier <cjmce at lsu.edu>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Fri, Oct 1, 2010 12:42 pm
Subject: Re: [Proj] NAD 27 v 83 Distances


Because it is the current legal datum of the United States, and it is based in part on artificial satellite observations.  The semi-major axis of the GRS80 ellipsoid has been proven to be correct within a few centimeters based on decades of observing GPS orbits.
 
NAD27 is referenced to an ellipsoid computed by hand and published by COL Alexander Ross Clark, R.E. in 1866.
 
Since this is a discussion of distances, NAD83 is closest to the truth as a matter of scale and shape.
 
Best regards,
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of strebe at aol.com
Sent: Fri 01-Oct-10 14:26
To: proj at lists.maptools.org
Subject: Re: [Proj] NAD 27 v 83 Distances



>The difference of distances should be modest between the two datums, with of
>course the NAD83 distances being the better of the two. 

Why would NAD83 be the better of the two?

Regards,
- daan Strebe




-----Original Message-----
From: Frank Warmerdam <warmerdam at pobox.com>
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Fri, Oct 1, 2010 9:28 am
Subject: Re: [Proj] NAD 27 v 83 Distances


Robert McFaul wrote:
> Hi,
> 
> I'm concerned about whether ground surface distances are different between
> NAD27 and NAD83. I'm in California (southern) and thinking about a 
> conversion
> of a project to NAD83. I have some cross section distances measured (1000 to
> 3000 feet in length) and suddenly am wondering what sort of differences 
> might
> be involved by this change in systems.

Robert,

The difference of distances should be modest between the two datums, with of
course the NAD83 distances being the better of the two.  I did a test for a
random point in southern california and the change is datum shift deltas over
one kilometer was about 1cm.  You can do similar tests for any area of interest:

cs2cs -f '%.4f' +proj=utm +zone=11 +datum=NAD27 +to +proj=utm +zone=11 
+datum=NAD83
440000 3750000
439919.4833     3750196.3019 0.0000
440000 3751000
439919.4784     3751196.3100 0.0000

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101001/802a2a72/attachment.html>

From strebe at aol.com  Fri Oct  1 17:16:53 2010
From: strebe at aol.com (strebe)
Date: Fri, 01 Oct 2010 17:16:53 -0700
Subject: [Proj] NAD 27 v 83 Distances
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7026A6544@email002.lsu.edu>
Message-ID: <BBC3020B.7FFA.44F6.B4F8.0D2EB49DDCE2@aol.com>


Makes sense. Thanks.

To confirm, WGS84 isn’t necessarily an improvement over any given regional datum; it just happens to be in this case because the Clarke 1866/NAD27 was extended far beyond its original survey. Correct?

A distance is a distance regardless of bureaucratic fiat. A real distance may not hold up in court… but it might make a gravity wave detector work better. The original inquiry came without context.

— daan Strebe


On Oct 1, 2010, at 3:49:34 PM, "Clifford J Mugnier" <cjmce at lsu.edu> wrote:

There were next to no classical triangulation arcs in California as of 1860.  Therefore, the "fit" by COL Clark was really only to the East coast and west to the Lower Mississippi Valley, at best.  The NAVD88 is off only by a couple of centimeters according to the latest geoid models in Louisiana for NAD83/GRS80.  The  best geoid computed on the Clarke 1866 was an astrogeodetic geoid model computed by Dr. Irene Fisher of Army Map Service in the middle 1960s.  Besides which, the NAD27 was off (internal accuracy) by METERS in California - that's why the National Academy of Science recommended we go to a "new" horizontal datum.
 
In regard to "legal," if it's not recognized as a "legal" reference, ... what good is it?
 
Regards,
 
Cliff

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101001/945070df/attachment.html>

From dagnew at ucsd.edu  Fri Oct  1 17:57:45 2010
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Fri, 1 Oct 2010 17:57:45 -0700
Subject: [Proj] NAD 27 v 83 Distances
In-Reply-To: <BBC3020B.7FFA.44F6.B4F8.0D2EB49DDCE2@aol.com>
References: <BBC3020B.7FFA.44F6.B4F8.0D2EB49DDCE2@aol.com>
Message-ID: <921E2800-1016-47C4-8EAD-6421F6E949E5@ucsd.edu>

I'm pretty sure the Clarke ellipsoid was produced without any US data,  
but rather used
various arcs measured in Europe and India. Hayford and Bowie adopted  
it for the US datum much
later, even though Hayford had by then produced his own estimate for  
the ellipsoid--this may
just have been a matter of convenience, since I think it was first  
used in the US in the 1880's.

All moot at this point, anyway.

Duncan Agnew


From mkennedy2 at earthlink.net  Sat Oct  2 09:44:35 2010
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Sat, 2 Oct 2010 09:44:35 -0700 (GMT-07:00)
Subject: [Proj] Proj Digest, Vol 77, Issue 1
Message-ID: <33169375.1286037875836.JavaMail.root@elwamui-little.atl.sa.earthlink.net>




-----Original Message-----
>   1. Web Mercator vs. Web Mercator Auxiliary Sphere (Aaron Friesen)
>----------------------------------------------------------------------
>
>Message: 1
>Date: Fri, 1 Oct 2010 11:34:01 -0400
>From: Aaron Friesen <aaron at cartopac.com>
>Subject: [Proj] Web Mercator vs. Web Mercator Auxiliary Sphere
>To: "proj at lists.maptools.org" <proj at lists.maptools.org>
>Message-ID:
>	<90200BC582E4FF488816D357540C1D4D2271E4D5E1 at VMBX103.ihostexchange.net>
>Content-Type: text/plain; charset="us-ascii"
>
>Curiosity question ...
>
>>From the Proj4 FAQ, for Web Mercator, the setting should be:
>
>+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 \
>                   +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs
>
>I am having to deal with data in "Web Mercator Auxiliary Sphere",
>as apparently defined by ESRI.
>
>The WKT form spatialreference.org is:
>
>PROJCS["WGS_1984_Web_Mercator_Auxiliary_Sphere",
>    GEOGCS["GCS_WGS_1984",
>        DATUM["D_WGS_1984",
>            SPHEROID["WGS_1984",6378137.0,298.257223563]],
>        PRIMEM["Greenwich",0.0],
>        UNIT["Degree",0.0174532925199433]],
>    PROJECTION["Mercator_Auxiliary_Sphere"],
>    PARAMETER["False_Easting",0.0],
>    PARAMETER["False_Northing",0.0],
>    PARAMETER["Central_Meridian",0.0],
>    PARAMETER["Standard_Parallel_1",0.0],
>    PARAMETER["Auxiliary_Sphere_Type",0.0],
>    UNIT["Meter",1.0],
>    AUTHORITY["ESRI","102100"]]
>
>How does the proj4 definition need to change to match?
>
>Is setting b=6356752.314245 sufficient?
>
>Aaron

Hi Aaron, 

No, it doesn't. This definition is just another way of emulating the 
Mercator definition used by the online mapping services. It has to use 
the spherical equations for Mercator. One way is to use a sphere. 
The way Esri has decided to do it to use a special implementation of 
Mercator that has a "auxiliary sphere type" parameter. If zero, and 
the geographic coordinate system is based on an ellipsoid, use the 
semimajor axis for the sphere's radius. 

Going this way means that we can use the 'normal' WGS84, rather than a 
custom sphere and makes datum transformations easier.

Melita

Melita Kennedy
Esri product engineer




From support.mn at elisanet.fi  Sun Oct  3 08:24:16 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sun, 3 Oct 2010 18:24:16 +0300 (EEST)
Subject: [Proj] 4.7.1 bug report
Message-ID: <27970761.5146001286119457669.JavaMail.support.mn@elisanet.fi>

Hello,

I just switched back to version 4.6.0 (21 Dec 2007) which
seems to work correctly. I was testing version 4.7.1 but
it started to produce random (!!??) datums shift errors.
Randomly datum shift returns HUGE_VAL without any
reason for release version - debug version seems to
work better. I did not check any more but switched back
to 4.6.0 which seems to work well all the time.

Reason is so far unknown. 

Regards: Janne.



From neteler at osgeo.org  Sun Oct  3 09:16:50 2010
From: neteler at osgeo.org (Markus Neteler)
Date: Sun, 3 Oct 2010 18:16:50 +0200
Subject: [Proj] 4.7.1 bug report
In-Reply-To: <27970761.5146001286119457669.JavaMail.support.mn@elisanet.fi>
References: <27970761.5146001286119457669.JavaMail.support.mn@elisanet.fi>
Message-ID: <AANLkTi=yab-V4XBNsHCM5g9umeOw-QBdG++wqot2XqyF@mail.gmail.com>

On Sun, Oct 3, 2010 at 5:24 PM,  <support.mn at elisanet.fi> wrote:
> Hello,
>
> I just switched back to version 4.6.0 (21 Dec 2007) which
> seems to work correctly. I was testing version 4.7.1 but
> it started to produce random (!!??) datums shift errors.
> Randomly datum shift returns HUGE_VAL without any
> reason for release version - debug version seems to
> work better. I did not check any more but switched back
> to 4.6.0 which seems to work well all the time.
>
> Reason is so far unknown.

In case that 4.7.1 corresponds to trunk, I can report that it
is broken for GRASS GIS (4.7.0 works). The problem seems
to be the change
 "roll projCtx through various other low level functions"

Consider to try 4.7.0 which is the latest published version.
Maybe trunk is yet in transition.

Markus


From warmerdam at pobox.com  Sun Oct  3 09:22:06 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sun, 03 Oct 2010 12:22:06 -0400
Subject: [Proj] 4.7.1 bug report
In-Reply-To: <AANLkTi=yab-V4XBNsHCM5g9umeOw-QBdG++wqot2XqyF@mail.gmail.com>
References: <27970761.5146001286119457669.JavaMail.support.mn@elisanet.fi>
	<AANLkTi=yab-V4XBNsHCM5g9umeOw-QBdG++wqot2XqyF@mail.gmail.com>
Message-ID: <4CA8ADAE.8080406@pobox.com>

Markus Neteler wrote:
> On Sun, Oct 3, 2010 at 5:24 PM,  <support.mn at elisanet.fi> wrote:
>> Hello,
>>
>> I just switched back to version 4.6.0 (21 Dec 2007) which
>> seems to work correctly. I was testing version 4.7.1 but
>> it started to produce random (!!??) datums shift errors.
>> Randomly datum shift returns HUGE_VAL without any
>> reason for release version - debug version seems to
>> work better. I did not check any more but switched back
>> to 4.6.0 which seems to work well all the time.
>>
>> Reason is so far unknown.
> 
> In case that 4.7.1 corresponds to trunk, I can report that it
> is broken for GRASS GIS (4.7.0 works). The problem seems
> to be the change
>  "roll projCtx through various other low level functions"
> 
> Consider to try 4.7.0 which is the latest published version.
> Maybe trunk is yet in transition.

Markus / Janne,

I am not aware of trunk being broken.  A bug report with something I can
reproduce and fix would be quite helpful.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From neteler at osgeo.org  Sun Oct  3 10:44:18 2010
From: neteler at osgeo.org (Markus Neteler)
Date: Sun, 3 Oct 2010 19:44:18 +0200
Subject: [Proj] 4.7.1 bug report
In-Reply-To: <4CA8ADAE.8080406@pobox.com>
References: <27970761.5146001286119457669.JavaMail.support.mn@elisanet.fi>
	<AANLkTi=yab-V4XBNsHCM5g9umeOw-QBdG++wqot2XqyF@mail.gmail.com>
	<4CA8ADAE.8080406@pobox.com>
Message-ID: <AANLkTikjuh=NHZPoeyb6RbpVRajMhETLcocdNqx8PuMU@mail.gmail.com>

Frank,

On Sun, Oct 3, 2010 at 6:22 PM, Frank Warmerdam <warmerdam at pobox.com> wrote:
> Markus Neteler wrote:
>> On Sun, Oct 3, 2010 at 5:24 PM,  <support.mn at elisanet.fi> wrote:
>>> Hello,
>>>
>>> I just switched back to version 4.6.0 (21 Dec 2007) which
>>> seems to work correctly. I was testing version 4.7.1 but
>>> it started to produce random (!!??) datums shift errors.
>>> Randomly datum shift returns HUGE_VAL without any
>>> reason for release version - debug version seems to
>>> work better. I did not check any more but switched back
>>> to 4.6.0 which seems to work well all the time.
>>>
>>> Reason is so far unknown.
>>
>> In case that 4.7.1 corresponds to trunk, I can report that it
>> is broken for GRASS GIS (4.7.0 works). The problem seems
>> to be the change
>>  "roll projCtx through various other low level functions"
>>
>> Consider to try 4.7.0 which is the latest published version.
>> Maybe trunk is yet in transition.
>
> Markus / Janne,
>
> I am not aware of trunk being broken.  A bug report with something I can
> reproduce and fix would be quite helpful.

I have submitted my observation as
http://trac.osgeo.org/proj/ticket/81

Best regards,
Markus


From support.mn at elisanet.fi  Sun Oct  3 10:46:03 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sun, 3 Oct 2010 20:46:03 +0300 (EEST)
Subject: [Proj] 4.7.1 bug report
Message-ID: <30992982.3388701286127964670.JavaMail.support.mn@elisanet.fi>

Frank,

I am using VC++ 6.0 and higher. I compile everything from
sources. Usually when I have had similar problems where
debug version works and release version not it is due to
the fact that debug version clears all memory before using
it but the release version does not bother. What happens is
that there is some variable that is not probably initialized in
the code. The release version has some garbage in that
variable but the debug version has clean zeros in it (since
it does clear the unused memory). And that is the reason the
debug version works.

Maybe there is some routine that assumes that some variable is
initialized but it actually is not ... this can be on my side or
proj side? But since 4.6.0 works all the way (both versions)...
I am assuming it must be in 4.7.1? Or I am using the
4.7.1 somehow wrong?

Regards: Janne.

--------------------------------

Frank Warmerdam [warmerdam at pobox.com] kirjoitti: 
> Markus Neteler wrote:
> > On Sun, Oct 3, 2010 at 5:24 PM,  <support.mn at elisanet.fi> wrote:
> >> Hello,
> >>
> >> I just switched back to version 4.6.0 (21 Dec 2007) which
> >> seems to work correctly. I was testing version 4.7.1 but
> >> it started to produce random (!!??) datums shift errors.
> >> Randomly datum shift returns HUGE_VAL without any
> >> reason for release version - debug version seems to
> >> work better. I did not check any more but switched back
> >> to 4.6.0 which seems to work well all the time.
> >>
> >> Reason is so far unknown.
> > 
> > In case that 4.7.1 corresponds to trunk, I can report that it
> > is broken for GRASS GIS (4.7.0 works). The problem seems
> > to be the change
> >  "roll projCtx through various other low level functions"
> > 
> > Consider to try 4.7.0 which is the latest published version.
> > Maybe trunk is yet in transition.
> 
> Markus / Janne,
> 
> I am not aware of trunk being broken.  A bug report with something I can
> reproduce and fix would be quite helpful.
> 
> Best regards,
> -- 
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | Geospatial Programmer for Rent
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From support.mn at elisanet.fi  Sun Oct  3 10:59:20 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sun, 3 Oct 2010 20:59:20 +0300 (EEST)
Subject: [Proj] NAD 27 v 83 Distances
Message-ID: <23338732.3389431286128760461.JavaMail.support.mn@elisanet.fi>

Hello,

1) first of all do you need the length of the ellipsoid arc or the length of the straight line?
- arc is always longer than the straight line between two points

2) if you are using the arc, do you adjust for the height difference of the two places?

3) or maybe you use the length of the arc between the points projected on the reference
ellipsoids? or yet the straight line?

etc. etc.

Janne.

------------------------------

Robert McFaul [robert at dgi.com] kirjoitti: 
> Hi,
> 
> I'm concerned about whether ground surface distances are different between
> NAD27 and NAD83. I'm in California (southern) and thinking about a 
> conversion
> of a project to NAD83. I have some cross section distances measured (1000 to
> 3000 feet in length) and suddenly am wondering what sort of differences 
> might
> be involved by this change in systems.
> 
> What can I expect here?
> 
> Thanks.
> 
> robert mcfaul
> robert at dgi.com
> 
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From warmerdam at pobox.com  Sun Oct  3 19:16:53 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sun, 03 Oct 2010 22:16:53 -0400
Subject: [Proj] 4.7.1 bug report
In-Reply-To: <AANLkTikjuh=NHZPoeyb6RbpVRajMhETLcocdNqx8PuMU@mail.gmail.com>
References: <27970761.5146001286119457669.JavaMail.support.mn@elisanet.fi>
	<AANLkTi=yab-V4XBNsHCM5g9umeOw-QBdG++wqot2XqyF@mail.gmail.com>
	<4CA8ADAE.8080406@pobox.com>
	<AANLkTikjuh=NHZPoeyb6RbpVRajMhETLcocdNqx8PuMU@mail.gmail.com>
Message-ID: <4CA93915.3040909@pobox.com>

Markus Neteler wrote:
> I have submitted my observation as
> http://trac.osgeo.org/proj/ticket/81

Markus,

Thanks - I believe I have identified the problem (which only occurred for
me when proj_def.dat could not be found) and fixed it (r1914).

Perhaps you and/or Janne could test the fixed trunk.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From neteler at osgeo.org  Sun Oct  3 23:42:39 2010
From: neteler at osgeo.org (Markus Neteler)
Date: Mon, 4 Oct 2010 08:42:39 +0200
Subject: [Proj] 4.7.1 bug report
In-Reply-To: <4CA93915.3040909@pobox.com>
References: <27970761.5146001286119457669.JavaMail.support.mn@elisanet.fi>
	<AANLkTi=yab-V4XBNsHCM5g9umeOw-QBdG++wqot2XqyF@mail.gmail.com>
	<4CA8ADAE.8080406@pobox.com>
	<AANLkTikjuh=NHZPoeyb6RbpVRajMhETLcocdNqx8PuMU@mail.gmail.com>
	<4CA93915.3040909@pobox.com>
Message-ID: <AANLkTi=apiURHA43P_C3h8Gh5DsE_zwEHu6f+1ezu6BW@mail.gmail.com>

On Mon, Oct 4, 2010 at 4:16 AM, Frank Warmerdam <warmerdam at pobox.com> wrote:
> Markus Neteler wrote:
>> I have submitted my observation as
>> http://trac.osgeo.org/proj/ticket/81
>
> Markus,
>
> Thanks - I believe I have identified the problem (which only occurred for
> me when proj_def.dat could not be found) and fixed it (r1914).
>
> Perhaps you and/or Janne could test the fixed trunk.

Thanks, Frank. trunk recompiled, now trunk looks good again.

Best regards
Markus


From gheysen.t at gmail.com  Mon Oct  4 07:14:36 2010
From: gheysen.t at gmail.com (Thibaut Gheysen)
Date: Mon, 4 Oct 2010 16:14:36 +0200
Subject: [Proj] Stereo 1970 (EPSG 31700)
Message-ID: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com>

Hi,

I have a problem in QGIS with the Stereo 1970 coordinate system (EPSG
31700).
I have a shapefile in the WGS 84 coordinate system (from a GPS device). I
projected this shapefile in Stereo 1970 using ArcMap.
In ArcMap, the source and projected points are in the same place. In Qgis, I
have a deviation of about 100 meters when displaying this 2 shapefiles and
activating the "on the fly projection" (stereo.jpg). This deviation is the
same that the one I obtain in ArcMap without "geographic coordinate system
transformations".

Someone has an idea to solve this problem ?

Thanks in advance,
Thibaut.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101004/97eddc90/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: stereo_70.jpg
Type: image/jpeg
Size: 11868 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101004/97eddc90/attachment.jpg>

From warmerdam at pobox.com  Mon Oct  4 07:33:36 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 04 Oct 2010 10:33:36 -0400
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com>
Message-ID: <4CA9E5C0.90803@pobox.com>

Thibaut Gheysen wrote:
> Hi,
> 
> I have a problem in QGIS with the Stereo 1970 coordinate system (EPSG 
> 31700).
> I have a shapefile in the WGS 84 coordinate system (from a GPS device). 
> I projected this shapefile in Stereo 1970 using ArcMap.
> In ArcMap, the source and projected points are in the same place. In 
> Qgis, I have a deviation of about 100 meters when displaying this 2 
> shapefiles and activating the "on the fly projection" (stereo.jpg). This 
> deviation is the same that the one I obtain in ArcMap without 
> "geographic coordinate system transformations".

Thibault,

I'm not sure exactly what version of PROJ.4 you are using, but after my
"datum shift identification upgrade" the EPSG dictionary for proj now
has this as the suggested definition of 31700:


+proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000 
+ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs

Perhaps you could try with this?

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From gheysen.t at gmail.com  Mon Oct  4 07:55:30 2010
From: gheysen.t at gmail.com (Thibaut Gheysen)
Date: Mon, 4 Oct 2010 16:55:30 +0200
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <4CA9E5C0.90803@pobox.com>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com>
	<4CA9E5C0.90803@pobox.com>
Message-ID: <AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com>

Thanks Frank.
I use QGis 1.5 from osgeo4w (I don't know exactly which version of Proj.4 is
used).
I just try with your suggested definition. It's better but I always have a
deviation of about 5 meters.

Thibaut.

2010/10/4 Frank Warmerdam <warmerdam at pobox.com>

> Thibaut Gheysen wrote:
> > Hi,
> >
> > I have a problem in QGIS with the Stereo 1970 coordinate system (EPSG
> > 31700).
> > I have a shapefile in the WGS 84 coordinate system (from a GPS device).
> > I projected this shapefile in Stereo 1970 using ArcMap.
> > In ArcMap, the source and projected points are in the same place. In
> > Qgis, I have a deviation of about 100 meters when displaying this 2
> > shapefiles and activating the "on the fly projection" (stereo.jpg). This
> > deviation is the same that the one I obtain in ArcMap without
> > "geographic coordinate system transformations".
>
> Thibault,
>
> I'm not sure exactly what version of PROJ.4 you are using, but after my
> "datum shift identification upgrade" the EPSG dictionary for proj now
> has this as the suggested definition of 31700:
>
>
> +proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000
> +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
>
> Perhaps you could try with this?
>
> Best regards,
> --
>
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam,
> warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam<http://pobox.com/%7Ewarmerdam>
> and watch the world go round - Rush    | Geospatial Programmer for Rent
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101004/05101215/attachment.html>

From gheysen.t at gmail.com  Mon Oct  4 08:23:56 2010
From: gheysen.t at gmail.com (Thibaut Gheysen)
Date: Mon, 4 Oct 2010 17:23:56 +0200
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com>
	<4CA9E5C0.90803@pobox.com>
	<AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com>
Message-ID: <AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com>

I checked in Arcmap, there are two "geographic coordinate system
transformations" for stereo 1970 to wgs84. I used the first with those
parameters : +towgs84=44.107,-116.147,-54.648,0,0,0,0. The suggested proj.4
definition correspond to the second "geographic coordinate system
transformations" in ArcMap.

All is fine now.

Thanks for your help,
Thibaut.

2010/10/4 Thibaut Gheysen <gheysen.t at gmail.com>

> Thanks Frank.
> I use QGis 1.5 from osgeo4w (I don't know exactly which version of Proj.4
> is used).
> I just try with your suggested definition. It's better but I always have a
> deviation of about 5 meters.
>
> Thibaut.
>
> 2010/10/4 Frank Warmerdam <warmerdam at pobox.com>
>
> Thibaut Gheysen wrote:
>> > Hi,
>> >
>> > I have a problem in QGIS with the Stereo 1970 coordinate system (EPSG
>> > 31700).
>> > I have a shapefile in the WGS 84 coordinate system (from a GPS device).
>> > I projected this shapefile in Stereo 1970 using ArcMap.
>> > In ArcMap, the source and projected points are in the same place. In
>> > Qgis, I have a deviation of about 100 meters when displaying this 2
>> > shapefiles and activating the "on the fly projection" (stereo.jpg). This
>> > deviation is the same that the one I obtain in ArcMap without
>> > "geographic coordinate system transformations".
>>
>> Thibault,
>>
>> I'm not sure exactly what version of PROJ.4 you are using, but after my
>> "datum shift identification upgrade" the EPSG dictionary for proj now
>> has this as the suggested definition of 31700:
>>
>>
>> +proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000
>> +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
>>
>> Perhaps you could try with this?
>>
>> Best regards,
>> --
>>
>> ---------------------------------------+--------------------------------------
>> I set the clouds in motion - turn up   | Frank Warmerdam,
>> warmerdam at pobox.com
>> light and sound - activate the windows | http://pobox.com/~warmerdam<http://pobox.com/%7Ewarmerdam>
>> and watch the world go round - Rush    | Geospatial Programmer for Rent
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101004/fb8eeb90/attachment.html>

From vivesraf at gmail.com  Tue Oct  5 14:59:05 2010
From: vivesraf at gmail.com (R.Vives)
Date: Tue, 5 Oct 2010 14:59:05 -0700 (PDT)
Subject: [Proj] Using EPSG codes with cs2cs
Message-ID: <1286315945845-5605047.post@n2.nabble.com>


Hello,

Is it possible to use EPSG codes with cs2cs? I tried the following command:

"cs2cs +init=epsg:4326 +to +init=epsg:32632"

but it didn't work, i only get this message:

"Using from definition: init=epsg:4326
Rel. 4.7.1, 23 September 2009
<cs2cs>:
projection initialization failure
cause: Unknown error
program abnormally terminated"

Regards

Rafael
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Using-EPSG-codes-with-cs2cs-tp5605047p5605047.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From warmerdam at pobox.com  Tue Oct  5 15:28:06 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 05 Oct 2010 18:28:06 -0400
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <1286315945845-5605047.post@n2.nabble.com>
References: <1286315945845-5605047.post@n2.nabble.com>
Message-ID: <4CABA676.5010600@pobox.com>

R.Vives wrote:
> Hello,
> 
> Is it possible to use EPSG codes with cs2cs? I tried the following command:
> 
> "cs2cs +init=epsg:4326 +to +init=epsg:32632"
> 
> but it didn't work, i only get this message:
> 
> "Using from definition: init=epsg:4326
> Rel. 4.7.1, 23 September 2009
> <cs2cs>:
> projection initialization failure
> cause: Unknown error
> program abnormally terminated"

Rafael,

It works for me!

Perhaps the epsg init file isn't being found, or your lacks code 32632?

Try setting the PROJ_DEBUG environment variable to the value "5" and running
again to see all files accessed.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From vivesraf at gmail.com  Tue Oct  5 16:05:43 2010
From: vivesraf at gmail.com (R.Vives)
Date: Tue, 5 Oct 2010 16:05:43 -0700 (PDT)
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <4CABA676.5010600@pobox.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
Message-ID: <1286319943944-5605212.post@n2.nabble.com>


Thank you for your quick answer,

Where do you modify the PROJ_DEBUG environment variable? (I am a beginner
with the PROJ.4 library)
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Using-EPSG-codes-with-cs2cs-tp5605047p5605212.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From warmerdam at pobox.com  Tue Oct  5 16:19:49 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 05 Oct 2010 19:19:49 -0400
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <1286319943944-5605212.post@n2.nabble.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com> <1286319943944-5605212.post@n2.nabble.com>
Message-ID: <4CABB295.4030408@pobox.com>

R.Vives wrote:
> Thank you for your quick answer,
> 
> Where do you modify the PROJ_DEBUG environment variable? (I am a beginner
> with the PROJ.4 library)

Rafael,

It is an environment variable.  It depends on your operating system
environment.

For a Windows cmd.exe command shell do:

   set PROJ_DEBUG=5
   cs2cs.exe ...

For unix with a bourne style shell use export:

   export PROJ_DEBUG=5
   cs2cs ...

For unix with a c shell use setenv:

   setenv PROJ_DEBUG 5
   cs2cs ...

Unfortunately you gave no clue to your operating system or I would have
provided an example in my first reply.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From vivesraf at gmail.com  Tue Oct  5 16:37:18 2010
From: vivesraf at gmail.com (R.Vives)
Date: Tue, 5 Oct 2010 16:37:18 -0700 (PDT)
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <4CABB295.4030408@pobox.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>
Message-ID: <1286321838437-5605271.post@n2.nabble.com>


Sorry, I should have tell you, I work on Windows XP.

I managed to modify the environment variable just like you said and when I
enter my command

I have the following new message: "pj_open_lib(epsg): call
fopen(C:PROJSHARE\epsg) - failed"

"C:\gdal_ogr>cs2cs +init=epsg:4326 +to +init=epsg:32632
pj_open_lib(epsg): call fopen(C:PROJSHARE\epsg) - failed
Using from definition: init=epsg:4326
Rel. 4.7.1, 23 September 2009
<cs2cs>:
projection initialization failure
cause: Unknown error
program abnormally terminated"

In fact, I don't have any PROJSHARE folder on C:, so I guess this is what is
wrong.

Regards,

Rafael 
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Using-EPSG-codes-with-cs2cs-tp5605047p5605271.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From warmerdam at pobox.com  Tue Oct  5 17:06:42 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 05 Oct 2010 20:06:42 -0400
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <1286321838437-5605271.post@n2.nabble.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com> <1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com> <1286321838437-5605271.post@n2.nabble.com>
Message-ID: <4CABBD92.4060302@pobox.com>

R.Vives wrote:
> Sorry, I should have tell you, I work on Windows XP.
> 
> I managed to modify the environment variable just like you said and when I
> enter my command
> 
> I have the following new message: "pj_open_lib(epsg): call
> fopen(C:PROJSHARE\epsg) - failed"
> 
> "C:\gdal_ogr>cs2cs +init=epsg:4326 +to +init=epsg:32632
> pj_open_lib(epsg): call fopen(C:PROJSHARE\epsg) - failed
> Using from definition: init=epsg:4326
> Rel. 4.7.1, 23 September 2009
> <cs2cs>:
> projection initialization failure
> cause: Unknown error
> program abnormally terminated"
> 
> In fact, I don't have any PROJSHARE folder on C:, so I guess this is what is
> wrong.

Rafael,

I'm not sure where you got your cs2cs.exe binary, but hopefully that also
came with the "epsg" file somewhere in the tree.  If you set the PROJ_LIB
environment variable to point to the directory containing the epsg init
file then things will hopefully work.

eg.

set PROJ_LIB=C:\PROJ\NAD
cs2cs.exe ...

If you need to you can grab a recent epsg init file from:

   http://svn.osgeo.org/metacrs/proj/trunk/proj/nad/epsg

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From vivesraf at gmail.com  Tue Oct  5 17:28:41 2010
From: vivesraf at gmail.com (R.Vives)
Date: Tue, 5 Oct 2010 17:28:41 -0700 (PDT)
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <4CABBD92.4060302@pobox.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>
	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>
Message-ID: <1286324921251-5605366.post@n2.nabble.com>


Problem solved!

I specified the path to my 'gdal_ogr' folder (where are located cs2cs.exe
and the epsg file).

set PROJ_LIB=C:\gdal_ogr

Then I typed my command again:

C:\gdal_ogr>cs2cs +init=epsg:4326 +to +init=epsg:32632
pj_open_lib(epsg): call fopen(C:\gdal_ogr\epsg) - succeeded
pj_open_lib(epsg): call fopen(C:\gdal_ogr\epsg) - succeeded
45.0 10.0
4714852.20      1361287.34 0.00

It works!!! 

Thank you very much, 
Best regards.

Rafael


-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/Using-EPSG-codes-with-cs2cs-tp5605047p5605366.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From Mikael.Rittri at carmenta.com  Wed Oct  6 00:38:49 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 6 Oct 2010 07:38:49 +0000
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com>
	<4CA9E5C0.90803@pobox.com>
	<AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com>
	<AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se>

Hello, Thibaut.

For the record, www.epsg-registry.org gives three datum shifts 
from Pulkovo 1942(58) to WGS84 that are valid in Romania.

Code	 Accuracy	Source		Proj.4 syntax
15496	10 meters	Shell SIEP		+towgs84=44.107,-116.147,-54.648
15497	 7 meters	NIMA TR8350.2	+towgs84=28,-121,-77
15995	 3 meters	www.ancpi.ro (*)	+towgs84=2.329,-147.042,-92.08,-0.309,0.325,0.497,5.69
			(*) National Agency for Cadastre and Land Registration

The third one seems to be more accurate than the two you
mentioned. Of course, this may not matter if your main 
concern is to get ArcMap and Qgis to agree.

Actually, it is possible that the Shell datum shift is 
more accurate than the NIMA one, since accuracies that EPSG
quotes from different sources are not comparable.  I think
accuracies from NIMA are usually one-sigma (about 67 percent 
confidence), but I don't know about Shell.  But my impression 
is that the ANCPI datum shift is the most accurate.

By the way, I noticed that the code EPSG:31700 is deprecated, 
because it used the the geodetic datum Dealul Piscului 1970, 
EPSG:6317.  This was deprecated in September 2008 because 

   "Datum does not exist but is an alias for S-42 in Romania" (Change ID 2008.011). 

And S-42 is (in this context) the same as Pulkovo 1942(58). 
So, EPSG:31700 has been replaced by EPSG:3844, "Pulkovo 1942(58) / Stereo70".

Best regards,

Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com

________________________________

From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Thibaut Gheysen
Sent: den 4 oktober 2010 17:24
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)


I checked in Arcmap, there are two "geographic coordinate system transformations" for stereo 1970 to wgs84. I used the first with those parameters : +towgs84=44.107,-116.147,-54.648,0,0,0,0. The suggested proj.4 definition correspond to the second "geographic coordinate system transformations" in ArcMap.

All is fine now.

Thanks for your help,
Thibaut.


2010/10/4 Thibaut Gheysen <gheysen.t at gmail.com>


	Thanks Frank.
	I use QGis 1.5 from osgeo4w (I don't know exactly which version of Proj.4 is used).
	I just try with your suggested definition. It's better but I always have a deviation of about 5 meters.
	
	Thibaut.
	
	
	2010/10/4 Frank Warmerdam <warmerdam at pobox.com> 


		Thibaut Gheysen wrote:
		> Hi,
		>
		> I have a problem in QGIS with the Stereo 1970 coordinate system (EPSG
		> 31700).
		> I have a shapefile in the WGS 84 coordinate system (from a GPS device).
		> I projected this shapefile in Stereo 1970 using ArcMap.
		> In ArcMap, the source and projected points are in the same place. In
		> Qgis, I have a deviation of about 100 meters when displaying this 2
		> shapefiles and activating the "on the fly projection" (stereo.jpg). This
		> deviation is the same that the one I obtain in ArcMap without
		> "geographic coordinate system transformations".
		
		
		Thibault,
		
		I'm not sure exactly what version of PROJ.4 you are using, but after my
		"datum shift identification upgrade" the EPSG dictionary for proj now
		has this as the suggested definition of 31700:
		
		
		+proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000
		+ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
		
		Perhaps you could try with this?
		
		Best regards,
		--
		---------------------------------------+--------------------------------------
		I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
		light and sound - activate the windows | http://pobox.com/~warmerdam <http://pobox.com/%7Ewarmerdam> 
		and watch the world go round - Rush    | Geospatial Programmer for Rent
		
		_______________________________________________
		Proj mailing list
		Proj at lists.maptools.org
		http://lists.maptools.org/mailman/listinfo/proj
		





From ndzinn at comcast.net  Wed Oct  6 07:47:29 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Wed, 6 Oct 2010 09:47:29 -0500
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com>
	<E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se>
Message-ID: <643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC>

Although the third of the three EPSG transformations cited herein has the 
(Romanian) National Agency for Cadastre and Land Registration as its source 
(and is, therefore, authoritative) and it has more parameters (7 versus 3 
for the Shell and NIMA transformations), it should not be regarded as more 
accurate.  The least-squares adjustment of 7 transformation parameters (3 
translations, 3 rotations and a scale) for an area as small as the country 
of Romania is badly ill-conditioned.  The 7 parameters are highly correlated 
and, therefore, are driven by small survey errors, not physical reality. 
Simply stated, the translations pull in one direction and the rotations in 
another.  Australia is big enough, but not Romania.  Not even Germany.  In 
these cases use a 3-parameter transformation instead.  Or a 
Molodensky-Badekas transformation ... as has become common in some smaller 
countries (e.g. Luxembourg, Venezuela) ... if you can find (or derive) one.

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Wednesday, October 06, 2010 2:38 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)

> Hello, Thibaut.
>
> For the record, www.epsg-registry.org gives three datum shifts
> from Pulkovo 1942(58) to WGS84 that are valid in Romania.
>
> Code Accuracy Source Proj.4 syntax
> 15496 10 meters Shell SIEP +towgs84=44.107,-116.147,-54.648
> 15497 7 meters NIMA TR8350.2 +towgs84=28,-121,-77
> 15995 3 meters www.ancpi.ro (*) 
> +towgs84=2.329,-147.042,-92.08,-0.309,0.325,0.497,5.69
> (*) National Agency for Cadastre and Land Registration
>
> The third one seems to be more accurate than the two you
> mentioned. Of course, this may not matter if your main
> concern is to get ArcMap and Qgis to agree.
>
> Actually, it is possible that the Shell datum shift is
> more accurate than the NIMA one, since accuracies that EPSG
> quotes from different sources are not comparable.  I think
> accuracies from NIMA are usually one-sigma (about 67 percent
> confidence), but I don't know about Shell.  But my impression
> is that the ANCPI datum shift is the most accurate.
>
> By the way, I noticed that the code EPSG:31700 is deprecated,
> because it used the the geodetic datum Dealul Piscului 1970,
> EPSG:6317.  This was deprecated in September 2008 because
>
>   "Datum does not exist but is an alias for S-42 in Romania" (Change ID 
> 2008.011).
>
> And S-42 is (in this context) the same as Pulkovo 1942(58).
> So, EPSG:31700 has been replaced by EPSG:3844, "Pulkovo 1942(58) / 
> Stereo70".
>
> Best regards,
>
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> ________________________________
>
> From: proj-bounces at lists.maptools.org 
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Thibaut Gheysen
> Sent: den 4 oktober 2010 17:24
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
>
> I checked in Arcmap, there are two "geographic coordinate system 
> transformations" for stereo 1970 to wgs84. I used the first with those 
> parameters : +towgs84=44.107,-116.147,-54.648,0,0,0,0. The suggested 
> proj.4 definition correspond to the second "geographic coordinate system 
> transformations" in ArcMap.
>
> All is fine now.
>
> Thanks for your help,
> Thibaut.
>
>
> 2010/10/4 Thibaut Gheysen <gheysen.t at gmail.com>
>
>
> Thanks Frank.
> I use QGis 1.5 from osgeo4w (I don't know exactly which version of Proj.4 
> is used).
> I just try with your suggested definition. It's better but I always have a 
> deviation of about 5 meters.
>
> Thibaut.
>
>
> 2010/10/4 Frank Warmerdam <warmerdam at pobox.com>
>
>
> Thibaut Gheysen wrote:
> > Hi,
> >
> > I have a problem in QGIS with the Stereo 1970 coordinate system (EPSG
> > 31700).
> > I have a shapefile in the WGS 84 coordinate system (from a GPS device).
> > I projected this shapefile in Stereo 1970 using ArcMap.
> > In ArcMap, the source and projected points are in the same place. In
> > Qgis, I have a deviation of about 100 meters when displaying this 2
> > shapefiles and activating the "on the fly projection" (stereo.jpg). This
> > deviation is the same that the one I obtain in ArcMap without
> > "geographic coordinate system transformations".
>
>
> Thibault,
>
> I'm not sure exactly what version of PROJ.4 you are using, but after my
> "datum shift identification upgrade" the EPSG dictionary for proj now
> has this as the suggested definition of 31700:
>
>
> +proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000
> +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
>
> Perhaps you could try with this?
>
> Best regards,
> --
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, 
> warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam 
> <http://pobox.com/%7Ewarmerdam>
> and watch the world go round - Rush    | Geospatial Programmer for Rent
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Thu Oct  7 00:13:10 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Thu, 7 Oct 2010 07:13:10 +0000
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com>
	<E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se>
	<643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se>

Hello Noel,

> The least-squares adjustment of 7 transformation parameters 
> (3 translations, 3 rotations and a scale) for an area as 
> small as the country of Romania is badly ill-conditioned. 

Now I am confused.

What you say is that it is a difficult statistical problem
to derive a 7-parameter transformation from observations in
a small area. But if someone I can trust has already derived
a 7-parameter transformation, then there is no numerical 
problems when using it, is there? 

> In these cases use a 3-parameter transformation instead.  
> Or a Molodensky-Badekas transformation ... as has become 
> common in some smaller countries (e.g. Luxembourg, Venezuela) 
> ... if you can find (or derive) one.

Well, but if a Molodensky-Badekas transformation is okay, 
then there is always a 7-parameter transformation that gives
the same result.  For all I know, the Romanian authorities
may have started out by deriving a Molodensky-Badekas 
transformation, and then decided to publish it as the 
equivalent 7-parameter transformation.  If that is what
they did, there would be no reason to suspect that their
transformation is less accurate than the 3-parameter 
transformations, is there? 

(An example: the datum shift EPSG:4829, "S-JTSK to ETRS89 (3)",
 is a Molodensky-Badekas transformation, and the datum 
 shift EPSG:4827, "S-JTSK to ETRS89 (4)", is the same 
 transformation expressed as a 7-parameter transformation.)

Best regards,

Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
Sent: den 6 oktober 2010 16:47
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)

Although the third of the three EPSG transformations cited herein has the
(Romanian) National Agency for Cadastre and Land Registration as its source (and is, therefore, authoritative) and it has more parameters (7 versus 3 for the Shell and NIMA transformations), it should not be regarded as more accurate.  The least-squares adjustment of 7 transformation parameters (3 translations, 3 rotations and a scale) for an area as small as the country of Romania is badly ill-conditioned.  The 7 parameters are highly correlated and, therefore, are driven by small survey errors, not physical reality. 
Simply stated, the translations pull in one direction and the rotations in another.  Australia is big enough, but not Romania.  Not even Germany.  In these cases use a 3-parameter transformation instead.  Or a Molodensky-Badekas transformation ... as has become common in some smaller countries (e.g. Luxembourg, Venezuela) ... if you can find (or derive) one.

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Wednesday, October 06, 2010 2:38 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)

> Hello, Thibaut.
>
> For the record, www.epsg-registry.org gives three datum shifts from 
> Pulkovo 1942(58) to WGS84 that are valid in Romania.
>
> Code Accuracy Source Proj.4 syntax
> 15496 10 meters Shell SIEP +towgs84=44.107,-116.147,-54.648
> 15497 7 meters NIMA TR8350.2 +towgs84=28,-121,-77
> 15995 3 meters www.ancpi.ro (*)
> +towgs84=2.329,-147.042,-92.08,-0.309,0.325,0.497,5.69
> (*) National Agency for Cadastre and Land Registration
>
> The third one seems to be more accurate than the two you mentioned. Of 
> course, this may not matter if your main concern is to get ArcMap and 
> Qgis to agree.
>
> Actually, it is possible that the Shell datum shift is more accurate 
> than the NIMA one, since accuracies that EPSG quotes from different 
> sources are not comparable.  I think accuracies from NIMA are usually 
> one-sigma (about 67 percent confidence), but I don't know about Shell.  
> But my impression is that the ANCPI datum shift is the most accurate.
>
> By the way, I noticed that the code EPSG:31700 is deprecated, because 
> it used the the geodetic datum Dealul Piscului 1970, EPSG:6317.  This 
> was deprecated in September 2008 because
>
>   "Datum does not exist but is an alias for S-42 in Romania" (Change 
> ID 2008.011).
>
> And S-42 is (in this context) the same as Pulkovo 1942(58).
> So, EPSG:31700 has been replaced by EPSG:3844, "Pulkovo 1942(58) / 
> Stereo70".
>
> Best regards,
>
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> ________________________________
>
> From: proj-bounces at lists.maptools.org 
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Thibaut Gheysen
> Sent: den 4 oktober 2010 17:24
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
>
> I checked in Arcmap, there are two "geographic coordinate system 
> transformations" for stereo 1970 to wgs84. I used the first with those 
> parameters : +towgs84=44.107,-116.147,-54.648,0,0,0,0. The suggested
> proj.4 definition correspond to the second "geographic coordinate 
> system transformations" in ArcMap.
>
> All is fine now.
>
> Thanks for your help,
> Thibaut.
>
>
> 2010/10/4 Thibaut Gheysen <gheysen.t at gmail.com>
>
>
> Thanks Frank.
> I use QGis 1.5 from osgeo4w (I don't know exactly which version of 
> Proj.4 is used).
> I just try with your suggested definition. It's better but I always 
> have a deviation of about 5 meters.
>
> Thibaut.
>
>
> 2010/10/4 Frank Warmerdam <warmerdam at pobox.com>
>
>
> Thibaut Gheysen wrote:
> > Hi,
> >
> > I have a problem in QGIS with the Stereo 1970 coordinate system 
> > (EPSG 31700).
> > I have a shapefile in the WGS 84 coordinate system (from a GPS device).
> > I projected this shapefile in Stereo 1970 using ArcMap.
> > In ArcMap, the source and projected points are in the same place. In 
> > Qgis, I have a deviation of about 100 meters when displaying this 2 
> > shapefiles and activating the "on the fly projection" (stereo.jpg). 
> > This deviation is the same that the one I obtain in ArcMap without 
> > "geographic coordinate system transformations".
>
>
> Thibault,
>
> I'm not sure exactly what version of PROJ.4 you are using, but after 
> my "datum shift identification upgrade" the EPSG dictionary for proj 
> now has this as the suggested definition of 31700:
>
>
> +proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000 
> +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
>
> Perhaps you could try with this?
>
> Best regards,
> --
> ---------------------------------------+------------------------------
> ---------------------------------------+--------
> I set the clouds in motion - turn up   | Frank Warmerdam, 
> warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam 
> <http://pobox.com/%7Ewarmerdam>
> and watch the world go round - Rush    | Geospatial Programmer for Rent
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From ndzinn at comcast.net  Thu Oct  7 03:17:12 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Thu, 7 Oct 2010 05:17:12 -0500
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com><E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se><643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC>
	<E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se>
Message-ID: <09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC>

Hi Mikael,

It is true that there is no numerical problem using a 7-parameter 
transformation derived from observations in a small area, which means, I 
will add, derived poorly.

It is an unfortunate reality that more geodetic software supports 
7-parameter transformations than supports Molodensky-Badekas (M-B) 
transformations, sometimes called 10-parameter transformations due to the 
additional 3 coordinates of the topographic rotation center, but these are 
givens of the adjustment and not additional parameters to be solved for. 
(Perhaps you can advise me if this indictment of geodetic software applies 
to Proj4.)  Anyway, in the example you provide (EPSG Tfm Codes 4827 and 
4829) the Slovakian authorities had this deficiency in mind in supplying a 
7-parameter transformation to replace a M-B transformation.

It may be true (not positive as I haven't tested this) that the coordinate 
results of a given M-B transformation can be reproduced by some 7-parameter 
transformation as you suggest.

The problem with 7-parameter transformations derived in small area is more 
fundamental, however.  The 7 parameters of a 7-parameter (Helmert, 
Bursa-Wolfe, or similarity) transformation have well-known and 
well-documented physical interpretations.  The 3 translations represent the 
relative displacement of the geocenters of the two ellipsoids involved (in 
the ECEF X, Y and Z directions); the 3 rotations represent rotations about 
the X, Y and Z axes; and the scale represents an inflation (or deflation) of 
an ellipsoid (i.e. the linear unit).  These 7 parameters are not like the 
parameters of a multiple regression equation (MRE) of the kind that used to 
be published by the Defense Mapping Agency (DMA, predecessor to NIMA and 
NGA) for transforming datums with more "accuracy" than a 3-parameter 
translation.  Those parameters can be pencil whipped into submission because 
they "mean" nothing.  The 7 parameters of a Helmert (et al) transformation 
mean something and that meaning is badly corrupted by the ill conditioning 
of an adjustment over a small area.

Let me illustrate this point with my own EPSG tfm code examples.  Codes 
15714, 15716, 15718, 15720, 15722, 15724, 15716 and 15728 offer 7-parameter 
transformations from Bogota 1975 to Magna-Sirgas for regions I through VIII 
in Colombia and codes 15730 through 15737 offer M-B parameters for the same 
regions respectively.  Code 1125 offers a 3-parameter translation between 
Bogota 1975 and WGS84, which EPSG regard to be the same as Magna-Sirgas at 
the 1-meter level.  So, the 3 parameters of tfm 1125 provide a 1-meter 
assessment of the geocentric displacement between the International 1924 
ellipsoid of Bogota 1975 and GRS80 of Magna-Sirgas.  Now, observe that these 
same 3 translations (307, 304, -318) are pretty much the same as the first 3 
parameters of all the M-B transformations for the eight regions (tfm codes 
15730 through 15737).  Finally, observe the first 3 parameters of the 
7-parameter transformations for the eight regions (tfm codes 15714, 15716, 
15718, 15720, 15722, 15724, 15716 and 15728).  Shocking, isn't it?  They're 
scattered meaninglessly all over the place, a consequence of the ill 
conditioning of deriving a 7-parameter transformation in an area an eighth 
the size of Colombia.

The derivation of a 7-parameter Helmert (et al) transformation over a small 
area is pencil whipping, not geodesy.  Until all of (y)our software supports 
M-B, use a 3-parameter translation instead!

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Thursday, October 07, 2010 2:13 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)

> Hello Noel,
>
>> The least-squares adjustment of 7 transformation parameters
>> (3 translations, 3 rotations and a scale) for an area as
>> small as the country of Romania is badly ill-conditioned.
>
> Now I am confused.
>
> What you say is that it is a difficult statistical problem
> to derive a 7-parameter transformation from observations in
> a small area. But if someone I can trust has already derived
> a 7-parameter transformation, then there is no numerical
> problems when using it, is there?
>
>> In these cases use a 3-parameter transformation instead.
>> Or a Molodensky-Badekas transformation ... as has become
>> common in some smaller countries (e.g. Luxembourg, Venezuela)
>> ... if you can find (or derive) one.
>
> Well, but if a Molodensky-Badekas transformation is okay,
> then there is always a 7-parameter transformation that gives
> the same result.  For all I know, the Romanian authorities
> may have started out by deriving a Molodensky-Badekas
> transformation, and then decided to publish it as the
> equivalent 7-parameter transformation.  If that is what
> they did, there would be no reason to suspect that their
> transformation is less accurate than the 3-parameter
> transformations, is there?
>
> (An example: the datum shift EPSG:4829, "S-JTSK to ETRS89 (3)",
> is a Molodensky-Badekas transformation, and the datum
> shift EPSG:4827, "S-JTSK to ETRS89 (4)", is the same
> transformation expressed as a 7-parameter transformation.)
>
> Best regards,
>
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org 
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
> Sent: den 6 oktober 2010 16:47
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
> Although the third of the three EPSG transformations cited herein has the
> (Romanian) National Agency for Cadastre and Land Registration as its 
> source (and is, therefore, authoritative) and it has more parameters (7 
> versus 3 for the Shell and NIMA transformations), it should not be 
> regarded as more accurate.  The least-squares adjustment of 7 
> transformation parameters (3 translations, 3 rotations and a scale) for an 
> area as small as the country of Romania is badly ill-conditioned.  The 7 
> parameters are highly correlated and, therefore, are driven by small 
> survey errors, not physical reality.
> Simply stated, the translations pull in one direction and the rotations in 
> another.  Australia is big enough, but not Romania.  Not even Germany.  In 
> these cases use a 3-parameter transformation instead.  Or a 
> Molodensky-Badekas transformation ... as has become common in some smaller 
> countries (e.g. Luxembourg, Venezuela) ... if you can find (or derive) 
> one.
>
> Noel Zinn, Principal, Hydrometronics LLC
> +1-832-539-1472 (office), +1-281-221-0051 (cell)
> noel.zinn at hydrometronics.com (email)
> http://www.hydrometronics.com (website)
>
> --------------------------------------------------
> From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
> Sent: Wednesday, October 06, 2010 2:38 AM
> To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
>> Hello, Thibaut.
>>
>> For the record, www.epsg-registry.org gives three datum shifts from
>> Pulkovo 1942(58) to WGS84 that are valid in Romania.
>>
>> Code Accuracy Source Proj.4 syntax
>> 15496 10 meters Shell SIEP +towgs84=44.107,-116.147,-54.648
>> 15497 7 meters NIMA TR8350.2 +towgs84=28,-121,-77
>> 15995 3 meters www.ancpi.ro (*)
>> +towgs84=2.329,-147.042,-92.08,-0.309,0.325,0.497,5.69
>> (*) National Agency for Cadastre and Land Registration
>>
>> The third one seems to be more accurate than the two you mentioned. Of
>> course, this may not matter if your main concern is to get ArcMap and
>> Qgis to agree.
>>
>> Actually, it is possible that the Shell datum shift is more accurate
>> than the NIMA one, since accuracies that EPSG quotes from different
>> sources are not comparable.  I think accuracies from NIMA are usually
>> one-sigma (about 67 percent confidence), but I don't know about Shell.
>> But my impression is that the ANCPI datum shift is the most accurate.
>>
>> By the way, I noticed that the code EPSG:31700 is deprecated, because
>> it used the the geodetic datum Dealul Piscului 1970, EPSG:6317.  This
>> was deprecated in September 2008 because
>>
>>   "Datum does not exist but is an alias for S-42 in Romania" (Change
>> ID 2008.011).
>>
>> And S-42 is (in this context) the same as Pulkovo 1942(58).
>> So, EPSG:31700 has been replaced by EPSG:3844, "Pulkovo 1942(58) /
>> Stereo70".
>>
>> Best regards,
>>
>> Mikael Rittri
>> Carmenta AB
>> Sweden
>> www.carmenta.com
>>
>> ________________________________
>>
>> From: proj-bounces at lists.maptools.org
>> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Thibaut Gheysen
>> Sent: den 4 oktober 2010 17:24
>> To: PROJ.4 and general Projections Discussions
>> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>>
>>
>> I checked in Arcmap, there are two "geographic coordinate system
>> transformations" for stereo 1970 to wgs84. I used the first with those
>> parameters : +towgs84=44.107,-116.147,-54.648,0,0,0,0. The suggested
>> proj.4 definition correspond to the second "geographic coordinate
>> system transformations" in ArcMap.
>>
>> All is fine now.
>>
>> Thanks for your help,
>> Thibaut.
>>
>>
>> 2010/10/4 Thibaut Gheysen <gheysen.t at gmail.com>
>>
>>
>> Thanks Frank.
>> I use QGis 1.5 from osgeo4w (I don't know exactly which version of
>> Proj.4 is used).
>> I just try with your suggested definition. It's better but I always
>> have a deviation of about 5 meters.
>>
>> Thibaut.
>>
>>
>> 2010/10/4 Frank Warmerdam <warmerdam at pobox.com>
>>
>>
>> Thibaut Gheysen wrote:
>> > Hi,
>> >
>> > I have a problem in QGIS with the Stereo 1970 coordinate system
>> > (EPSG 31700).
>> > I have a shapefile in the WGS 84 coordinate system (from a GPS device).
>> > I projected this shapefile in Stereo 1970 using ArcMap.
>> > In ArcMap, the source and projected points are in the same place. In
>> > Qgis, I have a deviation of about 100 meters when displaying this 2
>> > shapefiles and activating the "on the fly projection" (stereo.jpg).
>> > This deviation is the same that the one I obtain in ArcMap without
>> > "geographic coordinate system transformations".
>>
>>
>> Thibault,
>>
>> I'm not sure exactly what version of PROJ.4 you are using, but after
>> my "datum shift identification upgrade" the EPSG dictionary for proj
>> now has this as the suggested definition of 31700:
>>
>>
>> +proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000
>> +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
>>
>> Perhaps you could try with this?
>>
>> Best regards,
>> --
>> ---------------------------------------+------------------------------
>> ---------------------------------------+--------
>> I set the clouds in motion - turn up   | Frank Warmerdam,
>> warmerdam at pobox.com
>> light and sound - activate the windows | http://pobox.com/~warmerdam
>> <http://pobox.com/%7Ewarmerdam>
>> and watch the world go round - Rush    | Geospatial Programmer for Rent
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>>
>>
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Thu Oct  7 07:46:58 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Thu, 7 Oct 2010 14:46:58 +0000
Subject: [Proj] Stereo 1970 (EPSG 31700)
In-Reply-To: <09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com><E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se><643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC>
	<E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se>
	<09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49F96C@SETHNWS023.carmenta.se>

Hello Noel,

I think you are right in everything you say - except the final conclusion
that 3-parameter transformations are to be preferred if the software
does not support Molodensky-Badekas.

Some specific comments:

> (Perhaps you can advise me if this indictment of geodetic software applies to Proj4.)

Yes, as far as I know, Proj4 (or cs2cs) does not support 10 parameters (M-B parameters)
in the +towgs84 parameter.

> It may be true (not positive as I haven't tested this) that the coordinate
> results of a given M-B transformation can be reproduced by some 7-parameter
> transformation as you suggest.

It was Melita Kennedy who taught me how to translate an M-B transformation
into an equivalent 7-parameter transformation. (Strictly speaking, I haven't
been able to test if I understood everything, since I don't have access to
independent software that supports M-B. But I am pretty confident.)

> ... observe the first 3 parameters of the 7-parameter transformations ...
> Shocking, isn't it?  They're scattered meaninglessly all over the place, ...

Well, let's say it is unfortunate and disappointing, if it is
important to be able to interpret and understand the parameters.

On the other hand, most of my customers just need some kind of black-box
mechanism that can transform long/lat from one datum to another, as
accurately as possible.  (Or as accurately as necessary, perhaps.)
So they don't care if the first 3 parameters are widely different
between 7-parameter transformations for neighbouring regions.

> Until all of (y)our software supports M-B, use a 3-parameter translation instead!

No, that's bad advice. There are plenty of examples for regions that
you say are too small (like medium-sized European countries), where
the best available 3-parameter transformation can give errors greater
than 15 meters, while there are published 7-parameter transformations
that give errors of just a few meters.

Example: transforming the British OSGB 1936 to WGS84:

Best published 3-parameter transformation: EPSG:1195, "OSGB 1936 to WGS 84 (1)".
EPSG Accuracy entry: 21 metre.
EPSG Scope says: "Accuracy 10m, 10m and 15m in X, Y and Z axes."

Best published 7-parameter transformation: EPSG:1314, "OSGB 1936 to WGS 84 (6)".
EPSG Accuracy entry: 2 metre.
EPSG Scope says: "Accuracy better than 4m and generally better than 2m."
(British sources say the worst error is 5 meters.)

There are many applications where a 5-meter error can be acceptable,
while 21 meters or more wouldn't be. (Fleet management, ambulance dispatch...)

So, if my software supports 3-parameter and 7-parameter datum shifts,
but not Molodensky-Badekas (10-parameter) or grid shift files (or if
you don't need the accuracy of a grid shift file), then what?
Surely it is better to get 2 - 4 meter accuracy instead of 21 meters,
even if I cannot interpret or understand the seven parameters at all
(just as long as they give good results).

Best regards,

Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
Sent: den 7 oktober 2010 12:17
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)

Hi Mikael,

It is true that there is no numerical problem using a 7-parameter transformation derived from observations in a small area, which means, I will add, derived poorly.

It is an unfortunate reality that more geodetic software supports 7-parameter transformations than supports Molodensky-Badekas (M-B) transformations, sometimes called 10-parameter transformations due to the additional 3 coordinates of the topographic rotation center, but these are givens of the adjustment and not additional parameters to be solved for.
(Perhaps you can advise me if this indictment of geodetic software applies to Proj4.)  Anyway, in the example you provide (EPSG Tfm Codes 4827 and
4829) the Slovakian authorities had this deficiency in mind in supplying a 7-parameter transformation to replace a M-B transformation.

It may be true (not positive as I haven't tested this) that the coordinate results of a given M-B transformation can be reproduced by some 7-parameter transformation as you suggest.

The problem with 7-parameter transformations derived in small area is more fundamental, however.  The 7 parameters of a 7-parameter (Helmert, Bursa-Wolfe, or similarity) transformation have well-known and well-documented physical interpretations.  The 3 translations represent the relative displacement of the geocenters of the two ellipsoids involved (in the ECEF X, Y and Z directions); the 3 rotations represent rotations about the X, Y and Z axes; and the scale represents an inflation (or deflation) of an ellipsoid (i.e. the linear unit).  These 7 parameters are not like the parameters of a multiple regression equation (MRE) of the kind that used to be published by the Defense Mapping Agency (DMA, predecessor to NIMA and
NGA) for transforming datums with more "accuracy" than a 3-parameter translation.  Those parameters can be pencil whipped into submission because they "mean" nothing.  The 7 parameters of a Helmert (et al) transformation mean something and that meaning is badly corrupted by the ill conditioning of an adjustment over a small area.

Let me illustrate this point with my own EPSG tfm code examples.  Codes 15714, 15716, 15718, 15720, 15722, 15724, 15716 and 15728 offer 7-parameter transformations from Bogota 1975 to Magna-Sirgas for regions I through VIII in Colombia and codes 15730 through 15737 offer M-B parameters for the same regions respectively.  Code 1125 offers a 3-parameter translation between Bogota 1975 and WGS84, which EPSG regard to be the same as Magna-Sirgas at the 1-meter level.  So, the 3 parameters of tfm 1125 provide a 1-meter assessment of the geocentric displacement between the International 1924 ellipsoid of Bogota 1975 and GRS80 of Magna-Sirgas.  Now, observe that these same 3 translations (307, 304, -318) are pretty much the same as the first 3 parameters of all the M-B transformations for the eight regions (tfm codes 15730 through 15737).  Finally, observe the first 3 parameters of the 7-parameter transformations for the eight regions (tfm codes 15714, 15716, 15718, 15720, 15722, 15724, 15716 and 15728).  Shocking, isn't it?  They're scattered meaninglessly all over the place, a consequence of the ill conditioning of deriving a 7-parameter transformation in an area an eighth the size of Colombia.

The derivation of a 7-parameter Helmert (et al) transformation over a small area is pencil whipping, not geodesy.  Until all of (y)our software supports M-B, use a 3-parameter translation instead!

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Thursday, October 07, 2010 2:13 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)

> Hello Noel,
>
>> The least-squares adjustment of 7 transformation parameters
>> (3 translations, 3 rotations and a scale) for an area as small as the
>> country of Romania is badly ill-conditioned.
>
> Now I am confused.
>
> What you say is that it is a difficult statistical problem to derive a
> 7-parameter transformation from observations in a small area. But if
> someone I can trust has already derived a 7-parameter transformation,
> then there is no numerical problems when using it, is there?
>
>> In these cases use a 3-parameter transformation instead.
>> Or a Molodensky-Badekas transformation ... as has become common in
>> some smaller countries (e.g. Luxembourg, Venezuela) ... if you can
>> find (or derive) one.
>
> Well, but if a Molodensky-Badekas transformation is okay, then there
> is always a 7-parameter transformation that gives the same result.
> For all I know, the Romanian authorities may have started out by
> deriving a Molodensky-Badekas transformation, and then decided to
> publish it as the equivalent 7-parameter transformation.  If that is
> what they did, there would be no reason to suspect that their
> transformation is less accurate than the 3-parameter transformations,
> is there?
>
> (An example: the datum shift EPSG:4829, "S-JTSK to ETRS89 (3)", is a
> Molodensky-Badekas transformation, and the datum shift EPSG:4827,
> "S-JTSK to ETRS89 (4)", is the same transformation expressed as a
> 7-parameter transformation.)
>
> Best regards,
>
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
> Sent: den 6 oktober 2010 16:47
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
> Although the third of the three EPSG transformations cited herein has
> the
> (Romanian) National Agency for Cadastre and Land Registration as its
> source (and is, therefore, authoritative) and it has more parameters
> (7 versus 3 for the Shell and NIMA transformations), it should not be
> regarded as more accurate.  The least-squares adjustment of 7
> transformation parameters (3 translations, 3 rotations and a scale)
> for an area as small as the country of Romania is badly
> ill-conditioned.  The 7 parameters are highly correlated and,
> therefore, are driven by small survey errors, not physical reality.
> Simply stated, the translations pull in one direction and the
> rotations in another.  Australia is big enough, but not Romania.  Not
> even Germany.  In these cases use a 3-parameter transformation
> instead.  Or a Molodensky-Badekas transformation ... as has become
> common in some smaller countries (e.g. Luxembourg, Venezuela) ... if
> you can find (or derive) one.
>
> Noel Zinn, Principal, Hydrometronics LLC
> +1-832-539-1472 (office), +1-281-221-0051 (cell)
> noel.zinn at hydrometronics.com (email)
> http://www.hydrometronics.com (website)
>
> --------------------------------------------------
> From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
> Sent: Wednesday, October 06, 2010 2:38 AM
> To: "PROJ.4 and general Projections Discussions"
> <proj at lists.maptools.org>
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
>> Hello, Thibaut.
>>
>> For the record, www.epsg-registry.org gives three datum shifts from
>> Pulkovo 1942(58) to WGS84 that are valid in Romania.
>>
>> Code Accuracy Source Proj.4 syntax
>> 15496 10 meters Shell SIEP +towgs84=44.107,-116.147,-54.648
>> 15497 7 meters NIMA TR8350.2 +towgs84=28,-121,-77
>> 15995 3 meters www.ancpi.ro (*)
>> +towgs84=2.329,-147.042,-92.08,-0.309,0.325,0.497,5.69
>> (*) National Agency for Cadastre and Land Registration
>>
>> The third one seems to be more accurate than the two you mentioned.
>> Of course, this may not matter if your main concern is to get ArcMap
>> and Qgis to agree.
>>
>> Actually, it is possible that the Shell datum shift is more accurate
>> than the NIMA one, since accuracies that EPSG quotes from different
>> sources are not comparable.  I think accuracies from NIMA are usually
>> one-sigma (about 67 percent confidence), but I don't know about Shell.
>> But my impression is that the ANCPI datum shift is the most accurate.
>>
>> By the way, I noticed that the code EPSG:31700 is deprecated, because
>> it used the the geodetic datum Dealul Piscului 1970, EPSG:6317.  This
>> was deprecated in September 2008 because
>>
>>   "Datum does not exist but is an alias for S-42 in Romania" (Change
>> ID 2008.011).
>>
>> And S-42 is (in this context) the same as Pulkovo 1942(58).
>> So, EPSG:31700 has been replaced by EPSG:3844, "Pulkovo 1942(58) /
>> Stereo70".
>>
>> Best regards,
>>
>> Mikael Rittri
>> Carmenta AB
>> Sweden
>> www.carmenta.com
>>
>> ________________________________
>>
>> From: proj-bounces at lists.maptools.org
>> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Thibaut Gheysen
>> Sent: den 4 oktober 2010 17:24
>> To: PROJ.4 and general Projections Discussions
>> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>>
>>
>> I checked in Arcmap, there are two "geographic coordinate system
>> transformations" for stereo 1970 to wgs84. I used the first with
>> those parameters : +towgs84=44.107,-116.147,-54.648,0,0,0,0. The
>> suggested
>> proj.4 definition correspond to the second "geographic coordinate
>> system transformations" in ArcMap.
>>
>> All is fine now.
>>
>> Thanks for your help,
>> Thibaut.
>>
>>
>> 2010/10/4 Thibaut Gheysen <gheysen.t at gmail.com>
>>
>>
>> Thanks Frank.
>> I use QGis 1.5 from osgeo4w (I don't know exactly which version of
>> Proj.4 is used).
>> I just try with your suggested definition. It's better but I always
>> have a deviation of about 5 meters.
>>
>> Thibaut.
>>
>>
>> 2010/10/4 Frank Warmerdam <warmerdam at pobox.com>
>>
>>
>> Thibaut Gheysen wrote:
>> > Hi,
>> >
>> > I have a problem in QGIS with the Stereo 1970 coordinate system
>> > (EPSG 31700).
>> > I have a shapefile in the WGS 84 coordinate system (from a GPS device).
>> > I projected this shapefile in Stereo 1970 using ArcMap.
>> > In ArcMap, the source and projected points are in the same place.
>> > In Qgis, I have a deviation of about 100 meters when displaying
>> > this 2 shapefiles and activating the "on the fly projection" (stereo.jpg).
>> > This deviation is the same that the one I obtain in ArcMap without
>> > "geographic coordinate system transformations".
>>
>>
>> Thibault,
>>
>> I'm not sure exactly what version of PROJ.4 you are using, but after
>> my "datum shift identification upgrade" the EPSG dictionary for proj
>> now has this as the suggested definition of 31700:
>>
>>
>> +proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000
>> +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
>>
>> Perhaps you could try with this?
>>
>> Best regards,
>> --
>> ---------------------------------------+-----------------------------
>> ---------------------------------------+-
>> ---------------------------------------+--------
>> I set the clouds in motion - turn up   | Frank Warmerdam,
>> warmerdam at pobox.com
>> light and sound - activate the windows | http://pobox.com/~warmerdam
>> <http://pobox.com/%7Ewarmerdam>
>> and watch the world go round - Rush    | Geospatial Programmer for Rent
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>>
>>
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From Laurent.Saez at developpement-durable.gouv.fr  Thu Oct  7 09:29:41 2010
From: Laurent.Saez at developpement-durable.gouv.fr (SAEZ Laurent  - SG/SPSSI/CPII/DOM/ETER)
Date: Thu, 07 Oct 2010 18:29:41 +0200
Subject: [Proj] EPSG CS not supported,
	but the epsg file contains the correct definition
Message-ID: <4CADF575.6050401@developpement-durable.gouv.fr>

Hi all,

I have to add support for new CRS in my mapfiles.

New EPSG code, 4559 (Projected CRS for French Antilles - Guadeloupe and 
Martinique) replaces 2989.
The ellipsoide is the only thing different (GRS80 instead of WGS84).

So I add the EPSG:4559 definition in my epsg file.
<4559> +proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m 
+no_defs  <>

I use MapServer 5.6.5 with proj 4.7.0 (on Debian 64bits).

When I call a GetMap using EPSG:4559 the image rendered is "wrong". 
EPSG:4559 and EPSG:2989 are almost identical and the images should be 
approximately similar.
So, I test my EPSG code with testepsg.

If I don't specify the epsg file location ('/opt/mapserver/bin/testepsg' 
EPSG:4559), I have :
"ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is 
this a valid
EPSG coordinate system?
ERROR 1: Error occured translating EPSG:4559."

If I specify the file location ('/opt/mapserver/bin/testepsg' 
'/opt/mapserver/share/proj/epsg' EPSG:4559)  :
"Validate Succeeds.
WKT[/opt/mapserver/share/proj/epsg] =
PROJCS["unnamed",
    GEOGCS["GRS 1980(IUGG, 1980)",
        DATUM["unknown",
            SPHEROID["GRS80",6378137,298.257222101],
            TOWGS84[0,0,0,0,0,0,0]],
        PRIMEM["paris",2.3372291666985],
...
...
...
UNIT["Meter",1],
    PARAMETER["standard_parallel_1",46.8]]
PROJ.4 rendering of [/opt/mapserver/share/proj/epsg] = +proj=lcc 
+lat_1=46.8 +lat_0=46.8 +lon_0=2.33722917 +k_0=0.99987742 +x_0=600000 
+y_0=2200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +pm=2.3372291666985 
+units=m +no_defs

ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is 
this a valid
EPSG coordinate system?
ERROR 1: Error occured translating EPSG:4559."

I use to add EPSG codes in my mapfiles. It's the first time I have this 
problem.

It seems that sometimes it is not sufficient to add a definition in the 
file EPSG...
I have read this thread ("Unsupported SRS but available in epsg file") :
http://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg04926.html

My GDAL_DATA environnement variable is well defined. I tried to add the 
definition in cubewerx_extra.wkt without success.
Any idea ?

I send this message on this list but I can't know what application is at 
issue: GDAL or PROJ?

NB: I apologize for my bad English.






From cjmce at lsu.edu  Thu Oct  7 09:32:44 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Thu, 7 Oct 2010 11:32:44 -0500
Subject: [Proj] EPSG CS not supported,
	but the epsg file contains the correct definition
References: <4CADF575.6050401@developpement-durable.gouv.fr>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A6555@email002.lsu.edu>

The difference between the WGS84 ellipsoid and the GRS80 ellipsoid is less than 0.001 meters, and that is only for the semi-minor axis (b).  Consider them identical for all practical purposes.
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of SAEZ Laurent - SG/SPSSI/CPII/DOM/ETER
Sent: Thu 07-Oct-10 11:29
To: proj at lists.maptools.org
Subject: [Proj] EPSG CS not supported,but the epsg file contains the correct definition



Hi all,

I have to add support for new CRS in my mapfiles.

New EPSG code, 4559 (Projected CRS for French Antilles - Guadeloupe and
Martinique) replaces 2989.
The ellipsoide is the only thing different (GRS80 instead of WGS84).

So I add the EPSG:4559 definition in my epsg file.
<4559> +proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
+no_defs  <>

I use MapServer 5.6.5 with proj 4.7.0 (on Debian 64bits).

When I call a GetMap using EPSG:4559 the image rendered is "wrong".
EPSG:4559 and EPSG:2989 are almost identical and the images should be
approximately similar.
So, I test my EPSG code with testepsg.

If I don't specify the epsg file location ('/opt/mapserver/bin/testepsg'
EPSG:4559), I have :
"ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is
this a valid
EPSG coordinate system?
ERROR 1: Error occured translating EPSG:4559."

If I specify the file location ('/opt/mapserver/bin/testepsg'
'/opt/mapserver/share/proj/epsg' EPSG:4559)  :
"Validate Succeeds.
WKT[/opt/mapserver/share/proj/epsg] =
PROJCS["unnamed",
    GEOGCS["GRS 1980(IUGG, 1980)",
        DATUM["unknown",
            SPHEROID["GRS80",6378137,298.257222101],
            TOWGS84[0,0,0,0,0,0,0]],
        PRIMEM["paris",2.3372291666985],
...
...
...
UNIT["Meter",1],
    PARAMETER["standard_parallel_1",46.8]]
PROJ.4 rendering of [/opt/mapserver/share/proj/epsg] = +proj=lcc
+lat_1=46.8 +lat_0=46.8 +lon_0=2.33722917 +k_0=0.99987742 +x_0=600000
+y_0=2200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +pm=2.3372291666985
+units=m +no_defs

ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is
this a valid
EPSG coordinate system?
ERROR 1: Error occured translating EPSG:4559."

I use to add EPSG codes in my mapfiles. It's the first time I have this
problem.

It seems that sometimes it is not sufficient to add a definition in the
file EPSG...
I have read this thread ("Unsupported SRS but available in epsg file") :
http://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg04926.html

My GDAL_DATA environnement variable is well defined. I tried to add the
definition in cubewerx_extra.wkt without success.
Any idea ?

I send this message on this list but I can't know what application is at
issue: GDAL or PROJ?

NB: I apologize for my bad English.




_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101007/dcdc60e1/attachment.html>

From warmerdam at pobox.com  Thu Oct  7 09:49:51 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 07 Oct 2010 12:49:51 -0400
Subject: [Proj] EPSG CS not supported,
 but the epsg file contains the correct definition
In-Reply-To: <4CADF575.6050401@developpement-durable.gouv.fr>
References: <4CADF575.6050401@developpement-durable.gouv.fr>
Message-ID: <4CADFA2F.6060302@pobox.com>

SAEZ Laurent - SG/SPSSI/CPII/DOM/ETER wrote:
> When I call a GetMap using EPSG:4559 the image rendered is "wrong". 
> EPSG:4559 and EPSG:2989 are almost identical and the images should be 
> approximately similar.
> So, I test my EPSG code with testepsg.
> 
> If I don't specify the epsg file location ('/opt/mapserver/bin/testepsg' 
> EPSG:4559), I have :
> "ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is 
> this a valid
> EPSG coordinate system?

Laurent,

PROJ.4 looks up epsg definitions from the epsg init file.

GDAL normally looks them up in the gcs.csv and pcs.csv files
though it does have fallback logic to look in the PROJ.4 epsg
init file.  So the error you see is "testepsg" (from GDAL) not
finding the coordinate system in the pcs.csv file and not able
to find the epsg init file because it is in an usual place.

> It seems that sometimes it is not sufficient to add a definition in the 
> file EPSG...
> I have read this thread ("Unsupported SRS but available in epsg file") :
> http://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg04926.html
> 
> My GDAL_DATA environnement variable is well defined. I tried to add the 
> definition in cubewerx_extra.wkt without success.
> Any idea ?
> 
> I send this message on this list but I can't know what application is at 
> issue: GDAL or PROJ?

At the start you mentioned that the GetMap result is wrong. How wrong is it?
Just off by a bit or things in completely unrelated places or missing?

Mostly MapServer uses the PROJ.4 epsg init file, so I'm surprised your
change didn't work.  There are a few places that might actually ask
GDAL/OGR for the definition in which case it would be important either
for GDAL/OGR to also be able to find the epsg init file, or for you to
add the definitions to pcs.csv and gcs.csv which might be messy.  I'm
not sure what is going wrong.

To give you the option, the pcs.csv and gcs.csv definitions are:

pcs.csv
4559,"RRAF 1991 / UTM zone 
20N",9001,4558,16020,9807,1,0,4400,8801,0,9102,8802,-63,9102,8805,0.9996,9201,8806,500000,9001,8807,0,9001,,,,,,

gcs.csv
4558,RRAF 1991,1047,Reseau de Reference des Antilles Francaises 
1991,1047,9122,7019,8901,1,0,6422,4560,0,9603,0,0,0,,,,

the latest gcs.csv and pcs.csv files from GDAL trunk have these
and should be safe to superinpose on older versions of GDAL.

   http://svn.osgeo.org/gdal/trunk/gdal/data

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From ndzinn at comcast.net  Thu Oct  7 20:26:55 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Thu, 7 Oct 2010 22:26:55 -0500
Subject: [Proj] Transformations in small areas - was Stereo 1970 (EPSG 31700)
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49F96C@SETHNWS023.carmenta.se>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com><E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se><643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se><09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC>
	<E4AB3DD44D22854B819908379DE4AD49F96C@SETHNWS023.carmenta.se>
Message-ID: <3BA2D908A1B64E00A5335A87EB76C854@NoelHmPC>

Thanks, Mikael.  I appreciate the exchange.

It may be useful to identify our different perspectives on this topic and to 
put some error bars around the term "accuracy".  Perspective and accuracy 
are "apples and oranges" issues, but they inextricably impact the 
discussion.

Although you are a software developer, your perspective seems to be that of 
the consumer seeking a "black-box mechanism that can transform long/lat from 
one datum to another, as accurately as possible".  You provide that to your 
customer (the consumer).  My perspective has been that of a deriver of datum 
transformations in (small) oil exploration frontiers throughout the world, 
e.g. the offshore lease blocks of some West African country.  Having the 
means to derive 3-, 7- or 10-parameter transformations, my choice was always 
a 3-parameter translation.  Why?  Because software support for M-B is 
regrettably scarce (a situation that you and Proj.4 can improve upon), and 
because 7-parameter derivations in small frontiers are ill conditioned (my 
thesis), and also because users all too frequently get the signs of the 
rotations in a 7-parameter transformation wrong, and, finally, because 
7-parameter transformations are no more "accurate" in a small area than a 
3-parameter translation derived from the same data set.

I gracefully accept that, from your consumer perspective, my advice to use 
3-parameter translations in a small area may seem "bad".  After all, why not 
use a 7-parameter transformation in a small area if you've got one, 
especially if it's from an authoritative source?  But from my deriver's 
perspective - and as an advocate of sound geodetic practice - it's the only 
responsible position to take and I don't recant.

Regarding accuracy options, you cite a couple of Great Britain OSGB 1936 to 
WGS84 transformations, namely tfm code 1195 (3 parameters) by the DMA good 
to 21 meters over 38 points, a remarkably large number for the DMA, but 
dating to 1987 which is effectively pre-GPS (lots of Doppler error there), 
and 1314 (7 parameters) of uncertain derivation for "oil exploration" but 
cited by UKOOA and Eurographics, and reportedly good to 2 or 4 or 5 meters. 
You've not cited tfm code 1039, derived by the Ordnance Survey of Great 
Britain itself, providing 0.1 meters between OSGB 1936 and ETRS89, which is 
WGS84 to less than a meter and the transformation one should be using if one 
is interested in accuracy, but it's a grid interpolation.

I assert that a 7-parameter transformation derived in a small area is no 
more accurate than a 3-parameter translation derived from the same data set. 
Because the conventional wisdom is just the opposite we have too many bad 
7-parameter transformations and too few good 3-parameter translations.  Not 
good geodetic practice in my opinion.  Tfm Code 1039 provides us the 
opportunity to test my assertion if you're interested.  "Small" can be 
defined quantitatively based on the dilution of precision of the 7-parameter 
adjustment, but let's just accept that the United Kingdom is small for our 
purposes.  Using 1039 we can populate some number of randomly distributed 
points throughout the UK in both OSGB 1936 and a WGS84 surrogate (ETRS89) to 
within 0.1 meters per point.  Then we need a bit of random error for both 
OSGB 1936 and WGS84 in amounts to be determined, 1039 having removed the 
systematic errors (datum distortions).  This "noise" is important for the 
propagation of random error to the derived parameters.  These points become 
our truth data.  Given this design it's then just mechanics to derive 3- and 
7-parameter transformations, back compute one datum from the other, and test 
my assertion.  We can also compare our derived transformations with Tfms 
Codes 1195 and 1314.  The exercise can be repeated with different random 
noise (in the same quantities) to test the stability of the derived 
parameters.

More than an evening's work, but an interesting thought experiment and a 
quantitative way to test whether small-area 7-parameter transformations are 
more accurate than 3-parameter transformations.

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Thursday, October 07, 2010 9:46 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Stereo 1970 (EPSG 31700)

> Hello Noel,
>
> I think you are right in everything you say - except the final conclusion
> that 3-parameter transformations are to be preferred if the software
> does not support Molodensky-Badekas.
>
> Some specific comments:
>
>> (Perhaps you can advise me if this indictment of geodetic software
>> applies to Proj4.)
>
> Yes, as far as I know, Proj4 (or cs2cs) does not support 10 parameters
> (M-B parameters)
> in the +towgs84 parameter.
>
>> It may be true (not positive as I haven't tested this) that the
>> coordinate
>> results of a given M-B transformation can be reproduced by some
>> 7-parameter
>> transformation as you suggest.
>
> It was Melita Kennedy who taught me how to translate an M-B transformation
> into an equivalent 7-parameter transformation. (Strictly speaking, I
> haven't
> been able to test if I understood everything, since I don't have access to
> independent software that supports M-B. But I am pretty confident.)
>
>> ... observe the first 3 parameters of the 7-parameter transformations ...
>> Shocking, isn't it?  They're scattered meaninglessly all over the place,
>> ...
>
> Well, let's say it is unfortunate and disappointing, if it is
> important to be able to interpret and understand the parameters.
>
> On the other hand, most of my customers just need some kind of black-box
> mechanism that can transform long/lat from one datum to another, as
> accurately as possible.  (Or as accurately as necessary, perhaps.)
> So they don't care if the first 3 parameters are widely different
> between 7-parameter transformations for neighbouring regions.
>
>> Until all of (y)our software supports M-B, use a 3-parameter translation
>> instead!
>
> No, that's bad advice. There are plenty of examples for regions that
> you say are too small (like medium-sized European countries), where
> the best available 3-parameter transformation can give errors greater
> than 15 meters, while there are published 7-parameter transformations
> that give errors of just a few meters.
>
> Example: transforming the British OSGB 1936 to WGS84:
>
> Best published 3-parameter transformation: EPSG:1195, "OSGB 1936 to WGS 84
> (1)".
> EPSG Accuracy entry: 21 metre.
> EPSG Scope says: "Accuracy 10m, 10m and 15m in X, Y and Z axes."
>
> Best published 7-parameter transformation: EPSG:1314, "OSGB 1936 to WGS 84
> (6)".
> EPSG Accuracy entry: 2 metre.
> EPSG Scope says: "Accuracy better than 4m and generally better than 2m."
> (British sources say the worst error is 5 meters.)
>
> There are many applications where a 5-meter error can be acceptable,
> while 21 meters or more wouldn't be. (Fleet management, ambulance
> dispatch...)
>
> So, if my software supports 3-parameter and 7-parameter datum shifts,
> but not Molodensky-Badekas (10-parameter) or grid shift files (or if
> you don't need the accuracy of a grid shift file), then what?
> Surely it is better to get 2 - 4 meter accuracy instead of 21 meters,
> even if I cannot interpret or understand the seven parameters at all
> (just as long as they give good results).
>
> Best regards,
>
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
> Sent: den 7 oktober 2010 12:17
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
> Hi Mikael,
>
> It is true that there is no numerical problem using a 7-parameter
> transformation derived from observations in a small area, which means, I
> will add, derived poorly.
>
> It is an unfortunate reality that more geodetic software supports
> 7-parameter transformations than supports Molodensky-Badekas (M-B)
> transformations, sometimes called 10-parameter transformations due to the
> additional 3 coordinates of the topographic rotation center, but these are
> givens of the adjustment and not additional parameters to be solved for.
> (Perhaps you can advise me if this indictment of geodetic software applies
> to Proj4.)  Anyway, in the example you provide (EPSG Tfm Codes 4827 and
> 4829) the Slovakian authorities had this deficiency in mind in supplying a
> 7-parameter transformation to replace a M-B transformation.
>
> It may be true (not positive as I haven't tested this) that the coordinate
> results of a given M-B transformation can be reproduced by some
> 7-parameter transformation as you suggest.
>
> The problem with 7-parameter transformations derived in small area is more
> fundamental, however.  The 7 parameters of a 7-parameter (Helmert,
> Bursa-Wolfe, or similarity) transformation have well-known and
> well-documented physical interpretations.  The 3 translations represent
> the relative displacement of the geocenters of the two ellipsoids involved
> (in the ECEF X, Y and Z directions); the 3 rotations represent rotations
> about the X, Y and Z axes; and the scale represents an inflation (or
> deflation) of an ellipsoid (i.e. the linear unit).  These 7 parameters are
> not like the parameters of a multiple regression equation (MRE) of the
> kind that used to be published by the Defense Mapping Agency (DMA,
> predecessor to NIMA and
> NGA) for transforming datums with more "accuracy" than a 3-parameter
> translation.  Those parameters can be pencil whipped into submission
> because they "mean" nothing.  The 7 parameters of a Helmert (et al)
> transformation mean something and that meaning is badly corrupted by the
> ill conditioning of an adjustment over a small area.
>
> Let me illustrate this point with my own EPSG tfm code examples.  Codes
> 15714, 15716, 15718, 15720, 15722, 15724, 15716 and 15728 offer
> 7-parameter transformations from Bogota 1975 to Magna-Sirgas for regions I
> through VIII in Colombia and codes 15730 through 15737 offer M-B
> parameters for the same regions respectively.  Code 1125 offers a
> 3-parameter translation between Bogota 1975 and WGS84, which EPSG regard
> to be the same as Magna-Sirgas at the 1-meter level.  So, the 3 parameters
> of tfm 1125 provide a 1-meter assessment of the geocentric displacement
> between the International 1924 ellipsoid of Bogota 1975 and GRS80 of
> Magna-Sirgas.  Now, observe that these same 3 translations (307,
> 304, -318) are pretty much the same as the first 3 parameters of all the
> M-B transformations for the eight regions (tfm codes 15730 through 15737).
> Finally, observe the first 3 parameters of the 7-parameter transformations
> for the eight regions (tfm codes 15714, 15716, 15718, 15720, 15722, 15
> 724, 15716 and 15728).  Shocking, isn't it?  They're scattered
> meaninglessly all over the place, a consequence of the ill conditioning of
> deriving a 7-parameter transformation in an area an eighth the size of
> Colombia.
>
> The derivation of a 7-parameter Helmert (et al) transformation over a
> small area is pencil whipping, not geodesy.  Until all of (y)our software
> supports M-B, use a 3-parameter translation instead!
>
> Regards,
> Noel
>
> Noel Zinn, Principal, Hydrometronics LLC
> +1-832-539-1472 (office), +1-281-221-0051 (cell)
> noel.zinn at hydrometronics.com (email)
> http://www.hydrometronics.com (website)
>
> --------------------------------------------------
> From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
> Sent: Thursday, October 07, 2010 2:13 AM
> To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>
>> Hello Noel,
>>
>>> The least-squares adjustment of 7 transformation parameters
>>> (3 translations, 3 rotations and a scale) for an area as small as the
>>> country of Romania is badly ill-conditioned.
>>
>> Now I am confused.
>>
>> What you say is that it is a difficult statistical problem to derive a
>> 7-parameter transformation from observations in a small area. But if
>> someone I can trust has already derived a 7-parameter transformation,
>> then there is no numerical problems when using it, is there?
>>
>>> In these cases use a 3-parameter transformation instead.
>>> Or a Molodensky-Badekas transformation ... as has become common in
>>> some smaller countries (e.g. Luxembourg, Venezuela) ... if you can
>>> find (or derive) one.
>>
>> Well, but if a Molodensky-Badekas transformation is okay, then there
>> is always a 7-parameter transformation that gives the same result.
>> For all I know, the Romanian authorities may have started out by
>> deriving a Molodensky-Badekas transformation, and then decided to
>> publish it as the equivalent 7-parameter transformation.  If that is
>> what they did, there would be no reason to suspect that their
>> transformation is less accurate than the 3-parameter transformations,
>> is there?
>>
>> (An example: the datum shift EPSG:4829, "S-JTSK to ETRS89 (3)", is a
>> Molodensky-Badekas transformation, and the datum shift EPSG:4827,
>> "S-JTSK to ETRS89 (4)", is the same transformation expressed as a
>> 7-parameter transformation.)
>>
>> Best regards,
>>
>> Mikael Rittri
>> Carmenta AB
>> Sweden
>> www.carmenta.com
>>
>> -----Original Message-----
>> From: proj-bounces at lists.maptools.org
>> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
>> Sent: den 6 oktober 2010 16:47
>> To: PROJ.4 and general Projections Discussions
>> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>>
>> Although the third of the three EPSG transformations cited herein has
>> the
>> (Romanian) National Agency for Cadastre and Land Registration as its
>> source (and is, therefore, authoritative) and it has more parameters
>> (7 versus 3 for the Shell and NIMA transformations), it should not be
>> regarded as more accurate.  The least-squares adjustment of 7
>> transformation parameters (3 translations, 3 rotations and a scale)
>> for an area as small as the country of Romania is badly
>> ill-conditioned.  The 7 parameters are highly correlated and,
>> therefore, are driven by small survey errors, not physical reality.
>> Simply stated, the translations pull in one direction and the
>> rotations in another.  Australia is big enough, but not Romania.  Not
>> even Germany.  In these cases use a 3-parameter transformation
>> instead.  Or a Molodensky-Badekas transformation ... as has become
>> common in some smaller countries (e.g. Luxembourg, Venezuela) ... if
>> you can find (or derive) one.
>>
>> Noel Zinn, Principal, Hydrometronics LLC
>> +1-832-539-1472 (office), +1-281-221-0051 (cell)
>> noel.zinn at hydrometronics.com (email)
>> http://www.hydrometronics.com (website)
>>
>> --------------------------------------------------
>> From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
>> Sent: Wednesday, October 06, 2010 2:38 AM
>> To: "PROJ.4 and general Projections Discussions"
>> <proj at lists.maptools.org>
>> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>>
>>> Hello, Thibaut.
>>>
>>> For the record, www.epsg-registry.org gives three datum shifts from
>>> Pulkovo 1942(58) to WGS84 that are valid in Romania.
>>>
>>> Code Accuracy Source Proj.4 syntax
>>> 15496 10 meters Shell SIEP +towgs84=44.107,-116.147,-54.648
>>> 15497 7 meters NIMA TR8350.2 +towgs84=28,-121,-77
>>> 15995 3 meters www.ancpi.ro (*)
>>> +towgs84=2.329,-147.042,-92.08,-0.309,0.325,0.497,5.69
>>> (*) National Agency for Cadastre and Land Registration
>>>
>>> The third one seems to be more accurate than the two you mentioned.
>>> Of course, this may not matter if your main concern is to get ArcMap
>>> and Qgis to agree.
>>>
>>> Actually, it is possible that the Shell datum shift is more accurate
>>> than the NIMA one, since accuracies that EPSG quotes from different
>>> sources are not comparable.  I think accuracies from NIMA are usually
>>> one-sigma (about 67 percent confidence), but I don't know about Shell.
>>> But my impression is that the ANCPI datum shift is the most accurate.
>>>
>>> By the way, I noticed that the code EPSG:31700 is deprecated, because
>>> it used the the geodetic datum Dealul Piscului 1970, EPSG:6317.  This
>>> was deprecated in September 2008 because
>>>
>>>   "Datum does not exist but is an alias for S-42 in Romania" (Change
>>> ID 2008.011).
>>>
>>> And S-42 is (in this context) the same as Pulkovo 1942(58).
>>> So, EPSG:31700 has been replaced by EPSG:3844, "Pulkovo 1942(58) /
>>> Stereo70".
>>>
>>> Best regards,
>>>
>>> Mikael Rittri
>>> Carmenta AB
>>> Sweden
>>> www.carmenta.com
>>>
>>> ________________________________
>>>
>>> From: proj-bounces at lists.maptools.org
>>> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Thibaut Gheysen
>>> Sent: den 4 oktober 2010 17:24
>>> To: PROJ.4 and general Projections Discussions
>>> Subject: Re: [Proj] Stereo 1970 (EPSG 31700)
>>>
>>>
>>> I checked in Arcmap, there are two "geographic coordinate system
>>> transformations" for stereo 1970 to wgs84. I used the first with
>>> those parameters : +towgs84=44.107,-116.147,-54.648,0,0,0,0. The
>>> suggested
>>> proj.4 definition correspond to the second "geographic coordinate
>>> system transformations" in ArcMap.
>>>
>>> All is fine now.
>>>
>>> Thanks for your help,
>>> Thibaut.
>>>
>>>
>>> 2010/10/4 Thibaut Gheysen <gheysen.t at gmail.com>
>>>
>>>
>>> Thanks Frank.
>>> I use QGis 1.5 from osgeo4w (I don't know exactly which version of
>>> Proj.4 is used).
>>> I just try with your suggested definition. It's better but I always
>>> have a deviation of about 5 meters.
>>>
>>> Thibaut.
>>>
>>>
>>> 2010/10/4 Frank Warmerdam <warmerdam at pobox.com>
>>>
>>>
>>> Thibaut Gheysen wrote:
>>> > Hi,
>>> >
>>> > I have a problem in QGIS with the Stereo 1970 coordinate system
>>> > (EPSG 31700).
>>> > I have a shapefile in the WGS 84 coordinate system (from a GPS
>>> > device).
>>> > I projected this shapefile in Stereo 1970 using ArcMap.
>>> > In ArcMap, the source and projected points are in the same place.
>>> > In Qgis, I have a deviation of about 100 meters when displaying
>>> > this 2 shapefiles and activating the "on the fly projection"
>>> > (stereo.jpg).
>>> > This deviation is the same that the one I obtain in ArcMap without
>>> > "geographic coordinate system transformations".
>>>
>>>
>>> Thibault,
>>>
>>> I'm not sure exactly what version of PROJ.4 you are using, but after
>>> my "datum shift identification upgrade" the EPSG dictionary for proj
>>> now has this as the suggested definition of 31700:
>>>
>>>
>>> +proj=sterea +lat_0=46 +lon_0=25 +k=0.99975 +x_0=500000 +y_0=500000
>>> +ellps=krass +towgs84=28,-121,-77,0,0,0,0 +units=m +no_defs
>>>
>>> Perhaps you could try with this?
>>>
>>> Best regards,
>>> --
>>> ---------------------------------------+-----------------------------
>>> ---------------------------------------+-
>>> ---------------------------------------+--------
>>> I set the clouds in motion - turn up   | Frank Warmerdam,
>>> warmerdam at pobox.com
>>> light and sound - activate the windows | http://pobox.com/~warmerdam
>>> <http://pobox.com/%7Ewarmerdam>
>>> and watch the world go round - Rush    | Geospatial Programmer for Rent
>>>
>>> _______________________________________________
>>> Proj mailing list
>>> Proj at lists.maptools.org
>>> http://lists.maptools.org/mailman/listinfo/proj
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Proj mailing list
>>> Proj at lists.maptools.org
>>> http://lists.maptools.org/mailman/listinfo/proj
>>>
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Fri Oct  8 02:36:59 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Fri, 8 Oct 2010 09:36:59 +0000
Subject: [Proj] Transformations in small areas - was Stereo 1970 (EPSG
 31700)
In-Reply-To: <3BA2D908A1B64E00A5335A87EB76C854@NoelHmPC>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com><E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se><643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se><09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC>
	<E4AB3DD44D22854B819908379DE4AD49F96C@SETHNWS023.carmenta.se>
	<3BA2D908A1B64E00A5335A87EB76C854@NoelHmPC>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49FA23@SETHNWS023.carmenta.se>

Hello Noel,

> I appreciate the exchange.

So do I. What you say is quite interesting. 

> ... my advice to use 3-parameter translations in a small area ...

Okay, I can accept this as an advice to people who derive new 
datum shifts, like yourself. As long as you can estimate the
error, and the error is acceptable, why not?  But I thought you
extended the advice to people like me, who usually have to choose
between different published datum shifts.  I agree that a 7-parameter
datum shift is not necessarily better than a 3-parameter one, and
the accuracies quoted by EPSG are often hard or impossible to compare.
But I don't see that I should avoid using a published datum shift,
just because it uses 7 parameters in a "small" area.

> 7-parameter derivations in small frontiers are ill conditioned (my thesis)
> ... 
> because 7-parameter transformations are no more "accurate" in a small 
> area than a 3-parameter translation derived from the same data set.

I am sure you are right, for a given value of "small". 
    What surprised me is when you said that Romania and even Germany 
are small in this sense.  Romania is about 700 km in diameter, 
Germany is 800 km, while Australia (which you said is large enough)
is 3800 km. So you are saying that the threshold for "smallness" is 
somewhere between 800 and 3800 km. 
   I would have expected the threshold to be more like 100 km.  

My example of the 3-parameter transform for OSGB 1936 may, as you
say, not be the best possible 3-parameter transform for this datum.

> Tfm Code 1039 provides us the opportunity to test my assertion...

That would be quite interesting, but a bit of work as you say.
But I think I can predict roughly how good the best 3-parameter
transformation could be. 
    The idea is that a 3-parameter and a 7-parameter transform 
for the same area ought to agree exactly on at least one point.  
Around this fixed point, the advantage of the 7-parameter transform 
is that it can supply a rotation and a scale change.  Well, three 
rotations in 3D space, but they should correspond to a single 
rotation around an oblique axis through the fixed point.  
I think this single rotation would be about as large as the 
three basic rotations, but I could be wrong.  Anyway, in the 
OSGB example, I think the main improvement of the 7-parameter 
transform comes from the scale change, not the rotations (since
they are fairly small), and the scale change is -20.489 ppm.  
If the best possible 3-parameter transform for OSGB agrees with 
the given 7-parameter transform in the middle of Great Britain, 
then the maximal radius is about 540 km, and 540 km * 20.489 ppm =
= 11 meters.
    So, the best possible 3-parameter transform for OSGB has to 
deviate from the given 7-parameter transform by up to 11 meters,
(either at Land's End in the southwest or the Orkney Islands in 
the north).  Since the 7-parameter transform is claimed to be at 
most 5 meters wrong, this means that the best 3-parameter transform
is worse.  (In the best possible case, the 5-meter error would 
occur in both Land's End and Orkney, in a direction that makes 
the 3-parameter transform wrong by only 6 meters. But that's 
optimistic.) 

>From this kind of argument, I think one could estimate the 
threshold of "smallness" from the rotations and scale change
of a 7-parameter transformation, together with its accuracy.

A more general "smallness" threshold could perhaps be computed
from the average rotations and scale changes among many typical
7-parameter transforms (and their accuracies).  

Best regards,
Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
Sent: den 8 oktober 2010 05:27
To: PROJ.4 and general Projections Discussions
Subject: [Proj] Transformations in small areas - was Stereo 1970 (EPSG 31700)

Thanks, Mikael.  I appreciate the exchange.

[Complete message at http://lists.maptools.org/pipermail/proj/2010-October/005429.html ]

From ndzinn at comcast.net  Fri Oct  8 05:27:19 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Fri, 8 Oct 2010 07:27:19 -0500
Subject: [Proj] Transformations in small areas - was Stereo 1970 (EPSG
	31700)
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49FA23@SETHNWS023.carmenta.se>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com><E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se><643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se><09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F96C@SETHNWS023.carmenta.se><3BA2D908A1B64E00A5335A87EB76C854@NoelHmPC>
	<E4AB3DD44D22854B819908379DE4AD49FA23@SETHNWS023.carmenta.se>
Message-ID: <D2BA211850844B32A24AEF489285AF31@NoelHmPC>

Mikael,

> But I thought you extended the advice to people like me, who usually have 
> to choose between different published datum shifts.

Guilty, I confess, but there is a reason.  There are two ways to change a 
practice, from the top down (datum shift "derivers" in this case) and from 
the bottom up (datum shift "choosers" or "consumers" in this case).  Fashion 
is known to work both ways.  Haute Couture at the top and "street smarts" at 
the bottom.  Well, having observed geodetic practice on this topic during 
the last decade I despair.  Top down change isn't happening.  Authoritative 
agencies that should know better (NATO among them) are cranking out bad 
7-parameter datum transformations (e.g. for Cyprus, way too small by any 
standard).  The time has come for bottom-up change.  Datum transformation 
consumers need to be more discriminating.  I was purposely being 
provocative.

As I wrote previously, "small" can be defined quantitatively based on the 
dilution of precision of the 7-parameter adjustment.  Dilution of precision 
(DOP) is a GPS concept, a unitless number that is a function of the number 
of GPS satellites available and their distribution in space relative to the 
observer (it's related to the trace of the variance-covariance matrix 
mathematically).  DOP is the multiplier of random observation error into 
random coordinate error.  It needs to be as small as possible.  Well, 
7-parameter derivation adjustments have a DOP, too.  I call it P7DOP.  The 
number of survey points used corresponds to the number of satellites and the 
distribution in space corresponds to the area over which the survey points 
are spread.  Reduce either (number of survey points or the area) and DOP 
increases.  Not good.  An acceptable DOP is a judgment call, but at least 
it's a quantitative judgment.  Australia with 80 survey points gives a DOP 
of 2.2.  This means that if the average coordinate random error of the 
survey points used is 1 meter (could be better or worse), then the average 
parameter error is 2.2 meters.  I judge that to be acceptable.  Germany with 
80 survey points gives a DOP of 10.2 (unacceptable to me).  With just 20 
survey points the Germany DOP is 21 (even worse).  That's how it works. 
Most surveyors and navigators want their GPS DOPs to be under 3.

Your dissection of the OSGB 7-parameter shift is a little difficult for me 
to follow, but creative.  You begin by noting that a 3-parameter and a 
7-parameter transformation ought to agree at some point.  It's interesting 
to note that at a single point it's possible to derive many 3-parameter 
shifts, not just (dX, dY, dZ).  (rX, rY, dS), (rY, rZ, dS) and (dY, rX, rY) 
are among the many possibilities.  The derivation of a 7-parameter 
transformation at a single point is a singularity; can't be done (but I know 
that you didn't mean to imply that).

You then go on to detail the consequences of the 20.489 ppm dS (change in 
scale).  This is an enormous dS by 7-parameter standards and an omen of a 
questionable transformation.  Multiplied by the earth radius in Great 
Britain, this dS results in a height change of 130 meters.   Shouldn't that 
have been handled by the translations?  Or is this really a scale change 
between OSGB and WGS?  Not likely.  This dS is twice the ppm difference 
between the smallest foot (Clarke's) and largest foot (British 1936) in the 
EPSG Unit of Measure table.  So, it's physical reality is questionable, as 
is further reasoning derived from this dS frankly.  We can (and should) 
derive parameters with valid physical interpretations using the 
Molodensky-Badekas model.

The UK is a tough place to think about the interplay among the 7 parameters. 
There are six places in the world where it's easy: the two poles and the 
four intersections of the X and Y axes with the Equator.  Take one of them, 
0N/0E in the Gulf of Guinea, the intersection of Greenwich and the Equator. 
At that point dX is indistinguishable from dS (i.e. 100% correlated), dY is 
indistinguishable from rZ,  dZ is indistinguishable from rY,  and rX does 
nothing.  How large an area does it take to reduce those correlations 
enough?  Until you get to that size, deriving (and using in my opinion) a 
7-parameter transformation is poor geodetic practice.

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Friday, October 08, 2010 4:36 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Transformations in small areas - was Stereo 1970 (EPSG 
31700)

> Hello Noel,
>
>> I appreciate the exchange.
>
> So do I. What you say is quite interesting.
>
>> ... my advice to use 3-parameter translations in a small area ...
>
> Okay, I can accept this as an advice to people who derive new
> datum shifts, like yourself. As long as you can estimate the
> error, and the error is acceptable, why not?  But I thought you
> extended the advice to people like me, who usually have to choose
> between different published datum shifts.  I agree that a 7-parameter
> datum shift is not necessarily better than a 3-parameter one, and
> the accuracies quoted by EPSG are often hard or impossible to compare.
> But I don't see that I should avoid using a published datum shift,
> just because it uses 7 parameters in a "small" area.
>
>> 7-parameter derivations in small frontiers are ill conditioned (my 
>> thesis)
>> ...
>> because 7-parameter transformations are no more "accurate" in a small
>> area than a 3-parameter translation derived from the same data set.
>
> I am sure you are right, for a given value of "small".
>    What surprised me is when you said that Romania and even Germany
> are small in this sense.  Romania is about 700 km in diameter,
> Germany is 800 km, while Australia (which you said is large enough)
> is 3800 km. So you are saying that the threshold for "smallness" is
> somewhere between 800 and 3800 km.
>   I would have expected the threshold to be more like 100 km.
>
> My example of the 3-parameter transform for OSGB 1936 may, as you
> say, not be the best possible 3-parameter transform for this datum.
>
>> Tfm Code 1039 provides us the opportunity to test my assertion...
>
> That would be quite interesting, but a bit of work as you say.
> But I think I can predict roughly how good the best 3-parameter
> transformation could be.
>    The idea is that a 3-parameter and a 7-parameter transform
> for the same area ought to agree exactly on at least one point.
> Around this fixed point, the advantage of the 7-parameter transform
> is that it can supply a rotation and a scale change.  Well, three
> rotations in 3D space, but they should correspond to a single
> rotation around an oblique axis through the fixed point.
> I think this single rotation would be about as large as the
> three basic rotations, but I could be wrong.  Anyway, in the
> OSGB example, I think the main improvement of the 7-parameter
> transform comes from the scale change, not the rotations (since
> they are fairly small), and the scale change is -20.489 ppm.
> If the best possible 3-parameter transform for OSGB agrees with
> the given 7-parameter transform in the middle of Great Britain,
> then the maximal radius is about 540 km, and 540 km * 20.489 ppm =
> = 11 meters.
>    So, the best possible 3-parameter transform for OSGB has to
> deviate from the given 7-parameter transform by up to 11 meters,
> (either at Land's End in the southwest or the Orkney Islands in
> the north).  Since the 7-parameter transform is claimed to be at
> most 5 meters wrong, this means that the best 3-parameter transform
> is worse.  (In the best possible case, the 5-meter error would
> occur in both Land's End and Orkney, in a direction that makes
> the 3-parameter transform wrong by only 6 meters. But that's
> optimistic.)
>
> From this kind of argument, I think one could estimate the
> threshold of "smallness" from the rotations and scale change
> of a 7-parameter transformation, together with its accuracy.
>
> A more general "smallness" threshold could perhaps be computed
> from the average rotations and scale changes among many typical
> 7-parameter transforms (and their accuracies).
>
> Best regards,
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org 
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
> Sent: den 8 oktober 2010 05:27
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] Transformations in small areas - was Stereo 1970 (EPSG 
> 31700)
>
> Thanks, Mikael.  I appreciate the exchange.
>
> [Complete message at 
> http://lists.maptools.org/pipermail/proj/2010-October/005429.html ]
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From cjmce at lsu.edu  Fri Oct  8 09:44:07 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 8 Oct 2010 11:44:07 -0500
Subject: [Proj] Transformations in small areas - was Stereo 1970
	(EPSG31700)
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com><E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se><643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se><09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F96C@SETHNWS023.carmenta.se><3BA2D908A1B64E00A5335A87EB76C854@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49FA23@SETHNWS023.carmenta.se>
	<D2BA211850844B32A24AEF489285AF31@NoelHmPC>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A655E@email002.lsu.edu>

 
In my PE&RS column on the Grids and Datums of Namibia, I quoted Professor Charles Merry, now retired from the University of Cape Town:
 

... "Turning now to Namibia, the results for this datum are summarized ... Although the rotations are not as large as those in Zimbabwe and are barely significant, they do serve to model distortions in the geodetic network and hence provide an improved fit between this network and the CTS.  Again it must be emphasized that these rotations have no physical interpretation.  As in all the countries investigated, except for South Africa, the scale factor plays no major role.  Although the seven-parameter set does improve the fit, it is by no means as remarkable an improvement as that experienced in Zimbabwe and it is debatable whether the extra effort is worth it.  Consequently, we recommend that (the-Ed.) three-parameter transformation shown: ?X = +616.6 m ±1.3 m, ?Y = +103.0 m  ±1.3 m, ?Z = -256.6 m ±1.3 m.  ... As in Zimbabwe, the Namibian networks suffer from significant distortions but in this case a seven-parameter transformation provides little improvement over a three-parameter transformation." 

-------------------------------------------

I have used 7-parameter transformations from time-to-time in the past several decades of my practice, but when I have done so, I took particular notice of the distance of the country/region of interest from the origin point of the classical datum.  When close, I use the Bursa-Wolfe 7-parameter model (such as the distance of Trinidad & Tobago from La Canoa, Venezuela), and when a great distance from the datum origin (such as the distance of the City of Guayaquil, Ecuador from La Canoa, Venezuela), I have used the Molodensky model.  The differentiation allows scaling of the translation parameters.  There is zero difference in the accuracy of the resultant transformation, it just "looks" better when perusing the relative magnitudes of the translation parameters for other countries in the region.  Who cares about the "look?"  The local government's Federal Agency with jurisdiction for official approval.
 
One can see that there are diminishing returns in blindly increasing the area in order to justify a 7-parameter transformation.  Areas can increase so large that there are too many local distortions in varying meridianol chains to allow a single transformation of any type other than a "surface fit" such as implemented with a NadCon or NTv2 approach.  The generalization one can make for this is ... it depends ...  :-)
 

 

Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of Noel Zinn (cc)
Sent: Fri 08-Oct-10 07:27
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Transformations in small areas - was Stereo 1970 (EPSG31700)



Mikael,

> But I thought you extended the advice to people like me, who usually have
> to choose between different published datum shifts.

Guilty, I confess, but there is a reason.  There are two ways to change a
practice, from the top down (datum shift "derivers" in this case) and from
the bottom up (datum shift "choosers" or "consumers" in this case).  Fashion
is known to work both ways.  Haute Couture at the top and "street smarts" at
the bottom.  Well, having observed geodetic practice on this topic during
the last decade I despair.  Top down change isn't happening.  Authoritative
agencies that should know better (NATO among them) are cranking out bad
7-parameter datum transformations (e.g. for Cyprus, way too small by any
standard).  The time has come for bottom-up change.  Datum transformation
consumers need to be more discriminating.  I was purposely being
provocative.

As I wrote previously, "small" can be defined quantitatively based on the
dilution of precision of the 7-parameter adjustment.  Dilution of precision
(DOP) is a GPS concept, a unitless number that is a function of the number
of GPS satellites available and their distribution in space relative to the
observer (it's related to the trace of the variance-covariance matrix
mathematically).  DOP is the multiplier of random observation error into
random coordinate error.  It needs to be as small as possible.  Well,
7-parameter derivation adjustments have a DOP, too.  I call it P7DOP.  The
number of survey points used corresponds to the number of satellites and the
distribution in space corresponds to the area over which the survey points
are spread.  Reduce either (number of survey points or the area) and DOP
increases.  Not good.  An acceptable DOP is a judgment call, but at least
it's a quantitative judgment.  Australia with 80 survey points gives a DOP
of 2.2.  This means that if the average coordinate random error of the
survey points used is 1 meter (could be better or worse), then the average
parameter error is 2.2 meters.  I judge that to be acceptable.  Germany with
80 survey points gives a DOP of 10.2 (unacceptable to me).  With just 20
survey points the Germany DOP is 21 (even worse).  That's how it works.
Most surveyors and navigators want their GPS DOPs to be under 3.

Your dissection of the OSGB 7-parameter shift is a little difficult for me
to follow, but creative.  You begin by noting that a 3-parameter and a
7-parameter transformation ought to agree at some point.  It's interesting
to note that at a single point it's possible to derive many 3-parameter
shifts, not just (dX, dY, dZ).  (rX, rY, dS), (rY, rZ, dS) and (dY, rX, rY)
are among the many possibilities.  The derivation of a 7-parameter
transformation at a single point is a singularity; can't be done (but I know
that you didn't mean to imply that).

You then go on to detail the consequences of the 20.489 ppm dS (change in
scale).  This is an enormous dS by 7-parameter standards and an omen of a
questionable transformation.  Multiplied by the earth radius in Great
Britain, this dS results in a height change of 130 meters.   Shouldn't that
have been handled by the translations?  Or is this really a scale change
between OSGB and WGS?  Not likely.  This dS is twice the ppm difference
between the smallest foot (Clarke's) and largest foot (British 1936) in the
EPSG Unit of Measure table.  So, it's physical reality is questionable, as
is further reasoning derived from this dS frankly.  We can (and should)
derive parameters with valid physical interpretations using the
Molodensky-Badekas model.

The UK is a tough place to think about the interplay among the 7 parameters.
There are six places in the world where it's easy: the two poles and the
four intersections of the X and Y axes with the Equator.  Take one of them,
0N/0E in the Gulf of Guinea, the intersection of Greenwich and the Equator.
At that point dX is indistinguishable from dS (i.e. 100% correlated), dY is
indistinguishable from rZ,  dZ is indistinguishable from rY,  and rX does
nothing.  How large an area does it take to reduce those correlations
enough?  Until you get to that size, deriving (and using in my opinion) a
7-parameter transformation is poor geodetic practice.

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com <http://www.hydrometronics.com/>  (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Friday, October 08, 2010 4:36 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Transformations in small areas - was Stereo 1970 (EPSG
31700)

> Hello Noel,
>
>> I appreciate the exchange.
>
> So do I. What you say is quite interesting.
>
>> ... my advice to use 3-parameter translations in a small area ...
>
> Okay, I can accept this as an advice to people who derive new
> datum shifts, like yourself. As long as you can estimate the
> error, and the error is acceptable, why not?  But I thought you
> extended the advice to people like me, who usually have to choose
> between different published datum shifts.  I agree that a 7-parameter
> datum shift is not necessarily better than a 3-parameter one, and
> the accuracies quoted by EPSG are often hard or impossible to compare.
> But I don't see that I should avoid using a published datum shift,
> just because it uses 7 parameters in a "small" area.
>
>> 7-parameter derivations in small frontiers are ill conditioned (my
>> thesis)
>> ...
>> because 7-parameter transformations are no more "accurate" in a small
>> area than a 3-parameter translation derived from the same data set.
>
> I am sure you are right, for a given value of "small".
>    What surprised me is when you said that Romania and even Germany
> are small in this sense.  Romania is about 700 km in diameter,
> Germany is 800 km, while Australia (which you said is large enough)
> is 3800 km. So you are saying that the threshold for "smallness" is
> somewhere between 800 and 3800 km.
>   I would have expected the threshold to be more like 100 km.
>
> My example of the 3-parameter transform for OSGB 1936 may, as you
> say, not be the best possible 3-parameter transform for this datum.
>
>> Tfm Code 1039 provides us the opportunity to test my assertion...
>
> That would be quite interesting, but a bit of work as you say.
> But I think I can predict roughly how good the best 3-parameter
> transformation could be.
>    The idea is that a 3-parameter and a 7-parameter transform
> for the same area ought to agree exactly on at least one point.
> Around this fixed point, the advantage of the 7-parameter transform
> is that it can supply a rotation and a scale change.  Well, three
> rotations in 3D space, but they should correspond to a single
> rotation around an oblique axis through the fixed point.
> I think this single rotation would be about as large as the
> three basic rotations, but I could be wrong.  Anyway, in the
> OSGB example, I think the main improvement of the 7-parameter
> transform comes from the scale change, not the rotations (since
> they are fairly small), and the scale change is -20.489 ppm.
> If the best possible 3-parameter transform for OSGB agrees with
> the given 7-parameter transform in the middle of Great Britain,
> then the maximal radius is about 540 km, and 540 km * 20.489 ppm =
> = 11 meters.
>    So, the best possible 3-parameter transform for OSGB has to
> deviate from the given 7-parameter transform by up to 11 meters,
> (either at Land's End in the southwest or the Orkney Islands in
> the north).  Since the 7-parameter transform is claimed to be at
> most 5 meters wrong, this means that the best 3-parameter transform
> is worse.  (In the best possible case, the 5-meter error would
> occur in both Land's End and Orkney, in a direction that makes
> the 3-parameter transform wrong by only 6 meters. But that's
> optimistic.)
>
> From this kind of argument, I think one could estimate the
> threshold of "smallness" from the rotations and scale change
> of a 7-parameter transformation, together with its accuracy.
>
> A more general "smallness" threshold could perhaps be computed
> from the average rotations and scale changes among many typical
> 7-parameter transforms (and their accuracies).
>
> Best regards,
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
> Sent: den 8 oktober 2010 05:27
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] Transformations in small areas - was Stereo 1970 (EPSG
> 31700)
>
> Thanks, Mikael.  I appreciate the exchange.
>
> [Complete message at
> http://lists.maptools.org/pipermail/proj/2010-October/005429.html ]
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101008/2f087a78/attachment.html>

From Laurent.Saez at developpement-durable.gouv.fr  Fri Oct  8 10:53:54 2010
From: Laurent.Saez at developpement-durable.gouv.fr (SAEZ Laurent  - SG/SPSSI/CPII/DOM/ETER)
Date: Fri, 08 Oct 2010 19:53:54 +0200
Subject: [Proj] EPSG CS not supported,
 but the epsg file contains the  correct definition
In-Reply-To: <mailman.3.1286470802.28620.proj@lists.maptools.org>
References: <mailman.3.1286470802.28620.proj@lists.maptools.org>
Message-ID: <4CAF5AB2.2050003@developpement-durable.gouv.fr>

Thanks for your replies,

I know that "The difference between the WGS84 ellipsoid and the GRS80 
ellipsoid is less than 0.001 meters". Even it is worst than that, the 
difference is about 0.0001 meters !
But a maximum interoperable I have to offer my layers in a maximum CRS.
Frank, I have replace pcs.csv and gcs.csv with yours without success.
I have the same issue with Mayotte (EPSG:4471).

I think I have find what is going on... Axis order changes in WMS 1.3.0 
acording to epsg specifications.
In WMS 1.1.1 axis order is X,Y (long,lat).
In WMS 1.3.0 axis order must follow the authority specifications. EPSG 
follows ISO6709, so order is lat,long (Y,X).
It's so funny, isn't it !

But I don't understand why some requests works and some not with 
MapServer 5.6.5.

WMS 1.1.1/GetMap requests work fine (but MapInfo® 8.5 requests WMS 
1.3.0) with my new codes (EPSG:4559 and EPSG:4471) and axis order X,Y 
(long,lat).

WMS 1.3.0/GetMap requests work fine with "old codes" like EPSG:32738 
(WGS84 - UTM38S) and with wrong axis order (X,Y instead of Y,X)!
Example (image OK) :
http://mypath/mapserv
?VERSION=1.3.0
&REQUEST=GetMap
&LAYERS=fonds
&STYLES=
&CRS=EPSG:32738
&BBOX=513042.913690223,8595410.58010215,513509.488298022,8595664.36844427
&WIDTH=956
&HEIGHT=520
&FORMAT=image/jpeg
&BGCOLOR=0xFFFFFF
&EXCEPTIONS=XML

If I change axis order with EPSG32738, white image is rendered.

WMS 1.3.0/GetMap requests work fine only with "new codes" like EPSG:4471 
(GRS80- UTM38S) AND with axis order Y,X (lat,long) !
Example (image OK) :
http://mypath/mapserv
?VERSION=1.3.0
&REQUEST=GetMap
&LAYERS=fonds
&STYLES=
&CRS=EPSG:4471
&BBOX=8595410.58010215,513042.913690223,8595664.36844427,513509.488298022
&WIDTH=956
&HEIGHT=520
&FORMAT=image/jpeg
&BGCOLOR=0xFFFFFF
&EXCEPTIONS=XML

THE QUESTION is : why MapServer understands differently WMS 1.3.0 GetMap 
requests with old and new codes ?
It's strange but it is !

Thanks for all
Laurent

Le 07/10/2010 19:00, > proj-request at lists.maptools.org (par Internet, 
dépôt proj-bounces at lists.maptools.org) a écrit  :
> Send Proj mailing list submissions to
> 	proj at lists.maptools.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://lists.maptools.org/mailman/listinfo/proj
> or, via email, send a message with subject or body 'help' to
> 	proj-request at lists.maptools.org
>
> You can reach the person managing the list at
> 	proj-owner at lists.maptools.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Proj digest..."
>
>
> Today's Topics:
>
>    1. EPSG CS not supported,	but the epsg file contains the correct
>       definition (SAEZ Laurent  - SG/SPSSI/CPII/DOM/ETER)
>    2. Re: EPSG CS not supported,	but the epsg file contains the
>       correct definition (Clifford J Mugnier)
>    3. Re: EPSG CS not supported, but the epsg file contains the
>       correct definition (Frank Warmerdam)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Thu, 07 Oct 2010 18:29:41 +0200
> From: "SAEZ Laurent  - SG/SPSSI/CPII/DOM/ETER"
> 	<Laurent.Saez at developpement-durable.gouv.fr>
> Subject: [Proj] EPSG CS not supported,	but the epsg file contains the
> 	correct definition
> To: proj at lists.maptools.org
> Message-ID: <4CADF575.6050401 at developpement-durable.gouv.fr>
> Content-Type: text/plain; charset=ISO-8859-15; format=flowed
>
> Hi all,
>
> I have to add support for new CRS in my mapfiles.
>
> New EPSG code, 4559 (Projected CRS for French Antilles - Guadeloupe and 
> Martinique) replaces 2989.
> The ellipsoide is the only thing different (GRS80 instead of WGS84).
>
> So I add the EPSG:4559 definition in my epsg file.
> <4559> +proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m 
> +no_defs  <>
>
> I use MapServer 5.6.5 with proj 4.7.0 (on Debian 64bits).
>
> When I call a GetMap using EPSG:4559 the image rendered is "wrong". 
> EPSG:4559 and EPSG:2989 are almost identical and the images should be 
> approximately similar.
> So, I test my EPSG code with testepsg.
>
> If I don't specify the epsg file location ('/opt/mapserver/bin/testepsg' 
> EPSG:4559), I have :
> "ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is 
> this a valid
> EPSG coordinate system?
> ERROR 1: Error occured translating EPSG:4559."
>
> If I specify the file location ('/opt/mapserver/bin/testepsg' 
> '/opt/mapserver/share/proj/epsg' EPSG:4559)  :
> "Validate Succeeds.
> WKT[/opt/mapserver/share/proj/epsg] =
> PROJCS["unnamed",
>     GEOGCS["GRS 1980(IUGG, 1980)",
>         DATUM["unknown",
>             SPHEROID["GRS80",6378137,298.257222101],
>             TOWGS84[0,0,0,0,0,0,0]],
>         PRIMEM["paris",2.3372291666985],
> ...
> ...
> ...
> UNIT["Meter",1],
>     PARAMETER["standard_parallel_1",46.8]]
> PROJ.4 rendering of [/opt/mapserver/share/proj/epsg] = +proj=lcc 
> +lat_1=46.8 +lat_0=46.8 +lon_0=2.33722917 +k_0=0.99987742 +x_0=600000 
> +y_0=2200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +pm=2.3372291666985 
> +units=m +no_defs
>
> ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is 
> this a valid
> EPSG coordinate system?
> ERROR 1: Error occured translating EPSG:4559."
>
> I use to add EPSG codes in my mapfiles. It's the first time I have this 
> problem.
>
> It seems that sometimes it is not sufficient to add a definition in the 
> file EPSG...
> I have read this thread ("Unsupported SRS but available in epsg file") :
> http://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg04926.html
>
> My GDAL_DATA environnement variable is well defined. I tried to add the 
> definition in cubewerx_extra.wkt without success.
> Any idea ?
>
> I send this message on this list but I can't know what application is at 
> issue: GDAL or PROJ?
>
> NB: I apologize for my bad English.
>
>
>
>
>
>
> ------------------------------
>
> Message: 2
> Date: Thu, 7 Oct 2010 11:32:44 -0500
> From: "Clifford J Mugnier" <cjmce at lsu.edu>
> Subject: Re: [Proj] EPSG CS not supported,	but the epsg file contains
> 	the correct definition
> To: "PROJ.4 and general Projections Discussions"
> 	<proj at lists.maptools.org>
> Message-ID:
> 	<B597ADFC46B67741B18EA6AA13613FF7026A6555 at email002.lsu.edu>
> Content-Type: text/plain; charset="iso-8859-1"
>
> The difference between the WGS84 ellipsoid and the GRS80 ellipsoid is less than 0.001 meters, and that is only for the semi-minor axis (b).  Consider them identical for all practical purposes.
>  
> Clifford J. Mugnier, C.P., C.M.S.
> Chief of Geodesy,
> Center for GeoInformatics
> Department of Civil Engineering 
> Patrick F. Taylor Hall 3223A
> LOUISIANA STATE UNIVERSITY 
> Baton Rouge, LA  70803
> Voice and Facsimile:  (225) 578-8536 [Academic] 
> Voice and Facsimile:  (225) 578-4578 [Research] 
> Cell: (225) 238-8975 [Academic & Research]
> Honorary Life Member of the 
> Louisiana Society of Professional Surveyors 
> Fellow Emeritus of the ASPRS 
> Member of the Americas Petroleum Survey Group
>
>
> ________________________________
>
> From: proj-bounces at lists.maptools.org on behalf of SAEZ Laurent - SG/SPSSI/CPII/DOM/ETER
> Sent: Thu 07-Oct-10 11:29
> To: proj at lists.maptools.org
> Subject: [Proj] EPSG CS not supported,but the epsg file contains the correct definition
>
>
>
> Hi all,
>
> I have to add support for new CRS in my mapfiles.
>
> New EPSG code, 4559 (Projected CRS for French Antilles - Guadeloupe and
> Martinique) replaces 2989.
> The ellipsoide is the only thing different (GRS80 instead of WGS84).
>
> So I add the EPSG:4559 definition in my epsg file.
> <4559> +proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
> +no_defs  <>
>
> I use MapServer 5.6.5 with proj 4.7.0 (on Debian 64bits).
>
> When I call a GetMap using EPSG:4559 the image rendered is "wrong".
> EPSG:4559 and EPSG:2989 are almost identical and the images should be
> approximately similar.
> So, I test my EPSG code with testepsg.
>
> If I don't specify the epsg file location ('/opt/mapserver/bin/testepsg'
> EPSG:4559), I have :
> "ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is
> this a valid
> EPSG coordinate system?
> ERROR 1: Error occured translating EPSG:4559."
>
> If I specify the file location ('/opt/mapserver/bin/testepsg'
> '/opt/mapserver/share/proj/epsg' EPSG:4559)  :
> "Validate Succeeds.
> WKT[/opt/mapserver/share/proj/epsg] =
> PROJCS["unnamed",
>     GEOGCS["GRS 1980(IUGG, 1980)",
>         DATUM["unknown",
>             SPHEROID["GRS80",6378137,298.257222101],
>             TOWGS84[0,0,0,0,0,0,0]],
>         PRIMEM["paris",2.3372291666985],
> ...
> ...
> ...
> UNIT["Meter",1],
>     PARAMETER["standard_parallel_1",46.8]]
> PROJ.4 rendering of [/opt/mapserver/share/proj/epsg] = +proj=lcc
> +lat_1=46.8 +lat_0=46.8 +lon_0=2.33722917 +k_0=0.99987742 +x_0=600000
> +y_0=2200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +pm=2.3372291666985
> +units=m +no_defs
>
> ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is
> this a valid
> EPSG coordinate system?
> ERROR 1: Error occured translating EPSG:4559."
>
> I use to add EPSG codes in my mapfiles. It's the first time I have this
> problem.
>
> It seems that sometimes it is not sufficient to add a definition in the
> file EPSG...
> I have read this thread ("Unsupported SRS but available in epsg file") :
> http://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg04926.html
>
> My GDAL_DATA environnement variable is well defined. I tried to add the
> definition in cubewerx_extra.wkt without success.
> Any idea ?
>
> I send this message on this list but I can't know what application is at
> issue: GDAL or PROJ?
>
> NB: I apologize for my bad English.
>
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://lists.maptools.org/pipermail/proj/attachments/20101007/dcdc60e1/attachment-0001.htm 
>
> ------------------------------
>
> Message: 3
> Date: Thu, 07 Oct 2010 12:49:51 -0400
> From: Frank Warmerdam <warmerdam at pobox.com>
> Subject: Re: [Proj] EPSG CS not supported, but the epsg file contains
> 	the correct definition
> To: "PROJ.4 and general Projections Discussions"
> 	<proj at lists.maptools.org>
> Message-ID: <4CADFA2F.6060302 at pobox.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> SAEZ Laurent - SG/SPSSI/CPII/DOM/ETER wrote:
>   
>> When I call a GetMap using EPSG:4559 the image rendered is "wrong". 
>> EPSG:4559 and EPSG:2989 are almost identical and the images should be 
>> approximately similar.
>> So, I test my EPSG code with testepsg.
>>
>> If I don't specify the epsg file location ('/opt/mapserver/bin/testepsg' 
>> EPSG:4559), I have :
>> "ERROR 6: EPSG PCS/GCS code 4559 not found in EPSG support files.  Is 
>> this a valid
>> EPSG coordinate system?
>>     
>
> Laurent,
>
> PROJ.4 looks up epsg definitions from the epsg init file.
>
> GDAL normally looks them up in the gcs.csv and pcs.csv files
> though it does have fallback logic to look in the PROJ.4 epsg
> init file.  So the error you see is "testepsg" (from GDAL) not
> finding the coordinate system in the pcs.csv file and not able
> to find the epsg init file because it is in an usual place.
>
>   
>> It seems that sometimes it is not sufficient to add a definition in the 
>> file EPSG...
>> I have read this thread ("Unsupported SRS but available in epsg file") :
>> http://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg04926.html
>>
>> My GDAL_DATA environnement variable is well defined. I tried to add the 
>> definition in cubewerx_extra.wkt without success.
>> Any idea ?
>>
>> I send this message on this list but I can't know what application is at 
>> issue: GDAL or PROJ?
>>     
>
> At the start you mentioned that the GetMap result is wrong. How wrong is it?
> Just off by a bit or things in completely unrelated places or missing?
>
> Mostly MapServer uses the PROJ.4 epsg init file, so I'm surprised your
> change didn't work.  There are a few places that might actually ask
> GDAL/OGR for the definition in which case it would be important either
> for GDAL/OGR to also be able to find the epsg init file, or for you to
> add the definitions to pcs.csv and gcs.csv which might be messy.  I'm
> not sure what is going wrong.
>
> To give you the option, the pcs.csv and gcs.csv definitions are:
>
> pcs.csv
> 4559,"RRAF 1991 / UTM zone 
> 20N",9001,4558,16020,9807,1,0,4400,8801,0,9102,8802,-63,9102,8805,0.9996,9201,8806,500000,9001,8807,0,9001,,,,,,
>
> gcs.csv
> 4558,RRAF 1991,1047,Reseau de Reference des Antilles Francaises 
> 1991,1047,9122,7019,8901,1,0,6422,4560,0,9603,0,0,0,,,,
>
> the latest gcs.csv and pcs.csv files from GDAL trunk have these
> and should be safe to superinpose on older versions of GDAL.
>
>    http://svn.osgeo.org/gdal/trunk/gdal/data
>
> Best regards,
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101008/6eaf5cc2/attachment.html>

From ndzinn at comcast.net  Sat Oct  9 02:41:43 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Sat, 9 Oct 2010 04:41:43 -0500
Subject: [Proj] Transformations in small areas - was Stereo
	1970(EPSG31700)
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7026A655E@email002.lsu.edu>
References: <AANLkTi=Gvu4jFnMt96td2z1QO3NbGfa0FyOHC8uXp3Ad@mail.gmail.com><4CA9E5C0.90803@pobox.com><AANLkTikN1d37f67sKj=WMv0EPWP5BehjLP8_egGTUV4z@mail.gmail.com><AANLkTinBQfTsgTjQfYU7_6GfijXSv9ti8iEK77qifozv@mail.gmail.com><E4AB3DD44D22854B819908379DE4AD49F861@SETHNWS023.carmenta.se><643EEA7AE108436CAB93FB03D8FB1223@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F91C@SETHNWS023.carmenta.se><09B3565357BA4DA4B8DD61CB2CB0BC4E@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49F96C@SETHNWS023.carmenta.se><3BA2D908A1B64E00A5335A87EB76C854@NoelHmPC><E4AB3DD44D22854B819908379DE4AD49FA23@SETHNWS023.carmenta.se><D2BA211850844B32A24AEF489285AF31@NoelHmPC>
	<B597ADFC46B67741B18EA6AA13613FF7026A655E@email002.lsu.edu>
Message-ID: <2FBE59932BD04A70B9C11444137C2695@NoelHmPC>

Re: [Proj] Transformations in small areas - was Stereo 1970 (EPSG31700)Thanks for the practical perspective, Cliff.

Processing Doppler data tied to Portuguese survey monuments along the Angola coast in the 1980s led me to conclude that Camacupa and the broadcast Doppler reference frame of the time were aligned differently with respect to north.  But that's a terrestrial or topographic (mis)alignment, i.e. on the surface.  Why model that with rotations about the geocentric axes (as in Bursa-Wolfe)?  Molodensky-Badekas, on the other hand, translates the rotation center to the terrestrial surface where it makes sense physically (enough reason) and it eliminates (almost all) the correlations between the rotations and the geocentric translations (another excellent reason).  

You are correct that there is a sweet spot for a 7-parameter transformation.  The area has to be big enough in the DOP sense described earlier (sufficiently reduced correlations), but not so large that the distortions in a large local datum don't overwhelm the modeling power of a paltry few (7) parameters, in which case grid interpolation is the right answer.  So, I agree with your conclusion ... it depends.  That's not the conventional wisdom, however!

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)



From: Clifford J Mugnier 
Sent: Friday, October 08, 2010 11:44 AM
To: PROJ.4 and general Projections Discussions 
Subject: Re: [Proj] Transformations in small areas - was Stereo 1970(EPSG31700)



In my PE&RS column on the Grids and Datums of Namibia, I quoted Professor Charles Merry, now retired from the University of Cape Town:

. "Turning now to Namibia, the results for this datum are summarized . Although the rotations are not as large as those in Zimbabwe and are barely significant, they do serve to model distortions in the geodetic network and hence provide an improved fit between this network and the CTS.  Again it must be emphasized that these rotations have no physical interpretation.  As in all the countries investigated, except for South Africa, the scale factor plays no major role.  Although the seven-parameter set does improve the fit, it is by no means as remarkable an improvement as that experienced in Zimbabwe and it is debatable whether the extra effort is worth it.  Consequently, we recommend that (the-Ed.) three-parameter transformation shown: ?X = +616.6 m ±1.3 m, ?Y = +103.0 m  ±1.3 m, ?Z = -256.6 m ±1.3 m.  . As in Zimbabwe, the Namibian networks suffer from significant distortions but in this case a seven-parameter transformation provides little improvement over a three-parameter transformation." 

-------------------------------------------

I have used 7-parameter transformations from time-to-time in the past several decades of my practice, but when I have done so, I took particular notice of the distance of the country/region of interest from the origin point of the classical datum.  When close, I use the Bursa-Wolfe 7-parameter model (such as the distance of Trinidad & Tobago from La Canoa, Venezuela), and when a great distance from the datum origin (such as the distance of the City of Guayaquil, Ecuador from La Canoa, Venezuela), I have used the Molodensky model.  The differentiation allows scaling of the translation parameters.  There is zero difference in the accuracy of the resultant transformation, it just "looks" better when perusing the relative magnitudes of the translation parameters for other countries in the region.  Who cares about the "look?"  The local government's Federal Agency with jurisdiction for official approval.

One can see that there are diminishing returns in blindly increasing the area in order to justify a 7-parameter transformation.  Areas can increase so large that there are too many local distortions in varying meridianol chains to allow a single transformation of any type other than a "surface fit" such as implemented with a NadCon or NTv2 approach.  The generalization one can make for this is ... it depends ...  :-)



Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group




--------------------------------------------------------------------------------
From: proj-bounces at lists.maptools.org on behalf of Noel Zinn (cc)
Sent: Fri 08-Oct-10 07:27
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Transformations in small areas - was Stereo 1970 (EPSG31700)


Mikael,

> But I thought you extended the advice to people like me, who usually have
> to choose between different published datum shifts.

Guilty, I confess, but there is a reason.  There are two ways to change a
practice, from the top down (datum shift "derivers" in this case) and from
the bottom up (datum shift "choosers" or "consumers" in this case).  Fashion
is known to work both ways.  Haute Couture at the top and "street smarts" at
the bottom.  Well, having observed geodetic practice on this topic during
the last decade I despair.  Top down change isn't happening.  Authoritative
agencies that should know better (NATO among them) are cranking out bad
7-parameter datum transformations (e.g. for Cyprus, way too small by any
standard).  The time has come for bottom-up change.  Datum transformation
consumers need to be more discriminating.  I was purposely being
provocative.

As I wrote previously, "small" can be defined quantitatively based on the
dilution of precision of the 7-parameter adjustment.  Dilution of precision
(DOP) is a GPS concept, a unitless number that is a function of the number
of GPS satellites available and their distribution in space relative to the
observer (it's related to the trace of the variance-covariance matrix
mathematically).  DOP is the multiplier of random observation error into
random coordinate error.  It needs to be as small as possible.  Well,
7-parameter derivation adjustments have a DOP, too.  I call it P7DOP.  The
number of survey points used corresponds to the number of satellites and the
distribution in space corresponds to the area over which the survey points
are spread.  Reduce either (number of survey points or the area) and DOP
increases.  Not good.  An acceptable DOP is a judgment call, but at least
it's a quantitative judgment.  Australia with 80 survey points gives a DOP
of 2.2.  This means that if the average coordinate random error of the
survey points used is 1 meter (could be better or worse), then the average
parameter error is 2.2 meters.  I judge that to be acceptable.  Germany with
80 survey points gives a DOP of 10.2 (unacceptable to me).  With just 20
survey points the Germany DOP is 21 (even worse).  That's how it works.
Most surveyors and navigators want their GPS DOPs to be under 3.

Your dissection of the OSGB 7-parameter shift is a little difficult for me
to follow, but creative.  You begin by noting that a 3-parameter and a
7-parameter transformation ought to agree at some point.  It's interesting
to note that at a single point it's possible to derive many 3-parameter
shifts, not just (dX, dY, dZ).  (rX, rY, dS), (rY, rZ, dS) and (dY, rX, rY)
are among the many possibilities.  The derivation of a 7-parameter
transformation at a single point is a singularity; can't be done (but I know
that you didn't mean to imply that).

You then go on to detail the consequences of the 20.489 ppm dS (change in
scale).  This is an enormous dS by 7-parameter standards and an omen of a
questionable transformation.  Multiplied by the earth radius in Great
Britain, this dS results in a height change of 130 meters.   Shouldn't that
have been handled by the translations?  Or is this really a scale change
between OSGB and WGS?  Not likely.  This dS is twice the ppm difference
between the smallest foot (Clarke's) and largest foot (British 1936) in the
EPSG Unit of Measure table.  So, it's physical reality is questionable, as
is further reasoning derived from this dS frankly.  We can (and should)
derive parameters with valid physical interpretations using the
Molodensky-Badekas model.

The UK is a tough place to think about the interplay among the 7 parameters.
There are six places in the world where it's easy: the two poles and the
four intersections of the X and Y axes with the Equator.  Take one of them,
0N/0E in the Gulf of Guinea, the intersection of Greenwich and the Equator.
At that point dX is indistinguishable from dS (i.e. 100% correlated), dY is
indistinguishable from rZ,  dZ is indistinguishable from rY,  and rX does
nothing.  How large an area does it take to reduce those correlations
enough?  Until you get to that size, deriving (and using in my opinion) a
7-parameter transformation is poor geodetic practice.

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Friday, October 08, 2010 4:36 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Transformations in small areas - was Stereo 1970 (EPSG
31700)

> Hello Noel,
>
>> I appreciate the exchange.
>
> So do I. What you say is quite interesting.
>
>> ... my advice to use 3-parameter translations in a small area ...
>
> Okay, I can accept this as an advice to people who derive new
> datum shifts, like yourself. As long as you can estimate the
> error, and the error is acceptable, why not?  But I thought you
> extended the advice to people like me, who usually have to choose
> between different published datum shifts.  I agree that a 7-parameter
> datum shift is not necessarily better than a 3-parameter one, and
> the accuracies quoted by EPSG are often hard or impossible to compare.
> But I don't see that I should avoid using a published datum shift,
> just because it uses 7 parameters in a "small" area.
>
>> 7-parameter derivations in small frontiers are ill conditioned (my
>> thesis)
>> ...
>> because 7-parameter transformations are no more "accurate" in a small
>> area than a 3-parameter translation derived from the same data set.
>
> I am sure you are right, for a given value of "small".
>    What surprised me is when you said that Romania and even Germany
> are small in this sense.  Romania is about 700 km in diameter,
> Germany is 800 km, while Australia (which you said is large enough)
> is 3800 km. So you are saying that the threshold for "smallness" is
> somewhere between 800 and 3800 km.
>   I would have expected the threshold to be more like 100 km.
>
> My example of the 3-parameter transform for OSGB 1936 may, as you
> say, not be the best possible 3-parameter transform for this datum.
>
>> Tfm Code 1039 provides us the opportunity to test my assertion...
>
> That would be quite interesting, but a bit of work as you say.
> But I think I can predict roughly how good the best 3-parameter
> transformation could be.
>    The idea is that a 3-parameter and a 7-parameter transform
> for the same area ought to agree exactly on at least one point.
> Around this fixed point, the advantage of the 7-parameter transform
> is that it can supply a rotation and a scale change.  Well, three
> rotations in 3D space, but they should correspond to a single
> rotation around an oblique axis through the fixed point.
> I think this single rotation would be about as large as the
> three basic rotations, but I could be wrong.  Anyway, in the
> OSGB example, I think the main improvement of the 7-parameter
> transform comes from the scale change, not the rotations (since
> they are fairly small), and the scale change is -20.489 ppm.
> If the best possible 3-parameter transform for OSGB agrees with
> the given 7-parameter transform in the middle of Great Britain,
> then the maximal radius is about 540 km, and 540 km * 20.489 ppm =
> = 11 meters.
>    So, the best possible 3-parameter transform for OSGB has to
> deviate from the given 7-parameter transform by up to 11 meters,
> (either at Land's End in the southwest or the Orkney Islands in
> the north).  Since the 7-parameter transform is claimed to be at
> most 5 meters wrong, this means that the best 3-parameter transform
> is worse.  (In the best possible case, the 5-meter error would
> occur in both Land's End and Orkney, in a direction that makes
> the 3-parameter transform wrong by only 6 meters. But that's
> optimistic.)
>
> From this kind of argument, I think one could estimate the
> threshold of "smallness" from the rotations and scale change
> of a 7-parameter transformation, together with its accuracy.
>
> A more general "smallness" threshold could perhaps be computed
> from the average rotations and scale changes among many typical
> 7-parameter transforms (and their accuracies).
>
> Best regards,
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
> Sent: den 8 oktober 2010 05:27
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] Transformations in small areas - was Stereo 1970 (EPSG
> 31700)
>
> Thanks, Mikael.  I appreciate the exchange.
>
> [Complete message at
> http://lists.maptools.org/pipermail/proj/2010-October/005429.html ]
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




--------------------------------------------------------------------------------


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101009/807aa6d7/attachment.html>

From Mikael.Rittri at carmenta.com  Tue Oct 12 01:45:48 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 12 Oct 2010 08:45:48 +0000
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas
 datum shift into 7 parameters
Message-ID: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se>


A Molodensky-Badekas datum shift is represented by 10 parameters. 
But it can be compressed to a 7-parameter representation. 

As Noel Zinn has explained (http://lists.maptools.org/pipermail/proj/2010-October/005424.html),
the 10-parameter representation has advantages over the 7-parameter 
one, for people who derive, analyze and compare datum shifts. 

But for people who just use a datum shift to transform coordinates,
the 7-parameter representation gives the same results. In this 
limited sense, the compression is lossless, which is useful if 
your software (like Proj.4) does not support 10-parameter M-B.

I learned how to do the compression from Melita Kennedy (thanks 
again!).  And I have now realized that one can persuade Proj.4 to 
do most of the work of the compression process.  Since I thought 
this is rather nice, I'd like to explain it by an example. 

Example: M-B datum shift EPSG:1096, "La Canoa to WGS 84 (2)",
which has the same parameters as EPSG:1771, "La Canoa to REGVEN (1)".
    
    Source ellipsoid: International 1924.
    Target ellipsoid: WGS 84.
	
    dX = -270.933 m
    dY =  115.599 m
    dZ = -360.226 m
    RX = -5.266 arc sec 
    RY = -1.238 arc sec 
    RZ =  2.381 arc sec 
    dS = -5.109 ppm
    eX =  2464351.59 m
    eY = -5783466.61 m
    eZ =   974809.81 m

where eX,eY,eZ are the geocentric coordinates of the so-called 
evaluation point.

In principle, the equivalent 7-parameter datum shift should have 
the same rotations RX, RY, RZ and the same scale difference dS.
But there is a catch: the sign convention for the rotations. 
M-B uses the same sign convention as Coordinate Frame Rotation, 
while cs2cs uses the opposite convention of the Position Vector 
Transform, so we must negate the three rotations.  So, in cs2cs 
syntax, the 7-parameter datum shift we seek has the form

    +towgs84=?,?,?,5.266,1.238,-2.381,-5.109
	
To find the question marks, we have to do three steps.  

i) Make a 7-parameter "something" by temporarily replacing 
   the question marks by zeros.  It is not really a datum
   shift, but we might call it a 7-parameter compressor. 
   Use it in a cs2cs command like this
   
   >cs2cs -f "%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=geocent

   As input, use the evaluation point eX,eY,eZ of the M-B datum shift:

   2464351.59   -5783466.61   974809.81

   We get the output 

   2464278.090  -5783490.207  974643.507

ii) Now subtract the output row from the input row, and we get

        73.500        23.597     166.303

iii) Then add the original dX,dY,dZ from the M-B datum shift, 
     which were -270.933,115.599,-360.226, and we get

      -197.433       139.196    -193.923
   
The last three values are the question marks in our 7-parameter 
datum shift. 

To test it, we use the test point given in section 2.4.4.1, 
pages 114-115, EPSG Guidance Note 7.2, http://www.epsg.org/guides/docs/G7-2.pdf 

>cs2cs +ellps=intl +proj=longlat +towgs84=-197.433,139.196,-193.923,5.226,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=longlat
66d4'48.091"W   9d35'0.386"N    201.46
66d4'54.705"W   9d34'49.001"N   180.499

According to GN 7.2, the result should have been  

66°04'54.705"W	9°34'49.001"N   180.51 m

so we have achieved a lossless compression - apart from the 
unexplained difference of about 1.1 cm in the ellipoidal height.  
  
Regards,
Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com

From cjmce at lsu.edu  Tue Oct 12 07:37:26 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Tue, 12 Oct 2010 09:37:26 -0500
Subject: [Proj] Using Proj.4 to compress a 10-parameter
	Molodensky-Badekas datum shift into 7 parameters
References: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A6580@email002.lsu.edu>

The "evaluation point" is the Datum Origin, a rather important item.  In regard to the "unexplained" difference in ellipsoid height results, my guess is the approximations made by the inverse algorithm from Geocentric coordinates.
 
Personally, I prefer the elegance of incorporating the Datum Origin.  
 
I have also been told by Dr. Muneendra Kumar that Badekas had nothing to do with Molodensky's original method.  I believe they were in school together at the same time, and Prof. Molodensky preceeded them on another continent by some years if not decades.
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of Mikael Rittri
Sent: Tue 12-Oct-10 03:45
To: PROJ.4 and general Projections Discussions
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum shift into 7 parameters




A Molodensky-Badekas datum shift is represented by 10 parameters.
But it can be compressed to a 7-parameter representation.

As Noel Zinn has explained (http://lists.maptools.org/pipermail/proj/2010-October/005424.html),
the 10-parameter representation has advantages over the 7-parameter
one, for people who derive, analyze and compare datum shifts.

But for people who just use a datum shift to transform coordinates,
the 7-parameter representation gives the same results. In this
limited sense, the compression is lossless, which is useful if
your software (like Proj.4) does not support 10-parameter M-B.

I learned how to do the compression from Melita Kennedy (thanks
again!).  And I have now realized that one can persuade Proj.4 to
do most of the work of the compression process.  Since I thought
this is rather nice, I'd like to explain it by an example.

Example: M-B datum shift EPSG:1096, "La Canoa to WGS 84 (2)",
which has the same parameters as EPSG:1771, "La Canoa to REGVEN (1)".
   
    Source ellipsoid: International 1924.
    Target ellipsoid: WGS 84.
       
    dX = -270.933 m
    dY =  115.599 m
    dZ = -360.226 m
    RX = -5.266 arc sec
    RY = -1.238 arc sec
    RZ =  2.381 arc sec
    dS = -5.109 ppm
    eX =  2464351.59 m
    eY = -5783466.61 m
    eZ =   974809.81 m

where eX,eY,eZ are the geocentric coordinates of the so-called
evaluation point.

In principle, the equivalent 7-parameter datum shift should have
the same rotations RX, RY, RZ and the same scale difference dS.
But there is a catch: the sign convention for the rotations.
M-B uses the same sign convention as Coordinate Frame Rotation,
while cs2cs uses the opposite convention of the Position Vector
Transform, so we must negate the three rotations.  So, in cs2cs
syntax, the 7-parameter datum shift we seek has the form

    +towgs84=?,?,?,5.266,1.238,-2.381,-5.109
       
To find the question marks, we have to do three steps. 

i) Make a 7-parameter "something" by temporarily replacing
   the question marks by zeros.  It is not really a datum
   shift, but we might call it a 7-parameter compressor.
   Use it in a cs2cs command like this
  
   >cs2cs -f "%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=geocent

   As input, use the evaluation point eX,eY,eZ of the M-B datum shift:

   2464351.59   -5783466.61   974809.81

   We get the output

   2464278.090  -5783490.207  974643.507

ii) Now subtract the output row from the input row, and we get

        73.500        23.597     166.303

iii) Then add the original dX,dY,dZ from the M-B datum shift,
     which were -270.933,115.599,-360.226, and we get

      -197.433       139.196    -193.923
  
The last three values are the question marks in our 7-parameter
datum shift.

To test it, we use the test point given in section 2.4.4.1,
pages 114-115, EPSG Guidance Note 7.2, http://www.epsg.org/guides/docs/G7-2.pdf

>cs2cs +ellps=intl +proj=longlat +towgs84=-197.433,139.196,-193.923,5.226,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=longlat
66d4'48.091"W   9d35'0.386"N    201.46
66d4'54.705"W   9d34'49.001"N   180.499

According to GN 7.2, the result should have been 

66°04'54.705"W  9°34'49.001"N   180.51 m

so we have achieved a lossless compression - apart from the
unexplained difference of about 1.1 cm in the ellipoidal height. 
 
Regards,
Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101012/9d6198fe/attachment.html>

From ndzinn at comcast.net  Tue Oct 12 08:00:19 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Tue, 12 Oct 2010 10:00:19 -0500
Subject: [Proj] Using Proj.4 to compress a
	10-parameterMolodensky-Badekas datum shift into 7 parameters
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7026A6580@email002.lsu.edu>
References: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se>
	<B597ADFC46B67741B18EA6AA13613FF7026A6580@email002.lsu.edu>
Message-ID: <3E945C7C448C4E498D344E0C6B9CCCBB@NoelHmPC>

[Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum shift into 7 parametersMuneendra Kumar and John Badekas may have been at Ohio State at the same time.  Molodensky was, indeed, from a previous generation.  I believe that Professor Badekas recently retired from the National Technical University of Athens.  He, too, was a photogrammetrist. 

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)



From: Clifford J Mugnier 
Sent: Tuesday, October 12, 2010 9:37 AM
To: PROJ.4 and general Projections Discussions 
Subject: Re: [Proj] Using Proj.4 to compress a 10-parameterMolodensky-Badekas datum shift into 7 parameters


The "evaluation point" is the Datum Origin, a rather important item.  In regard to the "unexplained" difference in ellipsoid height results, my guess is the approximations made by the inverse algorithm from Geocentric coordinates.

Personally, I prefer the elegance of incorporating the Datum Origin.  

I have also been told by Dr. Muneendra Kumar that Badekas had nothing to do with Molodensky's original method.  I believe they were in school together at the same time, and Prof. Molodensky preceeded them on another continent by some years if not decades.

Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group




--------------------------------------------------------------------------------
From: proj-bounces at lists.maptools.org on behalf of Mikael Rittri
Sent: Tue 12-Oct-10 03:45
To: PROJ.4 and general Projections Discussions
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum shift into 7 parameters




A Molodensky-Badekas datum shift is represented by 10 parameters.
But it can be compressed to a 7-parameter representation.

As Noel Zinn has explained (http://lists.maptools.org/pipermail/proj/2010-October/005424.html),
the 10-parameter representation has advantages over the 7-parameter
one, for people who derive, analyze and compare datum shifts.

But for people who just use a datum shift to transform coordinates,
the 7-parameter representation gives the same results. In this
limited sense, the compression is lossless, which is useful if
your software (like Proj.4) does not support 10-parameter M-B.

I learned how to do the compression from Melita Kennedy (thanks
again!).  And I have now realized that one can persuade Proj.4 to
do most of the work of the compression process.  Since I thought
this is rather nice, I'd like to explain it by an example.

Example: M-B datum shift EPSG:1096, "La Canoa to WGS 84 (2)",
which has the same parameters as EPSG:1771, "La Canoa to REGVEN (1)".
   
    Source ellipsoid: International 1924.
    Target ellipsoid: WGS 84.
       
    dX = -270.933 m
    dY =  115.599 m
    dZ = -360.226 m
    RX = -5.266 arc sec
    RY = -1.238 arc sec
    RZ =  2.381 arc sec
    dS = -5.109 ppm
    eX =  2464351.59 m
    eY = -5783466.61 m
    eZ =   974809.81 m

where eX,eY,eZ are the geocentric coordinates of the so-called
evaluation point.

In principle, the equivalent 7-parameter datum shift should have
the same rotations RX, RY, RZ and the same scale difference dS.
But there is a catch: the sign convention for the rotations.
M-B uses the same sign convention as Coordinate Frame Rotation,
while cs2cs uses the opposite convention of the Position Vector
Transform, so we must negate the three rotations.  So, in cs2cs
syntax, the 7-parameter datum shift we seek has the form

    +towgs84=?,?,?,5.266,1.238,-2.381,-5.109
       
To find the question marks, we have to do three steps. 

i) Make a 7-parameter "something" by temporarily replacing
   the question marks by zeros.  It is not really a datum
   shift, but we might call it a 7-parameter compressor.
   Use it in a cs2cs command like this
  
   >cs2cs -f "%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=geocent

   As input, use the evaluation point eX,eY,eZ of the M-B datum shift:

   2464351.59   -5783466.61   974809.81

   We get the output

   2464278.090  -5783490.207  974643.507

ii) Now subtract the output row from the input row, and we get

        73.500        23.597     166.303

iii) Then add the original dX,dY,dZ from the M-B datum shift,
     which were -270.933,115.599,-360.226, and we get

      -197.433       139.196    -193.923
  
The last three values are the question marks in our 7-parameter
datum shift.

To test it, we use the test point given in section 2.4.4.1,
pages 114-115, EPSG Guidance Note 7.2, http://www.epsg.org/guides/docs/G7-2.pdf

>cs2cs +ellps=intl +proj=longlat +towgs84=-197.433,139.196,-193.923,5.226,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=longlat
66d4'48.091"W   9d35'0.386"N    201.46
66d4'54.705"W   9d34'49.001"N   180.499

According to GN 7.2, the result should have been 

66°04'54.705"W  9°34'49.001"N   180.51 m

so we have achieved a lossless compression - apart from the
unexplained difference of about 1.1 cm in the ellipoidal height. 
 
Regards,
Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




--------------------------------------------------------------------------------


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101012/1c56fd34/attachment.html>

From Mikael.Rittri at carmenta.com  Wed Oct 13 02:03:45 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 13 Oct 2010 09:03:45 +0000
Subject: [Proj] Using Proj.4 to compress a 10-parameter
 Molodensky-Badekas datum shift into 7 parameters
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7026A6580@email002.lsu.edu>
References: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se>
	<B597ADFC46B67741B18EA6AA13613FF7026A6580@email002.lsu.edu>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49FBF6@SETHNWS023.carmenta.se>

Clifford,
thanks for your comments.

You wrote:
> In regard to the "unexplained" difference in ellipsoid height results,
> my guess is the approximations made by the inverse algorithm 
> from Geocentric coordinates.

Well, I hope it is just something like that.  But I don't know how 
accurately cs2cs implements this inverse algorithm.

> The "evaluation point" is the Datum Origin, a rather important item.

"Evaluation point" is the term used in the EPSG database, but I see
that they sometimes call it "rotation point" in their Guidance Note 7.2.

No, it isn't.

I mean, the datum origin may be important, but the origin of the
La Canoa datum is at
   
63° 51' 34.880" W, 08° 34' 17.170" N
(source: your column on Venezuela, http://www.asprs.org/resources/grids/12-2000-venezuela.pdf )

And when I convert the evaluation point of my example datum shift
to long/lat, I get a different location:

>cs2cs +ellps=intl +proj=geocent +to +ellps=intl +proj=longlat
2464351.59   -5783466.61   974809.81
66d55'15.629"W  8d52'22.857"N -16138.645

which is about 340 km west of the datum origin, and nearer
the centre of Venezuela.

Rather, I think the evaluation point in this example
might be the average of all observation points used
to derive the datum shift.  Noel used this approach in
pages 45 - ... of http://www.hydrometronics.com/downloads/Molodensky-Badekas.pdf
That could also explain why the evaluation point is 16 km
below the ellipsoid surface (caused by the curvature of the
Earth).

> ...and Prof. Molodensky preceeded them [Dr. Kumar and Prof. Badekas]
> on another continent by some years if not decades.

That reminds me of something I have wondered about:
Wasn't Helmert much earlier than Burša and Wolf?

Regards,

Mikael Rittri
Carmenta AB
Sweden
www.carmenta.com
________________________________

From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Clifford J Mugnier
Sent: den 12 oktober 2010 16:37
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum shift into 7 parameters


The "evaluation point" is the Datum Origin, a rather important item.  In regard to the "unexplained" difference in ellipsoid height results, my guess is the approximations made by the inverse algorithm from Geocentric coordinates.

Personally, I prefer the elegance of incorporating the Datum Origin. 

I have also been told by Dr. Muneendra Kumar that Badekas had nothing to do with Molodensky's original method.  I believe they were in school together at the same time, and Prof. Molodensky preceeded them on another continent by some years if not decades.

Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic]
Voice and Facsimile:  (225) 578-4578 [Research]
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the
Louisiana Society of Professional Surveyors
Fellow Emeritus of the ASPRS
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of Mikael Rittri
Sent: Tue 12-Oct-10 03:45
To: PROJ.4 and general Projections Discussions
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum shift into 7 parameters

[see post at http://lists.maptools.org/pipermail/proj/2010-October/005436.html ]




From support.mn at elisanet.fi  Wed Oct 13 07:43:49 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Wed, 13 Oct 2010 17:43:49 +0300 (EEST)
Subject: [Proj] Using Proj.4 to compress a 10-parameter
 Molodensky-Badekas datum shift into 7 parameters
Message-ID: <22382614.3963041286981030176.JavaMail.support.mn@elisanet.fi>

Hello,

there is also an additional source off errors when several transformations
are done one after another ... and that is the order of evaluation. You might
try to swap the order. The order of evaluation may generate differences.
It is not the same to rotate something that is already shifted than something
that is not and there after shift the rotated value. Usually the difference is very
small as now seems to be the case.

Regards: Janne.

----------------------------------------

Mikael Rittri [Mikael.Rittri at carmenta.com] kirjoitti: 
> so we have achieved a lossless compression - apart from the 
> unexplained difference of about 1.1 cm in the ellipoidal height.  
>   



From ndzinn at comcast.net  Fri Oct 15 11:57:24 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Fri, 15 Oct 2010 13:57:24 -0500
Subject: [Proj] Using Proj.4 to compress a 10-parameter
	Molodensky-Badekas datum shift into 7 parameters
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se>
References: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se>
Message-ID: <5E8360C71C9947BA90F715AD187F5FF0@NoelHmPC>

Mikael,

Your provision of a worked example "compressing" a M-B transformation into a 
7-parameter transformation is a real contribution.  Thanks ... and thanks to 
Melita Kennedy, too.

I've coded this example in Matlab and agree with your final results
> 66d4'54.705"W   9d34'49.001"N   180.499

Nevertheless, I disagree with your first intermediate computation
>  2464278.090  -5783490.207  974643.507

My intermediate results are
=>  2464278.08979296  -5783490.39620226   974642.385933922

These are decimetric differences.  Too much.  Concerned, I computed the same 
in a commercial offering, Blue Marble Geographic Calculator.  Blue Marble 
agrees with Matlab to the 4 decimal places I happened to have the precision 
set.  So, I believe that Proj.4 is wrong in this case.  You might consider 
writing a bug report.  (BTW, these differences have nothing to do the use of 
a single, small-angle rotation matrix versus 3 concatenated single-angle 
matrices as done by ESRI.)

We agree in the final result because the next intermediate steps (computing 
dX, dY, dZ, which are also different in my case) are fortuitously self 
correcting (at least at the single evaluation point).

So, thanks again, Mikael, for this useful procedure.  More comments later.

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Tuesday, October 12, 2010 3:45 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas 
datum shift into 7 parameters

>
> A Molodensky-Badekas datum shift is represented by 10 parameters.
> But it can be compressed to a 7-parameter representation.
>
> As Noel Zinn has explained 
> (http://lists.maptools.org/pipermail/proj/2010-October/005424.html),
> the 10-parameter representation has advantages over the 7-parameter
> one, for people who derive, analyze and compare datum shifts.
>
> But for people who just use a datum shift to transform coordinates,
> the 7-parameter representation gives the same results. In this
> limited sense, the compression is lossless, which is useful if
> your software (like Proj.4) does not support 10-parameter M-B.
>
> I learned how to do the compression from Melita Kennedy (thanks
> again!).  And I have now realized that one can persuade Proj.4 to
> do most of the work of the compression process.  Since I thought
> this is rather nice, I'd like to explain it by an example.
>
> Example: M-B datum shift EPSG:1096, "La Canoa to WGS 84 (2)",
> which has the same parameters as EPSG:1771, "La Canoa to REGVEN (1)".
>
>    Source ellipsoid: International 1924.
>    Target ellipsoid: WGS 84.
>
>    dX = -270.933 m
>    dY =  115.599 m
>    dZ = -360.226 m
>    RX = -5.266 arc sec
>    RY = -1.238 arc sec
>    RZ =  2.381 arc sec
>    dS = -5.109 ppm
>    eX =  2464351.59 m
>    eY = -5783466.61 m
>    eZ =   974809.81 m
>
> where eX,eY,eZ are the geocentric coordinates of the so-called
> evaluation point.
>
> In principle, the equivalent 7-parameter datum shift should have
> the same rotations RX, RY, RZ and the same scale difference dS.
> But there is a catch: the sign convention for the rotations.
> M-B uses the same sign convention as Coordinate Frame Rotation,
> while cs2cs uses the opposite convention of the Position Vector
> Transform, so we must negate the three rotations.  So, in cs2cs
> syntax, the 7-parameter datum shift we seek has the form
>
>    +towgs84=?,?,?,5.266,1.238,-2.381,-5.109
>
> To find the question marks, we have to do three steps.
>
> i) Make a 7-parameter "something" by temporarily replacing
>   the question marks by zeros.  It is not really a datum
>   shift, but we might call it a 7-parameter compressor.
>   Use it in a cs2cs command like this
>
>   >cs2cs -f "%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 
> +to +datum=WGS84 +proj=geocent
>
>   As input, use the evaluation point eX,eY,eZ of the M-B datum shift:
>
>   2464351.59   -5783466.61   974809.81
>
>   We get the output
>
>   2464278.090  -5783490.207  974643.507
>
> ii) Now subtract the output row from the input row, and we get
>
>        73.500        23.597     166.303
>
> iii) Then add the original dX,dY,dZ from the M-B datum shift,
>     which were -270.933,115.599,-360.226, and we get
>
>      -197.433       139.196    -193.923
>
> The last three values are the question marks in our 7-parameter
> datum shift.
>
> To test it, we use the test point given in section 2.4.4.1,
> pages 114-115, EPSG Guidance Note 7.2, 
> http://www.epsg.org/guides/docs/G7-2.pdf
>
>>cs2cs +ellps=intl +proj=longlat 
>>+towgs84=-197.433,139.196,-193.923,5.226,1.238,-2.381,-5.109 +to 
>>+datum=WGS84 +proj=longlat
> 66d4'48.091"W   9d35'0.386"N    201.46
> 66d4'54.705"W   9d34'49.001"N   180.499
>
> According to GN 7.2, the result should have been
>
> 66°04'54.705"W 9°34'49.001"N   180.51 m
>
> so we have achieved a lossless compression - apart from the
> unexplained difference of about 1.1 cm in the ellipoidal height.
>
> Regards,
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From ovv at hetnet.nl  Sat Oct 16 05:56:05 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Sat, 16 Oct 2010 14:56:05 +0200
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas
	datum shift into 7 parameters
Message-ID: <75FB39B3272B4ABC8C1E6AA57D8804C8@PCHP>

In reply to:

[Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum 
shift into 7 parameters
Noel Zinn (cc) ndzinn at comcast.net
Fri Oct 15 13:57:24 EST 2010

Your provision of a worked example "compressing" a M-B transformation into a
7-parameter transformation is a real contribution.  Thanks ... and thanks to
Melita Kennedy, too.

I've coded this example in Matlab and agree with your final results
> 66d4'54.705"W   9d34'49.001"N   180.499

Nevertheless, I disagree with your first intermediate computation
>  2464278.090  -5783490.207  974643.507

My intermediate results are
=>  2464278.08979296  -5783490.39620226   974642.385933922

etc...

REPLY:

I have no difficulties reproducing the EPSG example exactly with my own 
Molodensky-Badekas routines or with Mikaels procedure around an M-B 
corrected set of dX,dY,dZ for a 7-parameter datum shift.
Please note that M-B parameters are usually stated as for a coordinate frame 
rotation model, whereas PROJ4 uses a position vector rotation model.
One shouldn't always blame PROJ4.
I haven't tested the geocentric -> geodetic code from PROJ4's geocent.c, but 
it certainly looks good.

Oscar van Vlijmen







From ndzinn at comcast.net  Sat Oct 16 07:42:42 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Sat, 16 Oct 2010 09:42:42 -0500
Subject: [Proj] Using Proj.4 to compress a 10-parameter
	Molodensky-Badekasdatum shift into 7 parameters
In-Reply-To: <75FB39B3272B4ABC8C1E6AA57D8804C8@PCHP>
References: <75FB39B3272B4ABC8C1E6AA57D8804C8@PCHP>
Message-ID: <51C51088D771440EA928DC122C4780FB@NoelHmPC>

Thanks for working this through.  Comments follow.

Oscar van Vlijmen wrote:
> I have no difficulties reproducing the EPSG example exactly with my own
> Molodensky-Badekas routines or with Mikaels procedure around an M-B
> corrected set of dX,dY,dZ for a 7-parameter datum shift.

Nor do I.  They agree at the evaluation point (maybe not elsewhere).

> Please note that M-B parameters are usually stated as for a coordinate 
> frame
> rotation model, whereas PROJ4 uses a position vector rotation model.
> One shouldn't always blame PROJ4.

Understood.  Mikael made that clear.  That's not the issue here.

> I haven't tested the geocentric -> geodetic code from PROJ4's geocent.c, 
> but
> it certainly looks good.

This may be the issue.  A quote from Mikael Rittri follows:

> i) Make a 7-parameter "something" by temporarily replacing
>   the question marks by zeros.  It is not really a datum
>   shift, but we might call it a 7-parameter compressor.
>   Use it in a cs2cs command like this
>
>   >cs2cs -f "%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109
> +to +datum=WGS84 +proj=geocent
>
>   As input, use the evaluation point eX,eY,eZ of the M-B datum shift:
>
>   2464351.59   -5783466.61   974809.81
>
>   We get the output
>
>   2464278.090  -5783490.207  974643.507

I contend that the correct output (delivered by my Matlab scripts and by 
Blue Marble) is
=>  2464278.090  -5783490.396   974642.386 (to the same precision)

If my assertion is correct, then Proj.4 has a slight problem.  It's not 
blame, just a request for an independent verification of this particular 
step (i) and (if verified) another possible improvement for Proj.4.

Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "OvV_HN" <ovv at hetnet.nl>
Sent: Saturday, October 16, 2010 7:56 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: [Proj] Using Proj.4 to compress a 10-parameter 
Molodensky-Badekasdatum shift into 7 parameters

> In reply to:
>
> [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum
> shift into 7 parameters
> Noel Zinn (cc) ndzinn at comcast.net
> Fri Oct 15 13:57:24 EST 2010
>
> Your provision of a worked example "compressing" a M-B transformation into 
> a
> 7-parameter transformation is a real contribution.  Thanks ... and thanks 
> to
> Melita Kennedy, too.
>
> I've coded this example in Matlab and agree with your final results
>> 66d4'54.705"W   9d34'49.001"N   180.499
>
> Nevertheless, I disagree with your first intermediate computation
>>  2464278.090  -5783490.207  974643.507
>
> My intermediate results are
> =>  2464278.08979296  -5783490.39620226   974642.385933922
>
> etc...
>
> REPLY:
>
> I have no difficulties reproducing the EPSG example exactly with my own
> Molodensky-Badekas routines or with Mikaels procedure around an M-B
> corrected set of dX,dY,dZ for a 7-parameter datum shift.
> Please note that M-B parameters are usually stated as for a coordinate 
> frame
> rotation model, whereas PROJ4 uses a position vector rotation model.
> One shouldn't always blame PROJ4.
> I haven't tested the geocentric -> geodetic code from PROJ4's geocent.c, 
> but
> it certainly looks good.
>
> Oscar van Vlijmen
>
>
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From ovv at hetnet.nl  Sun Oct 17 01:15:05 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Sun, 17 Oct 2010 10:15:05 +0200
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas
	datum shift into 7 parameters
Message-ID: <4EA0933A9ECF4A31B38CE25B10B91163@PCHP>

IN REPLY TO:

[Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekasdatum shift 
into 7 parameters
Noel Zinn (cc) ndzinn at comcast.net
Sat Oct 16 09:42:42 EST 2010

.......

> I haven't tested the geocentric -> geodetic code from PROJ4's geocent.c,
> but
> it certainly looks good.

.......

I contend that the correct output (delivered by my Matlab scripts and by
Blue Marble) is
=>  2464278.090  -5783490.396   974642.386 (to the same precision)

If my assertion is correct, then Proj.4 has a slight problem.  It's not
blame, just a request for an independent verification of this particular
step (i) and (if verified) another possible improvement for Proj.4.

Noel



REPLY:

I do get exactly the same output as stated above, so up to that point there 
is nothing wrong I guess.
Let's look at PROJ4's geocent. I took the code apart and tested both 
geocentric->geodetic functions.
Indeed, PROJ4's geocent.c has two functions. Which one is actually used, 
depends on a compiler directive.
The first code is from Ralph Toms. This code is optimized for speed. It uses 
a small fudge factor (AD_C). This introduces a small error, but it enhances 
the error stability especially for extremely high altitudes.
The second code is an iterative procedure, which gives nearly exact results 
(the iteration cut-off error is 1e-12).

Let's see. In the problem at hand my Molodenksy-Badekas routine arrives at 
an X,Y,Z of:
X = 2464278.0897929626; Y = -5783490.396202258; Z = 974642.3859339222;
Converted to lat, lon, height on WGS84 with the exact Borkowski procedure 
gives:
9.580277979760344, -66.08186260475033, 180.5140539117856
Converted with the iterative procedure from geocent.c gives in my test:
9.580277979760346, -66.08186260475033, 180.514053911902
Converted with the Toms procedure from geocent.c gives in my test:
9.580277981233836, -66.08186260475033, 180.51408141944557
The latter test differs by 5.3 micro-arcseconds in the latitude with the 
Borkowski method and 27.5 micrometers in the height.

I believe PROJ4's geocent uses by default the somewhat inaccurate Toms 
method for converting geocentric to geodetic.
But at least in my test it seems that the error is rather insignificantly 
small.
So the core of geocent.c seems OK.
Are the global structs filled correctly and are all parameters passed 
correctly?


Oscar van Vlijmen





From ndzinn at comcast.net  Sun Oct 17 05:44:35 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Sun, 17 Oct 2010 07:44:35 -0500
Subject: [Proj] Using Proj.4 to compress a 10-parameter
	Molodensky-Badekasdatum shift into 7 parameters
In-Reply-To: <4EA0933A9ECF4A31B38CE25B10B91163@PCHP>
References: <4EA0933A9ECF4A31B38CE25B10B91163@PCHP>
Message-ID: <40EA9083464C47A79D4B6D694944B67B@NoelHmPC>

Thanks, Oscar, for the useful tour of geocentric <=> geodetic conversions in 
Proj.4.  The geodetic => geocentric piece is (should be) exact in any 
formulation.  The geocentric => geodetic piece lends itself to an iterative 
solution for precision if you find yourself in a place humans can't inhabit 
normally.  Some of this ground we've covered previously in this forum, 
notably:

http://lists.maptools.org/pipermail/proj/2009-January/004315.html

To help me understand whether we agree of not, let me decompose Mikael 
Rittri's problem simply.

A 7-parameter datum transformation (geodetic <=> geodetic) has 3 parts: (1) 
geodetic => geocentric, (2) matrix manipulation on 3D geocentric (ECEF) 
coordinates involving translation, rotation and scale change, and then (3) 
geocentric => geodetic (which is the only inexact piece of the process, but 
you can get any precision you desire).

Now, Mikael's first step of his (Melita's) compression process is just (2) 
of the above, the geocentric => geocentric matrix manipulation in 3D 
Cartesian space using the following Proj.4 command (if I understand 
correctly):

>cs2cs -f "%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 +to 
>+datum=WGS84 +proj=geocent

His input is  2464351.59   -5783466.61   974809.81

His output is  2464278.090  -5783490.207  974643.507

To reproduce this in Matlab I pulled out parts (1) and (3) from my 
7-parameter transformation code and using Mikael's input I get a different 
output (2464278.090  -5783490.396   974642.386) which is the same as that 
served up by your own Molodensky-Badekas code:

> Let's see. In the problem at hand my Molodenksy-Badekas routine arrives at
> an X,Y,Z of:
> X = 2464278.0897929626; Y = -5783490.396202258; Z = 974642.3859339222;

So, we agree then?  The Proj.4 geocentric => geocentric routine (cs2cs -f 
"%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 +to 
+datum=WGS84 +proj=geocent) has a decimetric difference with your code, my 
code and with Blue Marble.

I have verified that this difference is not due to the difference between 
the single rotation matrix normally used (small angle approximation) and the 
3 concatenated rotation matrices used by ESRI (for example), which is only 
millimetric in quantity.  Is it something going on under the hood in Proj.4, 
like an embedded call to geodetic <=> geocentric for some reason?  I don't 
know.  We could debate whether 19 centimeters in Y and 12 centimeters in Z 
is significant or not.  For a straight-up matrix manipulation, I think it 
is.

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "OvV_HN" <ovv at hetnet.nl>
Sent: Sunday, October 17, 2010 3:15 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: [Proj] Using Proj.4 to compress a 10-parameter 
Molodensky-Badekasdatum shift into 7 parameters

> IN REPLY TO:
>
> [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekasdatum 
> shift
> into 7 parameters
> Noel Zinn (cc) ndzinn at comcast.net
> Sat Oct 16 09:42:42 EST 2010
>
> .......
>
>> I haven't tested the geocentric -> geodetic code from PROJ4's geocent.c,
>> but
>> it certainly looks good.
>
> .......
>
> I contend that the correct output (delivered by my Matlab scripts and by
> Blue Marble) is
> =>  2464278.090  -5783490.396   974642.386 (to the same precision)
>
> If my assertion is correct, then Proj.4 has a slight problem.  It's not
> blame, just a request for an independent verification of this particular
> step (i) and (if verified) another possible improvement for Proj.4.
>
> Noel
>
>
>
> REPLY:
>
> I do get exactly the same output as stated above, so up to that point 
> there
> is nothing wrong I guess.
> Let's look at PROJ4's geocent. I took the code apart and tested both
> geocentric->geodetic functions.
> Indeed, PROJ4's geocent.c has two functions. Which one is actually used,
> depends on a compiler directive.
> The first code is from Ralph Toms. This code is optimized for speed. It 
> uses
> a small fudge factor (AD_C). This introduces a small error, but it 
> enhances
> the error stability especially for extremely high altitudes.
> The second code is an iterative procedure, which gives nearly exact 
> results
> (the iteration cut-off error is 1e-12).
>
> Let's see. In the problem at hand my Molodenksy-Badekas routine arrives at
> an X,Y,Z of:
> X = 2464278.0897929626; Y = -5783490.396202258; Z = 974642.3859339222;
> Converted to lat, lon, height on WGS84 with the exact Borkowski procedure
> gives:
> 9.580277979760344, -66.08186260475033, 180.5140539117856
> Converted with the iterative procedure from geocent.c gives in my test:
> 9.580277979760346, -66.08186260475033, 180.514053911902
> Converted with the Toms procedure from geocent.c gives in my test:
> 9.580277981233836, -66.08186260475033, 180.51408141944557
> The latter test differs by 5.3 micro-arcseconds in the latitude with the
> Borkowski method and 27.5 micrometers in the height.
>
> I believe PROJ4's geocent uses by default the somewhat inaccurate Toms
> method for converting geocentric to geodetic.
> But at least in my test it seems that the error is rather insignificantly
> small.
> So the core of geocent.c seems OK.
> Are the global structs filled correctly and are all parameters passed
> correctly?
>
>
> Oscar van Vlijmen
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From ovv at hetnet.nl  Sun Oct 17 08:16:49 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Sun, 17 Oct 2010 17:16:49 +0200
Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas
	datum shift into 7 parameters
Message-ID: <11C1DD954ABB479A98CE1E51236DEDEA@PCHP>

IN REPLY TO:

[Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekasdatum shift 
into 7 parameters
Noel Zinn (cc) ndzinn at comcast.net
Sun Oct 17 07:44:35 EST 2010

.....

To help me understand whether we agree of not, let me decompose Mikael
Rittri's problem simply.

A 7-parameter datum transformation (geodetic <=> geodetic) has 3 parts: (1)
geodetic => geocentric, (2) matrix manipulation on 3D geocentric (ECEF)
coordinates involving translation, rotation and scale change, and then (3)
geocentric => geodetic (which is the only inexact piece of the process, but
you can get any precision you desire).

.......


> Let's see. In the problem at hand my Molodenksy-Badekas routine arrives at
> an X,Y,Z of:
> X = 2464278.0897929626; Y = -5783490.396202258; Z = 974642.3859339222;

So, we agree then?  The Proj.4 geocentric => geocentric routine (cs2cs -f
"%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 +to
+datum=WGS84 +proj=geocent) has a decimetric difference with your code, my
code and with Blue Marble.

I have verified that this difference is not due to the difference between
the single rotation matrix normally used (small angle approximation) and the
3 concatenated rotation matrices used by ESRI (for example), which is only
millimetric in quantity.  Is it something going on under the hood in Proj.4,
like an embedded call to geodetic <=> geocentric for some reason?  I don't
know.  We could debate whether 19 centimeters in Y and 12 centimeters in Z
is significant or not.  For a straight-up matrix manipulation, I think it
is.

Regards,
Noel

---------------------------------

REPLY:

We do agree. Something is somewhere wrong. But what and where?
If I were to get a bug report stating that in a procedure spanning several 
operations the result departs from the expected value, I would throw this 
report away.
Every single step should be tested against independent results from others, 
not just the end result of a concatenation of a handful of steps.

Several steps are clear, for instance:
- The right choice of rotation model is made.
- BTW: rotation order has no effect if you work with approximations in the 
rotation matrices, like PROJ does.
- The datum transformation functions of PROJ seem to be correct.
- At least the core of the geocentric->geodetic conversion function is OK.

But where does it go wrong?
- Are all parameters passed correctly? Is somewhere a lot of precision lost 
because at a higher level not enough decimals are set?
- Are the global structs filled correctly by initialization functions?
- Is the software used as it should be? Take cs2cs: you can do incredible 
things with it, but next to nothing is documented (see its man page).

Oscar van Vlijmen





From ndzinn at comcast.net  Sun Oct 17 11:18:15 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Sun, 17 Oct 2010 13:18:15 -0500
Subject: [Proj] Using Proj.4 to compress a 10-parameter
	Molodensky-Badekasdatum shift into 7 parameters
In-Reply-To: <11C1DD954ABB479A98CE1E51236DEDEA@PCHP>
References: <11C1DD954ABB479A98CE1E51236DEDEA@PCHP>
Message-ID: <E2A55385312C4D2E94763E98B4B4980B@NoelHmPC>

Answers to these questions ...

> But where does it go wrong?
> - Are all parameters passed correctly? Is somewhere a lot of precision 
> lost
> because at a higher level not enough decimals are set?
> - Are the global structs filled correctly by initialization functions?
> - Is the software used as it should be? Take cs2cs: you can do incredible
> things with it, but next to nothing is documented (see its man page).

... require Proj.4 expertise.  I defer to you, Oscar, and to Mikael and to 
Frank.

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "OvV_HN" <ovv at hetnet.nl>
Sent: Sunday, October 17, 2010 10:16 AM
To: ""PROJ.4 and general Projections Discussions"" <proj at lists.maptools.org>
Subject: [Proj] Using Proj.4 to compress a 10-parameter 
Molodensky-Badekasdatum shift into 7 parameters

> IN REPLY TO:
>
> [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekasdatum 
> shift
> into 7 parameters
> Noel Zinn (cc) ndzinn at comcast.net
> Sun Oct 17 07:44:35 EST 2010
>
> .....
>
> To help me understand whether we agree of not, let me decompose Mikael
> Rittri's problem simply.
>
> A 7-parameter datum transformation (geodetic <=> geodetic) has 3 parts: 
> (1)
> geodetic => geocentric, (2) matrix manipulation on 3D geocentric (ECEF)
> coordinates involving translation, rotation and scale change, and then (3)
> geocentric => geodetic (which is the only inexact piece of the process, 
> but
> you can get any precision you desire).
>
> .......
>
>
>> Let's see. In the problem at hand my Molodenksy-Badekas routine arrives 
>> at
>> an X,Y,Z of:
>> X = 2464278.0897929626; Y = -5783490.396202258; Z = 974642.3859339222;
>
> So, we agree then?  The Proj.4 geocentric => geocentric routine (cs2cs -f
> "%.3f" +proj=geocent +towgs84=0,0,0,5.226,1.238,-2.381,-5.109 +to
> +datum=WGS84 +proj=geocent) has a decimetric difference with your code, my
> code and with Blue Marble.
>
> I have verified that this difference is not due to the difference between
> the single rotation matrix normally used (small angle approximation) and 
> the
> 3 concatenated rotation matrices used by ESRI (for example), which is only
> millimetric in quantity.  Is it something going on under the hood in 
> Proj.4,
> like an embedded call to geodetic <=> geocentric for some reason?  I don't
> know.  We could debate whether 19 centimeters in Y and 12 centimeters in Z
> is significant or not.  For a straight-up matrix manipulation, I think it
> is.
>
> Regards,
> Noel
>
> ---------------------------------
>
> REPLY:
>
> We do agree. Something is somewhere wrong. But what and where?
> If I were to get a bug report stating that in a procedure spanning several
> operations the result departs from the expected value, I would throw this
> report away.
> Every single step should be tested against independent results from 
> others,
> not just the end result of a concatenation of a handful of steps.
>
> Several steps are clear, for instance:
> - The right choice of rotation model is made.
> - BTW: rotation order has no effect if you work with approximations in the
> rotation matrices, like PROJ does.
> - The datum transformation functions of PROJ seem to be correct.
> - At least the core of the geocentric->geodetic conversion function is OK.
>
> But where does it go wrong?
> - Are all parameters passed correctly? Is somewhere a lot of precision 
> lost
> because at a higher level not enough decimals are set?
> - Are the global structs filled correctly by initialization functions?
> - Is the software used as it should be? Take cs2cs: you can do incredible
> things with it, but next to nothing is documented (see its man page).
>
> Oscar van Vlijmen
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From ndzinn at comcast.net  Sun Oct 17 13:14:06 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Sun, 17 Oct 2010 15:14:06 -0500
Subject: [Proj] Using Proj.4 to compress a 10-parameter
	Molodensky-Badekas datum shift into 7 parameters
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49FBF6@SETHNWS023.carmenta.se>
References: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se><B597ADFC46B67741B18EA6AA13613FF7026A6580@email002.lsu.edu>
	<E4AB3DD44D22854B819908379DE4AD49FBF6@SETHNWS023.carmenta.se>
Message-ID: <54FB7894DAAC48FEACF62E4CBD05B8DB@NoelHmPC>

Mikael / Cliff,

I am sympathetic to Cliff's suggestion that the M-B evaluation/rotation 
point be the datum origin.  Regrettably, I don't have a copy of John 
Badekas's 1969 Ohio State monograph, "Investigations related to the 
establishment of a world geodetic system", in which the transformation was 
proposed and which may have Badekas's advice on the matter.  However, I do 
have Claude Boucher's (IGN) 1979 paper ("Investigations on geodetic 
applications of satellite Doppler observations for control networks")  from 
the 2nd International Geodetic Symposium in Austin (which I attended and at 
which I met John Snyder).  Boucher's advice for the M-B evaluation/rotation 
point is the barycenter (in ECEF) of all the points in the adjustment. 
Bruce R. Harvey (UNSW) has an 1986 paper ("Transformation of 3D 
Coordinates") in the Australian Surveyor in which he offers the same 
barycentric advice for M-B.   My own explorations with M-B presented to the 
Americas Petroleum Survey Group in 2004 (cited by Mikael below) used the XYZ 
barycenter, which is why it's below the surface of the Earth.  Of course, 
these were simulations and there were no datum origins.

As an aside, Boucher's 1979 paper presented the Bursa-Wolf 7-parameter 
transformation with the position-vector rotation sense and that may be the 
first time Bursa-Wolf was associated with position-vector rotations.  Some 
years ago Malcolm Jones of Australia gave me a copy of Milan Bursa's 1966 
paper, "Fundamentals of the Theory of Geometric Satellite Geodesy".  Bursa 
employed the coordinate-vector rotation sense!

As a further aside, and getting back to my original point, it's clear from 
the titles, dates and readings of these papers that the issues of the day 
involved relating a proliferation of new, global satellite datums to one 
another.  The 7-parameter transformation is well suited for that purpose 
because on a global scale the correlations among the 7 parameters is near 
zero.  The Molodensky-Badekas is better suited for small terrestrial datums 
where 7-parameter correlations are high.  We've made a wrong turn 
geodetically by deriving 7-parameter transformations in small areas.

Proj.4 should support M-B despite our new-found ability to compress 10 
parameters into 7.

Regards,
Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)


--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Wednesday, October 13, 2010 4:03 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] Using Proj.4 to compress a 10-parameter 
Molodensky-Badekas datum shift into 7 parameters

> Clifford,
> thanks for your comments.
>
> You wrote:
>> In regard to the "unexplained" difference in ellipsoid height results,
>> my guess is the approximations made by the inverse algorithm
>> from Geocentric coordinates.
>
> Well, I hope it is just something like that.  But I don't know how
> accurately cs2cs implements this inverse algorithm.
>
>> The "evaluation point" is the Datum Origin, a rather important item.
>
> "Evaluation point" is the term used in the EPSG database, but I see
> that they sometimes call it "rotation point" in their Guidance Note 7.2.
>
> No, it isn't.
>
> I mean, the datum origin may be important, but the origin of the
> La Canoa datum is at
>
> 63° 51' 34.880" W, 08° 34' 17.170" N
> (source: your column on Venezuela, 
> http://www.asprs.org/resources/grids/12-2000-venezuela.pdf )
>
> And when I convert the evaluation point of my example datum shift
> to long/lat, I get a different location:
>
>>cs2cs +ellps=intl +proj=geocent +to +ellps=intl +proj=longlat
> 2464351.59   -5783466.61   974809.81
> 66d55'15.629"W  8d52'22.857"N -16138.645
>
> which is about 340 km west of the datum origin, and nearer
> the centre of Venezuela.
>
> Rather, I think the evaluation point in this example
> might be the average of all observation points used
> to derive the datum shift.  Noel used this approach in
> pages 45 - ... of 
> http://www.hydrometronics.com/downloads/Molodensky-Badekas.pdf
> That could also explain why the evaluation point is 16 km
> below the ellipsoid surface (caused by the curvature of the
> Earth).
>
>> ...and Prof. Molodensky preceeded them [Dr. Kumar and Prof. Badekas]
>> on another continent by some years if not decades.
>
> That reminds me of something I have wondered about:
> Wasn't Helmert much earlier than Burša and Wolf?
>
> Regards,
>
> Mikael Rittri
> Carmenta AB
> Sweden
> www.carmenta.com
> ________________________________
>
> From: proj-bounces at lists.maptools.org 
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Clifford J Mugnier
> Sent: den 12 oktober 2010 16:37
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Using Proj.4 to compress a 10-parameter 
> Molodensky-Badekas datum shift into 7 parameters
>
>
> The "evaluation point" is the Datum Origin, a rather important item.  In 
> regard to the "unexplained" difference in ellipsoid height results, my 
> guess is the approximations made by the inverse algorithm from Geocentric 
> coordinates.
>
> Personally, I prefer the elegance of incorporating the Datum Origin.
>
> I have also been told by Dr. Muneendra Kumar that Badekas had nothing to 
> do with Molodensky's original method.  I believe they were in school 
> together at the same time, and Prof. Molodensky preceeded them on another 
> continent by some years if not decades.
>
> Clifford J. Mugnier, C.P., C.M.S.
> Chief of Geodesy,
> Center for GeoInformatics
> Department of Civil Engineering
> Patrick F. Taylor Hall 3223A
> LOUISIANA STATE UNIVERSITY
> Baton Rouge, LA  70803
> Voice and Facsimile:  (225) 578-8536 [Academic]
> Voice and Facsimile:  (225) 578-4578 [Research]
> Cell: (225) 238-8975 [Academic & Research]
> Honorary Life Member of the
> Louisiana Society of Professional Surveyors
> Fellow Emeritus of the ASPRS
> Member of the Americas Petroleum Survey Group
>
>
> ________________________________
>
> From: proj-bounces at lists.maptools.org on behalf of Mikael Rittri
> Sent: Tue 12-Oct-10 03:45
> To: PROJ.4 and general Projections Discussions
> Subject: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas 
> datum shift into 7 parameters
>
> [see post at 
> http://lists.maptools.org/pipermail/proj/2010-October/005436.html ]
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Mon Oct 18 04:06:03 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 18 Oct 2010 11:06:03 +0000
Subject: [Proj] Using Proj.4 to compress a 10-parameter
 Molodensky-Badekas datum shift into 7 parameters
In-Reply-To: <5E8360C71C9947BA90F715AD187F5FF0@NoelHmPC>
References: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se>
	<5E8360C71C9947BA90F715AD187F5FF0@NoelHmPC>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49FDF2@SETHNWS023.carmenta.se>

Noel and Oscar,

I have followed your conversation. Thanks for your interest. 

Noel wrote:

> I've coded this example in Matlab and agree with your final results
> > 66d4'54.705"W   9d34'49.001"N   180.499
> 
> > Nevertheless, I disagree with your first intermediate computation
> >  2464278.090  -5783490.207  974643.507
> 
> My intermediate results are
> =>  2464278.08979296  -5783490.39620226   974642.385933922
>
> These are decimetric differences.  Too much.  Concerned, I computed 
> the same in a commercial offering, Blue Marble Geographic Calculator.  
> Blue Marble agrees with Matlab to the 4 decimal places I happened to 
> have the precision set.  So, I believe that Proj.4 is wrong in this case.  
> You might consider writing a bug report.  (BTW, these differences have 
> nothing to do the use of a single, small-angle rotation matrix versus 
> 3 concatenated single-angle matrices as done by ESRI.) 

I noticed that Oscar got the same results as you. So I tried with 
Carmenta Engine, and I, too, got the same results as you and Oscar, 
apart from a 2.5 mm difference (probably caused by our using three
concatenated single-angle matrices).  

As I started to write a bug report to Proj.4, I thought I would 
run the following code in C++: 

   double dx = 0.0;
   double dy = 0.0;
   double dz = 0.0;
   double arcsecToRadians = 3.141592653589793 / (180. * 60. * 60.);
   double rx = 5.226 * arcsecToRadians;
   double ry = 1.238 * arcsecToRadians;
   double rz = -2.381 * arcsecToRadians;
   double scaleFactor = 1.0 - 5.109e-6;

   double xin =  2464351.59;
   double yin = -5783466.61;
   double zin =   974809.81;

   double xout = scaleFactor * ( 1.0 * xin  - rz * yin  +  ry * zin) + dx;
   double yout = scaleFactor * (  rz * xin  + 1.0 * yin -  rx * zin) + dy;
   double zout = scaleFactor * ( -ry * xin  + rx * yin  + 1.0 * zin) + dz;

which is my (personal) interpretation of the Position Vector Transformation
(as described in EPSG Guidance Note 7.2, section 2.4.3.2.1, pages 109-110.)

To my surprise, now I got 

	xout:  2464278.0897929627	
	yout: -5783490.2071627714	
	zout:   974643.50748968683	

which agrees with cs2cs, but not with Noel/Oscar/Carmenta Engine ...
So I had to cancel my bug report.

Now I am just completely confused. Does my C++ code above contain
some misunderstanding of the Position Vector Transformation,
a misunderstanding that is also present in the cs2cs implementation? 
Or is cs2cs correct after all? 

Mikael Rittri
Carmenta AB
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
Sent: den 15 oktober 2010 20:57
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum shift into 7 parameters

[ see http://lists.maptools.org/pipermail/proj/2010-October/005441.html ]

From Mikael.Rittri at carmenta.com  Mon Oct 18 05:50:30 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 18 Oct 2010 12:50:30 +0000
Subject: [Proj] Using Proj.4 to compress a 10-parameter
 Molodensky-Badekas datum shift into 7 parameters
In-Reply-To: <3F79DA00BF844FA3BE7478FB77DCA0F6@NoelHmPC>
References: <E4AB3DD44D22854B819908379DE4AD49FB34@SETHNWS023.carmenta.se><5E8360C71C9947BA90F715AD187F5FF0@NoelHmPC>
	<E4AB3DD44D22854B819908379DE4AD49FDF2@SETHNWS023.carmenta.se>
	<3F79DA00BF844FA3BE7478FB77DCA0F6@NoelHmPC>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49FE1F@SETHNWS023.carmenta.se>


Oops. Noel wrote:

> Your C++ code is correct.
> The value of rX is inconsistent in your documentation, changing from 5.266 to 5.226 arcseconds.
> This would explain why it affects Y and Z but not X.

Yes indeed.  In the list of parameters in the beginning of my example,
 
http://lists.maptools.org/pipermail/proj/2010-October/005436.html

I gave the correct value of (minus) 5.266, but when I used this rotation in cs2cs commands, 
I used the wrong value of 5.226 instead.  Noel and Oscar have used the correct value, 
which I also happened to do (without noticing) when I tried the computation in Carmenta 
Engine.  But in my C++ code, I reverted to the wrong value again.

Sorry.

I'd like to correct my example: 

<CORRECTED EXAMPLE>

... 

i) Make a 7-parameter "something" by temporarily replacing 
   the question marks by zeros.  It is not really a datum
   shift, but we might call it a 7-parameter compressor. 
   Use it in a cs2cs command like this
   
   >cs2cs -f "%.3f" +proj=geocent +towgs84=0,0,0,5.266,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=geocent

   As input, use the evaluation point eX,eY,eZ of the M-B datum shift:

   2464351.59   -5783466.61   974809.81

   We get the output 

   2464278.090  -5783490.396  974642.386

ii) Now subtract the output row from the input row, and we get

        73.500        23.786     167.424

iii) Then add the original dX,dY,dZ from the M-B datum shift, 
     which were -270.933,115.599,-360.226, and we get

      -197.433       139.385    -192.802
   
The last three values are the question marks in our 7-parameter 
datum shift. 

To test it, we use the test point given in section 2.4.4.1, 
pages 114-115, EPSG Guidance Note 7.2, http://www.epsg.org/guides/docs/G7-2.pdf 

>cs2cs +ellps=intl +proj=longlat +towgs84=-197.433,139.385,-192.802,5.266,1.238,-2.381,-5.109 +to +datum=WGS84 +proj=longlat
66d4'48.091"W   9d35'0.386"N    201.46
66d4'54.705"W   9d34'49.001"N   180.514

According to GN 7.2, the result should have been  

66°04'54.705"W	9°34'49.001"N   180.51 m

so we have achieved a lossless compression. 
</CORRECTED EXAMPLE>  


In my first, wrongly computed example, I had a mismatch of about 1.1 cm.
I think it is gone now. Since I used the wrong rx rotation twice, I think
the two errors nearly, but not quite, cancelled each other. 
  Of course, given the number of decimals used in GN 7.2 for the correct 
result, there might still be a mismatch up to 0.001 arc seconds in long/lat 
and up to 1 cm in height. 

Noel also wrote:
> Is it something going on under the hood in Proj.4, 
> like an embedded call to geodetic <=> geocentric for some reason? 

I am not sure, but I think so. But I think this would cause less 
than 1 millimeter error, at least in my example. 

Best regards,
Mikael Rittri
Carmenta AB
http://www.carmenta.com

-----Original Message-----
From: Noel Zinn (cc) [mailto:ndzinn at comcast.net] 
Sent: den 18 oktober 2010 13:54
To: Mikael Rittri
Subject: Offline - Using Proj.4 to compress a 10-parameter Molodensky-Badekas datum shift into 7 parameters

Mikael,

Your C++ code is correct.

The value of rX is inconsistent in your documentation, changing from 5.266 to 5.226 arcseconds.

This would explain why it affects Y and Z but not X.

Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)



From support.mn at elisanet.fi  Tue Oct 19 06:14:57 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Tue, 19 Oct 2010 16:14:57 +0300 (EEST)
Subject: [Proj] Using Proj.4 to compress a 10-parameter
 Molodensky-Badekas datum shift into 7 parameters
Message-ID: <21278501.4258861287494097970.JavaMail.support.mn@elisanet.fi>

Hello,

If I remember it right porj.4 only gives you no more than 12 cm accuracy all over
the world. That is written somewhere in the manuals. Additional to that:

proj.4 uses

#define PI		3.14159265358979323846

if that has anything to do with it. And of course the rounding at very small
angles might also play there and how the fpp handles the numbers.

VC++ tells us:

"Type double
Double precision values with double type have 8 bytes. The format is similar to the float format except that it has an 11-bit excess-1023 exponent and a 52-bit mantissa, plus the implied high-order 1 bit. This format gives a range of approximately 1.7E308 to 1.7E+308 for type double.

Microsoft Specific >

The double type contains 64 bits: 1 for sign, 11 for the exponent, and 52 for the mantissa. Its range is +/1.7E308 with at least 15 digits of precision. 

END Microsoft Specific
"

so to be sure one should write PI with at least 17 decimals or more but 21 digits must be enough:

21 digits: 3.14159265358979323846
16 digits: 3.141592653589793

That can affect some routines and of course the accuracy of the computer used and how the compiler
handles the constants etc.

Regards: Janne

-----------------------------------------------------


Mikael Rittri [Mikael.Rittri at carmenta.com] kirjoitti: 

> In my first, wrongly computed example, I had a mismatch of about 1.1 cm.
> I think it is gone now. Since I used the wrong rx rotation twice, I think
> the two errors nearly, but not quite, cancelled each other. 
>   Of course, given the number of decimals used in GN 7.2 for the correct 
> result, there might still be a mismatch up to 0.001 arc seconds in long/lat 
> and up to 1 cm in height. 




From aaron at cartopac.com  Wed Oct 27 16:20:46 2010
From: aaron at cartopac.com (Aaron Friesen)
Date: Wed, 27 Oct 2010 19:20:46 -0400
Subject: [Proj] EXCEPTION_ACCESS_VIOLATION (0xc0000005) after many
 successful calls to pj_init_plus
Message-ID: <90200BC582E4FF488816D357540C1D4D22A76C0845@VMBX103.ihostexchange.net>

Everyone,

I have an application that runs as a web service.  It
runs for a while, then any call to pj_init_plus with
the same string that has been successfully running
up to that point eventually results in an access
violation during the pj_init_plus call.

Restarting the service clears up the problem for a
while, but once it hits, proj seems to be in a
problem state.

I believe I'm running 4.6.1.

Are there any known problems like this?

Does anyone see a problem with how I am calling proj?

My sanitized code looks like (VS2005, c++):

HRESULT Xform(int numXY, double* x, double* y, int numZ, double* z, char* src, char* dst)
{
	if (numXY <= 0)
		return S_FALSE;

	if (!x || !y || (numZ > 0 && !z))
		return E_INVALIDARG;

	HRESULT hr = S_OK;
	projPJ srcPJ = NULL;
	projPJ dstPJ = NULL;

	try
	{
		if (numZ == 0)
			z = NULL;

		if (!xformSpec.proj4CfsDefn || wcslen(xformSpec.proj4CfsDefn) == 0)
			throw E_INVALIDARG;

		srcPJ = pj_init_plus((char*)src);
		if (!srcPJ)
			throw E_PROJ_BAD_SRC_DEFN;

		dstPJ = pj_init_plus((char*)dst);
		if (!dstPJ)
			throw E_PROJ_BAD_DST_DEFN;

		int projResult = pj_transform(srcPJ, dstPJ, numXY, 1, x, y, z);
		if (projResult != 0)
			throw E_PROJ_FAILED;
	}
	catch(HRESULT thrown) { hr = thrown; }
	catch(...) { hr = E_UNEXPECTED; }

	if (srcPJ)
		pj_free(srcPJ);
	if (dstPJ)
		pj_free(dstPJ);

	return (FAILED(hr) ? hr : S_OK);
}


Thanks,

Aaron



From EMiller at dfg.ca.gov  Wed Oct 27 16:36:14 2010
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Wed, 27 Oct 2010 16:36:14 -0700
Subject: [Proj] EXCEPTION_ACCESS_VIOLATION (0xc0000005) after
 manysuccessful calls to pj_init_plus
In-Reply-To: <90200BC582E4FF488816D357540C1D4D22A76C0845@VMBX103.ihostexchange.net>
References: <90200BC582E4FF488816D357540C1D4D22A76C0845@VMBX103.ihostexchange.net>
Message-ID: <4CC854FE.95FD.00E4.0@dfg.ca.gov>

>>> On 10/27/2010 at 4:20 PM, Aaron Friesen <aaron at cartopac.com> wrote:
> Everyone,
> 
> I have an application that runs as a web service.  It
> runs for a while, then any call to pj_init_plus with
> the same string that has been successfully running
> up to that point eventually results in an access
> violation during the pj_init_plus call.
> 
> Restarting the service clears up the problem for a
> while, but once it hits, proj seems to be in a
> problem state.

PROJ.4 hasn't historically been thread safe.  That causes problems when trying to use it in a server/service context.  One of the trouble areas has been the handling of datum grid files.  Another is the global error code.  It may be that version 4.7 has improved that situation.  I gave up trying to use it in a web service years ago...
-- 

Eric G. Miller
Staff Programmer
CA Dept. of Fish & Game





From hetzi at algebra.uni-linz.ac.at  Thu Oct 28 01:11:58 2010
From: hetzi at algebra.uni-linz.ac.at (Markus Hetzmannseder)
Date: Thu, 28 Oct 2010 10:11:58 +0200 (CEST)
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
Message-ID: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>

Hallo,

i have trubles to translate WGS84 coordinates to EPSG:31287. This is 
needed at the Openstreetmap Projekt for the correct projection of OSM-data 
to the austrian geoimage.at WMS-service. For the OSM-editor JOSM there is 
a plugin epsg31287, that should do the job and in its calculations it is 
based on proj. That plugin is based an proj is working, its not working 
really correct. It is producing a shift of about 30 metre and that shift 
is only local, in other regions of austria the shift has a different 
length and different direction.

For debugging that shift i started to use proj directly, and it is 
producing the same shift in its calculations like the JOSM-plugin.


The correct proj arguments for EPSG31287 should be:
+proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 +lon_0=13.33333333333333 
+x_0=400000 +y_0=400000 +ellps=bessel 
+towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 
+units=m +no_defs

For my reference i use the coordinate translation service of geoland.at 
(http://www.geoland.at/geolandcoord/eingabe.aspx)

The results are for some example points:

WGS84                    proj-EPSG31287               geoland.at-EPSG31287
14.2833092 48.3098392    470439.28	490437.40     470507.17  490503.03
16.371345 48.211996      625637.33	483542.58     625724.57  483601.75
9.747076 47.503042       130035.17	406569.01     130056.24  406637.26

The geoland.at projection is, as far i know, the real projection the 
WMS-service (http://wms.geoimage.at) is using.


Any hints where the difference could be come from?

thx a lot
Markus Hetzmannseder


From jrepetto at free.fr  Thu Oct 28 01:54:11 2010
From: jrepetto at free.fr (Jean-Claude Repetto)
Date: Thu, 28 Oct 2010 10:54:11 +0200
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
Message-ID: <4CC93A33.8070308@free.fr>

Le 28/10/2010 10:11, Markus Hetzmannseder a écrit :
> Hallo,
>
> i have trubles to translate WGS84 coordinates to EPSG:31287. This is
> needed at the Openstreetmap Projekt for the correct projection of OSM-data
> to the austrian geoimage.at WMS-service. For the OSM-editor JOSM there is
> a plugin epsg31287, that should do the job and in its calculations it is
> based on proj. That plugin is based an proj is working, its not working
> really correct. It is producing a shift of about 30 metre and that shift
> is only local, in other regions of austria the shift has a different
> length and different direction.
>
> For debugging that shift i started to use proj directly, and it is
> producing the same shift in its calculations like the JOSM-plugin.
>
>
> The correct proj arguments for EPSG31287 should be:
> +proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 +lon_0=13.33333333333333
> +x_0=400000 +y_0=400000 +ellps=bessel
> +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232
> +units=m +no_defs
>
> For my reference i use the coordinate translation service of geoland.at
> (http://www.geoland.at/geolandcoord/eingabe.aspx)
>
> The results are for some example points:
>
> WGS84                    proj-EPSG31287               geoland.at-EPSG31287
> 14.2833092 48.3098392    470439.28	490437.40     470507.17  490503.03
> 16.371345 48.211996      625637.33	483542.58     625724.57  483601.75
> 9.747076 47.503042       130035.17	406569.01     130056.24  406637.26
>
> The geoland.at projection is, as far i know, the real projection the
> WMS-service (http://wms.geoimage.at) is using.
>
>
> Any hints where the difference could be come from?
>
> thx a lot
> Markus Hetzmannseder
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

Hello,

I get the same results as geoland.at :

  cs2cs +init=epsg:4326 +to +proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 
+lon_0=13.33333333333333 +x_0=400000 +y_0=400000 +ellps=bessel 
+towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +units=m +no_defs
14.2833092 48.3098392
470507.17	490503.01 -45.92
16.371345 48.211996
625724.58	483601.74 -44.45
9.747076 47.503042
130056.92	406637.21 -48.36

Jean-Claude


From hetzi at algebra.uni-linz.ac.at  Thu Oct 28 03:17:04 2010
From: hetzi at algebra.uni-linz.ac.at (Markus Hetzmannseder)
Date: Thu, 28 Oct 2010 12:17:04 +0200 (CEST)
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <4CC93A33.8070308@free.fr>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
	<4CC93A33.8070308@free.fr>
Message-ID: <Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>

On Thu, 28 Oct 2010, Jean-Claude Repetto wrote:

> I get the same results as geoland.at :
>
>  cs2cs +init=epsg:4326 +to +proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5
> +lon_0=13.33333333333333 +x_0=400000 +y_0=400000 +ellps=bessel
> +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +units=m +no_defs
> 14.2833092 48.3098392
> 470507.17	490503.01 -45.92
> 16.371345 48.211996
> 625724.58	483601.74 -44.45
> 9.747076 47.503042
> 130056.92	406637.21 -48.36

Oh thx a lot, i did it that way, to get the wrong results:
proj +proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 +lon_0=13.33333333333333 
+x_0=400000 +y_0=400000 +ellps=bessel 
+towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +units=m +no_defs

And its looking like that josm-plogin is doing the same. Now i know at 
least how to generate the real projektion with the proj-toolbox itself. 
Now the plugin should be able to be changed in a similar way to use the 
cs2cs arguments.

Markus


From paul-grass at stjohnspoint.co.uk  Thu Oct 28 05:35:55 2010
From: paul-grass at stjohnspoint.co.uk (Paul Kelly)
Date: Thu, 28 Oct 2010 13:35:55 +0100 (BST)
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
	<4CC93A33.8070308@free.fr>
	<Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>
Message-ID: <Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk>

On Thu, 28 Oct 2010, Markus Hetzmannseder wrote:

> On Thu, 28 Oct 2010, Jean-Claude Repetto wrote:
>
>> I get the same results as geoland.at :
>>
>>  cs2cs +init=epsg:4326 +to +proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5
>> +lon_0=13.33333333333333 +x_0=400000 +y_0=400000 +ellps=bessel
>> +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +units=m +no_defs
>> 14.2833092 48.3098392
>> 470507.17	490503.01 -45.92
>> 16.371345 48.211996
>> 625724.58	483601.74 -44.45
>> 9.747076 47.503042
>> 130056.92	406637.21 -48.36
>
> Oh thx a lot, i did it that way, to get the wrong results:
> proj +proj=lcc +lat_1=49 +lat_2=46 +lat_0=47.5 +lon_0=13.33333333333333
> +x_0=400000 +y_0=400000 +ellps=bessel
> +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232 +units=m +no_defs
>
> And its looking like that josm-plogin is doing the same. Now i know at
> least how to generate the real projektion with the proj-toolbox itself.
> Now the plugin should be able to be changed in a similar way to use the
> cs2cs arguments.

The proj command does a simple forward projection and ignores the +towgs84 
datum transformation parameters. The cs2cs command takes these into 
account to give a more accurate result. If you leave off the +towgs84 
parameters from the cs2cs command line you will get the same result as 
with the proj command line. It looks to me like the JOSM plugin is not 
doing the datum transformation, only the projection (I had a quick glance at 
<http://svn.openstreetmap.org/applications/editors/josm/plugins/epsg31287/src/com/jhlabs/map/proj/LambertConformalConicProjection.java>) 
to confirm this) - but that is certainly not easy to fix.

Best regards

Paul Kelly


From hetzi at algebra.uni-linz.ac.at  Thu Oct 28 06:49:36 2010
From: hetzi at algebra.uni-linz.ac.at (Markus Hetzmannseder)
Date: Thu, 28 Oct 2010 15:49:36 +0200 (CEST)
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
	<4CC93A33.8070308@free.fr>
	<Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>
	<Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk>
Message-ID: <Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>

On Thu, 28 Oct 2010, Paul Kelly wrote:

> On Thu, 28 Oct 2010, Markus Hetzmannseder wrote:
>
>
> The proj command does a simple forward projection and ignores the +towgs84
> datum transformation parameters. The cs2cs command takes these into
> account to give a more accurate result. If you leave off the +towgs84
> parameters from the cs2cs command line you will get the same result as
> with the proj command line. It looks to me like the JOSM plugin is not
> doing the datum transformation, only the projection (I had a quick glance at
> <http://svn.openstreetmap.org/applications/editors/josm/plugins/epsg31287/src/com/jhlabs/map/proj/LambertConformalConicProjection.java>)
> to confirm this) - but that is certainly not easy to fix.

Jeah, i know, i was coming to the same result myself too. The epsg31287 
plugin is using the jhlabs java lib to do all the transformation. And on 
the the jhlabs site i found under "What is missing" the statement 
"Coordinate system and geodetic datum conversion is missing." 
(http://www.jhlabs.com/java/maps/proj/index.html)

Doing the transformation with the jhlabs-lib would require some additional 
coding for the datum transformation. Something i am not able to do with my 
tiny knowlege in both fields, java and the math behind all that 
transformations.

Another way would be to rewrite the plugin with another calculation lib in 
behind. Maybe something from http://geotools.org/ could help...

At least we know now where that offset of the current epsg31287 plugin is 
coming from. I hope it will help the author of the plugin a bit to find a 
solution.

Markus


From jrepetto at free.fr  Thu Oct 28 07:02:17 2010
From: jrepetto at free.fr (Jean-Claude Repetto)
Date: Thu, 28 Oct 2010 16:02:17 +0200
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>	<4CC93A33.8070308@free.fr>	<Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>	<Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk>
	<Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
Message-ID: <4CC98269.8010305@free.fr>

Le 28/10/2010 15:49, Markus Hetzmannseder a écrit :
>
> Doing the transformation with the jhlabs-lib would require some additional
> coding for the datum transformation. Something i am not able to do with my
> tiny knowlege in both fields, java and the math behind all that
> transformations.

Applying a 7-parameters datum transformation is not that difficult ! It 
requires a matrix multiplication, a scalar multiplication and an addition :
http://en.wikipedia.org/wiki/Helmert_transformation

Jean-Claude


From Joel_Cusick at nps.gov  Thu Oct 28 11:01:32 2010
From: Joel_Cusick at nps.gov (Joel_Cusick at nps.gov)
Date: Thu, 28 Oct 2010 10:01:32 -0800
Subject: [Proj] Joel Cusick/AKSO/NPS is out of office
Message-ID: <OFE146EA13.132B086D-ON892577CA.00630475-892577CA.00630475@nps.gov>


I will be out of the office starting  10/26/2010 and will not return until
11/02/2010.




From jacobsen at powline.com  Thu Oct 28 12:48:58 2010
From: jacobsen at powline.com (Erik Jacobsen)
Date: Thu, 28 Oct 2010 14:48:58 -0500
Subject: [Proj] [PROJ] Re: EXCEPTION_ACCESS_VIOLATION (0xc0000005) after
 many successful, calls to pj_init_plus (Aaron Friesen)
In-Reply-To: <mailman.3.1288285202.8825.proj@lists.maptools.org>
References: <mailman.3.1288285202.8825.proj@lists.maptools.org>
Message-ID: <4CC9D3AA.5030908@powline.com>


Hello Aaron,

I'm going to make a guess that you have run into this bug:

http://trac.osgeo.org/proj/ticket/74


If so, the fix is quite simple (from the ticket description):

On the 16th unique entry into the insert cache, it will need to be 
resized by pj_insert_cache() which has the source and destination 
arguments to memcpy reversed on line 157 of pj_initcache.c in the 
current trunk. This problem also exists in 4.7.0 where I found it during 
internal testing. The code is:

    memcpy( cache_key, cache_key_new, sizeof(char*) * cache_count);

but we are actually trying to copy the contents of cache_key into 
cache_key_new so the code should be:

    memcpy( cache_key_new, cache_key, sizeof(char*) * cache_count);

I hope this proves helpful.

Best Regards,

Erik


On 10/28/2010 12:00, proj-request at lists.maptools.org wrote:
> Send Proj mailing list submissions to
> 	proj at lists.maptools.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://lists.maptools.org/mailman/listinfo/proj
> or, via email, send a message with subject or body 'help' to
> 	proj-request at lists.maptools.org
>
> You can reach the person managing the list at
> 	proj-owner at lists.maptools.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Proj digest..."
>
>
> Today's Topics:
>
>     1. EXCEPTION_ACCESS_VIOLATION (0xc0000005) after many successful
>        calls to pj_init_plus (Aaron Friesen)
>     2. Re: EXCEPTION_ACCESS_VIOLATION (0xc0000005) after
>        manysuccessful calls to pj_init_plus (Eric Miller)
>     3. truble to translate coordinates from WGS84 to EPSG:31287
>        (Markus Hetzmannseder)
>     4. Re: truble to translate coordinates from WGS84 to EPSG:31287
>        (Jean-Claude Repetto)
>     5. Re: truble to translate coordinates from WGS84 to EPSG:31287
>        (Markus Hetzmannseder)
>     6. Re: truble to translate coordinates from WGS84 to EPSG:31287
>        (Paul Kelly)
>     7. Re: truble to translate coordinates from WGS84 to EPSG:31287
>        (Markus Hetzmannseder)
>     8. Re: truble to translate coordinates from WGS84 to EPSG:31287
>        (Jean-Claude Repetto)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Wed, 27 Oct 2010 19:20:46 -0400
> From: Aaron Friesen<aaron at cartopac.com>
> Subject: [Proj] EXCEPTION_ACCESS_VIOLATION (0xc0000005) after many
> 	successful calls to pj_init_plus
> To: "proj at lists.maptools.org"<proj at lists.maptools.org>
> Message-ID:
> 	<90200BC582E4FF488816D357540C1D4D22A76C0845 at VMBX103.ihostexchange.net>
> Content-Type: text/plain; charset="us-ascii"
>
> Everyone,
>
> I have an application that runs as a web service.  It
> runs for a while, then any call to pj_init_plus with
> the same string that has been successfully running
> up to that point eventually results in an access
> violation during the pj_init_plus call.
>
> Restarting the service clears up the problem for a
> while, but once it hits, proj seems to be in a
> problem state.
>
> I believe I'm running 4.6.1.
>
> Are there any known problems like this?
>
> Does anyone see a problem with how I am calling proj?
>
> My sanitized code looks like (VS2005, c++):
>
> HRESULT Xform(int numXY, double* x, double* y, int numZ, double* z, char* src, char* dst)
> {
> 	if (numXY<= 0)
> 		return S_FALSE;
>
> 	if (!x || !y || (numZ>  0&&  !z))
> 		return E_INVALIDARG;
>
> 	HRESULT hr = S_OK;
> 	projPJ srcPJ = NULL;
> 	projPJ dstPJ = NULL;
>
> 	try
> 	{
> 		if (numZ == 0)
> 			z = NULL;
>
> 		if (!xformSpec.proj4CfsDefn || wcslen(xformSpec.proj4CfsDefn) == 0)
> 			throw E_INVALIDARG;
>
> 		srcPJ = pj_init_plus((char*)src);
> 		if (!srcPJ)
> 			throw E_PROJ_BAD_SRC_DEFN;
>
> 		dstPJ = pj_init_plus((char*)dst);
> 		if (!dstPJ)
> 			throw E_PROJ_BAD_DST_DEFN;
>
> 		int projResult = pj_transform(srcPJ, dstPJ, numXY, 1, x, y, z);
> 		if (projResult != 0)
> 			throw E_PROJ_FAILED;
> 	}
> 	catch(HRESULT thrown) { hr = thrown; }
> 	catch(...) { hr = E_UNEXPECTED; }
>
> 	if (srcPJ)
> 		pj_free(srcPJ);
> 	if (dstPJ)
> 		pj_free(dstPJ);
>
> 	return (FAILED(hr) ? hr : S_OK);
> }
>
>
> Thanks,
>
> Aaron
>
>
>
> ------------------------------
>
> Message: 2
> Date: Wed, 27 Oct 2010 16:36:14 -0700
> From: Eric Miller<EMiller at dfg.ca.gov>
> Subject: Re: [Proj] EXCEPTION_ACCESS_VIOLATION (0xc0000005) after
> 	manysuccessful calls to pj_init_plus
> To: "proj at lists.maptools.org"<proj at lists.maptools.org>
> Message-ID:<4CC854FE.95FD.00E4.0 at dfg.ca.gov>
> Content-Type: text/plain; charset="US-ASCII"
>
>>>> On 10/27/2010 at 4:20 PM, Aaron Friesen<aaron at cartopac.com>  wrote:
>> Everyone,
>>
>> I have an application that runs as a web service.  It
>> runs for a while, then any call to pj_init_plus with
>> the same string that has been successfully running
>> up to that point eventually results in an access
>> violation during the pj_init_plus call.
>>
>> Restarting the service clears up the problem for a
>> while, but once it hits, proj seems to be in a
>> problem state.
> PROJ.4 hasn't historically been thread safe.  That causes problems when trying to use it in a server/service context.  One of the trouble areas has been the handling of datum grid files.  Another is the global error code.  It may be that version 4.7 has improved that situation.  I gave up trying to use it in a web service years ago...

-- 
Erik Jacobsen, Power Line Systems, Inc.
Email: jacobsen at powline.com
Phone: (608) 238-2171 x134
Fax:   (608) 238-9241
Web:   http://www.powline.com/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101028/96ee5296/attachment.html>

From hetzi at algebra.uni-linz.ac.at  Thu Oct 28 16:38:59 2010
From: hetzi at algebra.uni-linz.ac.at (Markus Hetzmannseder)
Date: Fri, 29 Oct 2010 01:38:59 +0200 (CEST)
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <4CC98269.8010305@free.fr>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
	<4CC93A33.8070308@free.fr>
	<Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>
	<Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk>
	<Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
	<4CC98269.8010305@free.fr>
Message-ID: <Pine.LNX.4.64.1010290009580.12807@verdi.algebra.uni-linz.ac.at>

On Thu, 28 Oct 2010, Jean-Claude Repetto wrote:

> Le 28/10/2010 15:49, Markus Hetzmannseder a écrit :
>
> Applying a 7-parameters datum transformation is not that difficult ! It
> requires a matrix multiplication, a scalar multiplication and an addition :
> http://en.wikipedia.org/wiki/Helmert_transformation

Well, the formulars there are looking not to bad, at to do some calcs on a 
excel sheet. The truble is, i still dont get the correct results for my 
few example parameters.

The formular i used for the X part was:

Xb = Cx + (1 + s / 1000000) * (Xa - Rz*PI/648000 * Ya)

The PI/648000 should do the calc from arcsecond to rad used at the 
formula. The Ry * Za part i have skipped, because i have no hight, so it 
should be save to set it to zero.

For the testing i want to translate my example point from my 1st post 
here:

WGS84                    without geodesy date trans   with date trans
14.2833092 48.3098392    470439.28      490437.40     470507.17  490503.03

The formular for the X part of that point is:

-577.326 + (1 - 2.423 / 1000000) * (470439.28 - 5.297*3.1415/648000 * 490437.40)

Results to 469848.219810 but it should be 470507.17

So where could be the error in that?
Why have all of the transform parameters at the cs2cs command line a "+" 
and not a "-" like some at the wiki page of the Helmert 
transformation? But the error here has to be more then just the sign 
alone, because the Rz part of the formular alone would just produce an 
offset of about 12.5 but from Cx i get a translation of 577.


Mar *the clueless newb in date transformation* kus

From Mikael.Rittri at carmenta.com  Fri Oct 29 01:05:00 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Fri, 29 Oct 2010 08:05:00 +0000
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <Pine.LNX.4.64.1010290009580.12807@verdi.algebra.uni-linz.ac.at>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
	<4CC93A33.8070308@free.fr>
	<Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>
	<Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk>
	<Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
	<4CC98269.8010305@free.fr>
	<Pine.LNX.4.64.1010290009580.12807@verdi.algebra.uni-linz.ac.at>
Message-ID: <E4AB3DD44D22854B819908379DE4AD490102FF@SETHNWS023.carmenta.se>

The matrix multiplication, scalar multiplication and the 
addition takes place in 3D geocentric Cartesian space. 

Since you say your Z is zero, I think you may have 
forgotten the conversion from long/lat/height to X,Y,Z 
which are geocentric Cartesian coordinates, usually in 
meters. (That's the step 2 briefly mentioned on the
Wikipedia page on Helmert transformation.) The geocentric
Z is zero only on the equator. 

And the result of the Helmert transformation must
be converted back from X,Y,Z to long/lat/height.

Formulas can be found in section 2.2.1 of EPSG Guidance Note 7.2,
http://www.epsg.org/guides/G7-2.html 

Best regards,
Mikael Rittri
Carmenta AB
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Markus Hetzmannseder
Sent: den 29 oktober 2010 01:39
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] truble to translate coordinates from WGS84 to EPSG:31287

On Thu, 28 Oct 2010, Jean-Claude Repetto wrote:

> Le 28/10/2010 15:49, Markus Hetzmannseder a écrit :
>
> Applying a 7-parameters datum transformation is not that difficult ! 
> It requires a matrix multiplication, a scalar multiplication and an addition :
> http://en.wikipedia.org/wiki/Helmert_transformation

Well, the formulars there are looking not to bad, at to do some calcs on a excel sheet. The truble is, i still dont get the correct results for my few example parameters.

The formular i used for the X part was:

Xb = Cx + (1 + s / 1000000) * (Xa - Rz*PI/648000 * Ya)

The PI/648000 should do the calc from arcsecond to rad used at the formula. The Ry * Za part i have skipped, because i have no hight, so it should be save to set it to zero.

For the testing i want to translate my example point from my 1st post
here:

WGS84                    without geodesy date trans   with date trans
14.2833092 48.3098392    470439.28      490437.40     470507.17  490503.03

The formular for the X part of that point is:

-577.326 + (1 - 2.423 / 1000000) * (470439.28 - 5.297*3.1415/648000 * 490437.40)

Results to 469848.219810 but it should be 470507.17

So where could be the error in that?
Why have all of the transform parameters at the cs2cs command line a "+" 
and not a "-" like some at the wiki page of the Helmert transformation? But the error here has to be more then just the sign alone, because the Rz part of the formular alone would just produce an offset of about 12.5 but from Cx i get a translation of 577.


Mar *the clueless newb in date transformation* kus

