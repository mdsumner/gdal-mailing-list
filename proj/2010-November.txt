From Mikael.Rittri at carmenta.com  Mon Nov  1 07:06:00 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 1 Nov 2010 14:06:00 +0000
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at>
	<4CC93A33.8070308@free.fr>
	<Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at>
	<Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk>
	<Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
Message-ID: <E4AB3DD44D22854B819908379DE4AD490103FF@SETHNWS023.carmenta.se>

Hello Markus,

you wrote:
> And on the the jhlabs site i found under "What is missing" the statement
> "Coordinate system and geodetic datum conversion is missing." 
> (http://www.jhlabs.com/java/maps/proj/index.html)
> 
> Doing the transformation with the jhlabs-lib would require some additional 
> coding for the datum transformation. Something i am not able to do with my 
> tiny knowlege in both fields, java and the math behind all that transformations.

An alternative is to do the datum shift by an approximate "direct projection" 
from WGS84/long-lat to MGI/Austria Lambert (EPSG:31287).  This is a method where
you would start by attaching the Austria Lambert projection to WGS84 - that
is, to the WRONG datum.  The results will not be correct, of course, so then
you fiddle with the projection parameters until the results are pretty good. 

I think many people regard this method as a dirty hack, but the Swedish Land
Survey recommends it for a Swedish CRS, and I have to admit that I like the 
method.  Out of curiousity, I tried it for MGI/Austria Lambert.  (Ideally, my
parameter fiddling should be derived from some original survey observations 
for the MGI and WGS84 datums, but I used the 7-parameter datum shift instead.  
This means that my "direct projection" is an approximation of an approximation, 
so it can probably be improved, but not very much I think.)  

My result was pretty good. I finally arrived at the following approximation 
of MGI/Austria Lambert:

>proj +datum=WGS84 +proj=lcc +lat_1=46.0103424 +lat_2=48.988621 +lat_0=47.5 +lon_0=13.33616275 +x_0=400268.785 +y_0=400057.553

When I tested it on your example points, I got from FWTools 2.4.7:

WGS84 long lat		approx MGI/Austria Lambert, E N	diff from geoland.at
14.2833092 48.3098392	470507.18  490503.02                0.02 m 
16.371345  48.211996	625724.63  483601.73			0.07 m
 9.747076  47.503042	130056.96  406637.16			0.73 m

(I got the geoland.at results from your first letter, 
 http://lists.maptools.org/pipermail/proj/2010-October/005454.html ) 

Since the accuracy of your original 7-parameter datum shift was about 1.5 meters,
the accuracy of my direct projection seems to about as good. 

Actually, I think my direct projection stays within 0.1 or 0.2 m difference
from the 7-parameter datum shift. I guess that geoland.at uses a more 
sophisticated datum shift, perhaps a grid file, which would explain the
0.73 m difference for the third example point. 

You can read an earlier thread about direction projection at the list archives,
http://lists.maptools.org/pipermail/proj/2008-December/thread.html

Best regards,
Mikael Rittri
Carmenta AB
Sweden 
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Markus Hetzmannseder
Sent: den 28 oktober 2010 15:50
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] truble to translate coordinates from WGS84 to EPSG:31287

On Thu, 28 Oct 2010, Paul Kelly wrote:

> On Thu, 28 Oct 2010, Markus Hetzmannseder wrote:
>
>
> The proj command does a simple forward projection and ignores the 
> +towgs84 datum transformation parameters. The cs2cs command takes 
> these into account to give a more accurate result. If you leave off 
> the +towgs84 parameters from the cs2cs command line you will get the 
> same result as with the proj command line. It looks to me like the 
> JOSM plugin is not doing the datum transformation, only the projection 
> (I had a quick glance at
> <http://svn.openstreetmap.org/applications/editors/josm/plugins/epsg31
> 287/src/com/jhlabs/map/proj/LambertConformalConicProjection.java>)
> to confirm this) - but that is certainly not easy to fix.

Jeah, i know, i was coming to the same result myself too. The epsg31287 plugin is using the jhlabs java lib to do all the transformation. And on the the jhlabs site i found under "What is missing" the statement "Coordinate system and geodetic datum conversion is missing." 
(http://www.jhlabs.com/java/maps/proj/index.html)

Doing the transformation with the jhlabs-lib would require some additional coding for the datum transformation. Something i am not able to do with my tiny knowlege in both fields, java and the math behind all that transformations.

Another way would be to rewrite the plugin with another calculation lib in behind. Maybe something from http://geotools.org/ could help...

At least we know now where that offset of the current epsg31287 plugin is coming from. I hope it will help the author of the plugin a bit to find a solution.

Markus
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From leonidas_liakos at yahoo.gr  Tue Nov  2 11:06:30 2010
From: leonidas_liakos at yahoo.gr (leonidas)
Date: Tue, 2 Nov 2010 11:06:30 -0700 (PDT)
Subject: [Proj] EPSG Code of Google at spatialreference.org
Message-ID: <1288721190166-5698534.post@n2.nabble.com>


I'm using JSON service from spatialreference.org to reproject my coordinates
from greek grid to wgs84 like that:

http://spatialreference.org/projection/?json={"type":"Feature",
"geometry":{"type":"Point","coordinates":[180000,
4352000]},"properties":{}}&inref=EPSG:2100&outref=EPSG:4326&callback=?

I'm also trying to reproject the point to Google maps projection using the
code:900913 but spatialreference.org returns a message that the code doesn't
exist. Please give a try here:

http://spatialreference.org/projection/?json={"type":"Feature",
"geometry":{"type":"Point","coordinates":[180000,
4352000]},"properties":{}}&inref=EPSG:900913&outref=EPSG:4326&callback=?

Am I missing something? Is there any alternative code for google maps
projection?
Thank you, Leonidas
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/EPSG-Code-of-Google-at-spatialreference-org-tp5698534p5698534.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jrepetto at free.fr  Tue Nov  2 12:24:54 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Tue, 02 Nov 2010 20:24:54 +0100
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <1288721190166-5698534.post@n2.nabble.com>
References: <1288721190166-5698534.post@n2.nabble.com>
Message-ID: <4CD06586.7000404@free.fr>

On 11/02/10 19:06, leonidas wrote:
> I'm also trying to reproject the point to Google maps projection using the
> code:900913 but spatialreference.org returns a message that the code doesn't
> exist. Please give a try here:
>
> Am I missing something? Is there any alternative code for google maps
> projection?

Hi,
The official EPSG code for Google Mercator is EPSG:3857.

Jean-Claude



From leonidas_liakos at yahoo.gr  Tue Nov  2 12:53:05 2010
From: leonidas_liakos at yahoo.gr (leonidas)
Date: Tue, 2 Nov 2010 12:53:05 -0700 (PDT)
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <4CD06586.7000404@free.fr>
References: <1288721190166-5698534.post@n2.nabble.com>
	<4CD06586.7000404@free.fr>
Message-ID: <1288727585078-5698884.post@n2.nabble.com>


Unfortunately, code 3857 doesn't exist too at the JSON service of
http://spatialreference.org
Maybe there are some limitations at the moment for that service.
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/EPSG-Code-of-Google-at-spatialreference-org-tp5698534p5698884.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jrepetto at free.fr  Tue Nov  2 14:19:22 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Tue, 02 Nov 2010 22:19:22 +0100
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <1288727585078-5698884.post@n2.nabble.com>
References: <1288721190166-5698534.post@n2.nabble.com>	<4CD06586.7000404@free.fr>
	<1288727585078-5698884.post@n2.nabble.com>
Message-ID: <4CD0805A.9080505@free.fr>

On 11/02/10 20:53, leonidas wrote:
>
> Unfortunately, code 3857 doesn't exist too at the JSON service of
> http://spatialreference.org
> Maybe there are some limitations at the moment for that service.

It seems that this server is using an outdated version of the EPSG 
database. You may also try EPSG:3785, which is deprecated since 2 years, 
but is still in spatialreference.org .

Jean-Claude



From leonidas_liakos at yahoo.gr  Tue Nov  2 13:38:47 2010
From: leonidas_liakos at yahoo.gr (leonidas)
Date: Tue, 2 Nov 2010 13:38:47 -0700 (PDT)
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <4CD0805A.9080505@free.fr>
References: <1288721190166-5698534.post@n2.nabble.com>
	<4CD06586.7000404@free.fr>
	<1288727585078-5698884.post@n2.nabble.com>
	<4CD0805A.9080505@free.fr>
Message-ID: <1288730327226-5699041.post@n2.nabble.com>


I tried it.It returns Meters but I need Decimal Degrees. It seems that it is
a mercator projection.
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/EPSG-Code-of-Google-at-spatialreference-org-tp5698534p5699041.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From jrepetto at free.fr  Tue Nov  2 15:39:12 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Tue, 02 Nov 2010 23:39:12 +0100
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <1288730327226-5699041.post@n2.nabble.com>
References: <1288721190166-5698534.post@n2.nabble.com>	<4CD06586.7000404@free.fr>	<1288727585078-5698884.post@n2.nabble.com>	<4CD0805A.9080505@free.fr>
	<1288730327226-5699041.post@n2.nabble.com>
Message-ID: <4CD09310.6060304@free.fr>

On 11/02/10 21:38, leonidas wrote:
>
> I tried it.It returns Meters but I need Decimal Degrees. It seems that it is
> a mercator projection.

It is correct, Google Maps uses a spherical Mercator projection.



From leonidas_liakos at yahoo.gr  Wed Nov  3 01:17:33 2010
From: leonidas_liakos at yahoo.gr (leonidas)
Date: Wed, 3 Nov 2010 01:17:33 -0700 (PDT)
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <4CD09310.6060304@free.fr>
References: <1288721190166-5698534.post@n2.nabble.com>
	<4CD06586.7000404@free.fr>
	<1288727585078-5698884.post@n2.nabble.com>
	<4CD0805A.9080505@free.fr>
	<1288730327226-5699041.post@n2.nabble.com>
	<4CD09310.6060304@free.fr>
Message-ID: <1288772253665-5700432.post@n2.nabble.com>


Thank you, Jean-Claude!

I'll use wgs84 for my script. Google maps api will convert the coords on the
fly to google mercator. Just found a useful article for me at:

http://sharpgis.net/post/2007/07/The-Microsoft-Live-Maps-and-Google-Maps-projection.aspx
http://sharpgis.net/post/2007/07/The-Microsoft-Live-Maps-and-Google-Maps-projection.aspx 
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/EPSG-Code-of-Google-at-spatialreference-org-tp5698534p5700432.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From ndzinn at comcast.net  Wed Nov  3 02:43:49 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Wed, 3 Nov 2010 04:43:49 -0500
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <1288772253665-5700432.post@n2.nabble.com>
References: <1288721190166-5698534.post@n2.nabble.com><4CD06586.7000404@free.fr><1288727585078-5698884.post@n2.nabble.com><4CD0805A.9080505@free.fr><1288730327226-5699041.post@n2.nabble.com><4CD09310.6060304@free.fr>
	<1288772253665-5700432.post@n2.nabble.com>
Message-ID: <D878870A334A480E903132E09EFA0695@NoelHmPC>

Here's another link that provides the mathematics of the Web Mercator 
projection used by Google and Microsoft.  Unlike the Spherical Mercator and 
the Ellipsoidal Mercator (which are conformal), the Web Mercator is 
non-conformal.  Scale factor formulas are given to document this fact.

http://www.hydrometronics.com/downloads/Web%20Mercator%20-%20Non-Conformal,%20Non-Mercator%20(notes).pdf

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "leonidas" <leonidas_liakos at yahoo.gr>
Sent: Wednesday, November 03, 2010 3:17 AM
To: <proj at lists.maptools.org>
Subject: Re: [Proj] EPSG Code of Google at spatialreference.org

>
> Thank you, Jean-Claude!
>
> I'll use wgs84 for my script. Google maps api will convert the coords on 
> the
> fly to google mercator. Just found a useful article for me at:
>
> http://sharpgis.net/post/2007/07/The-Microsoft-Live-Maps-and-Google-Maps-projection.aspx
> http://sharpgis.net/post/2007/07/The-Microsoft-Live-Maps-and-Google-Maps-projection.aspx
> -- 
> View this message in context: 
> http://osgeo-org.1803224.n2.nabble.com/EPSG-Code-of-Google-at-spatialreference-org-tp5698534p5700432.html
> Sent from the PROJ.4 mailing list archive at Nabble.com.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From ndzinn at comcast.net  Wed Nov  3 06:30:44 2010
From: ndzinn at comcast.net (Noel Zinn (cc))
Date: Wed, 3 Nov 2010 08:30:44 -0500
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD490103FF@SETHNWS023.carmenta.se>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at><4CC93A33.8070308@free.fr><Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at><Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk><Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
	<E4AB3DD44D22854B819908379DE4AD490103FF@SETHNWS023.carmenta.se>
Message-ID: <DB8CEB7136DE43F882B972C99B9A63F0@NoelHmPC>

Mikael,

If you merely "fiddle" the projection parameters (CM, lat0, scale, false 
coordinates, parallels maybe, etc.), the "direct projection" method might be 
regarded as a "dirty hack".  But the paper you cited two years ago:

http://www.fig.net/pub/fig2006/papers/ps05_03/ps05_03_04_engberg_lilje_0670.pdf

presents a methodical process for determining the parameters optimally (i.e. 
by least-squares constraint applied to the the survey data).  Seems rigorous 
and innovative to me.  And if the projection used is conformal, then the 
"direction projection" method is by definition conformal, too (i.e. 
preserves the angles of intersecting lines).  The 7-parameter transformation 
is also conformal, but multiple regression equations (MRE) and grid methods 
(NADCON, NTv2) are not.  A pertinent question would be, does "direct 
projection" fit the data better than a 7-parameter transformation?

Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Monday, November 01, 2010 9:06 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] truble to translate coordinates from WGS84 to EPSG:31287

> Hello Markus,
>
> you wrote:
>> And on the the jhlabs site i found under "What is missing" the statement
>> "Coordinate system and geodetic datum conversion is missing."
>> (http://www.jhlabs.com/java/maps/proj/index.html)
>>
>> Doing the transformation with the jhlabs-lib would require some 
>> additional
>> coding for the datum transformation. Something i am not able to do with 
>> my
>> tiny knowlege in both fields, java and the math behind all that 
>> transformations.
>
> An alternative is to do the datum shift by an approximate "direct 
> projection"
> from WGS84/long-lat to MGI/Austria Lambert (EPSG:31287).  This is a method 
> where
> you would start by attaching the Austria Lambert projection to WGS84 - 
> that
> is, to the WRONG datum.  The results will not be correct, of course, so 
> then
> you fiddle with the projection parameters until the results are pretty 
> good.
>
> I think many people regard this method as a dirty hack, but the Swedish 
> Land
> Survey recommends it for a Swedish CRS, and I have to admit that I like 
> the
> method.  Out of curiousity, I tried it for MGI/Austria Lambert.  (Ideally, 
> my
> parameter fiddling should be derived from some original survey 
> observations
> for the MGI and WGS84 datums, but I used the 7-parameter datum shift 
> instead.
> This means that my "direct projection" is an approximation of an 
> approximation,
> so it can probably be improved, but not very much I think.)
>
> My result was pretty good. I finally arrived at the following 
> approximation
> of MGI/Austria Lambert:
>
>>proj +datum=WGS84 +proj=lcc +lat_1=46.0103424 +lat_2=48.988621 +lat_0=47.5 
>>+lon_0=13.33616275 +x_0=400268.785 +y_0=400057.553
>
> When I tested it on your example points, I got from FWTools 2.4.7:
>
> WGS84 long lat approx MGI/Austria Lambert, E N diff from geoland.at
> 14.2833092 48.3098392 470507.18  490503.02                0.02 m
> 16.371345  48.211996 625724.63  483601.73 0.07 m
> 9.747076  47.503042 130056.96  406637.16 0.73 m
>
> (I got the geoland.at results from your first letter,
> http://lists.maptools.org/pipermail/proj/2010-October/005454.html )
>
> Since the accuracy of your original 7-parameter datum shift was about 1.5 
> meters,
> the accuracy of my direct projection seems to about as good.
>
> Actually, I think my direct projection stays within 0.1 or 0.2 m 
> difference
> from the 7-parameter datum shift. I guess that geoland.at uses a more
> sophisticated datum shift, perhaps a grid file, which would explain the
> 0.73 m difference for the third example point.
>
> You can read an earlier thread about direction projection at the list 
> archives,
> http://lists.maptools.org/pipermail/proj/2008-December/thread.html
>
> Best regards,
> Mikael Rittri
> Carmenta AB
> Sweden
> http://www.carmenta.com
>
> -----Original Message-----
> From: proj-bounces at lists.maptools.org 
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Markus Hetzmannseder
> Sent: den 28 oktober 2010 15:50
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] truble to translate coordinates from WGS84 to 
> EPSG:31287
>
> On Thu, 28 Oct 2010, Paul Kelly wrote:
>
>> On Thu, 28 Oct 2010, Markus Hetzmannseder wrote:
>>
>>
>> The proj command does a simple forward projection and ignores the
>> +towgs84 datum transformation parameters. The cs2cs command takes
>> these into account to give a more accurate result. If you leave off
>> the +towgs84 parameters from the cs2cs command line you will get the
>> same result as with the proj command line. It looks to me like the
>> JOSM plugin is not doing the datum transformation, only the projection
>> (I had a quick glance at
>> <http://svn.openstreetmap.org/applications/editors/josm/plugins/epsg31
>> 287/src/com/jhlabs/map/proj/LambertConformalConicProjection.java>)
>> to confirm this) - but that is certainly not easy to fix.
>
> Jeah, i know, i was coming to the same result myself too. The epsg31287 
> plugin is using the jhlabs java lib to do all the transformation. And on 
> the the jhlabs site i found under "What is missing" the statement 
> "Coordinate system and geodetic datum conversion is missing."
> (http://www.jhlabs.com/java/maps/proj/index.html)
>
> Doing the transformation with the jhlabs-lib would require some additional 
> coding for the datum transformation. Something i am not able to do with my 
> tiny knowlege in both fields, java and the math behind all that 
> transformations.
>
> Another way would be to rewrite the plugin with another calculation lib in 
> behind. Maybe something from http://geotools.org/ could help...
>
> At least we know now where that offset of the current epsg31287 plugin is 
> coming from. I hope it will help the author of the plugin a bit to find a 
> solution.
>
> Markus
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Wed Nov  3 09:01:50 2010
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 3 Nov 2010 16:01:50 +0000
Subject: [Proj] truble to translate coordinates from WGS84 to EPSG:31287
In-Reply-To: <DB8CEB7136DE43F882B972C99B9A63F0@NoelHmPC>
References: <Pine.LNX.4.64.1010280939070.8698@verdi.algebra.uni-linz.ac.at><4CC93A33.8070308@free.fr><Pine.LNX.4.64.1010281209230.10126@verdi.algebra.uni-linz.ac.at><Pine.LNX.4.62.1010281331230.3129@vortex.ukshells.co.uk><Pine.LNX.4.64.1010281511570.11932@verdi.algebra.uni-linz.ac.at>
	<E4AB3DD44D22854B819908379DE4AD490103FF@SETHNWS023.carmenta.se>
	<DB8CEB7136DE43F882B972C99B9A63F0@NoelHmPC>
Message-ID: <E4AB3DD44D22854B819908379DE4AD490105AC@SETHNWS023.carmenta.se>

Noel,

I didn't use the least squares method to derive my direct projection.
(I didn't have any survey data.)  Instead, my goal was to emulate the 
result of the 7-parameter datum shift.  So I basically fiddled the
parameters, using very few test points. 

> A pertinent question would be, does "direct projection" 
> fit the data better than a 7-parameter transformation? 

My feeling is that when you modify projection parameters 
very slightly, the effects on the projected grid can 
be described as parallel translation, scaling and rotation
- to a first approximation.  Therefore, one should 
expect that direct projection can give equally good 
accuracy as a 7-parameter transform. Not much better,
but not much worse. 

In the paper by Engberg and Lilje, they could usually 
emulate a 7-parameter transform with a few decimeters 
error.  I think this suggests that the two methods 
are (nearly) equally powerful. 
 
For some projection types, though, like Mercator, 
one cannot implement any rotation by fiddling with a 
parameter.  (Perhaps one could replace a Mercator by
a Lambert Conformal Conic with a standard parallel
very near the equator.)  

In the MGI / Austria Lambert example, I found that 
it was easy to fiddle with the projection parameters, 
since one (or two) parameters controls either rotation, 
scaling or parallel translation.

 * the choice of central longitude controls the rotation of the grid;
 * the choice of standard parallels controls the scaling of the grid;
 * the choice of false easting and northing controls the parallel translation.

So I could improve rotation, scaling, and translation independently. 
That is, I didn't have to backtrack.  (I think it is easier with a 
conic projection, since changing the central longitude causes a 
rotation of the grid and nothing else.  With a Transverse Mercator, 
a small change of the central longitude causes mainly a rotation, 
but also some very small other distortions.) 

Mikael Rittri
Carmenta AB
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn (cc)
Sent: den 3 november 2010 14:31
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] truble to translate coordinates from WGS84 to EPSG:31287

Mikael,

If you merely "fiddle" the projection parameters (CM, lat0, scale, false coordinates, parallels maybe, etc.), the "direct projection" method might be regarded as a "dirty hack".  But the paper you cited two years ago:

http://www.fig.net/pub/fig2006/papers/ps05_03/ps05_03_04_engberg_lilje_0670.pdf

presents a methodical process for determining the parameters optimally (i.e. 
by least-squares constraint applied to the the survey data).  Seems rigorous and innovative to me.  And if the projection used is conformal, then the "direction projection" method is by definition conformal, too (i.e. 
preserves the angles of intersecting lines).  The 7-parameter transformation is also conformal, but multiple regression equations (MRE) and grid methods (NADCON, NTv2) are not.  A pertinent question would be, does "direct projection" fit the data better than a 7-parameter transformation?

Noel

Noel Zinn, Principal, Hydrometronics LLC
+1-832-539-1472 (office), +1-281-221-0051 (cell)
noel.zinn at hydrometronics.com (email)
http://www.hydrometronics.com (website)

--------------------------------------------------
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
Sent: Monday, November 01, 2010 9:06 AM
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Subject: Re: [Proj] truble to translate coordinates from WGS84 to EPSG:31287

> Hello Markus,

[-- see post at http://lists.maptools.org/pipermail/proj/2010-November/005464.html --]


From leonidas_liakos at yahoo.gr  Thu Nov  4 01:35:58 2010
From: leonidas_liakos at yahoo.gr (leonidas)
Date: Thu, 4 Nov 2010 01:35:58 -0700 (PDT)
Subject: [Proj] EPSG Code of Google at spatialreference.org
In-Reply-To: <D878870A334A480E903132E09EFA0695@NoelHmPC>
References: <1288721190166-5698534.post@n2.nabble.com>
	<4CD06586.7000404@free.fr>
	<1288727585078-5698884.post@n2.nabble.com>
	<4CD0805A.9080505@free.fr>
	<1288730327226-5699041.post@n2.nabble.com>
	<4CD09310.6060304@free.fr>
	<1288772253665-5700432.post@n2.nabble.com>
	<D878870A334A480E903132E09EFA0695@NoelHmPC>
Message-ID: <1288859758316-5704487.post@n2.nabble.com>


Thank you for the information!
-- 
View this message in context: http://osgeo-org.1803224.n2.nabble.com/EPSG-Code-of-Google-at-spatialreference-org-tp5698534p5704487.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From support.mn at elisanet.fi  Sat Nov  6 04:07:17 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sat, 6 Nov 2010 13:07:17 +0200 (EET)
Subject: [Proj] Proj.4 speed?
Message-ID: <6209309.5456851289041637872.JavaMail.support.mn@elisanet.fi>

Hello,

has anybody done any speed tests with proj.4
lately? Especially has the speed of later version
been verified?

Why do I have a feeling that the 4.7 versions
might be slower than 4.6 versions? At  least the
initialization is slower? or?

My second concern are the NAD grid files and all
that stuff. I am afraid of missing data files and/or
outdated files etc. and everything going bananas?
There might be some good manual about grid
files with proj.4 somewhere which I should read
before starting my cry?

Regards: Janne.



From didier.richard at ign.fr  Fri Nov 12 05:14:13 2010
From: didier.richard at ign.fr (RICHARD Didier)
Date: Fri, 12 Nov 2010 14:14:13 +0100 (CET)
Subject: [Proj] [AXIS] pj_init parsing issues
Message-ID: <32791.87.231.96.39.1289567653.squirrel@webmail.ign.fr>

Hi devs,

I am preparing a ticket for PROJ4JS for axis handling and looking at the
code of pj_init.c when parsing +axis= (trunk version) :


    /* axis orientation */
    if( (pj_param(ctx, start,"saxis").s) != NULL )
    {
        static const char *axis_legal = "ewnsud";
        const char *axis_arg = pj_param(ctx, start,"saxis").s;
[1]     if( strlen(axis_arg) != 3 )
        {
            pj_ctx_set_errno( ctx, PJD_ERR_AXIS );
            goto bum_call;
        }

        if( strchr( axis_legal, axis_arg[0] ) == NULL
            || strchr( axis_legal, axis_arg[1] ) == NULL
[2]         || (axis_arg[2] && strchr( axis_legal, axis_arg[1] ) == NULL))
        {
            pj_ctx_set_errno( ctx, PJD_ERR_AXIS );
            goto bum_call;
        }

        /* it would be nice to validate we don't have on axis repeated */
        strcpy( PIN->axis, axis_arg );
    }


it seems to me that :

[1] implies axis_arg length is 3 : is there any problem with 2D only CRS
(although pj_transform() and pj_adjust_axis() check that) ?

[2] if length is 3 then axis_arg[2] is defined and the comparizon should
be done versus axis_arg[2] and not axis_arg[1] ?

Sincerely,

didier
-- 
RICHARD Didier - Chef du pôle technique du Géoportail
2/4, avenue Pasteur - 94165 Saint Mandé Cedex
Tél : +33 (0) 1 43 98 83 23


From warmerdam at pobox.com  Fri Nov 12 07:53:06 2010
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 12 Nov 2010 10:53:06 -0500
Subject: [Proj] [AXIS] pj_init parsing issues
In-Reply-To: <32791.87.231.96.39.1289567653.squirrel@webmail.ign.fr>
References: <32791.87.231.96.39.1289567653.squirrel@webmail.ign.fr>
Message-ID: <4CDD62E2.2070102@pobox.com>

RICHARD Didier wrote:
> Hi devs,
> 
> I am preparing a ticket for PROJ4JS for axis handling and looking at the
> code of pj_init.c when parsing +axis= (trunk version) :
> 
> 
>     /* axis orientation */
>     if( (pj_param(ctx, start,"saxis").s) != NULL )
>     {
>         static const char *axis_legal = "ewnsud";
>         const char *axis_arg = pj_param(ctx, start,"saxis").s;
> [1]     if( strlen(axis_arg) != 3 )
>         {
>             pj_ctx_set_errno( ctx, PJD_ERR_AXIS );
>             goto bum_call;
>         }
> 
>         if( strchr( axis_legal, axis_arg[0] ) == NULL
>             || strchr( axis_legal, axis_arg[1] ) == NULL
> [2]         || (axis_arg[2] && strchr( axis_legal, axis_arg[1] ) == NULL))
>         {
>             pj_ctx_set_errno( ctx, PJD_ERR_AXIS );
>             goto bum_call;
>         }
> 
>         /* it would be nice to validate we don't have on axis repeated */
>         strcpy( PIN->axis, axis_arg );
>     }
> 
> 
> it seems to me that :
> 
> [1] implies axis_arg length is 3 : is there any problem with 2D only CRS
> (although pj_transform() and pj_adjust_axis() check that) ?

Didier,

I agree that it is desirable to allow 2D axis definitions in which case
the first two would need to be in [ewns] and the third would be assumed
to be "u" when needed.

> [2] if length is 3 then axis_arg[2] is defined and the comparizon should
> be done versus axis_arg[2] and not axis_arg[1] ?

Yes, this does look like a bug.

Could you file a ticket on this?  Feel free to also fix it if you are
comfortable doing so.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From ckarney at sarnoff.com  Fri Nov 19 14:27:50 2010
From: ckarney at sarnoff.com (Charles Karney)
Date: Fri, 19 Nov 2010 17:27:50 -0500
Subject: [Proj] Computing the Lambert conformal conic projection accurately
Message-ID: <19686.63974.716213.551534@puffin.sarnoff.com>

I've posted GeographicLib 1.5 on SourceForge.  See

  http://sf.net/projects/geographiclib/files/distrib/

This includes a couple of features of note:

(a) A Matlab interface to the UTMUPS, MGRS, Geoid, Geodesic classes has
    been included.

(b) I've reformulated the Lambert conical projection to improve its
    numerical accuracy.

To follow up on point (b)...  In the 2 parallel case, the Lambert
projection depends on a parameter n, given by (see Snyder, 1987, p. 108)

  n = (log(m1) - log(m2)) / (log(t1) - log(t2))
    = (log(sec(beta2)) - log(sec(beta1))) / 
	     (asinh(tan(chi2)) - asinh(tan(chi1)))

where {phi,beta,chi}{1,2} are the {geographic,reduced,conformal}
latitudes of the standard parallels.  Obviously, this expression is
inaccurate if the standard parallels are close to one another.  The
normal way of dealing with this (proj4, geotrans) is to substitute the
limiting expression

  n = sin(phi1)

if abs(phi2 - phi1) is "sufficiently" small.  However this has the
disadvantage that there's a range of values of (phi2 - phi1) where
neither the limiting form nor the "exact" formula gives accurate results
numerically.

However, there's a systematic method for dealing with numerical problems
like this, namely the calculus of finite differences.  This method
transforms the expression for n to an equivalent one which can be
evaluated accurately for any phi2 != phi1.  The expression is too
lengthy to include here.  However, I've included fairly extensive
comments within the code for the LambertConformalConic class.  The
technique can also be applied to the projection itself and the code then
naturally deals with the limiting cases of the Mercator and polar
stereographic projections.

A useful resource for divided differences is

  W. M. Kahan and R. J. Fateman,
  Symbolic computation of divided differences,
  SIGSAM Bull. 33(3), 7-28 (1999)
  http://doi.acm.org/10.1145/334714.334716
  http://www.cs.berkeley.edu/~fateman/papers/divdiff.pdf

(Kahan, incidentally, the "father" of the IEEE floating point standard.)

-- 
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662


From ovv at hetnet.nl  Sun Nov 21 03:24:01 2010
From: ovv at hetnet.nl (OvV_HN)
Date: Sun, 21 Nov 2010 12:24:01 +0100
Subject: [Proj] Computing the Lambert conformal conic projection
	accurately
Message-ID: <5CA2FEC6B2FC4895B45EB31251502BD6@PCHP>

There is probably a more serious problem in one of the other projections, 
namely the Bonne projection.
If lat_0 is close to 0, the Sinuoidal projection is taken.
If one compares in a limiting case the northing, produced by the Sinusoidal, 
and for the same set of parameters the northing, produced by the Bonne 
projection, a difference of perhaps 300 meters will be obtained. This 
observation is valid for both the ellipsoidal and the spherical projections.
This difference can probably not be attributed to instabilities in the 
calculation or a difference between a limiting lat_0 (of 1e-10 deg) and 
zero.
Can somebody enlighten me? Does the Sinusoidal projection differ a bit too 
much from the Bonne (but no one cares)?
Is there something wrong in the proj/libproj code?
Or did I do something wrong?

My test case:

Bessel 1841 ellipsoid
lat=40d 32m; lon=-7d 16m;
lat0=1e-10; lon0=-8.131906111111112;
x0=20000; y0=10000; [meters]
bonne ellipsoidal projection
Result: x = 93299.284; y = 4497999.829; [meters]

for lat0=0 the Sinusoidal projection is taken.
Result: x = 93299.284; y = 4498299.575;
Difference in y: 299.75 m

Oscar van Vlijmen


IN REPLY TO:

From: Charles Karney <ckarney <at> sarnoff.com>
Subject: Computing the Lambert conformal conic projection accurately
Newsgroups: gmane.comp.gis.proj-4.devel
Date: 2010-11-19 22:27:50 GMT (1 day, 12 hours and 30 minutes ago)

I've posted GeographicLib 1.5 on SourceForge.  See

  http://sf.net/projects/geographiclib/files/distrib/

This includes a couple of features of note:

(a) A Matlab interface to the UTMUPS, MGRS, Geoid, Geodesic classes has
    been included.

(b) I've reformulated the Lambert conical projection to improve its
    numerical accuracy.

To follow up on point (b)...  In the 2 parallel case, the Lambert
projection depends on a parameter n, given by (see Snyder, 1987, p. 108)

  n = (log(m1) - log(m2)) / (log(t1) - log(t2))
    = (log(sec(beta2)) - log(sec(beta1))) /
      (asinh(tan(chi2)) - asinh(tan(chi1)))

where {phi,beta,chi}{1,2} are the {geographic,reduced,conformal}
latitudes of the standard parallels.  Obviously, this expression is
inaccurate if the standard parallels are close to one another.  The
normal way of dealing with this (proj4, geotrans) is to substitute the
limiting expression

etc.....





From strebe at aol.com  Sun Nov 21 10:39:10 2010
From: strebe at aol.com (strebe)
Date: Sun, 21 Nov 2010 10:39:10 -0800
Subject: [Proj] Computing the Lambert conformal conic
	projection	accurately
In-Reply-To: <5CA2FEC6B2FC4895B45EB31251502BD6@PCHP>
Message-ID: <DB5A0EB4.F1A4.45A9.8B28.5DD87F074471@aol.com>

Oscar:

Not to answer the question about proj specifically, since I do not know, but to talk about the Bonne in general: The Bonne is highly unstable when the standard parallel is near the equator. The formulas must get recast from the usual forms, and, once recast, must further get developed as a (very complicated) series for latitudes close to the equator. If proj is not doing this then gross errors should be expected.

Why do you say that the difference probably cannot be attributed to instabilities?

The Bonne with a standard parallel of 0° is identical to the sinusoidal.

Regards,
— daan Strebe


On Nov 21, 2010, at 3:24:01 AM, OvV_HN <ovv at hetnet.nl> wrote:

There is probably a more serious problem in one of the other projections, 
namely the Bonne projection.
If lat_0 is close to 0, the Sinuoidal projection is taken.
If one compares in a limiting case the northing, produced by the Sinusoidal, 
and for the same set of parameters the northing, produced by the Bonne 
projection, a difference of perhaps 300 meters will be obtained. This 
observation is valid for both the ellipsoidal and the spherical projections.
This difference can probably not be attributed to instabilities in the 
calculation or a difference between a limiting lat_0 (of 1e-10 deg) and 
zero.
Can somebody enlighten me? Does the Sinusoidal projection differ a bit too 
much from the Bonne (but no one cares)?
Is there something wrong in the proj/libproj code?
Or did I do something wrong?

My test case:

Bessel 1841 ellipsoid
lat=40d 32m; lon=-7d 16m;
lat0=1e-10; lon0=-8.131906111111112;
x0=20000; y0=10000; [meters]
bonne ellipsoidal projection
Result: x = 93299.284; y = 4497999.829; [meters]

for lat0=0 the Sinusoidal projection is taken.
Result: x = 93299.284; y = 4498299.575;
Difference in y: 299.75 m

Oscar van Vlijmen


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101121/d9e97050/attachment.html>

From kassimaiden at gmail.com  Thu Nov 25 05:25:41 2010
From: kassimaiden at gmail.com (Kassiane Mentz)
Date: Thu, 25 Nov 2010 11:25:41 -0200
Subject: [Proj] Unknown Datum
Message-ID: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>

Hello,

We are in a city in southern Brazil (Porto Alegre - Rio Grande do Sul), and
have a lot of maps that have a
unknown local Datum.
We are using an application that uses Mapserver webmapping but is having
trouble with our maps becouse
they were using an unknown datum, even our forecast and our ellipsoid are
known.
Trying to makem with the mapserver automatically convert our maps to WGS84,
which is what most
approached our features, we decided to insert a new proj4 Datum.
In file PJ_Datums.c we inserted a new reference vector in pj_datums [] for
our datum, passing the parameters
conversion. Also insert an entry in the archive world for our specific case.

Compiled the library with our modifications and uses MapServer to perform a
test. Using the command Shp2img, we realized that this stopped working,
which indicates that something happened in Proj4.
We would like to know if there really is a way to include a unknown Datum to
the proj4 perform the conversion.

The following parameters used:

Projection: Transverse Mercator

Ellipsoid: International 1909 (Hayford)

X Translation (m) -105.3687744788

Y Translation (m) 128.2533004372

Z Translation (m) 5.9501954062

X Rotation (seconds) 0.2526444267

Y Rotation (seconds) -4.9126506172

Z Rotation (seconds) -2.1177220547

Scaling factor 0.99998717166457

False East X 5,000,000 m

False North Y 200,000 m

PS.: We emphasize that we are just programmers, and we are working with
cartographers, who does not dominate the program.



-- 
Thanks;

Kassiane
Microsoft Office Specialist
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101125/2062558f/attachment.html>

From jrepetto at free.fr  Thu Nov 25 06:42:17 2010
From: jrepetto at free.fr (Jean-Claude Repetto)
Date: Thu, 25 Nov 2010 15:42:17 +0100
Subject: [Proj] Unknown Datum
In-Reply-To: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>
References: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>
Message-ID: <4CEE75C9.1000207@free.fr>

Le 25/11/2010 14:25, Kassiane Mentz a écrit :
> We are in a city in southern Brazil (Porto Alegre - Rio Grande do Sul),
> and have a lot of maps that have a
> unknown local Datum.
> We are using an application that uses Mapserver webmapping but is having
> trouble with our maps becouse
> they were using an unknown datum, even our forecast and our ellipsoid
> are known.
> Trying to makem with the mapserver automatically convert our maps to
> WGS84, which is what most
> approached our features, we decided to insert a new proj4 Datum.
> In file PJ_Datums.c we inserted a new reference vector in pj_datums []
> for our datum, passing the parameters
> conversion. Also insert an entry in the archive world for our specific
> case.
> Compiled the library with our modifications and uses MapServer to
> perform a test. Using the command Shp2img, we realized that this stopped
> working, which indicates that something happened in Proj4.
> We would like to know if there really is a way to include a unknown
> Datum to the proj4 perform the conversion.

Hello,

You don't need to change the PROJ.4 source code. Just use the +towgs84 
parameter to perform the datum transformation.

Jean-Claude


From kassimaiden at gmail.com  Thu Nov 25 06:52:08 2010
From: kassimaiden at gmail.com (Kassiane Mentz)
Date: Thu, 25 Nov 2010 12:52:08 -0200
Subject: [Proj] Unknown Datum
In-Reply-To: <4CEE75C9.1000207@free.fr>
References: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>
	<4CEE75C9.1000207@free.fr>
Message-ID: <AANLkTinW_BQZ3r=5EgfxUtojCKUsY85Tsm+kZQrE5Wbj@mail.gmail.com>

Hi. Thanks for your answer, but I maybe you don't understood my problem.
How to use parameters convertion? And where insert the new Datum?
How I will use the +towgs84 parameters if the Proj4 didn't recognized my
datum's parameters?

Thanks;

2010/11/25 Jean-Claude Repetto <jrepetto at free.fr>

> Le 25/11/2010 14:25, Kassiane Mentz a écrit :
> > We are in a city in southern Brazil (Porto Alegre - Rio Grande do Sul),
> > and have a lot of maps that have a
> > unknown local Datum.
> > We are using an application that uses Mapserver webmapping but is having
> > trouble with our maps becouse
> > they were using an unknown datum, even our forecast and our ellipsoid
> > are known.
> > Trying to makem with the mapserver automatically convert our maps to
> > WGS84, which is what most
> > approached our features, we decided to insert a new proj4 Datum.
> > In file PJ_Datums.c we inserted a new reference vector in pj_datums []
> > for our datum, passing the parameters
> > conversion. Also insert an entry in the archive world for our specific
> > case.
> > Compiled the library with our modifications and uses MapServer to
> > perform a test. Using the command Shp2img, we realized that this stopped
> > working, which indicates that something happened in Proj4.
> > We would like to know if there really is a way to include a unknown
> > Datum to the proj4 perform the conversion.
>
> Hello,
>
> You don't need to change the PROJ.4 source code. Just use the +towgs84
> parameter to perform the datum transformation.
>
> Jean-Claude
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



-- 
Atenciosamente;

Kassiane S. Mentz
Microsoft Office Specialist
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101125/1280e0f0/attachment.html>

From jrepetto at free.fr  Thu Nov 25 07:05:48 2010
From: jrepetto at free.fr (Jean-Claude Repetto)
Date: Thu, 25 Nov 2010 16:05:48 +0100
Subject: [Proj] Unknown Datum
In-Reply-To: <AANLkTinW_BQZ3r=5EgfxUtojCKUsY85Tsm+kZQrE5Wbj@mail.gmail.com>
References: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>
	<4CEE75C9.1000207@free.fr>
	<AANLkTinW_BQZ3r=5EgfxUtojCKUsY85Tsm+kZQrE5Wbj@mail.gmail.com>
Message-ID: <4CEE7B4C.6030005@free.fr>

Le 25/11/2010 15:52, Kassiane Mentz wrote :
> Hi. Thanks for your answer, but I maybe you don't understood my problem.
> How to use parameters convertion? And where insert the new Datum?
> How I will use the +towgs84 parameters if the Proj4 didn't recognized my
> datum's parameters?

Give me a test point (coordinates of a reference point in WGS84 and in 
your local datum), and I'll show you how to perform the conversion with 
PROJ.4.

Jean-Claude


From kassimaiden at gmail.com  Fri Nov 26 04:09:02 2010
From: kassimaiden at gmail.com (Kassiane Mentz)
Date: Fri, 26 Nov 2010 10:09:02 -0200
Subject: [Proj] Unknown Datum
In-Reply-To: <4CEE7B4C.6030005@free.fr>
References: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>
	<4CEE75C9.1000207@free.fr>
	<AANLkTinW_BQZ3r=5EgfxUtojCKUsY85Tsm+kZQrE5Wbj@mail.gmail.com>
	<4CEE7B4C.6030005@free.fr>
Message-ID: <AANLkTinbzg1dMXaUMrg8asyMkLCk5tWGLLq63ybrtYzN@mail.gmail.com>

Hi.
Thank you for your interest in help us in our problem.
I'm send to you three test points:

WGS84 (X Y Z)

Point 1: 3462708,8379 -4304089,3245 -3178137,3434
Point 2: 3463886,5098 -4304373,7494 -3176008,3278
Point 3: 3460782,4780 -4304441,1369 -3179721,8848

Local Datum (X Y Z)

Point 1: 3462890,1150 -4304304,5191 -3178106,7914
Point 2: 3464067,7475 -4304588,9297 -3175977,7717
Point 3: 3460963,7766 -4304656,2961 -3179691,4114

Ps: I remind you that we already have the conversion parameters (as you can
see in my first email).

Thanks.

2010/11/25 Jean-Claude Repetto <jrepetto at free.fr>

> Le 25/11/2010 15:52, Kassiane Mentz wrote :
> > Hi. Thanks for your answer, but I maybe you don't understood my problem.
> > How to use parameters convertion? And where insert the new Datum?
> > How I will use the +towgs84 parameters if the Proj4 didn't recognized my
> > datum's parameters?
>
> Give me a test point (coordinates of a reference point in WGS84 and in
> your local datum), and I'll show you how to perform the conversion with
> PROJ.4.
>
> Jean-Claude
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



-- 
Atenciosamente;

Kassiane S. Mentz
Microsoft Office Specialist
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101126/e9a4de6f/attachment.html>

From jrepetto at free.fr  Fri Nov 26 04:56:49 2010
From: jrepetto at free.fr (Jean-Claude REPETTO)
Date: Fri, 26 Nov 2010 13:56:49 +0100
Subject: [Proj] Unknown Datum
In-Reply-To: <AANLkTinbzg1dMXaUMrg8asyMkLCk5tWGLLq63ybrtYzN@mail.gmail.com>
References: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>
	<4CEE75C9.1000207@free.fr>
	<AANLkTinW_BQZ3r=5EgfxUtojCKUsY85Tsm+kZQrE5Wbj@mail.gmail.com>
	<4CEE7B4C.6030005@free.fr>
	<AANLkTinbzg1dMXaUMrg8asyMkLCk5tWGLLq63ybrtYzN@mail.gmail.com>
Message-ID: <4CEFAE91.4050907@free.fr>

On 11/26/10 13:09, Kassiane Mentz wrote:
> Hi.
> Thank you for your interest in help us in our problem.
> I'm send to you three test points:
>
> WGS84 (X Y Z)
>
> Point 1: 3462708,8379 -4304089,3245 -3178137,3434
> Point 2: 3463886,5098 -4304373,7494 -3176008,3278
> Point 3: 3460782,4780 -4304441,1369 -3179721,8848
>
> Local Datum (X Y Z)
>
> Point 1: 3462890,1150 -4304304,5191 -3178106,7914
> Point 2: 3464067,7475 -4304588,9297 -3175977,7717
> Point 3: 3460963,7766 -4304656,2961 -3179691,4114
>
> Ps: I remind you that we already have the conversion parameters (as you
> can see in my first email).

Hi,

These parameters :
+towgs84=-105.3687744788,128.2533004372,5.9501954062,-0.2526444267,4.9126506172,2.1177220547,-12.82833543
seem to give good results :

$ cs2cs +proj=geocent +towgs84=0,0,0,0,0,0,0 +to +proj=geocent 
+towgs84=-105.3687744788,128.2533004372,5.9501954062,-0.2526444267,4.9126506172,2.1177220547,-12.82833543
3462708.8379 -4304089.3245 -3178137.3434
3462890.13	-4304304.45 -3178106.86
3463886.5098 -4304373.7494 -3176008.3278
3464067.77	-4304588.90 -3175977.79
3460782.4780 -4304441.1369 -3179721.8848
3460963.78	-4304656.25 -3179691.47

Regards,
Jean-Claude


From cjmce at lsu.edu  Fri Nov 26 08:45:19 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 26 Nov 2010 10:45:19 -0600
Subject: [Proj] Unknown Datum
References: <AANLkTik12L3JzHrP7xodbATi15Z0jizfZuA39oZRPvMR@mail.gmail.com>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A6661@email002.lsu.edu>

This is likely based on the Astro Position at Extremo Nordeste da Base de Leste 1904.
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of Kassiane Mentz
Sent: Thu 25-Nov-10 07:25
To: proj at lists.maptools.org
Subject: [Proj] Unknown Datum


Hello,

We are in a city in southern Brazil (Porto Alegre - Rio Grande do Sul), and have a lot of maps that have a
unknown local Datum.
We are using an application that uses Mapserver webmapping but is having trouble with our maps becouse
they were using an unknown datum, even our forecast and our ellipsoid are known. 
Trying to makem with the mapserver automatically convert our maps to WGS84, which is what most
approached our features, we decided to insert a new proj4 Datum.
In file PJ_Datums.c we inserted a new reference vector in pj_datums [] for our datum, passing the parameters
conversion. Also insert an entry in the archive world for our specific case. 
Compiled the library with our modifications and uses MapServer to perform a test. Using the command Shp2img, we realized that this stopped working, which indicates that something happened in Proj4.
We would like to know if there really is a way to include a unknown Datum to the proj4 perform the conversion.

The following parameters used:

Projection: Transverse Mercator

Ellipsoid: International 1909 (Hayford)

X Translation (m) -105.3687744788

Y Translation (m) 128.2533004372

Z Translation (m) 5.9501954062

X Rotation (seconds) 0.2526444267

Y Rotation (seconds) -4.9126506172

Z Rotation (seconds) -2.1177220547

Scaling factor 0.99998717166457

False East X 5,000,000 m

False North Y 200,000 m

PS.: We emphasize that we are just programmers, and we are working with cartographers, who does not dominate the program.



-- 
Thanks; 


Kassiane

Microsoft Office Specialist


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101126/fa44643d/attachment.html>

From emmiller at gmail.com  Tue Nov 30 07:26:39 2010
From: emmiller at gmail.com (Evan Miller)
Date: Tue, 30 Nov 2010 09:26:39 -0600
Subject: [Proj] geod C library?
Message-ID: <AANLkTimdY9aKOjhnrggaUe5TrTsYY7=v5rpRrtk6vy_9@mail.gmail.com>

Hi all,

I am looking for the functionality provided by "geod" and "invgeod" (great
circle calculations) wrapped up in a plain C library. I found Charles
Karney's Geographic Library, but that's C++.

Does anyone know of such a library? Is there any reason (other than time and
effort) that Proj.4 doesn't provide a geod API?

Thanks,

Evan Miller
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101130/db9f2b97/attachment.html>

From cjmce at lsu.edu  Tue Nov 30 08:58:12 2010
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Tue, 30 Nov 2010 10:58:12 -0600
Subject: [Proj] geod C library?
References: <AANLkTimdY9aKOjhnrggaUe5TrTsYY7=v5rpRrtk6vy_9@mail.gmail.com>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7026A666D@email002.lsu.edu>

Consider the source code for GeoTrans, the package available from www.nga.mil - however, I don't know if it's C or C++.
 
Clifford J. Mugnier, C.P., C.M.S.
Chief of Geodesy,
Center for GeoInformatics
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4578 [Research] 
Cell: (225) 238-8975 [Academic & Research]
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Fellow Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group


________________________________

From: proj-bounces at lists.maptools.org on behalf of Evan Miller
Sent: Tue 30-Nov-10 09:26
To: proj at lists.maptools.org
Subject: [Proj] geod C library?


Hi all,


I am looking for the functionality provided by "geod" and "invgeod" (great circle calculations) wrapped up in a plain C library. I found Charles Karney's Geographic Library, but that's C++.

Does anyone know of such a library? Is there any reason (other than time and effort) that Proj.4 doesn't provide a geod API?

Thanks,


Evan Miller
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101130/9cdf54b8/attachment.html>

From emmiller at gmail.com  Tue Nov 30 12:58:14 2010
From: emmiller at gmail.com (Evan Miller)
Date: Tue, 30 Nov 2010 14:58:14 -0600
Subject: [Proj] geod C library?
In-Reply-To: <A2A1310793A19942B3F8923D69C78D7A908DFA6C56@MALIBU.sarnoff.internal>
References: <AANLkTimdY9aKOjhnrggaUe5TrTsYY7=v5rpRrtk6vy_9@mail.gmail.com>
	<A2A1310793A19942B3F8923D69C78D7A908DFA6C56@MALIBU.sarnoff.internal>
Message-ID: <AANLkTinxJqj17Yt3+VD3NUhW4FdC47YnM=8L29aJSfi2@mail.gmail.com>

Thanks for the ideas. I ended up using libproject:

http://home.comcast.net/~gevenden56/proj/

The geodesic functions are not very well documented, but code like
this did the trick for a distance calculation:

	#import <project.h>

	/* WGS84 */
	PROJ_ELLIPS E;
	E.a = 6378137.0;
	E.f = 1/298.257223563;
	E.es = (2 - E.f) * E.f;
	E.one_es = 1 - E.es;
	
	PROJ_PT_LPH src_pt, dst_pt;
	src_pt.h = 0.0;
	dst_pt.h = 0.0;
	
	PROJ_LINE L;
	L.E = &E;
	L.pt1 = &src_pt;
	L.pt2 = &dst_pt;

	src_pt.lam = /* longitude in radians */;
	src_pt.phi = /* latitude in radians */;

	dst_pt.lam = /* longitude in radians */;
	dst_pt.phi = /* latitude in radians */;

	proj_ginverse(&L);

	/* Distance now in L.S, azimuths in L.az12 and L.az21 */

On Tue, Nov 30, 2010 at 2:46 PM, Karney, Charles <ckarney at sarnoff.com> wrote:
>
> > From: Evan Miller [emmiller at gmail.com]
> > Sent: Tuesday, November 30, 2010 10:26
> >
> > I am looking for the functionality provided by "geod" and "invgeod"
> > (great circle calculations) wrapped up in a plain C library. I found
> > Charles Karney's Geographic Library, but that's C++.
>
> I'm not sure whether this will help you...  However a C wrapper to
> GeographicLib is a possibility.  For example:
>
> interface.cpp:
> ================================================================
> #include "GeographicLib/Geodesic.hpp"
>
> extern "C"
> void GeodInverse(double lat1, double lon1, double lat2, double lon2,
>                 double *s12, double *azi1, double *azi2) {
>    GeographicLib::Geodesic::WGS84.Inverse(lat1, lon1, lat2, lon2,
>                                           *s12, *azi1, *azi2);
>    return;
> }
> ================================================================
>
> main.c
> ================================================================
> #include <stdio.h>
>
> void GeodInverse(double lat1, double lon1, double lat2, double lon2,
>                 double *s12, double *azi1, double *azi2);
>
> int main() {
>  double lat1, lon1, lat2, lon2;
>  double s12, azi1, azi2;
>  scanf("%lf %lf %lf %lf\n", &lat1, &lon1, &lat2, &lon2);
>  GeodInverse(lat1, lon1, lat2, lon2, &s12, &azi1, &azi2);
>  printf("%.8f %.8f %.3f\n", azi1, azi2, s12);
> }
> ================================================================
>
> Makefile
> ================================================================
> test: main.o interface.o
>        g++ -o $@ $^ -lGeographic -Wl,--rpath -Wl,/usr/local/lib
> main.o: main.c
>        gcc -c $^
> interface.o: interface.cpp
>        g++ -c $^
> ================================================================
>
> make test
> echo 1 2 3 4 | ./test
> 45.14416881 45.21398561 313705.445
>
> --
> Charles Karney <ckarney at sarnoff.com>
> Sarnoff Corporation, Princeton, NJ 08543-5300
>
> Tel: +1 609 734 2312
> Fax: +1 609 734 2662
>
>
>
> This message (and any attachments) contains Sarnoff proprietary information. Such information may be subject to the terms of confidentiality or other agreements. If you are not the named addressee, you should not disseminate, distribute, or copy this email. If you have received this email by mistake, please notify the sender immediately by email and delete this email from your system. If you are not the intended recipient, you are notified that disclosing, copying, distributing, or taking any action in reliance on the contents of this information is strictly prohibited.



--
Evan Miller
http://www.evanmiller.org/


From ckarney at Sarnoff.com  Tue Nov 30 12:46:16 2010
From: ckarney at Sarnoff.com (Karney, Charles)
Date: Tue, 30 Nov 2010 15:46:16 -0500
Subject: [Proj] geod C library?
In-Reply-To: <AANLkTimdY9aKOjhnrggaUe5TrTsYY7=v5rpRrtk6vy_9@mail.gmail.com>
References: <AANLkTimdY9aKOjhnrggaUe5TrTsYY7=v5rpRrtk6vy_9@mail.gmail.com>
Message-ID: <A2A1310793A19942B3F8923D69C78D7A908DFA6C56@MALIBU.sarnoff.internal>

> From: Evan Miller [emmiller at gmail.com]
> Sent: Tuesday, November 30, 2010 10:26
>
> I am looking for the functionality provided by "geod" and "invgeod"
> (great circle calculations) wrapped up in a plain C library. I found
> Charles Karney's Geographic Library, but that's C++.

I'm not sure whether this will help you...  However a C wrapper to
GeographicLib is a possibility.  For example:

interface.cpp:
================================================================
#include "GeographicLib/Geodesic.hpp"

extern "C"
void GeodInverse(double lat1, double lon1, double lat2, double lon2,
                 double *s12, double *azi1, double *azi2) {
    GeographicLib::Geodesic::WGS84.Inverse(lat1, lon1, lat2, lon2,
                                           *s12, *azi1, *azi2);
    return;
}
================================================================

main.c
================================================================
#include <stdio.h>

void GeodInverse(double lat1, double lon1, double lat2, double lon2,
                 double *s12, double *azi1, double *azi2);

int main() {
  double lat1, lon1, lat2, lon2;
  double s12, azi1, azi2;
  scanf("%lf %lf %lf %lf\n", &lat1, &lon1, &lat2, &lon2);
  GeodInverse(lat1, lon1, lat2, lon2, &s12, &azi1, &azi2);
  printf("%.8f %.8f %.3f\n", azi1, azi2, s12);
}
================================================================

Makefile
================================================================
test: main.o interface.o
        g++ -o $@ $^ -lGeographic -Wl,--rpath -Wl,/usr/local/lib
main.o: main.c
        gcc -c $^
interface.o: interface.cpp
        g++ -c $^
================================================================

make test
echo 1 2 3 4 | ./test
45.14416881 45.21398561 313705.445

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662



This message (and any attachments) contains Sarnoff proprietary information. Such information may be subject to the terms of confidentiality or other agreements. If you are not the named addressee, you should not disseminate, distribute, or copy this email. If you have received this email by mistake, please notify the sender immediately by email and delete this email from your system. If you are not the intended recipient, you are notified that disclosing, copying, distributing, or taking any action in reliance on the contents of this information is strictly prohibited.


From ckarney at Sarnoff.com  Tue Nov 30 08:45:29 2010
From: ckarney at Sarnoff.com (Karney, Charles)
Date: Tue, 30 Nov 2010 11:45:29 -0500
Subject: [Proj] geod C library?
In-Reply-To: <AANLkTimdY9aKOjhnrggaUe5TrTsYY7=v5rpRrtk6vy_9@mail.gmail.com>
References: <AANLkTimdY9aKOjhnrggaUe5TrTsYY7=v5rpRrtk6vy_9@mail.gmail.com>
Message-ID: <A2A1310793A19942B3F8923D69C78D7A908DFA6C51@MALIBU.sarnoff.internal>

> From: Evan Miller [emmiller at gmail.com]
> Sent: Tuesday, November 30, 2010 10:26
>
> I am looking for the functionality provided by "geod" and "invgeod"
> (great circle calculations) wrapped up in a plain C library. I found
> Charles Karney's Geographic Library, but that's C++.

I'm not sure whether this will help you...  However a C wrapper to
GeographicLib is a possibility.  For example:

interface.cpp:
================================================================
#include "GeographicLib/Geodesic.hpp"

extern "C"
void GeodInverse(double lat1, double lon1, double lat2, double lon2,
                 double *s12, double *azi1, double *azi2) {
    GeographicLib::Geodesic::WGS84.Inverse(lat1, lon1, lat2, lon2,
                                           *s12, *azi1, *azi2);
    return;
}
================================================================

main.c
================================================================
#include <stdio.h>

void GeodInverse(double lat1, double lon1, double lat2, double lon2,
                 double *s12, double *azi1, double *azi2);

int main() {
  double lat1, lon1, lat2, lon2;
  double s12, azi1, azi2;
  scanf("%lf %lf %lf %lf\n", &lat1, &lon1, &lat2, &lon2);
  GeodInverse(lat1, lon1, lat2, lon2, &s12, &azi1, &azi2);
  printf("%.8f %.8f %.3f\n", azi1, azi2, s12);
}
================================================================

Makefile
================================================================
test: main.o interface.o
        g++ -o $@ $^ -lGeographic -Wl,--rpath -Wl,/usr/local/lib
main.o: main.c
        gcc -c $^
interface.o: interface.cpp
        g++ -c $^
================================================================

make test
echo 1 2 3 4 | ./test
45.14416881 45.21398561 313705.445

--
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

Tel: +1 609 734 2312
Fax: +1 609 734 2662



This message (and any attachments) contains Sarnoff proprietary information. Such information may be subject to the terms of confidentiality or other agreements. If you are not the named addressee, you should not disseminate, distribute, or copy this email. If you have received this email by mistake, please notify the sender immediately by email and delete this email from your system. If you are not the intended recipient, you are notified that disclosing, copying, distributing, or taking any action in reliance on the contents of this information is strictly prohibited.


