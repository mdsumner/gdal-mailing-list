From kristianevers at gmail.com  Wed Sep  1 09:50:42 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 1 Sep 2021 18:50:42 +0200
Subject: [PROJ] PROJ 8.1.1RC2
In-Reply-To: <F4B26FB1-CB7C-4178-9297-CE0953214F14@gmail.com>
References: <F4B26FB1-CB7C-4178-9297-CE0953214F14@gmail.com>
Message-ID: <F143332C-4315-4DC5-B3B7-E4E3FC01052D@gmail.com>

I forgot[0] to call a vote for promotion to final release. I?ll prepare the release tonight
and if we get a few quick votes in I?ll announce the release in 3-4 hours. If not
it will be delayed a bit and get release tomorrow.

I?ll start with my +1

/Kristian

[0] Been a bit sick over the last couple of days, focus has been elsewhere unfortunately.


> On 29 Aug 2021, at 16:34, Kristian Evers <kristianevers at gmail.com> wrote:
> 
> All,
> 
> A minor issue with the CMake setup was found in RC1 so here?s RC2:
> 
> http://download.osgeo.org/proj/proj-8.1.1RC2.tar.gz
> http://download.osgeo.org/proj/proj-8.1.1RC2.zip
> 
> /Kristian


From howard at hobu.co  Wed Sep  1 09:54:02 2021
From: howard at hobu.co (Howard Butler)
Date: Wed, 1 Sep 2021 11:54:02 -0500
Subject: [PROJ] PROJ 8.1.1RC2
In-Reply-To: <F143332C-4315-4DC5-B3B7-E4E3FC01052D@gmail.com>
References: <F4B26FB1-CB7C-4178-9297-CE0953214F14@gmail.com>
 <F143332C-4315-4DC5-B3B7-E4E3FC01052D@gmail.com>
Message-ID: <8CEC772B-63F1-408E-83D9-519F67E6E0F2@hobu.co>

+1

> On Sep 1, 2021, at 11:50 AM, Kristian Evers <kristianevers at gmail.com> wrote:
> 
> I forgot[0] to call a vote for promotion to final release. I?ll prepare the release tonight
> and if we get a few quick votes in I?ll announce the release in 3-4 hours. If not
> it will be delayed a bit and get release tomorrow.
> 
> I?ll start with my +1
> 
> /Kristian
> 
> [0] Been a bit sick over the last couple of days, focus has been elsewhere unfortunately.
> 
> 
>> On 29 Aug 2021, at 16:34, Kristian Evers <kristianevers at gmail.com> wrote:
>> 
>> All,
>> 
>> A minor issue with the CMake setup was found in RC1 so here?s RC2:
>> 
>> http://download.osgeo.org/proj/proj-8.1.1RC2.tar.gz
>> http://download.osgeo.org/proj/proj-8.1.1RC2.zip
>> 
>> /Kristian
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From even.rouault at spatialys.com  Wed Sep  1 09:55:12 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 1 Sep 2021 18:55:12 +0200
Subject: [PROJ] PROJ 8.1.1RC2
In-Reply-To: <F143332C-4315-4DC5-B3B7-E4E3FC01052D@gmail.com>
References: <F4B26FB1-CB7C-4178-9297-CE0953214F14@gmail.com>
 <F143332C-4315-4DC5-B3B7-E4E3FC01052D@gmail.com>
Message-ID: <c005e29d-869e-6b29-a831-431840dc1ee2@spatialys.com>


Le 01/09/2021 ? 18:50, Kristian Evers a ?crit?:
> I forgot[0] to call a vote for promotion to final release. I?ll prepare the release tonight
> and if we get a few quick votes in I?ll announce the release in 3-4 hours. If not
> it will be delayed a bit and get release tomorrow.
>
> I?ll start with my +1
+1 Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From kristianevers at gmail.com  Wed Sep  1 11:27:12 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 1 Sep 2021 20:27:12 +0200
Subject: [PROJ] PROJ 8.1.1RC2
In-Reply-To: <c005e29d-869e-6b29-a831-431840dc1ee2@spatialys.com>
References: <F4B26FB1-CB7C-4178-9297-CE0953214F14@gmail.com>
 <F143332C-4315-4DC5-B3B7-E4E3FC01052D@gmail.com>
 <c005e29d-869e-6b29-a831-431840dc1ee2@spatialys.com>
Message-ID: <05D35061-5727-494C-BC29-DF05B02D97A1@gmail.com>

With (very speedy) +1?s from myself, Even and Howard I declare the motion passed.

Release announce will follow shortly.

/Kristian

> On 1 Sep 2021, at 18:55, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> 
> Le 01/09/2021 ? 18:50, Kristian Evers a ?crit :
>> I forgot[0] to call a vote for promotion to final release. I?ll prepare the release tonight
>> and if we get a few quick votes in I?ll announce the release in 3-4 hours. If not
>> it will be delayed a bit and get release tomorrow.
>> 
>> I?ll start with my +1
> +1 Even
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 


From kristianevers at gmail.com  Wed Sep  1 11:29:49 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 1 Sep 2021 20:29:49 +0200
Subject: [PROJ] PROJ 8.1.1
Message-ID: <24E0A8AB-43B0-4F9A-827D-5577447ABC57@gmail.com>

On behalf of the PROJ development team I am happy to announce the
release of PROJ 8.1.1


Download the archives here:

http://download.osgeo.org/proj/proj-8.1.1.tar.gz <http://download.osgeo.org/proj/proj-8.1.1.tar.gz>
http://download.osgeo.org/proj/proj-8.1.1.zip <http://download.osgeo.org/proj/proj-8.1.1.zip>


The PROJ release includes a number of bug fixes and updates to the
transformation database (see details below).


/Kristian

8.1.1 Release Notes
-------------------

 Updates
 -------

 o EPSG Database updated to version 10.028 (#2773)

 Bug Fixes
 ---------

 o Include algorithm header file to avoid build errors on Alpine Linux (#2769)

 o CMake: fix installation of executables on iOS (#2766)

 o Associate extents to transformations of CRS's that include GEOIDMODEL (#2769)

 o Logging: avoid some overhead when logging is not enabled (#2775)

 o ortho: remove useless and invalid log trace (#2777)

 o CMake: remove external nlohmann_json from INTERFACE_LINK_LIBRARIES target (#2781)
 o createOperations(): fix SourceTargetCRSExtentUse::NONE mode (#2783)

 o GeoTIFF grid reading: perf improvements (#2788)

 o Conversion::createUTM(): avoid integer overflow (#2796)

 o Inverse laea ellipsoidal: return PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN
   when appropriates (#2801)

 o Make sure that proj_crs_promote_to_3D returns a derived CRS (#2806)

 o createOperations(): fix missing deg<-->rad conversion when transforming with a
   CRS that has a fallback-to-PROJ4-string behaviour and is a BoundCRS of a
   GeographicCRS (#2808)

 o WKT2 import/export: preserve PROJ.4 CRS extension string in REMARKS[] (#2812)

 o BoundCRS: accept importing/exporting in WKT2 and PROJJSON the
   scope/area/extent/id attributes (#2815)

 o ConcatenatedOperation::fixStepsDirection(): fix bad chaining of steps when
   inverse map projection is involved in non-final step (#2819)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210901/f48ac0c5/attachment.html>

From LSchupp at moba.de  Thu Sep  9 02:34:25 2021
From: LSchupp at moba.de (Schupp, Leon)
Date: Thu, 9 Sep 2021 09:34:25 +0000
Subject: [PROJ] 2D Helmert transformation after the map projection and PROJ
 won't use added transformation from the database
Message-ID: <AM0PR09MB35887028FD83856488F5153AB5D59@AM0PR09MB3588.eurprd09.prod.outlook.com>

Hello everyone,

I got 2 Questions.

First question:
Is it possible to add a 2D Helmert transformation to the proj.db database. I tried adding it to the helmert_transformation_table, but proj.db didn't let me choose a projected crs as source transformation.
I want to add a helmert transformation which uses ETRS89/GK25 as source crs and transforms it into the finnish VVJ crs.

My second question is:
I tried adding the helmert transformation as a proj string to the other_transformation table, but proj won't use it. I also added an entry into the usage table for the transformation.
When I add a normal helmert transformation or a grid transformation, proj has no problem using them after they are added, but not when I add a transformation in other_transformation.

Thanks for your help.

Leon Schupp
Student - Development Engineer


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210909/01fb8ae8/attachment.html>

From even.rouault at spatialys.com  Thu Sep  9 02:55:35 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 9 Sep 2021 11:55:35 +0200
Subject: [PROJ] 2D Helmert transformation after the map projection and
 PROJ won't use added transformation from the database
In-Reply-To: <AM0PR09MB35887028FD83856488F5153AB5D59@AM0PR09MB3588.eurprd09.prod.outlook.com>
References: <AM0PR09MB35887028FD83856488F5153AB5D59@AM0PR09MB3588.eurprd09.prod.outlook.com>
Message-ID: <ca6f62b6-980d-d56a-cdce-5626f090aa06@spatialys.com>

Leon,
>
> First question:
>
> Is it possible to add a 2D Helmert transformation to the proj.db 
> database. I tried adding it to the helmert_transformation_table, but 
> proj.db didn?t let me choose a projected crs as source transformation.
>
Yes as designed currently it is limited to source and target CRS being 
geographic CRS
>
> I want to add a helmert transformation which uses ETRS89/GK25 as 
> source crs and transforms it into the finnish VVJ crs.
>
> My second question is:
>
> I tried adding the helmert transformation as a proj string to the 
> other_transformation table, but proj won?t use it. I also added an 
> entry into the usage table for the transformation.
>
> When I add a normal helmert transformation or a grid transformation, 
> proj has no problem using them after they are added, but not when I 
> add a transformation in other_transformation.
>
Show your SQL INSERT statements

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210909/d5427a86/attachment.html>

From LSchupp at moba.de  Thu Sep  9 04:18:41 2021
From: LSchupp at moba.de (Schupp, Leon)
Date: Thu, 9 Sep 2021 11:18:41 +0000
Subject: [PROJ] 2D Helmert transformation after the map projection and
 PROJ won't use added transformation from the database
Message-ID: <AM0PR09MB35883B5B4965CA661D1DDF72B5D59@AM0PR09MB3588.eurprd09.prod.outlook.com>

Hello Even,
these are the SQL INSERT statements i used:

INSERT INTO "main"."other_transformation"
("auth_name", "code", "name", "method_auth_name", "method_code", "method_name", "source_crs_auth_name", "source_crs_code", "target_crs_auth_name", "target_crs_code", "accuracy", "deprecated")
VALUES ('PROJ', 'P0001', 'ETRS89 to VVJ', 'PROJ', 'PROJString', '+proj=pipeline
+step +type=proj4 +to=+proj=tmerc +lat_0=0 +lon_0=25 +k=1 +x_0=25500000 +y_0=0 +ellps=GRS80 +units=m +no_defs
+from=+proj=longlat +ellps=WGS84 +units=m +no_defs
+step +proj=helmert +convention=coordinate_frame +x=-6685321.2964 +y=-25439452.96812 +rx=1.00001130081 +ry=-0.00120233218', 'EPSG', '4258', 'EPSG', '36122', 1.0, 0);

INSERT INTO "main"."usage" ("auth_name", "code", "object_table_name", "object_auth_name", "object_code", "extent_auth_name", "extent_code", "scope_auth_name", "scope_code")
VALUES ('PROJ', 'U0002', 'other_transformation', 'PROJ', 'P0001', 'EPSG', '3333', 'EPSG', '1024');


Mit freundlichen Gr??en / Best regards

Leon Schupp
Student - Development Engineer


Von: Even Rouault <even.rouault at spatialys.com>
Gesendet: Donnerstag, 9. September 2021 11:56
An: Schupp, Leon <LSchupp at moba.de>; proj at lists.osgeo.org
Betreff: Re: [PROJ] 2D Helmert transformation after the map projection and PROJ won't use added transformation from the database

Leon,
First question:
Is it possible to add a 2D Helmert transformation to the proj.db database. I tried adding it to the helmert_transformation_table, but proj.db didn't let me choose a projected crs as source transformation.
Yes as designed currently it is limited to source and target CRS being geographic CRS

I want to add a helmert transformation which uses ETRS89/GK25 as source crs and transforms it into the finnish VVJ crs.

My second question is:
I tried adding the helmert transformation as a proj string to the other_transformation table, but proj won't use it. I also added an entry into the usage table for the transformation.
When I add a normal helmert transformation or a grid transformation, proj has no problem using them after they are added, but not when I add a transformation in other_transformation.

Show your SQL INSERT statements
Even

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210909/4dcf8e79/attachment-0001.html>

From even.rouault at spatialys.com  Thu Sep  9 05:27:36 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 9 Sep 2021 14:27:36 +0200
Subject: [PROJ] 2D Helmert transformation after the map projection and
 PROJ won't use added transformation from the database
In-Reply-To: <AM0PR09MB35883B5B4965CA661D1DDF72B5D59@AM0PR09MB3588.eurprd09.prod.outlook.com>
References: <AM0PR09MB35883B5B4965CA661D1DDF72B5D59@AM0PR09MB3588.eurprd09.prod.outlook.com>
Message-ID: <38225fdd-8afc-c244-aee5-085dccece04c@spatialys.com>

There are at least 2 issues:

- your pipeline is incorrect. You should debug it first with the cct 
utility. It should rather be something like:

 ??? +proj=pipeline +step +proj=axisswap +order=2,1 +step 
+proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=tmerc +lat_0=0 
+lon_0=25 +k=1 +x_0=25500000 +y_0=0 +ellps=GRS80 +step +proj=helmert 
+convention=coordinate_frame +x=-6685321.2964 +y=-25439452.96812 
+rx=1.00001130081 +ry=-0.00120233218 +theta=0

- EPSG:36122 is an invalid CRS code

Le 09/09/2021 ? 13:18, Schupp, Leon a ?crit?:
>
> Hello Even,
>
> these are the SQL INSERT statements i used:
>
> INSERT INTO "main"."other_transformation"
>
> ("auth_name", "code", "name", "method_auth_name", "method_code", 
> "method_name", "source_crs_auth_name", "source_crs_code", 
> "target_crs_auth_name", "target_crs_code", "accuracy", "deprecated")
>
> VALUES ('PROJ', 'P0001', 'ETRS89 to VVJ', 'PROJ', 'PROJString', 
> '+proj=pipeline
>
> +step +type=proj4 +to=+proj=tmerc +lat_0=0 +lon_0=25 +k=1 
> +x_0=25500000 +y_0=0 +ellps=GRS80 +units=m +no_defs
>
> +from=+proj=longlat +ellps=WGS84 +units=m +no_defs
>
> +step +proj=helmert +convention=coordinate_frame +x=-6685321.2964 
> +y=-25439452.96812 +rx=1.00001130081 +ry=-0.00120233218', 'EPSG', 
> '4258', 'EPSG', '36122', 1.0, 0);
>
> INSERT INTO "main"."usage" ("auth_name", "code", "object_table_name", 
> "object_auth_name", "object_code", "extent_auth_name", "extent_code", 
> "scope_auth_name", "scope_code")
>
> VALUES ('PROJ', 'U0002', 'other_transformation', 'PROJ', 'P0001', 
> 'EPSG', '3333', 'EPSG', '1024');
>
> Mit freundlichen Gr??en / Best regards
>
> Leon Schupp
> Student ? Development Engineer
>
>
> *Von:* Even Rouault <even.rouault at spatialys.com>
> *Gesendet:* Donnerstag, 9. September 2021 11:56
> *An:* Schupp, Leon <LSchupp at moba.de>; proj at lists.osgeo.org
> *Betreff:* Re: [PROJ] 2D Helmert transformation after the map 
> projection and PROJ won't use added transformation from the database
>
> Leon,
>
>     First question:
>
>     Is it possible to add a 2D Helmert transformation to the proj.db
>     database. I tried adding it to the helmert_transformation_table,
>     but proj.db didn?t let me choose a projected crs as source
>     transformation.
>
> Yes as designed currently it is limited to source and target CRS being 
> geographic CRS
>
>     I want to add a helmert transformation which uses ETRS89/GK25 as
>     source crs and transforms it into the finnish VVJ crs.
>
>     My second question is:
>
>     I tried adding the helmert transformation as a proj string to the
>     other_transformation table, but proj won?t use it. I also added an
>     entry into the usage table for the transformation.
>
>     When I add a normal helmert transformation or a grid
>     transformation, proj has no problem using them after they are
>     added, but not when I add a transformation in other_transformation.
>
> Show your SQL INSERT statements
>
> Even
>
> -- 
> http://www.spatialys.com  <http://www.spatialys.com>
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210909/73191387/attachment.html>

From j1 at jimenezshaw.com  Thu Sep 16 09:24:42 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 16 Sep 2021 18:24:42 +0200
Subject: [PROJ] missing css in webpage
Message-ID: <CADRrdKsbBQp7J0+079rxsvt=4_YLJwpUFgNdA+mC5DPvHyCKMA@mail.gmail.com>

Hi

I just entered in https://proj.org/ , and the style looks... different. It
looks like there are no styles / css loaded. Have we changed anything there?

Cheers

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210916/a2f17a5e/attachment.html>

From mwtoews at gmail.com  Thu Sep 16 15:27:00 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Fri, 17 Sep 2021 10:27:00 +1200
Subject: [PROJ] missing css in webpage
In-Reply-To: <CADRrdKsbBQp7J0+079rxsvt=4_YLJwpUFgNdA+mC5DPvHyCKMA@mail.gmail.com>
References: <CADRrdKsbBQp7J0+079rxsvt=4_YLJwpUFgNdA+mC5DPvHyCKMA@mail.gmail.com>
Message-ID: <CAM2FmMr4jikS7sWWz0CbVuMDspbKk2z4v8mvFvoCZ4mbab3Z6g@mail.gmail.com>

On Fri, 17 Sept 2021 at 04:31, Javier Jimenez Shaw <j1 at jimenezshaw.com> wrote:
> I just entered in https://proj.org/ , and the style looks... different. It looks like there are no styles / css loaded. Have we changed anything there?

This issue is present with the HTML artifact from
https://github.com/OSGeo/PROJ/actions/runs/1240806586
(i.e. downloaded locally, open index.html)

There are no obvious errors with the Docs/HTML job, so it might take a
bit of investigation to find the error. Perhaps it is a new version of
a sphinx component.

From jorisvandenbossche at gmail.com  Thu Sep 16 23:56:36 2021
From: jorisvandenbossche at gmail.com (Joris Van den Bossche)
Date: Fri, 17 Sep 2021 08:56:36 +0200
Subject: [PROJ] missing css in webpage
In-Reply-To: <CAM2FmMr4jikS7sWWz0CbVuMDspbKk2z4v8mvFvoCZ4mbab3Z6g@mail.gmail.com>
References: <CADRrdKsbBQp7J0+079rxsvt=4_YLJwpUFgNdA+mC5DPvHyCKMA@mail.gmail.com>
 <CAM2FmMr4jikS7sWWz0CbVuMDspbKk2z4v8mvFvoCZ4mbab3Z6g@mail.gmail.com>
Message-ID: <CALQtMBYkgiYXFo-JaxRmhDqMFWjsjvmqs2RsGVv94HJqDBzEPw@mail.gmail.com>

I took a quick look at it (it seems that the parent sphinx_rtd_theme is
just missing in the <head> tag, only the custom css overrides of proj
itself are included), and this might be triggered by the sphinx_rtd_theme
1.0 which was just released. Opened a PR that might fix it:
https://github.com/OSGeo/PROJ/pull/2858

Joris

On Fri, 17 Sept 2021 at 00:27, Mike Taves <mwtoews at gmail.com> wrote:

> On Fri, 17 Sept 2021 at 04:31, Javier Jimenez Shaw <j1 at jimenezshaw.com>
> wrote:
> > I just entered in https://proj.org/ , and the style looks... different.
> It looks like there are no styles / css loaded. Have we changed anything
> there?
>
> This issue is present with the HTML artifact from
> https://github.com/OSGeo/PROJ/actions/runs/1240806586
> (i.e. downloaded locally, open index.html)
>
> There are no obvious errors with the Docs/HTML job, so it might take a
> bit of investigation to find the error. Perhaps it is a new version of
> a sphinx component.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210917/68d40601/attachment.html>

From roberto.toldo at 3dflow.net  Fri Sep 17 00:35:39 2021
From: roberto.toldo at 3dflow.net (Roberto Toldo)
Date: Fri, 17 Sep 2021 09:35:39 +0200
Subject: [PROJ] Proj / cs2cs differences
Message-ID: <CADgX5JxDCFVJR017zxX3-qNuUx_s8q=Dj-=nbWWwwD-5ahJQ5g@mail.gmail.com>

Hello!

I found some issues/differences from the "proj" bin and "cs2cs" bin
utilities. I'm using the last version, directly compiled from Github.
Probably it's something due to my inexperience with the library, so please
bear with me :)

Specifically, I was trying to convert coordinates from geodetic to
EPSG:5174 ( Korean 1985 / Modified Central Belt).

I used proj with the parameters extracted from "projinfo EPSG:5174":
proj +proj=tmerc +lat_0=38 +lon_0=127.002890277778 +k=1 +x_0=200000
+y_0=500000 +ellps=bessel +units=m +no_defs

and then cs2cs with direct conversion parameters:
cs2cs +init=epsg:4326 +to +init=epsg:5174

However, I obtain quite different results.

For example, If I use lat_0 and lon_0 as input (127.002890277778, 38), I
obtain exactly false_easting and false_northing (200000, 500000) when using
proj4 (as expected), while I obtain something different when using cs2cs
(200185.04 499695.19).
I would be expecting the same results. I tried with other coordinate
systems (e.g., EPSG:32633 UTM zone 33N), and I noticed no differences
between proj and cs2cs results.
Can anybody help me understand what the reason for the differences is? Are
the parameters used internally by cs2cs different for EPSG:5174? I also
tried setting the accuracy, but it doesn't seem to work.

Thanks,
Roberto
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210917/23da0b0c/attachment.html>

From roberto.toldo at 3dflow.net  Sat Sep 18 05:13:08 2021
From: roberto.toldo at 3dflow.net (Roberto Toldo)
Date: Sat, 18 Sep 2021 14:13:08 +0200
Subject: [PROJ] Proj / cs2cs differences
In-Reply-To: <CADgX5JxDCFVJR017zxX3-qNuUx_s8q=Dj-=nbWWwwD-5ahJQ5g@mail.gmail.com>
References: <CADgX5JxDCFVJR017zxX3-qNuUx_s8q=Dj-=nbWWwwD-5ahJQ5g@mail.gmail.com>
Message-ID: <CADgX5JxBL1dUdbC+J8CpEPZC1MA75hhPoCV3SVA3PNZX9M3qfQ@mail.gmail.com>

I was able to get the actual pipeline transformation used by "cs2cs" by
running:
*projinfo -s EPSG:4326 -t EPSG:5174*

Still, I'm having problems using the output proj string:












*+proj=pipeline  +step +proj=axisswap +order=2,1  +step +proj=unitconvert
+xy_in=deg +xy_out=rad  +step +proj=push +v_3  +step +proj=cart
+ellps=WGS84  +step +inv +proj=molobadekas +x=-145.907 +y=505.034
+z=685.756 +rx=-1.162        +ry=2.347 +rz=1.592 +s=6.342 +px=-3159521.31
+py=4068151.32        +pz=3748113.85 +convention=coordinate_frame  +step
+inv +proj=cart +ellps=bessel  +step +proj=pop +v_3  +step +proj=tmerc
+lat_0=38 +lon_0=127.002890277778 +k=1 +x_0=200000        +y_0=500000
+ellps=bessel  +step +proj=axisswap +order=2,1*

The error I get is "can't initialize operations that take non-angular input
coordinates". If I remove the "unitconvert" step, I can run proj bin, but I
get wrong results (even if I manually convert the input from degree to
radians). Any suggestions?

Many thanks,
Roberto


On Fri, Sep 17, 2021 at 9:35 AM Roberto Toldo <roberto.toldo at 3dflow.net>
wrote:

> Hello!
>
> I found some issues/differences from the "proj" bin and "cs2cs" bin
> utilities. I'm using the last version, directly compiled from Github.
> Probably it's something due to my inexperience with the library, so please
> bear with me :)
>
> Specifically, I was trying to convert coordinates from geodetic to
> EPSG:5174 ( Korean 1985 / Modified Central Belt).
>
> I used proj with the parameters extracted from "projinfo EPSG:5174":
> proj +proj=tmerc +lat_0=38 +lon_0=127.002890277778 +k=1 +x_0=200000
> +y_0=500000 +ellps=bessel +units=m +no_defs
>
> and then cs2cs with direct conversion parameters:
> cs2cs +init=epsg:4326 +to +init=epsg:5174
>
> However, I obtain quite different results.
>
> For example, If I use lat_0 and lon_0 as input (127.002890277778, 38), I
> obtain exactly false_easting and false_northing (200000, 500000) when using
> proj4 (as expected), while I obtain something different when using cs2cs
> (200185.04 499695.19).
> I would be expecting the same results. I tried with other coordinate
> systems (e.g., EPSG:32633 UTM zone 33N), and I noticed no differences
> between proj and cs2cs results.
> Can anybody help me understand what the reason for the differences is? Are
> the parameters used internally by cs2cs different for EPSG:5174? I also
> tried setting the accuracy, but it doesn't seem to work.
>
> Thanks,
> Roberto
>
>

-- 
Roberto Toldo
Technical Director & Co-founder | 3Dflow srl
+39 045 4500109 | roberto.toldo at 3dflow.net | http://www.3dflow.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210918/9191eae8/attachment.html>

From even.rouault at spatialys.com  Sat Sep 18 05:22:17 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 18 Sep 2021 14:22:17 +0200
Subject: [PROJ] Proj / cs2cs differences
In-Reply-To: <CADgX5JxBL1dUdbC+J8CpEPZC1MA75hhPoCV3SVA3PNZX9M3qfQ@mail.gmail.com>
References: <CADgX5JxDCFVJR017zxX3-qNuUx_s8q=Dj-=nbWWwwD-5ahJQ5g@mail.gmail.com>
 <CADgX5JxBL1dUdbC+J8CpEPZC1MA75hhPoCV3SVA3PNZX9M3qfQ@mail.gmail.com>
Message-ID: <fb328355-efc4-027a-460e-791c86296356@spatialys.com>

Roberto,

the proj utility only works with a projection operation, where input 
geographic coordinates are expressed in the base CRS of the projected 
CRS (which is EPSG:4162 "Korean 1985" here), and doesn't apply any datum 
transformation. So the equivalent of your proj invokation? with cs2cs 
would be cs2cs +init=epsg:4162 +to +init=epsg:5174

If you use EPSG:4326 as the input CRS, then there will be a datum shift 
from EPSG:4326 to EPSG:4162

Regarding the pipeline output by projinfo -s -t, you can't use it with 
the proj utility, which is a historic one and is aimed only at 
understanding +proj={projection_id} style of PROJ strings. You should 
rather use the newer cct utility.

Even

Le 18/09/2021 ? 14:13, Roberto Toldo a ?crit?:
> I was able to get the actual pipeline transformation used by "cs2cs" 
> by running:
> /projinfo -s EPSG:4326 -t EPSG:5174/
>
> Still, I'm having problems using the output proj string:
> /+proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +proj=push +v_3
> ? +step +proj=cart +ellps=WGS84
> ? +step +inv +proj=molobadekas +x=-145.907 +y=505.034 +z=685.756 
> +rx=-1.162
> ? ? ? ? +ry=2.347 +rz=1.592 +s=6.342 +px=-3159521.31 +py=4068151.32
> ? ? ? ? +pz=3748113.85 +convention=coordinate_frame
> ? +step +inv +proj=cart +ellps=bessel
> ? +step +proj=pop +v_3
> ? +step +proj=tmerc +lat_0=38 +lon_0=127.002890277778 +k=1 +x_0=200000
> ? ? ? ? +y_0=500000 +ellps=bessel
> ? +step +proj=axisswap +order=2,1/
>
> The error I get is "can't initialize operations that take non-angular 
> input coordinates". If I remove the "unitconvert" step, I can run proj 
> bin, but I get wrong results (even if I manually convert the input 
> from degree to radians). Any suggestions?
>
> Many thanks,
> Roberto
>
>
> On Fri, Sep 17, 2021 at 9:35 AM Roberto Toldo 
> <roberto.toldo at 3dflow.net <mailto:roberto.toldo at 3dflow.net>> wrote:
>
>     Hello!
>
>     I found some issues/differences from the "proj" bin and "cs2cs"
>     bin utilities. I'm using the last version, directly compiled from
>     Github.
>     Probably it's something due to my inexperience with the library,
>     so please bear with me :)
>
>     Specifically, I was trying to convert coordinates from geodetic to
>     EPSG:5174 ( Korean 1985 / Modified Central Belt).
>
>     I used proj with the parameters extracted from "projinfo EPSG:5174":
>     proj +proj=tmerc +lat_0=38 +lon_0=127.002890277778 +k=1
>     +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs
>
>     and then cs2cs with direct conversion parameters:
>     cs2cs +init=epsg:4326 +to +init=epsg:5174
>
>     However, I obtain quite different results.
>
>     For example, If I use lat_0 and lon_0 as input (127.002890277778,
>     38), I obtain exactly false_easting and false_northing (200000,
>     500000) when using proj4 (as expected), while I obtain something
>     different when using cs2cs (200185.04 499695.19).
>     I would be expecting the same results. I tried with other
>     coordinate systems (e.g., EPSG:32633 UTM zone 33N), and I noticed
>     no differences between proj and cs2cs results.
>     Can anybody help me understand what the reason for the differences
>     is? Are the parameters used internally by cs2cs different for
>     EPSG:5174? I also tried setting the accuracy, but it doesn't seem
>     to work.
>
>     Thanks,
>     Roberto
>
>
>
> -- 
> Roberto Toldo
> Technical Director & Co-founder | 3Dflow srl
> +39 045 4500109 | roberto.toldo at 3dflow.net 
> <mailto:roberto.toldo at 3dflow.net> | http://www.3dflow.net 
> <http://www.3dflow.net>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210918/22d385bf/attachment.html>

From roberto.toldo at 3dflow.net  Sun Sep 19 01:02:22 2021
From: roberto.toldo at 3dflow.net (Roberto Toldo)
Date: Sun, 19 Sep 2021 10:02:22 +0200
Subject: [PROJ] Proj / cs2cs differences
In-Reply-To: <fb328355-efc4-027a-460e-791c86296356@spatialys.com>
References: <CADgX5JxDCFVJR017zxX3-qNuUx_s8q=Dj-=nbWWwwD-5ahJQ5g@mail.gmail.com>
 <CADgX5JxBL1dUdbC+J8CpEPZC1MA75hhPoCV3SVA3PNZX9M3qfQ@mail.gmail.com>
 <fb328355-efc4-027a-460e-791c86296356@spatialys.com>
Message-ID: <CADgX5JzHcN5zVuM8b6m11bLNOjj1-qY7aA8QFQQdgWPQdm1Jag@mail.gmail.com>

Even,

Got it! Many thanks for the help! I'll also try using the newer cct utility
to make step-by-step projections.

Cheers!

On Sat, Sep 18, 2021 at 2:22 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Roberto,
>
> the proj utility only works with a projection operation, where input
> geographic coordinates are expressed in the base CRS of the projected CRS
> (which is EPSG:4162 "Korean 1985" here), and doesn't apply any datum
> transformation. So the equivalent of your proj invokation  with cs2cs would
> be cs2cs +init=epsg:4162 +to +init=epsg:5174
>
> If you use EPSG:4326 as the input CRS, then there will be a datum shift
> from EPSG:4326 to EPSG:4162
>
> Regarding the pipeline output by projinfo -s -t, you can't use it with the
> proj utility, which is a historic one and is aimed only at understanding
> +proj={projection_id} style of PROJ strings. You should rather use the
> newer cct utility.
>
> Even
> Le 18/09/2021 ? 14:13, Roberto Toldo a ?crit :
>
> I was able to get the actual pipeline transformation used by "cs2cs" by
> running:
> *projinfo -s EPSG:4326 -t EPSG:5174*
>
> Still, I'm having problems using the output proj string:
>
>
>
>
>
>
>
>
>
>
>
>
> *+proj=pipeline   +step +proj=axisswap +order=2,1   +step
> +proj=unitconvert +xy_in=deg +xy_out=rad   +step +proj=push +v_3   +step
> +proj=cart +ellps=WGS84   +step +inv +proj=molobadekas +x=-145.907
> +y=505.034 +z=685.756 +rx=-1.162         +ry=2.347 +rz=1.592 +s=6.342
> +px=-3159521.31 +py=4068151.32         +pz=3748113.85
> +convention=coordinate_frame   +step +inv +proj=cart +ellps=bessel   +step
> +proj=pop +v_3   +step +proj=tmerc +lat_0=38 +lon_0=127.002890277778 +k=1
> +x_0=200000         +y_0=500000 +ellps=bessel   +step +proj=axisswap
> +order=2,1*
>
> The error I get is "can't initialize operations that take non-angular
> input coordinates". If I remove the "unitconvert" step, I can run proj bin,
> but I get wrong results (even if I manually convert the input from degree
> to radians). Any suggestions?
>
> Many thanks,
> Roberto
>
>
> On Fri, Sep 17, 2021 at 9:35 AM Roberto Toldo <roberto.toldo at 3dflow.net>
> wrote:
>
>> Hello!
>>
>> I found some issues/differences from the "proj" bin and "cs2cs" bin
>> utilities. I'm using the last version, directly compiled from Github.
>> Probably it's something due to my inexperience with the library, so
>> please bear with me :)
>>
>> Specifically, I was trying to convert coordinates from geodetic to
>> EPSG:5174 ( Korean 1985 / Modified Central Belt).
>>
>> I used proj with the parameters extracted from "projinfo EPSG:5174":
>> proj +proj=tmerc +lat_0=38 +lon_0=127.002890277778 +k=1 +x_0=200000
>> +y_0=500000 +ellps=bessel +units=m +no_defs
>>
>> and then cs2cs with direct conversion parameters:
>> cs2cs +init=epsg:4326 +to +init=epsg:5174
>>
>> However, I obtain quite different results.
>>
>> For example, If I use lat_0 and lon_0 as input (127.002890277778, 38), I
>> obtain exactly false_easting and false_northing (200000, 500000) when using
>> proj4 (as expected), while I obtain something different when using cs2cs
>> (200185.04 499695.19).
>> I would be expecting the same results. I tried with other coordinate
>> systems (e.g., EPSG:32633 UTM zone 33N), and I noticed no differences
>> between proj and cs2cs results.
>> Can anybody help me understand what the reason for the differences is?
>> Are the parameters used internally by cs2cs different for EPSG:5174? I also
>> tried setting the accuracy, but it doesn't seem to work.
>>
>> Thanks,
>> Roberto
>>
>>
>
> --
> Roberto Toldo
> Technical Director & Co-founder | 3Dflow srl
> +39 045 4500109 | roberto.toldo at 3dflow.net | http://www.3dflow.net
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>

-- 
Roberto Toldo
Technical Director & Co-founder | 3Dflow srl
+39 045 4500109 | roberto.toldo at 3dflow.net | http://www.3dflow.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210919/a204938c/attachment.html>

From jgpallero at gmail.com  Wed Sep 29 07:18:56 2021
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Wed, 29 Sep 2021 16:18:56 +0200
Subject: [PROJ] Question about transformation using cs2cs
Message-ID: <CAFemY3Zx1xNK-aby9YSHykTosuRnHOyFDd1YhPab4M7E6MMVmA@mail.gmail.com>

Hello:

I'm using PROJ 7.2.1 from Debian repositories and I have some
questions about cs2cs. If I run

echo 1445748.66 5053500.03 | cs2cs +proj=utm +zone=10 +ellps=intl +to
+proj=utm +zone=10 +ellps=WGS84

I obtain

1445704.69      5053404.02 0.00

so the transformation of UTM coordinates between a point on the
international ellipsoid to WGS84 was performed.

But if I try to do the same with geographical coordinates as

echo 111W 45N | cs2cs +proj=latlong +ellps=intl +to +proj=latlong +ellps=WGS84

I obtain

111dW   45dN 0.000

so no transformation was performed. Why? Setting PROJ_DEBUG I obtain
for this case

pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
pj_ellipsoid - final:    ellps=GRS80

Here I understand that only the second declaration of +ellps was taken
into account (althoug EGS84 and GRS80 ellipsoids are not exactly the
same)

Thanks
-- 
*****************************************
Jos? Luis Garc?a Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************

From even.rouault at spatialys.com  Wed Sep 29 07:42:49 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Sep 2021 16:42:49 +0200
Subject: [PROJ] Question about transformation using cs2cs
In-Reply-To: <CAFemY3Zx1xNK-aby9YSHykTosuRnHOyFDd1YhPab4M7E6MMVmA@mail.gmail.com>
References: <CAFemY3Zx1xNK-aby9YSHykTosuRnHOyFDd1YhPab4M7E6MMVmA@mail.gmail.com>
Message-ID: <0153df79-2a7e-2281-fce7-f976add81f7e@spatialys.com>

Hi,

you're actually hitting this very old change in behavior in PROJ that 
still applies with recent versions: 
https://proj.org/usage/differences.html#version-4-6-0

Just specifying a +ellps= doesn't define a datum. There's no way we can 
relate the 2 datums that are partially defined by just their ellipsoids. 
So when considering the geographic coordinates, they are just kept 
unchanged; Which explains the behaviour of the second cs2cs invokation.

Why do you get different results in the UTM projected coordinates ? 
Because projection computation takes into account the ellipsoid shape. 
But you won't get a datum shift by itself when doing so.

So you'll probably have to specify a +towgs84 or +nadgrids parameters to 
your source CRS to define how it relates with the WGS 84 datum, and 
replace on the target CRS +ellps=WGS84 by +datum=WGS84

The PROJ debug traces are quite verbose and hard to understand if you're 
not a developer, so they won't help much.

If you know the EPSG codes of the CRS, you'd better using them directly 
to get more significant transformations.

Even

Le 29/09/2021 ? 16:18, Jos? Luis Garc?a Pallero a ?crit?:
> Hello:
>
> I'm using PROJ 7.2.1 from Debian repositories and I have some
> questions about cs2cs. If I run
>
> echo 1445748.66 5053500.03 | cs2cs +proj=utm +zone=10 +ellps=intl +to
> +proj=utm +zone=10 +ellps=WGS84
>
> I obtain
>
> 1445704.69      5053404.02 0.00
>
> so the transformation of UTM coordinates between a point on the
> international ellipsoid to WGS84 was performed.
>
> But if I try to do the same with geographical coordinates as
>
> echo 111W 45N | cs2cs +proj=latlong +ellps=intl +to +proj=latlong +ellps=WGS84
>
> I obtain
>
> 111dW   45dN 0.000
>
> so no transformation was performed. Why? Setting PROJ_DEBUG I obtain
> for this case
>
> pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
> pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
> pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> pj_ellipsoid - final:    ellps=GRS80
>
> Here I understand that only the second declaration of +ellps was taken
> into account (althoug EGS84 and GRS80 ellipsoids are not exactly the
> same)
>
> Thanks

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From jgpallero at gmail.com  Wed Sep 29 08:03:06 2021
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Wed, 29 Sep 2021 17:03:06 +0200
Subject: [PROJ] Question about transformation using cs2cs
In-Reply-To: <0153df79-2a7e-2281-fce7-f976add81f7e@spatialys.com>
References: <CAFemY3Zx1xNK-aby9YSHykTosuRnHOyFDd1YhPab4M7E6MMVmA@mail.gmail.com>
 <0153df79-2a7e-2281-fce7-f976add81f7e@spatialys.com>
Message-ID: <CAFemY3aBmA-2O1rdud52wS+4r1sYXOHrNSQsGeu-UFioaTg-gg@mail.gmail.com>

El mi?, 29 sept 2021 a las 16:42, Even Rouault
(<even.rouault at spatialys.com>) escribi?:
>
> Hi,
>
> you're actually hitting this very old change in behavior in PROJ that
> still applies with recent versions:
> https://proj.org/usage/differences.html#version-4-6-0
>
> Just specifying a +ellps= doesn't define a datum. There's no way we can
> relate the 2 datums that are partially defined by just their ellipsoids.
> So when considering the geographic coordinates, they are just kept
> unchanged; Which explains the behaviour of the second cs2cs invokation.
>
> Why do you get different results in the UTM projected coordinates ?
> Because projection computation takes into account the ellipsoid shape.
> But you won't get a datum shift by itself when doing so.

Thank you for yout answer

But I understand that in this case the operations are:

1. Inverse projection step from UTM ellps=intl to geographic
coordinates in ellps=intl
2. Geographic coordinates in ellps=intl to cartesian geocentric
coordinates referred to ellps=intl
3. Helmert transformation from cartesian geocentric referred to
ellps=intl to cartesian geocentric referred to ellps=WGS84 using the
parameters defined in PROJ database
4. Cartesian geocentric referred to ellps=WGS84 to geographic
coordinated in ellps=WGS84
5. Projection from geographic coordinated in ellps=WGS84 to UTM ellps=WGS84

Am I right? Then, why do not perform the steps 2, 3, 4 in the case
just specifying +ellps=?

About the datum definitions for the +datum option, I can see in
https://proj.org/operations/conversions/latlon.html that there is the
option -ld in order to see all defined datums. But in my PROJ 7.2.1
there is no such option. Is the -ld option only present in PROJ 8?

Thanks

>
> So you'll probably have to specify a +towgs84 or +nadgrids parameters to
> your source CRS to define how it relates with the WGS 84 datum, and
> replace on the target CRS +ellps=WGS84 by +datum=WGS84
>
> The PROJ debug traces are quite verbose and hard to understand if you're
> not a developer, so they won't help much.
>
> If you know the EPSG codes of the CRS, you'd better using them directly
> to get more significant transformations.
>
> Even
>
> Le 29/09/2021 ? 16:18, Jos? Luis Garc?a Pallero a ?crit :
> > Hello:
> >
> > I'm using PROJ 7.2.1 from Debian repositories and I have some
> > questions about cs2cs. If I run
> >
> > echo 1445748.66 5053500.03 | cs2cs +proj=utm +zone=10 +ellps=intl +to
> > +proj=utm +zone=10 +ellps=WGS84
> >
> > I obtain
> >
> > 1445704.69      5053404.02 0.00
> >
> > so the transformation of UTM coordinates between a point on the
> > international ellipsoid to WGS84 was performed.
> >
> > But if I try to do the same with geographical coordinates as
> >
> > echo 111W 45N | cs2cs +proj=latlong +ellps=intl +to +proj=latlong +ellps=WGS84
> >
> > I obtain
> >
> > 111dW   45dN 0.000
> >
> > so no transformation was performed. Why? Setting PROJ_DEBUG I obtain
> > for this case
> >
> > pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
> > pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
> > pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
> > pj_ellipsoid - final:    ellps=GRS80
> >
> > Here I understand that only the second declaration of +ellps was taken
> > into account (althoug EGS84 and GRS80 ellipsoids are not exactly the
> > same)
> >
> > Thanks
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>


-- 
*****************************************
Jos? Luis Garc?a Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************

From even.rouault at spatialys.com  Wed Sep 29 08:24:12 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Sep 2021 17:24:12 +0200
Subject: [PROJ] Question about transformation using cs2cs
In-Reply-To: <CAFemY3aBmA-2O1rdud52wS+4r1sYXOHrNSQsGeu-UFioaTg-gg@mail.gmail.com>
References: <CAFemY3Zx1xNK-aby9YSHykTosuRnHOyFDd1YhPab4M7E6MMVmA@mail.gmail.com>
 <0153df79-2a7e-2281-fce7-f976add81f7e@spatialys.com>
 <CAFemY3aBmA-2O1rdud52wS+4r1sYXOHrNSQsGeu-UFioaTg-gg@mail.gmail.com>
Message-ID: <64d92466-b069-86a7-919c-fb5efcab8026@spatialys.com>


Le 29/09/2021 ? 17:03, Jos? Luis Garc?a Pallero a ?crit?:
> El mi?, 29 sept 2021 a las 16:42, Even Rouault
> (<even.rouault at spatialys.com>) escribi?:
>> Hi,
>>
>> you're actually hitting this very old change in behavior in PROJ that
>> still applies with recent versions:
>> https://proj.org/usage/differences.html#version-4-6-0
>>
>> Just specifying a +ellps= doesn't define a datum. There's no way we can
>> relate the 2 datums that are partially defined by just their ellipsoids.
>> So when considering the geographic coordinates, they are just kept
>> unchanged; Which explains the behaviour of the second cs2cs invokation.
>>
>> Why do you get different results in the UTM projected coordinates ?
>> Because projection computation takes into account the ellipsoid shape.
>> But you won't get a datum shift by itself when doing so.
> Thank you for yout answer
>
> But I understand that in this case the operations are:
>
> 1. Inverse projection step from UTM ellps=intl to geographic
> coordinates in ellps=intl
> 2. Geographic coordinates in ellps=intl to cartesian geocentric
> coordinates referred to ellps=intl
> 3. Helmert transformation from cartesian geocentric referred to
> ellps=intl to cartesian geocentric referred to ellps=WGS84 using the
> parameters defined in PROJ database
> 4. Cartesian geocentric referred to ellps=WGS84 to geographic
> coordinated in ellps=WGS84
> 5. Projection from geographic coordinated in ellps=WGS84 to UTM ellps=WGS84
>
> Am I right? Then, why do not perform the steps 2, 3, 4 in the case
> just specifying +ellps=?
No, they aren't done. You would need to add +towgs84=0,0,0 to do 2,3,4 
but that's unlikely to be what is appropriate.
>
> About the datum definitions for the +datum option, I can see in
> https://proj.org/operations/conversions/latlon.html that there is the
> option -ld in order to see all defined datums. But in my PROJ 7.2.1
> there is no such option. Is the -ld option only present in PROJ 8?

Yes, it was removed per 
https://github.com/OSGeo/PROJ/commit/a955947c1f3279e51d1272df0cb6aa61ce4b85ee

"Remove -ld option from proj and cs2cs

It promotes use of deprecated paramters +datum and +towgs84 which we
don't want to encourage."

PROJ.4 style strings to express CRSs, and in particular datums, are rather limited and we want people to use codes, WKT or PROJJSON instead.

Even

>
> Thanks
>
>> So you'll probably have to specify a +towgs84 or +nadgrids parameters to
>> your source CRS to define how it relates with the WGS 84 datum, and
>> replace on the target CRS +ellps=WGS84 by +datum=WGS84
>>
>> The PROJ debug traces are quite verbose and hard to understand if you're
>> not a developer, so they won't help much.
>>
>> If you know the EPSG codes of the CRS, you'd better using them directly
>> to get more significant transformations.
>>
>> Even
>>
>> Le 29/09/2021 ? 16:18, Jos? Luis Garc?a Pallero a ?crit :
>>> Hello:
>>>
>>> I'm using PROJ 7.2.1 from Debian repositories and I have some
>>> questions about cs2cs. If I run
>>>
>>> echo 1445748.66 5053500.03 | cs2cs +proj=utm +zone=10 +ellps=intl +to
>>> +proj=utm +zone=10 +ellps=WGS84
>>>
>>> I obtain
>>>
>>> 1445704.69      5053404.02 0.00
>>>
>>> so the transformation of UTM coordinates between a point on the
>>> international ellipsoid to WGS84 was performed.
>>>
>>> But if I try to do the same with geographical coordinates as
>>>
>>> echo 111W 45N | cs2cs +proj=latlong +ellps=intl +to +proj=latlong +ellps=WGS84
>>>
>>> I obtain
>>>
>>> 111dW   45dN 0.000
>>>
>>> so no transformation was performed. Why? Setting PROJ_DEBUG I obtain
>>> for this case
>>>
>>> pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
>>> pj_open_lib(proj.ini): call fopen(/usr/share/proj/proj.ini) - succeeded
>>> pj_ellipsoid - final: a=6378137.000 f=1/298.257, errno=0
>>> pj_ellipsoid - final:    ellps=GRS80
>>>
>>> Here I understand that only the second declaration of +ellps was taken
>>> into account (althoug EGS84 and GRS80 ellipsoids are not exactly the
>>> same)
>>>
>>> Thanks
>> --
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>>
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210929/9a53cde5/attachment.html>

From peter.townsend at maplarge.com  Wed Sep 29 14:01:59 2021
From: peter.townsend at maplarge.com (Peter Townsend)
Date: Wed, 29 Sep 2021 16:01:59 -0500
Subject: [PROJ] Is Equivalent To Between Authority Codes and Proj Strings
Message-ID: <CAMQBGmW3EXs=qg2oTpjMTFQ_mLWC6NwxReJbqua=-sn6=Khuuw@mail.gmail.com>

I was looking at using the proj_is_equivalent_to_with_ctx method, in
particular the "proj_is_equivalent_to_with_ctx" test method that uses
EPSG:7844. It pulls EPSG:7844 from the database, then loads it from the WKT
and shows that they're equivalent.

So then I tried against the exported proj string version, "+proj=longlat
+ellps=GRS80 +no_defs +type=crs". I threw that at the equivalent_to method
w/ both PJ_COMP_EQUIVALENT and
PJ_COMP_EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS, and they both came out false.
I dug down the rabbit hole and got down to
GeodeticReferenceFrame::hasEquivalentNameToUsingAlias. The reason it's
coming out false is because the datum names don't match. One is "GDA2020"
and the other is "Unknown based on GRS80 ellipsoid".

It makes sense since the proj string doesn't really give that kind of
detail. But is there any consistent way to perform an equivalency check
between two CRS's given an EPSG code and a proj string, or
is something amiss? (I did try proj_identify on that GRS80 string and 7844
doesn't even show up.)

This is with version 8.1. I tried a few others to see what happened with
them. 4326, 3857, 3031, 3995, 32631 worked. 23031, 29193 also had
mismatched datums. Not sure what the connection is between them that makes
it work.

Here's the full stack trace to the false:
>
libproj_d.dll!osgeo::proj::datum::GeodeticReferenceFrame::hasEquivalentNameToUsingAlias(const
osgeo::proj::common::IdentifiedObject * other, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 1408 C++

libproj_d.dll!osgeo::proj::common::IdentifiedObject::_isEquivalentTo(const
osgeo::proj::common::IdentifiedObject * otherIdObj,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 938 C++

libproj_d.dll!osgeo::proj::common::IdentifiedObject::_isEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 923 C++
  libproj_d.dll!osgeo::proj::common::ObjectUsage::_isEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 1280 C++
  libproj_d.dll!osgeo::proj::datum::Datum::_isEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 222 C++

libproj_d.dll!osgeo::proj::datum::GeodeticReferenceFrame::_isEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 1385 C++
  libproj_d.dll!osgeo::proj::crs::SingleCRS::baseIsEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 1346 C++
  libproj_d.dll!osgeo::proj::crs::DerivedCRS::_isEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 3556 C++
  libproj_d.dll!osgeo::proj::crs::ProjectedCRS::_isEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 4047 C++
  libproj_d.dll!osgeo::proj::util::IComparable::isEquivalentTo(const
osgeo::proj::util::IComparable * other,
osgeo::proj::util::IComparable::Criterion criterion, const
std::shared_ptr<osgeo::proj::io::DatabaseContext> & dbContext) Line 708 C++
  libproj_d.dll!proj_is_equivalent_to_internal(pj_ctx * ctx, const PJconsts
* obj, const PJconsts * other, PJ_COMPARISON_CRITERION criterion) Line 1313
C++
  libproj_d.dll!proj_is_equivalent_to_with_ctx(pj_ctx * ctx, const PJconsts
* obj, const PJconsts * other, PJ_COMPARISON_CRITERION criterion) Line 1354
C++

Thanks!
-- 
Peter Townsend
Senior Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210929/583d4272/attachment.html>

From mwtoews at gmail.com  Wed Sep 29 14:05:28 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 30 Sep 2021 10:05:28 +1300
Subject: [PROJ] RFC 7: Drop Autotools, maintain CMake
Message-ID: <CAM2FmMrAtfFzRyTE82kaWfH7fPUeNZNFq25xXe1PTeQPnZqrsw@mail.gmail.com>

Hi all,

I've prepared a draft RFC that proposes to drop Autotools for PROJ
9.0, and to maintain CMake for build automation, testing and
packaging.

See https://github.com/OSGeo/PROJ/pull/2880

Note that PROJ 9.0 is planned for 1 March 2022.

From even.rouault at spatialys.com  Wed Sep 29 14:33:37 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Sep 2021 23:33:37 +0200
Subject: [PROJ] Is Equivalent To Between Authority Codes and Proj Strings
In-Reply-To: <CAMQBGmW3EXs=qg2oTpjMTFQ_mLWC6NwxReJbqua=-sn6=Khuuw@mail.gmail.com>
References: <CAMQBGmW3EXs=qg2oTpjMTFQ_mLWC6NwxReJbqua=-sn6=Khuuw@mail.gmail.com>
Message-ID: <8a9830a2-c481-a409-6ee9-fc3830bab30a@spatialys.com>

Peter,

Le 29/09/2021 ? 23:01, Peter Townsend via PROJ a ?crit?:
> I was looking at using the?proj_is_equivalent_to_with_ctx method, in 
> particular the "proj_is_equivalent_to_with_ctx" test method that uses 
> EPSG:7844. It pulls EPSG:7844 from the database, then loads it from 
> the WKT and shows that they're equivalent.
>
> So then I tried against the exported proj string 
> version,?"+proj=longlat +ellps=GRS80 +no_defs +type=crs". I threw that 
> at the equivalent_to method w/ both?PJ_COMP_EQUIVALENT and 
> PJ_COMP_EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS, and they both came out 
> false. I dug down the rabbit hole and got down to 
> GeodeticReferenceFrame::hasEquivalentNameToUsingAlias. The reason it's 
> coming out false is because the datum names don't match. One is 
> "GDA2020" and the other is "Unknown based on GRS80 ellipsoid".
>
> It makes sense since the proj string doesn't really give that kind of 
> detail. But is there any consistent way to perform an equivalency 
> check between two CRS's?given an EPSG code and a proj string,?or 
> is?something?amiss?

PROJ.4 strings are too lossy too be a reliable way of identifying a CRS. 
They support only a super restricted sets of datums (which means new 
fancy things like GDA2020), axis order, etc. You should consider using 
WKT for a more expressive way of describing the CRS if the code is not 
enough


> (I did try proj_identify on that GRS80 string and 7844 doesn't even 
> show up.)
That part was a bug. Fixed per https://github.com/OSGeo/PROJ/pull/2881 . 
You'll get now 206 matches including 7844.
>
> This is with version 8.1. I tried a few others to see what happened 
> with them. 4326, 3857, 3031, 3995, 32631 worked.

Yes, those are based on WGS84, for which there's a +datum=WGS84 
available (so more rich than just the ellipsoid name)

Even


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From peter.townsend at maplarge.com  Wed Sep 29 14:44:04 2021
From: peter.townsend at maplarge.com (Peter Townsend)
Date: Wed, 29 Sep 2021 16:44:04 -0500
Subject: [PROJ] Is Equivalent To Between Authority Codes and Proj Strings
In-Reply-To: <8a9830a2-c481-a409-6ee9-fc3830bab30a@spatialys.com>
References: <CAMQBGmW3EXs=qg2oTpjMTFQ_mLWC6NwxReJbqua=-sn6=Khuuw@mail.gmail.com>
 <8a9830a2-c481-a409-6ee9-fc3830bab30a@spatialys.com>
Message-ID: <CAMQBGmWpABr468DO4mcg8gRCHDodChUUGGnc8_gQevKAQvqNKw@mail.gmail.com>

Thanks for looking! I'm going to be given proj strings, so I'm just gonna
have to try my best. Those all being WGS84 does make sense.

On Wed, Sep 29, 2021 at 4:39 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Peter,
>
> Le 29/09/2021 ? 23:01, Peter Townsend via PROJ a ?crit :
> > I was looking at using the proj_is_equivalent_to_with_ctx method, in
> > particular the "proj_is_equivalent_to_with_ctx" test method that uses
> > EPSG:7844. It pulls EPSG:7844 from the database, then loads it from
> > the WKT and shows that they're equivalent.
> >
> > So then I tried against the exported proj string
> > version, "+proj=longlat +ellps=GRS80 +no_defs +type=crs". I threw that
> > at the equivalent_to method w/ both PJ_COMP_EQUIVALENT and
> > PJ_COMP_EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS, and they both came out
> > false. I dug down the rabbit hole and got down to
> > GeodeticReferenceFrame::hasEquivalentNameToUsingAlias. The reason it's
> > coming out false is because the datum names don't match. One is
> > "GDA2020" and the other is "Unknown based on GRS80 ellipsoid".
> >
> > It makes sense since the proj string doesn't really give that kind of
> > detail. But is there any consistent way to perform an equivalency
> > check between two CRS's given an EPSG code and a proj string, or
> > is something amiss?
>
> PROJ.4 strings are too lossy too be a reliable way of identifying a CRS.
> They support only a super restricted sets of datums (which means new
> fancy things like GDA2020), axis order, etc. You should consider using
> WKT for a more expressive way of describing the CRS if the code is not
> enough
>
>
> > (I did try proj_identify on that GRS80 string and 7844 doesn't even
> > show up.)
> That part was a bug. Fixed per https://github.com/OSGeo/PROJ/pull/2881 .
> You'll get now 206 matches including 7844.
> >
> > This is with version 8.1. I tried a few others to see what happened
> > with them. 4326, 3857, 3031, 3995, 32631 worked.
>
> Yes, those are based on WGS84, for which there's a +datum=WGS84
> available (so more rich than just the ellipsoid name)
>
> Even
>
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Peter Townsend
Senior Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210929/aa9a26b9/attachment.html>

From even.rouault at spatialys.com  Wed Sep 29 14:52:06 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Sep 2021 23:52:06 +0200
Subject: [PROJ] Is Equivalent To Between Authority Codes and Proj Strings
In-Reply-To: <CAMQBGmWpABr468DO4mcg8gRCHDodChUUGGnc8_gQevKAQvqNKw@mail.gmail.com>
References: <CAMQBGmW3EXs=qg2oTpjMTFQ_mLWC6NwxReJbqua=-sn6=Khuuw@mail.gmail.com>
 <8a9830a2-c481-a409-6ee9-fc3830bab30a@spatialys.com>
 <CAMQBGmWpABr468DO4mcg8gRCHDodChUUGGnc8_gQevKAQvqNKw@mail.gmail.com>
Message-ID: <766073f3-f4da-9455-2075-3929375db04f@spatialys.com>

correction:
>
>     They support only a super restricted sets of datums (which means
>     *NO* new
>     fancy things like GDA2020), axis order, etc.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20210929/6bfa9c61/attachment.html>

