From pmezard at gmail.com  Sun Aug  7 02:02:31 2005
From: pmezard at gmail.com (=?ISO-8859-1?Q?Patrick_M=E9zard?=)
Date: Sun, 07 Aug 2005 11:02:31 +0200
Subject: [Proj] Local Projection Selection
Message-ID: <42F5CE27.2090505@gmail.com>

Hello,
I have a function performing distance calculations between points 
defined in WGS-84 and perhaps some angular computations too. The input 
dataset is always restricted to an area of at most 20km around a center 
point, and usually 10km. The area center is unspecified, but extreme 
cases (earth poles) are excluded.

For every function call, I would like to reproject the input dataset 
into a euclidian space where I could perform metric computations. 
Accuracy is important but not critical (I could cope with offsets of 
2/3m), computation speed is important too since the function is 
implemented on mobile devices where floating-point computations are 
rather slow.

Could you give me advices to select a projection in PROJ.4 I could 
configure with a center point (x,y), matching the constraints above.

Thank you for any hint.

Patrick Mézard



From gerald.evenden at verizon.net  Sun Aug  7 07:39:00 2005
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 07 Aug 2005 10:39:00 -0400
Subject: [Proj] Local Projection Selection
In-Reply-To: <42F5CE27.2090505@gmail.com>
References: <42F5CE27.2090505@gmail.com>
Message-ID: <1123425540.9804.13.camel@localhost>

My immediate question is why not use a geodesic program rather than
projecting
the data and using a plane system with its inherent distortions?

If one insists on using a projection, then Stereographic is probably
most appropriate.
Determining the center optimal central point is a problem as a
inverse/forward
geodesic computation would be needed to determine optimal midpoint
between the
points.

I can see means of minimizing the use of floating point but elimination
would be quite
difficult.

If the geodesic formula is all you need then I suggest trying to take
the geometric
mean of the ellipsoid radii at one point and using the spherical
geodesic to compute
the distance/azimuth to the other point.  Test these values with an
ellipsoid geodesic
function such as program geod or Vincenti's method.  One might be able
to get
half meter accuracy at 50km.  If not, then I recommend Vincenti's method
which
will mean a moderate amount of double precision math.

On Sun, 2005-08-07 at 11:02 +0200, Patrick Mézard wrote:

> Hello,
> I have a function performing distance calculations between points 
> defined in WGS-84 and perhaps some angular computations too. The input 
> dataset is always restricted to an area of at most 20km around a center 
> point, and usually 10km. The area center is unspecified, but extreme 
> cases (earth poles) are excluded.
> 
> For every function call, I would like to reproject the input dataset 
> into a euclidian space where I could perform metric computations. 
> Accuracy is important but not critical (I could cope with offsets of 
> 2/3m), computation speed is important too since the function is 
> implemented on mobile devices where floating-point computations are 
> rather slow.
> 
> Could you give me advices to select a projection in PROJ.4 I could 
> configure with a center point (x,y), matching the constraints above.
> 
> Thank you for any hint.
> 
> Patrick Mézard


-- 
_____________________________________________________________
Jerry and the Low Riders: Daisy Mae and Joshua
"The most certain test by which we judge whether a country is
really free is the amount of security enjoyed by minorities"
---Lord Acton, 1907 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20050807/28dcdd70/attachment.html>

From pmezard at gmail.com  Sun Aug  7 09:02:00 2005
From: pmezard at gmail.com (=?UTF-8?B?UGF0cmljayBNw6l6YXJk?=)
Date: Sun, 07 Aug 2005 18:02:00 +0200
Subject: [Proj] Local Projection Selection
In-Reply-To: <1123425540.9804.13.camel@localhost>
References: <42F5CE27.2090505@gmail.com> <1123425540.9804.13.camel@localhost>
Message-ID: <42F63078.6040300@gmail.com>

Gerald I. Evenden wrote:

> My immediate question is why not use a geodesic program rather than 
> projecting
> the data and using a plane system with its inherent distortions?

Because:
- I did not know there was code in PROJ.4 to do that and I have not much 
time to test/integrate new stuff. Unfortunately, it seems the geodesic 
computations are again using global variables everywhere to configure 
the ellipsoid as well as to pass and retrieve parameters.
- I clearly overlooked the problem, and pure distance computations are 
not enough. Sorry, I made you lose your time with this, I keep your 
remarks about the geodesic calculations. The processing code really 
needs the points to be projected in a plane to perform all sorts of 
computations like nearest neighbour search using bounding box trees, and 
other things which are just easier to do in an euclidian space.

>
> If one insists on using a projection, then Stereographic is probably 
> most appropriate.
> Determining the center optimal central point is a problem as a 
> inverse/forward
> geodesic computation would be needed to determine optimal midpoint 
> between the
> points.

I understand it is not the optimal but I do think the mean center will 
do. I have looked at the documentation about the Stereographic 
projection in in PROJ.4 documentation and in 
<http://www.remotesensing.org/geotiff/proj_list/oblique_stereographic.html>. 
I suppose I can ignore the False Easting and Northing. Latitude and 
longitude of natural origin would be the projection center point. 
Remains the scale factor. I could let it at 1.0. But maybe there is a 
way to generate it programmatically given a center point, and ellipsoid 
and a working area radius. It probably does not worth the pain however. 
Are the output coordinate units naturally in meters or have I missed 
other parameters ?

>
> I can see means of minimizing the use of floating point but 
> elimination would be quite
> difficult.

And premature optimization is evil. I will measure first. I listed this 
constraint in case there were several alternative projections to choose 
among.

Thank you for your help.

Patrick Mézard



From ndzinn at houston.rr.com  Sun Aug  7 10:02:57 2005
From: ndzinn at houston.rr.com (Noel Zinn)
Date: Sun, 7 Aug 2005 12:02:57 -0500
Subject: [Proj] Local Projection Selection
References: <42F5CE27.2090505@gmail.com> <1123425540.9804.13.camel@localhost>
	<42F63078.6040300@gmail.com>
Message-ID: <001901c59b71$dc80b780$0201a8c0@HPNZ>

Partick,

Is this a 3D problem?  Is it important for your "nearest neighbour search 
using bounding box trees, and other things which are just easier to do in an 
euclidian space" that the vertical dimension be preserved?

If so, you might consider using Earth-Centered Earth-Fixed 3D coordinates or 
some local-horizontal or local-vertical flavor thereof.

Noel

----- Original Message ----- 
From: "Patrick Mézard" <pmezard at gmail.com>
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Sent: Sunday, August 07, 2005 11:02 AM
Subject: Re: [Proj] Local Projection Selection


> Gerald I. Evenden wrote:
>
>> My immediate question is why not use a geodesic program rather than 
>> projecting
>> the data and using a plane system with its inherent distortions?
>
> Because:
> - I did not know there was code in PROJ.4 to do that and I have not much 
> time to test/integrate new stuff. Unfortunately, it seems the geodesic 
> computations are again using global variables everywhere to configure the 
> ellipsoid as well as to pass and retrieve parameters.
> - I clearly overlooked the problem, and pure distance computations are not 
> enough. Sorry, I made you lose your time with this, I keep your remarks 
> about the geodesic calculations. The processing code really needs the 
> points to be projected in a plane to perform all sorts of computations 
> like nearest neighbour search using bounding box trees, and other things 
> which are just easier to do in an euclidian space.
>
>>
>> If one insists on using a projection, then Stereographic is probably most 
>> appropriate.
>> Determining the center optimal central point is a problem as a 
>> inverse/forward
>> geodesic computation would be needed to determine optimal midpoint 
>> between the
>> points.
>
> I understand it is not the optimal but I do think the mean center will do. 
> I have looked at the documentation about the Stereographic projection in 
> in PROJ.4 documentation and in 
> <http://www.remotesensing.org/geotiff/proj_list/oblique_stereographic.html>. 
> I suppose I can ignore the False Easting and Northing. Latitude and 
> longitude of natural origin would be the projection center point. Remains 
> the scale factor. I could let it at 1.0. But maybe there is a way to 
> generate it programmatically given a center point, and ellipsoid and a 
> working area radius. It probably does not worth the pain however. Are the 
> output coordinate units naturally in meters or have I missed other 
> parameters ?
>
>>
>> I can see means of minimizing the use of floating point but elimination 
>> would be quite
>> difficult.
>
> And premature optimization is evil. I will measure first. I listed this 
> constraint in case there were several alternative projections to choose 
> among.
>
> Thank you for your help.
>
> Patrick Mézard
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 




From gerald.evenden at verizon.net  Sun Aug  7 11:43:13 2005
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 07 Aug 2005 14:43:13 -0400
Subject: [Proj] Local Projection Selection
In-Reply-To: <42F63078.6040300@gmail.com>
References: <42F5CE27.2090505@gmail.com>	<1123425540.9804.13.camel@localhost>
	<42F63078.6040300@gmail.com>
Message-ID: <1123440193.9804.28.camel@localhost>

On Sun, 2005-08-07 at 18:02 +0200, Patrick Mézard wrote:
	...

> I suppose I can ignore the False Easting and Northing. Latitude and 

Yes, indeed

> longitude of natural origin would be the projection center point. 
> Remains the scale factor. I could let it at 1.0. But maybe there is a 
> way to generate it programmatically given a center point, and ellipsoid 

Assuming that most of the points are within so many meters (ie. 50m) of
the central point
(lat_0, lon_0) then select a k_0 factor that would make the scale factor
1
half way between the center point and projection limit.  The center's
true scale will be
somewhat larger than 1. and the rim slightly smaller.  Start with about
+k_0=.99999 .
Use the -V option to experiment.

If you are keeping within 50km. scale errors should probably kept to
within much better than 1 part in
100000 or close to your 2/3 meter.

> and a working area radius. It probably does not worth the pain however. 
> Are the output coordinate units naturally in meters or have I missed 
> other parameters ?



The Cartesian coordinates are the same as the ellipsoid major axis
units.  If 'a' is in
meters then the x-y values are in meters.  There is also a scaling
parameter.
	...
-- 
_____________________________________________________________
Jerry and the Low Riders: Daisy Mae and Joshua
"The most certain test by which we judge whether a country is
really free is the amount of security enjoyed by minorities"
---Lord Acton, 1907 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20050807/34d33d5b/attachment.html>

From pmezard at gmail.com  Sun Aug  7 12:38:22 2005
From: pmezard at gmail.com (=?UTF-8?B?UGF0cmljayBNw6l6YXJk?=)
Date: Sun, 07 Aug 2005 21:38:22 +0200
Subject: [Proj] Local Projection Selection
In-Reply-To: <001901c59b71$dc80b780$0201a8c0@HPNZ>
References: <42F5CE27.2090505@gmail.com>
	<1123425540.9804.13.camel@localhost>	<42F63078.6040300@gmail.com>
	<001901c59b71$dc80b780$0201a8c0@HPNZ>
Message-ID: <42F6632E.507@gmail.com>

I am considering points on earth surface without elevation.
I have not thought about a full fledge 3D cartesian space. However, the 
distances I have to compute are "geodesic" ones (or maybe "geoidic") not 
euclidian distances. And I assumed that approximating in a 3D space 
instead of a projective plane would be worse in term of accuracy, but I 
may be wrong. It may be faster to computer however, but I am not even 
sure since WGS84 => stereo-whatever has no reason to perform a cartesian 
space rountrip as it is done when datum shifts are required.

Patrick Mézard


Noel Zinn wrote:

> Partick,
>
> Is this a 3D problem?  Is it important for your "nearest neighbour 
> search using bounding box trees, and other things which are just 
> easier to do in an euclidian space" that the vertical dimension be 
> preserved?
>
> If so, you might consider using Earth-Centered Earth-Fixed 3D 
> coordinates or some local-horizontal or local-vertical flavor thereof.
>
> Noel
>
> ----- Original Message ----- From: "Patrick Mézard" <pmezard at gmail.com>
> To: "PROJ.4 and general Projections Discussions" 
> <proj at lists.maptools.org>
> Sent: Sunday, August 07, 2005 11:02 AM
> Subject: Re: [Proj] Local Projection Selection
>
>
>> Gerald I. Evenden wrote:
>>
>>> My immediate question is why not use a geodesic program rather than 
>>> projecting
>>> the data and using a plane system with its inherent distortions?
>>
>>
>> Because:
>> - I did not know there was code in PROJ.4 to do that and I have not 
>> much time to test/integrate new stuff. Unfortunately, it seems the 
>> geodesic computations are again using global variables everywhere to 
>> configure the ellipsoid as well as to pass and retrieve parameters.
>> - I clearly overlooked the problem, and pure distance computations 
>> are not enough. Sorry, I made you lose your time with this, I keep 
>> your remarks about the geodesic calculations. The processing code 
>> really needs the points to be projected in a plane to perform all 
>> sorts of computations like nearest neighbour search using bounding 
>> box trees, and other things which are just easier to do in an 
>> euclidian space.
>




From pmezard at gmail.com  Sun Aug  7 12:47:38 2005
From: pmezard at gmail.com (=?UTF-8?B?UGF0cmljayBNw6l6YXJk?=)
Date: Sun, 07 Aug 2005 21:47:38 +0200
Subject: [Proj] Local Projection Selection
In-Reply-To: <1123440193.9804.28.camel@localhost>
References: <42F5CE27.2090505@gmail.com>	<1123425540.9804.13.camel@localhost>	<42F63078.6040300@gmail.com>
	<1123440193.9804.28.camel@localhost>
Message-ID: <42F6655A.1030507@gmail.com>

Gerald I. Evenden wrote:

> On Sun, 2005-08-07 at 18:02 +0200, Patrick Mézard wrote:
>
>>longitude of natural origin would be the projection center point. 
>>Remains the scale factor. I could let it at 1.0. But maybe there is a 
>>way to generate it programmatically given a center point, and ellipsoid 
>>    
>>
> Assuming that most of the points are within so many meters (ie. 50m) 
> of the central point
> (lat_0, lon_0) then select a k_0 factor that would make the scale factor 1
> half way between the center point and projection limit.  The center's 
> true scale will be
> somewhat larger than 1. and the rim slightly smaller.  Start with 
> about +k_0=.99999 .
> Use the -V option to experiment.
>
> If you are keeping within 50km. scale errors should probably kept to 
> within much better than 1 part in
> 100000 or close to your 2/3 meter.


Ok, and how do I compute the "real" scale factor? By comparing the 
"projected" and geodesic distance of two points ? It would make sense 
and given the geodesic functions in PROJ.4, I could generate the k_0 
from any defined limit radius with some kind of minimization heuristic. 
But you are right, I will stay with k_0=1.0 for now.

>>and a working area radius. It probably does not worth the pain however. 
>>Are the output coordinate units naturally in meters or have I missed 
>>other parameters ?
>>    
>>
>  
>
> The Cartesian coordinates are the same as the ellipsoid major axis 
> units.  If 'a' is in
> meters then the x-y values are in meters.  There is also a scaling 
> parameter.

Great, thank you.

Patrick Mézard



From cjmce at lsu.edu  Sun Aug  7 15:23:44 2005
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Sun, 7 Aug 2005 17:23:44 -0500
Subject: [Proj] Local Projection Selection
Message-ID: <OF39D8E787.27BD5D9E-ON86257056.007B05A3-86257056.007B060C@lsu.edu>





I don't see why an Azimuthal Equidistant would not be the simplest way to
go.  Since the projection is essentially a  conversion between true azimuth
with a true geodesic as polar coordinates, and ordinary cartesian
coordinates that will accommodate the search algorithms - what's wrong with
KISS?  It's simple polar to rectangular and vice versa.

Cliff Mugnier
LSU
---------------------
Gerald I. Evenden wrote:

> My immediate question is why not use a geodesic program rather than
> projecting
> the data and using a plane system with its inherent distortions?

Because:
- I did not know there was code in PROJ.4 to do that and I have not much
time to test/integrate new stuff. Unfortunately, it seems the geodesic
computations are again using global variables everywhere to configure
the ellipsoid as well as to pass and retrieve parameters.
- I clearly overlooked the problem, and pure distance computations are
not enough. Sorry, I made you lose your time with this, I keep your
remarks about the geodesic calculations. The processing code really
needs the points to be projected in a plane to perform all sorts of
computations like nearest neighbour search using bounding box trees, and
other things which are just easier to do in an euclidian space.

>
> If one insists on using a projection, then Stereographic is probably
> most appropriate.
> Determining the center optimal central point is a problem as a
> inverse/forward
> geodesic computation would be needed to determine optimal midpoint
> between the
> points.

I understand it is not the optimal but I do think the mean center will
do. I have looked at the documentation about the Stereographic
projection in in PROJ.4 documentation and in
<http://www.remotesensing.org/geotiff/proj_list/oblique_stereographic.html>.
I suppose I can ignore the False Easting and Northing. Latitude and
longitude of natural origin would be the projection center point.
Remains the scale factor. I could let it at 1.0. But maybe there is a
way to generate it programmatically given a center point, and ellipsoid
and a working area radius. It probably does not worth the pain however.
Are the output coordinate units naturally in meters or have I missed
other parameters ?

>
> I can see means of minimizing the use of floating point but
> elimination would be quite
> difficult.

And premature optimization is evil. I will measure first. I listed this
constraint in case there were several alternative projections to choose
among.

Thank you for your help.

Patrick Mézard

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj




From gerald.evenden at verizon.net  Sun Aug  7 18:06:04 2005
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Sun, 07 Aug 2005 21:06:04 -0400
Subject: [Proj] Local Projection Selection
In-Reply-To: <42F6655A.1030507@gmail.com>
References: <42F5CE27.2090505@gmail.com>	<1123425540.9804.13.camel@localhost>
	<42F63078.6040300@gmail.com>	<1123440193.9804.28.camel@localhost>
	<42F6655A.1030507@gmail.com>
Message-ID: <1123463164.9804.54.camel@localhost>

On Sun, 2005-08-07 at 21:47 +0200, Patrick Mézard wrote:
	...

> 
> Ok, and how do I compute the "real" scale factor? By comparing the 
> "projected" and geodesic distance of two points ? It would make sense 
> and given the geodesic functions in PROJ.4, I could generate the k_0 
> from any defined limit radius with some kind of minimization heuristic. 
> But you are right, I will stay with k_0=1.0 for now.

I would pick a scale factor that works for  the 50km case and apply it
to all computation.

To figure an appropriate scale factor use the -V option which shows
scale error.
For example:

[l]proj -I -proj=sterea +ellps=whatever lat_0=45 lon_0=0 k_0=1. -V

which is the inverse projection.  Give some xy values like 0 50000 or
50000 0
and see what the scale error is.  From this select a value of k_0 which
reduces
this error by half.

For Clarke '66 50km shows a scale error of 1.00001536.  Take the
fractional part
and divide by two and subtract that from 1 to get 0.99999232 for k_0.
The scale
error is now 0.99999232 at the center and 1.00000768 at 50km.  The scale
error is about 1 at 37km from the center.

Changing the ellipsoid won't make that much difference for k_0 so one
could
use the above value for all ellipsoids.

One might want to do the above experiment at various latitudes to check
on that effect.

To see true error between hypotenuse of Cartesian triangle and geodesic,
compare
with program 'geod' distributed with the old PROJ.4 package or use
Vincenti's FORTRAN
program available from NGS.

	...

-- 
_____________________________________________________________
Jerry and the Low Riders: Daisy Mae and Joshua
"The most certain test by which we judge whether a country is
really free is the amount of security enjoyed by minorities"
---Lord Acton, 1907 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20050807/67908b23/attachment.html>

From lists at webmapit.com.br  Mon Aug  8 08:41:33 2005
From: lists at webmapit.com.br (Eduardo Patto Kanegae)
Date: Mon, 08 Aug 2005 12:41:33 -0300
Subject: [Proj] php_proj.dll - Not anymore included on PHP/MapScript package?
Message-ID: <42F77D2D.5020006@webmapit.com.br>

Hi,

As far as I remember, the last package of MapServer/PHPMapScript from 
MapTools
which included php_proj.dll was version 4.4.1

Why is this *php_proj.dll* not included anymore at 4.6 package?

Can I use this version using latest PHP 4.x or PHP 5.x?

Or is there a way to build it without needing *Micro$oft Expensive 
Studio* ? I mean,
is it possible to do it using the free *MS Visual C++ Toolkit 2003* or 
another free compiler?

How was this extension done? Was it 'SWIGed' from PHP+PROJ4 sources?

best regards

-- 
Eduardo Patto Kanegae
http://www.webmapit.com.br




From stefan.biegger at endoxon.com  Tue Aug  9 09:35:33 2005
From: stefan.biegger at endoxon.com (Stefan Biegger)
Date: Tue, 9 Aug 2005 18:35:33 +0200
Subject: [Proj] Extent of mercator
Message-ID: <20050809162639.4771A31FB3@hermes.endoxon.com>

Hi everybody

does somebody knows if there's a well defined limit of the extent when using
the mercator projection? For UTM, there's something like 'Latitude from 84S
to 80N'

Thanks a lot
Stefan



From dcmikkelsen at shaw.ca  Tue Aug  9 14:32:26 2005
From: dcmikkelsen at shaw.ca (Dean C. Mikkelsen)
Date: Tue, 09 Aug 2005 14:32:26 -0700
Subject: [Proj] Extent of mercator
In-Reply-To: <20050809162639.4771A31FB3@hermes.endoxon.com>
Message-ID: <002001c59d29$d6715a20$657e5218@GatewayDCM>


Hi there.

Generally the same rules apply for the Mercator Projection as for the
UTM. 

The largest distortion appears at the poles. To avoid the most
distortions, avoid using Latitudes greater than 60 degrees North or
South. At these latitudes, most large government agencies and countries
turn to Conic Projections.

Cheers,
Dean


Dean C. Mikkelsen, B.Sc., P.Eng.
Terra ETL Ltd - Geodesy & GIS
Phone: 604-929-8630
E-mail: dcmikkelsen at shaw.ca


-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Stefan Biegger
Sent: Tuesday, August 09, 2005 9:36 AM
To: proj at lists.maptools.org
Subject: [Proj] Extent of mercator


Hi everybody

does somebody knows if there's a well defined limit of the extent when
using the mercator projection? For UTM, there's something like 'Latitude
from 84S to 80N'

Thanks a lot
Stefan

_______________________________________________
Proj mailing list
Proj at lists.maptools.org http://lists.maptools.org/mailman/listinfo/proj



From gerald.evenden at verizon.net  Tue Aug  9 14:47:03 2005
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Tue, 09 Aug 2005 17:47:03 -0400
Subject: [Proj] Extent of mercator
In-Reply-To: <20050809162639.4771A31FB3@hermes.endoxon.com>
References: <20050809162639.4771A31FB3@hermes.endoxon.com>
Message-ID: <1123624023.9949.18.camel@localhost>

When you run out of paper.  Sorry, I couldn't resist that.

The UTM limits are somewhat artificial as the projection is not
unbounded.  The reason is
mainly due to the series expansion of the longitude term and
deteriorating accuracy
away from the CM
and thus the narrowing range of a viable projection at the polar
latitudes.

Seems like +-80 is a typical cutoff for Mercator.

But there ought to be a law against using Mercator for global maps
anyway other than
to demonstrate its poor qualities for such usage.

On Tue, 2005-08-09 at 18:35 +0200, Stefan Biegger wrote:

> Hi everybody
> 
> does somebody knows if there's a well defined limit of the extent when using
> the mercator projection? For UTM, there's something like 'Latitude from 84S
> to 80N'
> 
> Thanks a lot
> Stefan
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

-- 
_____________________________________________________________
Jerry and the Low Riders: Daisy Mae and Joshua
"The most certain test by which we judge whether a country is
really free is the amount of security enjoyed by minorities"
---Lord Acton, 1907 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20050809/27ffe3f3/attachment.html>

From Sonia.Desaulniers at nserc.ca  Thu Aug 11 12:04:40 2005
From: Sonia.Desaulniers at nserc.ca (Sonia.Desaulniers at nserc.ca)
Date: Thu, 11 Aug 2005 15:04:40 -0400
Subject: [Proj] [OSRS-PROJ] Datum conversion
Message-ID: <FBCAD1D18BA0784A9C58462B4EA9191001DAC899@ntmail6.nserc.ca>

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20050811/6d0177a5/attachment.html>

From michal_seidl at yahoo.com  Mon Aug 15 13:53:47 2005
From: michal_seidl at yahoo.com (Michal Seidl)
Date: Mon, 15 Aug 2005 13:53:47 -0700 (PDT)
Subject: [Proj] cs2cs, new datum definition, towgs84, no_def
Message-ID: <20050815205347.54887.qmail@web30203.mail.mud.yahoo.com>

Hi,
I realy tried to find this information in manuals but with no success.
1. how to define new datum to be shown by $ cs2cs -ld
2. is somewhere documentation about file syntax i can call by +init.
Especialy information about towgs83 (the rotation units?, rotation
orientation clockwise?,scale units?), no_defs etc.

Thanks Michal


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 


From fwarmerdam at gmail.com  Tue Aug 16 07:19:09 2005
From: fwarmerdam at gmail.com (Frank Warmerdam)
Date: Tue, 16 Aug 2005 10:19:09 -0400
Subject: [Proj] cs2cs, new datum definition, towgs84, no_def
In-Reply-To: <20050815205347.54887.qmail@web30203.mail.mud.yahoo.com>
References: <20050815205347.54887.qmail@web30203.mail.mud.yahoo.com>
Message-ID: <931f8ea90508160719293e4f77@mail.gmail.com>

On 8/15/05, Michal Seidl <michal_seidl at yahoo.com> wrote:
> Hi,
> I realy tried to find this information in manuals but with no success.
> 1. how to define new datum to be shown by $ cs2cs -ld

Michal,

They would be added in the list data structure in 
src/pj_datums.c. 

> 2. is somewhere documentation about file syntax i can call by +init.
> Especialy information about towgs83 (the rotation units?, rotation
> orientation clockwise?,scale units?), no_defs etc.

Some generic parameters are described at:

  http://www.remotesensing.org/proj/gen_parms.html#towgs84

Others are described in the various .pdf files on the PROJ.4
web site. 

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From fwarmerdam at gmail.com  Wed Aug 17 11:11:16 2005
From: fwarmerdam at gmail.com (Frank Warmerdam)
Date: Wed, 17 Aug 2005 14:11:16 -0400
Subject: Fwd: [Proj] Robinson discrepancy btwn proj and cs2cs
In-Reply-To: <931f8ea90508171110388142a4@mail.gmail.com>
References: <054C45FA-84AA-4328-ABE9-29C20240B843@charter.net>
	<931f8ea90508171110388142a4@mail.gmail.com>
Message-ID: <931f8ea9050817111164ca3e7f@mail.gmail.com>

On 8/17/05, William K <woklist at charter.net> wrote:
>  From proj 4.4.7 to 4.4.8 something changed so I get different
> projected coordinates for the Robinson projection now.  I didn't
> think to check cs2cs before - I noticed it in GRASS.  But after
> checking cs2cs, I see that it matches GRASS, so it doesn't appear to
> be a GRASS problem.
>
> Here's what I get with proj 4.4.7:
>
> Sumomo:~ williamk$ proj +proj=robin +ellps=WGS84
> 0 45
> 0.00    4805073.65
> ^C
> Sumomo:~ williamk$ cs2cs +proj=longlat +ellps=WGS84 +to +proj=robin
> +ellps=WGS84
> 0 45
> 0.00    4805073.65 0.00
> ^C
>
> And here's what I get with proj 4.4.9:
>
> Sumomo:~ williamk$ proj +proj=robin +ellps=WGS84
> 0 45
> 0.00    4805073.65
> ^C
> Sumomo:~ williamk$ cs2cs +proj=longlat +ellps=WGS84 +to +proj=robin
> +ellps=WGS84
> 0 45
> 0.00    4785120.02 -10647.46
> ^C
>
> There is a ~20000m Y difference.  (X coordinates are not affected)
>
> The only other software I can check against is MAPublisher 5 for
> Illustrator.  It produces the same results as the proj command.  I
> had other problems with Robinson in ArcGIS, so I don't know what that
> does. (That was Arc 8, I'll have our GIS guy try it again in Arc 9
> when he gets back.)
>
> Which is right?  How do I tell - are there some reference coordinates
> to check?

William,

I believe the issue is that Robinson is a spherical-only projection.
So internally the ellipsoid is changed from WGS84 to a sphere.
The cs2cs command notices that the two coordinate systems have
different earth models, and applies a sphere to ellipsoid conversion
as part of the operation.

The ellipsoid to ellipsoid conversion approach changed in a
fairly recent PROJ.4 library release, hence the dfference.  In
the past, if there was no datum shifting information, lat/long values
were treated unchanged when going from raw ellipse to raw ellipse.

I am considering changing the "new" behavior, since it seems to
different from what most other systems do, and what people expect.
Feedback on this idea is welcome.

PS. I have rerouted this email to proj at lists.maptools.org, and I have
completely removed the proj list from xserve.flids.com. 

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From woklist at charter.net  Wed Aug 17 11:49:42 2005
From: woklist at charter.net (William K)
Date: Wed, 17 Aug 2005 13:49:42 -0500
Subject: [Proj] Robinson discrepancy btwn proj and cs2cs
In-Reply-To: <931f8ea9050817111164ca3e7f@mail.gmail.com>
References: <054C45FA-84AA-4328-ABE9-29C20240B843@charter.net>
	<931f8ea90508171110388142a4@mail.gmail.com>
	<931f8ea9050817111164ca3e7f@mail.gmail.com>
Message-ID: <6FF23E05-0C32-41DA-A514-CA79B97E3635@charter.net>

(forgot about the list change - Mac OS X Mail address 'memory'  
feature had the old address, now removed)

I thought it might be some spheroid transformation thing, from some  
past cs2cs questions on the list.  My brain shorts out a bit when I  
start to think about ellipsoids, spheroids and datums - so, which one  
is giving the correct value?

I'm guessing that MAPublisher is not a good comparison, since it  
tends to dumb down projection stuff (never sure what it does  
sometimes, especially with ellipsoid transformations, and no sphere  
selection, you have to enter major/minor ellipsoid axes).

I thought I had looked at this before, but using the sphere ellipse  
in proj 4.4.9 gives:

Sumomo:~ williamk$ proj +proj=robin +ellps=sphere
0 45
0.00    4799694.61
^C

Sumomo:~ williamk$ cs2cs +proj=longlat +ellps=sphere +to +proj=robin  
+ellps=sphere
0 45
0.00    4799694.61 0.00
^C

They're the same now, but different from either ellipsoid case.   
Closer to the proj ellipsoid.  I could only read off coordinates from  
a clikc in a GRASS window, so they're not exact, but at a large  
enough zoom, they're very close to the cs2cs case.

I guess it's just habit to use WGS84 for small-scale stuff (regions/ 
continents and world), I should probably update my habits, huh?   
Remove those transformation issues from the equation (literally).   
I'll check this with GRASS and MAPublisher when I'm feeling better  
and back at work (hopefully tomorrow).

Oh, and what is that 3rd number in the cs2cs output?  The man page  
didn't say.


On Aug 17, 2005, at 1:11 PM, Frank Warmerdam wrote:

> William,
>
> I believe the issue is that Robinson is a spherical-only projection.
> So internally the ellipsoid is changed from WGS84 to a sphere.
> The cs2cs command notices that the two coordinate systems have
> different earth models, and applies a sphere to ellipsoid conversion
> as part of the operation.
>
> The ellipsoid to ellipsoid conversion approach changed in a
> fairly recent PROJ.4 library release, hence the dfference.  In
> the past, if there was no datum shifting information, lat/long values
> were treated unchanged when going from raw ellipse to raw ellipse.
>
> I am considering changing the "new" behavior, since it seems to
> different from what most other systems do, and what people expect.
> Feedback on this idea is welcome.
>
> PS. I have rerouted this email to proj at lists.maptools.org, and I have
> completely removed the proj list from xserve.flids.com.
>

-----
William Kyngesburye <kyngchaos at kyngchaos.com>
http://www.kyngchaos.com/

"Oh, look, I seem to have fallen down a deep, dark hole.  Now what  
does that remind me of?  Ah, yes - life."

- Marvin


From fwarmerdam at gmail.com  Wed Aug 17 12:10:24 2005
From: fwarmerdam at gmail.com (Frank Warmerdam)
Date: Wed, 17 Aug 2005 15:10:24 -0400
Subject: [Proj] Robinson discrepancy btwn proj and cs2cs
In-Reply-To: <6FF23E05-0C32-41DA-A514-CA79B97E3635@charter.net>
References: <054C45FA-84AA-4328-ABE9-29C20240B843@charter.net>
	<931f8ea90508171110388142a4@mail.gmail.com>
	<931f8ea9050817111164ca3e7f@mail.gmail.com>
	<6FF23E05-0C32-41DA-A514-CA79B97E3635@charter.net>
Message-ID: <931f8ea9050817121017389675@mail.gmail.com>

On 8/17/05, William K <woklist at charter.net> wrote:
> (forgot about the list change - Mac OS X Mail address 'memory'
> feature had the old address, now removed)
> 
> I thought it might be some spheroid transformation thing, from some
> past cs2cs questions on the list.  My brain shorts out a bit when I
> start to think about ellipsoids, spheroids and datums - so, which one
> is giving the correct value?

William,

What is "correct"?  That is almost a metaphysical question in an
underdetermined context.  That means, I don't know but none are
exactly right or wrong.

> I'm guessing that MAPublisher is not a good comparison, since it
> tends to dumb down projection stuff (never sure what it does
> sometimes, especially with ellipsoid transformations, and no sphere
> selection, you have to enter major/minor ellipsoid axes).
> 
> I thought I had looked at this before, but using the sphere ellipse
> in proj 4.4.9 gives:
> 
> Sumomo:~ williamk$ proj +proj=robin +ellps=sphere
> 0 45
> 0.00    4799694.61
> ^C
> 
> Sumomo:~ williamk$ cs2cs +proj=longlat +ellps=sphere +to +proj=robin
> +ellps=sphere
> 0 45
> 0.00    4799694.61 0.00
> ^C
> 
> They're the same now, but different from either ellipsoid case.
> Closer to the proj ellipsoid.  I could only read off coordinates from
> a clikc in a GRASS window, so they're not exact, but at a large
> enough zoom, they're very close to the cs2cs case.
> 
> I guess it's just habit to use WGS84 for small-scale stuff (regions/
> continents and world), I should probably update my habits, huh?
> Remove those transformation issues from the equation (literally).
> I'll check this with GRASS and MAPublisher when I'm feeling better
> and back at work (hopefully tomorrow).
> 
> Oh, and what is that 3rd number in the cs2cs output?  The man page
> didn't say.

The third value is elevation from the ellipsoid.   It changed dramatically 
in the original robinson case because of the large vertical difference
between the sphere and the ellipsoid. 

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From tim.loesch at dnr.state.mn.us  Thu Aug 18 09:02:09 2005
From: tim.loesch at dnr.state.mn.us (Tim Loesch)
Date: Thu, 18 Aug 2005 11:02:09 -0500
Subject: [Proj] Re: Proj Digest, Vol 15, Issue 8 (NOTICE - Out of the office
	August 1st)
Message-ID: <s3046ad3.014@co5.dnr.state.mn.us>

Tim out of the office until Wednesday August 24th.

If you have a GIS question call Mike Tronrud at 651-297-7877 or Chris Pouliot at 651-297-2916



From p.willis at telus.net  Fri Aug 19 10:39:00 2005
From: p.willis at telus.net (pw)
Date: Fri, 19 Aug 2005 10:39:00 -0700
Subject: [Proj] Proj binary input and output
Message-ID: <43061934.4090901@telus.net>

Hello,

The documentation for proj states binary input is
expected to be system byte order and double.

I am getting invalid results with binary
input, yet if I manually enter lonlats asking
for binary output I get the expected output.

Right my data is double precision floating point (64bit)
organized as a series of lonlats (x then y).

Byte order appears to be OK since the program chokes if I
reverse the byte order.

What format does my binary input file (binary_file.bin)
need to be in for the following  conversion?

proj +proj=utm +zone=18 +ellps=WGS84 -i binary_file.bin


Thanks for any insights you may have,

Peter Willis



From gerald.evenden at verizon.net  Fri Aug 19 13:54:50 2005
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Fri, 19 Aug 2005 16:54:50 -0400
Subject: [Proj] Proj binary input and output
In-Reply-To: <43061934.4090901@telus.net>
References: <43061934.4090901@telus.net>
Message-ID: <1124484890.10001.20.camel@localhost>

In your example the input should be a (double)longitude followed by a
(double)
latitude (both in local binary).

An example I often use in checking projections is where the data is
passed
by binary through a pipe:

proj +proj=test [+other_opts] -o | proj +proj=test [+other_opts] -I -i

where the sysin input to the first program is ASCII, the output piped to
the second is
binary and input to the second which sysout's ASCII.

Note that proj uses

fread(&data, sizeof(UV), 1, fid)

for binary input and equivalent fwrite for binary output where

typedef struct { double u, v; } UV;

Unless order flipping options are used, u=longitude and v=latitude.

On Fri, 2005-08-19 at 10:39 -0700, pw wrote:

> Hello,
> 
> The documentation for proj states binary input is
> expected to be system byte order and double.
> 
> I am getting invalid results with binary
> input, yet if I manually enter lonlats asking
> for binary output I get the expected output.
> 
> Right my data is double precision floating point (64bit)
> organized as a series of lonlats (x then y).
> 
> Byte order appears to be OK since the program chokes if I
> reverse the byte order.
> 
> What format does my binary input file (binary_file.bin)
> need to be in for the following  conversion?
> 
> proj +proj=utm +zone=18 +ellps=WGS84 -i binary_file.bin

	...
-- 
_____________________________________________________________
Jerry and the Low Riders: Daisy Mae and Joshua
"The most certain test by which we judge whether a country is
really free is the amount of security enjoyed by minorities"
---Lord Acton, 1907 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20050819/e85a68e0/attachment.html>

From p.willis at telus.net  Fri Aug 19 14:55:37 2005
From: p.willis at telus.net (pw)
Date: Fri, 19 Aug 2005 14:55:37 -0700
Subject: [Proj] Proj binary input and output
In-Reply-To: <1124484890.10001.20.camel@localhost>
References: <43061934.4090901@telus.net> <1124484890.10001.20.camel@localhost>
Message-ID: <43065559.9090606@telus.net>

Gerald I. Evenden wrote:
> In your example the input should be a (double)longitude followed by a 
> (double)
> latitude (both in local binary).
> 
> An example I often use in checking projections is where the data is passed
> by binary through a pipe:
> 
> proj +proj=test [+other_opts] -o | proj +proj=test [+other_opts] -I -i
> 
> where the sysin input to the first program is ASCII, the output piped to 
> the second is
> binary and input to the second which sysout's ASCII.
> 
> Note that proj uses
> 
> fread(&data, sizeof(UV), 1, fid)
> 
> for binary input and equivalent fwrite for binary output where
> 
> typedef struct { double u, v; } UV;
> 
> Unless order flipping options are used, u=longitude and v=latitude.
> 
> On Fri, 2005-08-19 at 10:39 -0700, pw wrote:
> 


My test file is a double precision binary file with 
lonlatlonlat...(113000 times)

/*binary file -> [proj] -> binary -> [invproj] -> text*/

proj +proj=utm +zone=17 +ellps=WGS84 -b binary_file.bin |  \
proj -I -i +proj=utm +zone=17 +ellps=WGS84

OR:

/*binary to text*/
proj +proj=utm +zone=17 +ellps=WGS84 -i binary_file.bin

Both of these give me poor output under MS Windows.
I haven't tried this under linux yet. That would tell me
if the problem is with my VC 5 build under MS windows, although
the default struct alignment/packing is 8 bytes which should
be totally copacetic with the struct UV anyway since doubles are
8 bytes.

I was curious as to whether binary files were currently
supported (tested?) since this is treated in only a passing
manner in the docs.

If my command line is correct above, then my build must be wrong.
I will check my linux build to see if it responds in the same
manner.

Thanks for your help,

Peter Willis



From gerald.evenden at verizon.net  Fri Aug 19 18:33:48 2005
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: Fri, 19 Aug 2005 21:33:48 -0400
Subject: [Proj] Proj binary input and output
In-Reply-To: <43065559.9090606@telus.net>
References: <43061934.4090901@telus.net>	<1124484890.10001.20.camel@localhost>
	<43065559.9090606@telus.net>
Message-ID: <1124501628.10001.25.camel@localhost>

One point I didn't think of on the first email: is your binary data in
radians???
proj/lproj does not do deg-to-radian conversion with binary data.

Otherwise, your following usage looks OK.

On Fri, 2005-08-19 at 14:55 -0700, pw wrote:	
    ...

> My test file is a double precision binary file with 
> lonlatlonlat...(113000 times)
> 
> /*binary file -> [proj] -> binary -> [invproj] -> text*/
> 
> proj +proj=utm +zone=17 +ellps=WGS84 -b binary_file.bin |  \
> proj -I -i +proj=utm +zone=17 +ellps=WGS84
> 
> OR:
> 
> /*binary to text*/
> proj +proj=utm +zone=17 +ellps=WGS84 -i binary_file.bin
> 
> Both of these give me poor output under MS Windows.
> I haven't tried this under linux yet. That would tell me
> if the problem is with my VC 5 build under MS windows, although
> the default struct alignment/packing is 8 bytes which should
> be totally copacetic with the struct UV anyway since doubles are
> 8 bytes.
> 
> I was curious as to whether binary files were currently
> supported (tested?) since this is treated in only a passing
> manner in the docs.
> 
> If my command line is correct above, then my build must be wrong.
> I will check my linux build to see if it responds in the same
> manner.

	...
-- 
_____________________________________________________________
Jerry and the Low Riders: Daisy Mae and Joshua
"The most certain test by which we judge whether a country is
really free is the amount of security enjoyed by minorities"
---Lord Acton, 1907 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20050819/83250160/attachment.html>

From p.willis at telus.net  Fri Aug 19 20:36:35 2005
From: p.willis at telus.net (pw)
Date: Fri, 19 Aug 2005 20:36:35 -0700
Subject: [Proj] Proj binary input and output
In-Reply-To: <1124501628.10001.25.camel@localhost>
References: <43061934.4090901@telus.net>	<1124484890.10001.20.camel@localhost>	<43065559.9090606@telus.net>
	<1124501628.10001.25.camel@localhost>
Message-ID: <4306A543.8040700@telus.net>

Gerald I. Evenden wrote:
> One point I didn't think of on the first email: is your binary data in 
> radians???
> proj/lproj does not do deg-to-radian conversion with binary data.
> 
> Otherwise, your following usage looks OK.
> 

Ah!, radians. That has to be it.
All my data is in degrees.
I'll try that on Monday.

Thanks for your help,

Peter Willis


