From Mikael.Rittri at carmenta.com  Mon Dec  1 01:43:41 2008
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 1 Dec 2008 10:43:41 +0100
Subject: [Proj] "Double ellipsoid" case?
In-Reply-To: <F74264B9A8014D7DA14DD2494780A066@PowerSpec>
References: <26134314.180351227873652488.JavaMail.support.mn@elisanet.fi><493021B5.5010904@pobox.com><B597ADFC46B67741B18EA6AA13613FF7EC2538@email002.lsu.edu>
	<F74264B9A8014D7DA14DD2494780A066@PowerSpec>
Message-ID: <FAF6E56B26D2044696772EBE89B15351014B4328@posty.carmenta.se>

Noel,
I haven't checked your results, but there is no reason to expect that the two results would be the same.  
 
As I see it, Ellipsoid Mercator is one projection, and Sphere Mercator is a different one. 
Each one is internally consistent, but the two are not the same.  That is, since the formulas 
are different, the (Easting,Northing) values are not the same for the same (Lon,Lat).  But 
for each projection, you can use its inverse to get exactly back to the original (Lon,Lat). 
 
The Ellipsoid Mercator is exactly conformal while Sphere Mercator is only approximately conformal
(if you regard the ellipsoid as the true shape of the Earth).  I think the maximal angle distortion 
for Sphere Mercator is 0.2 degrees, so for visual display it is hard to notice.
 
Since the projections are distinct, we should not expect that analoguous calculations done 
in their projected planes should give identical results.  
 
So, the situation is similar to the French truncated Lambert Conformal Conic, which is 
not exactly conformal, and is a different projection than the true Lambert Conformal Conic. 
 
It is tricky to create WKT to represent the Sphere Mercator projection together with an ellipsoid datum. 
But that is a failure of WKT, not of the Sphere Mercator.  One way to express it in WKT has 
been suggested by Martin Desruisseaux of GeoTools, another way by Melita Kennedy of ESRI. 
See the August 2008 archives for the MetaCRS mailing list, 
http://lists.osgeo.org/pipermail/metacrs/2008-August/thread.html . 
 
And it is not only Google that uses spherical projections.  So does the National Snow and Ice Data Center, USA. 
ftp://sidads.colorado.edu/pub/ppp/conf_ppp/Haran/HDF-EOS_vs._GeoTIFF__GIS_Problems_when_Projection_and_Datum_Spheroids_are_Different.pdf
 
I think it is unfortunate that EPSG insists that a spherical projection can only be used together with a spherical datum, because 
a) it is not true,
b) spherical datums do not exist for the Earth (http://lists.maptools.org/pipermail/proj/2008-August/003667.html). 
 
Best regards,
 
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
Tel: +46-31-775 57 37
Mob: +46-703-60 34 07
mikael.rittri at carmenta.com
www.carmenta.com 
 

________________________________

From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn
Sent: den 30 november 2008 06:05
To: 'PROJ.4 and general Projections Discussions'
Subject: RE: [Proj] "Double ellipsoid" case?



Not that Frank is responsible for the geodesy and cartography in Google Maps (or their abuse therein), but the phrase "the resulting lat/long coordinates are intended to be treated as WGS84 after that" so troubles me that I am sympathetic to Cliff's sentiments.  So, let's quantify the offense with an experiment that anyone can duplicate, perhaps in Proj4 (I work in Matlab).

 

Consider the following Mercator grid parameters defined on both WGS84 and the Google Sphere (whose radius equals the semi-major axis of WGS84): CM = 95W, FN=FE=0.  That's all we need.

 

Now consider at point at 30N / 95W.  That's somewhere near Houston, Texas, where I live.  Convert to Mercator in both systems.  Then traverse to the NE about 141km in both systems by adding 100km to both the Northing and Easting (in Mercator).  Convert the resulting Mercator coordinates back to geographicals (lat / lon).

 

Here's what I get for WGS84:  30N / 95W is N3,503,549.84350437m / E0m with a point scale (Mercator is conformal) of 1.15470053837925 and at the end of the traverse the geographicals are 30-46-29.63568N /           94-06-06.06498W.

 

For the Google Sphere the results are:  30N / 95W is N3,482,189.08540862m / E0m with a point scale of 1.15373388324025 and at the end of the traverse the geographicals are 30-46-43.56897N /  94-06-06.06498W.

 

Pardon the excessive precision; it's just what I get.  And I hope that I haven't blundered in my haste to respond.  Perhaps someone can confirm.

 

Interestingly, the longitudes are the same, but the latitudes are very different (more than might be accounted for by the scale differences, a cartographic subtlety likely beyond the ken of most Google Maps users anyway).  I don't believe the resulting lat/long coordinates can be treated as WGS84 at all.  

 

Noel Zinn

 

________________________________

From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Clifford J Mugnier
Sent: Saturday, November 29, 2008 8:15 AM
To: PROJ.4 and general Projections Discussions
Subject: RE: [Proj] "Double ellipsoid" case?

 

Frank:

 

Ah, there's a BIG difference between the true coordinate system relations of geodesy used by national governments and one cooked up by an ignoramus at Google Maps that did not know what they were doing ... I guess there's a lot of that going around, too.

 

I suppose even twits help contribute to keep knowledgeable consultants in business.

 

Cliff Mugnier

LSU

 

________________________________

From: proj-bounces at lists.maptools.org on behalf of Frank Warmerdam
Sent: Fri 28-Nov-08 10:52
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double ellipsoid" case?

support.mn at elisanet.fi wrote:
> Hello,
>
> I just started to think about a situation where there might be a double
> ellipsoid case.
>
> 1) projection uses ellipsoid A independently
> 2) datum shift uses ellipsoid B
>
> Is this possible to be handled with proj.4? Since there is only one
> ellipsoid definition available

Janne,

PROJ.4 does not currently handle this situation conveniently.  One special
case is where the projection uses a particular ellipsoid, but datum shifts
should treat the corresponding lat/long values as being WGS84. In that
special case you can use +nadgrids=@null to effectively say the datum shift
to WGS84 is a no-op.

I have at times contemplated having a way of having a datum/ellipsoid
definition used for datum shifting purposes that is independent of the
normal ellipsoid used by the projection functions but I have not pursued it.

Clifford J Mugnier wrote:
 > I've seen a few projections and datums in my day, and I've never come
 > accross that.  For there to be a different ellipsoid of reference for a
 > projection than there is for a datum is a contradiction in terms.

Cliff,

The very common case we see a lot these days is the google maps mercator
projection.  The mercator calculations are done based on a particular
spherical earth model, but the resulting lat/long coordinates are intended
to be treated as WGS84 after that.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081201/afb61101/attachment.html>

From ndzinn at comcast.net  Mon Dec  1 04:02:53 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Mon, 1 Dec 2008 06:02:53 -0600
Subject: [Proj] "Double ellipsoid" case?
In-Reply-To: <FAF6E56B26D2044696772EBE89B15351014B4328@posty.carmenta.se>
References: <26134314.180351227873652488.JavaMail.support.mn@elisanet.fi><493021B5.5010904@pobox.com><B597ADFC46B67741B18EA6AA13613FF7EC2538@email002.lsu.edu><F74264B9A8014D7DA14DD2494780A066@PowerSpec>
	<FAF6E56B26D2044696772EBE89B15351014B4328@posty.carmenta.se>
Message-ID: <3C8E3BDD423A4174849D9C2BF64CA253@PowerSpec>

Mikael,

 

Thanks for the useful links, which Ill follow later in the day (off to work
soon).

 

The only difference between the spherical and ellipsoidal Mercator is that
the eccentricity squared is zero in the former case.  I agree that both are
valid.  Intuition tells me that the spherical case is conformal, too, though
I havent checked.  Of course, the LL<=>NE mapping is different, largely
because the meridional arc is so different. My example shows that, so I used
them relatively.  

 

My objection (well, one of my objections) is the implicit expectation that
one can do relative computations (whatever one does on a map) on a spherical
Mercator and the resulting lat/long coordinates are intended to be treated
as WGS84 after that (in Franks paraphrasing of what the Google Maps model
implies).  Thats not true.  

 

Datums CANNOT be switched under the projection, the whole issue of this
double ellipsoid thread.  The Google Sphere is NOT WGS84.  Yes, it can be
made to look similar at a point, but wander away from that point and its
very different.  My intention was merely to quantify the error with a
numerical example.  

 

Regarding the EPSG, I respect their integrity in resisting bogus geodesy.
Misrepresentations aside, the Google Sphere is not WGS84.

 

Thanks,

Noel

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikael Rittri
Sent: Monday, December 01, 2008 3:44 AM
To: PROJ.4 and general Projections Discussions
Subject: RE: [Proj] "Double ellipsoid" case?

 

Noel,

I haven't checked your results, but there is no reason to expect that the
two results would be the same.  

 

As I see it, Ellipsoid Mercator is one projection, and Sphere Mercator is a
different one. 

Each one is internally consistent, but the two are not the same.  That is,
since the formulas 

are different, the (Easting,Northing) values are not the same for the same
(Lon,Lat).  But 

for each projection, you can use its inverse to get exactly back to the
original (Lon,Lat). 

 

The Ellipsoid Mercator is exactly conformal while Sphere Mercator is only
approximately conformal

(if you regard the ellipsoid as the true shape of the Earth).  I think the
maximal angle distortion 

for Sphere Mercator is 0.2 degrees, so for visual display it is hard to
notice.

 

Since the projections are distinct, we should not expect that analoguous
calculations done 

in their projected planes should give identical results.  

 

So, the situation is similar to the French truncated Lambert Conformal
Conic, which is 

not exactly conformal, and is a different projection than the true Lambert
Conformal Conic. 

 

It is tricky to create WKT to represent the Sphere Mercator projection
together with an ellipsoid datum. 

But that is a failure of WKT, not of the Sphere Mercator.  One way to
express it in WKT has 

been suggested by Martin Desruisseaux of GeoTools, another way by Melita
Kennedy of ESRI. 

See the August 2008 archives for the MetaCRS mailing list, 

http://lists.osgeo.org/pipermail/metacrs/2008-August/thread.html . 

 

And it is not only Google that uses spherical projections.  So does the
National Snow and Ice Data Center, USA. 

ftp://sidads.colorado.edu/pub/ppp/conf_ppp/Haran/HDF-EOS_vs._GeoTIFF__GIS_Pr
oblems_when_Projection_and_Datum_Spheroids_are_Different.pdf

 

I think it is unfortunate that EPSG insists that a spherical projection can
only be used together with a spherical datum, because 

a) it is not true,

b) spherical datums do not exist for the Earth
(http://lists.maptools.org/pipermail/proj/2008-August/003667.html). 

 

Best regards,

 

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
Tel: +46-31-775 57 37
Mob: +46-703-60 34 07
mikael.rittri at carmenta.com
www.carmenta.com 

 

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Noel Zinn
Sent: den 30 november 2008 06:05
To: 'PROJ.4 and general Projections Discussions'
Subject: RE: [Proj] "Double ellipsoid" case?

Not that Frank is responsible for the geodesy and cartography in Google Maps
(or their abuse therein), but the phrase the resulting lat/long coordinates
are intended to be treated as WGS84 after that so troubles me that I am
sympathetic to Cliffs sentiments.  So, lets quantify the offense with an
experiment that anyone can duplicate, perhaps in Proj4 (I work in Matlab).

 

Consider the following Mercator grid parameters defined on both WGS84 and
the Google Sphere (whose radius equals the semi-major axis of WGS84): CM =
95W, FN=FE=0.  Thats all we need.

 

Now consider at point at 30N / 95W.  Thats somewhere near Houston, Texas,
where I live.  Convert to Mercator in both systems.  Then traverse to the NE
about 141km in both systems by adding 100km to both the Northing and Easting
(in Mercator).  Convert the resulting Mercator coordinates back to
geographicals (lat / lon).

 

Heres what I get for WGS84:  30N / 95W is N3,503,549.84350437m / E0m with a
point scale (Mercator is conformal) of 1.15470053837925 and at the end of
the traverse the geographicals are 30-46-29.63568N /
94-06-06.06498W.

 

For the Google Sphere the results are:  30N / 95W is N3,482,189.08540862m /
E0m with a point scale of 1.15373388324025 and at the end of the traverse
the geographicals are 30-46-43.56897N /  94-06-06.06498W.

 

Pardon the excessive precision; its just what I get.  And I hope that I
havent blundered in my haste to respond.  Perhaps someone can confirm.

 

Interestingly, the longitudes are the same, but the latitudes are very
different (more than might be accounted for by the scale differences, a
cartographic subtlety likely beyond the ken of most Google Maps users
anyway).  I dont believe the resulting lat/long coordinates can be treated
as WGS84 at all.  

 

Noel Zinn

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Clifford J Mugnier
Sent: Saturday, November 29, 2008 8:15 AM
To: PROJ.4 and general Projections Discussions
Subject: RE: [Proj] "Double ellipsoid" case?

 

Frank:

 

Ah, there's a BIG difference between the true coordinate system relations of
geodesy used by national governments and one cooked up by an ignoramus at
Google Maps that did not know what they were doing ... I guess there's a lot
of that going around, too.

 

I suppose even twits help contribute to keep knowledgeable consultants in
business.

 

Cliff Mugnier

LSU

 

  _____  

From: proj-bounces at lists.maptools.org on behalf of Frank Warmerdam
Sent: Fri 28-Nov-08 10:52
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double ellipsoid" case?

support.mn at elisanet.fi wrote:
> Hello,
>
> I just started to think about a situation where there might be a double
> ellipsoid case.
>
> 1) projection uses ellipsoid A independently
> 2) datum shift uses ellipsoid B
>
> Is this possible to be handled with proj.4? Since there is only one
> ellipsoid definition available

Janne,

PROJ.4 does not currently handle this situation conveniently.  One special
case is where the projection uses a particular ellipsoid, but datum shifts
should treat the corresponding lat/long values as being WGS84. In that
special case you can use +nadgrids=@null to effectively say the datum shift
to WGS84 is a no-op.

I have at times contemplated having a way of having a datum/ellipsoid
definition used for datum shifting purposes that is independent of the
normal ellipsoid used by the projection functions but I have not pursued it.

Clifford J Mugnier wrote:
 > I've seen a few projections and datums in my day, and I've never come
 > accross that.  For there to be a different ellipsoid of reference for a
 > projection than there is for a datum is a contradiction in terms.

Cliff,

The very common case we see a lot these days is the google maps mercator
projection.  The mercator calculations are done based on a particular
spherical earth model, but the resulting lat/long coordinates are intended
to be treated as WGS84 after that.

Best regards,
--
---------------------------------------+------------------------------------
--
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081201/a662dcab/attachment.html>

From Mikael.Rittri at carmenta.com  Mon Dec  1 05:29:22 2008
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 1 Dec 2008 14:29:22 +0100
Subject: [Proj] "Double ellipsoid" case?
In-Reply-To: <3C8E3BDD423A4174849D9C2BF64CA253@PowerSpec>
References: <26134314.180351227873652488.JavaMail.support.mn@elisanet.fi><493021B5.5010904@pobox.com><B597ADFC46B67741B18EA6AA13613FF7EC2538@email002.lsu.edu><F74264B9A8014D7DA14DD2494780A066@PowerSpec><FAF6E56B26D2044696772EBE89B15351014B4328@posty.carmenta.se>
	<3C8E3BDD423A4174849D9C2BF64CA253@PowerSpec>
Message-ID: <FAF6E56B26D2044696772EBE89B15351014B43AD@posty.carmenta.se>

Hello Noel, 
Sorry if I am stubborn, but I don't see why so many people think that it is obvious that the datum of 
Google Mercator cannot be WGS84.  For me, it is obvious that the datum _is_ WGS84!  
 
 You wrote:
 
> Datums CANNOT be switched under the projection, the whole issue of this "double ellipsoid" thread.  
 
All right, but I don't see that the datum has been changed during the (Lon,Lat) to (Easting, Northing)
conversion, even if you use Sphere Mercator. 
 
> The Google Sphere is NOT WGS84.  
 
Well, I think that depends on your definition of "is".  Let me give two motivations: 
 
A) One can regard Sphere Mercator as a double projection, somewhat similar to Oblique Stereographic, 
Swiss cylindrical, Krovak, and a few others. 
 
     Usually, a double projection maps a (Lon_e, Lat_e) on the reference ellipsoid conformally 
	to (Lon_s, Lat_s) on a (Gaussian) sphere, which is then mapped conformally to (E, N) on a plane.  
	To get conformality between the ellipsoid and the sphere, Lat_s is slightly different from Lat_e, and Lon_s is 
     usually slightly different from Lon_e.  
 
     However, for Google Mercator it is quite possible to say that, by definition, Lat_s = Lat_e and Lon_s = Lon_e.
	This defines a mathematical function from the ellipsoid surface to the sphere surface.  This function is 
	continuous and one-to-one, so it is a perfectly good map projection, although it is only approximately conformal.  	As the final step, we use spherical Mercator formulas to map (Lon_s, Lat_s) to the plane. 
 
     If we see Google Mercator in this way, the Google Sphere is indeed not WGS84 (because WGS84 defines an ellipsoid),
     but the Sphere is an intermediate step between WGS84 and the plane.   Also, any pair of (Lon,Lat) defines a
	position on both the WGS84 ellipsoid and the Google sphere.  You can regards the (Lon,Lat) as a point on the
	ellipsoid when you do datum conversion later, or you can regard it as a point on the Google sphere when you are
	about to use the Mercator formulas.
 
B)   Alternatively, we could close our eyes hard and say: "there is no sphere in Sphere Mercator".  
	EPSG has (reluctantly) defined a map projection method they call 

		"Mercator (1SP) (Spherical)", with coord. op. method code 9841, 

     which is a different method from the two ellipsoidal projections "Mercator (1SP)" with coord. op. code 9804  
     and "Mercator (2SP)" with coord. op. code 9805.
     For the spherical formulas, EPSG just refers to Snyder: "Map Projections: A Working Manual".  
     The trouble is that Snyder's formulas use the parameter R for the spherical radius, and EPSG refuses to 
	say how to get an R out of an ellipsoid (so they cannot allow an ellipsoid datum to be associated with 
	a spherical Mercator).  
     But they _could_ have said: if the datum is ellipsoidal, R should be taken to be the equatorial radius.  
     If they had done so, then "Mercator (1SP) (Spherical)" can be regarded as a mathematical function 
     that maps a point on the reference ellipsoid directly to the plane.  If you see the formulas as a black box,
     you don't have to think of any sphere: it is enough if the formulas define a function that is continuous and 
     invertible. 
 
 
> My objection (well, one of my objections) is the implicit expectation that one can do relative 
> computations (whatever one does on a map) on a spherical Mercator and "the resulting lat/long 
> coordinates are intended to be treated as WGS84 after that" (in Frank's paraphrasing of what  
> the Google Maps model implies).  That's not true.  
 
Oh yes. You _can_ compute on the projected plane, unproject, and treat the result as WGS84 after that.  
The result may not be exactly what you wanted, but it wouldn't be so with an ellipsoid projection, either.  
For example, you wanted to go sqrt(2) * 100 km towards northeast.  All right, if you do so by your two 
methods, you get two different results. If you instead do it by following a geodetic route on the ellipsoid, 
starting towards northeast, and going sqrt(2) * 100 km on the ground, you would get a third result. And if 
you did it by following a rhumb line on the ellipsoid in the same way, you would get a fourth result.  

Computations in the projected plane simply do not agree exactly with ellipsoid distances and angles. 
(Except if you are lucky.) 
 
Best regards,

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
Tel: +46-31-775 57 37
Mob: +46-703-60 34 07
mikael.rittri at carmenta.com
www.carmenta.com 

[I am not not quoting all of Noel Zinn's letter here.] 




From ndzinn at comcast.net  Mon Dec  1 06:53:11 2008
From: ndzinn at comcast.net (ndzinn at comcast.net)
Date: Mon, 1 Dec 2008 14:53:11 +0000 (UTC)
Subject: [Proj] "Double ellipsoid" case?
In-Reply-To: <FAF6E56B26D2044696772EBE89B15351014B43AD@posty.carmenta.se>
Message-ID: <472423694.917911228143191121.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>



Mikael, 



  

Thanks for the challenging questions that address the fundamentals of why the Google Sphere is a preposterous misrepresentation of WGS84.   Unfortunately, I have only time for a couple points at the moment (at work), but I hope that others with contribute. 



  

First, all local datums (the orientation of an ellipsoid in space and the selection of the ellipsoidal parameters) are developed as best fits to the local geoid (gravity field).   Technically, best fit is the least-squares minimization of the deflections of the vertical (the differences between the normal to the ellipsoid and the vertical defined by a plumb bob) over the extent of the datum.   So, a datum has a physical constraint, the geoid, which can be measured with simple instruments like a carpenter's level.   WGS84 is a best fit to the geoid worldwide.   How absurd is it, then, to claim that the Google Sphere is WGS84 when it misses the geoid by 20km at the poles?!?   Technically, the deflections squared for the Google Sphere are way larger than for WGS84, as could be demonstrated numerically with EGM96 as a model of geoid, for example. 



  

So, that was a physical argument.   My second is conventional.   The WGS84 datum is defined (minimum deflections) with the WGS84 ellipsoid.   The ED50 datum is defined with the International Ellipsoid.   NAD27 (the old US datum) is defined on Clarke 1866.   If I could just switch the WGS84 ellipsoid in the WGS84 datum with the Google Sphere (as you suggest), why couldn't I switch the International Ellipsoid in ED50 with Clarke 1866?   Or any other switch for that matter?   In addition to worse fits mathematically (since the adjustment was done on the defining ellipsoid), we'd open the door to uncertainty and crisis.   You are proposing (and Google has introduced) the geodetic equivalent of sub-prime mortgages in the financial market.   Don't do it! 



  

Thanks for raising the questions.   They need straight answers. 



  

Regards, 

Noel Zinn 






----- Original Message ----- 
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com> 
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org> 
Sent: Monday, December 1, 2008 7:29:22 AM GMT -06:00 US/Canada Central 
Subject: RE: [Proj] "Double ellipsoid" case? 

Hello Noel, 
Sorry if I am stubborn, but I don't see why so many people think that it is obvious that the datum of 
Google Mercator cannot be WGS84.  For me, it is obvious that the datum _is_ WGS84!   
  
 You wrote: 
  
> Datums CANNOT be switched under the projection, the whole issue of this "double ellipsoid" thread.   
  
All right, but I don't see that the datum has been changed during the (Lon,Lat) to (Easting, Northing) 
conversion, even if you use Sphere Mercator. 
  
> The Google Sphere is NOT WGS84.   
  
Well, I think that depends on your definition of "is".  Let me give two motivations: 
  
A) One can regard Sphere Mercator as a double projection, somewhat similar to Oblique Stereographic, 
Swiss cylindrical, Krovak, and a few others. 
  
     Usually, a double projection maps a (Lon_e, Lat_e) on the reference ellipsoid conformally 
        to (Lon_s, Lat_s) on a (Gaussian) sphere, which is then mapped conformally to (E, N) on a plane.   
        To get conformality between the ellipsoid and the sphere, Lat_s is slightly different from Lat_e, and Lon_s is 
     usually slightly different from Lon_e.   
  
     However, for Google Mercator it is quite possible to say that, by definition, Lat_s = Lat_e and Lon_s = Lon_e. 
        This defines a mathematical function from the ellipsoid surface to the sphere surface.  This function is 
        continuous and one-to-one, so it is a perfectly good map projection, although it is only approximately conformal.          As the final step, we use spherical Mercator formulas to map (Lon_s, Lat_s) to the plane. 
  
     If we see Google Mercator in this way, the Google Sphere is indeed not WGS84 (because WGS84 defines an ellipsoid), 
     but the Sphere is an intermediate step between WGS84 and the plane.   Also, any pair of (Lon,Lat) defines a 
        position on both the WGS84 ellipsoid and the Google sphere.  You can regards the (Lon,Lat) as a point on the 
        ellipsoid when you do datum conversion later, or you can regard it as a point on the Google sphere when you are 
        about to use the Mercator formulas. 
  
B)   Alternatively, we could close our eyes hard and say: "there is no sphere in Sphere Mercator".   
        EPSG has (reluctantly) defined a map projection method they call 

                "Mercator (1SP) (Spherical)", with coord. op. method code 9841, 

     which is a different method from the two ellipsoidal projections "Mercator (1SP)" with coord. op. code 9804   
     and "Mercator (2SP)" with coord. op. code 9805. 
     For the spherical formulas, EPSG just refers to Snyder: "Map Projections: A Working Manual".   
     The trouble is that Snyder's formulas use the parameter R for the spherical radius, and EPSG refuses to 
        say how to get an R out of an ellipsoid (so they cannot allow an ellipsoid datum to be associated with 
        a spherical Mercator).   
     But they _could_ have said: if the datum is ellipsoidal, R should be taken to be the equatorial radius.   
     If they had done so, then "Mercator (1SP) (Spherical)" can be regarded as a mathematical function 
     that maps a point on the reference ellipsoid directly to the plane.  If you see the formulas as a black box, 
     you don't have to think of any sphere: it is enough if the formulas define a function that is continuous and 
     invertible. 
  
  
> My objection (well, one of my objections) is the implicit expectation that one can do relative 
> computations (whatever one does on a map) on a spherical Mercator and "the resulting lat/long 
> coordinates are intended to be treated as WGS84 after that" (in Frank's paraphrasing of what   
> the Google Maps model implies).  That's not true.   
  
Oh yes. You _can_ compute on the projected plane, unproject, and treat the result as WGS84 after that.   
The result may not be exactly what you wanted, but it wouldn't be so with an ellipsoid projection, either.   
For example, you wanted to go sqrt(2) * 100 km towards northeast.  All right, if you do so by your two 
methods, you get two different results. If you instead do it by following a geodetic route on the ellipsoid, 
starting towards northeast, and going sqrt(2) * 100 km on the ground, you would get a third result. And if 
you did it by following a rhumb line on the ellipsoid in the same way, you would get a fourth result.   

Computations in the projected plane simply do not agree exactly with ellipsoid distances and angles. 
(Except if you are lucky.) 
  
Best regards, 

-- 
Mikael Rittri 
Carmenta AB 
Box 11354 
SE-404 28 Göteborg 
Visitors: Sankt Eriksgatan 5 
SWEDEN 
Tel: +46-31-775 57 37 
Mob: +46-703-60 34 07 
mikael.rittri at carmenta.com 
www.carmenta.com 

[I am not not quoting all of Noel Zinn's letter here.] 


_______________________________________________ 
Proj mailing list 
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081201/9bb3c132/attachment.html>

From al001 at uni-koeln.de  Mon Dec  1 11:28:08 2008
From: al001 at uni-koeln.de (Irwin Scollar)
Date: Mon, 01 Dec 2008 20:28:08 +0100
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <200812010946.mB19kXYE013117@duke.maptools.org>
References: <200812010946.mB19kXYE013117@duke.maptools.org>
Message-ID: <200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>

MarKus Neteler wrote:

>How about precision in mountainous regions such as the Southern Alps?
>PROJ4/OGR reprojected mountain peak points from geonames.org as
>well as known points from our province are off for > 100m when
>visualized in GE which they match our local orthophotos. Is the positional
>error related to the height of the point (here, satellite orthorectification)?

In GE go to View, Sidebar and turn it on if it's not already 
on.  There, go to Layers, Primary Database, and uncheck the Terrain 
option checkbox.  That gives an orthophoto-like view even in the 
Alps.  You can check this by turning the GE Grid off and on in the 
View menu or pressing Ctrl + L.

It's far from perfect, but it's good enough for my application of 
mapping archaeological sites visible as crop or soil markings in the 
GE images over modest areas.  Cliff dwellings are fortunately rare 
exceptions. :-D

A more important concern is to increase the apparent resolution of GE 
imagery which is normally limited to the number of pixels of the 
display screen to approach that of a cadastral map of a small 
area.  Using the GE lat/lons of image corners which can be found via 
KML API routines, one can mosaic multiple zoomed detail images if the 
GE raw data is originally from a single good orthophoto or a mosaic 
made from several of these or even from a single Digital Globe strip 
in some parts of the world like the Nile valley.  I have had good 
results with this in moderately hilly terrain up to a factor of as 
much as 6 in some places on my 1600x1200 display.

Irwin Scollar 



From strebe at aol.com  Mon Dec  1 12:28:29 2008
From: strebe at aol.com (strebe at aol.com)
Date: Mon, 01 Dec 2008 15:28:29 -0500
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <472423694.917911228143191121.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
Message-ID: <8CB220A81C4A471-17D0-8EF@webmail-stg-d02.sysops.aol.com>


 
Noel:

I cannot fully understand what it is you have done to deduce that the "Google Sphere" misses "the geoid by 20km at the poles". It's impossible for a projection to miss the geoid. The projection is a development of the datum. You cannot make plane measurements on one projection (Google Sphere on WGS84), treat those results as if you had used a different projection (UTM on WGS84), de-project your results (inverse UTM on WGS84) onto the ellipsoid (WGS84), and then claim that the projection misses the geoid.

How can "Google Sphere" possibly "misrepresent" WGS84? WGS84 is not a projection. It's a datum which Google has assured us is the datum they use when applying their projection technique. The technique is fully specified, it is invertible, and it is convenient for the work they're doing. There is nothing "wrong" with it.

Regards,
— daan Strebe


 


 

-----Original Message-----
From: ndzinn at comcast.net
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Mon, 1 Dec 2008 6:53 am
Subject: Re: [Proj] "Double ellipsoid" case?











Mikael,


 


Thanks for the challenging questions that address the fundamentals of why the Google Sphere is a preposterous misrepresentation of WGS84.  Unfortunately, I have only time for a couple points at the moment (at work), but I hope that others with contribute.


 


First, all local datums (the orientation of an ellipsoid in space and the selection of the ellipsoidal parameters) are developed20as best fits to the local geoid (gravity field).  Technically, best fit is the least-squares minimization of the deflections of the vertical (the differences between the normal to the ellipsoid and the vertical defined by a plumb bob) over the extent of the datum.  So, a datum has a physical constraint, the geoid, which can be measured with simple instruments like a carpenter's level.  WGS84 is a best fit to the geoid worldwide.  How absurd is it, then, to claim that the Google Sphere is WGS84 when it misses the geoid by 20km at the poles?!?  Technically, the deflections squared for the Google Sphere are way larger than for WGS84, as could be demonstrated numerically with EGM96 as a model of geoid, for example.


 


So, that was a physical argument.  My second is conventional.  The WGS84 datum is defined (minimum deflections) with the WGS84 ellipsoid.  The ED50 datum is defined with the International Ellipsoid.  NAD27 (the old US datum) is defined on Clarke 1866.  If I could just switch the WGS84 ellipsoid in the WGS84 datum with the Google Sphere (as you suggest), why couldn't I switch the International Ellipsoid in ED50 with Clarke 1866?  Or any other switch for that matter?  In addition to worse fits mathematically (since the adjustment was done on the defining ellipsoid), we'd open the door to uncertainty and crisis.  You are proposing (and Google has introduced) the geodetic equivalent of sub-prime mortgages in the financial market.  Don't do=2
0it!


 


Thanks for raising the questions.  They need straight answers.


 


Regards,


Noel Zinn





 



----- Original Message -----
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Sent: Monday, December 1, 2008 7:29:22 AM GMT -06:00 US/Canada Central
Subject: RE: [Proj] "Double ellipsoid" case?

Hello Noel, 
Sorry if I am stubborn, but I don't see why so many people think that it is obvious that the datum of 
Google Mercator cannot be WGS84.  For me, it is obvious that the datum _is_ WGS84!  
 
 You wrote:
 
> Datums CANNOT be switched under the projection, the whole issue of this "double ellipsoid" thread.  
 
All right, but I don't see that the datum has been changed during the (Lon,Lat) to (Easting, Northing)
conversion, even if you use Sphere Mercator. 
 
> The Google Sphere is NOT WGS84.  
 
Well, I think that depends on your definition of "is".  Let me give two motivations: 
 
A) One can regard Sphere Mercator as a double projection, somewhat similar to Oblique Stereographic, 
Swiss cylindrical, Krovak, and a few others. 
 
     Usually, a double projection maps a (Lon_e, Lat_e) on the reference ellipsoid conformally 
        to (Lon_s, Lat_s) on a (Gaussian) sphere, which is then mapped conformally to (E, N) on a plane.  
        To get conformality betwe
en the ellipsoid and the sphere, Lat_s is slightly different from Lat_e, and Lon_s is 
     usually slightly different from Lon_e.  
 
     However, for Google Mercator it is quite possible to say that, by definition, Lat_s = Lat_e and Lon_s = Lon_e.
        This defines a mathematical function from the ellipsoid surface to the sphere surface.  This function is 
        continuous and one-to-one, so it is a perfectly good map projection, although it is only approximately conformal.          As the final step, we use spherical Mercator formulas to map (Lon_s, Lat_s) to the plane. 
 
     If we see Google Mercator in this way, the Google Sphere is indeed not WGS84 (because WGS84 defines an ellipsoid),
     but the Sphere is an intermediate step between WGS84 and the plane.   Also, any pair of (Lon,Lat) defines a
        position on both the WGS84 ellipsoid and the Google sphere.  You can regards the (Lon,Lat) as a point on the
        ellipsoid when you do datum conversion later, or you can regard it as a point on the Google sphere when you are
        about to use the Mercator formulas.
 
B)   Alternatively, we could close our eyes hard and say: "there is no sphere in Sphere Mercator".  
        EPSG has (rel
uctantly) defined a map projection method they call 

                "Mercator (1SP) (Spherical)", with coord. op. method code 9841, 

     which is a different method from the two ellipsoidal projections "Mercator (1SP)" with coord. op. code 9804  
     and "Mercator (2SP)" with coord. op. code 9805.
     For the spherical formulas, EPSG just refers to Snyder: "Map Projections: A Working Manual".  
     The trouble is that Snyder's formulas use the parameter R for the spherical radius, and EPSG refuses to 
        say how to get an R out of an ellipsoid (so they cannot allow an ellipsoid datum to be associated with 
        a spherical Mercator).  
     But they _could_ have said: if the datum is ellipsoidal, R should be taken to be the equatorial radius.  
     If they had done so, then "Mercator (1SP) (Spherical)" can be regarded as a mathematical function 
     that maps a point on the reference ellipsoid directly to the plane.  If you see the formulas as a black box,
     you don't have to think of any sphere: it is enough if the formulas define a function that is continuous and 
     invertible. 
 
 
> My objection (well, one of my objections) is the implicit expectation that one can do relative 
> computations (whatever one doe
s on a map) on a spherical Mercator and "the resulting lat/long 
> coordinates are intended to be treated as WGS84 after that" (in Frank's paraphrasing of what  
> the Google Maps model implies).  That's not true.  
 
Oh yes. You _can_ compute on the projected plane, unproject, and treat the result as WGS84 after that.  
The result may not be exactly what you wanted, but it wouldn't be so with an ellipsoid projection, either.  
For example, you wanted to go sqrt(2) * 100 km towards northeast.  All right, if you do so by your two 
methods, you get two different results. If you instead do it by following a geodetic route on the ellipsoid, 
starting towards northeast, and going sqrt(2) * 100 km on the ground, you would get a third result. And if 
you did it by following a rhumb line on the ellipsoid in the same way, you would get a fourth result.  

Computations in the projected plane simply do not agree exactly with ellipsoid distances and angles. 
(Except if you are lucky.) 
 
Best regards,

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
Tel: +46-31-775 57 37
Mob: +46-703-60 34 07
mikael.rittri at carmenta.com
www.carmenta.com 

[I am not not quoting all of Noel Zinn's letter here.] 


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj





 





_______________________________________________
Proj mailing list
Proj at lists.maptools.org

http://lists.maptools.org/mailman/listinfo/proj



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081201/cbecd338/attachment.html>

From ndzinn at comcast.net  Mon Dec  1 13:46:09 2008
From: ndzinn at comcast.net (ndzinn at comcast.net)
Date: Mon, 1 Dec 2008 21:46:09 +0000 (UTC)
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <354239173.1000341228167955953.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
Message-ID: <1405021895.1000361228167969923.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>



daan, 



  

My response to Mikael was from a geodetic perspective.   I hadn't gotten to his cartographic arguments yet.   Maybe tonight or tomorrow.   So, the my main reasoning below has nothing to do with projections.   



  

WGS84 is both an ellipsoid (with defined semi-major and semi-minor axes) and a datum (WGS84 ellipsoid geocentrically fixed, spin axis north, and zero longitude through the BIH Zero Meridian).   Also, WGS84 best fits the geoid.   All this is widely documented.   Now, the Google Sphere is a sphere whose radius is the semi-major (Equatorial) axis of the WGS84 ellipsoid.   If we fix the Google Sphere to the Earth as we did the WGS84 ellipsoid (geocentric, spin axis north, and zero longitude through the BIH Zero Meridian), then the north pole on the surface of the Google Sphere will be 20km north of the North Pole on the surface of the Earth.   To get that number subtract the semi-minor (spin) axis from the semi-major axis of the WGS84 ellipsoid.   I conclude, therefore, that the use of the Google Sphere has nothing to do with the WGS84 datum and shouldn't be called that.   It doesn't fit the geoid, which is part of the definition of the WGS84 datum.   End of geodetic argument. 



  

There's more to be said cartographically (like any projection that is tangent to the Google Sphere misses the geoid everywhere but the Equator), but perhaps this is enough for now.   



  

Regards, 

Noel Zinn 




----- Original Message ----- 
From: strebe at aol.com 
To: proj at lists.maptools.org 
Sent: Monday, December 1, 2008 2:28:29 PM GMT -06:00 US/Canada Central 
Subject: [Proj] Re: "Double ellipsoid" case? 



Noel: 

I cannot fully understand what it is you have done to deduce that the "Google Sphere" misses "the geoid by 20km at the poles". It's impossible for a projection to miss the geoid. The projection is a development of the datum. You cannot make plane measurements on one projection (Google Sphere on WGS84), treat those results as if you had used a different projection (UTM on WGS84), de-project your results (inverse UTM on WGS84) onto the ellipsoid (WGS84), and then claim that the projection misses the geoid. 

How can "Google Sphere" possibly "misrepresent" WGS84? WGS84 is not a projection. It's a datum which Google has assured us is the datum they use when applying their projection technique. The technique is fully specified, it is invertible, and it is convenient for the work they're doing. There is nothing "wrong" with it. 

Regards, 
— daan Strebe 




-----Original Message----- 
From: ndzinn at comcast.net 
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org> 
Sent: Mon, 1 Dec 2008 6:53 am 
Subject: Re: [Proj] "Double ellipsoid" case? 




Mikael, < div class="MsoNormal" style="margin: 0in 0in 0pt;">   
Thanks for the challenging questions that address the fundamentals of why the Google Sphere is a preposterous misrepresentation of WGS84.   Unfortunately, I have only time for a couple points at the moment (at work), but I hope that others with contribute. 

First, all local datums (the orientation of an ellipsoid in space and the selection of the ellipsoidal parameters) are developed as best fits to the local geoid (gravity field).   Technically, best fit is the least-squares minimization of the deflections of the vertical (the differences between the normal to the ellipsoid and the vertical defined by a plumb bob) over the extent of the datum.   So, a datum has a physical constraint, the geoid, which can be measured with simple instruments like a carpenter's level.   WGS84 is a best fit to the geoid worldwide.   How absurd is it, then, to claim that the Google Sphere is WGS84 when it misses the geoid by 20km at the poles?!?   Technically, the deflections squared for the Google Sphere are way larger than for WGS84, as coul d be demonstrated numerically with EGM96 as a model of geoid, for example. 

So, that was a physical argument.   My second is conventional.   The WGS84 datum is defined (minimum deflections) with the WGS84 ellipsoid.   The ED50 datum is defined with the International Ellipsoid.   NAD27 (the old US datum) is defined on Clarke 1866.   If I could just switch the WGS84 ellipsoid in the WGS84 datum with the Google Sphere (as you suggest), why couldn't I switch the International Ellipsoid in ED50 with Clarke 1866?   Or any other switch for that matter?   In addition to worse fits mathematically (since the adjustment was done on the defining ellipsoid), we'd open the door to uncertainty and crisis.   You are proposing (and Google has introduced) the geodetic equivalent of sub-prime mortgages in the financial market.   Don't do it! 

Thanks for raising the questions.   They need straight answers. 

Regards, 
Noel Zinn 



----- Original Message ----- 
From: "Mikael Rittri" < Mikael.Rittri at carmenta.com > 
To: "PROJ.4 and general Projections Discussions" < proj at lists.maptools.org > 
Sent: Monday, December 1, 2008 7:29:22 AM GMT -06:00 US/Canada Central 
Subject: RE: [Proj] "Double ellipsoid" case? 

Hello Noel, 
Sorry if I am stubborn, but I don't see why so many people think that it is obvious that the datum of 
Google Mercator cannot be WGS84.  For me, it is obvious that the datum _is_ WGS84!   
  
 You wrote: 
  
> Datums CANNOT be switched under the projection, the whole issue of this "double ellipsoid" thread.   
  
All right, but I don't see that the datum has been changed during the (Lon,Lat) to (Easting, Northing) 
conversion, even if you use Sphere Mercator. 
  
> The Google Sphere is NOT WGS84.   
  
Well, I think that depends on your definition of "is".  Let me give two motivations: 
  
A) One can regard Sphere Mercator as a double projection, somewhat similar to Oblique Stereographic, 
Swiss cylindrical, Krovak, and a few others . 
  
     Usually, a double projection maps a (Lon_e, Lat_e) on the reference ellipsoid conformally 
        to (Lon_s, Lat_s) on a (Gaussian) sphere, which is then mapped conformally to (E, N) on a plane.   
        To get conformality between the ellipsoid and the sphere, Lat_s is slightly different from Lat_e, and Lon_s is 
     usually slightly different from Lon_e.   
  
     However, for Google Mercator it is quite possible to say that, by definition, Lat_s = Lat_e and Lon_s = Lon_e. 
        This defines a mathematical function from the ellipsoid surface to the sphere surface.  This function is 
        continuous and one-to-one, so it is a perfectly good map projection, although it is only approximately conformal.          As the final step, we use spherical Mercator formulas to map (Lon_s, Lat_s) to the plane. 
  
     If we see Google Mercator in this way, the Google Sphere is indeed not WGS84 (because WGS84 defines an ellipsoid), 
     but the Sphere is an intermediate step between WGS84 and the plane.   Also, any pair of (Lon,Lat) defines a 
        position on both the WGS84 ellipsoid and the Google sphere.  You can regards the (Lon,Lat) as a point on the 
      &nb sp; ellipsoid when you do datum conversion later, or you can regard it as a point on the Google sphere when you are 
        about to use the Mercator formulas. 
  
B)   Alternatively, we could close our eyes hard and say: "there is no sphere in Sphere Mercator".   
        EPSG has (reluctantly) defined a map projection method they call 

                "Mercator (1SP) (Spherical)", with coord. op. method code 9841, 

     which is a different method from the two ellipsoidal projections "Mercator (1SP)" with coord. op. code 9804   
     and "Mercator (2SP)" with coord. op. code 9805. 
     For the spherical formulas, EPSG just refers to Snyder: "Map Projections: A Working Manual".   
     The trouble is that Snyder's formulas use the parameter R for the spherical radius, and EPSG refuses to 
        say how to get an R out of an ellipsoid (so they cannot allow an ellipsoid datum to be associated with 
        a spherical Mercator).   
     But they _could_ have said: if the datum is ellipsoidal, R should be taken to be the equatorial radius.   
     If they had done so, then "Mercator (1SP) (Spherical)" can be regarded as a mathematical function 
     that maps a p oint on the reference ellipsoid directly to the plane.  If you see the formulas as a black box, 
     you don't have to think of any sphere: it is enough if the formulas define a function that is continuous and 
     invertible. 
  
  
> My objection (well, one of my objections) is the implicit expectation that one can do relative 
> computations (whatever one does on a map) on a spherical Mercator and "the resulting lat/long 
> coordinates are intended to be treated as WGS84 after that" (in Frank's paraphrasing of what   
> the Google Maps model implies).  That's not true.   
  
Oh yes. You _can_ compute on the projected plane, unproject, and treat the result as WGS84 after that.   
The result may not be exactly what you wanted, but it wouldn't be so with an ellipsoid projection, either.   
For example, you wanted to go sqrt(2) * 100 km towards northeast.  All right, if you do so by your two 
methods, you get two different results. If you instead do it by following a geodetic route on the ellipsoid, 
starting towards northeast, and going sqrt(2) * 100 km on the ground, you would get a third result. And if 
you did it by following a rhumb line on the ellipsoid in the same way, you would get a fourth result.   

Computations in the projected plane simply do not agree exactly with ellipsoid distances and angles. 
(Except if you are lucky.) 
  
Best regards, 

-- 
Mikael Rittri 
Carmenta AB 
Box 11354 
SE-404 28 Göteborg 
Visitors: Sankt Eriksgatan 5 
SWEDEN 
Tel: +46-31-775 57 37 
Mob: +46-703-60 34 07 
mikael.rittri at carmenta.com 
www.carmenta.com 

[I am not not quoting all of Noel Zinn's letter here.] 


_______________________________________________ 
Proj mailing list 
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj 



_______________________________________________ 
Proj mailing list 
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj 



Tis the season to save your money! Get the new AOL Holiday Toolbar for money saving offers and gift ideas. 
_______________________________________________ Proj mailing list Proj at lists.maptools.org http://lists.maptools.org/mailman/listinfo/proj 
_______________________________________________ Proj mailing list Proj at lists.maptools.org http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081201/c1757bc1/attachment.html>

From cjmce at lsu.edu  Mon Dec  1 14:58:16 2008
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Mon, 1 Dec 2008 16:58:16 -0600
Subject: [Proj] Re: "Double ellipsoid" case?
References: <1405021895.1000361228167969923.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7EC253F@email002.lsu.edu>

daan,
 
Actually Noel was just giving an approximate ... more precisely it misses it by 21.4 km at the poles.  (Check out "a" versus "b" on the GRS80.)
 
On the whole, I'll have to agree with Noel 100% in his explanations, and I expect his cartographic arguments to be in the same level of agreement with me.
 
Calling a spherical kluge a datum is absolutely wrong.  No amount of argument is going to change scientific fact.
 
Using equivalent spheres in 19th and early 20th century cartography was an attempt to simplify ellipsoidal computations for individual countries.  The dingbats at Google Earth obviously knew nothing about cartography muchless geodesy when they cooked up their kluge of a spherical earth.  
 
A programmer with a mouse and satellite/aerial photogrammetric imagery does not a cartographer make muchless a geodesist or a photogrammetrist.
 
I'd say the horse has been dead for at least a week ... gonna beat it some more?
 
Clifford J. Mugnier, C.P., C.M.S.
Past National Director (2006-2008),
Photogrammetric Applications Division
American Society for Photogrammetry and Remote Sensing 
and 
Chief of Geodesy,
CENTER FOR GEOINFORMATICS 
Department of Civil Engineering 
Patrick F. Taylor Hall 3223A
LOUISIANA STATE UNIVERSITY 
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536 [Academic] 
Voice and Facsimile:  (225) 578-4474 [Research] 
Honorary Life Member of the 
Louisiana Society of Professional Surveyors 
Member Emeritus of the ASPRS 
Member of the Americas Petroleum Survey Group
======================================================
http://www.asprs.org/resources/GRIDS/
======================================================
 
 

________________________________

From: proj-bounces at lists.maptools.org on behalf of ndzinn at comcast.net
Sent: Mon 01-Dec-08 15:46
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Re: "Double ellipsoid" case?



daan,

 

My response to Mikael was from a geodetic perspective.  I hadn't gotten to his cartographic arguments yet.  Maybe tonight or tomorrow.  So, the my main reasoning below has nothing to do with projections.  

 

WGS84 is both an ellipsoid (with defined semi-major and semi-minor axes) and a datum (WGS84 ellipsoid geocentrically fixed, spin axis north, and zero longitude through the BIH Zero Meridian).  Also, WGS84 best fits the geoid.  All this is widely documented.  Now, the Google Sphere is a sphere whose radius is the semi-major (Equatorial) axis of the WGS84 ellipsoid.  If we fix the Google Sphere to the Earth as we did the WGS84 ellipsoid (geocentric, spin axis north, and zero longitude through the BIH Zero Meridian), then the north pole on the surface of the Google Sphere will be 20km north of the North Pole on the surface of the Earth.  To get that number subtract the semi-minor (spin) axis from the semi-major axis of the WGS84 ellipsoid.  I conclude, therefore, that the use of the Google Sphere has nothing to do with the WGS84 datum and shouldn't be called that.  It doesn't fit the geoid, which is part of the definition of the WGS84 datum.  End of geodetic argument.

 

There's more to be said cartographically (like any projection that is tangent to the Google Sphere misses the geoid everywhere but the Equator), but perhaps this is enough for now.  

 

Regards,

Noel Zinn


----- Original Message -----
From: strebe at aol.com
To: proj at lists.maptools.org
Sent: Monday, December 1, 2008 2:28:29 PM GMT -06:00 US/Canada Central
Subject: [Proj] Re: "Double ellipsoid" case?




Noel:

I cannot fully understand what it is you have done to deduce that the "Google Sphere" misses "the geoid by 20km at the poles". It's impossible for a projection to miss the geoid. The projection is a development of the datum. You cannot make plane measurements on one projection (Google Sphere on WGS84), treat those results as if you had used a different projection (UTM on WGS84), de-project your results (inverse UTM on WGS84) onto the ellipsoid (WGS84), and then claim that the projection misses the geoid.

How can "Google Sphere" possibly "misrepresent" WGS84? WGS84 is not a projection. It's a datum which Google has assured us is the datum they use when applying their projection technique. The technique is fully specified, it is invertible, and it is convenient for the work they're doing. There is nothing "wrong" with it.

Regards,
- daan Strebe



-----Original Message-----
From: ndzinn at comcast.net
To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>
Sent: Mon, 1 Dec 2008 6:53 am
Subject: Re: [Proj] "Double ellipsoid" case?


Mikael,
< div class="MsoNormal" style="margin: 0in 0in 0pt;"> 
Thanks for the challenging questions that address the fundamentals of why the Google Sphere is a preposterous misrepresentation of WGS84.  Unfortunately, I have only time for a couple points at the moment (at work), but I hope that others with contribute.
 
First, all local datums (the orientation of an ellipsoid in space and the selection of the ellipsoidal parameters) are developed as best fits to the local geoid (gravity field).  Technically, best fit is the least-squares minimization of the deflections of the vertical (the differences between the normal to the ellipsoid and the vertical defined by a plumb bob) over the extent of the datum.  So, a datum has a physical constraint, the geoid, which can be measured with simple instruments like a carpenter's level.  WGS84 is a best fit to the geoid worldwide.  How absurd is it, then, to claim that the Google Sphere is WGS84 when it misses the geoid by 20km at the poles?!?  Technically, the deflections squared for the Google Sphere are way larger than for WGS84, as coul d be demonstrated numerically with EGM96 as a model of geoid, for example.
 
So, that was a physical argument.  My second is conventional.  The WGS84 datum is defined (minimum deflections) with the WGS84 ellipsoid.  The ED50 datum is defined with the International Ellipsoid.  NAD27 (the old US datum) is defined on Clarke 1866.  If I could just switch the WGS84 ellipsoid in the WGS84 datum with the Google Sphere (as you suggest), why couldn't I switch the International Ellipsoid in ED50 with Clarke 1866?  Or any other switch for that matter?  In addition to worse fits mathematically (since the adjustment was done on the defining ellipsoid), we'd open the door to uncertainty and crisis.  You are proposing (and Google has introduced) the geodetic equivalent of sub-prime mortgages in the financial market.  Don't do it!
 
Thanks for raising the questions.  They need straight answers.
 
Regards,
Noel Zinn
 

----- Original Message -----
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Sent: Monday, December 1, 2008 7:29:22 AM GMT -06:00 US/Canada Central
Subject: RE: [Proj] "Double ellipsoid" case?

Hello Noel, 
Sorry if I am stubborn, but I don't see why so many people think that it is obvious that the datum of 
Google Mercator cannot be WGS84.  For me, it is obvious that the datum _is_ WGS84!  
 
 You wrote:
 
> Datums CANNOT be switched under the projection, the whole issue of this "double ellipsoid" thread.  
 
All right, but I don't see that the datum has been changed during the (Lon,Lat) to (Easting, Northing)
conversion, even if you use Sphere Mercator. 
 
> The Google Sphere is NOT WGS84.  
 
Well, I think that depends on your definition of "is".  Let me give two motivations: 
 
A) One can regard Sphere Mercator as a double projection, somewhat similar to Oblique Stereographic, 
Swiss cylindrical, Krovak, and a few others . 
 
     Usually, a double projection maps a (Lon_e, Lat_e) on the reference ellipsoid conformally 
        to (Lon_s, Lat_s) on a (Gaussian) sphere, which is then mapped conformally to (E, N) on a plane.  
        To get conformality between the ellipsoid and the sphere, Lat_s is slightly different from Lat_e, and Lon_s is 
     usually slightly different from Lon_e.  
 
     However, for Google Mercator it is quite possible to say that, by definition, Lat_s = Lat_e and Lon_s = Lon_e.
        This defines a mathematical function from the ellipsoid surface to the sphere surface.  This function is 
        continuous and one-to-one, so it is a perfectly good map projection, although it is only approximately conformal.          As the final step, we use spherical Mercator formulas to map (Lon_s, Lat_s) to the plane. 
 
     If we see Google Mercator in this way, the Google Sphere is indeed not WGS84 (because WGS84 defines an ellipsoid),
     but the Sphere is an intermediate step between WGS84 and the plane.   Also, any pair of (Lon,Lat) defines a
        position on both the WGS84 ellipsoid and the Google sphere.  You can regards the (Lon,Lat) as a point on the
      &nb sp; ellipsoid when you do datum conversion later, or you can regard it as a point on the Google sphere when you are
        about to use the Mercator formulas.
 
B)   Alternatively, we could close our eyes hard and say: "there is no sphere in Sphere Mercator".  
        EPSG has (reluctantly) defined a map projection method they call 

                "Mercator (1SP) (Spherical)", with coord. op. method code 9841, 

     which is a different method from the two ellipsoidal projections "Mercator (1SP)" with coord. op. code 9804  
     and "Mercator (2SP)" with coord. op. code 9805.
     For the spherical formulas, EPSG just refers to Snyder: "Map Projections: A Working Manual".  
     The trouble is that Snyder's formulas use the parameter R for the spherical radius, and EPSG refuses to 
        say how to get an R out of an ellipsoid (so they cannot allow an ellipsoid datum to be associated with 
        a spherical Mercator).  
     But they _could_ have said: if the datum is ellipsoidal, R should be taken to be the equatorial radius.  
     If they had done so, then "Mercator (1SP) (Spherical)" can be regarded as a mathematical function 
     that maps a p oint on the reference ellipsoid directly to the plane.  If you see the formulas as a black box,
     you don't have to think of any sphere: it is enough if the formulas define a function that is continuous and 
     invertible. 
 
 
> My objection (well, one of my objections) is the implicit expectation that one can do relative 
> computations (whatever one does on a map) on a spherical Mercator and "the resulting lat/long 
> coordinates are intended to be treated as WGS84 after that" (in Frank's paraphrasing of what  
> the Google Maps model implies).  That's not true.  
 
Oh yes. You _can_ compute on the projected plane, unproject, and treat the result as WGS84 after that.  
The result may not be exactly what you wanted, but it wouldn't be so with an ellipsoid projection, either.  
For example, you wanted to go sqrt(2) * 100 km towards northeast.  All right, if you do so by your two 
methods, you get two different results. If you instead do it by following a geodetic route on the ellipsoid, 
starting towards northeast, and going sqrt(2) * 100 km on the ground, you would get a third result. And if 
you did it by following a rhumb line on the ellipsoid in the same way, you would get a fourth result.  

Computations in the projected plane simply do not agree exactly with ellipsoid distances and angles. 
(Except if you are lucky.) 
  
Best regards,

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
Tel: +46-31-775 57 37
Mob: +46-703-60 34 07
mikael.rittri at carmenta.com
www.carmenta.com <http://www.carmenta.com/>  

[I am not not quoting all of Noel Zinn's letter here.] 


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

_______________________________________________

Proj mailing list

Proj at lists.maptools.org

http://lists.maptools.org/mailman/listinfo/proj



________________________________

Tis the season to save your money! Get the new AOL Holiday Toolbar <http://toolbar.aol.com/holiday/download.html?ncid=emlweusdown00000008>  for money saving offers and gift ideas. 

_______________________________________________ Proj mailing list Proj at lists.maptools.org http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081201/87e5aa02/attachment.html>

From strebe at aol.com  Mon Dec  1 17:54:00 2008
From: strebe at aol.com (strebe at aol.com)
Date: Mon, 01 Dec 2008 20:54:00 -0500
Subject: [Proj] Re: "Double ellipsoid" case?
Message-ID: <8CB2237FAF914F4-AF0-B33@webmail-stg-d02.sysops.aol.com>



 [With apologies to the moderator for the long thread history I did not chop off on my first quarantined attempt.]



Noel:





Thank you for the explanation; I think understand much better now what
you mean, in which case I still conclude that Mikael's arguments are
all spot-on. I'm still a little confused about part of what you're
saying and why you're saying it. Depending up on who means what when
they're saying it in this discussion, "Google Sphere" seems to refer to either of the projection (or some part of it) or to an
"ellipsoid".





If an ellipsoid, then to say the "Google Sphere is not WGS84" is to
state the obvious. It is hard to imagine that is what you mean, except
that you have proceeded to demonstrate how far off the geoid the Google
Sphere is. Certainly no one is saying that the Google Sphere is
equivalent to the WGS84 ellipsoid.





If, on the other hand, I interpret your usage of "Google Sphere" to mean the projection scheme, then I would interpret "Google
Sphere is not WGS84" to mean that the projection system is not based on
the WGS84 datum. That is false. Google requires that the datum for
geodetic coordinates supplied to Google Maps be WGS84. If you try to
use coordinates defined by some other datum, then you will not have a
georeferenced map.





If, on yet someone else's hand, I interpret your usage of "Google Sphere" to mean the ellipsoid of the projection, then I would interpret "Google Sphere is not WGS84" to mean that=2
0the projection is not developed from the WGS84 ellipsoid. That is true. The
purpose of the Google Sphere in their projection scheme is to anchor
the nominal scale of the map. That's all. Its relation to the WGS84
ellipsoid is that it takes its radius to be the WGS84 semimajor axis.
There is no particular reason NOT to have chosen their radius that way.
It certainly seems like nothing to get excited about.





I can't find anything reasonable in all the invective directed toward
the Google Maps projection in this thread. It's a projection. It's
well-defined. It works for their purposes. That's what projections are
for: to work for the purpose. No, it's not conformal. No, it's not some
other projection that some people expect or might want to see. But
neither is it unreasonable, preposterous, or misleading. Indeed,
small-scale maps on the Mercator projection have always been
constructed this way, since small-scale projections are spherically
based even though survey data based on a sphere does not exist. The
only (debatably) controversial aspect of Google's deployment is not to
have used an ellipsoidal development despite dealing with large-scale
data. The practical consequence is that they do not have a conformal
projection; hence local distances measured from a point are not quite
uniform in all directions, and neither are azimuths quite equally
spaced radially from that point. So?





Let us keep the terminology distinct. If we talk about the Google Maps
projection, then let us call it that. The Google
 Sphere (to use the term coined on this thread, as far as I can tell) is the
ellipsoid for that projection. WGS84 is the datum for the geodetic
coordinates for that projection.

Having said all this, and returning to the thread's subject, we're not dealing with a double ellipsoid case in any real sense. There is only one "ellipsoid" involved on the projection side, and that is the "Google Sphere".





Regards,


— daan Strebe












daan,






 






My response to Mikael was from a geodetic perspective.  I hadn't gotten to his cartographic arguments yet.  Maybe tonight or tomorrow.  So, the my main reasoning below has nothing to do with projections.  






 






WGS84
is both an ellipsoid (with defined semi-major and semi-minor axes) and
a datum (WGS84 ellipsoid geocentrically fixed, spin axis north, and
zero longitude through the BIH Zero Meridian).  Also, WGS84 best fits the geoid.  All this is widely documented.  Now, the20Google Sphere is a sphere whose radius is the semi-major (Equatorial) axis of the WGS84 ellipsoid.  If
we fix the Google Sphere to the Earth as we did the WGS84 ellipsoid
(geocentric, spin axis north, and zero longitude through the BIH Zero
Meridian), then the north pole on the surface of the Google Sphere will
be 20km north of the North Pole on the surface of the Earth.  To get that number subtract the semi-minor (spin) axis from the semi-major axis of the WGS84 el
lipsoid.  I conclude, therefore, that the use of the Google Sphere has nothing to do with the WGS84 datum and shouldn't be called that.  It doesn't fit the geoid, which is part of the definition of the WGS84 datum.  End of geodetic argument.






 






There's
more to be said cartographically (like any projection that is tangent
to the Google Sphere misses the geoid everywhere but the Equator), but
perhaps this is enough for now.  






 






Regards,






Noel Zi
nn














 








 








 





-----Original Message-----


From: ndzinn at comcast.net


To: PROJ.4 and general Projections Discussions <proj at lists.maptools.org>


Sent: Mon, 1 Dec 2008 1:46 pm


Subject: Re: [Proj] Re: "Double ellipsoid" case?





















daan,






 






My response to Mikael was from a geodetic perspective.  I hadn't gotten to his cartographic arguments yet.  Maybe tonight or tomorrow.  So, the my main reasoning below has nothing to do with projections.  






 






WGS84
is both an ellipsoid (with defined semi-major and semi-minor axes) and
a datum (WGS84 ellipsoid geocentrically fixed, spin axis north, and
zero longitude through the BIH Zero Meridian).  Also, WGS84 best fits the
 geoid.  All this is widely documented.  Now, the Google Sphere is a sphere whose radius is the semi-major (Equatorial) 
axis of the WGS84 ellipsoid.  If
we fix the Google Sphere to the Earth as we did the WGS84 ellipsoid
(geocentric, spin axis north, and zero longitude through the BIH Zero
Meridian), then the north pole on the surface of the Google Sphere will
be 20km north of the North Pole on the surface of the Earth.  To get that number subtract the semi-minor (spin) axis from the semi-major axis of the WGS84 ellipsoid.  I conclude, therefore, that the use of the Google Sphere has nothing to do with the WGS84 datum and shouldn't be called that.  It doesn't fit the geoid, which is part of the definition of the WGS84 datum.  End of geodetic argument.






 






There's
more to be said cartographically (like any projection that is tangent
to the Google Sphere misses the geoid everywhere but the Equator), but
perhaps this is enough for now.  






 






Regards,






Noel Zinn
















----- Original Message -----


From: strebe at aol.com


To: proj at lists.maptools.org


Sent: Monday, December 1, 2008 2:28:29 PM GMT -06:00 US/Canada Central


Subject: [Proj] Re: "Double ellipsoid" case?

















Noel:





I cannot fully understand what it is you have done to deduce that the
"Google Sphere" misses "the geoid by 20km at the poles". It's
impossible for a projection to miss the geoid. The projection is a
development of the datum. You cannot make plane measurements on one
projection=2
0(Google Sphere on WGS84), treat those results as if you had
used a different projection (UTM on WGS84), de-project your results
(inverse UTM on WGS84) onto the ellipsoid (WGS84), and then claim that
the projection misses the geoid.





How can "Google Sphere" possibly "misrepresent" WGS84? WGS84 is not a
projection. It's a datum which Google has assured us is the datum they
use when applying their projection technique. The technique is fully
specified, it is invertible, and it is convenient for the work they're
doing. There is nothing "wrong" with it.





Regards,


— daan Strebe

























-----Original Message-----


From: ndzinn at comcast.net


To: PROJ.4 and genera
l Projections Discussions <proj at lists.maptools.org>


Sent: Mon, 1 Dec 2008 6:53 am


Subject: Re: [Proj] "Double ellipsoid" case?



















Mikael,


< div class="MsoNormal" style="margin: 0in 0in 0pt;"> 






Thanks
for the challenging questions that address the fundamentals of why the
Google Sphere is a preposterous misrepresentation of WGS84.  Unfortunately, I have only time for a couple points at the moment (at work), but I hope that others with contribute.






 






First,
all local datums (the orientation of an ellipsoid in space and the
selection of the ellipsoidal parameters) are developed as best fits to
the local geoid (gravity field).  Technically, best fit is
the least-squares minimization of the defle
ctions of the vertical (the
differences between the normal to the ellipsoid and the vertical
defined by a plumb bob) over the e
xtent of the datum.  So, a datum has a physical constraint, the geoid, which can be measured with simple instruments like a carpenter's level.  WGS84 is a best fit to the geoid worldwide.  How absurd is it, then, to claim that the Google Sphere is WGS84 when it misses the geoid by 20km at the poles?!?  Technically,
the deflections squared for the Google Sphere are way larger than for
WGS84, as coul d be demonstrated numerically with EGM96 as a model of
geoid, for example.






 






So, that was a physical argument.  My second is conventional.  The WGS84 datum is defined (minimum deflections) with the WGS84 ellipsoid.  The ED50 datum is defined with the International Ellipsoid.  NAD27 (the old US datum) is defined on Clarke 1866.  If
I could just switch the WGS84 ellipsoid in the WGS84 datum with the
Google Sphere (as you suggest), why couldn't I switch the International
Ellipsoid in ED50 with Clarke 1866?  Or any other switch for that matter?  In
addition to worse fits mathematically (since the adjustment was done on
the defining ellipsoid), we'd open the door to uncertainty and crisis.  You are proposing (and Google has introduced) the geodetic equivalent of sub-prime mort
gages in the financial market.  Don't do it!






 






Thanks for raising the questions.  They need straight a
nswers.






 






Regards,






Noel Zinn









 







-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081201/4749bb12/attachment.html>

From richard.greenwood at gmail.com  Mon Dec  1 19:17:44 2008
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Mon, 1 Dec 2008 20:17:44 -0700
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <B597ADFC46B67741B18EA6AA13613FF7EC253F@email002.lsu.edu>
References: <1405021895.1000361228167969923.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
	<B597ADFC46B67741B18EA6AA13613FF7EC253F@email002.lsu.edu>
Message-ID: <ae9185aa0812011917q47ede881sd93b4b980a07d3e5@mail.gmail.com>

On Mon, Dec 1, 2008 at 3:58 PM, Clifford J Mugnier <cjmce at lsu.edu> wrote:

> I'd say the horse has been dead for at least a week ... gonna beat it some
> more?

I for one, am finding this an interesting, and pertinent thread. Let's
not quash it, and let's keep it civil.

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From ndzinn at comcast.net  Tue Dec  2 07:31:14 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Tue, 2 Dec 2008 09:31:14 -0600
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <8CB2237FAF914F4-AF0-B33@webmail-stg-d02.sysops.aol.com>
References: <8CB2237FAF914F4-AF0-B33@webmail-stg-d02.sysops.aol.com>
Message-ID: <C9B5447C410D419FBD009F587D64A6A4@PowerSpec>

daan, Mikael, Cliff, and others,

 

Thanks for your persistence.  Indeed, clarifying our terminology will help.
For me the Google Sphere (GS) is simply an ellipsoid with an eccentricity
squared of zero and semi-major axis (a) equal to the semi-major axis of the
WGS84 ellipsoid.  In this case the semi-minor axis (b) equals the semi-major
axis.  

 

Now, the Google Sphere can have both geodetic and cartographic applications.
That distinction is admittedly confusing in this thread.  I react viscerally
to the introduction of the GS into the WGS84 datum as a geodetic
abomination.  You and Mikael see the GS as merely an intermediate stage in a
total projection method (which is non-conformal and, therefore, not the
Mercator projection, and about which you are both defensive).  Cliff sees
the GS as both bad geodesy and as bad cartography.  Frankly, I agree with
Cliff.  I also accept Richard's admonition to keep it civil.

 

So, before moving on to the cartography, I'll briefly recap my geodetic
objections.  My physical geodesy argument is that since WGS84 is a best fit
to the geoid and since the Google Sphere is a terrible fit to the geoid no
matter how you orientate it, using the Google Sphere obviates reference to
the WGS84 datum (in my opinion).  

 

My geometric geodesy argument would be that geodesic direct and inverse
computations would get different results on the WGS84 ellipsoid and the GS
no matter how you map the WGS84 graticule onto the GS graticule.  This is an
indictment of the use of the GS, since WGS84 computations better represent
physical reality.  No one has suggested geodesic computations on the GS in
this thread, but the implicit association of the GS with WGS84 by Google
regrettably risks that abuse.

 

My appeals to conventional practice are even more compelling in my view,
though you may disagree.  For example, ED50 geodesic direct and inverse
computations and ED50 map projections are computed _only_ on the
International ellipsoid.  Why?  Computation on the ellipsoid of a datum's
least-squares adjustment provides (by definition) the best conformation with
physical reality and the convention of doing so protects us from ignorant
mistakes.  We all (I believe) follow this practice everywhere in the world
(except in our use of Google Maps).  The risk to conventional practice
introduced by Google is not progress.

 

Now, on to the cartography.  Having reread Mikael's postings I appreciate
(and accept) his and daan's perspective that this is a cartographic - and
not a geodetic - issue.  The WGS84 datum can underlie this (unfortunate)
two-stage projection used by Google Maps (Mikael's alternative A).
Regarding Mikael's alternative B, I'll have to study the EPSG Mercator
methods first before commenting.  And regarding daan's interpretation that
only one "ellipsoid" involved on the projection side, and that is the
"Google Sphere", I don't see it yet.  I stated previously that the spherical
Mercator projection is intuitively conformal.  The ellipsoidal Mercator is
conformal over a range of eccentricity squared values and there is no reason
that that range shouldn't include zero (the sphere) while maintaining
conformality.  But first there is the non-conformal mapping from the WGS84
ellipsoid to the Google Sphere before the Mercator equations are applied.
So, one thing is certain (and has already been stated in this thread), and
that is that the Google Maps projection cannot be called the Mercator.  It's
something else.  Mikael quantified the maximum angular distortion as 0.2
degrees.  At this point I'll have to agree with Cliff that this is
retrograde cartography.  Quoting Cliff, "using equivalent spheres in 19th
and early 20th century cartography was an attempt to simplify ellipsoidal
computations" and quoting Mikael, "the situation is similar to the French
truncated Lambert Conformal Conic, which is not exactly conformal, and is a
different projection than the true Lambert Conformal Conic".  My question
is, Why are we doing this in the 21st century?!?  This is retrograde
cartography even if (no, especially if) the explanation is computational
efficiency (in light of the "clouds" of computers maintained by Google).
Google had an opportunity to expose a wide audience to good geodetic and
cartographic practice, but instead Google is exposing that audience to
malpractice (in my opinion).  Yes, this is a judgment. And daan will respond
that it works for their purposes.  I'm not so sure.  Google Maps is being
used for lots of creative purposes encouraged by Google.  I believe that
some user will stumble due to the poor choices made by Google.  Perhaps that
can be documented in another thread.  

 

Regards and thanks for the great discussion,

Noel Zinn

 

 

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081202/a92bea1a/attachment.html>

From Mikael.Rittri at carmenta.com  Tue Dec  2 08:13:22 2008
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 2 Dec 2008 17:13:22 +0100
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <ae9185aa0812011917q47ede881sd93b4b980a07d3e5@mail.gmail.com>
References: <1405021895.1000361228167969923.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net><B597ADFC46B67741B18EA6AA13613FF7EC253F@email002.lsu.edu>
	<ae9185aa0812011917q47ede881sd93b4b980a07d3e5@mail.gmail.com>
Message-ID: <FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se>

Richard Greenwood wrote:

> I for one, am finding this an interesting, and pertinent thread. 
> Let's not quash it, and let's keep it civil.

Thanks, Richard. 

I thought daan explained the matter clearly, and I have not much to add.   

daan Strebe wrote:
> The practical consequence is that they do not have a conformal projection; 
> hence local distances measured from a point are not quite uniform in all 
> directions, and neither are azimuths quite equally spaced radially from 
> that point. So?

I would add that these deviations from conformality of course can be 
quantified and bounded.  For example, I wrote that "I think the maximal 
angle distortion for Sphere Mercator is 0.2 degrees".  This was wrong; 
I was thinking of the maximal azimuth error, and the maximal angle 
distortion is twice that, so make it 0.4 degrees.  

It is not surgical precision, and it is 16th century technology, 
but I wouldn't say that a 0.4 degree error is "absurd".
(Well, unless my application required exact conformality for some reason.) 
The benefit is simpler formulas and faster execution times.  

Noel Zinn wrote:
> If I could just switch the WGS84 ellipsoid in the WGS84 datum with 
> the Google Sphere (as you suggest), why couldn't I switch 
> the International Ellipsoid in ED50 with Clarke 1866?  Or any other 
> switch for that matter?  

Let's see if I understand you correctly. You are asking: if I have data 
in the datum ED50, why can't I define a projection which, by definition, 
treats (Lon,Lat) from ED50 as if it were (Lon,Lat) on the Clarke 1866 
ellipsoid?

Well, I am forced to say that this is quite possible. The mathematics works,
and it is not illegal.  Again, the result would be a map that is not exactly
conformal, relative to the shape of ED50.  Because this naive mapping 
from (Lon,Lat) on the International Ellipsoid to (Lon,Lat) on the Clarke 1866 
ellipsoid - without changing the numerical values - is not conformal. 
At least, I don't think so. 

But I am just saying that it is possible. I think it would be silly 
and meaningless, because I would give up the exact conformality 
(relative to the shape of ED50) in return for nothing.  I would not 
get the benefit of simpler formulas or faster execution times, 
since I would have to use ellipsoid formulas to go from Clarke 1866 
to the plane.  

Noel: 
> In addition to worse fits mathematically 
> (since the adjustment was done on the defining ellipsoid), 

Yes, spherical formulas give worse maps for large scale maps. 
But I would say, only slightly worse. Not absurdly worse. 

> we'd open the door to uncertainty and crisis. 
> You are proposing (and Google has introduced) the geodetic 
> equivalent of sub-prime mortgages in the financial market.  
> Don't do it!

Well, we are talking about a maximal 0.4 degree error for angles, 
and a variation of the local scale in different direction 
through a point, which would be at most 0.5 percent, I think.  

If economists could do predictions with 0.5 percent accuracy, 
the world economy would be in a better state! 

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
Tel: +46-31-775 57 37
Mob: +46-703-60 34 07 
mikael.rittri at carmenta.com
www.carmenta.com



From dagnew at ucsd.edu  Tue Dec  2 09:38:47 2008
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Tue, 2 Dec 2008 09:38:47 -0800
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <C9B5447C410D419FBD009F587D64A6A4@PowerSpec>
References: <8CB2237FAF914F4-AF0-B33@webmail-stg-d02.sysops.aol.com>
	<C9B5447C410D419FBD009F587D64A6A4@PowerSpec>
Message-ID: <02830c80626d4b0b3cc6576a8f1769ff@ucsd.edu>

I've been following the debate about Google Earth (GE) and Google Maps, 
and
wanted to contribute that I've seen the same kind of misfit between
geodetic-grade GPS coordinates and those from GE (for points I've 
visited and
so can locate on the photos): a few meters, up to about 10 m--and higher
elevations do tend to have larger errors. I'd agree that for a small 
area most
of this error can be removed by a local x-y shift.

But I am baffled by the discussion about what kind of projection GE 
uses,
and especially the aspersions cast by several participants. There seem 
to be
three different issues:

1. What *coordinates* does GE produce? The answer would seem to be, 
geographic
coordinates in a global datum, presumably something close to WGS-84 (in 
its
various incarnations) or ITRF (in its). That is, what you get from GE 
is the
same as what you will get from a GPS receiver.  Viewing GE as a device 
for
producing pairs of numbers from where you put the cursor, the ellipsoid 
used in
irrelevant: there is just some kind of algorithm from pixels to 
coordinates,
which is probably done by local interpolation.  Registration of the 
imagery is
much more important than anything else. Whether or not the WGS84 
ellipsoid
"fits" the projection used to make a rendering is beside the point when 
it
comes to lat and long, since there is no projection. Whether that 
ellipsoid
"fits" the Earth (or a part thereof) is even more beside the point, for 
this
application.

2. What shape is used for making the oblique views? Clearly a sphere,
and orthographic, is fine for GE's purely visual presentation.

3. What algorithm is used to determine distance when using the ruler 
tool?
That is, how is distance found from two pairs of coordinates? I don't 
know, but
again would say that using a sphere would be fine for the accuracy that 
anyone
should expect from a viewing tool: for casual applications, an error
of 1 in 300 isn't going to be an issue. Note that the projection used 
to render
the map on the screen could be Mercator on the sphere, while the tools 
could
use an ellipsoidal algorithm. Does anyone know what is used?

I think the same ideas apply to OSM; any inadequacies of their rendering
engine (which, for a Web application, seem minor) need not affect the
quality of the underlying data.

Finally, the Mercator on the sphere is exactly conformal, as is the 
Mercator
on an ellipsoid, as defined mathematically. This result, coming from
differential geometry, is independent of the eccentricity.

Duncan Agnew



From strebe at aol.com  Tue Dec  2 12:47:56 2008
From: strebe at aol.com (strebe)
Date: Tue, 02 Dec 2008 12:47:56 -0800
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <02830c80626d4b0b3cc6576a8f1769ff@ucsd.edu>
Message-ID: <22215396.C81E.4DD6.A49A.24C84D0F859F@aol.com>

Duncan:

Thank you for the notes, with which I largely agree.

>Finally, the Mercator on the sphere is exactly conformal, as is the 
>Mercator on an ellipsoid, as defined mathematically. This result,
>coming from differential geometry, is independent of the eccentricity.

Yes, and I should have been more clear when I described the Google Maps projection as "not conformal". If you ignore the geodetic origins of the data, then the projection is conformal. If you wish to preserve conformal relationships between the data as they exist on the ellipsoid that they were originally surveyed on, you would be obliged to apply a conformal sphere mapping of the geodetic coordinates before projecting the results to the spherical Mercator. Or, use the ellipsoidal Mercator development formulæ. Or, perform a datum shift from WGS84 to "Google Sphere", before projecting via the spherical Mercator (though it appears Clifford wants to dispute that the "Google Sphere" could be a datum). The first two results would be identical to each other to round-off precision. The last result would be close to the first two, with the closeness dependent upon the datum shift mechanism.

Regards,
— daan Strebe


On Dec 2, 2008, at 9:38:47 AM, "Duncan Agnew" <dagnew at ucsd.edu> wrote:
From:   "Duncan Agnew" <dagnew at ucsd.edu>
Subject:    Re: [Proj] Re: "Double ellipsoid" case?
Date:   December 2, 2008 9:38:47 AM PST
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
I've been following the debate about Google Earth (GE) and Google Maps, 
and
wanted to contribute that I've seen the same kind of misfit between
geodetic-grade GPS coordinates and those from GE (for points I've 
visited and
so can locate on the photos): a few meters, up to about 10 m--and higher
elevations do tend to have larger errors. I'd agree that for a small 
area most
of this error can be removed by a local x-y shift.

But I am baffled by the discussion about what kind of projection GE 
uses,
and especially the aspersions cast by several participants. There seem 
to be
three different issues:

1. What *coordinates* does GE produce? The answer would seem to be, 
geographic
coordinates in a global datum, presumably something close to WGS-84 (in 
its
various incarnations) or ITRF (in its). That is, what you get from GE 
is the
same as what you will get from a GPS receiver.  Viewing GE as a device 
for
producing pairs of numbers from where you put the cursor, the ellipsoid 
used in
irrelevant: there is just some kind of algorithm from pixels to 
coordinates,
which is probably done by local interpolation.  Registration of the 
imagery is
much more important than anything else. Whether or not the WGS84 
ellipsoid
"fits" the projection used to make a rendering is beside the point when 
it
comes to lat and long, since there is no projection. Whether that 
ellipsoid
"fits" the Earth (or a part thereof) is even more beside the point, for 
this
application.

2. What shape is used for making the oblique views? Clearly a sphere,
and orthographic, is fine for GE's purely visual presentation.

3. What algorithm is used to determine distance when using the ruler 
tool?
That is, how is distance found from two pairs of coordinates? I don't 
know, but
again would say that using a sphere would be fine for the accuracy that 
anyone
should expect from a viewing tool: for casual applications, an error
of 1 in 300 isn't going to be an issue. Note that the projection used 
to render
the map on the screen could be Mercator on the sphere, while the tools 
could
use an ellipsoidal algorithm. Does anyone know what is used?

I think the same ideas apply to OSM; any inadequacies of their rendering
engine (which, for a Web application, seem minor) need not affect the
quality of the underlying data.

Finally, the Mercator on the sphere is exactly conformal, as is the 
Mercator
on an ellipsoid, as defined mathematically. This result, coming from
differential geometry, is independent of the eccentricity.

Duncan Agnew

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081202/25943b5e/attachment.html>

From AWilliams at rapidmap.com  Tue Dec  2 14:55:53 2008
From: AWilliams at rapidmap.com (Andrew Williams)
Date: Wed, 3 Dec 2008 09:55:53 +1100
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>
References: <200812010946.mB19kXYE013117@duke.maptools.org>
	<200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>
Message-ID: <29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local>

This is a fascinating thread. Yet another issue arises as the Earth is not a static frame.
We resell a GPS unit here in Australia that outputs ITRF (International Terrestrial Reference Frame) coordinates. To look at the values they appear no different to WGS84 lat\long that any other GPS in the world outputs.
That is until you compare the location of a "fixed" point.

ITRF is a spaced based reference frame. It was originally designed for space based exercises such as docking a shuttle with a space station that needed an independent positioning mechanism.

The system has high repeatability but apparently low accuracy when compared to "accepted" coordinates.

On the There is an 8 parameter transformation to bring ITRF into co-incidence with WGS 84. The 7 are the standard 7 parameters we all know. The 8th is time. This system uses a differential correction signal based on ITRF in 1994 fixed in 2000. From then on a set of corrections has been calculated that takes into account continental drift.

In Australia continental drift equals 70mm a year North. So in 2000 the ITRF coordinate for a point was equal to WGS84. In 2008 the ITRF coordinate differs from a WGS84 coordinate for the same point by 560mm.

When you know this it's relatively easy to create code based on the 8 parameter transform and convert ITRF of the day to WGS84, however it does catch some people unaware.

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Irwin Scollar
Sent: Tuesday, 2 December 2008 6:28 AM
To: proj at lists.maptools.org
Subject: [Proj] Google Earth Accuracy

MarKus Neteler wrote:

>How about precision in mountainous regions such as the Southern Alps?
>PROJ4/OGR reprojected mountain peak points from geonames.org as
>well as known points from our province are off for > 100m when
>visualized in GE which they match our local orthophotos. Is the positional
>error related to the height of the point (here, satellite orthorectification)?

In GE go to View, Sidebar and turn it on if it's not already
on.  There, go to Layers, Primary Database, and uncheck the Terrain
option checkbox.  That gives an orthophoto-like view even in the
Alps.  You can check this by turning the GE Grid off and on in the
View menu or pressing Ctrl + L.

It's far from perfect, but it's good enough for my application of
mapping archaeological sites visible as crop or soil markings in the
GE images over modest areas.  Cliff dwellings are fortunately rare
exceptions. :-D

A more important concern is to increase the apparent resolution of GE
imagery which is normally limited to the number of pixels of the
display screen to approach that of a cadastral map of a small
area.  Using the GE lat/lons of image corners which can be found via
KML API routines, one can mosaic multiple zoomed detail images if the
GE raw data is originally from a single good orthophoto or a mosaic
made from several of these or even from a single Digital Globe strip
in some parts of the world like the Nile valley.  I have had good
results with this in moderately hilly terrain up to a factor of as
much as 6 in some places on my 1600x1200 display.

Irwin Scollar

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From hamish_b at yahoo.com  Tue Dec  2 20:14:22 2008
From: hamish_b at yahoo.com (Hamish)
Date: Tue, 2 Dec 2008 20:14:22 -0800 (PST)
Subject: [Proj] Re: "Double ellipsoid" case?
Message-ID: <540691.49175.qm@web110002.mail.gq1.yahoo.com>

Hamish wrote:
> ... except if that rendering engine is used as the backdrop images in
> their JOSM street editor and folks are "snapping" roads to a distorted
> image. I don't know if this is really the case for JOSM, but I'm slightly
> worried that it may be.

Indeed, Osmarender may be used by JOSM:
  http://josm.openstreetmap.de/wiki/Help/Menu/View

but from reading that manual page it would seem non-interactively, so not
prone to the "snapping" bug. (this time)


Hamish



      



From support.mn at elisanet.fi  Wed Dec  3 08:17:39 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Wed, 3 Dec 2008 18:17:39 +0200 (EET)
Subject: [Proj] Zero level to air navigation
Message-ID: <31125942.450031228321060085.JavaMail.support.mn@elisanet.fi>

Hello,

if sombody asked me so I would maybe set some simple sphere as the zero reference for the earth. Why? Because it is the most simple solution and you only need to remember it's radius. Now we have several ellipsoids and do they help anything... mostly not, since the earth is not even an ellipsoid. Earth has mountains and walleys, the real surface is complex, even the mean sea level is not any ellipsoid. So even the best ellipsoid is just an imagenary surface somewhere (nobody cares?).. except when they crash with the mountain.

To lessen the system complexity it would maybe be much more simple to take some well defined mean sphere surface as the reference! It would give larger distances to the actual surface, but who cares. It would just be a zero reference. All actual earth surfaces would have soething +/- to that. No we have thousends of ellipsoids and nobody knows exactly where the reference is and the possibility to make errors is much larger.

For example air navigation would benefit lot, since the absolute level is very important and the reference must be stable.

Maybe the WGS84 reference ellipsoid will be that  zero? The only problem with ellipsoids is that they are all the time introdusing new ones. If it was a sphere, then they probably would only change it's radius all the time? :)

Janne.



From dagnew at ucsd.edu  Wed Dec  3 10:23:30 2008
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Wed, 3 Dec 2008 10:23:30 -0800
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local>
References: <200812010946.mB19kXYE013117@duke.maptools.org>
	<200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local>
Message-ID: <4198170a27560b3948a71c7a3ec48a96@ucsd.edu>

Since I am in the crustal-motion business I want to correct the previous
posting about ITRF. This is "space-based" only in the sense that it uses
data from outside the Earth (GPS and other satellites, along with 
distant
radio sources).  It was not designed with space use in mind. Since ITRF 
and
WGS84 are both space-based in this sense, they align closely: after all,
the center of the Earth and the rotation pole are both non-arbitrary.

ITRF was designed to be an ultraprecise reference frame for measuring 
motions
of the Earth as a whole, and of different parts relative to each other. 
Since
the frame is designed to be fixed relative to the velocities of all the
tectonic plates, averaged over the whole Earth, any particular point 
will
have time-varying coordinates in this frame--as is is in fact true for 
any
frame not tied to a particular plate (WGS-84 included), though many 
softwares
do not take account of this. The people who develop and update ITRF are
working at the millimeter level.

Two "plate-fixed" frames are NAD (at least east of the Rockies), and 
EUREF
(for Northern Europe). Rather weirdly, Australia has chosen not to 
define
a local frame, even though it has a plate all to itself.

For more on ITRF, see http://itrf.ensg.ign.fr/

Duncan Agnew



From cjmce at lsu.edu  Wed Dec  3 10:27:58 2008
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Wed, 3 Dec 2008 12:27:58 -0600
Subject: [Proj] Zero level to air navigation
References: <31125942.450031228321060085.JavaMail.support.mn@elisanet.fi>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7EC254C@email002.lsu.edu>

Janne,
 
They are not introducing new ellipsoids all the time.  The last one was 1980 with a trivial modification due to a different gravity term in 1984.
 
It was "all the time" in the 19th and 20th centuries.  They have figured it out by now ...
 
C. Mugnier
LSU

________________________________

From: proj-bounces at lists.maptools.org on behalf of support.mn at elisanet.fi
Sent: Wed 03-Dec-08 10:17
To: proj at lists.maptools.org
Subject: [Proj] Zero level to air navigation



Hello,

if sombody asked me so I would maybe set some simple sphere as the zero reference for the earth. Why? Because it is the most simple solution and you only need to remember it's radius. Now we have several ellipsoids and do they help anything... mostly not, since the earth is not even an ellipsoid. Earth has mountains and walleys, the real surface is complex, even the mean sea level is not any ellipsoid. So even the best ellipsoid is just an imagenary surface somewhere (nobody cares?).. except when they crash with the mountain.

To lessen the system complexity it would maybe be much more simple to take some well defined mean sphere surface as the reference! It would give larger distances to the actual surface, but who cares. It would just be a zero reference. All actual earth surfaces would have soething +/- to that. No we have thousends of ellipsoids and nobody knows exactly where the reference is and the possibility to make errors is much larger.

For example air navigation would benefit lot, since the absolute level is very important and the reference must be stable.

Maybe the WGS84 reference ellipsoid will be that  zero? The only problem with ellipsoids is that they are all the time introdusing new ones. If it was a sphere, then they probably would only change it's radius all the time? :)

Janne.

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081203/b95183c5/attachment.html>

From Chris.Barker at noaa.gov  Wed Dec  3 10:43:19 2008
From: Chris.Barker at noaa.gov (Christopher Barker)
Date: Wed, 03 Dec 2008 10:43:19 -0800
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se>
References: <1405021895.1000361228167969923.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
	<B597ADFC46B67741B18EA6AA13613FF7EC253F@email002.lsu.edu>
	<ae9185aa0812011917q47ede881sd93b4b980a07d3e5@mail.gmail.com>
	<FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se>
Message-ID: <4936D347.6000200@noaa.gov>

>> The practical consequence is that they do not have a conformal projection; 
>> hence local distances measured from a point are not quite uniform in all 
>> directions,

measuring distance is a problem with Mercator anyway -- the scale varies 
with latitude -- a lot more that difference between a sphere and an 
ellipsoid.

One thing that IS absurd is that Google maps puts a scale bar on every 
map -- even the whole earth scale, where it is essentially meaningless.


-Chris





-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov


From geraldi.evenden at gmail.com  Wed Dec  3 11:27:22 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Wed, 3 Dec 2008 14:27:22 -0500
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <4936D347.6000200@noaa.gov>
References: <1405021895.1000361228167969923.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
	<FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se>
	<4936D347.6000200@noaa.gov>
Message-ID: <200812031427.23052.geraldi.evenden@gmail.com>

On Wednesday 03 December 2008 1:43:19 pm Christopher Barker wrote:
> >> The practical consequence is that they do not have a conformal
> >> projection; hence local distances measured from a point are not quite
> >> uniform in all directions,
>
> measuring distance is a problem with Mercator anyway -- the scale varies
> with latitude -- a lot more that difference between a sphere and an
> ellipsoid.
>
> One thing that IS absurd is that Google maps puts a scale bar on every
> map -- even the whole earth scale, where it is essentially meaningless.

Frankly, it is silly and misleading to put a scale bar on any map.  Even for a 
conformal map a scale bar is superfluous because the scale issue only applies 
to an infinitely small segment of the map.  Attempting to make a measurement 
over any finite distance is subject to error that is ever increasing with 
distance.

The *ONLY* method of measuring distance is with geodesic software and knowing 
the geographic coordinates of the points in question.

Yes, people with continue to put scale bars on maps but *NEVER* use anything 
more precise than your knuckles or finger span when measuring distances with 
one.  That will remind you of the limitation of such a tedius and meanless 
cartographic icon.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From strebe at aol.com  Wed Dec  3 12:59:13 2008
From: strebe at aol.com (strebe)
Date: Wed, 03 Dec 2008 12:59:13 -0800
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <C9B5447C410D419FBD009F587D64A6A4@PowerSpec>
Message-ID: <8D0D73A1.4507.4866.A684.19D0224CE021@aol.com>

Noel:

>My physical geodesy argument is that since WGS84 is a best fit to the geoid
>and since the Google Sphere is a terrible fit to the geoid no matter how you
>orientate it, using the Google Sphere obviates reference to the WGS84 datum... 

To which I reply, the original information from the WGS84 datum is all recoverable from the plane coordinates. Therefore, whether they used the Google Sphere, the WGS84 ellipsoid, or a potato or an icosahedron, so long as the WGS84 coordinates are recoverable, nothing got obviated.

>My geometric geodesy argument would be that geodesic direct and inverse
>computations would get different results on the WGS84 ellipsoid and the GS
>no matter how you map the WGS84 graticule onto the GS graticule.  This is an
>indictment of the use of the GS, since WGS84 computations better represent
>physical reality.  No one has suggested geodesic computations on the GS in
>this thread, but the implicit association of the GS with WGS84 by Google
>regrettably risks that abuse.

Geodesic computations should be performed in spherical coordinates, in which case, again, how those coordinates got projected does not matter so long as the spherical coordinates (on WGS84 ellipsoid) are recoverable. Google does not talk about the "Google Sphere" as far as I can tell; there is no such terminology turned up by a Web search. The specification is clear: geodetic data are given in WGS84 coordinates. I do not see how the projection method encourages anyone to make geodesic computations against the sphere.

Let me defend that. In order for the Google Map projection to encourage someone to choose the Google Sphere for geodesic calculations, the person would:

(a) Have to know the projection method; otherwise they would not even be cognizant of the Google Sphere, since it is part of the projection, not the datum from whence coordinates were supplied;

(b) Realize there is even a Google Sphere to be cognizant of, since it is never explicitly mentioned or promoted;

(c) Understand there is a difference between ellipsoidal calculations and spherical calculations for distance, and need the precision of the former;

(d) And still choose the Google Sphere for these geodesic calculations.

I have to suppose the intersection of (a), (b), (c), and (d) is... nobody.

>My appeals to conventional practice are even more compelling in my view, though
>you may disagree.

No; I agree. This is your strongest argument. 

>For example, ED50 geodesic direct and inverse computations and ED50 map
>projections are computed _only_ on the International ellipsoid.  Why?
>Computation on the ellipsoid of a datum’s least-squares adjustment provides (by
>definition) the best conformation with physical reality and the convention of
>doing so protects us from ignorant mistakes.  We all (I believe) follow this
>practice everywhere in the world (except in our use of Google Maps).  The risk
>to conventional practice introduced by Google is not progress.

I agree it is not progress in geodesy. Yet neither do I see it as any practical problem or as backsliding in geodesy. Those who need to perform computations will click a button, and they will receive their computations. I particularly do not agree that the Google Map projection will encourage mistakes. You insist people will interpret the Google Sphere as the datum. I do not believe that. It's just part of the projection calculus. It is a convenient short-cut that some engineers made in order to achieve what they wanted cheaply within acceptable bounds of error. What they wanted was rapid calculations retaining near-conformality so that they could use the same projection mathematics everywhere without introducing visible distortion in large-scale maps. They succeeded. That is the enterprise of engineering.

And, by the way, they knew what they were doing. They knew they were using not-quite-conformal mathematics and they knew they were doing something unorthodox. Those were acceptable trade-offs to them. The slander heaped upon them in an earlier e-mail was simply slander. No, they are not geodesists, photogrammetrists, or cartographers, but they never represented themselves as any of those, and the problems they were solving were not problems of geodesy or photogrammetry anyway. They were problems of mathematical cartography, and their solution achieved its goals.

>So, one thing is certain (and has already been stated in this thread), and that
>is that the Google Maps projection cannot be called the Mercator. 

Agreed, certainly with respect to large-scale mapping. For small-scale, well... nobody has coordinate data in spherical datums anyway, so what Google is doing is the de facto standard, even though it is not strictly Mercator.

>Mikael quantified the maximum angular distortion as 0.2 degrees.  At this point
>I’ll have to agree with Cliff that this is retrograde cartography.

At which point I will disagree. There is no use in this context for strict conformality, which is anyway largely a geodetic concern rather than a cartographic concern. Google is not solving geodetic problems and is not causing geodetic problems; therefore it makes no sense to take them to task for violating geodetic practices. There is no "retrograde cartography" going on here, just a rather mundane and obvious variant of a well-known map projection. Cartography has always been about compromises. Did Google pick optimal compromises in their projection choice? It sure seems like it.

Regards,
— daan Strebe


On Dec 2, 2008, at 7:31:14 AM, "Noel Zinn" <ndzinn at comcast.net> wrote:
From:   "Noel Zinn" <ndzinn at comcast.net>
Subject:    [Proj] Re: "Double ellipsoid" case?
Date:   December 2, 2008 7:31:14 AM PST
To: "'PROJ.4 and general Projections Discussions'" <proj at lists.maptools.org>
daan, Mikael, Cliff, and others,

 

Thanks for your persistence.  Indeed, clarifying our terminology will help.  For me the Google Sphere (GS) is simply an ellipsoid with an eccentricity squared of zero and semi-major axis (a) equal to the semi-major axis of the WGS84 ellipsoid.  In this case the semi-minor axis (b) equals the semi-major axis. 

 

Now, the Google Sphere can have both geodetic and cartographic applications.  That distinction is admittedly confusing in this thread.  I react viscerally to the introduction of the GS into the WGS84 datum as a geodetic abomination.  You and Mikael see the GS as merely an intermediate stage in a total projection method (which is non-conformal and, therefore, not the Mercator projection, and about which you are both defensive).  Cliff sees the GS as both bad geodesy and as bad cartography.  Frankly, I agree with Cliff.  I also accept Richard’s admonition to keep it civil.

 

So, before moving on to the cartography, I’ll briefly recap my geodetic objections.  My physical geodesy argument is that since WGS84 is a best fit to the geoid and since the Google Sphere is a terrible fit to the geoid no matter how you orientate it, using the Google Sphere obviates reference to the WGS84 datum (in my opinion). 

 

My geometric geodesy argument would be that geodesic direct and inverse computations would get different results on the WGS84 ellipsoid and the GS no matter how you map the WGS84 graticule onto the GS graticule.  This is an indictment of the use of the GS, since WGS84 computations better represent physical reality.  No one has suggested geodesic computations on the GS in this thread, but the implicit association of the GS with WGS84 by Google regrettably risks that abuse.

 

My appeals to conventional practice are even more compelling in my view, though you may disagree.  For example, ED50 geodesic direct and inverse computations and ED50 map projections are computed _only_ on the International ellipsoid.  Why?  Computation on the ellipsoid of a datum’s least-squares adjustment provides (by definition) the best conformation with physical reality and the convention of doing so protects us from ignorant mistakes.  We all (I believe) follow this practice everywhere in the world (except in our use of Google Maps).  The risk to conventional practice introduced by Google is not progress.

 

Now, on to the cartography.  Having reread Mikael’s postings I appreciate (and accept) his and daan’s perspective that this is a cartographic – and not a geodetic – issue.  The WGS84 datum can underlie this (unfortunate) two-stage projection used by Google Maps (Mikael’s alternative A).  Regarding Mikael’s alternative B, I’ll have to study the EPSG Mercator methods first before commenting.  And regarding daan’s interpretation that only one "ellipsoid" involved on the projection side, and that is the "Google Sphere", I don’t see it yet.  I stated previously that the spherical Mercator projection is intuitively conformal.  The ellipsoidal Mercator is conformal over a range of eccentricity squared values and there is no reason that that range shouldn’t include zero (the sphere) while maintaining conformality.  But first there is the non-conformal mapping from the WGS84 ellipsoid to the Google Sphere before the Mercator equations are applied.  So, one thing is certain (and has already been stated in this thread), and that is that the Google Maps projection cannot be called the Mercator.  It’s something else.  Mikael quantified the maximum angular distortion as 0.2 degrees.  At this point I’ll have to agree with Cliff that this is retrograde cartography.  Quoting Cliff, “using equivalent spheres in 19th and early 20th century cartography was an attempt to simplify ellipsoidal computations” and quoting Mikael, “the situation is similar to the French truncated Lambert Conformal Conic, which is not exactly conformal, and is a different projection than the true Lambert Conformal Conic”.  My question is, Why are we doing this in the 21st century?!?  This is retrograde cartography even if (no, especially if) the explanation is computational efficiency (in light of the “clouds” of computers maintained by Google).  Google had an opportunity to expose a wide audience to good geodetic and cartographic practice, but instead Google is exposing that audience to malpractice (in my opinion).  Yes, this is a judgment. And daan will respond that it works for their purposes.  I’m not so sure.  Google Maps is being used for lots of creative purposes encouraged by Google.  I believe that some user will stumble due to the poor choices made by Google.  Perhaps that can be documented in another thread. 

 

Regards and thanks for the great discussion,

Noel Zinn

 

 

 

 

 

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081203/efbd7bb6/attachment.html>

From ndzinn at comcast.net  Wed Dec  3 12:59:47 2008
From: ndzinn at comcast.net (ndzinn at comcast.net)
Date: Wed, 3 Dec 2008 20:59:47 +0000 (UTC)
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se>
Message-ID: <2093181007.1357761228337987207.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>



Mikael, 



  

Thanks for your revised assessment of maximum angular distortion in the Google Maps Projection (GMP).   



  

Are you aware that the scale distortion in GMP is very large and unstated?   In the vicinity of the Equator and it's about 1.0067 (that's 67cm per 100m).   You can't compensate for it with the point scale factor equations of the Mercator projection in the second stage of the GMP (your alternative A) because it's embedded in the first stage of the GMP, the non-conformal mapping from WGS84 to the Google Sphere (GS).   Here's how you can demonstrate this to yourself.   



  

Choose any meridian.   We're going to traverse north up that meridian (a great circle geodesic) from the Equator to 1 degree North on the Google Sphere (GS) and on the GMP.   Consequently, the Eastings are irrelevant; they're constant.   Here's the raw data. 



  

The inverse geodesic distance along the meridian on the GS from the Equator to 1 degree North is 111319.4908m.   The GMP Northing on the Equator is 0m and the point scale is 1 (unity).   The GMP Northing at 30 minutes North is 55,660.4519m and the point scale factor is 1.00003808.   The GMP Northing at 1 degree North is 111,325.1429m and the point scale factor is 1.00015233.   



  

To convert from grid distances (111,325.1429m in this case) to geodesic distances surveyors use Simpson's Approximation to compute the line scale factor.   That's the sum of the end-point point scale factors plus 4 times the mid-point point scale factor divided by 6, or 1.000050775 in this case.   Divide the grid distance by line scale factor and you'll see that we have a sub-millimeter tie with the geodesic distance.   



  

If there were a physical monument on the Equator and one at 1 degree North (same meridian), what would be the distance between them?   Well, that would be the geodesic distance on the WGS84 ellipsoid.   This is the WGS84 datum, isn't it?   Well, that distance is 110,574.3886m.   The ratio of these distances is the hidden (and, therefore, insidious) scale distortion of the GMP in this vicinity of the world.   



  

An underlying and yet unmentioned distinction in this thread is that geodesists think in terms of meters on the ground and GIS cartographers think in terms of pixels on a monitor.   It's a different frame of reference, a different tolerance for error.   If I surveyed football pitch (about 100m), a 67cm error would concern me.   My question for you is: How long a distance would it take for the hidden GMP scale distortion to move your image to the wrong pixel on your monitor?   



  

Regards, 

Noel Zinn 




----- Original Message ----- 
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com> 
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org> 
Sent: Tuesday, December 2, 2008 10:13:22 AM GMT -06:00 US/Canada Central 
Subject: RE: [Proj] Re: "Double ellipsoid" case? 

Richard Greenwood wrote: 

> I for one, am finding this an interesting, and pertinent thread. 
> Let's not quash it, and let's keep it civil. 

Thanks, Richard. 

I thought daan explained the matter clearly, and I have not much to add.   

daan Strebe wrote: 
> The practical consequence is that they do not have a conformal projection; 
> hence local distances measured from a point are not quite uniform in all 
> directions, and neither are azimuths quite equally spaced radially from 
> that point. So? 

I would add that these deviations from conformality of course can be 
quantified and bounded.  For example, I wrote that "I think the maximal 
angle distortion for Sphere Mercator is 0.2 degrees".  This was wrong; 
I was thinking of the maximal azimuth error, and the maximal angle 
distortion is twice that, so make it 0.4 degrees.   

It is not surgical precision, and it is 16th century technology, 
but I wouldn't say that a 0.4 degree error is "absurd". 
(Well, unless my application required exact conformality for some reason.) 
The benefit is simpler formulas and faster execution times.   

Noel Zinn wrote: 
> If I could just switch the WGS84 ellipsoid in the WGS84 datum with 
> the Google Sphere (as you suggest), why couldn't I switch 
> the International Ellipsoid in ED50 with Clarke 1866?  Or any other 
> switch for that matter?   

Let's see if I understand you correctly. You are asking: if I have data 
in the datum ED50, why can't I define a projection which, by definition, 
treats (Lon,Lat) from ED50 as if it were (Lon,Lat) on the Clarke 1866 
ellipsoid? 

Well, I am forced to say that this is quite possible. The mathematics works, 
and it is not illegal.  Again, the result would be a map that is not exactly 
conformal, relative to the shape of ED50.  Because this naive mapping 
from (Lon,Lat) on the International Ellipsoid to (Lon,Lat) on the Clarke 1866 
ellipsoid - without changing the numerical values - is not conformal. 
At least, I don't think so. 

But I am just saying that it is possible. I think it would be silly 
and meaningless, because I would give up the exact conformality 
(relative to the shape of ED50) in return for nothing.  I would not 
get the benefit of simpler formulas or faster execution times, 
since I would have to use ellipsoid formulas to go from Clarke 1866 
to the plane.   

Noel: 
> In addition to worse fits mathematically 
> (since the adjustment was done on the defining ellipsoid), 

Yes, spherical formulas give worse maps for large scale maps. 
But I would say, only slightly worse. Not absurdly worse. 

> we'd open the door to uncertainty and crisis. 
> You are proposing (and Google has introduced) the geodetic 
> equivalent of sub-prime mortgages in the financial market.   
> Don't do it! 

Well, we are talking about a maximal 0.4 degree error for angles, 
and a variation of the local scale in different direction 
through a point, which would be at most 0.5 percent, I think.   

If economists could do predictions with 0.5 percent accuracy, 
the world economy would be in a better state! 

-- 
Mikael Rittri 
Carmenta AB 
Box 11354 
SE-404 28 Göteborg 
Visitors: Sankt Eriksgatan 5 
SWEDEN 
Tel: +46-31-775 57 37 
Mob: +46-703-60 34 07 
mikael.rittri at carmenta.com 
www.carmenta.com 

_______________________________________________ 
Proj mailing list 
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081203/9a927f94/attachment.html>

From timmichelsen at gmx-topmail.de  Wed Dec  3 13:40:08 2008
From: timmichelsen at gmx-topmail.de (Tim Michelsen)
Date: Wed, 03 Dec 2008 22:40:08 +0100
Subject: [Proj] ITRF [Re: Google Earth Accuracy]
In-Reply-To: <4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
References: <200812010946.mB19kXYE013117@duke.maptools.org>	<200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>	<29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local>
	<4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
Message-ID: <gh6ubo$9lc$1@ger.gmane.org>

Hello,

> ITRF was designed to be an ultraprecise reference frame for measuring 
> motions
> of the Earth as a whole, and of different parts relative to each other. 
> Since
> the frame is designed to be fixed relative to the velocities of all the
> tectonic plates, averaged over the whole Earth, any particular point will
> have time-varying coordinates in this frame--as is is in fact true for any
> frame not tied to a particular plate (WGS-84 included), though many 
> softwares
> do not take account of this. The people who develop and update ITRF are
> working at the millimeter level.
Would this mean that giving another person just the coordiantes recorded 
from such a IRTF enabled GPS is not sufficient to convert this to WGS84 
or any other projection?

I received some data in ITRF but wasn't able to transform it into WGS84, 
so far. Maybe you can direct my to some examples?

Kind regards,
Timmie



From dagnew at ucsd.edu  Wed Dec  3 14:16:56 2008
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Wed, 3 Dec 2008 14:16:56 -0800
Subject: [Proj] ITRF [Re: Google Earth Accuracy]
In-Reply-To: <gh6ubo$9lc$1@ger.gmane.org>
References: <200812010946.mB19kXYE013117@duke.maptools.org>	<200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>	<29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local>
	<4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
	<gh6ubo$9lc$1@ger.gmane.org>
Message-ID: <a6309230459d2299ff0fe87a62e88aa6@ucsd.edu>

Since there can be confusion about this, I append the "official" answer  
from the keepers of ITRF, found at
ftp://itrf.ensg.ign.fr/pub/itrf/WGS84.TXT. Note that:

1. There is more than one realization of WGS-84 (see below).

2. WGS-84 is not a projection, but a global datum.

3. As always, in the end you need to keep in mind who defines things:  
for WGS, the US DoD; for ITRF, the
scientific community, through the International Earth Rotation Service;  
and for regional datums,
whatever authority is in charge (NGS for NAD; Eurographics for ETRS  
[the European system] and so on).

4. If you are working to better than 10 cm, you should be looking for  
transformations from ITRF to your
local (national) datum--and these transformations *will* be  
time-dependent, or at least had better be,
since otherwise cm-level precision is meaningless.

Duncan Agnew

------------------------------------------------------------------------ 
-
  ITRS and WGS84
  Last update : 2007-10-11
------------------------------------------------------------------------ 
-

In general the ITRS (and its realizations ITRFyy) are identical to WGS84
at one meter level.

Meanwhile there are two types of WGS84 realization:

- old realization based on U.S. Navy Navigation Satellite System,
   commonly known as DOPPLER Transit, and provided station coordinates
   with accuracies of about one meter. With respect to this realization
   we published, some years ago, transformation parameters between
   ITRF90 and this Doppler realized system:

Parameters from ITRF90 to WGS84-Doppler realized system

              T1      T2      T3       D         R1       R2        R3
UNITS -----> (m)     (m)     (m)     (ppm)     (")       (")       (")

-----------------------------------------------------------------------
             0.060   -0.517  -0.223  -0.011    0.0183  -0.0003    0.0070



- New realizations of WGS84 based on GPS data, such as WGS84(G730, G873
   and G1150). These new WGS84 realizations are coincident with ITRF at
   about 10-centimeter level. For these realizations there are no  
official
   transformation parameters. This means that one can consider that ITRF
   coordinates are also expressed in WGS84 at 10 cm level.

   For more information about WGS84 realizations, see
   U.S. National Imagery and Mapping Agency, "Department of
   Defense World Geodetic System 1984 -- Its Definition and
   Relationships with Local Geodetic Systems."  NIMA Technical
   Report 8350.2 3rd release, St. Louis, MO, 23 June 2004.
   http://earth-info.nga.mil/GandG/publications/tr8350.2/tr8350_2.html 



From mohmaher at hotmail.com  Wed Dec  3 14:04:46 2008
From: mohmaher at hotmail.com (Moh.Maher)
Date: Wed, 3 Dec 2008 22:04:46 +0000 (UTC)
Subject: [Proj] Conversion sentence
Message-ID: <loom.20081203T215940-786@post.gmane.org>

Hi All,

I'm a newbie here..

I just wanna know how to convert from :geogrpahic(LongLat (google earth
coordinates) to UTM zone 38 Ellipsoid=International and datum called =Ain Al ABd
the datum has : dx=-143 dy=-236 dz=7 Helmert parameters.

I want to format the command cs2cs 

Plz help.

Thanks in advance.





From jagoncal at gmail.com  Wed Dec  3 15:52:38 2008
From: jagoncal at gmail.com (=?ISO-8859-1?Q?Jose_Gon=E7alves?=)
Date: Wed, 3 Dec 2008 23:52:38 +0000
Subject: [Proj] Conversion sentence
In-Reply-To: <loom.20081203T215940-786@post.gmane.org>
References: <loom.20081203T215940-786@post.gmane.org>
Message-ID: <6a91fcb00812031552q3090af2bu512b03c918162ddb@mail.gmail.com>

Hello
The command line is:

cs2cs +proj=latlong +datum=WGS84 +to +ellps=intl +proj=utm +zone=38
+towgs84=-143,-236,7
Regards

Jose' Gonçalves


2008/12/3 Moh.Maher <mohmaher at hotmail.com>

> Hi All,
>
> I'm a newbie here..
>
> I just wanna know how to convert from :geogrpahic(LongLat (google earth
> coordinates) to UTM zone 38 Ellipsoid=International and datum called =Ain
> Al ABd
> the datum has : dx=-143 dy=-236 dz=7 Helmert parameters.
>
> I want to format the command cs2cs
>
> Plz help.
>
> Thanks in advance.
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081203/214ebf73/attachment.html>

From ndzinn at comcast.net  Wed Dec  3 18:09:50 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Wed, 3 Dec 2008 20:09:50 -0600
Subject: [Proj] "Double ellipsoid" case?
In-Reply-To: <2093181007.1357761228337987207.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
References: <FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se>
	<2093181007.1357761228337987207.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
Message-ID: <767EEBB436CE4A7B9E44A3E0A923FF34@PowerSpec>

Mikael,

 

Tonight rereading my post with yours concatenated below I see that you
anticipated my point.  You wrote:

 

Well, we are talking about a maximal 0.4 degree error for angles, and a
variation of the local scale in different direction through a point, which
would be at most 0.5 percent, I think. 

 

My apologies for being obtuse.  My 1.0067 scale and your 0.5 percent are
about the same (and its a function of latitude), but how differently we
react to knowledge of this fact.  The angular distortion and the scale
change are related, of course.  100 meters times the tangent of 0.4 degrees
is about 70 centimeters.  Thats 7m per km and 70m per 10km.



For me (meters on the ground) its a big deal, while you just shrug it off.
I find it hopeful that youve actually quantified these distortions, but I
wonder how many developers (to say nothing of users) are that savvy, that
able to compensate for them, almost 20 times worse in scale than the worst
in a UTM zone.  Too few, I think.  

 

Regards,

Noel

 

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of ndzinn at comcast.net
Sent: Wednesday, December 03, 2008 3:00 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Re: "Double ellipsoid" case?

 

Mikael,

 

Thanks for your revised assessment of maximum angular distortion in the
Google Maps Projection (GMP).  

 

Are you aware that the scale distortion in GMP is very large and unstated?
In the vicinity of the Equator and it's about 1.0067 (that's 67cm per 100m).
You can't compensate for it with the point scale factor equations of the
Mercator projection in the second stage of the GMP (your alternative A)
because it's embedded in the first stage of the GMP, the non-conformal
mapping from WGS84 to the Google Sphere (GS).  Here's how you can
demonstrate this to yourself.  

 

Choose any meridian.  We're going to traverse north up that meridian (a
great circle geodesic) from the Equator to 1 degree North on the Google
Sphere (GS) and on the GMP.  Consequently, the Eastings are irrelevant;
they're constant.  Here's the raw data.

 

The inverse geodesic distance along the meridian on the GS from the Equator
to 1 degree North is 111319.4908m.  The GMP Northing on the Equator is 0m
and the point scale is 1 (unity).  The GMP Northing at 30 minutes North is
55,660.4519m and the point scale factor is 1.00003808.  The GMP Northing at
1 degree North is 111,325.1429m and the point scale factor is 1.00015233.  

 

To convert from grid distances (111,325.1429m in this case) to geodesic
distances surveyors use Simpson's Approximation to compute the line scale
factor.  That's the sum of the end-point point scale factors plus 4 times
the mid-point point scale factor divided by 6, or 1.000050775 in this case.
Divide the grid distance by line scale factor and you'll see that we have a
sub-millimeter tie with the geodesic distance.  

 

If there were a physical monument on the Equator and one at 1 degree North
(same meridian), what would be the distance between them?  Well, that would
be the geodesic distance on the WGS84 ellipsoid.  This is the WGS84 datum,
isn't it?  Well, that distance is 110,574.3886m.  The ratio of these
distances is the hidden (and, therefore, insidious) scale distortion of the
GMP in this vicinity of the world.  

 

An underlying and yet unmentioned distinction in this thread is that
geodesists think in terms of meters on the ground and GIS cartographers
think in terms of pixels on a monitor.  It's a different frame of reference,
a different tolerance for error.  If I surveyed football pitch (about 100m),
a 67cm error would concern me.  My question for you is: How long a distance
would it take for the hidden GMP scale distortion to move your image to the
wrong pixel on your monitor?  

 

Regards,

Noel Zinn


----- Original Message -----
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com>
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org>
Sent: Tuesday, December 2, 2008 10:13:22 AM GMT -06:00 US/Canada Central
Subject: RE: [Proj] Re: "Double ellipsoid" case?

Richard Greenwood wrote:

> I for one, am finding this an interesting, and pertinent thread. 
> Let's not quash it, and let's keep it civil.

Thanks, Richard. 

I thought daan explained the matter clearly, and I have not much to add.   

daan Strebe wrote:
> The practical consequence is that they do not have a conformal projection;

> hence local distances measured from a point are not quite uniform in all 
> directions, and neither are azimuths quite equally spaced radially from 
> that point. So?

I would add that these deviations from conformality of course can be 
quantified and bounded.  For example, I wrote that "I think the maximal 
angle distortion for Sphere Mercator is 0.2 degrees".  This was wrong; 
I was thinking of the maximal azimuth error, and the maximal angle 
distortion is twice that, so make it 0.4 degrees.  

It is not surgical precision, and it is 16th century technology, 
but I wouldn't say that a 0.4 degree error is "absurd".
(Well, unless my application required exact conformality for some reason.) 
The benefit is simpler formulas and faster execution times.  

Noel Zinn wrote:
> If I could just switch the WGS84 ellipsoid in the WGS84 datum with 
> the Google Sphere (as you suggest), why couldn't I switch 
> the International Ellipsoid in ED50 with Clarke 1866?  Or any other 
> switch for that matter?  

Let's see if I understand you correctly. You are asking: if I have data 
in the datum ED50, why can't I define a projection which, by definition, 
treats (Lon,Lat) from ED50 as if it were (Lon,Lat) on the Clarke 1866 
ellipsoid?

Well, I am forced to say that this is quite possible. The mathematics works,
and it is not illegal.  Again, the result would be a map that is not exactly
conformal, relative to the shape of ED50.  Because this naive mapping 
from (Lon,Lat) on the International Ellipsoid to (Lon,Lat) on the Clarke
1866 
ellipsoid - without changing the numerical values - is not conformal. 
At least, I don't think so. 

But I am just saying that it is possible. I think it would be silly 
and meaningless, because I would give up the exact conformality 
(relative to the shape of ED50) in return for nothing.  I would not 
get the benefit of simpler formulas or faster execution times, 
since I would have to use ellipsoid formulas to go from Clarke 1866 
to the plane.  

Noel: 
> In addition to worse fits mathematically 
> (since the adjustment was done on the defining ellipsoid), 

Yes, spherical formulas give worse maps for large scale maps. 
But I would say, only slightly worse. Not absurdly worse. 

> we'd open the door to uncertainty and crisis. 
> You are proposing (and Google has introduced) the geodetic 
> equivalent of sub-prime mortgages in the financial market.  
> Don't do it!

Well, we are talking about a maximal 0.4 degree error for angles, 
and a variation of the local scale in different direction 
through a point, which would be at most 0.5 percent, I think.  

If economists could do predictions with 0.5 percent accuracy, 
the world economy would be in a better state! 

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
Tel: +46-31-775 57 37
Mob: +46-703-60 34 07 
mikael.rittri at carmenta.com
www.carmenta.com

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081203/6ef7c1be/attachment.html>

From mohmaher at hotmail.com  Thu Dec  4 08:09:03 2008
From: mohmaher at hotmail.com (Moh.Maher)
Date: Thu, 4 Dec 2008 16:09:03 +0000 (UTC)
Subject: [Proj] Re: Conversion sentence
References: <loom.20081203T215940-786@post.gmane.org>
	<6a91fcb00812031552q3090af2bu512b03c918162ddb@mail.gmail.com>
Message-ID: <loom.20081204T160412-89@post.gmane.org>


Jose Gonçalves <jagoncal <at> gmail.com> writes:

> 
> 
> Hello
> The command line is:
>  
> cs2cs +proj=latlong +datum=WGS84 +to +ellps=intl +proj=utm +zone=38
+towgs84=-143,-236,7
> 
> Regards
>  
> Jose' Gonçalves
> 
>  
> 2008/12/3 Moh.Maher <mohmaher <at> hotmail.com>Hi All,I'm a newbie here..I
just wanna know how to convert from :geogrpahic(LongLat (google earth
> coordinates) to UTM zone 38 Ellipsoid=International and datum called =Ain Al
ABdthe datum has : dx=-143 dy=-236 dz=7 Helmert parameters.I want to format the
command cs2csPlz help.Thanks in
advance._______________________________________________Proj mailing listProj
<at> lists.maptools.orghttp://lists.maptools.org/mailman/listinfo/proj
> 
> 
> 
> 
> 
> _______________________________________________
> Proj mailing list
> Proj <at> lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj


Jose,

Thank you very much , I appreciate your prompt reply.

Moh.Maher






From Chris.Barker at noaa.gov  Thu Dec  4 09:50:33 2008
From: Chris.Barker at noaa.gov (Christopher Barker)
Date: Thu, 04 Dec 2008 09:50:33 -0800
Subject: [Proj] "Double ellipsoid" case?
In-Reply-To: <767EEBB436CE4A7B9E44A3E0A923FF34@PowerSpec>
References: <FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se>
	<2093181007.1357761228337987207.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
	<767EEBB436CE4A7B9E44A3E0A923FF34@PowerSpec>
Message-ID: <49381869.3030301@noaa.gov>

Noel Zinn wrote:
> My apologies for being obtuse.  My 1.0067 scale and your 0.5 percent are 
> about the same (and it’s a function of latitude), but how differently we 
> react to knowledge of this fact.  The angular distortion and the scale 
> change are related, of course.  100 meters times the tangent of 0.4 
> degrees is about 70 centimeters.  That’s 7m per km and 70m per 10km.
> 
> For me (meters on the ground) it’s a big deal, while you just shrug it 
> off.

whether errors of that magnitude are a "big deal" or not completely 
depends on the application.

We're talking about google maps (and OSM, and ??) here: it's a web 
mapping application -- it shows roads, and gas stations, and whatever 
other features people have added to it.

No one is putting a dividers and protractor on their computer screen to 
measure things (at least I hope not!). At most they point on the map 
with mouse and want to know what's there (or where they clicked). I've 
haven't seen even a ruler tool on it (though it could be done, of 
course). Somewhere in this thread, I think someone calculated that the 
errors could add up to a pixel or two -- who click on a screen with an 
accuracy of one pixel?

So: what possible application do you have in mind where 0.5 percent 
error could matter?

one more note: if there was a ruler tool, it could (and should) convert 
pixel coords to lat-long, and do the distance calculation with that, anyway.

-Chris


-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov


From ndzinn at comcast.net  Thu Dec  4 11:21:32 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Thu, 4 Dec 2008 13:21:32 -0600
Subject: [Proj] "Double ellipsoid" case?
In-Reply-To: <49381869.3030301@noaa.gov>
References: <FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se><2093181007.1357761228337987207.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net><767EEBB436CE4A7B9E44A3E0A923FF34@PowerSpec>
	<49381869.3030301@noaa.gov>
Message-ID: <EDA982E7A121425689912B56A8EE565C@PowerSpec>

Chis,

Yes, it does depend on the application.  I typed the following on my PDA
this morning as a response to daan, but it addresses your question about my
application.

daan,

First, let me say that although I disagree with your perspective on the
Google Maps Projection (GMP), I do understand it and accept its validity.
There are other, equally valid perspectives, however.  I work in an industry
(oil) with lots of bright people in their fields who need geodetics and
cartography to do their jobs, but who do not share your knowledge or that of
Mikael in this area.  Blunders that can cost lots of money and can risk
lives are best avoided by standardized, well-documented procedures in
geodetics and cartography.  GMP is neither standard (ellipsoid switch
between the datum and the projection) nor well documented (or this thread
would not be so long - we've both learned something).  I regret that GMP is
the (free) de facto standard (as you call it) because (1) that encourages a
relaxation of prudent geodetic and cartographic practice in general and (2)
some creative GMP user will move a GMP map from the monitor to a paper chart
to the field where a regrettable mistake can happen. Regardless of its
asserted engineering optimality (I'd appreciate a reference) Google could
have made a better choice professionally (WGS84 ellipsoidal Mercator).  You
see it differently.  That's fine.  We just disagree. 

BTW, you won't find "Google Sphere" on the web.  It's just my way of
conceptualizing GMP.

Regards,
Noel


-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Christopher Barker
Sent: Thursday, December 04, 2008 11:51 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double ellipsoid" case?

Noel Zinn wrote:
> My apologies for being obtuse.  My 1.0067 scale and your 0.5 percent are 
> about the same (and it's a function of latitude), but how differently we 
> react to knowledge of this fact.  The angular distortion and the scale 
> change are related, of course.  100 meters times the tangent of 0.4 
> degrees is about 70 centimeters.  That's 7m per km and 70m per 10km.
> 
> For me (meters on the ground) it's a big deal, while you just shrug it 
> off.

whether errors of that magnitude are a "big deal" or not completely 
depends on the application.

We're talking about google maps (and OSM, and ??) here: it's a web 
mapping application -- it shows roads, and gas stations, and whatever 
other features people have added to it.

No one is putting a dividers and protractor on their computer screen to 
measure things (at least I hope not!). At most they point on the map 
with mouse and want to know what's there (or where they clicked). I've 
haven't seen even a ruler tool on it (though it could be done, of 
course). Somewhere in this thread, I think someone calculated that the 
errors could add up to a pixel or two -- who click on a screen with an 
accuracy of one pixel?

So: what possible application do you have in mind where 0.5 percent 
error could matter?

one more note: if there was a ruler tool, it could (and should) convert 
pixel coords to lat-long, and do the distance calculation with that, anyway.

-Chris


-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From strebe at aol.com  Thu Dec  4 12:07:57 2008
From: strebe at aol.com (strebe at aol.com)
Date: Thu, 04 Dec 2008 15:07:57 -0500
Subject: [Proj] Re: "Double ellipsoid" case?
In-Reply-To: <EDA982E7A121425689912B56A8EE565C@PowerSpec>
References: <FAF6E56B26D2044696772EBE89B15351014B44ED@posty.carmenta.se><2093181007.1357761228337987207.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net><767EEBB436CE4A7B9E44A3E0A923FF34@PowerSpec><49381869.3030301@noaa.gov>
	<EDA982E7A121425689912B56A8EE565C@PowerSpec>
Message-ID: <8CB24632269D01E-A54-42D@webmail-stg-d07.sysops.aol.com>


 


 Noel,

Thank you for summarizing. That largely concludes the discussion. I'll just clarify two matters:

>I regret that GMP is the (free) de facto standard (as you call it)
Actually, it is the practice of using geodetic data from the ellipsoid to project from a sphere that I meant to say is the de facto standard. It always has been. In practice, almost anyone who creates a small-scale map on the Mercator equatorial projection is doing exactly what the Google Maps projection does: culling their data from ellipsoidal datums but treating it as a spherical datum. That is because there is no data available for spherical datums and because the accuracy in play would not benefit from datum conversions. Google's novelty is extending that practice "all the way down" to large-scale mapping.

>Regardless of its asserted engineering optimality (I'd appreciate a reference)

I have no reference; hence my "it sure seems like it". I would be happy to defend that if anyone is interested.

Thanks, Noel, for an engaging discussion and for cogently presenting the geodesist's viewpoint.

Regards,
— daan Strebe



 

-----Original Message-----
From: Noel Zinn <ndzinn at comcast.net>
To: 'PROJ.4 and general Projections Discussions' <proj at lists.maptools.org>
Sent: Thu, 4 Dec 2008 11:21 am
Subject: RE: [Proj] "Double ellipsoid" case?










Chis,

Yes, it does depend on the application.  I typed the following on my PDA
this morning as a response to daan, but it addresses your question about my
applica
tion.

daan,

First, let me say that although I disagree with your perspective on the
Google Maps Projection (GMP), I do understand it and accept its validity.
There are other, equally valid perspectives, however.  I work in an industry
(oil) with lots of bright people in their fields who need geodetics and
cartography to do their jobs, but who do not share your knowledge or that of
Mikael in this area.  Blunders that can cost lots of money and can risk
lives are best avoided by standardized, well-documented procedures in
geodetics and cartography.  GMP is neither standard (ellipsoid switch
between the datum and the projection) nor well documented (or this thread
would not be so long - we've both learned something).  I regret that GMP is
the (free) de facto standard (as you call it) because (1) that encourages a
relaxation of prudent geodetic and cartographic practice in general and (2)
some creative GMP user will move a GMP map from the monitor to a paper chart
to the field where a regrettable mistake can happen. Regardless of its
asserted engineering optimality (I'd appreciate a reference) Google could
have made a better choice professionally (WGS84 ellipsoidal Mercator).  You
see it differently.  That's fine.  We just disagree. 

BTW, you won't find "Google Sphere" on the web.  It's just my way of
conceptualizing GMP.

Regards,
Noel


-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Christopher Barker
Sent: Thursday, December 04, 2008 11:51=2
0AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double ellipsoid" case?

Noel Zinn wrote:
> My apologies for being obtuse.  My 1.0067 scale and your 0.5 percent are 
> about the same (and it's a function of latitude), but how differently we 
> react to knowledge of this fact.  The angular distortion and the scale 
> change are related, of course.  100 meters times the tangent of 0.4 
> degrees is about 70 centimeters.  That's 7m per km and 70m per 10km.
> 
> For me (meters on the ground) it's a big deal, while you just shrug it 
> off.

whether errors of that magnitude are a "big deal" or not completely 
depends on the application.

We're talking about google maps (and OSM, and ??) here: it's a web 
mapping application -- it shows roads, and gas stations, and whatever 
other features people have added to it.

No one is putting a dividers and protractor on their computer screen to 
measure things (at least I hope not!). At most they point on the map 
with mouse and want to know what's there (or where they clicked). I've 
haven't seen even a ruler tool on it (though it could be done, of 
course). Somewhere in this thread, I think someone calculated that the 
errors could add up to a pixel or two -- who click on a screen with an 
accuracy of one pixel?

So: what possible application do you have in mind where 0.5 percent 
error could matter?

one more note: if there was a ruler tool, it could (and should) convert 
pixel
 coords to lat-long, and do the distance calculation with that, anyway.

-Chris


-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081204/b1442f55/attachment.html>

From ct529 at york.ac.uk  Fri Dec  5 01:18:23 2008
From: ct529 at york.ac.uk (Corrado Topi)
Date: Fri, 05 Dec 2008 09:18:23 +0000
Subject: [Proj] Mapping Africa in an equal area projection
Message-ID: <gharkv$q5h$1@ger.gmane.org>

Dear friends,

I would like to map distribution of some specimen over Africa at a
resolution of 100 km x 100 km (or even down to 25 km x 25 km): I believe I
need an Equal area projection. My original files, with the data, are .csv,
with lat/long + measurement (real number). I need to carry out some file
(.csv) transformation between projections. 

I gathered some information, and ended up with the following list of
candidate projections:

1) Sinusoidal
2) Equatorial Lambert Azimuthal Equal Area
3) Albers Equal Area (Conic)
4) Mollweide
5) Cylindrical Equal Area

I do not really know which one to choose. What do you recommend?

For each of them, which ellipsoid  and datum would you choose? 

I already read the usual stuff (like UGSPP 1395 document - Map Projections -
A Working Manual and co.).

Regards
-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK



From strebe at aol.com  Fri Dec  5 13:38:03 2008
From: strebe at aol.com (strebe at aol.com)
Date: Fri, 05 Dec 2008 16:38:03 -0500
Subject: [Proj] Re: Mapping Africa in an equal area projection
In-Reply-To: <gharkv$q5h$1@ger.gmane.org>
References: <gharkv$q5h$1@ger.gmane.org>
Message-ID: <8CB2538E30879EB-F04-CC@webmail-stg-d09.sysops.aol.com>


 Corrado:



 Of the candidates you list, I would call Mollweide inappropriate because it stretches Africa north-south to in order to reduce distortion elsewhere. It really is best left for world maps, where that compromise results in some benefit. Any of the others you list could be reasonable, depending on how they are constructed. 

Because Africa spans roughly
the same latitudinal range north as south, an equatorial Lambert
azimuthal equal-area is a fine choice, and will give you the lowest
distortion of the group. Nor are there any better projections to recommend without going exotic. Sinusoidal is not a common modern choice, and I do not recommend it in this case because you will end up with higher distortion around the periphery than the other projections, and with no compensation.

Unless your application would benefit from straight parallels and meridians, or unless your two standard parallels happen to be exactly latitudes of opposite sign, then Albers will always perform better than cylindric equal-area. But the advantages of Albers are largely lost on Africa unless you were willing to do something exotic like a heavily oblique aspect. Left with its standard parallels set to the graticule parallels, it would end up very similar to the cylindric equal-area (because the two standard parallels would be nearly latitudes of opposite sign), and in that case it cannot approach Lambert for low distortion across your region of interest. 

Regards,
— daan Strebe



 

-----Original Message-----
From:
 Corrado Topi <ct529 at york.ac.uk>
To: proj at lists.maptools.org
Sent: Fri, 5 Dec 2008 1:18 am
Subject: [Proj] Mapping Africa in an equal area projection










Dear friends,

I would like to map distribution of some specimen over Africa at a
resolution of 100 km x 100 km (or even down to 25 km x 25 km): I believe I
need an Equal area projection. My original files, with the data, are .csv,
with lat/long + measurement (real number). I need to carry out some file
(.csv) transformation between projections. 

I gathered some information, and ended up with the following list of
candidate projections:

1) Sinusoidal
2) Equatorial Lambert Azimuthal Equal Area
3) Albers Equal Area (Conic)
4) Mollweide
5) Cylindrical Equal Area

I do not really know which one to choose. What do you recommend?

For each of them, which ellipsoid  and datum would you choose? 

I already read the usual stuff (like UGSPP 1395 document - Map Projections -
A Working Manual and co.).

Regards
-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081205/fa6f0981/attachment.html>

From support.mn at elisanet.fi  Sat Dec  6 21:10:56 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sun, 7 Dec 2008 07:10:56 +0200 (EET)
Subject: [Proj] "Double Ellipsoid" error, reproduction
Message-ID: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>

Hello,

Let's try to reproduce the double ellipsoid case somehow. The candidate for that might
be such a situation where several projections use the same datum, but each projection
is using some different ellipsoid. Still the same datum parameters would be used. There
have to rise a situation where the conversion uses wrong ellipsoid either for the datum
conversion or the projection, if they have to always share the ellipsoid?!!

And that was the reason to introduce different names for different ellipsoids. One for the
projection and one for the datum conversion.

For example someone wants to inverse project some old map, which was calculated with
different ellipsoid than what is used in the normal "modern" datum conversion. Actually
exactly the Dutch case, which somebody was talking about. They got the usual 650 m
"north jump" due to the difference in ellipsoids... Either using wrongly same ellipsoids
for projection and datum or vice versa. (?)

Regards: Janne.



From geraldi.evenden at gmail.com  Sun Dec  7 07:25:09 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 7 Dec 2008 10:25:09 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
Message-ID: <200812071025.09909.geraldi.evenden@gmail.com>

I find this thread so incredible confusing I have tried to stay out of it 
entirely but I have one, maybe two questions:

I thought the basic detail operations of datum conversion were done in 
geographic data space (latitude-longitude) or perhaps x-y-z.  That is, you 
have to have the data in geographic space to do the datum conversion 
calculation.   True or False?

Also, ellipsoid factors are not part of the datum conversion as long as the 
data is in geographic coordinates:  True or False?

If the above is true, what does the ellipsoid values have to do with anything?  
That is a rhetorical question and the answer is obviously: nothing.

The question of the ellipsoid parameters only comes up when dealing with data 
in Cartesian coordinates which need to be transformed back to geographic 
coordinates for datum transformation.  The ellipsoid values are only a factor 
in de-projecting the points.

The ellipsoid chosen for the Cartesian projection is probably a capricious and 
arbitrary choice of the people who created the projected data in the first 
place.  I know of no LAW that requires someone to choose a particular 
ellipsoid purely because of the datum of the data.  The plotter may not have 
any idea as to the datum of the data.

If the issue is simply two completely separate operations--- datum conversion 
and ellipsoid-projection--- then what is all the discussion about???

What I am arguing is that the use of the ellipsoid parameters and datum 
conversion are two completely separate issues.  Thus the problem discussed in 
this thread is merely an issue finding the correct ellipsoid to get data back 
into geographic coordinates, doing a datum conversion, and selecting an 
arbitrary a new ellipsoid for the target display map.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ndzinn at comcast.net  Sun Dec  7 08:30:09 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Sun, 7 Dec 2008 10:30:09 -0600
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812071025.09909.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812071025.09909.geraldi.evenden@gmail.com>
Message-ID: <62908D8AC11542C9B9DD4FC4CEE45904@PowerSpec>

Gerald,

The input and output of datum transformations are geographical coordinates.
Some methods of datum transformation (e.g. NADCON, NTv2, multiple regression
equations) work in geographicals and ellipsoid parameters are not required.
Other methods of datum transformations (e.g. 3 through 7 parameter
similarity, Helmert, Bursa-Wolf, 10-parameter Molodensky-Badekas) require a
transit through geocentric Cartesian, Earth-Centered Earth-Fixed (ECEF)
coordinates for which ellipsoid parameters are required.  Datum
transformation parameters are always empirically derived and spatially
variant and, therefore, always contain error.  Map conversions (geographical
to grid) are merely mathematical mappings that are (theoretically) without
empirical error.  Except - and this is my objection in this thread
heretofore - except when the ellipsoid is changed and a datum transformation
is implicitly coupled with a map conversion.

So, the answers to your questions are (1) true and (2) false (in some
cases).

You are absolutely correct that there is no LAW about what a cartographer
does, limited by his or her own imagination, but there is a physical reality
for those who have an interest in conforming to it as closely as possible.
The best fit between physical reality and geographical coordinates is
defined by the ellipsoid in which the datum's least-squares adjustment of
survey data (collected in the real world, not in pixel space) was done.
Change the ellipsoid and the quality of the fit deteriorates (even in a
datum transformation and especially in a map conversion).  I already
demonstrated in this thread that Google Maps Projection grid coordinates
bear an undocumented relationship with physical reality for the casual user.


Regards,
Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
Sent: Sunday, December 07, 2008 9:25 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double Ellipsoid" error, reproduction

I find this thread so incredible confusing I have tried to stay out of it 
entirely but I have one, maybe two questions:

I thought the basic detail operations of datum conversion were done in 
geographic data space (latitude-longitude) or perhaps x-y-z.  That is, you 
have to have the data in geographic space to do the datum conversion 
calculation.   True or False?

Also, ellipsoid factors are not part of the datum conversion as long as the 
data is in geographic coordinates:  True or False?

If the above is true, what does the ellipsoid values have to do with
anything?  
That is a rhetorical question and the answer is obviously: nothing.

The question of the ellipsoid parameters only comes up when dealing with
data 
in Cartesian coordinates which need to be transformed back to geographic 
coordinates for datum transformation.  The ellipsoid values are only a
factor 
in de-projecting the points.

The ellipsoid chosen for the Cartesian projection is probably a capricious
and 
arbitrary choice of the people who created the projected data in the first 
place.  I know of no LAW that requires someone to choose a particular 
ellipsoid purely because of the datum of the data.  The plotter may not have

any idea as to the datum of the data.

If the issue is simply two completely separate operations--- datum
conversion 
and ellipsoid-projection--- then what is all the discussion about???

What I am arguing is that the use of the ellipsoid parameters and datum 
conversion are two completely separate issues.  Thus the problem discussed
in 
this thread is merely an issue finding the correct ellipsoid to get data
back 
into geographic coordinates, doing a datum conversion, and selecting an 
arbitrary a new ellipsoid for the target display map.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From geraldi.evenden at gmail.com  Sun Dec  7 09:09:41 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 7 Dec 2008 12:09:41 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <62908D8AC11542C9B9DD4FC4CEE45904@PowerSpec>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812071025.09909.geraldi.evenden@gmail.com>
	<62908D8AC11542C9B9DD4FC4CEE45904@PowerSpec>
Message-ID: <200812071209.41235.geraldi.evenden@gmail.com>

On Sunday 07 December 2008 11:30:09 am Noel Zinn wrote:
> Gerald,
	...
> (theoretically) without empirical error.  Except - and this is my objection
> in this thread heretofore - except when the ellipsoid is changed and a
> datum transformation is implicitly coupled with a map conversion.

I concur and that is where I am also having the most problem.  I have always 
viewed map conversions and datums as completely different entities.  This 
goes back to the early days of several of the programs that tightly bound the 
projections with the datum process and my pleas to more clearly separate the 
processes were pretty much ignored.

Alas.  :-(
...

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ndzinn at comcast.net  Sun Dec  7 10:12:44 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Sun, 7 Dec 2008 12:12:44 -0600
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812071209.41235.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi><200812071025.09909.geraldi.evenden@gmail.com><62908D8AC11542C9B9DD4FC4CEE45904@PowerSpec>
	<200812071209.41235.geraldi.evenden@gmail.com>
Message-ID: <40414C1C68FE40829227A7FCFE0CAE2C@PowerSpec>

Yes, and there is another inappropriate coupling, that of a datum with a
specific transformation to WGS84.  A local datum is not defined by its
transformation to WGS84 (but by some adjustment that probably happened
before WGS84 was defined).  That (derived, empirical) transformation to
WGS84 will depend upon the specific survey monuments occupied (spatial
variance and distortion in the local datum), the instruments used (GPS,
Doppler, how much data and how processed), and the date of derivation (since
the world datums vary over time).  Happily, many software vendors have come
to understand this and separate the transformation from the datum.  -Noel


-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
Sent: Sunday, December 07, 2008 11:10 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double Ellipsoid" error, reproduction

On Sunday 07 December 2008 11:30:09 am Noel Zinn wrote:
> Gerald,
	...
> (theoretically) without empirical error.  Except - and this is my
objection
> in this thread heretofore - except when the ellipsoid is changed and a
> datum transformation is implicitly coupled with a map conversion.

I concur and that is where I am also having the most problem.  I have always

viewed map conversions and datums as completely different entities.  This 
goes back to the early days of several of the programs that tightly bound
the 
projections with the datum process and my pleas to more clearly separate the

processes were pretty much ignored.

Alas.  :-(
...

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From geraldi.evenden at gmail.com  Sun Dec  7 13:18:33 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 7 Dec 2008 16:18:33 -0500
Subject: [Proj] Geodesic software
Message-ID: <200812071618.33192.geraldi.evenden@gmail.com>

On my website

http://members.verizon.net/~gerald.evenden/proj4/

a library of converted NGS Vincenty geodesic procedure and an application 
program, 'geodesic', are now available in geodesic20081207.tar.bz2.  In the 
case of a spherical earth Snyder's preferred equations are used.

The only additional requirement is a libproj4.a library.

The program 'geodesic' has a fairly detailed help assistance and the user 
should be successful without documentation.  Just start out with

geodesic
geod: earth ellps=WGS84 # set elliptical figure
geod: p1 20 30 # set base point in arc
geod: p2 30 45 # do an inverse projection
    Point 1 Lon: 20dE  Lat: 30dN
    Point 2 Lon: 30dE  Lat: 45dN
    Azimuth p1->p2: 25d1'34.18757"
    Distance: 1881597.763
    Azimuth p2->p1: 211d10'34.37818"
geod: vector 100000 45 # do a forward projection
    Point 1 Lon: 20dE  Lat: 30dN
    Point 2 Lon: 20d44'15.34034"E  Lat: 30d38'8.82286"N
    Azimuth p1->p2: 45d
    Distance: 100000.000
    Azimuth p2->p1: 225d22'20.44298"
geod: circle help # ask for help with arc generation
circle azimuth delta_azi

computes points along a circular arc centered at arc
structure node p1 and extending from arc node p2 in a
clockwise direction through an angle define by 'azimuth'
and divided by intermediate points at approximately 'az'
angular separation.
'circle 360 10' describes a circle of points at 10 degree
'delta_az' interval
geod: quit

That should give you an idea.

It is preliminary and any debug tries and suggestions would be appreciated.

All angular input are in the same format used by libproj4 and older pro4x 
versions.
-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From support.mn at elisanet.fi  Sun Dec  7 14:01:27 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Mon, 8 Dec 2008 00:01:27 +0200 (EET)
Subject: [Proj] "Double Ellipsoid" error, reproduction
Message-ID: <30613079.812881228687288253.JavaMail.support.mn@elisanet.fi>

I agree,

and especially there that the problem might rise mostly
when trying to reproject old maps to more accurate datums. If the job
of the pgm is only to create new maps and just draw them with a
plotter, there never exists this problem, since one can always use the
same ellipsoid. But in the world of old and different wild maps this
must be a rather common case.There it would be very nice to have
the possibility to adjust all parameters that affect the end product.
People who don't need that freedom, just would not use it...
(nothing more to learn!)

So:

dellps=something
pellps=something

or

ellps=something , when both are  the same.

To handle the Google Earth projection (when not rotated, north is upwards), one
might now write:

proj=nsper
pellps=sphere
lat_0=....
lon_0=....
h=....
dellps=WGS84
datum=WGS84
no_defs

And the dutch case:

proj=.....
pellps=the old special one
dellps=the current dutch ellipsoid
towgs84=something currently mostly used there, 7 par.
no_defs

Any suggestions?

Regards: Janne.

"If there is a weak point in the programming, at least 10% of
the population will always be there.."

--------------------------------------------------------------------------

Noel Zinn [ndzinn at comcast.net] kirjoitti: 
> Yes, and there is another inappropriate coupling, that of a datum with a
> specific transformation to WGS84.  A local datum is not defined by its
> transformation to WGS84 (but by some adjustment that probably happened
> before WGS84 was defined).  That (derived, empirical) transformation to
> WGS84 will depend upon the specific survey monuments occupied (spatial
> variance and distortion in the local datum), the instruments used (GPS,
> Doppler, how much data and how processed), and the date of derivation (since
> the world datums vary over time).  Happily, many software vendors have come
> to understand this and separate the transformation from the datum.  -Noel
> 
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
> Sent: Sunday, December 07, 2008 11:10 AM
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] "Double Ellipsoid" error, reproduction
> 
> On Sunday 07 December 2008 11:30:09 am Noel Zinn wrote:
> > Gerald,
> 	...
> > (theoretically) without empirical error.  Except - and this is my
> objection
> > in this thread heretofore - except when the ellipsoid is changed and a
> > datum transformation is implicitly coupled with a map conversion.
> 
> I concur and that is where I am also having the most problem.  I have always
> 
> viewed map conversions and datums as completely different entities.  This 
> goes back to the early days of several of the programs that tightly bound
> the 
> projections with the datum process and my pleas to more clearly separate the
> 
> processes were pretty much ignored.
> 
> Alas.  :-(
> ...
> 
> -- 
> The whole religious complexion of the modern world is due
> to the absence from Jerusalem of a lunatic asylum.
> -- Havelock Ellis (1859-1939) British psychologist
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From strebe at aol.com  Sun Dec  7 18:09:28 2008
From: strebe at aol.com (strebe)
Date: Sun, 07 Dec 2008 18:09:28 -0800
Subject: [Proj] RE: "Double Ellipsoid" error, reproduction
In-Reply-To: <62908D8AC11542C9B9DD4FC4CEE45904@PowerSpec>
Message-ID: <00C3B47B.047D.467C.BF30.6F416954D5EA@aol.com>

Noel, I object to this characterization:

______

Map conversions (geographical
to grid) are merely mathematical mappings that are (theoretically) without
empirical error. Except - and this is my objection in this thread
heretofore - except when the ellipsoid is changed and a datum transformation
is implicitly coupled with a map conversion.
______


As we discussed, the original geographic coordinates are recoverable through a known, rigorous process. There is nothing empirical; no information is lost; and there is no error. There is not even a good reason to state that the datum has changed in the case of Google Maps. They have simply defined a map projection of WGS84 that is not conformal.

Regards,
— daan Strebe


On Dec 7, 2008, at 8:30:09 AM, "Noel Zinn" <ndzinn at comcast.net> wrote:
From:   "Noel Zinn" <ndzinn at comcast.net>
Subject:    RE: [Proj] "Double Ellipsoid" error, reproduction
Date:   December 7, 2008 8:30:09 AM PST
To: "'PROJ.4 and general Projections Discussions'" <proj at lists.maptools.org>
Gerald,

The input and output of datum transformations are geographical coordinates.
Some methods of datum transformation (e.g. NADCON, NTv2, multiple regression
equations) work in geographicals and ellipsoid parameters are not required.
Other methods of datum transformations (e.g. 3 through 7 parameter
similarity, Helmert, Bursa-Wolf, 10-parameter Molodensky-Badekas) require a
transit through geocentric Cartesian, Earth-Centered Earth-Fixed (ECEF)
coordinates for which ellipsoid parameters are required. Datum
transformation parameters are always empirically derived and spatially
variant and, therefore, always contain error. Map conversions (geographical
to grid) are merely mathematical mappings that are (theoretically) without
empirical error. Except - and this is my objection in this thread
heretofore - except when the ellipsoid is changed and a datum transformation
is implicitly coupled with a map conversion.

So, the answers to your questions are (1) true and (2) false (in some
cases).

You are absolutely correct that there is no LAW about what a cartographer
does, limited by his or her own imagination, but there is a physical reality
for those who have an interest in conforming to it as closely as possible.
The best fit between physical reality and geographical coordinates is
defined by the ellipsoid in which the datum's least-squares adjustment of
survey data (collected in the real world, not in pixel space) was done.
Change the ellipsoid and the quality of the fit deteriorates (even in a
datum transformation and especially in a map conversion). I already
demonstrated in this thread that Google Maps Projection grid coordinates
bear an undocumented relationship with physical reality for the casual user.


Regards,
Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
Sent: Sunday, December 07, 2008 9:25 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double Ellipsoid" error, reproduction

I find this thread so incredible confusing I have tried to stay out of it 
entirely but I have one, maybe two questions:

I thought the basic detail operations of datum conversion were done in 
geographic data space (latitude-longitude) or perhaps x-y-z. That is, you 
have to have the data in geographic space to do the datum conversion 
calculation. True or False?

Also, ellipsoid factors are not part of the datum conversion as long as the 
data is in geographic coordinates: True or False?

If the above is true, what does the ellipsoid values have to do with
anything? 
That is a rhetorical question and the answer is obviously: nothing.

The question of the ellipsoid parameters only comes up when dealing with
data 
in Cartesian coordinates which need to be transformed back to geographic 
coordinates for datum transformation. The ellipsoid values are only a
factor 
in de-projecting the points.

The ellipsoid chosen for the Cartesian projection is probably a capricious
and 
arbitrary choice of the people who created the projected data in the first 
place. I know of no LAW that requires someone to choose a particular 
ellipsoid purely because of the datum of the data. The plotter may not have

any idea as to the datum of the data.

If the issue is simply two completely separate operations--- datum
conversion 
and ellipsoid-projection--- then what is all the discussion about???

What I am arguing is that the use of the ellipsoid parameters and datum 
conversion are two completely separate issues. Thus the problem discussed
in 
this thread is merely an issue finding the correct ellipsoid to get data
back 
into geographic coordinates, doing a datum conversion, and selecting an 
arbitrary a new ellipsoid for the target display map.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081207/72432fc4/attachment.html>

From warmerdam at pobox.com  Sun Dec  7 18:59:11 2008
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sun, 07 Dec 2008 21:59:11 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812071025.09909.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812071025.09909.geraldi.evenden@gmail.com>
Message-ID: <493C8D7F.90306@pobox.com>

Gerald I. Evenden wrote:
> I find this thread so incredible confusing I have tried to stay out of it 
> entirely but I have one, maybe two questions:
 >
> I thought the basic detail operations of datum conversion were done in 
> geographic data space (latitude-longitude) or perhaps x-y-z.  That is, you 
> have to have the data in geographic space to do the datum conversion 
> calculation.   True or False?
> 
> Also, ellipsoid factors are not part of the datum conversion as long as the 
> data is in geographic coordinates:  True or False?
> 
> If the above is true, what does the ellipsoid values have to do with anything?  
> That is a rhetorical question and the answer is obviously: nothing.

Gerald,

There are several methods for datum shifts.  Grid shift files seem to be
normally applied as latitude and longitude offsets varying over the region
of the grid shift file.  But the "towgs84" 3 and 7 parameter shifts are
applied in geocentric space.  So the lat/long values need to be converted
into geocentric coordinates in the source datum/ellipsoid, modified, then
converted from geocentric into lat/long again in the destination
datum/ellipsoid.  Improper ellipsoid values results in potentially
substantial differences.

> If the issue is simply two completely separate operations--- datum conversion 
> and ellipsoid-projection--- then what is all the discussion about???

This is why I believe it was suggested we should be able (potentially)
to use different ellipsoid values for the projection calculations and
for the datum shift.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From richard.greenwood at gmail.com  Sun Dec  7 19:43:25 2008
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Sun, 7 Dec 2008 20:43:25 -0700
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <493C8D7F.90306@pobox.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812071025.09909.geraldi.evenden@gmail.com>
	<493C8D7F.90306@pobox.com>
Message-ID: <ae9185aa0812071943r3f741d01s332d5fbce78234ee@mail.gmail.com>

On Sun, Dec 7, 2008 at 7:59 PM, Frank Warmerdam <warmerdam at pobox.com> wrote:

> This is why I believe it was suggested we should be able (potentially)
> to use different ellipsoid values for the projection calculations and
> for the datum shift.

Which seems like it would solve all the problems (at least the
technical problems) discussed thus far in this thread. But there is no
way to do this in the existing implementation of cs2cs - please
correct me if I am wrong. I've not seen software that allows different
ellipsoids for the projection and datum. Does such software exist?
Frank - is this something that you would contemplate adding to cs2cs?

Rich

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From geraldi.evenden at gmail.com  Sun Dec  7 19:45:12 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 7 Dec 2008 22:45:12 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <493C8D7F.90306@pobox.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812071025.09909.geraldi.evenden@gmail.com>
	<493C8D7F.90306@pobox.com>
Message-ID: <200812072245.12851.geraldi.evenden@gmail.com>

On Sunday 07 December 2008 9:59:11 pm Frank Warmerdam wrote:
> Gerald I. Evenden wrote:
> > I find this thread so incredible confusing I have tried to stay out of it
	...
> > If the issue is simply two completely separate operations--- datum
> > conversion and ellipsoid-projection--- then what is all the discussion
> > about???
>
> This is why I believe it was suggested we should be able (potentially)
> to use different ellipsoid values for the projection calculations and
> for the datum shift.

I do not think we are in any disagreement.  Diagramatically I look at the 
whole problem simply as:

original map data
with known projection
and projection ellipsoid
(it might even be a sphere)
              |
              V
inv. project with above
ellipsoid and proj param.
               |
               V
geographic data
               |
               V
datum shift with whatever
info it takes.
               |
               V
geographic data in terms of new datum
               |
               V
project to new map with
parameters and proj ellipsoid
of choice (maybe a sphere)

The nature of the projection at either end of the above operation is 
completely arbitrary as is the ellipsoid and/or sphere to which it is 
projected.  The user *only* has to know how the original data was projected 
and its parameters and record for posterity how he/she created the new map.

This is why I looked at cs2cs as simply the following procedure:

proj4 -I <params> | datum_convert <params> | proj4 <params>

with either end of the pipeline possibly missing.  For the unwashed user all 
one had to do was make a wrapper program and generate the above pipe string 
to pass to a system call.

If the something like the above had been used it would be a lot easier to 
update the process with later releases of projection software.  ;-)

As a bit of amusing history: the above approach to piecemealling the processes 
dates back to my experience writing programs for the IBM 360 where the 
computer division chief charged extra for any program that took over 110Kb of 
memory.  Besides learning to be tight programmers we also became whizes at 
using JCL.  (For the young ones, JCL stands for Job Control Language where 
one creates pipes the hard way).

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From geraldi.evenden at gmail.com  Sun Dec  7 19:57:44 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Sun, 7 Dec 2008 22:57:44 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <ae9185aa0812071943r3f741d01s332d5fbce78234ee@mail.gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<493C8D7F.90306@pobox.com>
	<ae9185aa0812071943r3f741d01s332d5fbce78234ee@mail.gmail.com>
Message-ID: <200812072257.44454.geraldi.evenden@gmail.com>

On Sunday 07 December 2008 10:43:25 pm Richard Greenwood wrote:
> On Sun, Dec 7, 2008 at 7:59 PM, Frank Warmerdam <warmerdam at pobox.com> wrote:
> > This is why I believe it was suggested we should be able (potentially)
> > to use different ellipsoid values for the projection calculations and
> > for the datum shift.
>
> Which seems like it would solve all the problems (at least the
> technical problems) discussed thus far in this thread. But there is no
> way to do this in the existing implementation of cs2cs - please
> correct me if I am wrong. I've not seen software that allows different
> ellipsoids for the projection and datum. Does such software exist?
> Frank - is this something that you would contemplate adding to cs2cs?
>
> Rich

This email and my previous one with the flow chart brings up the question Is 
it possible to code of a datum shift procedure that merely expects geographic 
on sysin and spews out datum shifted geographic on sysout.

With that process, Rich can do anything he wants if he is willing to contruct 
a pipe procedure and learn to directly use proj4 or lproj.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From richard.greenwood at gmail.com  Sun Dec  7 20:06:21 2008
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Sun, 7 Dec 2008 21:06:21 -0700
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812072245.12851.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812071025.09909.geraldi.evenden@gmail.com>
	<493C8D7F.90306@pobox.com>
	<200812072245.12851.geraldi.evenden@gmail.com>
Message-ID: <ae9185aa0812072006p6d8da795g55785c8ee125642d@mail.gmail.com>

On Sun, Dec 7, 2008 at 8:45 PM, Gerald I. Evenden
<geraldi.evenden at gmail.com> wrote:
> On Sunday 07 December 2008 9:59:11 pm Frank Warmerdam wrote:
>> Gerald I. Evenden wrote:
>> > I find this thread so incredible confusing I have tried to stay out of it
>        ...
>> > If the issue is simply two completely separate operations--- datum
>> > conversion and ellipsoid-projection--- then what is all the discussion
>> > about???
>>
>> This is why I believe it was suggested we should be able (potentially)
>> to use different ellipsoid values for the projection calculations and
>> for the datum shift.
>
> I do not think we are in any disagreement.  Diagramatically I look at the
> whole problem simply as:
>
> original map data
> with known projection
> and projection ellipsoid
> (it might even be a sphere)
>              |
>              V
> inv. project with above
> ellipsoid and proj param.
>               |
>               V
> geographic data
>               |
>               V
> datum shift with whatever
> info it takes.
>               |
>               V
> geographic data in terms of new datum
>               |
>               V
> project to new map with
> parameters and proj ellipsoid
> of choice (maybe a sphere)
>
> The nature of the projection at either end of the above operation is
> completely arbitrary as is the ellipsoid and/or sphere to which it is
> projected.  The user *only* has to know how the original data was projected
> and its parameters and record for posterity how he/she created the new map.
>
> This is why I looked at cs2cs as simply the following procedure:
>
> proj4 -I <params> | datum_convert <params> | proj4 <params>

That is essentially what cs2cs does. I believe the problem is that
there is no mechanism to provide different parameters for the
projection and the datum shift. The coordinate system is most often
defined by EPSG code, and I have not seen EPSG codes that distinguish
between projection ellipsoid and datum ellipsoid.

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From ndzinn at comcast.net  Sun Dec  7 20:10:59 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Sun, 7 Dec 2008 22:10:59 -0600
Subject: [Proj] RE: "Double Ellipsoid" error, reproduction
In-Reply-To: <00C3B47B.047D.467C.BF30.6F416954D5EA@aol.com>
References: <62908D8AC11542C9B9DD4FC4CEE45904@PowerSpec>
	<00C3B47B.047D.467C.BF30.6F416954D5EA@aol.com>
Message-ID: <2D07DE48D6814AC18F4A84F362B6001F@PowerSpec>

daan,

 

Your objection constitutes a valid perspective, as we agreed.  I have a
different perspective.

 

The fact that the original geographic coordinates are recoverable through a
known, rigorous process does not support your case.  The geographic
coordinates of the original datum are always recoverable with a reverse
transformation from the geographicals of the transformed datum (well, except
for the 10-parameter Molodensky-Badekas, which is almost invertible with
negligible discrepancies).  Thats why consistent use of the same
transformation is more important than switching to a more accurate
transformation as new empirical evidence comes in.  

 

But you make a strong point in that There is nothing empirical; no
information is lost; and there is no error, at least in the mathematical
sense.  On the other hand, my experience is replete with naïve users
switching ellipsoids with zero geocentric offsets and getting into trouble.
This is risky behavior that should be discouraged in my perspective (working
in an industry that is already risky).  But your statement is technically
correct.  Furthermore, this ellipsoid switch in the first stage of Google
Maps Projection (GMP) is not a transformation of the 7-parameter of the
similarity type (Helmert, Bursa Wolf), which is conformal, at least in ECEF
(XYZ) space.  We have already established that this ellipsoid switch is the
cause of the non-conformality in the GMP.  

 

However, I take issue with your statement that Google have simply defined a
map projection.  Any defined map projection should have defined
distortions, even non-conformal projections.  I demonstrated how a user can
extract geodesic distances from grid coordinates and point scale factors
using Simpsons Approximation.  Thats the way most surveyors work (I
believe), not using (recovered) geographicals and geodesic computations,
though we may agree thats the best route.  What user knows to take the
WGS84 ratio of rho and nu (the radii of curvature in the meridian and prime
vertical) with the Equatorial radius and apply those to the spherical
Mercator point scales in order to find the real distortions in GMP?  If
Google havent defined that they havent defined a map projection.  If they
have, Id appreciate a reference.

 

These issues are buried in the noise for small scale maps, as you have
mentioned.  But the novelty of GMP is my concern, and that is that these
undocumented distortions are present in large scale maps that might be used
for real work in the field.  

 

We have different perspectives.  On one hand, GMP is just another projection
in the universe of possible projections (which is true).  On the other hand,
GMP is risky (Id rather say deviant) cartographic behavior (which is also
true).  

 

Thanks for catching my lapse,

Noel

 

  _____  

From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of strebe
Sent: Sunday, December 07, 2008 8:09 PM
To: PROJ.4 and general Projections Discussions
Subject: [Proj] RE: "Double Ellipsoid" error, reproduction

 

Noel, I object to this characterization:

 

______

 

Map conversions (geographical
to grid) are merely mathematical mappings that are (theoretically) without
empirical error. Except - and this is my objection in this thread
heretofore - except when the ellipsoid is changed and a datum transformation
is implicitly coupled with a map conversion.

______

 

 

As we discussed, the original geographic coordinates are recoverable through
a known, rigorous process. There is nothing empirical; no information is
lost; and there is no error. There is not even a good reason to state that
the datum has changed in the case of Google Maps. They have simply defined a
map projection of WGS84 that is not conformal.

 

Regards,

 daan Strebe

 


On Dec 7, 2008, at 8:30:09 AM, "Noel Zinn" <ndzinn at comcast.net> wrote:


From:

"Noel Zinn" <ndzinn at comcast.net>


Subject:

RE: [Proj] "Double Ellipsoid" error, reproduction


Date:

December 7, 2008 8:30:09 AM PST


To:

"'PROJ.4 and general Projections Discussions'" <proj at lists.maptools.org>

Gerald,

The input and output of datum transformations are geographical coordinates.
Some methods of datum transformation (e.g. NADCON, NTv2, multiple regression
equations) work in geographicals and ellipsoid parameters are not required.
Other methods of datum transformations (e.g. 3 through 7 parameter
similarity, Helmert, Bursa-Wolf, 10-parameter Molodensky-Badekas) require a
transit through geocentric Cartesian, Earth-Centered Earth-Fixed (ECEF)
coordinates for which ellipsoid parameters are required. Datum
transformation parameters are always empirically derived and spatially
variant and, therefore, always contain error. Map conversions (geographical
to grid) are merely mathematical mappings that are (theoretically) without
empirical error. Except - and this is my objection in this thread
heretofore - except when the ellipsoid is changed and a datum transformation
is implicitly coupled with a map conversion.

So, the answers to your questions are (1) true and (2) false (in some
cases).

You are absolutely correct that there is no LAW about what a cartographer
does, limited by his or her own imagination, but there is a physical reality
for those who have an interest in conforming to it as closely as possible.
The best fit between physical reality and geographical coordinates is
defined by the ellipsoid in which the datum's least-squares adjustment of
survey data (collected in the real world, not in pixel space) was done.
Change the ellipsoid and the quality of the fit deteriorates (even in a
datum transformation and especially in a map conversion). I already
demonstrated in this thread that Google Maps Projection grid coordinates
bear an undocumented relationship with physical reality for the casual user.


Regards,
Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
Sent: Sunday, December 07, 2008 9:25 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double Ellipsoid" error, reproduction

I find this thread so incredible confusing I have tried to stay out of it 
entirely but I have one, maybe two questions:

I thought the basic detail operations of datum conversion were done in 
geographic data space (latitude-longitude) or perhaps x-y-z. That is, you 
have to have the data in geographic space to do the datum conversion 
calculation. True or False?

Also, ellipsoid factors are not part of the datum conversion as long as the 
data is in geographic coordinates: True or False?

If the above is true, what does the ellipsoid values have to do with
anything? 
That is a rhetorical question and the answer is obviously: nothing.

The question of the ellipsoid parameters only comes up when dealing with
data 
in Cartesian coordinates which need to be transformed back to geographic 
coordinates for datum transformation. The ellipsoid values are only a
factor 
in de-projecting the points.

The ellipsoid chosen for the Cartesian projection is probably a capricious
and 
arbitrary choice of the people who created the projected data in the first 
place. I know of no LAW that requires someone to choose a particular 
ellipsoid purely because of the datum of the data. The plotter may not have

any idea as to the datum of the data.

If the issue is simply two completely separate operations--- datum
conversion 
and ellipsoid-projection--- then what is all the discussion about???

What I am arguing is that the use of the ellipsoid parameters and datum 
conversion are two completely separate issues. Thus the problem discussed
in 
this thread is merely an issue finding the correct ellipsoid to get data
back 
into geographic coordinates, doing a datum conversion, and selecting an 
arbitrary a new ellipsoid for the target display map.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081207/13052278/attachment.html>

From warmerdam at pobox.com  Sun Dec  7 20:18:50 2008
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sun, 07 Dec 2008 23:18:50 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812072257.44454.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<493C8D7F.90306@pobox.com>
	<ae9185aa0812071943r3f741d01s332d5fbce78234ee@mail.gmail.com>
	<200812072257.44454.geraldi.evenden@gmail.com>
Message-ID: <493CA02A.9020508@pobox.com>

Gerald I. Evenden wrote:
> On Sunday 07 December 2008 10:43:25 pm Richard Greenwood wrote:
>> On Sun, Dec 7, 2008 at 7:59 PM, Frank Warmerdam <warmerdam at pobox.com> wrote:
>>> This is why I believe it was suggested we should be able (potentially)
>>> to use different ellipsoid values for the projection calculations and
>>> for the datum shift.
>> Which seems like it would solve all the problems (at least the
>> technical problems) discussed thus far in this thread. But there is no
>> way to do this in the existing implementation of cs2cs - please
>> correct me if I am wrong. I've not seen software that allows different
>> ellipsoids for the projection and datum. Does such software exist?
>> Frank - is this something that you would contemplate adding to cs2cs?

Rich,

Using a different ellipsoid for the datum shift and the projection logic
is not currently supported by PROJ.4.  I would be willing to contemplate
adding it, though I'm concerned it would be messy and might not really be
used a great deal.

One of the things I had hoped to evaluate was just how often the
ellipsoid for projection and datum shifting purposes are not the same. Also
if it turns out that in essentially all such cases the geographic
coordinates are just supposed to be treated as WGS84 we can just
use the +nadgrids=@null trick which essentially means treat the shift
to WGS84 as being a null shift in geographic (lat/long) space.

Gerald I. Evenden wrote:
> This email and my previous one with the flow chart brings up the question Is 
> it possible to code of a datum shift procedure that merely expects geographic 
> on sysin and spews out datum shifted geographic on sysout.
> 
> With that process, Rich can do anything he wants if he is willing to contruct 
> a pipe procedure and learn to directly use proj4 or lproj.

Yes, this is possible now using pipelining something like:

proj4 -I +proj=merc +ellps=sphere
    | cs2cs +proj=latlong +datum=WGS84 +to +proj=latlong +datum=potsdam
    | proj +proj=... +datum=potsdam

In the above scenario the original projection from mercator would be
done using a sphere, while the datum shift is done assuming a WGS84 ellipsoid.

However, it is not practical for most folks using PROJ.4 in an application
to do the transformation with a pipeline ... instead the API is called
directly with a coordinate system defined using pj_init() for the source
and destination of a pj_transform() call.  In general (for stuff like
MapServer, GDAL, GRASS, QGIS) all the user can specify is the textual
PROJ.4 representation of the source and destination coordinate system.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From strebe at aol.com  Mon Dec  8 01:42:33 2008
From: strebe at aol.com (strebe)
Date: Mon, 08 Dec 2008 01:42:33 -0800
Subject: [Proj] RE: "Double Ellipsoid" error, reproduction
In-Reply-To: <2D07DE48D6814AC18F4A84F362B6001F@PowerSpec>
Message-ID: <283CD560.5CC1.4B07.B8E2.342CA05105C2@aol.com>

Noel,

I believe this excerpt illuminates why we have different perspectives. You wrote:

However, I take issue with your statement that Google “have simply defined a map projection”.  Any defined map projection should have defined distortions, even non-conformal projections.  I demonstrated how a user can extract geodesic distances from grid coordinates and point scale factors using Simpson’s Approximation.  That’s the way most surveyors work (I believe), not using (recovered) geographicals and geodesic computations, though we may agree that’s the best route.  What user knows to take the WGS84 ratio of rho and nu (the radii of curvature in the meridian and prime vertical) with the Equatorial radius and apply those to the spherical Mercator point scales in order to find the real distortions in GMP?  If Google haven’t defined that they haven’t defined a map projection.  If they have, I’d appreciate a reference. 

These issues are buried in the noise for small scale maps, as you have mentioned.  But the “novelty” of GMP is my concern, and that is that these undocumented distortions are present in large scale maps that might be used for real work in the field. 


Google Maps is for finding routes for automobile trips on roads. The application and its user interface are constructed for that purpose, and their Terms of Use reflect that. Indeed, with respect to the optional photographic imagery, commercial use of any kind is prohibited. While they recognize and provide for other uses, you might as well be taking an AAA map to task for showing a road's line caricature as wider than its to-scale width when there never was any implication that it was supposed to be to scale.

I never thought of the products of Google Maps as surveying tools or as maps providing rigorous information with known, bounded error. People who use their maps that way are asking for trouble. The data, as spelled out in the Terms of Use, are culled and amalgamated from a variety of sources, the accuracy of which cannot be assumed. I don't have much sympathy for people who expect professional results from free, online services. They should go to you for professional services and pay you well for them.

I do not agree that a map projection must define point scale errors in order to be called a map projection. Of the two hundred odd map projections I have written program code for using original sources, perhaps a tithe come with developing formulæ for point scale and for angular distortion. Only a handful come with developing formulæ for the ellipsoid — which is unnecessary anyway, given auxiliary latitudes, unless some specific property is intended to be preserved beyond that preserved by the auxiliary latitude. The fact that Google does not publish distortion formulæ does not mean it is unknowable. As these things go, the derivation is simple. Even if an analytic derivation were not available, numeric techniques suffice.

I'm fairly sure I understand your points. I'm just extremely skeptical of disparaging Google for not adhering to practices defined by a profession outside their purview on complaints arising from uses they specifically disclaim. The benefits Google Maps brings to the public drastically outweigh the importance of this highly technical debate. Perhaps it is your opinion that the service could have been so much the better if they had only stuck with a conformal ellipsoidal development. In my opinion, that improvement, if it is one at all, would be outweighed by the electrical costs of the computations or even by the probability of introducing programming errors: conformal inverse ellipsoidal projections are not trivial to code for.

I need to bow out of this conversation; I really don't think there's much more to say and I'm sure a lot of our audience has already gone home. Still, I'm uncomfortable letting a one-sided (and rather negative) interpretation prevail, particularly if it has practical implications. 

Thanks & regards,
— daan Strebe


On Dec 7, 2008, at 8:10:59 PM, "Noel Zinn" <ndzinn at comcast.net> wrote:
From:   "Noel Zinn" <ndzinn at comcast.net>
Subject:    RE: [Proj] RE: "Double Ellipsoid" error, reproduction
Date:   December 7, 2008 8:10:59 PM PST
To: "'PROJ.4 and general Projections Discussions'" <proj at lists.maptools.org>
daan,

 

Your objection constitutes a valid perspective, as we agreed.  I have a different perspective.

 

The fact that “the original geographic coordinates are recoverable through a known, rigorous process” does not support your case.  The geographic coordinates of the original datum are always recoverable with a reverse transformation from the geographicals of the transformed datum (well, except for the 10-parameter Molodensky-Badekas, which is almost invertible with negligible discrepancies).  That’s why consistent use of the same transformation is more important than switching to a “more accurate” transformation as new empirical evidence comes in. 

 

But you make a strong point in that “There is nothing empirical; no information is lost; and there is no error”, at least in the mathematical sense.  On the other hand, my experience is replete with naïve users switching ellipsoids with zero geocentric offsets and getting into trouble.  This is risky behavior that should be discouraged in my perspective (working in an industry that is already risky).  But your statement is technically correct.  Furthermore, this ellipsoid switch in the first stage of Google Maps Projection (GMP) is not a transformation of the 7-parameter of the similarity type (Helmert, Bursa Wolf), which is conformal, at least in ECEF (XYZ) space.  We have already established that this ellipsoid switch is the cause of the non-conformality in the GMP. 

 

However, I take issue with your statement that Google “have simply defined a map projection”.  Any defined map projection should have defined distortions, even non-conformal projections.  I demonstrated how a user can extract geodesic distances from grid coordinates and point scale factors using Simpson’s Approximation.  That’s the way most surveyors work (I believe), not using (recovered) geographicals and geodesic computations, though we may agree that’s the best route.  What user knows to take the WGS84 ratio of rho and nu (the radii of curvature in the meridian and prime vertical) with the Equatorial radius and apply those to the spherical Mercator point scales in order to find the real distortions in GMP?  If Google haven’t defined that they haven’t defined a map projection.  If they have, I’d appreciate a reference.

 

These issues are buried in the noise for small scale maps, as you have mentioned.  But the “novelty” of GMP is my concern, and that is that these undocumented distortions are present in large scale maps that might be used for real work in the field. 

 

We have different perspectives.  On one hand, GMP is just another projection in the universe of possible projections (which is true).  On the other hand, GMP is risky (I’d rather say deviant) cartographic behavior (which is also true). 

 

Thanks for catching my lapse,

Noel

 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081208/2e57762a/attachment.html>

From ct529 at york.ac.uk  Mon Dec  8 02:50:49 2008
From: ct529 at york.ac.uk (Corrado Topi)
Date: Mon, 08 Dec 2008 10:50:49 +0000
Subject: [Proj] Re: Mapping Africa in an equal area projection
References: <gharkv$q5h$1@ger.gmane.org>
	<8CB2538E30879EB-F04-CC@webmail-stg-d09.sysops.aol.com>
Message-ID: <ghiu69$ss3$1@ger.gmane.org>

Thanks Daan!

What ellipsoid / datum, would you choose? WGS84, ETRS89, or waht else?

Regards


strebe at aol.com wrote:

> 
>  Corrado:
> 
> 
> 
>  Of the candidates you list, I would call Mollweide inappropriate because
>  it stretches Africa north-south to in order to reduce distortion
>  elsewhere. It really is best left for world maps, where that compromise
>  results in some benefit. Any of the others you list could be reasonable,
>  depending on how they are constructed.
> 
> Because Africa spans roughly
> the same latitudinal range north as south, an equatorial Lambert
> azimuthal equal-area is a fine choice, and will give you the lowest
> distortion of the group. Nor are there any better projections to recommend
> without going exotic. Sinusoidal is not a common modern choice, and I do
> not recommend it in this case because you will end up with higher
> distortion around the periphery than the other projections, and with no
> compensation.
> 
> Unless your application would benefit from straight parallels and
> meridians, or unless your two standard parallels happen to be exactly
> latitudes of opposite sign, then Albers will always perform better than
> cylindric equal-area. But the advantages of Albers are largely lost on
> Africa unless you were willing to do something exotic like a heavily
> oblique aspect. Left with its standard parallels set to the graticule
> parallels, it would end up very similar to the cylindric equal-area
> (because the two standard parallels would be nearly latitudes of opposite
> sign), and in that case it cannot approach Lambert for low distortion
> across your region of interest.
> 
> Regards,
> — daan Strebe


-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK



From Mikael.Rittri at carmenta.com  Mon Dec  8 04:22:12 2008
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 8 Dec 2008 13:22:12 +0100
Subject: [Proj] RE: "Double Ellipsoid" error, reproduction
In-Reply-To: <2D07DE48D6814AC18F4A84F362B6001F@PowerSpec>
References: <62908D8AC11542C9B9DD4FC4CEE45904@PowerSpec><00C3B47B.047D.467C.BF30.6F416954D5EA@aol.com>
	<2D07DE48D6814AC18F4A84F362B6001F@PowerSpec>
Message-ID: <FAF6E56B26D2044696772EBE89B15351014B4895@posty.carmenta.se>

Summary:
-------
I think I now agree with Noel on all hard facts. We just have 
to find an objective way to translate the hard facts to the 
appropriate emotion, on a scale of 

1: Shrug,
2: Regret,
3: Contempt,
4: Loathing,
5: Smite the infidels with protractors.

Seriously, I will just grumble a bit about Simpson's rule.

Then I will - in reply to Richard Greenwood - list some software
that do implement spherical projection formulas on geodata from 
ellipsoidal datums. 

Long text:
---------
Noel Zinn wrote: 
> I demonstrated how a user can extract geodesic distances from grid 
> coordinates and point scale factors using Simpson's Approximation.
> That's the way most surveyors work (I believe), not using (recovered) 
> geographicals and geodesic computations, though we may agree that's
> the best route.  

Yes, you gave an impressive example where Simpson's rule
gave submillimeter accuracy over a distance of 111 km. 
[ http://lists.maptools.org/pipermail/proj/2008-December/004104.html ]

> What user knows to take the WGS84 ratio of rho and nu (the radii of
> curvature in the meridian and prime vertical) with the Equatorial
> radius and apply those to the spherical Mercator point scales in
> order to find the real distortions in GMP?  

Okay, not many. On the other hand, how many users know how to use 
Simpson's rule in this situation?  From my own experience, our 
customers - jolly good chaps though they are, and perhaps reading 
this list - usually forget that there is a local scale factor 
to consider at all. So, for accuracy, we provide geodetic 
computations via geographic lon/lat. 

And Simpson's rule is just an approximation, good only for short distances.
If someone would use Simpson's rule to compute the geodetic distance 
from New York (let's say 74°W, 41°N exactly) to Istanbul (let's say 
29°E, 41°N exactly), on the WGS84 / Ellipsoid Mercator, I think they 
would get a distance of 8665924.07 m, which is very accurate - but 
it is the distance along the 41°N parallel circle. Because Simpson's 
rule cannot handle that geodetic lines will appear curved in Mercator.  
The true geodetic distance is only 8071386.81 m, so Simpson's rule 
have overestimated the distance by 7.4 percent. Which should be 
compared with the 0.67 percent that we have agreed is the maximal 
difference between Sphere Mercator and Ellipsoid Mercator.


Richard Greenwood wrote: 
> I've not seen software that allows different ellipsoids
> for the projection and datum. Does such software exist?

Yes. In Carmenta Engine, the design is like this: 
A coordinate reference system is represented by a RefSystem object, 
which consists of a GeodeticDatum and a Projection. Normally, 
the reference ellipsoid is specified as part of the GeodeticDatum,
and the Projection will use that ellipsoid.  However, the Mercator 
class has an extra parameter called Variant, whose value comes from
an enumeration type. 
*) A Mercator with Variant = #ellipsoid will (of course) use 
ellipsoid formulas on the ellipsoid defined by the GeodeticDatum.  
*) But a Mercator with Variant = #sphereEquatorialRadius will use 
spherical formulas on a sphere, whose radius equals the equatorial 
radius of the ellipsoid.  
*) A third possibility, Variant = #sphereNautMileIsMinute, will 
completely ignore the ellipsoid dimensions, and instead use a 
sphere whose radius is 6366707.0195 m, making 1 nautical mile 
equal to 1 arc minute. (This is an old Carmenta tradition.) 

This design is similar to the 2nd design mentioned by Melita Kennedy 
of ESRI [ http://lists.osgeo.org/pipermail/metacrs/2008-August/000144.html ]. 

GeoTools uses a somewhat different design 
[ http://lists.osgeo.org/pipermail/metacrs/2008-August/000143.html ].


Best regards
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com 




From geraldi.evenden at gmail.com  Mon Dec  8 07:39:44 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 8 Dec 2008 10:39:44 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <493CA02A.9020508@pobox.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812072257.44454.geraldi.evenden@gmail.com>
	<493CA02A.9020508@pobox.com>
Message-ID: <200812081039.44980.geraldi.evenden@gmail.com>

On Sunday 07 December 2008 11:18:50 pm Frank Warmerdam wrote:
> Gerald I. Evenden wrote:
> > On Sunday 07 December 2008 10:43:25 pm Richard Greenwood wrote:
	...
> > With that process, Rich can do anything he wants if he is willing to
> > contruct a pipe procedure and learn to directly use proj4 or lproj.
>
> Yes, this is possible now using pipelining something like:
>
> proj4 -I +proj=merc +ellps=sphere
>
>     | cs2cs +proj=latlong +datum=WGS84 +to +proj=latlong +datum=potsdam
>     | proj +proj=... +datum=potsdam

Whoa.  Proj or the versions I am familiar with do not recognize +datum=.  
Projections only care about ellipsoid parameters *not* datums.  I would 
rephrase:

proj4 -I +proj=merc +R=12..9 | cs2cs <options> | \
     proj4  +ellps=<Potsdam ellipsoid name>

> In the above scenario the original projection from mercator would be
> done using a sphere, while the datum shift is done assuming a WGS84
> ellipsoid.
>
> However, it is not practical for most folks using PROJ.4 in an application
> to do the transformation with a pipeline ... instead the API is called
> directly with a coordinate system defined using pj_init() for the source
> and destination of a pj_transform() call.  In general (for stuff like
> MapServer, GDAL, GRASS, QGIS) all the user can specify is the textual
> PROJ.4 representation of the source and destination coordinate system.

Would it not be possible to write cs2cs where all the proj control is 
available on both sides of the +to dividing line?  That is, the pipeline 
script in cs2cs would could look like:

cs2cs +proj=merc +R=12..9 +datum_conversion_options +to \
       +proj=merc +ellps=<Potsdam's ellipsoid>

If the "proj=" were omitted on either side, the +latlon would be the default.
The <datum conversion options> could be placed anywhere.

A big part of the problem is that things like EPSG or data sets defining US 
state plane coordinates system do indeed bind projection-ellipsoid-datum into 
a single definition.  And that is fine.  *BUT* we do need the flexibility to 
handle the odd case where the "cs" is not in a convenient library of standard 
systems.  The "cs" in cs2cs neet not be in EPSG or NAD data sets and the user 
should be free to define all the details themselves like I have proto'ed in 
the last script example.

cs2cs may already do this but it is unclear from current discussions.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From warmerdam at pobox.com  Mon Dec  8 08:01:33 2008
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 08 Dec 2008 11:01:33 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812081039.44980.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812072257.44454.geraldi.evenden@gmail.com>
	<493CA02A.9020508@pobox.com>
	<200812081039.44980.geraldi.evenden@gmail.com>
Message-ID: <493D44DD.6020200@pobox.com>

Gerald I. Evenden wrote:
>> Yes, this is possible now using pipelining something like:
>>
>> proj4 -I +proj=merc +ellps=sphere
>>
>>     | cs2cs +proj=latlong +datum=WGS84 +to +proj=latlong +datum=potsdam
>>     | proj +proj=... +datum=potsdam
> 
> Whoa.  Proj or the versions I am familiar with do not recognize +datum=.  

Gerald,

To be clear, I am speaking of the "PROJ.4" package - the substantially
altered derivative of the PROJ.4 you developed at the USGS, yet distinct
from the libproj4 project you now lead.  The PROJ.4 package has had
a +datum construct for several years now.  I would guess that the PROJ.4
package I'm speaking of is the one used by the vast majority of end users
on this list.

I would note that named datums in the currently PROJ.4 expand into
datum shift parameters and an ellipsoid.  The ellipsoid is then used
with the projection code.

warmerda at gdal64[1]% proj -ld
__datum_id__ __ellipse___ __definition/comments______________________________
        WGS84 WGS84        towgs84=0,0,0
       GGRS87 GRS80        towgs84=-199.87,74.79,246.62
                           Greek_Geodetic_Reference_System_1987
        NAD83 GRS80        towgs84=0,0,0
                           North_American_Datum_1983
        NAD27 clrk66       nadgrids=@conus, at alaska, at ntv2_0.gsb, at ntv1_can.dat
                           North_American_Datum_1927
      potsdam bessel       towgs84=606.0,23.0,413.0
                           Potsdam Rauenberg 1950 DHDN
...


> Projections only care about ellipsoid parameters *not* datums.  I would 
> rephrase:
> 
> proj4 -I +proj=merc +R=12..9 | cs2cs <options> | \
>      proj4  +ellps=<Potsdam ellipsoid name>

This is indeed an alternate way of expressing such a pipeline, but
I was trying to make a particular point.


> Would it not be possible to write cs2cs where all the proj control is 
> available on both sides of the +to dividing line?  That is, the pipeline 
> script in cs2cs would could look like:
> 
> cs2cs +proj=merc +R=12..9 +datum_conversion_options +to \
>        +proj=merc +ellps=<Potsdam's ellipsoid>

This is what was requested at the start of this thread - that is the
ability to specify a different ellipsoid to be used with the datum
conversion than is used with the projection method.  As I mentioned
to Rich this could be added if it were useful enough.

I would note that right now cs2cs does allow specifying the source
and destination projections.  I expressed the previous example as a pipeline
to show that the datum shift step could be isolated from the projection
steps via the pipeline mechanism using existing commands if desired.

> A big part of the problem is that things like EPSG or data sets defining US 
> state plane coordinates system do indeed bind projection-ellipsoid-datum into 
> a single definition.  And that is fine.  *BUT* we do need the flexibility to 
> handle the odd case where the "cs" is not in a convenient library of standard 
> systems.  The "cs" in cs2cs need not be in EPSG or NAD data sets and the user 
> should be free to define all the details themselves like I have proto'ed in 
> the last script example.
> 
> cs2cs may already do this but it is unclear from current discussions.

With the exception of now allowing distinct ellipsoids for datum shifts
as opposed to projection operations cs2cs does what you discuss above.
My previous email was not intended to be an exaustive explanation of what
cs2cs can do.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From geraldi.evenden at gmail.com  Mon Dec  8 09:10:28 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 8 Dec 2008 12:10:28 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <493D44DD.6020200@pobox.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081039.44980.geraldi.evenden@gmail.com>
	<493D44DD.6020200@pobox.com>
Message-ID: <200812081210.28259.geraldi.evenden@gmail.com>

On Monday 08 December 2008 11:01:33 am Frank Warmerdam wrote:
> Gerald I. Evenden wrote:
> >> Yes, this is possible now using pipelining something like:
> >>
> >> proj4 -I +proj=merc +ellps=sphere
> >>
> >>     | cs2cs +proj=latlong +datum=WGS84 +to +proj=latlong +datum=potsdam
> >>     | proj +proj=... +datum=potsdam
> >
> > Whoa.  Proj or the versions I am familiar with do not recognize +datum=.
>
> Gerald,
>
> To be clear, I am speaking of the "PROJ.4" package - the substantially
> altered derivative of the PROJ.4 you developed at the USGS, yet distinct
> from the libproj4 project you now lead.  The PROJ.4 package has had
> a +datum construct for several years now.  I would guess that the PROJ.4
> package I'm speaking of is the one used by the vast majority of end users
> on this list.

It was certainly modified beyond my wildest dreams.  :-(

> I would note that named datums in the currently PROJ.4 expand into
> datum shift parameters and an ellipsoid.  The ellipsoid is then used
> with the projection code.
>
> warmerda at gdal64[1]% proj -ld
> __datum_id__ __ellipse___
> __definition/comments______________________________ WGS84 WGS84       
> towgs84=0,0,0
>        GGRS87 GRS80        towgs84=-199.87,74.79,246.62
>                            Greek_Geodetic_Reference_System_1987
>         NAD83 GRS80        towgs84=0,0,0
>                            North_American_Datum_1983
>         NAD27 clrk66      
> nadgrids=@conus, at alaska, at ntv2_0.gsb, at ntv1_can.dat North_American_Datum_1927
>       potsdam bessel       towgs84=606.0,23.0,413.0
>                            Potsdam Rauenberg 1950 DHDN

Of course, this violates my oft repeated law: datums and projections are two 
entirely different entities.

This and remaining discussion is why I had so much difficulty understanding 
the early parts of this thread: I could not conceive that projections would 
be so tightly bound in with non-projection details so as to so severely 
inhibit the obvious inherent flexibility to be expected, at least to me, of 
cs2cs.

My assumptions were what blinded me.

I think more desirable approach is to create a d2d program with optional i/o 
filtering through projection procedures.  One might have options like:

d2d --in=EPSG1234 --out=NAD83_1105

where --in and --out may refer to library systems but one can also have

d2d --in=proj=latlon --datum_in=xyx --datum_out=mm \
          --out="proj=merc ellps=WGS84 R_A"

To me, that kills all mice with flexibility and ease of use.  *AND* you can 
easily use libproj4 updates.  ;-)

The --in --out part is relating to proj use is easy and doable in a couple of 
days.  I can't speak for the datum stuff as I remain, hopefully, totally 
ignorant of the details. ;-)

> > Projections only care about ellipsoid parameters *not* datums.  I would
> > rephrase:
> >
> > proj4 -I +proj=merc +R=12..9 | cs2cs <options> | \
> >      proj4  +ellps=<Potsdam ellipsoid name>
>
> This is indeed an alternate way of expressing such a pipeline, but
> I was trying to make a particular point.
>
> > Would it not be possible to write cs2cs where all the proj control is
> > available on both sides of the +to dividing line?  That is, the pipeline
> > script in cs2cs would could look like:
> >
> > cs2cs +proj=merc +R=12..9 +datum_conversion_options +to \
> >        +proj=merc +ellps=<Potsdam's ellipsoid>
>
> This is what was requested at the start of this thread - that is the
> ability to specify a different ellipsoid to be used with the datum
> conversion than is used with the projection method.  As I mentioned
> to Rich this could be added if it were useful enough.
>
> I would note that right now cs2cs does allow specifying the source
> and destination projections.  I expressed the previous example as a
> pipeline to show that the datum shift step could be isolated from the
> projection steps via the pipeline mechanism using existing commands if
> desired.
>
> > A big part of the problem is that things like EPSG or data sets defining
> > US state plane coordinates system do indeed bind
> > projection-ellipsoid-datum into a single definition.  And that is fine. 
> > *BUT* we do need the flexibility to handle the odd case where the "cs" is
> > not in a convenient library of standard systems.  The "cs" in cs2cs need
> > not be in EPSG or NAD data sets and the user should be free to define all
> > the details themselves like I have proto'ed in the last script example.
> >
> > cs2cs may already do this but it is unclear from current discussions.
>
> With the exception of now allowing distinct ellipsoids for datum shifts
> as opposed to projection operations cs2cs does what you discuss above.
> My previous email was not intended to be an exaustive explanation of what
> cs2cs can do.
>
> Best regards,



-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From warmerdam at pobox.com  Mon Dec  8 09:24:19 2008
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 08 Dec 2008 12:24:19 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812081210.28259.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081039.44980.geraldi.evenden@gmail.com>
	<493D44DD.6020200@pobox.com>
	<200812081210.28259.geraldi.evenden@gmail.com>
Message-ID: <493D5843.6040802@pobox.com>

Gerald I. Evenden wrote:
> I think more desirable approach is to create a d2d program with optional i/o 
> filtering through projection procedures.  One might have options like:
> 
> d2d --in=EPSG1234 --out=NAD83_1105
> 
> where --in and --out may refer to library systems but one can also have
> 
> d2d --in=proj=latlon --datum_in=xyx --datum_out=mm \
>           --out="proj=merc ellps=WGS84 R_A"

Gerald,

Modulo syntax differences, cs2cs can already be used just to do the datum
transformation step if desired.  So I don't see your point.

> To me, that kills all mice with flexibility and ease of use.  *AND* you can 
> easily use libproj4 updates.  ;-)

I would note that this still does nothing for the folks who use PROJ.4
within another program like MapServer or GDAL.  There typically the
application knows very little about the coordinate systems or what steps might
be used.  They just call pj_init() for the source and destination coordinate
system and then call pj_transform().

This is *by far* the most common use of PROJ.4 and then there is no
option to setup program pipelines.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From glynn at gclements.plus.com  Mon Dec  8 10:05:46 2008
From: glynn at gclements.plus.com (Glynn Clements)
Date: Mon, 8 Dec 2008 18:05:46 +0000
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812081039.44980.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812072257.44454.geraldi.evenden@gmail.com>
	<493CA02A.9020508@pobox.com>
	<200812081039.44980.geraldi.evenden@gmail.com>
Message-ID: <18749.25082.423792.971205@cerise.gclements.plus.com>


Gerald I. Evenden wrote:

> Would it not be possible to write cs2cs where all the proj control is 
> available on both sides of the +to dividing line?  That is, the pipeline 
> script in cs2cs would could look like:
> 
> cs2cs +proj=merc +R=12..9 +datum_conversion_options +to \
>        +proj=merc +ellps=<Potsdam's ellipsoid>
> 
> If the "proj=" were omitted on either side, the +latlon would be the default.
> The <datum conversion options> could be placed anywhere.
> 
> A big part of the problem is that things like EPSG or data sets defining US 
> state plane coordinates system do indeed bind projection-ellipsoid-datum into 
> a single definition.  And that is fine.  *BUT* we do need the flexibility to 
> handle the odd case where the "cs" is not in a convenient library of standard 
> systems.  The "cs" in cs2cs neet not be in EPSG or NAD data sets and the user 
> should be free to define all the details themselves like I have proto'ed in 
> the last script example.
> 
> cs2cs may already do this but it is unclear from current discussions.

cs2cs allows specification of an ellipsoid and/or datum for both the
source and destination . Essentially, you have a pipeline of:

	cartographic
	[inv.src.proj.]
	lat/lon
	[src.ellipsoid]
	geocentric
	[src.datum]
	WGS84
	[dst.datum]
	geocentric
	[dst.ellipsoid]
	lat/lon
	[fwd.dst.proj.]
	cartographic

(where some stages are optional).

However, you only get to specify two ellipsoids and two datums, so you
can't convert e.g. ED50 to WGS84 then project using spherical
Mercator; the final projection will automatically use the WGS84
ellipsoid parameters.

Presumably it was taken for granted that if you've gone to the trouble
of converting to a specific ellipsoid, you then want to use that
ellipsoid for the projection, rather than choosing a completely
different ellipsoid.

-- 
Glynn Clements <glynn at gclements.plus.com>


From geraldi.evenden at gmail.com  Mon Dec  8 10:35:27 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 8 Dec 2008 13:35:27 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <493D5843.6040802@pobox.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081210.28259.geraldi.evenden@gmail.com>
	<493D5843.6040802@pobox.com>
Message-ID: <200812081335.28031.geraldi.evenden@gmail.com>

On Monday 08 December 2008 12:24:19 pm Frank Warmerdam wrote:
> Gerald I. Evenden wrote:
> > I think more desirable approach is to create a d2d program with optional
> > i/o filtering through projection procedures.  One might have options
> > like:
> >
> > d2d --in=EPSG1234 --out=NAD83_1105
> >
> > where --in and --out may refer to library systems but one can also have
> >
> > d2d --in=proj=latlon --datum_in=xyx --datum_out=mm \
> >           --out="proj=merc ellps=WGS84 R_A"
>
> Gerald,
>
> Modulo syntax differences, cs2cs can already be used just to do the datum
> transformation step if desired.  So I don't see your point.
>
> > To me, that kills all mice with flexibility and ease of use.  *AND* you
> > can easily use libproj4 updates.  ;-)
>
> I would note that this still does nothing for the folks who use PROJ.4
> within another program like MapServer or GDAL.  There typically the
> application knows very little about the coordinate systems or what steps
> might be used.  They just call pj_init() for the source and destination
> coordinate system and then call pj_transform().

Hey!  I am out of this discussion.

What has been done, IMHO, is a grievous design flaw.  It is like slipping odd 
and unrelated attributes into the trigonometric library so as to "facilitate" 
the creation of a particular program.

There is nothing wrong with buffering ignorant users from the details of 
complex problems but *not* at the expense of poor coding practices.  There 
are many ways of doing this that would not require destroying the modularity 
of code sources.

A case in point.  As many of you know I used the GSL library recently.  I 
often use foreign libraries.  But in all of my usage of such sources I do not 
even look at the source code nor does the thought ever cross my mind to 
change such sources to facilitate some aspect of my particular problem.  If 
there is a usage problem, then it is up to my external code to work around 
it.  The result is that when an update to these libraries comes along I can 
normally easily update my own application by merely relinking the program.  I 
respect the "sanctity" of such source material in order to maintain my own 
flexibilty and coding sanity.

Obviously, this attitude has not been extended to the proj system by others.  
I have tried to maintain a consistancy of the proj library to support the 
above development philosophy that, as it seems, is purely my own.  The 
biggest change that I recall was translating the namespace from pj_ to proj_ 
and a few related items which would hopefull help avoid conflict with other 
software.  I believe that one can go back many years and not see any 
fundamental differences in the projection library.

Sorry to bore the non-programmers with a discussion of coding practices.

> This is *by far* the most common use of PROJ.4 and then there is no
> option to setup program pipelines.
>
> Best regards,



-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From strebe at aol.com  Mon Dec  8 12:57:54 2008
From: strebe at aol.com (strebe at aol.com)
Date: Mon, 08 Dec 2008 15:57:54 -0500
Subject: [Proj] Re: Mapping Africa in an equal area projection
In-Reply-To: <ghiu69$ss3$1@ger.gmane.org>
References: <gharkv$q5h$1@ger.gmane.org><8CB2538E30879EB-F04-CC@webmail-stg-d09.sysops.aol.com>
	<ghiu69$ss3$1@ger.gmane.org>
Message-ID: <8CB278EC5B9D6E3-129C-229@webmail-stg-d08.sysops.aol.com>




Corrado:

You did not indicate if you will be making a single map of all of Africa, or a series of much larger-scale maps. If it is a map of all of Africa, then your choice of ellipsoid is not going to matter much, in which case WGS84 is a good default because GPS data sources are already referred to the WGS84 datum and because datum conversion parameters normally are specified against WGS84.




Otherwise, use the ellipsoid and datum from which your source data are culled unless you have some specific reason not to. If your data come from many datums and ellipsoids, then again, it surely makes most sense to use WGS84 as a standard.




If you will be making a series of large-scale maps of (known) high accuracy, then it makes more sense to standardize on a datum that fits Africa better than WGS84. The Clarke 1880 ellipsoid dominates the extant African datums, but I am not aware of any named datum that has been formulated as a best fit for the entire African continent, though there are mean solutions for large regions, such as ARC 1950.




If your project is such a series of large-scale maps, by the way, I would not use an equal-area projection if I were you. A conformal projection will give more benefits on the ground and the areal inflation will be negligible until you reach medium-scale.





Regards,

— daan Strebe



-----Original Message-----
From: Corrado Topi <ct529 at york.ac.uk>
To: proj at lists.maptools.org
Sent: Mon, 8 Dec 2008 2:50 am
Subject:=2
0[Proj] Re: Mapping Africa in an equal area projection








Thanks Daan!

What ellipsoid / datum, would you choose? WGS84, ETRS89, or waht else?

Regards


strebe at aol.com wrote:

> 
>  Corrado:
> 
> 
> 
>  Of the candidates you list, I would call Mollweide inappropriate because
>  it stretches Africa north-south to in order to reduce distortion
>  elsewhere. It really is best left for world maps, where that compromise
>  results in some benefit. Any of the others you list could be reasonable,
>  depending on how they are constructed.
> 
> Because Africa spans roughly
> the same latitudinal range north as south, an equatorial Lambert
> azimuthal equal-area is a fine choice, and will give you the lowest
> distortion of the group. Nor are there any better projections to recommend
> without going exotic. Sinusoidal is not a common modern choice, and I do
> not recommend it in this case because you will end up with higher
> distortion around the periphery than the other projections, and with no
> compensation.
> 
> Unless your application would benefit from straight parallels and
> meridians, or unless your two standard parallels happen to be exactly
> latitudes of opposite sign, then Albers will always perform better than
> cylindric equal-area. But the advantages of Albers are largely lost on
> Africa unless you were willing to do something exotic like a heavily
> oblique aspect. Left with its standard parallels set to the graticule
> parallels, it would end up very 
similar to the cylindric equal-area
> (because the two standard parallels would be nearly latitudes of opposite
> sign), and in that case it cannot approach Lambert for low distortion
> across your region of interest.
> 
> Regards,
> — daan Strebe


-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



 





-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081208/d721ad37/attachment.html>

From richard.greenwood at gmail.com  Mon Dec  8 13:35:50 2008
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Mon, 8 Dec 2008 14:35:50 -0700
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812081335.28031.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081210.28259.geraldi.evenden@gmail.com>
	<493D5843.6040802@pobox.com>
	<200812081335.28031.geraldi.evenden@gmail.com>
Message-ID: <ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>

On Mon, Dec 8, 2008 at 11:35 AM, Gerald I. Evenden
<geraldi.evenden at gmail.com> wrote:
> On Monday 08 December 2008 12:24:19 pm Frank Warmerdam wrote:
>> Gerald I. Evenden wrote:
>> > I think more desirable approach is to create a d2d program with optional
>> > i/o filtering through projection procedures.  One might have options
>> > like:
>> >
>> > d2d --in=EPSG1234 --out=NAD83_1105
>> >
>> > where --in and --out may refer to library systems but one can also have
>> >
>> > d2d --in=proj=latlon --datum_in=xyx --datum_out=mm \
>> >           --out="proj=merc ellps=WGS84 R_A"
>>
>> Gerald,
>>
>> Modulo syntax differences, cs2cs can already be used just to do the datum
>> transformation step if desired.  So I don't see your point.
>>
>> > To me, that kills all mice with flexibility and ease of use.  *AND* you
>> > can easily use libproj4 updates.  ;-)
>>
>> I would note that this still does nothing for the folks who use PROJ.4
>> within another program like MapServer or GDAL.  There typically the
>> application knows very little about the coordinate systems or what steps
>> might be used.  They just call pj_init() for the source and destination
>> coordinate system and then call pj_transform().
>
> Hey!  I am out of this discussion.
>
> What has been done, IMHO, is a grievous design flaw.  It is like slipping odd
> and unrelated attributes into the trigonometric library so as to "facilitate"
> the creation of a particular program.

I'm probably way out of line commenting on the evolution of Proj,4. I
am not a contributor but I've spent a lot of time looking at it. I do
not think that Frank et al were "slipping odd and unrelated
attributes" into Proj.4. My perspective is that Proj.4 was extended to
support datum transformations, as is pretty commonly need in these
days. (Actually I think there is a growing need for even more datum
transformations, but that's for another thread). The EPSG code base
seems to ball projections and datums together and I can see how the
evolution occurred.

Ideally it seems like cs2cs should be the all encompassing wrapper
that handles the datum transformations and call proj as necessary. And
that proj would be just that: projection support. I think that's
basically what Gerald is suggesting. But there are so many users that
would be affected by that change that it seems unwise.

Rich
-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From warmerdam at pobox.com  Mon Dec  8 14:14:20 2008
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 08 Dec 2008 17:14:20 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081210.28259.geraldi.evenden@gmail.com>
	<493D5843.6040802@pobox.com>
	<200812081335.28031.geraldi.evenden@gmail.com>
	<ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
Message-ID: <493D9C3C.8080306@pobox.com>

Richard Greenwood wrote:
> On Mon, Dec 8, 2008 at 11:35 AM, Gerald I. Evenden
>> What has been done, IMHO, is a grievous design flaw.  It is like slipping odd
>> and unrelated attributes into the trigonometric library so as to "facilitate"
>> the creation of a particular program.

Folks,

I believe Gerald's objection is to the incorporation of datum support,
and other non-projections related stuff into PROJ.4.  I have taken the
position that PROJ.4 is a "coordinate system transformation" library,
while  Gerald believes it should be a projection library and other
services like datum shifting, geodesic calculations and so forth should
be distinct libraries or components.

I respect Gerald's opinion, and reasons for his position.  However,
I have taken a different direction with some justification.

I can understand why Gerald might have little interest in discussions
of the datum aspects of PROJ.4.

> I'm probably way out of line commenting on the evolution of Proj,4. I
> am not a contributor but I've spent a lot of time looking at it. I do
> not think that Frank et al were "slipping odd and unrelated
> attributes" into Proj.4. My perspective is that Proj.4 was extended to
> support datum transformations, as is pretty commonly need in these
> days. (Actually I think there is a growing need for even more datum
> transformations, but that's for another thread). The EPSG code base
> seems to ball projections and datums together and I can see how the
> evolution occurred.
 >
> Ideally it seems like cs2cs should be the all encompassing wrapper
> that handles the datum transformations and call proj as necessary. And
> that proj would be just that: projection support. I think that's
> basically what Gerald is suggesting. But there are so many users that
> would be affected by that change that it seems unwise.

I do have this wish that PROJ.4 could be restructured into a high level
coordinate systems library calling down to Gerald's libproj4 for the
projections aspect.  But such re-engineering is a pretty substantial
job, and frankly I haven't been paid to work on PROJ.4 since about 2001
so I'm unlikely to spend the several weeks such a re-engineering would
require.  I'm also quite sensitive to the need to do it in such a way
that it is minimally disruptive to applications using the existing PROJ.4
libraries which makes it trickier.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From ct529 at york.ac.uk  Tue Dec  9 01:24:17 2008
From: ct529 at york.ac.uk (Corrado Topi)
Date: Tue, 09 Dec 2008 09:24:17 +0000
Subject: [Proj] Re: Mapping Africa in an equal area projection
References: <gharkv$q5h$1@ger.gmane.org><8CB2538E30879EB-F04-CC@webmail-stg-d09.sysops.aol.com>
	<ghiu69$ss3$1@ger.gmane.org>
	<8CB278EC5B9D6E3-129C-229@webmail-stg-d08.sysops.aol.com>
Message-ID: <ghldg2$g50$1@ger.gmane.org>

Dear Daan,

the results will be shown on maps of Africa as a whole. That is we will show
maps of Africa, with different measurements and sample, but not of smaller
or larger regions.

We will use the maps in grass, and do some sample conversion using cs2cs /
proj.

The resolutions we will be working at are: 100 km x 100km initially, to
explore the data, 50 km x 50 km or 20 km x 20 km later on, but only if our
data are so good as to allow us to do so (we are not sure yet). The results
will be shown on a Africa - wide map in any case, and not on sub regions.

We will not use any larger or smaller scale maps.

What do you think?

Best,

strebe at aol.com wrote:

> 
> 
> 
> Corrado:
> 
> You did not indicate if you will be making a single map of all of Africa,
> or a series of much larger-scale maps. If it is a map of all of Africa,
> then your choice of ellipsoid is not going to matter much, in which case
> WGS84 is a good default because GPS data sources are already referred to
> the WGS84 datum and because datum conversion parameters normally are
> specified against WGS84.
> 
> 
> 
> 
> Otherwise, use the ellipsoid and datum from which your source data are
> culled unless you have some specific reason not to. If your data come from
> many datums and ellipsoids, then again, it surely makes most sense to use
> WGS84 as a standard.
> 
> 
> 
> 
> If you will be making a series of large-scale maps of (known) high
> accuracy, then it makes more sense to standardize on a datum that fits
> Africa better than WGS84. The Clarke 1880 ellipsoid dominates the extant
> African datums, but I am not aware of any named datum that has been
> formulated as a best fit for the entire African continent, though there
> are mean solutions for large regions, such as ARC 1950.
> 
> 
> 
> 
> If your project is such a series of large-scale maps, by the way, I would
> not use an equal-area projection if I were you. A conformal projection
> will give more benefits on the ground and the areal inflation will be
> negligible until you reach medium-scale.
> 
> 
> 
> 
> 
> Regards,
> 
> — daan Strebe
> 
> 
> 
> -----Original Message-----
> From: Corrado Topi <ct529 at york.ac.uk>
> To: proj at lists.maptools.org
> Sent: Mon, 8 Dec 2008 2:50 am
> Subject:=2
> 0[Proj] Re: Mapping Africa in an equal area projection
> 
> 
> 
> 
> 
> 
> 
> 
> Thanks Daan!
> 
> What ellipsoid / datum, would you choose? WGS84, ETRS89, or waht else?
> 
> Regards
> 
> 
> strebe at aol.com wrote:
> 
>> 
>>  Corrado:
>> 
>> 
>> 
>>  Of the candidates you list, I would call Mollweide inappropriate because
>>  it stretches Africa north-south to in order to reduce distortion
>>  elsewhere. It really is best left for world maps, where that compromise
>>  results in some benefit. Any of the others you list could be reasonable,
>>  depending on how they are constructed.
>> 
>> Because Africa spans roughly
>> the same latitudinal range north as south, an equatorial Lambert
>> azimuthal equal-area is a fine choice, and will give you the lowest
>> distortion of the group. Nor are there any better projections to
>> recommend without going exotic. Sinusoidal is not a common modern choice,
>> and I do not recommend it in this case because you will end up with
>> higher distortion around the periphery than the other projections, and
>> with no compensation.
>> 
>> Unless your application would benefit from straight parallels and
>> meridians, or unless your two standard parallels happen to be exactly
>> latitudes of opposite sign, then Albers will always perform better than
>> cylindric equal-area. But the advantages of Albers are largely lost on
>> Africa unless you were willing to do something exotic like a heavily
>> oblique aspect. Left with its standard parallels set to the graticule
>> parallels, it would end up very
> similar to the cylindric equal-area
>> (because the two standard parallels would be nearly latitudes of opposite
>> sign), and in that case it cannot approach Lambert for low distortion
>> across your region of interest.
>> 
>> Regards,
>> — daan Strebe
> 
> 

-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK



From ct529 at york.ac.uk  Tue Dec  9 01:30:02 2008
From: ct529 at york.ac.uk (Corrado Topi)
Date: Tue, 09 Dec 2008 09:30:02 +0000
Subject: [Proj] Re: Mapping Africa in an equal area projection
References: <gharkv$q5h$1@ger.gmane.org><8CB2538E30879EB-F04-CC@webmail-stg-d09.sysops.aol.com>
	<ghiu69$ss3$1@ger.gmane.org>
	<8CB278EC5B9D6E3-129C-229@webmail-stg-d08.sysops.aol.com>
Message-ID: <ghldqs$h3s$1@ger.gmane.org>

Dear Daan,

additional information .... the journal we would like to submit to requests
the maps to be in equal area projection.


They say:" Maps that display area data and organism distribution at a
continental, hemispheric, or world scale must always use an equal-area map
projection (e.g., Mollweide or Aitoff's). Note especially that Mercator's
projection is not acceptable for such data. Please indicate the precise
projection employed in the caption. On these maps, the equatorial scale
should be indicated, while scale information should be provided, preferably
as a scale bar within the figure, for all maps of whatever size and area;
use 'km' or 'kilometres', not 'kilometers'. Maps should include adequate
geo-referencing information."

Reference:

http://www.blackwellpublishing.com/submit.asp?ref=0305-0270&site=1

Best,


strebe at aol.com wrote:

> 
> 
> 
> Corrado:
> 
> You did not indicate if you will be making a single map of all of Africa,
> or a series of much larger-scale maps. If it is a map of all of Africa,
> then your choice of ellipsoid is not going to matter much, in which case
> WGS84 is a good default because GPS data sources are already referred to
> the WGS84 datum and because datum conversion parameters normally are
> specified against WGS84.
> 
> 
> 
> 
> Otherwise, use the ellipsoid and datum from which your source data are
> culled unless you have some specific reason not to. If your data come from
> many datums and ellipsoids, then again, it surely makes most sense to use
> WGS84 as a standard.
> 
> 
> 
> 
> If you will be making a series of large-scale maps of (known) high
> accuracy, then it makes more sense to standardize on a datum that fits
> Africa better than WGS84. The Clarke 1880 ellipsoid dominates the extant
> African datums, but I am not aware of any named datum that has been
> formulated as a best fit for the entire African continent, though there
> are mean solutions for large regions, such as ARC 1950.
> 
> 
> 
> 
> If your project is such a series of large-scale maps, by the way, I would
> not use an equal-area projection if I were you. A conformal projection
> will give more benefits on the ground and the areal inflation will be
> negligible until you reach medium-scale.
> 
> 
> 
> 
> 
> Regards,
> 
> — daan Strebe
> 
> 
> 
> -----Original Message-----
> From: Corrado Topi <ct529 at york.ac.uk>
> To: proj at lists.maptools.org
> Sent: Mon, 8 Dec 2008 2:50 am
> Subject:=2
> 0[Proj] Re: Mapping Africa in an equal area projection
> 
> 
> 
> 
> 
> 
> 
> 
> Thanks Daan!
> 
> What ellipsoid / datum, would you choose? WGS84, ETRS89, or waht else?
> 
> Regards
> 
> 
> strebe at aol.com wrote:
> 
>> 
>>  Corrado:
>> 
>> 
>> 
>>  Of the candidates you list, I would call Mollweide inappropriate because
>>  it stretches Africa north-south to in order to reduce distortion
>>  elsewhere. It really is best left for world maps, where that compromise
>>  results in some benefit. Any of the others you list could be reasonable,
>>  depending on how they are constructed.
>> 
>> Because Africa spans roughly
>> the same latitudinal range north as south, an equatorial Lambert
>> azimuthal equal-area is a fine choice, and will give you the lowest
>> distortion of the group. Nor are there any better projections to
>> recommend without going exotic. Sinusoidal is not a common modern choice,
>> and I do not recommend it in this case because you will end up with
>> higher distortion around the periphery than the other projections, and
>> with no compensation.
>> 
>> Unless your application would benefit from straight parallels and
>> meridians, or unless your two standard parallels happen to be exactly
>> latitudes of opposite sign, then Albers will always perform better than
>> cylindric equal-area. But the advantages of Albers are largely lost on
>> Africa unless you were willing to do something exotic like a heavily
>> oblique aspect. Left with its standard parallels set to the graticule
>> parallels, it would end up very
> similar to the cylindric equal-area
>> (because the two standard parallels would be nearly latitudes of opposite
>> sign), and in that case it cannot approach Lambert for low distortion
>> across your region of interest.
>> 
>> Regards,
>> — daan Strebe
> 
> 

-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK



From support.mn at elisanet.fi  Tue Dec  9 01:55:01 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Tue, 9 Dec 2008 11:55:01 +0200 (EET)
Subject: [Proj] Re: Mapping Africa in an equal area projection
Message-ID: <4527855.1681521228816502746.JavaMail.support.mn@elisanet.fi>

Hello,

here is a list of some Africa projections-datums. Some of the equal area
projections, for example the "aea" is suitable.

regards: Janne.


List follows:
--------------------

# esri.extra.pin:102011
# Africa Sinusoidal
proj=sinu
lon_0=0
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# esri.extra.pin:102022
# Africa Albers Equal Area Conic
proj=aea
lat_1=20
lat_2=-23
lat_0=0
lon_0=25
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# esri.extra.pin:102023
# Africa Equidistant Conic
proj=eqdc
lat_0=0
lon_0=0
lat_1=20
lat_2=-23
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# esri.extra.pin:102024
# Africa Lambert Conformal Conic
proj=lcc
lat_1=20
lat_2=-23
lat_0=0
lon_0=25
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# esri.pin:102011
# Africa Sinusoidal
proj=sinu
lon_0=0
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# esri.pin:102022
# Africa Albers Equal Area Conic
proj=aea
lat_1=20
lat_2=-23
lat_0=0
lon_0=25
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# esri.pin:102023
# Africa Equidistant Conic
proj=eqdc
lat_0=0
lon_0=0
lat_1=20
lat_2=-23
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# esri.pin:102024
# Africa Lambert Conformal Conic
proj=lcc
lat_1=20
lat_2=-23
lat_0=0
lon_0=25
x_0=0
y_0=0
ellps=WGS84
datum=WGS84
units=m
no_defs

# world.pin:nw-africa
# Northwest Africa
proj=lcc
ellps=clrk80
lat_1=34dN
lon_0=0dE
x_0=1000000
y_0=500000
k_0=0.99908
no_defs

--------------------

-----------------------------------------------------------

Corrado Topi [ct529 at york.ac.uk] kirjoitti: 
> Dear Daan,
> 
> additional information .... the journal we would like to submit to requests
> the maps to be in equal area projection.
> 
> 
> They say:" Maps that display area data and organism distribution at a
> continental, hemispheric, or world scale must always use an equal-area map
> projection (e.g., Mollweide or Aitoff's). Note especially that Mercator's
> projection is not acceptable for such data. Please indicate the precise
> projection employed in the caption. On these maps, the equatorial scale
> should be indicated, while scale information should be provided, preferably
> as a scale bar within the figure, for all maps of whatever size and area;
> use 'km' or 'kilometres', not 'kilometers'. Maps should include adequate
> geo-referencing information."
> 
> Reference:
> 
> http://www.blackwellpublishing.com/submit.asp?ref=0305-0270&site=1
> 
> Best,
> 
> 
> strebe at aol.com wrote:
> 
> > 
> > 
> > 
> > Corrado:
> > 
> > You did not indicate if you will be making a single map of all of Africa,
> > or a series of much larger-scale maps. If it is a map of all of Africa,
> > then your choice of ellipsoid is not going to matter much, in which case
> > WGS84 is a good default because GPS data sources are already referred to
> > the WGS84 datum and because datum conversion parameters normally are
> > specified against WGS84.
> > 
> > 
> > 
> > 
> > Otherwise, use the ellipsoid and datum from which your source data are
> > culled unless you have some specific reason not to. If your data come from
> > many datums and ellipsoids, then again, it surely makes most sense to use
> > WGS84 as a standard.
> > 
> > 
> > 
> > 
> > If you will be making a series of large-scale maps of (known) high
> > accuracy, then it makes more sense to standardize on a datum that fits
> > Africa better than WGS84. The Clarke 1880 ellipsoid dominates the extant
> > African datums, but I am not aware of any named datum that has been
> > formulated as a best fit for the entire African continent, though there
> > are mean solutions for large regions, such as ARC 1950.
> > 
> > 
> > 
> > 
> > If your project is such a series of large-scale maps, by the way, I would
> > not use an equal-area projection if I were you. A conformal projection
> > will give more benefits on the ground and the areal inflation will be
> > negligible until you reach medium-scale.
> > 
> > 
> > 
> > 
> > 
> > Regards,
> > 
> >  daan Strebe
> > 
> > 
> > 
> > -----Original Message-----
> > From: Corrado Topi <ct529 at york.ac.uk>
> > To: proj at lists.maptools.org
> > Sent: Mon, 8 Dec 2008 2:50 am
> > Subject:=2
> > 0[Proj] Re: Mapping Africa in an equal area projection
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > Thanks Daan!
> > 
> > What ellipsoid / datum, would you choose? WGS84, ETRS89, or waht else?
> > 
> > Regards
> > 
> > 
> > strebe at aol.com wrote:
> > 
> >> 
> >>  Corrado:
> >> 
> >> 
> >> 
> >>  Of the candidates you list, I would call Mollweide inappropriate because
> >>  it stretches Africa north-south to in order to reduce distortion
> >>  elsewhere. It really is best left for world maps, where that compromise
> >>  results in some benefit. Any of the others you list could be reasonable,
> >>  depending on how they are constructed.
> >> 
> >> Because Africa spans roughly
> >> the same latitudinal range north as south, an equatorial Lambert
> >> azimuthal equal-area is a fine choice, and will give you the lowest
> >> distortion of the group. Nor are there any better projections to
> >> recommend without going exotic. Sinusoidal is not a common modern choice,
> >> and I do not recommend it in this case because you will end up with
> >> higher distortion around the periphery than the other projections, and
> >> with no compensation.
> >> 
> >> Unless your application would benefit from straight parallels and
> >> meridians, or unless your two standard parallels happen to be exactly
> >> latitudes of opposite sign, then Albers will always perform better than
> >> cylindric equal-area. But the advantages of Albers are largely lost on
> >> Africa unless you were willing to do something exotic like a heavily
> >> oblique aspect. Left with its standard parallels set to the graticule
> >> parallels, it would end up very
> > similar to the cylindric equal-area
> >> (because the two standard parallels would be nearly latitudes of opposite
> >> sign), and in that case it cannot approach Lambert for low distortion
> >> across your region of interest.
> >> 
> >> Regards,
> >>  daan Strebe
> > 
> > 
> 
> -- 
> Corrado Topi
> 
> Global Climate Change & Biodiversity Indicators
> Department of Biology, University of York, UK
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 




From j.l.h.hartmann at uva.nl  Tue Dec  9 06:09:10 2008
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Tue, 09 Dec 2008 15:09:10 +0100
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <493D9C3C.8080306@pobox.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>	<200812081210.28259.geraldi.evenden@gmail.com>	<493D5843.6040802@pobox.com>	<200812081335.28031.geraldi.evenden@gmail.com>	<ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
	<493D9C3C.8080306@pobox.com>
Message-ID: <493E7C06.3060902@uva.nl>

Just for relaxation: see this link  for an explanation of datums that 
even I can understand :-)

http://sourceforge.net/mailarchive/forum.php?thread_name=1190060064.27461.57.camel%40blackpad&forum_name=jump-pilot-devel

Jan

Frank Warmerdam wrote:
> Richard Greenwood wrote:
>> On Mon, Dec 8, 2008 at 11:35 AM, Gerald I. Evenden
>>> What has been done, IMHO, is a grievous design flaw.  It is like 
>>> slipping odd
>>> and unrelated attributes into the trigonometric library so as to 
>>> "facilitate"
>>> the creation of a particular program.
>
> Folks,
>
> I believe Gerald's objection is to the incorporation of datum support,
> and other non-projections related stuff into PROJ.4.  I have taken the
> position that PROJ.4 is a "coordinate system transformation" library,
> while  Gerald believes it should be a projection library and other
> services like datum shifting, geodesic calculations and so forth should
> be distinct libraries or components.
>
> I respect Gerald's opinion, and reasons for his position.  However,
> I have taken a different direction with some justification.
>
> I can understand why Gerald might have little interest in discussions
> of the datum aspects of PROJ.4.
>
>> I'm probably way out of line commenting on the evolution of Proj,4. I
>> am not a contributor but I've spent a lot of time looking at it. I do
>> not think that Frank et al were "slipping odd and unrelated
>> attributes" into Proj.4. My perspective is that Proj.4 was extended to
>> support datum transformations, as is pretty commonly need in these
>> days. (Actually I think there is a growing need for even more datum
>> transformations, but that's for another thread). The EPSG code base
>> seems to ball projections and datums together and I can see how the
>> evolution occurred.
> >
>> Ideally it seems like cs2cs should be the all encompassing wrapper
>> that handles the datum transformations and call proj as necessary. And
>> that proj would be just that: projection support. I think that's
>> basically what Gerald is suggesting. But there are so many users that
>> would be affected by that change that it seems unwise.
>
> I do have this wish that PROJ.4 could be restructured into a high level
> coordinate systems library calling down to Gerald's libproj4 for the
> projections aspect.  But such re-engineering is a pretty substantial
> job, and frankly I haven't been paid to work on PROJ.4 since about 2001
> so I'm unlikely to spend the several weeks such a re-engineering would
> require.  I'm also quite sensitive to the need to do it in such a way
> that it is minimally disruptive to applications using the existing PROJ.4
> libraries which makes it trickier.
>
> Best regards,



From jhollingsworth at houston.oilfield.slb.com  Tue Dec  9 09:12:03 2008
From: jhollingsworth at houston.oilfield.slb.com (Jay Hollingsworth)
Date: Tue, 09 Dec 2008 11:12:03 -0600
Subject: [Proj] Re: Proj Digest, Vol 55, Issue 21
In-Reply-To: <200812091701.mB9H0vl1032580@duke.maptools.org>
References: <200812091701.mB9H0vl1032580@duke.maptools.org>
Message-ID: <0KBM008G8D44B2D0@us085mbx01.slb.atosorigin-asp.com>

OK, that is pretty funny.




Jay


At 11:01 AM 12/9/2008, you wrote:

>Message: 1
>Date: Tue, 09 Dec 2008 15:09:10 +0100
>From: Jan Hartmann <j.l.h.hartmann at uva.nl>
>Subject: Re: [Proj] "Double Ellipsoid" error, reproduction
>To: "PROJ.4 and general Projections Discussions"
>         <proj at lists.maptools.org>
>Message-ID: <493E7C06.3060902 at uva.nl>
>Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
>Just for relaxation: see this link  for an explanation of datums that
>even I can understand :-)
>
>http://sourceforge.net/mailarchive/forum.php?thread_name=1190060064.27461.57.camel%40blackpad&forum_name=jump-pilot-devel
>
>Jan
>


Jay Hollingsworth

Seabed Portfolio Manager and
Principal Data Architect
Schlumberger Information Solutions
phone: 713 513 8854 fax: 713 513 2093



From ct529 at york.ac.uk  Tue Dec  9 10:00:49 2008
From: ct529 at york.ac.uk (Corrado Topi)
Date: Tue, 09 Dec 2008 18:00:49 +0000
Subject: [Proj] Re: Proj Digest, Vol 55, Issue 21
References: <200812091701.mB9H0vl1032580@duke.maptools.org>
	<0KBM008G8D44B2D0@us085mbx01.slb.atosorigin-asp.com>
Message-ID: <ghmboh$o7k$1@ger.gmane.org>

Not only funny, but I also understood some tiny weeny things I had not
understood before.

Thanks!

Jay Hollingsworth wrote:

> OK, that is pretty funny.


-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK



From strebe at aol.com  Tue Dec  9 11:45:12 2008
From: strebe at aol.com (strebe)
Date: Tue, 09 Dec 2008 11:45:12 -0800
Subject: [Proj] Re: Mapping Africa in an equal area projection
In-Reply-To: <ghldg2$g50$1@ger.gmane.org>
Message-ID: <0BCDD18F.8AB2.48DD.99F5.504D4F6243A6@aol.com>


Corrado:

My baser instincts here say not to even worry about the ellipsoid, given the data accuracy you're talking about. I'm not sure I understand quite what you mean by 20km x 20km, though. That is the most detailed data you will work with?

What will be the scale of your map? Something that fits in the journal pages?

Regards,
— daan Strebe


On Dec 9, 2008, at 1:24:17 AM, "Corrado Topi" <ct529 at york.ac.uk> wrote:
From:   "Corrado Topi" <ct529 at york.ac.uk>
Subject:    [Proj] Re: Mapping Africa in an equal area projection
Date:   December 9, 2008 1:24:17 AM PST
To: proj at lists.maptools.org
Dear Daan,

the results will be shown on maps of Africa as a whole. That is we will show
maps of Africa, with different measurements and sample, but not of smaller
or larger regions.

We will use the maps in grass, and do some sample conversion using cs2cs /
proj.

The resolutions we will be working at are: 100 km x 100km initially, to
explore the data, 50 km x 50 km or 20 km x 20 km later on, but only if our
data are so good as to allow us to do so (we are not sure yet). The results
will be shown on a Africa - wide map in any case, and not on sub regions.

We will not use any larger or smaller scale maps.

What do you think?

Best,

strebe at aol.com wrote:

> 
> 
> 
> Corrado:
> 
> You did not indicate if you will be making a single map of all of Africa,
> or a series of much larger-scale maps. If it is a map of all of Africa,
> then your choice of ellipsoid is not going to matter much, in which case
> WGS84 is a good default because GPS data sources are already referred to
> the WGS84 datum and because datum conversion parameters normally are
> specified against WGS84.
> 
> 
> 
> 
> Otherwise, use the ellipsoid and datum from which your source data are
> culled unless you have some specific reason not to. If your data come from
> many datums and ellipsoids, then again, it surely makes most sense to use
> WGS84 as a standard.
> 
> 
> 
> 
> If you will be making a series of large-scale maps of (known) high
> accuracy, then it makes more sense to standardize on a datum that fits
> Africa better than WGS84. The Clarke 1880 ellipsoid dominates the extant
> African datums, but I am not aware of any named datum that has been
> formulated as a best fit for the entire African continent, though there
> are mean solutions for large regions, such as ARC 1950.
> 
> 
> 
> 
> If your project is such a series of large-scale maps, by the way, I would
> not use an equal-area projection if I were you. A conformal projection
> will give more benefits on the ground and the areal inflation will be
> negligible until you reach medium-scale.
> 
> 
> 
> 
> 
> Regards,
> 
> — daan Strebe
> 
> 
> 
> -----Original Message-----
> From: Corrado Topi <ct529 at york.ac.uk>
> To: proj at lists.maptools.org
> Sent: Mon, 8 Dec 2008 2:50 am
> Subject:=2
> 0[Proj] Re: Mapping Africa in an equal area projection
> 
> 
> 
> 
> 
> 
> 
> 
> Thanks Daan!
> 
> What ellipsoid / datum, would you choose? WGS84, ETRS89, or waht else?
> 
> Regards
> 
> 
> strebe at aol.com wrote:
> 
>> 
>> Corrado:
>> 
>> 
>> 
>> Of the candidates you list, I would call Mollweide inappropriate because
>> it stretches Africa north-south to in order to reduce distortion
>> elsewhere. It really is best left for world maps, where that compromise
>> results in some benefit. Any of the others you list could be reasonable,
>> depending on how they are constructed.
>> 
>> Because Africa spans roughly
>> the same latitudinal range north as south, an equatorial Lambert
>> azimuthal equal-area is a fine choice, and will give you the lowest
>> distortion of the group. Nor are there any better projections to
>> recommend without going exotic. Sinusoidal is not a common modern choice,
>> and I do not recommend it in this case because you will end up with
>> higher distortion around the periphery than the other projections, and
>> with no compensation.
>> 
>> Unless your application would benefit from straight parallels and
>> meridians, or unless your two standard parallels happen to be exactly
>> latitudes of opposite sign, then Albers will always perform better than
>> cylindric equal-area. But the advantages of Albers are largely lost on
>> Africa unless you were willing to do something exotic like a heavily
>> oblique aspect. Left with its standard parallels set to the graticule
>> parallels, it would end up very
> similar to the cylindric equal-area
>> (because the two standard parallels would be nearly latitudes of opposite
>> sign), and in that case it cannot approach Lambert for low distortion
>> across your region of interest.
>> 
>> Regards,
>> — daan Strebe
> 
> 

-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081209/78eba6c9/attachment.html>

From geraldi.evenden at gmail.com  Tue Dec  9 18:51:35 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Tue, 9 Dec 2008 21:51:35 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081335.28031.geraldi.evenden@gmail.com>
	<ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
Message-ID: <200812092151.35363.geraldi.evenden@gmail.com>

On Monday 08 December 2008 4:35:50 pm Richard Greenwood wrote:
> On Mon, Dec 8, 2008 at 11:35 AM, Gerald I. Evenden
>
> <geraldi.evenden at gmail.com> wrote:
> > On Monday 08 December 2008 12:24:19 pm Frank Warmerdam wrote:
> >> Gerald I. Evenden wrote:
> >> > I think more desirable approach is to create a d2d program with
> >> > optional i/o filtering through projection procedures.  One might have
> >> > options like:
> >> >
> >> > d2d --in=EPSG1234 --out=NAD83_1105
> >> >
> >> > where --in and --out may refer to library systems but one can also
> >> > have
> >> >
> >> > d2d --in=proj=latlon --datum_in=xyx --datum_out=mm \
> >> >           --out="proj=merc ellps=WGS84 R_A"
> >>
> >> Gerald,
> >>
> >> Modulo syntax differences, cs2cs can already be used just to do the
> >> datum transformation step if desired.  So I don't see your point.
> >>
> >> > To me, that kills all mice with flexibility and ease of use.  *AND*
> >> > you can easily use libproj4 updates.  ;-)
> >>
> >> I would note that this still does nothing for the folks who use PROJ.4
> >> within another program like MapServer or GDAL.  There typically the
> >> application knows very little about the coordinate systems or what steps
> >> might be used.  They just call pj_init() for the source and destination
> >> coordinate system and then call pj_transform().
> >
> > Hey!  I am out of this discussion.
> >
> > What has been done, IMHO, is a grievous design flaw.  It is like slipping
> > odd and unrelated attributes into the trigonometric library so as to
> > "facilitate" the creation of a particular program.
>
> I'm probably way out of line commenting on the evolution of Proj,4. I
> am not a contributor but I've spent a lot of time looking at it. I do
> not think that Frank et al were "slipping odd and unrelated
> attributes" into Proj.4. My perspective is that Proj.4 was extended to
> support datum transformations, as is pretty commonly need in these
> days. (Actually I think there is a growing need for even more datum
> transformations, but that's for another thread). The EPSG code base
> seems to ball projections and datums together and I can see how the
> evolution occurred.

The germination of proj took place in the late 70's/early 80's as part of a 
mapmaking program I wrote called MAPGEN.  The earliest stages were in RATFOR 
(as I had and still do have a passionate hatred of FORTRAN).  Not much later, 
UNIX was introduced into our shop and proj began to take the form it has 
today.  As time progressed I kept adding to and refining proj and eventually 
freed it from its ties to MAPGEN even though it still was a required in 
MAPGEN's use.  Eventually an open file report was published and its code 
became more readily available.

At no time during my development of proj were datum operation part of proj's 
internals.  Early on, datum conversion was not a concern in our shop as all 
our data was NAD27.  Later with satellite navagation datum conversion did 
rear its ugly head but was taken care of with our version of NADCON.

Clearly note: that it was and still is quite clear that datum conversions and 
projection operations are totally different, mathematically and logically, 
there is *no* reason to combine the operations into one procedure.  
Programmatically combining the operation made no sense and was a clear 
violation of modular programming practices.

Through the years, even after retirement, I took care of my "baby" and 
continued its expansion through proj.4 and eventually libproj4.  I did the 
last name change recognizing that there had been some hacking of proj.4 
software that I did not, and still do not, agree with.  Thus I changed the 
name to libproj4 and tried to tighten up the licensing a bit although it is 
still totally free.

> Ideally it seems like cs2cs should be the all encompassing wrapper
> that handles the datum transformations and call proj as necessary. And
> that proj would be just that: projection support. I think that's
> basically what Gerald is suggesting. But there are so many users that
> would be affected by that change that it seems unwise.

On the surface I find nothing wrong with cs2cs and it certainly should be a 
valuable program.  However, I feel that the internals are put together in a 
manner that first: made it harder to develop and now: much more difficult to 
maintain.  By combining datum and projection operation internally with 
modifications of proj.4 it is impossible to easily upgrade cs2cs when 
corrections or improvements of libproj4 become available.  If the proj4 
library had been used in it orginal state one should normally update cs2cs by 
merely relinking with a new libproj4 release.

I hope that explains my interest and frustration with this problem.  Thank-you 
for your time.

BTW, the reason I never got too involved in datum operations was that in the 
era when I was exposed the USSR still existed.  At that time datum 
information was often treated like state secrets and I figured it best to 
stay away from that nonsense.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From cjmce at lsu.edu  Tue Dec  9 19:31:54 2008
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Tue, 9 Dec 2008 21:31:54 -0600
Subject: [Proj] "Double Ellipsoid" error, reproduction
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi><200812081335.28031.geraldi.evenden@gmail.com><ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
	<200812092151.35363.geraldi.evenden@gmail.com>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7EC2566@email002.lsu.edu>

I totally agree with Gerald's philosophy.  John P. Snyder stayed away from various geodetic applications also, and was strictly interested in cartographic projections.  John did not diddle with datums.  Once upon a time, I wrote software that did both.  John used my software for his private consulting work but did not diddle with datums directly.
 
A philosophic separation is reasonable and warranted.
 
The EPSG is a reflection on the practical needs of Geodetic Surveyors servicing the international oil patch.  Gerald's implementation is not that restrictive.
 
Merry Christmas!
 
Cliff Mugnier
LOUISIANA STATE UNIVERSITY

________________________________

From: proj-bounces at lists.maptools.org on behalf of Gerald I. Evenden
Sent: Tue 09-Dec-08 20:51
To: Richard Greenwood
Cc: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double Ellipsoid" error, reproduction



On Monday 08 December 2008 4:35:50 pm Richard Greenwood wrote:
> On Mon, Dec 8, 2008 at 11:35 AM, Gerald I. Evenden
>
> <geraldi.evenden at gmail.com> wrote:
> > On Monday 08 December 2008 12:24:19 pm Frank Warmerdam wrote:
> >> Gerald I. Evenden wrote:
> >> > I think more desirable approach is to create a d2d program with
> >> > optional i/o filtering through projection procedures.  One might have
> >> > options like:
> >> >
> >> > d2d --in=EPSG1234 --out=NAD83_1105
> >> >
> >> > where --in and --out may refer to library systems but one can also
> >> > have
> >> >
> >> > d2d --in=proj=latlon --datum_in=xyx --datum_out=mm \
> >> >           --out="proj=merc ellps=WGS84 R_A"
> >>
> >> Gerald,
> >>
> >> Modulo syntax differences, cs2cs can already be used just to do the
> >> datum transformation step if desired.  So I don't see your point.
> >>
> >> > To me, that kills all mice with flexibility and ease of use.  *AND*
> >> > you can easily use libproj4 updates.  ;-)
> >>
> >> I would note that this still does nothing for the folks who use PROJ.4
> >> within another program like MapServer or GDAL.  There typically the
> >> application knows very little about the coordinate systems or what steps
> >> might be used.  They just call pj_init() for the source and destination
> >> coordinate system and then call pj_transform().
> >
> > Hey!  I am out of this discussion.
> >
> > What has been done, IMHO, is a grievous design flaw.  It is like slipping
> > odd and unrelated attributes into the trigonometric library so as to
> > "facilitate" the creation of a particular program.
>
> I'm probably way out of line commenting on the evolution of Proj,4. I
> am not a contributor but I've spent a lot of time looking at it. I do
> not think that Frank et al were "slipping odd and unrelated
> attributes" into Proj.4. My perspective is that Proj.4 was extended to
> support datum transformations, as is pretty commonly need in these
> days. (Actually I think there is a growing need for even more datum
> transformations, but that's for another thread). The EPSG code base
> seems to ball projections and datums together and I can see how the
> evolution occurred.

The germination of proj took place in the late 70's/early 80's as part of a
mapmaking program I wrote called MAPGEN.  The earliest stages were in RATFOR
(as I had and still do have a passionate hatred of FORTRAN).  Not much later,
UNIX was introduced into our shop and proj began to take the form it has
today.  As time progressed I kept adding to and refining proj and eventually
freed it from its ties to MAPGEN even though it still was a required in
MAPGEN's use.  Eventually an open file report was published and its code
became more readily available.

At no time during my development of proj were datum operation part of proj's
internals.  Early on, datum conversion was not a concern in our shop as all
our data was NAD27.  Later with satellite navagation datum conversion did
rear its ugly head but was taken care of with our version of NADCON.

Clearly note: that it was and still is quite clear that datum conversions and
projection operations are totally different, mathematically and logically,
there is *no* reason to combine the operations into one procedure. 
Programmatically combining the operation made no sense and was a clear
violation of modular programming practices.

Through the years, even after retirement, I took care of my "baby" and
continued its expansion through proj.4 and eventually libproj4.  I did the
last name change recognizing that there had been some hacking of proj.4
software that I did not, and still do not, agree with.  Thus I changed the
name to libproj4 and tried to tighten up the licensing a bit although it is
still totally free.

> Ideally it seems like cs2cs should be the all encompassing wrapper
> that handles the datum transformations and call proj as necessary. And
> that proj would be just that: projection support. I think that's
> basically what Gerald is suggesting. But there are so many users that
> would be affected by that change that it seems unwise.

On the surface I find nothing wrong with cs2cs and it certainly should be a
valuable program.  However, I feel that the internals are put together in a
manner that first: made it harder to develop and now: much more difficult to
maintain.  By combining datum and projection operation internally with
modifications of proj.4 it is impossible to easily upgrade cs2cs when
corrections or improvements of libproj4 become available.  If the proj4
library had been used in it orginal state one should normally update cs2cs by
merely relinking with a new libproj4 release.

I hope that explains my interest and frustration with this problem.  Thank-you
for your time.

BTW, the reason I never got too involved in datum operations was that in the
era when I was exposed the USSR still existed.  At that time datum
information was often treated like state secrets and I figured it best to
stay away from that nonsense.

--
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081209/def36897/attachment.html>

From richard.greenwood at gmail.com  Tue Dec  9 19:53:10 2008
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Tue, 9 Dec 2008 20:53:10 -0700
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812092151.35363.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081335.28031.geraldi.evenden@gmail.com>
	<ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
	<200812092151.35363.geraldi.evenden@gmail.com>
Message-ID: <ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>

On Tue, Dec 9, 2008 at 7:51 PM, Gerald I. Evenden
<geraldi.evenden at gmail.com> wrote:
> On Monday 08 December 2008 4:35:50 pm Richard Greenwood wrote:
>> On Mon, Dec 8, 2008 at 11:35 AM, Gerald I. Evenden
>>
>> <geraldi.evenden at gmail.com> wrote:
>> > On Monday 08 December 2008 12:24:19 pm Frank Warmerdam wrote:
>> >> Gerald I. Evenden wrote:
>> >> > I think more desirable approach is to create a d2d program with
>> >> > optional i/o filtering through projection procedures.  One might have
>> >> > options like:
>> >> >
>> >> > d2d --in=EPSG1234 --out=NAD83_1105
>> >> >
>> >> > where --in and --out may refer to library systems but one can also
>> >> > have
>> >> >
>> >> > d2d --in=proj=latlon --datum_in=xyx --datum_out=mm \
>> >> >           --out="proj=merc ellps=WGS84 R_A"
>> >>
>> >> Gerald,
>> >>
>> >> Modulo syntax differences, cs2cs can already be used just to do the
>> >> datum transformation step if desired.  So I don't see your point.
>> >>
>> >> > To me, that kills all mice with flexibility and ease of use.  *AND*
>> >> > you can easily use libproj4 updates.  ;-)
>> >>
>> >> I would note that this still does nothing for the folks who use PROJ.4
>> >> within another program like MapServer or GDAL.  There typically the
>> >> application knows very little about the coordinate systems or what steps
>> >> might be used.  They just call pj_init() for the source and destination
>> >> coordinate system and then call pj_transform().
>> >
>> > Hey!  I am out of this discussion.
>> >
>> > What has been done, IMHO, is a grievous design flaw.  It is like slipping
>> > odd and unrelated attributes into the trigonometric library so as to
>> > "facilitate" the creation of a particular program.
>>
>> I'm probably way out of line commenting on the evolution of Proj,4. I
>> am not a contributor but I've spent a lot of time looking at it. I do
>> not think that Frank et al were "slipping odd and unrelated
>> attributes" into Proj.4. My perspective is that Proj.4 was extended to
>> support datum transformations, as is pretty commonly need in these
>> days. (Actually I think there is a growing need for even more datum
>> transformations, but that's for another thread). The EPSG code base
>> seems to ball projections and datums together and I can see how the
>> evolution occurred.
>
> The germination of proj took place in the late 70's/early 80's as part of a
> mapmaking program I wrote called MAPGEN.  The earliest stages were in RATFOR
> (as I had and still do have a passionate hatred of FORTRAN).  Not much later,
> UNIX was introduced into our shop and proj began to take the form it has
> today.  As time progressed I kept adding to and refining proj and eventually
> freed it from its ties to MAPGEN even though it still was a required in
> MAPGEN's use.  Eventually an open file report was published and its code
> became more readily available.
>
> At no time during my development of proj were datum operation part of proj's
> internals.  Early on, datum conversion was not a concern in our shop as all
> our data was NAD27.  Later with satellite navagation datum conversion did
> rear its ugly head but was taken care of with our version of NADCON.
>
> Clearly note: that it was and still is quite clear that datum conversions and
> projection operations are totally different, mathematically and logically,
> there is *no* reason to combine the operations into one procedure.
> Programmatically combining the operation made no sense and was a clear
> violation of modular programming practices.
>
> Through the years, even after retirement, I took care of my "baby" and
> continued its expansion through proj.4 and eventually libproj4.  I did the
> last name change recognizing that there had been some hacking of proj.4
> software that I did not, and still do not, agree with.  Thus I changed the
> name to libproj4 and tried to tighten up the licensing a bit although it is
> still totally free.
>
>> Ideally it seems like cs2cs should be the all encompassing wrapper
>> that handles the datum transformations and call proj as necessary. And
>> that proj would be just that: projection support. I think that's
>> basically what Gerald is suggesting. But there are so many users that
>> would be affected by that change that it seems unwise.
>
> On the surface I find nothing wrong with cs2cs and it certainly should be a
> valuable program.  However, I feel that the internals are put together in a
> manner that first: made it harder to develop and now: much more difficult to
> maintain.  By combining datum and projection operation internally with
> modifications of proj.4 it is impossible to easily upgrade cs2cs when
> corrections or improvements of libproj4 become available.  If the proj4
> library had been used in it orginal state one should normally update cs2cs by
> merely relinking with a new libproj4 release.
>
> I hope that explains my interest and frustration with this problem.  Thank-you
> for your time.
>
> BTW, the reason I never got too involved in datum operations was that in the
> era when I was exposed the USSR still existed.  At that time datum
> information was often treated like state secrets and I figured it best to
> stay away from that nonsense.

Gerald,

I have been using Proj.4 and following this list for long enough to
know your interest in, and contributions to, this project. I have
enough gray hair to remember the USSR and to be able to use with UNIX
pipes. I can relate to your frustration, but I can not sympathize with
it.

We have moved beyond paper maps and can no longer segregate
cartography from geodesy - projections from datums. The addition of
datum support was necessary and well intentioned. The implementation
was probably imperfect.

Perfecting the implementation of Proj.4 as a comprehensive _coordinate
system_ library (not just a projection library) without a major
rewrite is not likely. Restricting it to just a projection library
would diminish its value to such an extent that it would lose its
relevance.

Respectively yours,
Rich

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From glynn at gclements.plus.com  Tue Dec  9 23:55:43 2008
From: glynn at gclements.plus.com (Glynn Clements)
Date: Wed, 10 Dec 2008 07:55:43 +0000
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081335.28031.geraldi.evenden@gmail.com>
	<ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
	<200812092151.35363.geraldi.evenden@gmail.com>
	<ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
Message-ID: <18751.30207.519867.360940@cerise.gclements.plus.com>


Richard Greenwood wrote:

> We have moved beyond paper maps and can no longer segregate
> cartography from geodesy - projections from datums. The addition of
> datum support was necessary and well intentioned. The implementation
> was probably imperfect.
> 
> Perfecting the implementation of Proj.4 as a comprehensive _coordinate
> system_ library (not just a projection library) without a major
> rewrite is not likely. Restricting it to just a projection library
> would diminish its value to such an extent that it would lose its
> relevance.

All software is imperfect. But FWIW, the way that the current PROJ and
cs2cs handle the datum and ellipsoid was perfectly adequate for every
known use case until Google decided that they were going to use WGS84
for geographic coordinates but project them using spherical Mercator.

AFAICT, the simplest workaroud for the Google bug is to add another
projection, e.g. +proj=sphmerc, which claims to be an ellipsoidal
projection but implements spherical Mercator regardless of the actual
ellipsoid eccentricity.

-- 
Glynn Clements <glynn at gclements.plus.com>


From ct529 at york.ac.uk  Wed Dec 10 00:49:52 2008
From: ct529 at york.ac.uk (Corrado)
Date: Wed, 10 Dec 2008 08:49:52 +0000
Subject: [Proj] Re: Mapping Africa in an equal area projection
In-Reply-To: <0BCDD18F.8AB2.48DD.99F5.504D4F6243A6@aol.com>
References: <0BCDD18F.8AB2.48DD.99F5.504D4F6243A6@aol.com>
Message-ID: <200812100849.52755.ct529@york.ac.uk>

Dear Daan,

yes, 20 km x 20 km would be the higher resolution, but I do not think we have 
enough data to work at that resolution. Our data have all different 
resolutions, we will need to aggregate them ....

Yes, the map is supposed to fit on the journal pages .... let's say maximum 
A4.

PS: Is Lambert a good choice also for other continents? For another project I 
have to choose a projection / ellipsoid / datum , equal area, that is good 
for the whole world, with the smallest data cell at 10km x 10km. I would need 
to draw continental maps as well as some country maps. Do you think it is 
better to open a new thread altogether?

Best,


On Tuesday 09 December 2008 19:45:12 strebe wrote:
> Corrado:
>
> My baser instincts here say not to even worry about the ellipsoid, given
> the data accuracy you're talking about. I'm not sure I understand quite
> what you mean by 20km x 20km, though. That is the most detailed data you
> will work with?
>
> What will be the scale of your map? Something that fits in the journal
> pages?
>
> Regards,
> — daan Strebe
>
>
> On Dec 9, 2008, at 1:24:17 AM, "Corrado Topi" <ct529 at york.ac.uk> wrote:
> From:   "Corrado Topi" <ct529 at york.ac.uk>
> Subject:    [Proj] Re: Mapping Africa in an equal area projection
> Date:   December 9, 2008 1:24:17 AM PST
> To: proj at lists.maptools.org
> Dear Daan,
>
> the results will be shown on maps of Africa as a whole. That is we will
> show maps of Africa, with different measurements and sample, but not of
> smaller or larger regions.
>
> We will use the maps in grass, and do some sample conversion using cs2cs /
> proj.
>
> The resolutions we will be working at are: 100 km x 100km initially, to
> explore the data, 50 km x 50 km or 20 km x 20 km later on, but only if our
> data are so good as to allow us to do so (we are not sure yet). The results
> will be shown on a Africa - wide map in any case, and not on sub regions.
>
> We will not use any larger or smaller scale maps.
>
> What do you think?
>
> Best,
>
> strebe at aol.com wrote:
> > 
> > 
> > 
> > Corrado:
> > 
> > You did not indicate if you will be making a single map of all of Africa,
> > or a series of much larger-scale maps. If it is a map of all of Africa,
> > then your choice of ellipsoid is not going to matter much, in which case
> > WGS84 is a good default because GPS data sources are already referred to
> > the WGS84 datum and because datum conversion parameters normally are
> > specified against WGS84.
> > 
> > 
> > 
> > 
> > Otherwise, use the ellipsoid and datum from which your source data are
> > culled unless you have some specific reason not to. If your data come
> > from many datums and ellipsoids, then again, it surely makes most sense
> > to use WGS84 as a standard.
> > 
> > 
> > 
> > 
> > If you will be making a series of large-scale maps of (known) high
> > accuracy, then it makes more sense to standardize on a datum that fits
> > Africa better than WGS84. The Clarke 1880 ellipsoid dominates the extant
> > African datums, but I am not aware of any named datum that has been
> > formulated as a best fit for the entire African continent, though there
> > are mean solutions for large regions, such as ARC 1950.
> > 
> > 
> > 
> > 
> > If your project is such a series of large-scale maps, by the way, I would
> > not use an equal-area projection if I were you. A conformal projection
> > will give more benefits on the ground and the areal inflation will be
> > negligible until you reach medium-scale.
> > 
> > 
> > 
> > 
> > 
> > Regards,
> > 
> > — daan Strebe
> > 
> > 
> > 
> > -----Original Message-----
> > From: Corrado Topi <ct529 at york.ac.uk>
> > To: proj at lists.maptools.org
> > Sent: Mon, 8 Dec 2008 2:50 am
> > Subject:=2
> > 0[Proj] Re: Mapping Africa in an equal area projection
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > Thanks Daan!
> > 
> > What ellipsoid / datum, would you choose? WGS84, ETRS89, or waht else?
> > 
> > Regards
> > 
> > 
> > strebe at aol.com wrote:
> > 
> >
> >> 
> >> Corrado:
> >> 
> >> 
> >> 
> >> Of the candidates you list, I would call Mollweide inappropriate because
> >> it stretches Africa north-south to in order to reduce distortion
> >> elsewhere. It really is best left for world maps, where that compromise
> >> results in some benefit. Any of the others you list could be reasonable,
> >> depending on how they are constructed.
> >> 
> >> Because Africa spans roughly
> >> the same latitudinal range north as south, an equatorial Lambert
> >> azimuthal equal-area is a fine choice, and will give you the lowest
> >> distortion of the group. Nor are there any better projections to
> >> recommend without going exotic. Sinusoidal is not a common modern
> >> choice, and I do not recommend it in this case because you will end up
> >> with higher distortion around the periphery than the other projections,
> >> and with no compensation.
> >> 
> >> Unless your application would benefit from straight parallels and
> >> meridians, or unless your two standard parallels happen to be exactly
> >> latitudes of opposite sign, then Albers will always perform better than
> >> cylindric equal-area. But the advantages of Albers are largely lost on
> >> Africa unless you were willing to do something exotic like a heavily
> >> oblique aspect. Left with its standard parallels set to the graticule
> >> parallels, it would end up very
> >
> > similar to the cylindric equal-area
> >
> >> (because the two standard parallels would be nearly latitudes of
> >> opposite sign), and in that case it cannot approach Lambert for low
> >> distortion across your region of interest.
> >> 
> >> Regards,
> >> — daan Strebe
> >
> > 
> > 
>
> -- 
> Corrado Topi
>
> Global Climate Change & Biodiversity Indicators
> Department of Biology, University of York, UK
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Area 18,Department of Biology
University of York, York, YO10 5YW, UK
Phone: + 44 (0) 1904 328645, E-mail: ct529 at york.ac.uk



From strebe at aol.com  Wed Dec 10 01:17:25 2008
From: strebe at aol.com (strebe)
Date: Wed, 10 Dec 2008 01:17:25 -0800
Subject: [Proj] Re: Mapping Africa in an equal area projection
In-Reply-To: <200812100849.52755.ct529@york.ac.uk>
Message-ID: <9A910C75.40BD.453A.9948.2829CC8975D3@aol.com>


Dear Corrado:

At the scales you are working with, there is no point in worrying about ellipsoids. Spherical development is fine. You should use Albers equal area conic for North America and Eurasia, choosing standard parallels inset about 1/6th from the continental north/south extremes. Lambert azimuthal equal-area will work well with South America, Australia, and Antarctica each separately if you use the oblique case, centering it in the center of the continent.

Regards,
— daan Strebe


On Dec 10, 2008, at 12:49:52 AM, Corrado <ct529 at york.ac.uk> wrote:
Dear Daan,

yes, 20 km x 20 km would be the higher resolution, but I do not think we have 
enough data to work at that resolution. Our data have all different 
resolutions, we will need to aggregate them ....

Yes, the map is supposed to fit on the journal pages .... let's say maximum 
A4.

PS: Is Lambert a good choice also for other continents? For another project I 
have to choose a projection / ellipsoid / datum , equal area, that is good 
for the whole world, with the smallest data cell at 10km x 10km. I would need 
to draw continental maps as well as some country maps. Do you think it is 
better to open a new thread altogether?

Best,

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081210/37c2317e/attachment.html>

From ct529 at york.ac.uk  Wed Dec 10 01:58:27 2008
From: ct529 at york.ac.uk (Corrado Topi)
Date: Wed, 10 Dec 2008 09:58:27 +0000
Subject: [Proj] Mapping the rest of the world - Re: Mapping Africa in an
	equal area projection
References: <200812100849.52755.ct529@york.ac.uk>
	<9A910C75.40BD.453A.9948.2829CC8975D3@aol.com>
Message-ID: <gho3s3$j1p$1@ger.gmane.org>

Dear Daan,

thanks a lot for point 1!

For point 2, unfortunately, we need to use the same projection for the whole
world, because some of the maps would be shown at world wide scale.

What do you think?


strebe wrote:

> 
> Dear Corrado:
> 
> At the scales you are working with, there is no point in worrying about
> ellipsoids. Spherical development is fine. You should use Albers equal
> area conic for North America and Eurasia, choosing standard parallels
> inset about 1/6th from the continental north/south extremes. Lambert
> azimuthal equal-area will work well with South America, Australia, and
> Antarctica each separately if you use the oblique case, centering it in
> the center of the continent.
> 
> Regards,
> — daan Strebe
> 
> 
> On Dec 10, 2008, at 12:49:52 AM, Corrado <ct529 at york.ac.uk> wrote:
> Dear Daan,
> 
> yes, 20 km x 20 km would be the higher resolution, but I do not think we
> have enough data to work at that resolution. Our data have all different
> resolutions, we will need to aggregate them ....
> 
> Yes, the map is supposed to fit on the journal pages .... let's say
> maximum A4.
> 
> PS: Is Lambert a good choice also for other continents? For another
> project I have to choose a projection / ellipsoid / datum , equal area,
> that is good for the whole world, with the smallest data cell at 10km x
> 10km. I would need to draw continental maps as well as some country maps.
> Do you think it is better to open a new thread altogether?
> 
> Best,

-- 
Corrado Topi

Global Climate Change & Biodiversity Indicators
Department of Biology, University of York, UK



From geraldi.evenden at gmail.com  Wed Dec 10 08:00:43 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Wed, 10 Dec 2008 11:00:43 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812092151.35363.geraldi.evenden@gmail.com>
	<ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
Message-ID: <200812101100.43883.geraldi.evenden@gmail.com>

On Tuesday 09 December 2008 10:53:10 pm you wrote:
> On Tue, Dec 9, 2008 at 7:51 PM, Gerald I. Evenden
>
> <geraldi.evenden at gmail.com> wrote:
> > On Monday 08 December 2008 4:35:50 pm Richard Greenwood wrote:
	...
> Gerald,
>
> I have been using Proj.4 and following this list for long enough to
> know your interest in, and contributions to, this project. I have
> enough gray hair to remember the USSR and to be able to use with UNIX
> pipes. I can relate to your frustration, but I can not sympathize with
> it.
>
> We have moved beyond paper maps and can no longer segregate
> cartography from geodesy - projections from datums. The addition of
> datum support was necessary and well intentioned. The implementation
> was probably imperfect.

You have, for the most part, missed my point entirely.  First, part of the 
effect of treating the problem as a combination is poor software practice and 
leads to unnecessary complexity in software development and maintenance.

Secondly, just because overview of dealing with the existing state of 
coordinate systems necessitates dealing with both datums *and* projections 
does not mean that datums and projections are in and of themselvese 
connected; they obviously are not.  Their only connection is being one of the 
many individual elements of the issue.  Is the math library to be hacked into 
pieces to facilitate tangent's use in this problem?  Do we change tangent 
software in the same manner as pj_init because tangent is used in doing grid 
system problems?

Also, this seemingly devinely designated datum-projection combination attitude 
may stiffle improvement of grids where use of alternate projections may be 
more desirable; not that anyone here has control over this decision. ;-)

> Perfecting the implementation of Proj.4 as a comprehensive _coordinate
> system_ library (not just a projection library) without a major
> rewrite is not likely. Restricting it to just a projection library
> would diminish its value to such an extent that it would lose its
> relevance.

The basic concept underlying 'Proj.4' is not wrong; just the implementation.  
Also it would have been a good idea to not use the name 'Proj.4' because it 
is much more than a "projection" package.

> Respectively yours,
> Rich

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From geraldi.evenden at gmail.com  Wed Dec 10 08:13:00 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Wed, 10 Dec 2008 11:13:00 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <18751.30207.519867.360940@cerise.gclements.plus.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
	<18751.30207.519867.360940@cerise.gclements.plus.com>
Message-ID: <200812101113.00836.geraldi.evenden@gmail.com>

On Wednesday 10 December 2008 2:55:43 am Glynn Clements wrote:
> Richard Greenwood wrote:
> > We have moved beyond paper maps and can no longer segregate
> > cartography from geodesy - projections from datums. The addition of
> > datum support was necessary and well intentioned. The implementation
> > was probably imperfect.
> >
> > Perfecting the implementation of Proj.4 as a comprehensive _coordinate
> > system_ library (not just a projection library) without a major
> > rewrite is not likely. Restricting it to just a projection library
> > would diminish its value to such an extent that it would lose its
> > relevance.
>
> All software is imperfect. But FWIW, the way that the current PROJ and
> cs2cs handle the datum and ellipsoid was perfectly adequate for every
> known use case until Google decided that they were going to use WGS84
> for geographic coordinates but project them using spherical Mercator.

And there was absolutely *nothing* wrong with what Google decided to do.  In 
fact, the only thing *I* would have done differently is use a better 
projection than Mercator.

The problem is in cs2cs.

> AFAICT, the simplest workaroud for the Google bug is to add another
> projection, e.g. +proj=sphmerc, which claims to be an ellipsoidal
> projection but implements spherical Mercator regardless of the actual
> ellipsoid eccentricity.

Mercator is a legitimate projection whether using a sphere or an ellipsoid.  
In any case of small scale usage I would use a sphere for mapping simply 
because there is *no* reason to waste CPU clicks for an ellipsoid.  In fact, 
for computer screen usage you would have to go to rediculously low scales to 
find any reason to use an ellipsoid in the projection.

Google should be given kudos for rational projection usage!

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From dagnew at ucsd.edu  Wed Dec 10 10:00:16 2008
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Wed, 10 Dec 2008 10:00:16 -0800
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <18751.30207.519867.360940@cerise.gclements.plus.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081335.28031.geraldi.evenden@gmail.com>
	<ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
	<200812092151.35363.geraldi.evenden@gmail.com>
	<ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
	<18751.30207.519867.360940@cerise.gclements.plus.com>
Message-ID: <262bb057bf2db829a521b55c68152b79@ucsd.edu>

Since proj doesn't know where its coordinates come from, +proj=merc 
will do the spherical Mercator as it
stands (I assume)--no need for a new flag. I suppose this illustrates 
Gerald's concerns about confusion resulting from the mixing of datums 
and projections in one routine; I'll say, as a user, that it is 
convenient to be able to combine datum shifts and grid conversions in 
one routine, though it would be
equally convenient to separate them and use pipes. The usual problem of 
path-dependence: see the QWERTY
keyboard and the 4'8.5" railway gauge.

I'll disagree with Gerald about Google Maps--their Mercator is an 
excellent choice for their purpose. It is a terrible choice for a 
global projection of a static map, but an excellent one at large 
scales, which is where all the activity on Google Maps ends up. And for 
doing preliminary locations, a familiar cylindrical projection has 
merit even at a global scale. I do agree with Gerald that for a paper 
global map, equal-area should be the default choice, absent some other 
need.

Duncan Agnew



From geraldi.evenden at gmail.com  Wed Dec 10 10:36:45 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Wed, 10 Dec 2008 13:36:45 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <262bb057bf2db829a521b55c68152b79@ucsd.edu>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<18751.30207.519867.360940@cerise.gclements.plus.com>
	<262bb057bf2db829a521b55c68152b79@ucsd.edu>
Message-ID: <200812101336.45127.geraldi.evenden@gmail.com>

On Wednesday 10 December 2008 1:00:16 pm Duncan Agnew wrote:
> Since proj doesn't know where its coordinates come from, +proj=merc
> will do the spherical Mercator as it
> stands (I assume)--no need for a new flag. I suppose this illustrates
> Gerald's concerns about confusion resulting from the mixing of datums
> and projections in one routine; I'll say, as a user, that it is
> convenient to be able to combine datum shifts and grid conversions in
> one routine, though it would be
> equally convenient to separate them and use pipes. The usual problem of
> path-dependence: see the QWERTY
> keyboard and the 4'8.5" railway gauge.
>
> I'll disagree with Gerald about Google Maps--their Mercator is an
> excellent choice for their purpose. It is a terrible choice for a
> global projection of a static map, but an excellent one at large
> scales, which is where all the activity on Google Maps ends up.

I think you have your "large scale" definition mixed up---
	"large scale"= 1:10,000
	"small scale"= 1:1,000,000
1/10,000 > 1/1,000,000
The size of the denominator is inverse the verbal approximation.  Common 
error.

As for large scale (1:10,000) why not use equirectangular---cheap 
computationally and who's to know on a computer screen?

> And for 
> doing preliminary locations, a familiar cylindrical projection has
> merit even at a global scale. I do agree with Gerald that for a paper
> global map, equal-area should be the default choice, absent some other
> need.

For thematic mapping---equal area is always the choice.

> Duncan Agnew
>

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From geraldi.evenden at gmail.com  Wed Dec 10 10:59:20 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Wed, 10 Dec 2008 13:59:20 -0500
Subject: [Proj] The problem with proj.4
In-Reply-To: <18751.30207.519867.360940@cerise.gclements.plus.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
	<18751.30207.519867.360940@cerise.gclements.plus.com>
Message-ID: <200812101359.20842.geraldi.evenden@gmail.com>

While there seems to be lull in the hot debate about separation of church and 
state ... er ... datum and projection, I was browsing the net and also 
looking at everyone's bible: Guidance Note 7.

What seems clear is that seemingly without exception discussions about datums 
and projections are divided into different web sites and/or different section 
or different "chapters".  Even in GN-7 there are the sections on projections 
followed by sections on datum shifting.

Thus, why is it so necessary to bind the two operations so tightly as done in 
the proj.4 distribution?  I cannot find a precedence for this concept.

But remember, I am talking about the library and building blocks of useful 
software and *not* application programs.  It is certainly fine that cs2cs 
combines the operations but its creation could have just as easily (more 
easily, most likely) done with function-separated material.  The user would 
have been none the wiser.

My advice would be to see a collection of "libraries" with functions covering 
most if not all phases of geodetic computations.  My new geodesic lib would 
be include once I do the version with 'h'.  There should be a library 
covering *all* the various datum transformation methods.  I don't think the 
current proj.4 stuff is so comprehensive.  Somewhere, the xyz material fits 
in. Etc, etc.  Applications will naturally follow---and use the libraries of 
the collection.

Lastly, the collection should not be called proj.4.  A more appropriate name 
should be given for the general collection.  Anything with "proj" in the 
title should be just what it indicates: projection material.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From AWilliams at rapidmap.com  Wed Dec 10 20:35:46 2008
From: AWilliams at rapidmap.com (Andrew Williams)
Date: Thu, 11 Dec 2008 15:35:46 +1100
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
References: <200812010946.mB19kXYE013117@duke.maptools.org>
	<200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local>
	<4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
Message-ID: <29C3A52E0876C94C97BD6443FA96F73371BF3F157B@rms03.rapidmap.local>

Thanks Duncan. That "docking" scenario was how the system was sold to me by the developer of the hardware (Navcom).

Guess the brochure sounds better than the technically correct description;)

So just to make sure ITRF varies over time compared to WGS84 based on tectonics, correct?

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Duncan Agnew
Sent: Thursday, 4 December 2008 5:24 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Since I am in the crustal-motion business I want to correct the previous
posting about ITRF. This is "space-based" only in the sense that it uses
data from outside the Earth (GPS and other satellites, along with
distant
radio sources).  It was not designed with space use in mind. Since ITRF
and
WGS84 are both space-based in this sense, they align closely: after all,
the center of the Earth and the rotation pole are both non-arbitrary.

ITRF was designed to be an ultraprecise reference frame for measuring
motions
of the Earth as a whole, and of different parts relative to each other.
Since
the frame is designed to be fixed relative to the velocities of all the
tectonic plates, averaged over the whole Earth, any particular point
will
have time-varying coordinates in this frame--as is is in fact true for
any
frame not tied to a particular plate (WGS-84 included), though many
softwares
do not take account of this. The people who develop and update ITRF are
working at the millimeter level.

Two "plate-fixed" frames are NAD (at least east of the Rockies), and
EUREF
(for Northern Europe). Rather weirdly, Australia has chosen not to
define
a local frame, even though it has a plate all to itself.

For more on ITRF, see http://itrf.ensg.ign.fr/

Duncan Agnew

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From j.l.h.hartmann at uva.nl  Thu Dec 11 07:20:07 2008
From: j.l.h.hartmann at uva.nl (Jan Hartmann)
Date: Thu, 11 Dec 2008 16:20:07 +0100
Subject: [Proj] Ellipsoid problem? Converting 1850 Dutch map to present
 day coordinate system
In-Reply-To: <29012734.1951901228943349917.JavaMail.support.mn@elisanet.fi>
References: <29012734.1951901228943349917.JavaMail.support.mn@elisanet.fi>
Message-ID: <49412FA7.4030209@uva.nl>

Thanks Janne. See the result of shifting the map 50M south:

http://mapserver.sara.nl/tmk/tmk1850_to_rd1970_shifted.png

Errors are smaller, but he map is still not as good as it could be. All 
arrows now point more or less at Amsterdam, which is nice, but not as it 
should be :-). The problem is that the errors are not linear in x or y, 
but are distributed more or less in concentric circles round the point 
of origin. It certainly has something to do with the ellipsoid used.

Oh, and by the way, if I change the ellipsoids in the cs2cs string 
below, results are different, as they should be. However, if I use the 
same method with latlon coordinates, results are the same, regardless of 
the ellipses used. Is this as it should be? Latlon values on the Bessel 
ellipsoid are different from latlon values on another ellipsoid, aren't 
they? At least the latlon values recorded in 1850 are significantly 
different from the modern latlon values for locations that are 
physically the same in both years.

Jan

support.mn at elisanet.fi wrote:
> Hello,
>
> the problem might be due to using wrong projection origin for some
> of the projections, since that usually also shifts the points. You might
> experiment by moving one of the latitude or longitude origins one at a
> time and then examining the results. When they start to minimize you
> are moving to the right direction with the origin.
>
> Regards: Janne.
>
> ---------------------------------
>
> Jan Hartmann [j.l.h.hartmann at uva.nl] kirjoitti:
>> Hi
>>
>> Sorry to bother you again with my Dutch maps, but perhaps someone 
>> with more mathematical insight than I have can help. I am 
>> reprojecting about 650 control points from the official Dutch 
>> projection from  1850 (TMK), to the the present projection (RD). The 
>> coordinates of all points are known in both systems.  When I use 
>> cs2cs to project the points from the old system to the new,  the 
>> computed points  are 30-80 meters away from the official ones. See
>>
>> http://mapserver.sara.nl/tmk/tmk1850_to_rd1970.png
>>
>> There is some random error here, but most of the deviations look 
>> systematic to me. The 1850 had its central meridian over Amsterdam, 
>> and the arrows point to that central meridian. Could this possibly  
>> be an ellipsoid-related problem, and if so, how do I compute a better 
>> proj-string? It's not a Datum problem: the 1850 latlon coordinates 
>> and the corresponding present WGS84 coordinates are also know:
>>
>> http://mapserver.sara.nl/tmk/latlon_1850_to_latlon_wgs84_1970.png
>>
>> and they give completely different and much larger deviations.
>>
>> Any hints would be appreciated. I've been using the following 
>> parameters, based on the official documentation from both periods:
>>
>> cs2cs -E -f "%6.0f"  \
>>      +proj=bonne +lat_1=51.5 +lon_0=4.8838828  \
>>      +units=m +no_defs \
>>      +a=6376950.4 +rf=309.65  \
>>  +to +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 \
>>      +k=0.999908 +x_0=155000 +y_0=463000 \
>>      +units=m +no_defs  \
>>      +ellps=intl
>>
>>
>>
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



From Mikael.Rittri at carmenta.com  Thu Dec 11 07:43:08 2008
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Thu, 11 Dec 2008 16:43:08 +0100
Subject: [Proj] What about datum shift via direct projection?
In-Reply-To: <200812101359.20842.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi><ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com><18751.30207.519867.360940@cerise.gclements.plus.com>
	<200812101359.20842.geraldi.evenden@gmail.com>
Message-ID: <FAF6E56B26D2044696772EBE89B15351014B4BEF@posty.carmenta.se>


Gerald wrote: 
> While there seems to be lull in the hot debate about separation of 
> church and state ... er ... datum and projection,
> [...] 
> Thus, why is it so necessary to bind the two operations so tightly as done
> in the proj.4 distribution? I cannot find a precedence for this concept. 

This post is not specifically about the PROJ.4 design (so I changed
the Subject line), but it is about how much datums and projections 
can and should be separated.  

There is method for datum shift that uses a direct projection.  

As an example, the old Swedish Grid is traditionally defined 
on the Swedish RT90 datum (ellipsoid: Bessel 1841) and using a 
Transverse Mercator projection with 
   central meridian: 15° 48' 29.8" E 
   scale factor:     1
   false easting:    1500000 m 
   false northing:   0 m
( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=4766&lang=EN ) 

With this definition, one would need some datum shift method 
to transform between RT90 lon/lat and WGS84 lon/lat.

However, a simpler method, now recommended by the Swedish Land Survey
instead of a 7-parameter shift, is to start from the WGS84 datum, and than
tweak the projection parameters a little: just use a Transverse Mercator 
with 
   central meridian: 15° 48' 22.624306" E   
   scale factor:     1.00000561024
   false easting:    1500064.274 m
   false northing:   -667.711 m
( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=5197&lang=EN ) 

A paper describing this technique is 
http://www.fig.net/pub/fig2006/papers/ps05_03/ps05_03_04_engberg_lilje_0670.pdf .

So, I have some rather vague questions to the readers of this list:
- What do you think of this technique?
- Is anyone else using it? 
- Doesn't the technique imply that a projected coordinate system 
  may have an ambiguous geographic coordinate system?  For the Swedish Grid,
  I can think of the geographic coordinate system as RT90 lon/lat, if I use 
  the traditional projection parameters. Or I can think of it as WGS84 lon/lat, 
  if I use the direct projection instead.
- If the correct answer to the previous question is "No, you fool", then what? 
  If I wanted to express the Swedish Grid, datum-shifted by the direct projection,
  in Well-Know Text, then I would be forced to say that the geographic coordinate 
  system is WGS84 lon/lat. But then the resulting CRS cannot be Swedish Grid, 
  because Swedish Grid has traditionally RT90 lon/lat as its geographic coordinate 
  system. 

I think direct projections for datum shifts are efficient and easy to
use, and normally as accurate as a 7-parameter shift.  But when I try 
to fit this method into the traditional framework that separates datum 
shifts and projections, and which insists that each projected CRS
has a unique geographic coordinate system, I run into problems.

Are these problems caused by inflexibility in the traditional framework? 
Or is the method of direct projection just weird? 
Or am I missing some good way to reconcile them? 
  
Best regards, 

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com


From cjmce at lsu.edu  Thu Dec 11 08:50:49 2008
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Thu, 11 Dec 2008 10:50:49 -0600
Subject: [Proj] What about datum shift via direct projection?
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi><ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com><18751.30207.519867.360940@cerise.gclements.plus.com><200812101359.20842.geraldi.evenden@gmail.com>
	<FAF6E56B26D2044696772EBE89B15351014B4BEF@posty.carmenta.se>
Message-ID: <B597ADFC46B67741B18EA6AA13613FF7EC256D@email002.lsu.edu>

In regard to "direct projection,"  it happens to be a very old method of changing datums.  With some variations, it is essentially how the European Datum of 1950 was developed by the U.S. Army Map Service (AMS) after WWII.  They used the UTM Grid to accomplish the result on the complex plane.  Designed by Geodesists at AMS, the paper and pencil work was done mostly by Europeans after the war.  ED50 covered (and covers) all of Western Europe and the entire Mediterranean Region.
 
It's not that elegant, but it DOES work, especially if you are not too concerned about the geoid.  Cartometrically speaking, it's "bang on."
 
Cliff Mugnier
LOUISIANA STATE UNIVERSITY

________________________________

From: proj-bounces at lists.maptools.org on behalf of Mikael Rittri
Sent: Thu 11-Dec-08 09:43
To: PROJ.4 and general Projections Discussions
Subject: [Proj] What about datum shift via direct projection?




Gerald wrote:
> While there seems to be lull in the hot debate about separation of
> church and state ... er ... datum and projection,
> [...]
> Thus, why is it so necessary to bind the two operations so tightly as done
> in the proj.4 distribution? I cannot find a precedence for this concept.

This post is not specifically about the PROJ.4 design (so I changed
the Subject line), but it is about how much datums and projections
can and should be separated. 

There is method for datum shift that uses a direct projection. 

As an example, the old Swedish Grid is traditionally defined
on the Swedish RT90 datum (ellipsoid: Bessel 1841) and using a
Transverse Mercator projection with
   central meridian: 15° 48' 29.8" E
   scale factor:     1
   false easting:    1500000 m
   false northing:   0 m
( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=4766&lang=EN )

With this definition, one would need some datum shift method
to transform between RT90 lon/lat and WGS84 lon/lat.

However, a simpler method, now recommended by the Swedish Land Survey
instead of a 7-parameter shift, is to start from the WGS84 datum, and than
tweak the projection parameters a little: just use a Transverse Mercator
with
   central meridian: 15° 48' 22.624306" E  
   scale factor:     1.00000561024
   false easting:    1500064.274 m
   false northing:   -667.711 m
( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=5197&lang=EN )

A paper describing this technique is
http://www.fig.net/pub/fig2006/papers/ps05_03/ps05_03_04_engberg_lilje_0670.pdf .

So, I have some rather vague questions to the readers of this list:
- What do you think of this technique?
- Is anyone else using it?
- Doesn't the technique imply that a projected coordinate system
  may have an ambiguous geographic coordinate system?  For the Swedish Grid,
  I can think of the geographic coordinate system as RT90 lon/lat, if I use
  the traditional projection parameters. Or I can think of it as WGS84 lon/lat,
  if I use the direct projection instead.
- If the correct answer to the previous question is "No, you fool", then what?
  If I wanted to express the Swedish Grid, datum-shifted by the direct projection,
  in Well-Know Text, then I would be forced to say that the geographic coordinate
  system is WGS84 lon/lat. But then the resulting CRS cannot be Swedish Grid,
  because Swedish Grid has traditionally RT90 lon/lat as its geographic coordinate
  system.

I think direct projections for datum shifts are efficient and easy to
use, and normally as accurate as a 7-parameter shift.  But when I try
to fit this method into the traditional framework that separates datum
shifts and projections, and which insists that each projected CRS
has a unique geographic coordinate system, I run into problems.

Are these problems caused by inflexibility in the traditional framework?
Or is the method of direct projection just weird?
Or am I missing some good way to reconcile them?
 
Best regards,

--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081211/4d9d422e/attachment.html>

From Chris.Barker at noaa.gov  Thu Dec 11 10:51:27 2008
From: Chris.Barker at noaa.gov (Christopher Barker)
Date: Thu, 11 Dec 2008 10:51:27 -0800
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <200812092151.35363.geraldi.evenden@gmail.com>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812081335.28031.geraldi.evenden@gmail.com>
	<ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com>
	<200812092151.35363.geraldi.evenden@gmail.com>
Message-ID: <4941612F.3050505@noaa.gov>

First, let me say that I am a Scientist/Engineer first, a Software 
developer second, and a cartographer a very, very, very, distant third...

So take my comments as you will.

Gerald I. Evenden wrote:
> Clearly note: that it was and still is quite clear that datum conversions and 
> projection operations are totally different, mathematically and logically, 

Are they really so different mathematically? I see both as a transform 
from one coordinate system to another. I suppose that a projection is 
from a spheroidal(or ellipsoidal) system to a Cartesian one, if that's 
what you mean. Though if you want to go from one projection to another, 
then it's still a Cartesian to Cartesian transform -- do you always go 
through geo-coords to get from one projection to another?

> there is *no* reason to combine the operations into one procedure.  
> Programmatically combining the operation made no sense and was a clear 
> violation of modular programming practices.

Here is where a take issue -- but maybe it's only with what you mean by 
"combining". It seems to me that datum conversion and projecting share a 
great deal from a programming perspective. Certainly I/O, but also data 
needs (ellipsoids, etc) and others.

It also seems that EPSG has, like it or not, merged the two concerns and 
thus software that deals with EPSG codes needs to work with the two 
together.

> On the surface I find nothing wrong with cs2cs and it certainly should be a 
> valuable program.  However, I feel that the internals are put together in a 
> manner that first: made it harder to develop and now: much more difficult to 
> maintain.

I know nothing of the internals, so I can't comment.

But from a software development perspective, I feel strongly that one 
should think in terms of libraries first, and applications second. the 
projections+datums library should provide all the tools required to make 
it easy to write cs2cs, and I think this does mean a certain merging, or 
at least sharing of routines, between projection support and datum support.

 > By combining datum and projection operation internally with
> modifications of proj.4 it is impossible to easily upgrade cs2cs when 
> corrections or improvements of libproj4 become available.

That has nothing to do with cs2cs, it has to do with the fact that proj 
has been forked, and the two forks are not API compatible. I suppose 
PROJ.4 could have been built as a library that used libproj, adding the 
extra datum support, so that a fork would not have been required, but 
I'm not going to second-guess anyones decisions from years back.

It seems that all (most?) agree that PROJ.4 could use some refactoring 
(and maybe re-naming) -- but who has time to do it?

-Chris



-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov


From geraldi.evenden at gmail.com  Thu Dec 11 12:30:02 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Thu, 11 Dec 2008 15:30:02 -0500
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <4941612F.3050505@noaa.gov>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<200812092151.35363.geraldi.evenden@gmail.com>
	<4941612F.3050505@noaa.gov>
Message-ID: <200812111530.02873.geraldi.evenden@gmail.com>

On Thursday 11 December 2008 1:51:27 pm Christopher Barker wrote:
> First, let me say that I am a Scientist/Engineer first, a Software
> developer second, and a cartographer a very, very, very, distant third...
>
> So take my comments as you will.
>
> Gerald I. Evenden wrote:
> > Clearly note: that it was and still is quite clear that datum conversions
> > and projection operations are totally different, mathematically and
> > logically,
>
> Are they really so different mathematically? I see both as a transform
> from one coordinate system to another. I suppose that a projection is
> from a spheroidal(or ellipsoidal) system to a Cartesian one, if that's
> what you mean. Though if you want to go from one projection to another,
> then it's still a Cartesian to Cartesian transform -- do you always go
> through geo-coords to get from one projection to another?

If one cares to get involved with the literature I think you will find that 
there is deep divide between those involved in these two subjects.  It has 
already been pointed out that the late John Snyder, a well recognized expert 
on cartographic projections, rarely, if ever, published a word on datums.  
And this division of interest is quite common.  Trying to smash material on 
the surface of an ellipsoid to a flat surface is quite a different subject 
than  moving objects around on the top of roughly the surface.

I think I pointed out that I was involved for years making maps and I never 
had to fuss with datums basically because all our data was of the same datum.
But I did have to know about projections because of dealing with a large 
number of local grid systems---all on the same datum.

If one is fairly parochial in the extent of their data, their interest in 
datum conversion may be quite limited if present at all.

> > there is *no* reason to combine the operations into one procedure.
> > Programmatically combining the operation made no sense and was a clear
> > violation of modular programming practices.
>
> Here is where a take issue -- but maybe it's only with what you mean by
> "combining". It seems to me that datum conversion and projecting share a
> great deal from a programming perspective. Certainly I/O, but also data
> needs (ellipsoids, etc) and others.

For the most part there is precious little commonality other than the 
commonality of the chosen compiler language and the need for some 
mathematical background.  Personally, I find the datum problem somewhat dull
and a terrible disease inflicted upon us.  It is rather like the flu---we keep 
sneezing, coughing and have aching joints when we would like to speed on to 
the the fun part of drawing a picture.

> It also seems that EPSG has, like it or not, merged the two concerns and
> thus software that deals with EPSG codes needs to work with the two
> together.

I do not understand how you  can say that.  Their bible, Notes #7, is clearly 
divided between the projections and datum shifting problems.  In many cases 
with small scale maps I could care less about datum differences because the 
error in positioning caused by such ignorance would be infinitesimally small.

> > On the surface I find nothing wrong with cs2cs and it certainly should be
> > a valuable program.  However, I feel that the internals are put together
> > in a manner that first: made it harder to develop and now: much more
> > difficult to maintain.
>
> I know nothing of the internals, so I can't comment.

They are certainly available.

> But from a software development perspective, I feel strongly that one
> should think in terms of libraries first, and applications second. the
> projections+datums library should provide all the tools required to make
> it easy to write cs2cs, and I think this does mean a certain merging, or
> at least sharing of routines, between projection support and datum support.

I would rephrase as "projection library and datum library".  I can make maps 
without the datum library.

>  > By combining datum and projection operation internally with
> >
> > modifications of proj.4 it is impossible to easily upgrade cs2cs when
> > corrections or improvements of libproj4 become available.
>
> That has nothing to do with cs2cs, it has to do with the fact that proj
> has been forked, and the two forks are not API compatible. I suppose
> PROJ.4 could have been built as a library that used libproj, adding the
> extra datum support, so that a fork would not have been required, but
> I'm not going to second-guess anyones decisions from years back.

It has *everything* to do with the cs2cs problem.  Optimally done, the program 
would have been infinitely more easy to update and keep current with changes 
in either the projection or datum world, each world worked on by people with 
disparate interests.

> It seems that all (most?) agree that PROJ.4 could use some refactoring
> (and maybe re-naming) -- but who has time to do it?
>
> -Chris

Ah, the born defeatist.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From support.mn at elisanet.fi  Thu Dec 11 23:22:34 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Fri, 12 Dec 2008 09:22:34 +0200 (EET)
Subject: [Proj] Ellipsoid problem? Converting 1850 Dutch map to present
 day coordinate system
Message-ID: <20741318.1181741229066555257.JavaMail.support.mn@elisanet.fi>

Hello,

now it looks more like a scaling problem. One can clearly see the
bonne projection "ghost" starting to show. Now try to slightly change
the scale of some projection, either bonne or sterea.

Regards: Janne.

------------------------------------------------------

Jan Hartmann [j.l.h.hartmann at uva.nl] kirjoitti: 
> Thanks Janne. See the result of shifting the map 50M south:
> 
> http://mapserver.sara.nl/tmk/tmk1850_to_rd1970_shifted.png
> 
> Errors are smaller, but he map is still not as good as it could be. All 
> arrows now point more or less at Amsterdam, which is nice, but not as it 
> should be :-). The problem is that the errors are not linear in x or y, 
> but are distributed more or less in concentric circles round the point 
> of origin. It certainly has something to do with the ellipsoid used.
> 
> Oh, and by the way, if I change the ellipsoids in the cs2cs string 
> below, results are different, as they should be. However, if I use the 
> same method with latlon coordinates, results are the same, regardless of 
> the ellipses used. Is this as it should be? Latlon values on the Bessel 
> ellipsoid are different from latlon values on another ellipsoid, aren't 
> they? At least the latlon values recorded in 1850 are significantly 
> different from the modern latlon values for locations that are 
> physically the same in both years.
> 
> Jan
> 
> support.mn at elisanet.fi wrote:
> > Hello,
> >
> > the problem might be due to using wrong projection origin for some
> > of the projections, since that usually also shifts the points. You might
> > experiment by moving one of the latitude or longitude origins one at a
> > time and then examining the results. When they start to minimize you
> > are moving to the right direction with the origin.
> >
> > Regards: Janne.
> >
> > ---------------------------------
> >
> > Jan Hartmann [j.l.h.hartmann at uva.nl] kirjoitti:
> >> Hi
> >>
> >> Sorry to bother you again with my Dutch maps, but perhaps someone 
> >> with more mathematical insight than I have can help. I am 
> >> reprojecting about 650 control points from the official Dutch 
> >> projection from  1850 (TMK), to the the present projection (RD). The 
> >> coordinates of all points are known in both systems.  When I use 
> >> cs2cs to project the points from the old system to the new,  the 
> >> computed points  are 30-80 meters away from the official ones. See
> >>
> >> http://mapserver.sara.nl/tmk/tmk1850_to_rd1970.png
> >>
> >> There is some random error here, but most of the deviations look 
> >> systematic to me. The 1850 had its central meridian over Amsterdam, 
> >> and the arrows point to that central meridian. Could this possibly  
> >> be an ellipsoid-related problem, and if so, how do I compute a better 
> >> proj-string? It's not a Datum problem: the 1850 latlon coordinates 
> >> and the corresponding present WGS84 coordinates are also know:
> >>
> >> http://mapserver.sara.nl/tmk/latlon_1850_to_latlon_wgs84_1970.png
> >>
> >> and they give completely different and much larger deviations.
> >>
> >> Any hints would be appreciated. I've been using the following 
> >> parameters, based on the official documentation from both periods:
> >>
> >> cs2cs -E -f "%6.0f"  \
> >>      +proj=bonne +lat_1=51.5 +lon_0=4.8838828  \
> >>      +units=m +no_defs \
> >>      +a=6376950.4 +rf=309.65  \
> >>  +to +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 \
> >>      +k=0.999908 +x_0=155000 +y_0=463000 \
> >>      +units=m +no_defs  \
> >>      +ellps=intl
> >>
> >>
> >>
> >> _______________________________________________
> >> Proj mailing list
> >> Proj at lists.maptools.org
> >> http://lists.maptools.org/mailman/listinfo/proj
> >>
> >
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
> >
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From support.mn at elisanet.fi  Fri Dec 12 02:08:15 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Fri, 12 Dec 2008 12:08:15 +0200 (EET)
Subject: [Proj] The problem with proj.4
Message-ID: <2695583.1199311229076495342.JavaMail.support.mn@elisanet.fi>

Hello people,

Frank,

my main concern is that if there is any possible path that some
particular map reference can take, there should be a method
to fully describe it in proj.n (or whatever), if that is to be
"the system" to be used. We already heavily use the end
product adjustment possibility where we shift, scale and
rotate the resulting map. And we don't like, that we have to use
i so much. The definition should be so strong that when it is once
fully accurate it should take car of most adjustments. And it
also sometimes does it, thanks!

Why?

One have to remember that this end adjustment is only locally
defined for any single particular map. So we keep always telling
to the end users to define their maps correctly in the first place
and in the second place adjust them locally. But if one cannot
define that accurately since the definition language is missing
some parameters!?? What then... caos?

So fuzzy calculations are not acceptable. There have
to be a way to define the calculations clearly in a standardised
way. Nobody wants to enter all the formulas, so a description
languge like proj.4 (or similar) is needed. There is enough
fuzzyness in the end user local adjustments. We have to keep
it clean and precise at the definition level.

> "ellps", "R",
> a, b, rf and f.  Will we have to introduce "p" and "d" versions of all
> these?

Yes, I see no other way around? Do you see? And not only that.
The program should not do too many assumptions. It is better
to give an error message than take some fuzzy action that maybe
yields more problems later.

> Also, how often will we actually use them?

I am sure that people will use them more when they can use them.
Now it is just more or less hoping that everything would fit, but
nobody is not sure, since the calculation path is not in full control of
the definition language. And that really should!

We are not using proj.n because we cannot write such a library our
self (given enough time). The reason is that we need a precise and
standardised definition language. What is the library that executes
those descriptions is a different story. It is the same story as with
any computer programming languages. Nobody cares what target
computer or program compiles the standard language. People are
only concerned that the language it self is precise and yields accurate
and same results in all environments when executed.

It is the abstraction (and standardization) not the implementation
we are interested of.

best regards: Janne.





From Mikael.Rittri at carmenta.com  Fri Dec 12 04:53:16 2008
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Fri, 12 Dec 2008 13:53:16 +0100
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <29C3A52E0876C94C97BD6443FA96F73371BF3F157B@rms03.rapidmap.local>
References: <200812010946.mB19kXYE013117@duke.maptools.org><200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de><29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local><4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F157B@rms03.rapidmap.local>
Message-ID: <FAF6E56B26D2044696772EBE89B1535101534B0B@posty.carmenta.se>

Andrew Williams wrote:
> ITRF varies over time compared to WGS84 based on tectonics, correct? 

No. Neither ITRF nor WGS84 is attached to a tectonic plate. 
The difference between them is very small (I've heard that it is at most
something like 10 cm, but I don't remember where I heard it), and it does
not increase over time. The reason for the difference is just that 
coordinates in WGS84 cannot be measured as exactly as in ITRF.
(Source: http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide4.html )  

For WGS84-based mapping in Europe, we use ETRS89, which is 
attached to the Eurasian tectonic plate.  ETRS89 coincided with 
WGS84 on January 1, 1989, as if the WGS84 graticule had been
painted on the ground that day.  Since then, the ETRS89 (and Europe) 
has drifted away toward northeast by 2-3 cm/year.  So it is 
the difference between ETRS89 and WGS84 that increases due 
to continental drift. (Similarly for NAD83 in North America.) 

However, I am writing about WGS84 in a strict sense above. 
Many people who use GPS are familiar with WGS84, but they 
have never heard of ETRS89.  So these people will say "WGS84" 
when they really mean "ETRS89".  I believe differential GPS 
in Europe will really give ETRS89 coordinates, although most
users would call them WGS84 coordinates. 
 

Duncan Agnew wrote:
> Rather weirdly, Australia has chosen not to define a local frame, 
> even though it has a plate all to itself.

I am not a plate tectonician, but I believe this is wrong. 
The Geocentric Datum of Australia 1994 (GDA94) is attached
to the Australian plate. 
(Source: http://www.icsm.gov.au/icsm/gda/wgs84fact.pdf )

Best regards,
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Andrew Williams
Sent: den 11 december 2008 05:36
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Thanks Duncan. That "docking" scenario was how the system was sold to me by the developer of the hardware (Navcom).

Guess the brochure sounds better than the technically correct description;)

So just to make sure ITRF varies over time compared to WGS84 based on tectonics, correct?

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Duncan Agnew
Sent: Thursday, 4 December 2008 5:24 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Since I am in the crustal-motion business I want to correct the previous posting about ITRF. This is "space-based" only in the sense that it uses data from outside the Earth (GPS and other satellites, along with distant radio sources).  It was not designed with space use in mind. Since ITRF and
WGS84 are both space-based in this sense, they align closely: after all, the center of the Earth and the rotation pole are both non-arbitrary.

ITRF was designed to be an ultraprecise reference frame for measuring motions of the Earth as a whole, and of different parts relative to each other.
Since
the frame is designed to be fixed relative to the velocities of all the tectonic plates, averaged over the whole Earth, any particular point will have time-varying coordinates in this frame--as is is in fact true for any frame not tied to a particular plate (WGS-84 included), though many softwares do not take account of this. The people who develop and update ITRF are working at the millimeter level.

Two "plate-fixed" frames are NAD (at least east of the Rockies), and EUREF (for Northern Europe). Rather weirdly, Australia has chosen not to define a local frame, even though it has a plate all to itself.

For more on ITRF, see http://itrf.ensg.ign.fr/

Duncan Agnew

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From jagoncal at gmail.com  Fri Dec 12 05:56:45 2008
From: jagoncal at gmail.com (=?ISO-8859-1?Q?Jose_Gon=E7alves?=)
Date: Fri, 12 Dec 2008 13:56:45 +0000
Subject: [Proj] What about datum shift via direct projection?
In-Reply-To: <FAF6E56B26D2044696772EBE89B15351014B4BEF@posty.carmenta.se>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi>
	<ae9185aa0812091953gd6589b3id3c8170c8c898ae9@mail.gmail.com>
	<18751.30207.519867.360940@cerise.gclements.plus.com>
	<200812101359.20842.geraldi.evenden@gmail.com>
	<FAF6E56B26D2044696772EBE89B15351014B4BEF@posty.carmenta.se>
Message-ID: <6a91fcb00812120556g2fa7562ex81f65b771cd6c853@mail.gmail.com>

In Portugal we had a situation of that kind. There was an old datum (Datum
Lisboa) for which we had a local Transverse Mercator projection. A
reobservation of the triangulation resulted in a new datum (Datum 73) that
intended to replace the old one. It was decided to do a new projection,
keeping the same central point, but applying a small false easting and
northing (aprox. 180.6 m, -87.0 m) in order to create similar coordinates.
The average of absolute differences between old and new coordinates are
smaller than 2 meters and maximum difference is  5 meters.

Although this might have some advantages,  it resulted in many situations of
confusion. Around 1990 many people started GIS projects, but were not much
aware of map projections, and even less of geodetic datum concepts. Some
institutions adopted the new system but some kept the old one. Many times
old and new coordinates were simply mixed, losing information about their
origin. This results in serious problems in large scale mapping.
Now, in the transition to ETRS89 datum, the Portuguese Geographic Institute
decided to keep the TM projection and adjusted the central point (instead of
applying the small false easting/northing) in order to create a very similar
grid. The transition to a new similar system must be made carefully, always
keeping metadata about reference systems and defining rigorous
transformation methods.

Jose' A. Gonçalves
University of Porto - Science Faculty



2008/12/11 Mikael Rittri <Mikael.Rittri at carmenta.com>

>
> Gerald wrote:
> > While there seems to be lull in the hot debate about separation of
> > church and state ... er ... datum and projection,
> > [...]
> > Thus, why is it so necessary to bind the two operations so tightly as
> done
> > in the proj.4 distribution? I cannot find a precedence for this concept.
>
> This post is not specifically about the PROJ.4 design (so I changed
> the Subject line), but it is about how much datums and projections
> can and should be separated.
>
> There is method for datum shift that uses a direct projection.
>
> As an example, the old Swedish Grid is traditionally defined
> on the Swedish RT90 datum (ellipsoid: Bessel 1841) and using a
> Transverse Mercator projection with
>   central meridian: 15° 48' 29.8" E
>   scale factor:     1
>   false easting:    1500000 m
>   false northing:   0 m
> ( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=4766&lang=EN )
>
> With this definition, one would need some datum shift method
> to transform between RT90 lon/lat and WGS84 lon/lat.
>
> However, a simpler method, now recommended by the Swedish Land Survey
> instead of a 7-parameter shift, is to start from the WGS84 datum, and than
> tweak the projection parameters a little: just use a Transverse Mercator
> with
>   central meridian: 15° 48' 22.624306" E
>   scale factor:     1.00000561024
>   false easting:    1500064.274 m
>   false northing:   -667.711 m
> ( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=5197&lang=EN )
>
> A paper describing this technique is
>
> http://www.fig.net/pub/fig2006/papers/ps05_03/ps05_03_04_engberg_lilje_0670.pdf.
>
> So, I have some rather vague questions to the readers of this list:
> - What do you think of this technique?
> - Is anyone else using it?
> - Doesn't the technique imply that a projected coordinate system
>  may have an ambiguous geographic coordinate system?  For the Swedish Grid,
>  I can think of the geographic coordinate system as RT90 lon/lat, if I use
>  the traditional projection parameters. Or I can think of it as WGS84
> lon/lat,
>  if I use the direct projection instead.
> - If the correct answer to the previous question is "No, you fool", then
> what?
>  If I wanted to express the Swedish Grid, datum-shifted by the direct
> projection,
>  in Well-Know Text, then I would be forced to say that the geographic
> coordinate
>  system is WGS84 lon/lat. But then the resulting CRS cannot be Swedish
> Grid,
>  because Swedish Grid has traditionally RT90 lon/lat as its geographic
> coordinate
>  system.
>
> I think direct projections for datum shifts are efficient and easy to
> use, and normally as accurate as a 7-parameter shift.  But when I try
> to fit this method into the traditional framework that separates datum
> shifts and projections, and which insists that each projected CRS
> has a unique geographic coordinate system, I run into problems.
>
> Are these problems caused by inflexibility in the traditional framework?
> Or is the method of direct projection just weird?
> Or am I missing some good way to reconcile them?
>
> Best regards,
>
> --
> Mikael Rittri
> Carmenta AB
> Box 11354
> SE-404 28 Göteborg
> Visitors: Sankt Eriksgatan 5
> SWEDEN
> mikael.rittri at carmenta.com
> www.carmenta.com
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081212/2b6bdac6/attachment.html>

From warmerdam at pobox.com  Fri Dec 12 06:46:49 2008
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 12 Dec 2008 09:46:49 -0500
Subject: [Proj] The problem with proj.4
In-Reply-To: <2695583.1199311229076495342.JavaMail.support.mn@elisanet.fi>
References: <2695583.1199311229076495342.JavaMail.support.mn@elisanet.fi>
Message-ID: <49427959.1090601@pobox.com>

support.mn at elisanet.fi wrote:
  > So fuzzy calculations are not acceptable.

Janne,

I'm not sure what calculation you consider to be fuzzy.  There
are things that are not currently expressable in in a one
step transformation but I don't understand how anything is fuzzy.

> There have
> to be a way to define the calculations clearly in a standardised
> way. 

I don't disagree with this statement.  But one of my concerns is
that if this ability (distinct ellipsoid def for datum vs. projection
calcs) is added to PROJ.4 there will still be no analog in most
other coordinate system definitions I work with (GML, OGC WKT,
GeoTIFF, mapinfo, etc).  This significantly decreases my
enthusiasm.

I will note that anyone desiring more precise control over processing
steps can still make multiple calls into PROJ.4 - doing individual steps
(projection, then datum shift, then projection).   The downside of this
is that it puts an onus on the application to decompose the steps.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From ndzinn at comcast.net  Fri Dec 12 14:28:30 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Fri, 12 Dec 2008 16:28:30 -0600
Subject: [Proj] "Double Ellipsoid" error, reproduction
In-Reply-To: <4941612F.3050505@noaa.gov>
References: <9057890.766281228626656541.JavaMail.support.mn@elisanet.fi><200812081335.28031.geraldi.evenden@gmail.com><ae9185aa0812081335h68381b26j8031d60dd415c7f3@mail.gmail.com><200812092151.35363.geraldi.evenden@gmail.com>
	<4941612F.3050505@noaa.gov>
Message-ID: <17BB482C77544C7785B96C39C0CCBCB7@PowerSpec>

Since it's come up a few times, it's worth noting that the EPSG dataset
began as - and still pretty much is - an *inventory* of geodesy and
cartography encountered in the oil industry.  Projections *used* in the
industry, or by the national authorities from whom prospects are leased, are
always associated with a geodetic datum.  Consequently, projection *codes*
(with associated numerical grid parameters) have datums attached.  On the
other hand, projection *methods* (that one might find described
algorithmically in Guidance Note 7-2 without numerical grid parameters) do
not.  So, it's not really fair to characterize EPSG one way or another.
Datums are conflated when required for a specific usage, and are not when no
instance of usage is specified.  -Noel Zinn


-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Christopher Barker
Sent: Thursday, December 11, 2008 12:51 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] "Double Ellipsoid" error, reproduction

First, let me say that I am a Scientist/Engineer first, a Software 
developer second, and a cartographer a very, very, very, distant third...

So take my comments as you will.

Gerald I. Evenden wrote:
> Clearly note: that it was and still is quite clear that datum conversions
and 
> projection operations are totally different, mathematically and logically,


Are they really so different mathematically? I see both as a transform 
from one coordinate system to another. I suppose that a projection is 
from a spheroidal(or ellipsoidal) system to a Cartesian one, if that's 
what you mean. Though if you want to go from one projection to another, 
then it's still a Cartesian to Cartesian transform -- do you always go 
through geo-coords to get from one projection to another?

> there is *no* reason to combine the operations into one procedure.  
> Programmatically combining the operation made no sense and was a clear 
> violation of modular programming practices.

Here is where a take issue -- but maybe it's only with what you mean by 
"combining". It seems to me that datum conversion and projecting share a 
great deal from a programming perspective. Certainly I/O, but also data 
needs (ellipsoids, etc) and others.

It also seems that EPSG has, like it or not, merged the two concerns and 
thus software that deals with EPSG codes needs to work with the two 
together.

> On the surface I find nothing wrong with cs2cs and it certainly should be
a 
> valuable program.  However, I feel that the internals are put together in
a 
> manner that first: made it harder to develop and now: much more difficult
to 
> maintain.

I know nothing of the internals, so I can't comment.

But from a software development perspective, I feel strongly that one 
should think in terms of libraries first, and applications second. the 
projections+datums library should provide all the tools required to make 
it easy to write cs2cs, and I think this does mean a certain merging, or 
at least sharing of routines, between projection support and datum support.

 > By combining datum and projection operation internally with
> modifications of proj.4 it is impossible to easily upgrade cs2cs when 
> corrections or improvements of libproj4 become available.

That has nothing to do with cs2cs, it has to do with the fact that proj 
has been forked, and the two forks are not API compatible. I suppose 
PROJ.4 could have been built as a library that used libproj, adding the 
extra datum support, so that a fork would not have been required, but 
I'm not going to second-guess anyones decisions from years back.

It seems that all (most?) agree that PROJ.4 could use some refactoring 
(and maybe re-naming) -- but who has time to do it?

-Chris



-- 
Christopher Barker, Ph.D.
Oceanographer

Emergency Response Division
NOAA/NOS/OR&R            (206) 526-6959   voice
7600 Sand Point Way NE   (206) 526-6329   fax
Seattle, WA  98115       (206) 526-6317   main reception

Chris.Barker at noaa.gov
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From ndzinn at comcast.net  Mon Dec 15 12:53:24 2008
From: ndzinn at comcast.net (ndzinn at comcast.net)
Date: Mon, 15 Dec 2008 20:53:24 +0000 (UTC)
Subject: [Proj] What about datum shift via direct projection?
In-Reply-To: <FAF6E56B26D2044696772EBE89B15351014B4BEF@posty.carmenta.se>
Message-ID: <98292143.612991229374404956.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>



Mikael, 



  

Thanks for these references on direct projection.   Weird, yes, in the sense of unusual, but clever and useful for the reasons stated by the authors.   



  

Regarding the least-squares adjustment for the new CM, scale on CM and false coordinates, linearization of the TM algorithm by Taylor expansion must be exceptionally ugly, but this can be simply accomplished numerically to achieve the same results. 



  

Regarding your questions: 

·          It's clever. 

·          Apparently used in Australia by Featherstone (cited by the authors). 

·          No geographic ambiguity implied in my opinion.   You'll notice the ellipsoid has also changed along with the new parameters already mentioned, an obvious requirement to reduce the residuals of the adjustment.   

·          What the authors have conjured is a TM on WGS84 that emulates a TM on Bessel (RT90) point by point within acceptable error limits.   But this is just an approximation, as is a 7-parameter similarity transformation for that matter.   The only definitive transformation is that achieved by a readjustment of available survey data (lots of trilateration in Sweden apparently) with a new ellipsoidal model.   Only that will achieve the least sum of residuals squared.   Geographicals in 3D are closer to reality than anything we do in the plane.   



  

Again, thanks, 

Noel 




----- Original Message ----- 
From: "Mikael Rittri" <Mikael.Rittri at carmenta.com> 
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org> 
Sent: Thursday, December 11, 2008 9:43:08 AM GMT -06:00 US/Canada Central 
Subject: [Proj] What about datum shift via direct projection? 


Gerald wrote: 
> While there seems to be lull in the hot debate about separation of 
> church and state ... er ... datum and projection, 
> [...] 
> Thus, why is it so necessary to bind the two operations so tightly as done 
> in the proj.4 distribution? I cannot find a precedence for this concept. 

This post is not specifically about the PROJ.4 design (so I changed 
the Subject line), but it is about how much datums and projections 
can and should be separated.   

There is method for datum shift that uses a direct projection.   

As an example, the old Swedish Grid is traditionally defined 
on the Swedish RT90 datum (ellipsoid: Bessel 1841) and using a 
Transverse Mercator projection with 
   central meridian: 15° 48' 29.8" E 
   scale factor:     1 
   false easting:    1500000 m 
   false northing:   0 m 
( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=4766&lang=EN ) 

With this definition, one would need some datum shift method 
to transform between RT90 lon/lat and WGS84 lon/lat. 

However, a simpler method, now recommended by the Swedish Land Survey 
instead of a 7-parameter shift, is to start from the WGS84 datum, and than 
tweak the projection parameters a little: just use a Transverse Mercator 
with 
   central meridian: 15° 48' 22.624306" E   
   scale factor:     1.00000561024 
   false easting:    1500064.274 m 
   false northing:   -667.711 m 
( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=5197&lang=EN ) 

A paper describing this technique is 
http://www.fig.net/pub/fig2006/papers/ps05_03/ps05_03_04_engberg_lilje_0670.pdf . 

So, I have some rather vague questions to the readers of this list: 
- What do you think of this technique? 
- Is anyone else using it? 
- Doesn't the technique imply that a projected coordinate system 
  may have an ambiguous geographic coordinate system?  For the Swedish Grid, 
  I can think of the geographic coordinate system as RT90 lon/lat, if I use 
  the traditional projection parameters. Or I can think of it as WGS84 lon/lat, 
  if I use the direct projection instead. 
- If the correct answer to the previous question is "No, you fool", then what? 
  If I wanted to express the Swedish Grid, datum-shifted by the direct projection, 
  in Well-Know Text, then I would be forced to say that the geographic coordinate 
  system is WGS84 lon/lat. But then the resulting CRS cannot be Swedish Grid, 
  because Swedish Grid has traditionally RT90 lon/lat as its geographic coordinate 
  system. 

I think direct projections for datum shifts are efficient and easy to 
use, and normally as accurate as a 7-parameter shift.  But when I try 
to fit this method into the traditional framework that separates datum 
shifts and projections, and which insists that each projected CRS 
has a unique geographic coordinate system, I run into problems. 

Are these problems caused by inflexibility in the traditional framework? 
Or is the method of direct projection just weird? 
Or am I missing some good way to reconcile them? 
   
Best regards, 

-- 
Mikael Rittri 
Carmenta AB 
Box 11354 
SE-404 28 Göteborg 
Visitors: Sankt Eriksgatan 5 
SWEDEN 
mikael.rittri at carmenta.com 
www.carmenta.com 
_______________________________________________ 
Proj mailing list 
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081215/997b30fe/attachment.html>

From AWilliams at rapidmap.com  Mon Dec 15 14:16:47 2008
From: AWilliams at rapidmap.com (Andrew Williams)
Date: Tue, 16 Dec 2008 09:16:47 +1100
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <FAF6E56B26D2044696772EBE89B1535101534B0B@posty.carmenta.se>
References: <200812010946.mB19kXYE013117@duke.maptools.org><200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de><29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local><4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F157B@rms03.rapidmap.local>
	<FAF6E56B26D2044696772EBE89B1535101534B0B@posty.carmenta.se>
Message-ID: <29C3A52E0876C94C97BD6443FA96F73371BF3F15FE@rms03.rapidmap.local>

Mikael,
Perhaps it's my terminology.

As I understand it the GPS we have used Starfire differential service to correct it's position. It is a dual frequency GPS. The output coordinate is ITRF of the day.

The variation between WGS84 and ITRF of the day varies because of plate tectonics. That is WGS 84 framework was set at a time in history, but ITRF if calculated daily. The variable is the plate movements between them.

So when I said varies I meant the difference between the two frames varies between them because of plate tectonics.

I'm not expert all I know is that we have to write some pretty special code to account for this variation so that when we use this GPS for locating with WGS84 coordinates we can find them.

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikael Rittri
Sent: Friday, 12 December 2008 11:53 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Andrew Williams wrote:
> ITRF varies over time compared to WGS84 based on tectonics, correct?

No. Neither ITRF nor WGS84 is attached to a tectonic plate.
The difference between them is very small (I've heard that it is at most
something like 10 cm, but I don't remember where I heard it), and it does
not increase over time. The reason for the difference is just that
coordinates in WGS84 cannot be measured as exactly as in ITRF.
(Source: http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide4.html )

For WGS84-based mapping in Europe, we use ETRS89, which is
attached to the Eurasian tectonic plate.  ETRS89 coincided with
WGS84 on January 1, 1989, as if the WGS84 graticule had been
painted on the ground that day.  Since then, the ETRS89 (and Europe)
has drifted away toward northeast by 2-3 cm/year.  So it is
the difference between ETRS89 and WGS84 that increases due
to continental drift. (Similarly for NAD83 in North America.)

However, I am writing about WGS84 in a strict sense above.
Many people who use GPS are familiar with WGS84, but they
have never heard of ETRS89.  So these people will say "WGS84"
when they really mean "ETRS89".  I believe differential GPS
in Europe will really give ETRS89 coordinates, although most
users would call them WGS84 coordinates.


Duncan Agnew wrote:
> Rather weirdly, Australia has chosen not to define a local frame,
> even though it has a plate all to itself.

I am not a plate tectonician, but I believe this is wrong.
The Geocentric Datum of Australia 1994 (GDA94) is attached
to the Australian plate.
(Source: http://www.icsm.gov.au/icsm/gda/wgs84fact.pdf )

Best regards,
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Andrew Williams
Sent: den 11 december 2008 05:36
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Thanks Duncan. That "docking" scenario was how the system was sold to me by the developer of the hardware (Navcom).

Guess the brochure sounds better than the technically correct description;)

So just to make sure ITRF varies over time compared to WGS84 based on tectonics, correct?

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Duncan Agnew
Sent: Thursday, 4 December 2008 5:24 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Since I am in the crustal-motion business I want to correct the previous posting about ITRF. This is "space-based" only in the sense that it uses data from outside the Earth (GPS and other satellites, along with distant radio sources).  It was not designed with space use in mind. Since ITRF and
WGS84 are both space-based in this sense, they align closely: after all, the center of the Earth and the rotation pole are both non-arbitrary.

ITRF was designed to be an ultraprecise reference frame for measuring motions of the Earth as a whole, and of different parts relative to each other.
Since
the frame is designed to be fixed relative to the velocities of all the tectonic plates, averaged over the whole Earth, any particular point will have time-varying coordinates in this frame--as is is in fact true for any frame not tied to a particular plate (WGS-84 included), though many softwares do not take account of this. The people who develop and update ITRF are working at the millimeter level.

Two "plate-fixed" frames are NAD (at least east of the Rockies), and EUREF (for Northern Europe). Rather weirdly, Australia has chosen not to define a local frame, even though it has a plate all to itself.

For more on ITRF, see http://itrf.ensg.ign.fr/

Duncan Agnew

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From geraldi.evenden at gmail.com  Mon Dec 15 17:47:17 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 15 Dec 2008 20:47:17 -0500
Subject: [Proj] What about datum shift via direct projection?
In-Reply-To: <98292143.612991229374404956.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
References: <98292143.612991229374404956.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
Message-ID: <200812152047.17420.geraldi.evenden@gmail.com>

On Monday 15 December 2008 3:53:24 pm ndzinn at comcast.net wrote:
> Mikael,
>
> Thanks for these references on direct projection.   Weird, yes, in the
> sense of unusual, but clever and useful for the reasons stated by the
> authors.  
>
> Regarding the least-squares adjustment for the new CM, scale on CM and
> false coordinates, linearization of the TM algorithm by Taylor expansion
> must be exceptionally ugly, but this can be simply accomplished numerically
> to achieve the same results.

>etc, etc.

I frankly do not see what is so clever about it.  You can rubber sheet any 2D 
surface onto another---even Mickey Mouse's face.

I did basically the same thing with MAPGEN.  MAPGEN had no idea what 
projection was involve as the "projection" operation in MAPGEN was carried 
out with a polynomial approximation of the projection.  Works fairly well for 
large scale maps and is generally faster than cranking zillions of point 
though a full precision TM projection.

The only problem is that one still needs all the parts to generate the 
approximating rubber sheet.  And an added problem: keeping an audit trail for 
others to know what you did.  Also, do others have your magic rubber sheet 
evaluator or inverse operation capability?

Sorry, I have reservations about all this.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ndzinn at comcast.net  Mon Dec 15 19:29:11 2008
From: ndzinn at comcast.net (Noel Zinn)
Date: Mon, 15 Dec 2008 21:29:11 -0600
Subject: [Proj] What about datum shift via direct projection?
In-Reply-To: <200812152047.17420.geraldi.evenden@gmail.com>
References: <98292143.612991229374404956.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>
	<200812152047.17420.geraldi.evenden@gmail.com>
Message-ID: <48B74486ACFD4C4D922E85FB7B184212@PowerSpec>

My understanding of rubber sheeting is admittedly lacking, Gerald, but I
didn't know that it delivers the feature (fairly precise datum shifting)
that direct projection (per the reference) does.  

For those that have not followed the links, direct projection replaces the
following process,

LL(global)<>ECEF(global)<(7-parameter)>ECEF(local)<>LL(local)<>EN(proj),

with this, 

LL(global)<>EN(proj),

by a least-squares solution of the critical projection parameters (four in
the case of TM, and, additionally, the two ellipsoid parameters change from
local to global) over as many control points as you care to include.  There
is no change of projection.  Though possible, it will significantly
deteriorate the results (residuals on the control points) due to different
distortion footprints. The whole point is to plug the local control point EN
into the same projection with different parameters (and ellipsoid) and get
global (not local) LL.  

This whole exercise is handled mathematically without any visual reference
(the "sheet").  In fact, if you accept the 7-parameter geocentric ECEF datum
shift, the adjustment can be done with random numbers over the area of
interest (Sweden in this case).  But better if it be done with control
points whose survey data were originally adjusted on the local ellipsoid and
readjusted on the global ellipsoid, in order to reduce the residuals as much
as possible.  

I may be wrong, but I think this is more than rubber sheeting delivers.
Does MAPGEN do this?  With the centimetric residuals cited in the reference?
Over the size of a Swedish TM gon zone?

Nevertheless, I share your reservation.

Regards,
Noel

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Gerald I. Evenden
Sent: Monday, December 15, 2008 7:47 PM
To: proj at lists.maptools.org
Subject: Re: [Proj] What about datum shift via direct projection?

On Monday 15 December 2008 3:53:24 pm ndzinn at comcast.net wrote:
> Mikael,
>
> Thanks for these references on direct projection.   Weird, yes, in the
> sense of unusual, but clever and useful for the reasons stated by the
> authors.  
>
> Regarding the least-squares adjustment for the new CM, scale on CM and
> false coordinates, linearization of the TM algorithm by Taylor expansion
> must be exceptionally ugly, but this can be simply accomplished
numerically
> to achieve the same results.

>etc, etc.

I frankly do not see what is so clever about it.  You can rubber sheet any
2D 
surface onto another---even Mickey Mouse's face.

I did basically the same thing with MAPGEN.  MAPGEN had no idea what 
projection was involve as the "projection" operation in MAPGEN was carried 
out with a polynomial approximation of the projection.  Works fairly well
for 
large scale maps and is generally faster than cranking zillions of point 
though a full precision TM projection.

The only problem is that one still needs all the parts to generate the 
approximating rubber sheet.  And an added problem: keeping an audit trail
for 
others to know what you did.  Also, do others have your magic rubber sheet 
evaluator or inverse operation capability?

Sorry, I have reservations about all this.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From support.mn at elisanet.fi  Mon Dec 15 21:46:04 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Tue, 16 Dec 2008 07:46:04 +0200 (EET)
Subject: [Proj] What about datum shift via direct projection?
Message-ID: <10916221.1305041229406364969.JavaMail.support.mn@elisanet.fi>

Why not? There is no rule how to do datum shifts. If the
results are exactly the same, nobody will argue.

But I am assuming that there are some differences and
so the method should be mentioned with the datum
name, so that the results could be reproduced.

Regards: Janne.

-------------------------


Mikael Rittri [Mikael.Rittri at carmenta.com] kirjoitti: 
> 
> Gerald wrote: 
> > While there seems to be lull in the hot debate about separation of 
> > church and state ... er ... datum and projection,
> > [...] 
> > Thus, why is it so necessary to bind the two operations so tightly as done
> > in the proj.4 distribution? I cannot find a precedence for this concept 
> 
> This post is not specifically about the PROJ.4 design (so I changed
> the Subject line), but it is about how much datums and projections 
> can and should be separated.  
> 
> There is method for datum shift that uses a direct projection.  
> 
> As an example, the old Swedish Grid is traditionally defined 
> on the Swedish RT90 datum (ellipsoid: Bessel 1841) and using a 
> Transverse Mercator projection with 
>    central meridian: 15° 48' 29.8" E 
>    scale factor:     1
>    false easting:    1500000 m 
>    false northing:   0 m
> ( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=4766&lang=EN ) 
> 
> With this definition, one would need some datum shift method 
> to transform between RT90 lon/lat and WGS84 lon/lat.
> 
> However, a simpler method, now recommended by the Swedish Land Survey
> instead of a 7-parameter shift, is to start from the WGS84 datum, and than
> tweak the projection parameters a little: just use a Transverse Mercator 
> with 
>    central meridian: 15° 48' 22.624306" E   
>    scale factor:     1.00000561024
>    false easting:    1500064.274 m
>    false northing:   -667.711 m
> ( http://www.lantmateriet.se/templates/LMV_Page.aspx?id=5197&lang=EN ) 
> 
> A paper describing this technique is 
> http://www.fig.net/pub/fig2006/papers/ps05_03/ps05_03_04_engberg_lilje_0670.pdf .
> 
> So, I have some rather vague questions to the readers of this list:
> - What do you think of this technique?
> - Is anyone else using it? 
> - Doesn't the technique imply that a projected coordinate system 
>   may have an ambiguous geographic coordinate system?  For the Swedish Grid,
>   I can think of the geographic coordinate system as RT90 lon/lat, if I use 
>   the traditional projection parameters. Or I can think of it as WGS84 lon/lat, 
>   if I use the direct projection instead.
> - If the correct answer to the previous question is "No, you fool", then what? 
>   If I wanted to express the Swedish Grid, datum-shifted by the direct projection,
>   in Well-Know Text, then I would be forced to say that the geographic coordinate 
>   system is WGS84 lon/lat. But then the resulting CRS cannot be Swedish Grid, 
>   because Swedish Grid has traditionally RT90 lon/lat as its geographic coordinate 
>   system. 
> 
> I think direct projections for datum shifts are efficient and easy to
> use, and normally as accurate as a 7-parameter shift.  But when I try 
> to fit this method into the traditional framework that separates datum 
> shifts and projections, and which insists that each projected CRS
> has a unique geographic coordinate system, I run into problems.
> 
> Are these problems caused by inflexibility in the traditional framework? 
> Or is the method of direct projection just weird? 
> Or am I missing some good way to reconcile them? 
>   
> Best regards, 
> 
> --
> Mikael Rittri
> Carmenta AB
> Box 11354
> SE-404 28 Göteborg
> Visitors: Sankt Eriksgatan 5
> SWEDEN
> mikael.rittri at carmenta.com
> www.carmenta.com
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From Mikael.Rittri at carmenta.com  Wed Dec 17 02:08:44 2008
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 17 Dec 2008 11:08:44 +0100
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <29C3A52E0876C94C97BD6443FA96F73371BF3F15FE@rms03.rapidmap.local>
References: <200812010946.mB19kXYE013117@duke.maptools.org><200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de><29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local><4198170a27560b3948a71c7a3ec48a96@ucsd.edu><29C3A52E0876C94C97BD6443FA96F73371BF3F157B@rms03.rapidmap.local><FAF6E56B26D2044696772EBE89B1535101534B0B@posty.carmenta.se>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F15FE@rms03.rapidmap.local>
Message-ID: <FAF6E56B26D2044696772EBE89B1535101534E23@posty.carmenta.se>

Andrew,
I may have misunderstood you. And maybe the Starfire differential service 
really does give you WGS84 coordinates, rather than some ground-attached 
variant like ETRS89 or NAD83.  

> The variation between WGS84 and ITRF of the day varies because of 
> plate tectonics. That is WGS 84 framework was set at a time in history, 
> but ITRF if calculated daily. The variable is the plate movements between 
> them.

I still think you are wrong here. Let me quote:
	"WGS84 is maintained by the US. Like the ITRS it is a global system.
	 Initially it was coincident with ITRS to an accuracy of about 1.5 meters.
	 It is currently maintained within 10cm of the ITRS."
	 http://www.ogp.org.uk/pubs/373-10.pdf (section 2)
If the differences were caused by tectonic plate movements, then it
would be quite difficult to maintain the two systems to within 10cm.
You would need to connect all continents by very strong steel chains, to 
prevent them drifting apart more than 10cm from their original position ;-)

No, if the difference between WGS84 and ITRF varies from day to day, I 
think that such differences are caused by something like athmospheric 
conditions, not tectonic plate movements. (Radio waves slow down in the 
athmosphere, by an amount depending on air pressure and humidity, I think.)

> I'm not expert all I know is that we have to write some pretty special 
> code to account for this variation so that when we use this GPS for
> locating with WGS84 coordinates we can find them.  

All right. If your special code is something like a time-dependent 
7-parameter datum transform (like those given in section 6.5 of 
http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide6.html ),
then you are indeed correcting for tectonic plate movements. But I would 
say that if so, then it is not the difference between WGS84 and ITRS
that you are correcting for.  Rather, your original coordinates must 
be expressed in something like ETRS89 or NAD83, not WGS84 in its 
strict sense.
On the other hand, if your special code is something else, 
then I don't know what it does... 

Disclaimer: I am a GIS programmer, not a surveyor. 
Maybe some surveyor on this list can give a better answer.  
 
Best regards,
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Andrew Williams
Sent: den 15 december 2008 23:17
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Mikael,
Perhaps it's my terminology.

As I understand it the GPS we have used Starfire differential service to correct it's position. It is a dual frequency GPS. The output coordinate is ITRF of the day.

The variation between WGS84 and ITRF of the day varies because of plate tectonics. That is WGS 84 framework was set at a time in history, but ITRF if calculated daily. The variable is the plate movements between them.

So when I said varies I meant the difference between the two frames varies between them because of plate tectonics.

I'm not expert all I know is that we have to write some pretty special code to account for this variation so that when we use this GPS for locating with WGS84 coordinates we can find them.

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikael Rittri
Sent: Friday, 12 December 2008 11:53 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Andrew Williams wrote:
> ITRF varies over time compared to WGS84 based on tectonics, correct?

No. Neither ITRF nor WGS84 is attached to a tectonic plate.
The difference between them is very small (I've heard that it is at most something like 10 cm, but I don't remember where I heard it), and it does not increase over time. The reason for the difference is just that coordinates in WGS84 cannot be measured as exactly as in ITRF.
(Source: http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide4.html )

For WGS84-based mapping in Europe, we use ETRS89, which is attached to the Eurasian tectonic plate.  ETRS89 coincided with
WGS84 on January 1, 1989, as if the WGS84 graticule had been painted on the ground that day.  Since then, the ETRS89 (and Europe) has drifted away toward northeast by 2-3 cm/year.  So it is the difference between ETRS89 and WGS84 that increases due to continental drift. (Similarly for NAD83 in North America.)

However, I am writing about WGS84 in a strict sense above.
Many people who use GPS are familiar with WGS84, but they have never heard of ETRS89.  So these people will say "WGS84"
when they really mean "ETRS89".  I believe differential GPS in Europe will really give ETRS89 coordinates, although most users would call them WGS84 coordinates.


Duncan Agnew wrote:
> Rather weirdly, Australia has chosen not to define a local frame, even 
> though it has a plate all to itself.

I am not a plate tectonician, but I believe this is wrong.
The Geocentric Datum of Australia 1994 (GDA94) is attached to the Australian plate.
(Source: http://www.icsm.gov.au/icsm/gda/wgs84fact.pdf )

Best regards,
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Andrew Williams
Sent: den 11 december 2008 05:36
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Thanks Duncan. That "docking" scenario was how the system was sold to me by the developer of the hardware (Navcom).

Guess the brochure sounds better than the technically correct description;)

So just to make sure ITRF varies over time compared to WGS84 based on tectonics, correct?

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Duncan Agnew
Sent: Thursday, 4 December 2008 5:24 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Since I am in the crustal-motion business I want to correct the previous posting about ITRF. This is "space-based" only in the sense that it uses data from outside the Earth (GPS and other satellites, along with distant radio sources).  It was not designed with space use in mind. Since ITRF and
WGS84 are both space-based in this sense, they align closely: after all, the center of the Earth and the rotation pole are both non-arbitrary.

ITRF was designed to be an ultraprecise reference frame for measuring motions of the Earth as a whole, and of different parts relative to each other.
Since
the frame is designed to be fixed relative to the velocities of all the tectonic plates, averaged over the whole Earth, any particular point will have time-varying coordinates in this frame--as is is in fact true for any frame not tied to a particular plate (WGS-84 included), though many softwares do not take account of this. The people who develop and update ITRF are working at the millimeter level.

Two "plate-fixed" frames are NAD (at least east of the Rockies), and EUREF (for Northern Europe). Rather weirdly, Australia has chosen not to define a local frame, even though it has a plate all to itself.

For more on ITRF, see http://itrf.ensg.ign.fr/

Duncan Agnew

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From richard.greenwood at gmail.com  Wed Dec 17 05:32:43 2008
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Wed, 17 Dec 2008 06:32:43 -0700
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <FAF6E56B26D2044696772EBE89B1535101534E23@posty.carmenta.se>
References: <200812010946.mB19kXYE013117@duke.maptools.org>
	<200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local>
	<4198170a27560b3948a71c7a3ec48a96@ucsd.edu>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F157B@rms03.rapidmap.local>
	<FAF6E56B26D2044696772EBE89B1535101534B0B@posty.carmenta.se>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F15FE@rms03.rapidmap.local>
	<FAF6E56B26D2044696772EBE89B1535101534E23@posty.carmenta.se>
Message-ID: <ae9185aa0812170532u77cb764ga18c20a53a44bfdf@mail.gmail.com>

On Wed, Dec 17, 2008 at 3:08 AM, Mikael Rittri
<Mikael.Rittri at carmenta.com> wrote:
> Andrew,
> I may have misunderstood you. And maybe the Starfire differential service
> really does give you WGS84 coordinates, rather than some ground-attached
> variant like ETRS89 or NAD83.
>
>> The variation between WGS84 and ITRF of the day varies because of
>> plate tectonics. That is WGS 84 framework was set at a time in history,
>> but ITRF if calculated daily. The variable is the plate movements between
>> them.
>
> I still think you are wrong here. Let me quote:
>        "WGS84 is maintained by the US. Like the ITRS it is a global system.
>         Initially it was coincident with ITRS to an accuracy of about 1.5 meters.
>         It is currently maintained within 10cm of the ITRS."
>         http://www.ogp.org.uk/pubs/373-10.pdf (section 2)
> If the differences were caused by tectonic plate movements, then it
> would be quite difficult to maintain the two systems to within 10cm.
> You would need to connect all continents by very strong steel chains, to
> prevent them drifting apart more than 10cm from their original position ;-)
>
> No, if the difference between WGS84 and ITRF varies from day to day, I
> think that such differences are caused by something like athmospheric
> conditions, not tectonic plate movements. (Radio waves slow down in the
> athmosphere, by an amount depending on air pressure and humidity, I think.)
>
>> I'm not expert all I know is that we have to write some pretty special
>> code to account for this variation so that when we use this GPS for
>> locating with WGS84 coordinates we can find them.
>
> All right. If your special code is something like a time-dependent
> 7-parameter datum transform (like those given in section 6.5 of
> http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide6.html ),
> then you are indeed correcting for tectonic plate movements. But I would
> say that if so, then it is not the difference between WGS84 and ITRS
> that you are correcting for.  Rather, your original coordinates must
> be expressed in something like ETRS89 or NAD83, not WGS84 in its
> strict sense.
> On the other hand, if your special code is something else,
> then I don't know what it does...
>
> Disclaimer: I am a GIS programmer, not a surveyor.
> Maybe some surveyor on this list can give a better answer.
>
> Best regards,
> --
> Mikael Rittri

I am a surveyor, but not a geodesic. My understanding is the same as
Mikael's: WGS84 and ITRF are very nearly the same. I don't know why
they are not identical, Mikael says
    "Radio waves slow down in the athmosphere, by an amount depending
     on air pressure and humidity, I think."
It is generally electromagnetic disturbances much higher in our
atmosphere that distort GPS radio waves. The disturbances are in the
ionosphere and are effected by sun spot activity and solar flares,
among other things. Maybe this is the reason for the difference
between WGS84 and ITRF, but I am not sure.

WGS84 and ITRF are not fixed to a plate,  they are geocentric and
fixed to the center of the earth. NAD83 is fixed to the North American
plate. Many software, including Proj, do not distinguish between NAD83
and WGS84 so it is a common mistake to refer to the two datums
interchangeably. And since they did start out as matching, it did not
used to matter much. Right now there is over a meter of difference
between WGS84 and NAD83, so it is becoming more important for all of
us to understand and respect the difference between geocentric datums
(ITRF and WGS84) and plate-based datums.

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From ndzinn at comcast.net  Wed Dec 17 05:58:07 2008
From: ndzinn at comcast.net (ndzinn at comcast.net)
Date: Wed, 17 Dec 2008 13:58:07 +0000 (UTC)
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <ae9185aa0812170532u77cb764ga18c20a53a44bfdf@mail.gmail.com>
Message-ID: <1562030134.898921229522287042.JavaMail.root@sz0121a.emeryville.ca.mail.comcast.net>



Here's a good reference from NGA/NIMA/DMA, the agency responsible for WGS84 



http://earth-info.nga.mil/GandG/publications/tr8350.2/Addendum%20NIMA%20TR8350.2.pdf 




----- Original Message ----- 
From: "Richard Greenwood" <richard.greenwood at gmail.com> 
To: "PROJ.4 and general Projections Discussions" <proj at lists.maptools.org> 
Sent: Wednesday, December 17, 2008 7:32:43 AM GMT -06:00 US/Canada Central 
Subject: Re: [Proj] Google Earth Accuracy 

On Wed, Dec 17, 2008 at 3:08 AM, Mikael Rittri 
<Mikael.Rittri at carmenta.com> wrote: 
> Andrew, 
> I may have misunderstood you. And maybe the Starfire differential service 
> really does give you WGS84 coordinates, rather than some ground-attached 
> variant like ETRS89 or NAD83. 
> 
>> The variation between WGS84 and ITRF of the day varies because of 
>> plate tectonics. That is WGS 84 framework was set at a time in history, 
>> but ITRF if calculated daily. The variable is the plate movements between 
>> them. 
> 
> I still think you are wrong here. Let me quote: 
>        "WGS84 is maintained by the US. Like the ITRS it is a global system. 
>         Initially it was coincident with ITRS to an accuracy of about 1.5 meters. 
>         It is currently maintained within 10cm of the ITRS." 
>         http://www.ogp.org.uk/pubs/373-10.pdf (section 2) 
> If the differences were caused by tectonic plate movements, then it 
> would be quite difficult to maintain the two systems to within 10cm. 
> You would need to connect all continents by very strong steel chains, to 
> prevent them drifting apart more than 10cm from their original position ;-) 
> 
> No, if the difference between WGS84 and ITRF varies from day to day, I 
> think that such differences are caused by something like athmospheric 
> conditions, not tectonic plate movements. (Radio waves slow down in the 
> athmosphere, by an amount depending on air pressure and humidity, I think.) 
> 
>> I'm not expert all I know is that we have to write some pretty special 
>> code to account for this variation so that when we use this GPS for 
>> locating with WGS84 coordinates we can find them. 
> 
> All right. If your special code is something like a time-dependent 
> 7-parameter datum transform (like those given in section 6.5 of 
> http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide6.html ), 
> then you are indeed correcting for tectonic plate movements. But I would 
> say that if so, then it is not the difference between WGS84 and ITRS 
> that you are correcting for.  Rather, your original coordinates must 
> be expressed in something like ETRS89 or NAD83, not WGS84 in its 
> strict sense. 
> On the other hand, if your special code is something else, 
> then I don't know what it does... 
> 
> Disclaimer: I am a GIS programmer, not a surveyor. 
> Maybe some surveyor on this list can give a better answer. 
> 
> Best regards, 
> -- 
> Mikael Rittri 

I am a surveyor, but not a geodesic. My understanding is the same as 
Mikael's: WGS84 and ITRF are very nearly the same. I don't know why 
they are not identical, Mikael says 
    "Radio waves slow down in the athmosphere, by an amount depending 
     on air pressure and humidity, I think." 
It is generally electromagnetic disturbances much higher in our 
atmosphere that distort GPS radio waves. The disturbances are in the 
ionosphere and are effected by sun spot activity and solar flares, 
among other things. Maybe this is the reason for the difference 
between WGS84 and ITRF, but I am not sure. 

WGS84 and ITRF are not fixed to a plate,  they are geocentric and 
fixed to the center of the earth. NAD83 is fixed to the North American 
plate. Many software, including Proj, do not distinguish between NAD83 
and WGS84 so it is a common mistake to refer to the two datums 
interchangeably. And since they did start out as matching, it did not 
used to matter much. Right now there is over a meter of difference 
between WGS84 and NAD83, so it is becoming more important for all of 
us to understand and respect the difference between geocentric datums 
(ITRF and WGS84) and plate-based datums. 

-- 
Richard Greenwood 
richard.greenwood at gmail.com 
www.greenwoodmap.com 
_______________________________________________ 
Proj mailing list 
Proj at lists.maptools.org 
http://lists.maptools.org/mailman/listinfo/proj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081217/b05a0513/attachment.html>

From lblake at ksninc.com  Wed Dec 17 07:24:40 2008
From: lblake at ksninc.com (Landon Blake)
Date: Wed, 17 Dec 2008 07:24:40 -0800
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <ae9185aa0812170532u77cb764ga18c20a53a44bfdf@mail.gmail.com>
Message-ID: <0D544207876CDA428F17DD7EA448C192F09FFF@bailey.DOMAIN.KSNINC.PVT>

I am also a surveyor, but not a geodesist. I would add a couple of very
brief comments to complement what Richard said:

Richard wrote: "WGS84 and ITRF are not fixed to a plate,  they are
geocentric and fixed to the center of the earth."

I believe when we say "center of the earth" we mean the Earth's center
of mass. This could be very different from the center of an ellipsoid
used to model the earth, and different still from the location pointed
to by a plumb line at the earth's surface. I believe the correction
between the center of the ellipsoid and the plumb line even has a name,
which is the laplace correction.

It is also important to note that the center of the earth's mass changes
over time. I believe it is most commonly determined by measurement in
the changes of the orbit of satellites around the earth. Something
called the "precession of the nodes" is popping in to my mind.

I would also point out that the WGS84 datum is maintained by the
Department of Defense, and I don't know that they exactly publish all
the details of that maintenance. For example, I have yet to meet someone
that could tell me if/how WGS84 is defined on the ground. You can't go
out and survey a monument with published WGS84 coordinates like you can
monuments with NAD83 coordinates. But I wonder if there are such
monuments used by the military as part of the "ground control component"
of WGS84.

Richard wrote: "NAD83 is fixed to the North American plate."

This can get complicated to. You have to factor in issues of local and
regional movement. For example, where I live, regional subsidence can be
a real problem. But I'm in California, and in California you start
dealing with all types of ground movement, like that along the North
American and Pacific plate boundary.

One important thing to remember is that in most cases, people are
worried not about absolute coordinates, but the spatial relationship
between "things" on the Earth's surface. That's why plate tectonics
usually isn't an issue in boundary surveys. :]

Landon
Office Phone Number: (209) 946-0268
Cell Phone Number: (209) 992-0658

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of Richard Greenwood
Sent: Wednesday, December 17, 2008 5:33 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

On Wed, Dec 17, 2008 at 3:08 AM, Mikael Rittri
<Mikael.Rittri at carmenta.com> wrote:
> Andrew,
> I may have misunderstood you. And maybe the Starfire differential
service
> really does give you WGS84 coordinates, rather than some
ground-attached
> variant like ETRS89 or NAD83.
>
>> The variation between WGS84 and ITRF of the day varies because of
>> plate tectonics. That is WGS 84 framework was set at a time in
history,
>> but ITRF if calculated daily. The variable is the plate movements
between
>> them.
>
> I still think you are wrong here. Let me quote:
>        "WGS84 is maintained by the US. Like the ITRS it is a global
system.
>         Initially it was coincident with ITRS to an accuracy of about
1.5 meters.
>         It is currently maintained within 10cm of the ITRS."
>         http://www.ogp.org.uk/pubs/373-10.pdf (section 2)
> If the differences were caused by tectonic plate movements, then it
> would be quite difficult to maintain the two systems to within 10cm.
> You would need to connect all continents by very strong steel chains,
to
> prevent them drifting apart more than 10cm from their original
position ;-)
>
> No, if the difference between WGS84 and ITRF varies from day to day, I
> think that such differences are caused by something like athmospheric
> conditions, not tectonic plate movements. (Radio waves slow down in
the
> athmosphere, by an amount depending on air pressure and humidity, I
think.)
>
>> I'm not expert all I know is that we have to write some pretty
special
>> code to account for this variation so that when we use this GPS for
>> locating with WGS84 coordinates we can find them.
>
> All right. If your special code is something like a time-dependent
> 7-parameter datum transform (like those given in section 6.5 of
>
http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesyst
emsinfo/guidecontents/guide6.html ),
> then you are indeed correcting for tectonic plate movements. But I
would
> say that if so, then it is not the difference between WGS84 and ITRS
> that you are correcting for.  Rather, your original coordinates must
> be expressed in something like ETRS89 or NAD83, not WGS84 in its
> strict sense.
> On the other hand, if your special code is something else,
> then I don't know what it does...
>
> Disclaimer: I am a GIS programmer, not a surveyor.
> Maybe some surveyor on this list can give a better answer.
>
> Best regards,
> --
> Mikael Rittri

I am a surveyor, but not a geodesic. My understanding is the same as
Mikael's: WGS84 and ITRF are very nearly the same. I don't know why
they are not identical, Mikael says
    "Radio waves slow down in the athmosphere, by an amount depending
     on air pressure and humidity, I think."
It is generally electromagnetic disturbances much higher in our
atmosphere that distort GPS radio waves. The disturbances are in the
ionosphere and are effected by sun spot activity and solar flares,
among other things. Maybe this is the reason for the difference
between WGS84 and ITRF, but I am not sure.

WGS84 and ITRF are not fixed to a plate,  they are geocentric and
fixed to the center of the earth. NAD83 is fixed to the North American
plate. Many software, including Proj, do not distinguish between NAD83
and WGS84 so it is a common mistake to refer to the two datums
interchangeably. And since they did start out as matching, it did not
used to matter much. Right now there is over a meter of difference
between WGS84 and NAD83, so it is becoming more important for all of
us to understand and respect the difference between geocentric datums
(ITRF and WGS84) and plate-based datums.

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


Warning:
Information provided via electronic media is not guaranteed against defects including translation and transmission errors. If the reader is not the intended recipient, you are hereby notified that any dissemination, distribution or copying of this communication is strictly prohibited. If you have received this information in error, please notify the sender immediately.


From support.mn at elisanet.fi  Wed Dec 17 08:45:07 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Wed, 17 Dec 2008 18:45:07 +0200 (EET)
Subject: [Proj] Google Earth Accuracy
Message-ID: <13201035.1558231229532308077.JavaMail.support.mn@elisanet.fi>

Hello,

The WGS84 Implementation Manual is a very good source of WGS84,
ITRF/ETRF and datums information.

http://www2.icao.int/en/pbn/ICAO%20Documentation/GNSS%20and%20WGS%2084/Eurocontrol%20WGS%2084.pdf

"The origin and the orientation of coordinate axes in WGS 84 are defined by
the X, Y, Z coordinates of  the five GPS monitoring stations 

SEE page 15.

Historically the coordinates of the GPS tracking sites have been determined
by the use of doppler measurements to the TRANSIT satellite navigation
system. Long observation periods of data have been processed in order to
derive precise station coordinates.

The use of TRANSIT doppler measurements in WGS 84 is a good example
of the practical realization of a reference system. It should be pointed out
once again that errors can propagate in the procedures used to realize
reference frames."

Regards: Janne.

------------------------------------------



Landon Blake [lblake at ksninc.com] kirjoitti: 
> I am also a surveyor, but not a geodesist. I would add a couple of very
> brief comments to complement what Richard said:
> 
> Richard wrote: "WGS84 and ITRF are not fixed to a plate,  they are
> geocentric and fixed to the center of the earth."
> 
> I believe when we say "center of the earth" we mean the Earth's center
> of mass. This could be very different from the center of an ellipsoid
> used to model the earth, and different still from the location pointed
> to by a plumb line at the earth's surface. I believe the correction
> between the center of the ellipsoid and the plumb line even has a name,
> which is the laplace correction.
> 
> It is also important to note that the center of the earth's mass changes
> over time. I believe it is most commonly determined by measurement in
> the changes of the orbit of satellites around the earth. Something
> called the "precession of the nodes" is popping in to my mind.
> 
> I would also point out that the WGS84 datum is maintained by the
> Department of Defense, and I don't know that they exactly publish all
> the details of that maintenance. For example, I have yet to meet someone
> that could tell me if/how WGS84 is defined on the ground. You can't go
> out and survey a monument with published WGS84 coordinates like you can
> monuments with NAD83 coordinates. But I wonder if there are such
> monuments used by the military as part of the "ground control component"
> of WGS84.
> 
> Richard wrote: "NAD83 is fixed to the North American plate."
> 
> This can get complicated to. You have to factor in issues of local and
> regional movement. For example, where I live, regional subsidence can be
> a real problem. But I'm in California, and in California you start
> dealing with all types of ground movement, like that along the North
> American and Pacific plate boundary.
> 
> One important thing to remember is that in most cases, people are
> worried not about absolute coordinates, but the spatial relationship
> between "things" on the Earth's surface. That's why plate tectonics
> usually isn't an issue in boundary surveys. :]
> 
> Landon
> Office Phone Number: (209) 946-0268
> Cell Phone Number: (209) 992-0658
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Richard Greenwood
> Sent: Wednesday, December 17, 2008 5:33 AM
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Google Earth Accuracy
> 
> On Wed, Dec 17, 2008 at 3:08 AM, Mikael Rittri
> <Mikael.Rittri at carmenta.com> wrote:
> > Andrew,
> > I may have misunderstood you. And maybe the Starfire differential
> service
> > really does give you WGS84 coordinates, rather than some
> ground-attached
> > variant like ETRS89 or NAD83.
> >
> >> The variation between WGS84 and ITRF of the day varies because of
> >> plate tectonics. That is WGS 84 framework was set at a time in
> history,
> >> but ITRF if calculated daily. The variable is the plate movements
> between
> >> them.
> >
> > I still think you are wrong here. Let me quote:
> >        "WGS84 is maintained by the US. Like the ITRS it is a global
> system.
> >         Initially it was coincident with ITRS to an accuracy of about
> 1.5 meters.
> >         It is currently maintained within 10cm of the ITRS."
> >         http://www.ogp.org.uk/pubs/373-10.pdf (section 2)
> > If the differences were caused by tectonic plate movements, then it
> > would be quite difficult to maintain the two systems to within 10cm.
> > You would need to connect all continents by very strong steel chains,
> to
> > prevent them drifting apart more than 10cm from their original
> position ;-)
> >
> > No, if the difference between WGS84 and ITRF varies from day to day, I
> > think that such differences are caused by something like athmospheric
> > conditions, not tectonic plate movements. (Radio waves slow down in
> the
> > athmosphere, by an amount depending on air pressure and humidity, I
> think.)
> >
> >> I'm not expert all I know is that we have to write some pretty
> special
> >> code to account for this variation so that when we use this GPS for
> >> locating with WGS84 coordinates we can find them.
> >
> > All right. If your special code is something like a time-dependent
> > 7-parameter datum transform (like those given in section 6.5 of
> >
> http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesyst
> emsinfo/guidecontents/guide6.html ),
> > then you are indeed correcting for tectonic plate movements. But I
> would
> > say that if so, then it is not the difference between WGS84 and ITRS
> > that you are correcting for.  Rather, your original coordinates must
> > be expressed in something like ETRS89 or NAD83, not WGS84 in its
> > strict sense.
> > On the other hand, if your special code is something else,
> > then I don't know what it does...
> >
> > Disclaimer: I am a GIS programmer, not a surveyor.
> > Maybe some surveyor on this list can give a better answer.
> >
> > Best regards,
> > --
> > Mikael Rittri
> 
> I am a surveyor, but not a geodesic. My understanding is the same as
> Mikael's: WGS84 and ITRF are very nearly the same. I don't know why
> they are not identical, Mikael says
>     "Radio waves slow down in the athmosphere, by an amount depending
>      on air pressure and humidity, I think."
> It is generally electromagnetic disturbances much higher in our
> atmosphere that distort GPS radio waves. The disturbances are in the
> ionosphere and are effected by sun spot activity and solar flares,
> among other things. Maybe this is the reason for the difference
> between WGS84 and ITRF, but I am not sure.
> 
> WGS84 and ITRF are not fixed to a plate,  they are geocentric and
> fixed to the center of the earth. NAD83 is fixed to the North American
> plate. Many software, including Proj, do not distinguish between NAD83
> and WGS84 so it is a common mistake to refer to the two datums
> interchangeably. And since they did start out as matching, it did not
> used to matter much. Right now there is over a meter of difference
> between WGS84 and NAD83, so it is becoming more important for all of
> us to understand and respect the difference between geocentric datums
> (ITRF and WGS84) and plate-based datums.
> 
> -- 
> Richard Greenwood
> richard.greenwood at gmail.com
> www.greenwoodmap.com
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> Warning:
> Information provided via electronic media is not guaranteed against defects including translation and transmission errors. If the reader is not the intended recipient, you are hereby notified that any dissemination, distribution or copying of this communication is strictly prohibited. If you have received this information in error, please notify the sender immediately.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 



From lblake at ksninc.com  Wed Dec 17 09:23:54 2008
From: lblake at ksninc.com (Landon Blake)
Date: Wed, 17 Dec 2008 09:23:54 -0800
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <13201035.1558231229532308077.JavaMail.support.mn@elisanet.fi>
Message-ID: <0D544207876CDA428F17DD7EA448C192F0A027@bailey.DOMAIN.KSNINC.PVT>

Thanks for that info Janne. So the five GPS monitoring stations are the
"ground control" I was referring to. I wonder if they account for the
"drift" of these stations in relation to one another over time? 

I just downloaded the WGS84 implementation manual yesterday, and plan on
reading it over an upcoming vacation. :]

Here is the wikipedia page for the Transit Satellite Navigation System:

http://en.wikipedia.org/wiki/Transit_(satellite)

It is interesting to note the stated precision of the system was about
200 meters. That seems to course to use as a basis for determining the
coordinates of the GPS tracking stations.

Landon
Office Phone Number: (209) 946-0268
Cell Phone Number: (209) 992-0658

-----Original Message-----
From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] On Behalf Of
support.mn at elisanet.fi
Sent: Wednesday, December 17, 2008 8:45 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Hello,

The WGS84 Implementation Manual is a very good source of WGS84,
ITRF/ETRF and datums information.

http://www2.icao.int/en/pbn/ICAO%20Documentation/GNSS%20and%20WGS%2084/E
urocontrol%20WGS%2084.pdf

"The origin and the orientation of coordinate axes in WGS 84 are defined
by
the X, Y, Z coordinates of  the five GPS monitoring stations 

SEE page 15.

Historically the coordinates of the GPS tracking sites have been
determined
by the use of doppler measurements to the TRANSIT satellite navigation
system. Long observation periods of data have been processed in order to
derive precise station coordinates.

The use of TRANSIT doppler measurements in WGS 84 is a good example
of the practical realization of a reference system. It should be pointed
out
once again that errors can propagate in the procedures used to realize
reference frames."

Regards: Janne.

------------------------------------------



Landon Blake [lblake at ksninc.com] kirjoitti: 
> I am also a surveyor, but not a geodesist. I would add a couple of
very
> brief comments to complement what Richard said:
> 
> Richard wrote: "WGS84 and ITRF are not fixed to a plate,  they are
> geocentric and fixed to the center of the earth."
> 
> I believe when we say "center of the earth" we mean the Earth's center
> of mass. This could be very different from the center of an ellipsoid
> used to model the earth, and different still from the location pointed
> to by a plumb line at the earth's surface. I believe the correction
> between the center of the ellipsoid and the plumb line even has a
name,
> which is the laplace correction.
> 
> It is also important to note that the center of the earth's mass
changes
> over time. I believe it is most commonly determined by measurement in
> the changes of the orbit of satellites around the earth. Something
> called the "precession of the nodes" is popping in to my mind.
> 
> I would also point out that the WGS84 datum is maintained by the
> Department of Defense, and I don't know that they exactly publish all
> the details of that maintenance. For example, I have yet to meet
someone
> that could tell me if/how WGS84 is defined on the ground. You can't go
> out and survey a monument with published WGS84 coordinates like you
can
> monuments with NAD83 coordinates. But I wonder if there are such
> monuments used by the military as part of the "ground control
component"
> of WGS84.
> 
> Richard wrote: "NAD83 is fixed to the North American plate."
> 
> This can get complicated to. You have to factor in issues of local and
> regional movement. For example, where I live, regional subsidence can
be
> a real problem. But I'm in California, and in California you start
> dealing with all types of ground movement, like that along the North
> American and Pacific plate boundary.
> 
> One important thing to remember is that in most cases, people are
> worried not about absolute coordinates, but the spatial relationship
> between "things" on the Earth's surface. That's why plate tectonics
> usually isn't an issue in boundary surveys. :]
> 
> Landon
> Office Phone Number: (209) 946-0268
> Cell Phone Number: (209) 992-0658
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
> [mailto:proj-bounces at lists.maptools.org] On Behalf Of Richard
Greenwood
> Sent: Wednesday, December 17, 2008 5:33 AM
> To: PROJ.4 and general Projections Discussions
> Subject: Re: [Proj] Google Earth Accuracy
> 
> On Wed, Dec 17, 2008 at 3:08 AM, Mikael Rittri
> <Mikael.Rittri at carmenta.com> wrote:
> > Andrew,
> > I may have misunderstood you. And maybe the Starfire differential
> service
> > really does give you WGS84 coordinates, rather than some
> ground-attached
> > variant like ETRS89 or NAD83.
> >
> >> The variation between WGS84 and ITRF of the day varies because of
> >> plate tectonics. That is WGS 84 framework was set at a time in
> history,
> >> but ITRF if calculated daily. The variable is the plate movements
> between
> >> them.
> >
> > I still think you are wrong here. Let me quote:
> >        "WGS84 is maintained by the US. Like the ITRS it is a global
> system.
> >         Initially it was coincident with ITRS to an accuracy of
about
> 1.5 meters.
> >         It is currently maintained within 10cm of the ITRS."
> >         http://www.ogp.org.uk/pubs/373-10.pdf (section 2)
> > If the differences were caused by tectonic plate movements, then it
> > would be quite difficult to maintain the two systems to within 10cm.
> > You would need to connect all continents by very strong steel
chains,
> to
> > prevent them drifting apart more than 10cm from their original
> position ;-)
> >
> > No, if the difference between WGS84 and ITRF varies from day to day,
I
> > think that such differences are caused by something like
athmospheric
> > conditions, not tectonic plate movements. (Radio waves slow down in
> the
> > athmosphere, by an amount depending on air pressure and humidity, I
> think.)
> >
> >> I'm not expert all I know is that we have to write some pretty
> special
> >> code to account for this variation so that when we use this GPS for
> >> locating with WGS84 coordinates we can find them.
> >
> > All right. If your special code is something like a time-dependent
> > 7-parameter datum transform (like those given in section 6.5 of
> >
>
http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesyst
> emsinfo/guidecontents/guide6.html ),
> > then you are indeed correcting for tectonic plate movements. But I
> would
> > say that if so, then it is not the difference between WGS84 and ITRS
> > that you are correcting for.  Rather, your original coordinates must
> > be expressed in something like ETRS89 or NAD83, not WGS84 in its
> > strict sense.
> > On the other hand, if your special code is something else,
> > then I don't know what it does...
> >
> > Disclaimer: I am a GIS programmer, not a surveyor.
> > Maybe some surveyor on this list can give a better answer.
> >
> > Best regards,
> > --
> > Mikael Rittri
> 
> I am a surveyor, but not a geodesic. My understanding is the same as
> Mikael's: WGS84 and ITRF are very nearly the same. I don't know why
> they are not identical, Mikael says
>     "Radio waves slow down in the athmosphere, by an amount depending
>      on air pressure and humidity, I think."
> It is generally electromagnetic disturbances much higher in our
> atmosphere that distort GPS radio waves. The disturbances are in the
> ionosphere and are effected by sun spot activity and solar flares,
> among other things. Maybe this is the reason for the difference
> between WGS84 and ITRF, but I am not sure.
> 
> WGS84 and ITRF are not fixed to a plate,  they are geocentric and
> fixed to the center of the earth. NAD83 is fixed to the North American
> plate. Many software, including Proj, do not distinguish between NAD83
> and WGS84 so it is a common mistake to refer to the two datums
> interchangeably. And since they did start out as matching, it did not
> used to matter much. Right now there is over a meter of difference
> between WGS84 and NAD83, so it is becoming more important for all of
> us to understand and respect the difference between geocentric datums
> (ITRF and WGS84) and plate-based datums.
> 
> -- 
> Richard Greenwood
> richard.greenwood at gmail.com
> www.greenwoodmap.com
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 
> Warning:
> Information provided via electronic media is not guaranteed against
defects including translation and transmission errors. If the reader is
not the intended recipient, you are hereby notified that any
dissemination, distribution or copying of this communication is strictly
prohibited. If you have received this information in error, please
notify the sender immediately.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


Warning:
Information provided via electronic media is not guaranteed against defects including translation and transmission errors. If the reader is not the intended recipient, you are hereby notified that any dissemination, distribution or copying of this communication is strictly prohibited. If you have received this information in error, please notify the sender immediately.


From richard.greenwood at gmail.com  Wed Dec 17 10:42:55 2008
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Wed, 17 Dec 2008 11:42:55 -0700
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <0D544207876CDA428F17DD7EA448C192F09FFF@bailey.DOMAIN.KSNINC.PVT>
References: <ae9185aa0812170532u77cb764ga18c20a53a44bfdf@mail.gmail.com>
	<0D544207876CDA428F17DD7EA448C192F09FFF@bailey.DOMAIN.KSNINC.PVT>
Message-ID: <ae9185aa0812171042s1697b9e8q9b58abd79118c068@mail.gmail.com>

On Wed, Dec 17, 2008 at 8:24 AM, Landon Blake <lblake at ksninc.com> wrote:

> Richard wrote: "NAD83 is fixed to the North American plate."
>
> This can get complicated to. You have to factor in issues of local and
> regional movement. For example, where I live, regional subsidence can be
> a real problem. But I'm in California, and in California you start
> dealing with all types of ground movement, like that along the North
> American and Pacific plate boundary.

You might find http://www.ngs.noaa.gov/TOOLS/Htdp/Htdp.html interesting.

> One important thing to remember is that in most cases, people are
> worried not about absolute coordinates, but the spatial relationship
> between "things" on the Earth's surface. That's why plate tectonics
> usually isn't an issue in boundary surveys. :]

Where I'm getting burned is integrating geocentric datum data with
NAD83 datum data when the data provider and/or the software doesn't
know the difference.

-- 
Richard Greenwood
richard.greenwood at gmail.com
www.greenwoodmap.com


From AWilliams at rapidmap.com  Thu Dec 18 23:08:22 2008
From: AWilliams at rapidmap.com (Andrew Williams)
Date: Fri, 19 Dec 2008 18:08:22 +1100
Subject: [Proj] Google Earth Accuracy
In-Reply-To: <FAF6E56B26D2044696772EBE89B1535101534E23@posty.carmenta.se>
References: <200812010946.mB19kXYE013117@duke.maptools.org><200812011928.mB1JSNQj002420@smtp-auth.uni-koeln.de><29C3A52E0876C94C97BD6443FA96F73371BF3F1420@rms03.rapidmap.local><4198170a27560b3948a71c7a3ec48a96@ucsd.edu><29C3A52E0876C94C97BD6443FA96F73371BF3F157B@rms03.rapidmap.local><FAF6E56B26D2044696772EBE89B1535101534B0B@posty.carmenta.se>
	<29C3A52E0876C94C97BD6443FA96F73371BF3F15FE@rms03.rapidmap.local>
	<FAF6E56B26D2044696772EBE89B1535101534E23@posty.carmenta.se>
Message-ID: <29C3A52E0876C94C97BD6443FA96F73371BF3F16DE@rms03.rapidmap.local>

Mikael,
Very valuable words. However

To quote your quote
>I still think you are wrong here. Let me quote:
>        "WGS84 is maintained by the US. Like the ITRS it is a global system.
>         Initially it was coincident with ITRS to an accuracy of about 1.5 meters.
>         It is currently maintained within 10cm of the ITRS."

While this is true, many of the survey ground points we use don't have their value updated in line with these revisions. So when the GPS I'm using outputs ITRF of the day, the value is being compared with ground point position WGS84 lat\long circa 2000.

I think this may be where my variations lay.

Also when I refer to WGS84 that's my poor man's way of translating to international speak as we use GDA94 in Australia, which for all intents and purposes is identical to WGS84 down to the 10cm accuracy.

So I think I've gotten what I need in terms of an understanding of all of this.

Although if I'm still wrong don't hesitate to let me know.

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikael Rittri
Sent: Wednesday, 17 December 2008 9:09 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Andrew,
I may have misunderstood you. And maybe the Starfire differential service
really does give you WGS84 coordinates, rather than some ground-attached
variant like ETRS89 or NAD83.

> The variation between WGS84 and ITRF of the day varies because of
> plate tectonics. That is WGS 84 framework was set at a time in history,
> but ITRF if calculated daily. The variable is the plate movements between
> them.

I still think you are wrong here. Let me quote:
        "WGS84 is maintained by the US. Like the ITRS it is a global system.
         Initially it was coincident with ITRS to an accuracy of about 1.5 meters.
         It is currently maintained within 10cm of the ITRS."
         http://www.ogp.org.uk/pubs/373-10.pdf (section 2)
If the differences were caused by tectonic plate movements, then it
would be quite difficult to maintain the two systems to within 10cm.
You would need to connect all continents by very strong steel chains, to
prevent them drifting apart more than 10cm from their original position ;-)

No, if the difference between WGS84 and ITRF varies from day to day, I
think that such differences are caused by something like athmospheric
conditions, not tectonic plate movements. (Radio waves slow down in the
athmosphere, by an amount depending on air pressure and humidity, I think.)

> I'm not expert all I know is that we have to write some pretty special
> code to account for this variation so that when we use this GPS for
> locating with WGS84 coordinates we can find them.

All right. If your special code is something like a time-dependent
7-parameter datum transform (like those given in section 6.5 of
http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide6.html ),
then you are indeed correcting for tectonic plate movements. But I would
say that if so, then it is not the difference between WGS84 and ITRS
that you are correcting for.  Rather, your original coordinates must
be expressed in something like ETRS89 or NAD83, not WGS84 in its
strict sense.
On the other hand, if your special code is something else,
then I don't know what it does...

Disclaimer: I am a GIS programmer, not a surveyor.
Maybe some surveyor on this list can give a better answer.

Best regards,
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Andrew Williams
Sent: den 15 december 2008 23:17
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Mikael,
Perhaps it's my terminology.

As I understand it the GPS we have used Starfire differential service to correct it's position. It is a dual frequency GPS. The output coordinate is ITRF of the day.

The variation between WGS84 and ITRF of the day varies because of plate tectonics. That is WGS 84 framework was set at a time in history, but ITRF if calculated daily. The variable is the plate movements between them.

So when I said varies I meant the difference between the two frames varies between them because of plate tectonics.

I'm not expert all I know is that we have to write some pretty special code to account for this variation so that when we use this GPS for locating with WGS84 coordinates we can find them.

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikael Rittri
Sent: Friday, 12 December 2008 11:53 PM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Andrew Williams wrote:
> ITRF varies over time compared to WGS84 based on tectonics, correct?

No. Neither ITRF nor WGS84 is attached to a tectonic plate.
The difference between them is very small (I've heard that it is at most something like 10 cm, but I don't remember where I heard it), and it does not increase over time. The reason for the difference is just that coordinates in WGS84 cannot be measured as exactly as in ITRF.
(Source: http://www.ordnancesurvey.co.uk/oswebsite/gps/information/coordinatesystemsinfo/guidecontents/guide4.html )

For WGS84-based mapping in Europe, we use ETRS89, which is attached to the Eurasian tectonic plate.  ETRS89 coincided with
WGS84 on January 1, 1989, as if the WGS84 graticule had been painted on the ground that day.  Since then, the ETRS89 (and Europe) has drifted away toward northeast by 2-3 cm/year.  So it is the difference between ETRS89 and WGS84 that increases due to continental drift. (Similarly for NAD83 in North America.)

However, I am writing about WGS84 in a strict sense above.
Many people who use GPS are familiar with WGS84, but they have never heard of ETRS89.  So these people will say "WGS84"
when they really mean "ETRS89".  I believe differential GPS in Europe will really give ETRS89 coordinates, although most users would call them WGS84 coordinates.


Duncan Agnew wrote:
> Rather weirdly, Australia has chosen not to define a local frame, even
> though it has a plate all to itself.

I am not a plate tectonician, but I believe this is wrong.
The Geocentric Datum of Australia 1994 (GDA94) is attached to the Australian plate.
(Source: http://www.icsm.gov.au/icsm/gda/wgs84fact.pdf )

Best regards,
--
Mikael Rittri
Carmenta AB
Box 11354
SE-404 28 Göteborg
Visitors: Sankt Eriksgatan 5
SWEDEN
mikael.rittri at carmenta.com
www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Andrew Williams
Sent: den 11 december 2008 05:36
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Thanks Duncan. That "docking" scenario was how the system was sold to me by the developer of the hardware (Navcom).

Guess the brochure sounds better than the technically correct description;)

So just to make sure ITRF varies over time compared to WGS84 based on tectonics, correct?

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Duncan Agnew
Sent: Thursday, 4 December 2008 5:24 AM
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Google Earth Accuracy

Since I am in the crustal-motion business I want to correct the previous posting about ITRF. This is "space-based" only in the sense that it uses data from outside the Earth (GPS and other satellites, along with distant radio sources).  It was not designed with space use in mind. Since ITRF and
WGS84 are both space-based in this sense, they align closely: after all, the center of the Earth and the rotation pole are both non-arbitrary.

ITRF was designed to be an ultraprecise reference frame for measuring motions of the Earth as a whole, and of different parts relative to each other.
Since
the frame is designed to be fixed relative to the velocities of all the tectonic plates, averaged over the whole Earth, any particular point will have time-varying coordinates in this frame--as is is in fact true for any frame not tied to a particular plate (WGS-84 included), though many softwares do not take account of this. The people who develop and update ITRF are working at the millimeter level.

Two "plate-fixed" frames are NAD (at least east of the Rockies), and EUREF (for Northern Europe). Rather weirdly, Australia has chosen not to define a local frame, even though it has a plate all to itself.

For more on ITRF, see http://itrf.ensg.ign.fr/

Duncan Agnew

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From support.mn at elisanet.fi  Sun Dec 21 23:56:12 2008
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Mon, 22 Dec 2008 09:56:12 +0200 (EET)
Subject: [Proj] Google Earth Accuracy
Message-ID: <31231957.1823081229932573076.JavaMail.support.mn@elisanet.fi>

Hello,

Here is some text, most borrowed from the "WGS84 Implementation Manual"

http://www.dqts.net/files/wgsman24.pdf

The precise satellite laser ranging technique has led to a precise worldwide
terrestrial coordinates system, called the International Terrestrial Reference
System (ITRS). Satellite Laser Ranging (SLR) and Very Long Base-Line
Interferometry (VLBI) techniques guarantee a precision of 1-3 cm
over distances up to about 5000 km.

The ITRS is maintained by the IERS and the realization of
the ITRS is the International Terrestrial Reference Frame (ITRF).
Plate tectonic movement was incorporated in that coordinate system using
results of recent measurements and a global geophysical model. Thus, it is a
model with ***changing coordinates*** due to movements of tectonic plates on
which the ground stations are located. This reference system
provides the fundamental position of the Earth to within 10 cm and the
orientation of the axes to correspondingly high accuracies. Since 1988, the
IERS has defined the mean spin axis, the IERS Reference Pole (IRP) and the
zero meridian and the IERS Reference Meridian (IRM).

-----

Notice that the movement of some ITRS points (coordinates) are usually
only few centimeters a year maximum due to the plate movements.

Since WGS84 follows ITRS, it's coordinates are also moving. And so if one
includes the date of the point measurement, it is possible to calculate
backwards, if nessesary, the original location of that point.

Regards: Janne.



From till at free.fr  Mon Dec 29 16:07:28 2008
From: till at free.fr (Till)
Date: Tue, 30 Dec 2008 01:07:28 +0100
Subject: [Proj] Geo Transfoms and calculations
Message-ID: <000501c96a12$9a655ea0$cf301be0$@fr>

Hi all,

We're quite new to geographic fundamentals, but it sounds like PROJ.4 is a
pretty good base where to find proper 'geographic related' libraries.

We're currently working on graphic (2D/3D) tools for displaying accurate GPS
information and our goal is to rely on standard systems, avoiding to
'reinvent the wheel', feeling it should be much of a benefit if we could
share with the community.

By now, we were able to properly use the 'proj' API in order to match
different projection schemes into 'Cartesian' (3D space) coordinates, and
also mix 2D representations.

However, distance calculation seems to be another issue.

While we could find ways to implement a reasonable calculation

(for instance :

gpsDist(PointF P1, PointF P2)

{

return Acos( sin(P1.y)*sin(P2.y) + cos(P1.y)*cos(P2.y)*cos(P1.x-P2.x) ) *
earthRadius;

}),

our approach considers it could be concentrated on the same system, in order
to provide consistency (at least sharing 'earthRadius' values).

In that manner, we failed to use 'geod' or affiliate as API.

We have to say that we're developing on Windows platform (VS 2005), and
we're lacking sample/tutorial/help for such a use.

Any help in that manner would be welcome.

 

PS: Is there a proper (recommended) way to increase 'ellipsoid' definitions
(increasing or modifying  'pj_ellps' table, for instance changing "sphere"'s
radius)?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20081230/5f9db04f/attachment.html>

From geraldi.evenden at gmail.com  Mon Dec 29 16:55:18 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Mon, 29 Dec 2008 19:55:18 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <000501c96a12$9a655ea0$cf301be0$@fr>
References: <000501c96a12$9a655ea0$cf301be0$@fr>
Message-ID: <200812291955.18926.geraldi.evenden@gmail.com>

Your timing could not be much better.

I have almost completed a library set 'geod_*' that covers geodesic 
computations for both the spherical and elliptical earth.  I expect to have a 
first release out by this weekend as I am only doing finishing touches on the 
ellps= section (a user program version works right now with the libproj4 
library).  The ellipse method is based upon the NOAA routines rather than the 
USNOO process that I used in 'geod'---accuracy is also a little better.

The release comes with Doxygen html documentation (~2mb), of all the code and 
a self documenting user program 'geodesic'---that is: you type "geodesic" and 
at the prompt "geod:" type "help."  Maybe a little more help on the Doxygen 
front page. ;-)

Also, see note imbedded below and geodesic example at end.

On Monday 29 December 2008 7:07:28 pm Till wrote:
> Hi all,
>
> We're quite new to geographic fundamentals, but it sounds like PROJ.4 is a
> pretty good base where to find proper 'geographic related' libraries.
>
> We're currently working on graphic (2D/3D) tools for displaying accurate
> GPS information and our goal is to rely on standard systems, avoiding to
> 'reinvent the wheel', feeling it should be much of a benefit if we could
> share with the community.
>
> By now, we were able to properly use the 'proj' API in order to match
> different projection schemes into 'Cartesian' (3D space) coordinates, and
> also mix 2D representations.
>
> However, distance calculation seems to be another issue.
>
> While we could find ways to implement a reasonable calculation
>
> (for instance :
>
> gpsDist(PointF P1, PointF P2)
>
> {
>
This is a common equation for spherical geodesic but it is not very good for 
small values of the argument because acos looses precision.  All geodesic 
code I have used employs Snyder's recommended variation as in the geod_* 
library.

> return Acos( sin(P1.y)*sin(P2.y) + cos(P1.y)*cos(P2.y)*cos(P1.x-P2.x) ) *
> earthRadius;
>
> }),
>
> our approach considers it could be concentrated on the same system, in
> order to provide consistency (at least sharing 'earthRadius' values).
>
> In that manner, we failed to use 'geod' or affiliate as API.
>
> We have to say that we're developing on Windows platform (VS 2005), and
> we're lacking sample/tutorial/help for such a use.
>
> Any help in that manner would be welcome.
>
>
>
> PS: Is there a proper (recommended) way to increase 'ellipsoid' definitions
> (increasing or modifying  'pj_ellps' table, for instance changing
> "sphere"'s radius)?

Note that both traditional proj DMS and GRASS colon format geographic 
coordinates are read.

gie at charon:~/CARTO/geodesic/src$ ./geodesic
geod: help
command: earth -- set earth shape parameters
command: show -- display [arc|earth] structure contents
command: p1 -- set point 1 [lon lat]
command: p2 -- set point 2 [lon lat]
command: open -- open output file
command: vector -- set vector [distance azimuth
command: line -- compute geodesic line
command: circle -- compute circle or arc [2nd azi. del azi.]
command: prec -- set display precision
command: quit -- exit program
command: help -- show this list

For more detailed assistance type "<command> help" for
more detailed information on that command.
geod: earth ellps=WGS84
geod: p1 100d14'33.2W 30d15
geod: p2 -90:17:55 44d7'30n
    Point 1 Lon:  100d14'33.20000"W  Lat:   30d15'00.00000"N  height: 0.000
    Point 2 Lon:   90d17'55.00000"W  Lat:   44d07'30.00000"N  height: 0.000
    Azimuth p1->p2: 26d55'6.60"
    Distance: 1771916.625
    Azimuth p2->p1: 212d58'58.59"
geod: quit
geodesic at completion.   G'day mate!
gie at charon:~/CARTO/geodesic/src$

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From till at free.fr  Tue Dec 30 07:40:10 2008
From: till at free.fr (Till)
Date: Tue, 30 Dec 2008 16:40:10 +0100
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <200812291955.18926.geraldi.evenden@gmail.com>
Message-ID: <1847D87B67684CF494F2CDC0D6D37934@PRECISION>

Thanks for your answers Gerald,

Is this library already available, or it is a brand new product that can be
only tested after being released? (Next week, obviously)

As far as I have understood, you're working on libproj4 project. Will the
'geod_*' stuff be associated/related to it?
By now, we only worked with proj.4, that means using proj.dll. This is the
only library we managed to compile with Visual C++. We failed with libproj4,
which looks as linux only.
But we're quite happy with it, proj.dll fits properly our needs, except
we're missing those distance calculation functions.

What is your recommendation regarding this?
How should the 'geod_*' set work in conjunction with it?

Thanks for your feedback.

-----Message d'origine-----
De : Gerald I. Evenden [mailto:geraldi.evenden at gmail.com] 
Envoyé : mardi 30 décembre 2008 01:55
À : proj at lists.maptools.org
Cc : Till
Objet : Re: [Proj] Geo Transfoms and calculations

Your timing could not be much better.

I have almost completed a library set 'geod_*' that covers geodesic 
computations for both the spherical and elliptical earth.  I expect to have
a 
first release out by this weekend as I am only doing finishing touches on
the 
ellps= section (a user program version works right now with the libproj4 
library).  The ellipse method is based upon the NOAA routines rather than
the 
USNOO process that I used in 'geod'---accuracy is also a little better.

The release comes with Doxygen html documentation (~2mb), of all the code
and 
a self documenting user program 'geodesic'---that is: you type "geodesic"
and 
at the prompt "geod:" type "help."  Maybe a little more help on the Doxygen 
front page. ;-)

Also, see note imbedded below and geodesic example at end.

On Monday 29 December 2008 7:07:28 pm Till wrote:
> Hi all,
>
> We're quite new to geographic fundamentals, but it sounds like PROJ.4 is a
> pretty good base where to find proper 'geographic related' libraries.
>
> We're currently working on graphic (2D/3D) tools for displaying accurate
> GPS information and our goal is to rely on standard systems, avoiding to
> 'reinvent the wheel', feeling it should be much of a benefit if we could
> share with the community.
>
> By now, we were able to properly use the 'proj' API in order to match
> different projection schemes into 'Cartesian' (3D space) coordinates, and
> also mix 2D representations.
>
> However, distance calculation seems to be another issue.
>
> While we could find ways to implement a reasonable calculation
>
> (for instance :
>
> gpsDist(PointF P1, PointF P2)
>
> {
>
This is a common equation for spherical geodesic but it is not very good for

small values of the argument because acos looses precision.  All geodesic 
code I have used employs Snyder's recommended variation as in the geod_* 
library.

> return Acos( sin(P1.y)*sin(P2.y) + cos(P1.y)*cos(P2.y)*cos(P1.x-P2.x) ) *
> earthRadius;
>
> }),
>
> our approach considers it could be concentrated on the same system, in
> order to provide consistency (at least sharing 'earthRadius' values).
>
> In that manner, we failed to use 'geod' or affiliate as API.
>
> We have to say that we're developing on Windows platform (VS 2005), and
> we're lacking sample/tutorial/help for such a use.
>
> Any help in that manner would be welcome.
>
>
>
> PS: Is there a proper (recommended) way to increase 'ellipsoid'
definitions
> (increasing or modifying  'pj_ellps' table, for instance changing
> "sphere"'s radius)?

Note that both traditional proj DMS and GRASS colon format geographic 
coordinates are read.

gie at charon:~/CARTO/geodesic/src$ ./geodesic
geod: help
command: earth -- set earth shape parameters
command: show -- display [arc|earth] structure contents
command: p1 -- set point 1 [lon lat]
command: p2 -- set point 2 [lon lat]
command: open -- open output file
command: vector -- set vector [distance azimuth
command: line -- compute geodesic line
command: circle -- compute circle or arc [2nd azi. del azi.]
command: prec -- set display precision
command: quit -- exit program
command: help -- show this list

For more detailed assistance type "<command> help" for
more detailed information on that command.
geod: earth ellps=WGS84
geod: p1 100d14'33.2W 30d15
geod: p2 -90:17:55 44d7'30n
    Point 1 Lon:  100d14'33.20000"W  Lat:   30d15'00.00000"N  height: 0.000
    Point 2 Lon:   90d17'55.00000"W  Lat:   44d07'30.00000"N  height: 0.000
    Azimuth p1->p2: 26d55'6.60"
    Distance: 1771916.625
    Azimuth p2->p1: 212d58'58.59"
geod: quit
geodesic at completion.   G'day mate!
gie at charon:~/CARTO/geodesic/src$

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist



From EMiller at dfg.ca.gov  Tue Dec 30 09:39:57 2008
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Tue, 30 Dec 2008 09:39:57 -0800
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <1847D87B67684CF494F2CDC0D6D37934@PRECISION>
References: <200812291955.18926.geraldi.evenden@gmail.com>
	<1847D87B67684CF494F2CDC0D6D37934@PRECISION>
Message-ID: <4959EC6D.95FD.00E4.0@dfg.ca.gov>

You need only a minor modification to Gerald's libproj4 to compile on
windows.  Because Microsoft is lame, their math library does not include
atanh (or asinh or acosh). 

Previously, I overcame this by building in a naive implementation of
atanh as:

double atanh( double x )
{
	return log((1 + x)/(1 - x))/2;
}

Since Gerald has since embraced the GSL, maybe we can get him to use
the GSL versions of those functions and let the GNU folks handle
platform compatibility.

>>> On 12/30/2008 at 7:40 AM, "Till" <till at free.fr> wrote:
> Thanks for your answers Gerald,
> 
> Is this library already available, or it is a brand new product that
can be
> only tested after being released? (Next week, obviously)
> 
> As far as I have understood, you're working on libproj4 project. Will
the
> 'geod_*' stuff be associated/related to it?
> By now, we only worked with proj.4, that means using proj.dll. This
is the
> only library we managed to compile with Visual C++. We failed with
libproj4,
> which looks as linux only.
> But we're quite happy with it, proj.dll fits properly our needs,
except
> we're missing those distance calculation functions.
> 
> What is your recommendation regarding this?
> How should the 'geod_*' set work in conjunction with it?
> 
> Thanks for your feedback.
> 
> -----Message d'origine-----
> De : Gerald I. Evenden [mailto:geraldi.evenden at gmail.com] 
> Envoyé : mardi 30 décembre 2008 01:55
> À : proj at lists.maptools.org 
> Cc : Till
> Objet : Re: [Proj] Geo Transfoms and calculations
> 
> Your timing could not be much better.
> 
> I have almost completed a library set 'geod_*' that covers geodesic 
> computations for both the spherical and elliptical earth.  I expect
to have
> a 
> first release out by this weekend as I am only doing finishing
touches on
> the 
> ellps= section (a user program version works right now with the
libproj4 
> library).  The ellipse method is based upon the NOAA routines rather
than
> the 
> USNOO process that I used in 'geod'---accuracy is also a little
better.
> 
> The release comes with Doxygen html documentation (~2mb), of all the
code
> and 
> a self documenting user program 'geodesic'---that is: you type
"geodesic"
> and 
> at the prompt "geod:" type "help."  Maybe a little more help on the
Doxygen 
> front page. ;-)
> 
> Also, see note imbedded below and geodesic example at end.
> 
> On Monday 29 December 2008 7:07:28 pm Till wrote:
>> Hi all,
>>
>> We're quite new to geographic fundamentals, but it sounds like
PROJ.4 is a
>> pretty good base where to find proper 'geographic related'
libraries.
>>
>> We're currently working on graphic (2D/3D) tools for displaying
accurate
>> GPS information and our goal is to rely on standard systems,
avoiding to
>> 'reinvent the wheel', feeling it should be much of a benefit if we
could
>> share with the community.
>>
>> By now, we were able to properly use the 'proj' API in order to
match
>> different projection schemes into 'Cartesian' (3D space)
coordinates, and
>> also mix 2D representations.
>>
>> However, distance calculation seems to be another issue.
>>
>> While we could find ways to implement a reasonable calculation
>>
>> (for instance :
>>
>> gpsDist(PointF P1, PointF P2)
>>
>> {
>>
> This is a common equation for spherical geodesic but it is not very
good for
> 
> small values of the argument because acos looses precision.  All
geodesic 
> code I have used employs Snyder's recommended variation as in the
geod_* 
> library.
> 
>> return Acos( sin(P1.y)*sin(P2.y) +
cos(P1.y)*cos(P2.y)*cos(P1.x-P2.x) ) *
>> earthRadius;
>>
>> }),
>>
>> our approach considers it could be concentrated on the same system,
in
>> order to provide consistency (at least sharing 'earthRadius'
values).
>>
>> In that manner, we failed to use 'geod' or affiliate as API.
>>
>> We have to say that we're developing on Windows platform (VS 2005),
and
>> we're lacking sample/tutorial/help for such a use.
>>
>> Any help in that manner would be welcome.
>>
>>
>>
>> PS: Is there a proper (recommended) way to increase 'ellipsoid'
> definitions
>> (increasing or modifying  'pj_ellps' table, for instance changing
>> "sphere"'s radius)?
> 
> Note that both traditional proj DMS and GRASS colon format geographic

> coordinates are read.
> 
> gie at charon:~/CARTO/geodesic/src$ ./geodesic
> geod: help
> command: earth -- set earth shape parameters
> command: show -- display [arc|earth] structure contents
> command: p1 -- set point 1 [lon lat]
> command: p2 -- set point 2 [lon lat]
> command: open -- open output file
> command: vector -- set vector [distance azimuth
> command: line -- compute geodesic line
> command: circle -- compute circle or arc [2nd azi. del azi.]
> command: prec -- set display precision
> command: quit -- exit program
> command: help -- show this list
> 
> For more detailed assistance type "<command> help" for
> more detailed information on that command.
> geod: earth ellps=WGS84
> geod: p1 100d14'33.2W 30d15
> geod: p2 -90:17:55 44d7'30n
>     Point 1 Lon:  100d14'33.20000"W  Lat:   30d15'00.00000"N  height:
0.000
>     Point 2 Lon:   90d17'55.00000"W  Lat:   44d07'30.00000"N  height:
0.000
>     Azimuth p1->p2: 26d55'6.60"
>     Distance: 1771916.625
>     Azimuth p2->p1: 212d58'58.59"
> geod: quit
> geodesic at completion.   G'day mate!
> gie at charon:~/CARTO/geodesic/src$


From geraldi.evenden at gmail.com  Tue Dec 30 10:24:05 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Tue, 30 Dec 2008 13:24:05 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <4959EC6D.95FD.00E4.0@dfg.ca.gov>
References: <200812291955.18926.geraldi.evenden@gmail.com>
	<1847D87B67684CF494F2CDC0D6D37934@PRECISION>
	<4959EC6D.95FD.00E4.0@dfg.ca.gov>
Message-ID: <200812301324.05960.geraldi.evenden@gmail.com>

On Tuesday 30 December 2008 12:39:57 pm Eric Miller wrote:
> You need only a minor modification to Gerald's libproj4 to compile on
> windows.  Because Microsoft is lame, their math library does not include
> atanh (or asinh or acosh).

That's incredible!  H&S indicate these are C99 so that may be part of the 
reason.  But still ... it is almost 09.  It just shows that nobody in Redmond 
got beyond 4th grade math ... oops, arithmatic.

> Previously, I overcame this by building in a naive implementation of
> atanh as:
>
> double atanh( double x )
> {
> 	return log((1 + x)/(1 - x))/2;
> }
>
> Since Gerald has since embraced the GSL, maybe we can get him to use
> the GSL versions of those functions and let the GNU folks handle
> platform compatibility.

I use MIT which is apparently tolerated by GSL but I don't want to get into 
that can of ugly  worms.  Besides, I do not have the libm source anyway.  
Kinda brings up a point: isn't gcc and library under GSL so that nobody can 
distribute a binary that uses the library without the associated BS?

All of the equivalent forms, like above, ought to be available in math 
references on the Internet (just google 'atanh') or in Abramowitz(sp.).
Put the code into gatesmath.c and gatesmath.h and attach to the Makefile 
lists.  ;-) NO, NO! Don't answer that!  No more discussion on this subject!

I'm sorry, but it is crap like that that makes me have such a loathesome 
opinion of M$.
 ...
-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ovv at hetnet.nl  Tue Dec 30 10:39:34 2008
From: ovv at hetnet.nl (OvV_HN)
Date: Tue, 30 Dec 2008 19:39:34 +0100
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <4959EC6D.95FD.00E4.0@dfg.ca.gov>
References: <200812291955.18926.geraldi.evenden@gmail.com><1847D87B67684CF494F2CDC0D6D37934@PRECISION>
	<4959EC6D.95FD.00E4.0@dfg.ca.gov>
Message-ID: <738DA1DDE74946DD9B4652073351B928@PCHP>

Is GSL that accurate?
It could be that I'm missing something, but GNU GSL does the asinh, acosh 
and atanh functions with the aid of a log1p function which is not 
significantly accurate for small x, although the comments say "cancels 
errors with IEEE arithmetic". Just compare this with the Cephes log1p 
function, published by Steve Moshier; see the file cmath:unity.c. The Cephes 
log1p has a "Theoretical peak relative error = 2.32e-20". Could be sometimes 
worse than a complete error cancellation, but does the error always cancel?
What I´m trying to say is: don't bet all your horses blindly on GNU GSL.

Oscar van Vlijmen



----- Original Message ----- 
From: "Eric Miller" <EMiller at dfg.ca.gov>
To: <proj at lists.maptools.org>
Sent: Tuesday, December 30, 2008 6:39 PM
Subject: Re: [Proj] Geo Transfoms and calculations


You need only a minor modification to Gerald's libproj4 to compile on
windows.  Because Microsoft is lame, their math library does not include
atanh (or asinh or acosh).

Previously, I overcame this by building in a naive implementation of
atanh as:

double atanh( double x )
{
return log((1 + x)/(1 - x))/2;
}

Since Gerald has since embraced the GSL, maybe we can get him to use
the GSL versions of those functions and let the GNU folks handle
platform compatibility.






From EMiller at dfg.ca.gov  Tue Dec 30 10:59:43 2008
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Tue, 30 Dec 2008 10:59:43 -0800
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <200812301324.05960.geraldi.evenden@gmail.com>
References: <200812291955.18926.geraldi.evenden@gmail.com>
	<1847D87B67684CF494F2CDC0D6D37934@PRECISION>
	<4959EC6D.95FD.00E4.0@dfg.ca.gov>
	<200812301324.05960.geraldi.evenden@gmail.com>
Message-ID: <4959FF1F.95FD.00E4.0@dfg.ca.gov>

Microsoft claims there is no market demand for C99.  However, they have implemented some parts they've decided are useful.  Not enough in my book.

They're really pushing their CLR platform and associated languages and tools (C#, VB.Net, F#, whatever).  I guess Visual C doesn't make enough money for them.

>>> On 12/30/2008 at 10:24 AM, "Gerald I. Evenden" <geraldi.evenden at gmail.com>
wrote:
> On Tuesday 30 December 2008 12:39:57 pm Eric Miller wrote:
>> You need only a minor modification to Gerald's libproj4 to compile on
>> windows.  Because Microsoft is lame, their math library does not include
>> atanh (or asinh or acosh).
> 
> That's incredible!  H&S indicate these are C99 so that may be part of the 
> reason.  But still ... it is almost 09.  It just shows that nobody in 
> Redmond 
> got beyond 4th grade math ... oops, arithmatic.
> 
>> Previously, I overcame this by building in a naive implementation of
>> atanh as:
>>
>> double atanh( double x )
>> {
>> 	return log((1 + x)/(1 - x))/2;
>> }
>>
>> Since Gerald has since embraced the GSL, maybe we can get him to use
>> the GSL versions of those functions and let the GNU folks handle
>> platform compatibility.
> 
> I use MIT which is apparently tolerated by GSL but I don't want to get into 
> that can of ugly  worms.  Besides, I do not have the libm source anyway.  
> Kinda brings up a point: isn't gcc and library under GSL so that nobody can 
> distribute a binary that uses the library without the associated BS?
> 
> All of the equivalent forms, like above, ought to be available in math 
> references on the Internet (just google 'atanh') or in Abramowitz(sp.).
> Put the code into gatesmath.c and gatesmath.h and attach to the Makefile 
> lists.  ;-) NO, NO! Don't answer that!  No more discussion on this subject!
> 
> I'm sorry, but it is crap like that that makes me have such a loathesome 
> opinion of M$.
>  ...



From geraldi.evenden at gmail.com  Tue Dec 30 11:08:32 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Tue, 30 Dec 2008 14:08:32 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <4959FF1F.95FD.00E4.0@dfg.ca.gov>
References: <200812291955.18926.geraldi.evenden@gmail.com>
	<200812301324.05960.geraldi.evenden@gmail.com>
	<4959FF1F.95FD.00E4.0@dfg.ca.gov>
Message-ID: <200812301408.32604.geraldi.evenden@gmail.com>

On Tuesday 30 December 2008 1:59:43 pm Eric Miller wrote:
> Microsoft claims there is no market demand for C99.  However, they have
> implemented some parts they've decided are useful.  Not enough in my book.
>
> They're really pushing their CLR platform and associated languages and
> tools (C#, VB.Net, F#, whatever).  I guess Visual C doesn't make enough
> money for them.

Obviously part of their plan for world domination.

Microsoft <-> Big Brother

> >>> On 12/30/2008 at 10:24 AM, "Gerald I. Evenden"
> >>> <geraldi.evenden at gmail.com>
	...

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From proj at cwilson.fastmail.fm  Tue Dec 30 11:27:49 2008
From: proj at cwilson.fastmail.fm (Charles Wilson)
Date: Tue, 30 Dec 2008 14:27:49 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <4959EC6D.95FD.00E4.0@dfg.ca.gov>
References: <200812291955.18926.geraldi.evenden@gmail.com>	<1847D87B67684CF494F2CDC0D6D37934@PRECISION>
	<4959EC6D.95FD.00E4.0@dfg.ca.gov>
Message-ID: <495A7635.2090204@cwilson.fastmail.fm>

Eric Miller wrote:
> You need only a minor modification to Gerald's libproj4 to compile on
> windows.  Because Microsoft is lame, their math library does not include
> atanh (or asinh or acosh). 
> 
> Since Gerald has since embraced the GSL, maybe we can get him to use
> the GSL versions of those functions and let the GNU folks handle
> platform compatibility.

And what happens when libproj4 is compiled with #define NO_GSL (or
equivalent) to avoid GPL issues?  How much existing libproj4
functionality do you want see locked behind that GSL/GPL barrier?

--
Chuck


From proj at cwilson.fastmail.fm  Tue Dec 30 11:37:37 2008
From: proj at cwilson.fastmail.fm (Charles Wilson)
Date: Tue, 30 Dec 2008 14:37:37 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <200812301324.05960.geraldi.evenden@gmail.com>
References: <200812291955.18926.geraldi.evenden@gmail.com>	<1847D87B67684CF494F2CDC0D6D37934@PRECISION>	<4959EC6D.95FD.00E4.0@dfg.ca.gov>
	<200812301324.05960.geraldi.evenden@gmail.com>
Message-ID: <495A7881.1050403@cwilson.fastmail.fm>

Gerald I. Evenden wrote:
> I use MIT which is apparently tolerated by GSL but I don't want to get into 
> that can of ugly  worms.  Besides, I do not have the libm source anyway.  
> Kinda brings up a point: isn't gcc and library under GSL 

I assume you meant "GPL" here.

> so that nobody can 
> distribute a binary that uses the library without the associated BS?

Actually, the runtime libraries from gcc are NOT under the GPL, exactly.
They are distributed under the GPL with "runtime exception":

For instance (libgcc):

In addition to the permissions in the GNU General Public License, the
Free Software Foundation gives you unlimited permission to link the
compiled version of this file into combinations with other programs,
and to distribute those combinations without any restriction coming
from the use of this file.  (The General Public License restrictions
do apply in other respects; for example, they cover modification of
the file, and distribution when not linked into a combine
executable.)


For instance (g++ STL headers):

As a special exception, you may use this file as part of a free software
library without restriction.  Specifically, if other files instantiate
templates or use macros or inline functions from this file, or you
compile this file and link it with other files to produce an executable,
this file does not by itself cause the resulting executable to be
covered by the GNU General Public License.  This exception does not
however invalidate any other reasons why the executable file might be
covered by the GNU General Public License.

--
Chuck



From EMiller at dfg.ca.gov  Tue Dec 30 12:01:14 2008
From: EMiller at dfg.ca.gov (Eric Miller)
Date: Tue, 30 Dec 2008 12:01:14 -0800
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <495A7635.2090204@cwilson.fastmail.fm>
References: <200812291955.18926.geraldi.evenden@gmail.com>	<1847D87B67684CF494F2CDC0D6D37934@PRECISION>
	<4959EC6D.95FD.00E4.0@dfg.ca.gov><4959EC6D.95FD.00E4.0@dfg.ca.gov>
	<495A7635.2090204@cwilson.fastmail.fm>
Message-ID: <495A0D8A.95FD.00E4.0@dfg.ca.gov>

Well.  That is Gerald's choice.  It doesn't matter to me either way since I'm not in the business of selling software.

>>> On 12/30/2008 at 11:27 AM, Charles Wilson <proj at cwilson.fastmail.fm> wrote:
> Eric Miller wrote:
>> You need only a minor modification to Gerald's libproj4 to compile on
>> windows.  Because Microsoft is lame, their math library does not include
>> atanh (or asinh or acosh). 
>> 
>> Since Gerald has since embraced the GSL, maybe we can get him to use
>> the GSL versions of those functions and let the GNU folks handle
>> platform compatibility.
> 
> And what happens when libproj4 is compiled with #define NO_GSL (or
> equivalent) to avoid GPL issues?  How much existing libproj4
> functionality do you want see locked behind that GSL/GPL barrier?
> 
> --
> Chuck
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj



From geraldi.evenden at gmail.com  Tue Dec 30 12:24:23 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Tue, 30 Dec 2008 15:24:23 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <495A7881.1050403@cwilson.fastmail.fm>
References: <200812291955.18926.geraldi.evenden@gmail.com>
	<200812301324.05960.geraldi.evenden@gmail.com>
	<495A7881.1050403@cwilson.fastmail.fm>
Message-ID: <200812301524.23369.geraldi.evenden@gmail.com>

For your amument and a display of how far along I am on the geodesic software 
you might want to visit:

http://members.verizon.net/~gerald.evenden/geod/

I am thinking that this might be the way to handle libproj4 but as this small 
project take2 2Mb for the html I may not have enough room on my web space.

Any constructive comments on what is already prep'ed would be appreciated.

PS: I have not figured out how to get the Makefile into the system because its 
comment character set does not match anything in Doxygen's scheme.

-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From till at free.fr  Tue Dec 30 12:28:00 2008
From: till at free.fr (Till)
Date: Tue, 30 Dec 2008 21:28:00 +0100
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <4959FF1F.95FD.00E4.0@dfg.ca.gov>
References: <200812291955.18926.geraldi.evenden@gmail.com>	<1847D87B67684CF494F2CDC0D6D37934@PRECISION>	<4959EC6D.95FD.00E4.0@dfg.ca.gov>	<200812301324.05960.geraldi.evenden@gmail.com>
	<4959FF1F.95FD.00E4.0@dfg.ca.gov>
Message-ID: <000001c96abd$1ba681b0$52f38510$@fr>

Thanks all for your feedback.

I have to admit I'm far above most of this considerations, and I fully trust
you on that side.
My first concern yet is to be able to properly compile libproj4, which I
failed to do because of my lack of knowledge in manipulating makefiles that
are not readable by the M$ 'nmake' tool.


-----Message d'origine-----
De : proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] De la part de Eric Miller
Envoyé : mardi 30 décembre 2008 20:00
À : geraldi.evenden at gmail.com; proj at lists.maptools.org
Objet : Re: [Proj] Geo Transfoms and calculations

Microsoft claims there is no market demand for C99.  However, they have
implemented some parts they've decided are useful.  Not enough in my book.

They're really pushing their CLR platform and associated languages and tools
(C#, VB.Net, F#, whatever).  I guess Visual C doesn't make enough money for
them.

>>> On 12/30/2008 at 10:24 AM, "Gerald I. Evenden"
<geraldi.evenden at gmail.com>
wrote:
> On Tuesday 30 December 2008 12:39:57 pm Eric Miller wrote:
>> You need only a minor modification to Gerald's libproj4 to compile on
>> windows.  Because Microsoft is lame, their math library does not include
>> atanh (or asinh or acosh).
> 
> That's incredible!  H&S indicate these are C99 so that may be part of the 
> reason.  But still ... it is almost 09.  It just shows that nobody in 
> Redmond 
> got beyond 4th grade math ... oops, arithmatic.
> 
>> Previously, I overcame this by building in a naive implementation of
>> atanh as:
>>
>> double atanh( double x )
>> {
>> 	return log((1 + x)/(1 - x))/2;
>> }
>>
>> Since Gerald has since embraced the GSL, maybe we can get him to use
>> the GSL versions of those functions and let the GNU folks handle
>> platform compatibility.
> 
> I use MIT which is apparently tolerated by GSL but I don't want to get
into 
> that can of ugly  worms.  Besides, I do not have the libm source anyway.  
> Kinda brings up a point: isn't gcc and library under GSL so that nobody
can 
> distribute a binary that uses the library without the associated BS?
> 
> All of the equivalent forms, like above, ought to be available in math 
> references on the Internet (just google 'atanh') or in Abramowitz(sp.).
> Put the code into gatesmath.c and gatesmath.h and attach to the Makefile 
> lists.  ;-) NO, NO! Don't answer that!  No more discussion on this
subject!
> 
> I'm sorry, but it is crap like that that makes me have such a loathesome 
> opinion of M$.
>  ...

_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj



From geraldi.evenden at gmail.com  Tue Dec 30 13:35:10 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Tue, 30 Dec 2008 16:35:10 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <495A0D8A.95FD.00E4.0@dfg.ca.gov>
References: <200812291955.18926.geraldi.evenden@gmail.com>
	<495A7635.2090204@cwilson.fastmail.fm>
	<495A0D8A.95FD.00E4.0@dfg.ca.gov>
Message-ID: <200812301635.10073.geraldi.evenden@gmail.com>

On Tuesday 30 December 2008 3:01:14 pm Eric Miller wrote:
> Well.  That is Gerald's choice.  It doesn't matter to me either way since
> I'm not in the business of selling software.

Neither am I.

And  yes, I meant GPL and not GSL---Freudian slip or something.

Lastly, I personally think this whole license thing sucks and wish it would go 
away.  Stallman has confused this issue beyond a lawyer's recognition.

Lastly, I am sure everyone is assured that I am not going to sue anyone 
because they use my software.  All I am worried about is keeping someone from 
suing me because of some micro-coded release I neither knew about or could 
not understand.

MIT seems reasonable but a pox on GPL.  You have to get a seance with Clarance 
Darrow to figure that one out.  Stallman is a smart cookie but as far as I am 
concerned, he and GPL does nothing but impede open interchange of software.

> >>> On 12/30/2008 at 11:27 AM, Charles Wilson <proj at cwilson.fastmail.fm>
> >>> wrote:
> >
> > Eric Miller wrote:
> >> You need only a minor modification to Gerald's libproj4 to compile on
> >> windows.  Because Microsoft is lame, their math library does not include
> >> atanh (or asinh or acosh).
> >>
> >> Since Gerald has since embraced the GSL, maybe we can get him to use
> >> the GSL versions of those functions and let the GNU folks handle
> >> platform compatibility.
> >
> > And what happens when libproj4 is compiled with #define NO_GSL (or
> > equivalent) to avoid GPL issues?  How much existing libproj4
> > functionality do you want see locked behind that GSL/GPL barrier?
> >
> > --
> > Chuck
> > _______________________________________________
> > Proj mailing list
> > Proj at lists.maptools.org
> > http://lists.maptools.org/mailman/listinfo/proj
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From ckarney at sarnoff.com  Wed Dec 31 07:17:59 2008
From: ckarney at sarnoff.com (Charles Karney)
Date: Wed, 31 Dec 2008 10:17:59 -0500
Subject: [Proj] Geo Transfoms and calculations
Message-ID: <ssrbpusl6fs.fsf@petrel.petrel.org>

Let me defend the GPL.  If you write some software and

(a) you'd like everyone to be able to use it (including reading/
    modifying the code) and

(b) you don't want anyone "extending" your code and then selling
    binary-only copies of the extended code

then GPL is an appropriate license.  Stallman isn't forcing GPL on
anyone; the GPL is merely protecting the authors' rights.  If you don't
like the GPL license on the GSL, then just imagine a possible
alternative: negotiate with the Numerical Algorithms Group for a license
to NAG.

> [Stallman] and GPL [do] nothing but impede open interchange of
> software.

This just shows an ignorance of history.  To mention one example:
Torvalds chose the GPL for Linux.  A more "liberal" license (e.g., the
MIT license) would have resulted in a Balkanized effort with multiple
commercial entities attempting to sell versions of Linux with their
various proprietary extensions.  (Similarly you should be thankful that
the gcc compiler is covered by the GPL.)

-- 
Charles Karney <ckarney at sarnoff.com>
Sarnoff Corporation, Princeton, NJ 08543-5300

URL: http://charles.karney.info
Tel: +1 609 734 2312
Fax: +1 609 734 2662


From geraldi.evenden at gmail.com  Wed Dec 31 08:15:54 2008
From: geraldi.evenden at gmail.com (Gerald I. Evenden)
Date: Wed, 31 Dec 2008 11:15:54 -0500
Subject: [Proj] Geo Transfoms and calculations
In-Reply-To: <ssrbpusl6fs.fsf@petrel.petrel.org>
References: <ssrbpusl6fs.fsf@petrel.petrel.org>
Message-ID: <200812311115.54172.geraldi.evenden@gmail.com>

I will not argue with what you have said but lets look at it from my 
perspective:

1.  I can sit here in my cozy den and hack away and use all sorts of software 
out there that is free for the download.  I am very fat and happy and get 
along just fine.

2.  Also remember that this is an advocational activity and I do not have any 
monetary involvement.  My main expense is the hardware I occasionally update 
and the electric power used and maybe the occasional book or library trip.

3.  After a fun period of hacking I come up with something that may be of 
interest to others.  In the good 'ol days this used to be simple: just put a 
note out on usenet or a bulletin board and pass out floppies.  No hassle.

4.  Now I need to put disclaimers, ... blah, blah, ... and get the feeling 
that I need to put an attorney on retainer.  And occassionally get dumped 
upon by others if I make a choice of using someone else's "free" software 
that apparently upsets the potential users of my software legal apple cart.

5.  What's a poor jerk like me supposed to do?  For example, on the geodetic 
program I am currently finishing up I want to put 'readline' on the front end 
for obvious reasons; BUT wait, that uses GPL.  Arrgh!  I can hear the 
bitching and moaning now.  At the moment I have a simple procedure 
called 'readline' as a substitute but gee, is the name possible copyrighted 
too?

That is why I get cranky about the whole issue.

On Wednesday 31 December 2008 10:17:59 am Charles Karney wrote:
> Let me defend the GPL.  If you write some software and
>
> (a) you'd like everyone to be able to use it (including reading/
>     modifying the code) and
>
> (b) you don't want anyone "extending" your code and then selling
>     binary-only copies of the extended code
>
> then GPL is an appropriate license.  Stallman isn't forcing GPL on
> anyone; the GPL is merely protecting the authors' rights.  If you don't
> like the GPL license on the GSL, then just imagine a possible
> alternative: negotiate with the Numerical Algorithms Group for a license
> to NAG.
>
> > [Stallman] and GPL [do] nothing but impede open interchange of
> > software.
>
> This just shows an ignorance of history.  To mention one example:
> Torvalds chose the GPL for Linux.  A more "liberal" license (e.g., the
> MIT license) would have resulted in a Balkanized effort with multiple
> commercial entities attempting to sell versions of Linux with their
> various proprietary extensions.  (Similarly you should be thankful that
> the gcc compiler is covered by the GPL.)



-- 
The whole religious complexion of the modern world is due
to the absence from Jerusalem of a lunatic asylum.
-- Havelock Ellis (1859-1939) British psychologist


From Christian.AMEIL at total.com  Wed Dec 31 19:00:44 2008
From: Christian.AMEIL at total.com (Christian AMEIL)
Date: Thu, 1 Jan 2009 04:00:44 +0100
Subject: [Proj] Christian AMEIL est absent
Message-ID: <OF038BEE1B.7D10B21B-ONC1257531.00108C22-C1257531.00108C22@total.com>





Je serai absent(e) du  31/12/2008 au 02/01/2009.

I am currently out of the office and will be back on the 2nd of January. I can read no email during
this period.
Best Wishes of Happy Holidays and a Successful New Year.


