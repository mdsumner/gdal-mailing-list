From kmelero at imagelinks.com  Fri Mar 24 12:12:37 2000
From: kmelero at imagelinks.com (Kenneth Melero)
Date: Fri, 24 Mar 2000 15:12:37 -0500
Subject: [OSRS-PROJ] GEOTRANS vs. PROJ.4
Message-ID: <38DBCC35.61E957A7@imagelinks.com>

Frank,

Have you looked at the NIMA Geotrans package?  If you have, do you have
any comments on how it stacks up against PROJ.4?  Pros or Cons?  

Thanks,
Ken

-- 
Kenneth Melero				Imagelinks, Inc.
Lead Software Engineer			4450 W. Eau Gallie Blvd.
					Melbourne, FL  32934
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From warmerda at home.com  Mon Mar 27 08:23:51 2000
From: warmerda at home.com (Frank Warmerdam)
Date: Mon, 27 Mar 2000 11:23:51 -0500
Subject: [OSRS-PROJ] PROJ 4.4.1
Message-ID: <38DF8B17.50F22CBA@home.com>

Folks,

I have corrected problems with PROJ 4.4.0 's install logic. It wasn't
installing the data files from proj/nad. 

In the past these files were installed into /usr/local/lib/proj.4, but using
the default Automake install rules data goes into /usr/local/share/proj.  Does
anyone think this will be a problem?  I am not finding it easy to change 
automake's idea of what should happen!

I have also fixed src/Makefile.{in,am} so that PROJ_LIB is defined with the
data path.

The COPYING file has been updated to include an MIT style license.  I would
prefer to not use the LGPL for fear of causing problems with the OGDI users
of PROJ.4 who have been releasing under a non-LGPL OpenSource license. 

I have also added a few more links and things to the web page.  

I haven't prepared a new tar file yet.  Let me know if someone needs it. 

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerda at home.com
light and sound - activate the windows | http://members.home.com/warmerda
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From jan at intevation.de  Mon Mar 27 08:35:56 2000
From: jan at intevation.de (Jan-Oliver Wagner)
Date: Mon, 27 Mar 2000 18:35:56 +0200
Subject: [OSRS-PROJ] PROJ 4.4.1
In-Reply-To: <38DF8B17.50F22CBA@home.com>; from warmerda@home.com on Mon, Mar 27, 2000 at 11:23:51AM -0500
References: <38DF8B17.50F22CBA@home.com>
Message-ID: <20000327183556.A7103@cheops.usf.Uni-Osnabrueck.DE>

Dear Frank,

thanks for the fixes in PROJ!

On Mon, Mar 27, 2000 at 11:23:51AM -0500, Frank Warmerdam wrote:
> The COPYING file has been updated to include an MIT style license.  I would
> prefer to not use the LGPL for fear of causing problems with the OGDI users
> of PROJ.4 who have been releasing under a non-LGPL OpenSource license. 

Thats sounds reasonable. I will update this information on the FreeGIS
page.

Is there any survey for all tools using proj available?

> I haven't prepared a new tar file yet.  Let me know if someone needs it. 

Yes please, for the FreeGIS CD. With autoconf environment it should
be only one command ...

Jan

-- 
Jan-Oliver Wagner				http://intevation.de/~jan/

Intevation GmbH				  	     http://intevation.de/
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From kmelero at imagelinks.com  Mon Mar 27 08:41:36 2000
From: kmelero at imagelinks.com (Kenneth Melero)
Date: Mon, 27 Mar 2000 11:41:36 -0500
Subject: [OSRS-PROJ] PROJ 4.4.1
References: <38DF8B17.50F22CBA@home.com>
Message-ID: <38DF8F40.FA6B006E@imagelinks.com>

> In the past these files were installed into /usr/local/lib/proj.4, but using
> the default Automake install rules data goes into /usr/local/share/proj.  

Doesn't this seem "non-standard"?  I can help take a look at it if you
need some help...let me know.

> I have also added a few more links and things to the web page.
> 

Looks good.  

Ken

-- 
Kenneth Melero				Imagelinks, Inc.
Lead Software Engineer			4450 W. Eau Gallie Blvd.
					Melbourne, FL  32934
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From jdevans at MIT.EDU  Mon Mar 27 10:22:14 2000
From: jdevans at MIT.EDU (John D. Evans)
Date: Mon, 27 Mar 2000 13:22:14 -0500
Subject: [OSRS-PROJ] PROJ 4.4.1
In-Reply-To: <38DF8B17.50F22CBA@home.com>
Message-ID: <3.0.5.32.20000327132214.0081c7d0@po14.mit.edu>

Thanks Frank, 

  ... for reviving this useful but long-dormant library.

|I have corrected problems with PROJ 4.4.0 's install logic. It wasn't
|installing the data files from proj/nad. 

Cool. While you're tinkering with the Makefiles, could you ensure that
libproj.a will link in the "missing" functions nad_init(), nad_cvt(), and
nad_free()? (It was a bit of a surprise in "PROJ classic" to read all
about them in the docs, but then have to link them in manually.)

  John Evans <jdevans at mit.edu>
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From warmerda at home.com  Mon Mar 27 10:41:35 2000
From: warmerda at home.com (Frank Warmerdam)
Date: Mon, 27 Mar 2000 13:41:35 -0500
Subject: [OSRS-PROJ] PROJ 4.4.1
References: <3.0.5.32.20000327132214.0081c7d0@po14.mit.edu>
Message-ID: <38DFAB5F.3760040A@home.com>

"John D. Evans" wrote:
> 
> Thanks Frank,
> 
>   ... for reviving this useful but long-dormant library.
> 
> |I have corrected problems with PROJ 4.4.0 's install logic. It wasn't
> |installing the data files from proj/nad.
> 
> Cool. While you're tinkering with the Makefiles, could you ensure that
> libproj.a will link in the "missing" functions nad_init(), nad_cvt(), and
> nad_free()? (It was a bit of a surprise in "PROJ classic" to read all
> about them in the docs, but then have to link them in manually.)
> 
>   John Evans <jdevans at mit.edu>

John,

I have modified the makefile so that the nad conversion stuff goes into the
main library rather than having to be separately linked in. 

The same problem exists with the geodesic calculation stuff, but I haven't
fixed that.  Does anyone use the PROJ.4 geodesic calculator?

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerda at home.com
light and sound - activate the windows | http://members.home.com/warmerda
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From martinm at six.net  Mon Mar 27 16:35:13 2000
From: martinm at six.net (Martin Manningham)
Date: Mon, 27 Mar 2000 19:35:13 -0500
Subject: [OSRS-PROJ] Interface ideas for Proj4
Message-ID: <38DFFE41.AA123915@six.net>

Hi, my name is Martin Manningham. I am mainly involved with the OGDI and
I think the PROJ.4 library is a great piece of software. I would like to
be involve someway in this project but first, here are some comments and
ideas about the library.

There is one or two problems with PROJ.4. First, this is difficult to
handle projections and datum with it, the number of possible fields is
long and without the documentation, a user is kind of lost. And how
could we know if the projection we want to use is able to translate from
and to longitude-lattitude coordinates, what are the limitations of the
projection geographically or mathematically? Also, the ability to
translate coordonates from one set to another is not obvious and the
geodetic datum handling is far from perfect.  I think this is important
to provide the most simple API to the user of a library in order to help
him build something quick and nice. We must also think to the people who
want to update this library with their own projection and datum stuff.
These things must be obvious, even without documentation!

This is why I think the best way to start with this library is to keep
the current API backward compatible, but we must create a new API, in
C++, to ease the interactions between the components. The basic object
would be a Projection object that would encapsulate the projection and
datum handling. Two possible constructors, one with the "old" Evenden
string to set the projection, one with only the projection name. Of
course, the parameters are set in object attributes. To perform a
transformation, two projections objects must be completely set and a
function will handle the transformation.

Ex 1:
    EProjection proj1("+proj=longlat");
    EProjection proj2("+proj=utm +zone=13 +ellps=clrk66");

    EProjCoord coord(-47.85,35.567,proj1);   // A coordinate is in a
certain projection
    if (!coord.convert(proj2)) {
        // An error occur...
    }

This is only an example, but it is a lot easier and obvious to
manipulate this kind of objects. In this example, I also describe the
"longlat" projection. In fact, most purist say this is not a projection,
but this is the easiest way to manipulate projections.

Ex 2:
    EProjection utm("utm");
    if (!utm.SetZone(95)) {
         // An error occur, the utm zone is too large
    }
    cout << utm.GetZone();
    cout << utm;  // Display the fields in the utm object in the Evenden
format

In this example, I try to point how the manipulation of the projection
would be a lot easier with that API.

This kind of object structure would be easier to maintain and update. It
is possible to create methods in the projection object to describe a
geographic region where the projection will be valid or less distorded
(utm zone as an example). But this last point is less obvious because in
many situations, even outside the zone, the projection change is still
valid but the distortion is not very important.

Of course, I don't think this kind of thing could be simple to implement
over the PROJ.4 library. But we could implement it first as an interface
to the current C library and then improve it. But it's only an idea, and
ideas require "eyeballs" to improve.

Regards

Martin


----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From warmerda at home.com  Mon Mar 27 20:47:45 2000
From: warmerda at home.com (Frank Warmerdam)
Date: Mon, 27 Mar 2000 23:47:45 -0500
Subject: [OSRS-PROJ] PROJ.4.4.1
Message-ID: <38E03971.EE31EE03@home.com>

Folks,

I have added installation of NADCON data files, and issued 4.4.1 tar/zip
files.  I would appreciate it if Andreas or Jan-Oliver could prepare RPMs
based on this release.  If all is well, I will put the resulting RPMs on
the ftp site as well. 

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerda at home.com
light and sound - activate the windows | http://members.home.com/warmerda
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From jan at intevation.de  Tue Mar 28 03:38:00 2000
From: jan at intevation.de (Jan-Oliver Wagner)
Date: Tue, 28 Mar 2000 13:38:00 +0200
Subject: [OSRS-PROJ] Interface ideas for Proj4
In-Reply-To: <38DFFE41.AA123915@six.net>; from martinm@six.net on Mon, Mar 27, 2000 at 07:35:13PM -0500
References: <38DFFE41.AA123915@six.net>
Message-ID: <20000328133800.A12382@cheops.usf.Uni-Osnabrueck.DE>

Dear Martin,

On Mon, Mar 27, 2000 at 07:35:13PM -0500, Martin Manningham wrote:
> the current API backward compatible, but we must create a new API, in
> C++,

your ideas about the API sound interesting. But I must say
that C++ should better not be used for the base development.
It makes sense as wrapper to include proj in your own C++
program.
It is less optimal for the base code, because proj is free software.
Frank Wamerdam currently volunteers as a maintainer, but other
people may follow. Additionally, co-authoring man power could be
be attracted. C++ is a less spoken and more complicated language
than many others. It is good for people who have a single
project done in a closed working group being involved deeply
(often the case for proprietary development).
For people jumping from software to software adding their
source code, fixing bugs it just takes time to understand the code
and hence they will spend no efford or even choose an alternativ
product.
Popular examples where C++ code has been a major problem: guppi (switching
after 1 year of desertion to C has vitalized development)
and mnemonic (which has the potential to beat netscape and msie, but
the main author seems unable to interest people to support in C++
programming).

I know that Frank Wamerdam ist one of the guys who are
very good in C++. Honestly I must say, that (though I have
done large projects in C++) I don't feel comfortable and efficient
when trying to program in C++.

Cheers

	Jan

-- 
Jan-Oliver Wagner				http://intevation.de/~jan/

Intevation GmbH				  	     http://intevation.de/
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From warmerda at home.com  Tue Mar 28 06:26:51 2000
From: warmerda at home.com (Frank Warmerdam)
Date: Tue, 28 Mar 2000 09:26:51 -0500
Subject: [OSRS-PROJ] Interface ideas for Proj4
References: <38DFFE41.AA123915@six.net>
Message-ID: <38E0C12B.FDF52EBE@home.com>


Martin,

It is great to have you involved!

Martin Manningham wrote:
> There is one or two problems with PROJ.4. First, this is difficult to
> handle projections and datum with it, the number of possible fields is
> long and without the documentation, a user is kind of lost. And how
> could we know if the projection we want to use is able to translate from
> and to longitude-lattitude coordinates, what are the limitations of the
> projection geographically or mathematically? Also, the ability to
> translate coordonates from one set to another is not obvious and the
> geodetic datum handling is far from perfect.  I think this is important
> to provide the most simple API to the user of a library in order to help
> him build something quick and nice. We must also think to the people who
> want to update this library with their own projection and datum stuff.
> These things must be obvious, even without documentation!

To the best of my knowledge the only datum support in PROJ is the NADCON
based NAD27/NAD83 conversions.  I would like to incorporate support for
7 parameter Bursa-Wolf datum transformations, and perhaps introduce a 
support file associating "datum names" with translation coefficients.  
This could be populated from the EPSG database, and then perhaps augmented
from other sources.

I have already done some work to this end in my higher level "OGR" 
spatial reference code.  If it works and there is broad interest I could
incorporate it into PROJ. 

On the point of projection documentation, Martin is right that it is hard
to get the information to formulate projections.  The PostScript documents
written by Gerald are good, but even when you browse them them, it is often
hard to figure out what "implied" parameters are available for whole families
of projections.  I have done some work in creating a catalog of projections
on the GeoTIFF web site, and included with these a "PROJ.4 formulation" 
as well as relating them to GeoTIFF, EPSG and OpenGIS Well Known Text.  This
is available at:

  http://www.remotesensing.org/geotiff/proj_list/index.html

About half a year ago I spoke to Gerald Evenden about getting the LaTeX
source for his papers, but it seems his methodology for handling all the
figures was involved, and that the documents are not easily processed 
elsewhere.  I think I will approach him again about getting at least the 
.tex files. 

I suppose it is also hard to work out areas of applicability for projections
though this isn't something I had thought to address.
 
> This is why I think the best way to start with this library is to keep
> the current API backward compatible, but we must create a new API, in
> C++, to ease the interactions between the components. The basic object
> would be a Projection object that would encapsulate the projection and
> datum handling. Two possible constructors, one with the "old" Evenden
> string to set the projection, one with only the projection name. Of
> course, the parameters are set in object attributes. To perform a
> transformation, two projections objects must be completely set and a
> function will handle the transformation.
> 
> Ex 1:
>     EProjection proj1("+proj=longlat");
>     EProjection proj2("+proj=utm +zone=13 +ellps=clrk66");
> 
>     EProjCoord coord(-47.85,35.567,proj1);   // A coordinate is in a
> certain projection
>     if (!coord.convert(proj2)) {
>         // An error occur...
>     }
>
> This is only an example, but it is a lot easier and obvious to
> manipulate this kind of objects. In this example, I also describe the
> "longlat" projection. In fact, most purist say this is not a projection,
> but this is the easiest way to manipulate projections.
> 
> Ex 2:
>     EProjection utm("utm");
>     if (!utm.SetZone(95)) {
>          // An error occur, the utm zone is too large
>     }
>     cout << utm.GetZone();
>     cout << utm;  // Display the fields in the utm object in the Evenden
> format
> 
> In this example, I try to point how the manipulation of the projection
> would be a lot easier with that API.
> 
> This kind of object structure would be easier to maintain and update. It
> is possible to create methods in the projection object to describe a
> geographic region where the projection will be valid or less distorded
> (utm zone as an example). But this last point is less obvious because in
> many situations, even outside the zone, the projection change is still
> valid but the distortion is not very important.
> 
> Of course, I don't think this kind of thing could be simple to implement
> over the PROJ.4 library. But we could implement it first as an interface
> to the current C library and then improve it. But it's only an idea, and
> ideas require "eyeballs" to improve.

The general idea is good.  For various projects of my own I have been working
on OpenGIS inspired C++ classes for coordinate system handling.  Some 
documentation of these can be found at:

http://gdal.velocet.ca/projects/opengis/ogrhtml/class_ogrspatialreference.html
http://gdal.velocet.ca/projects/opengis/ogrhtml/osr_tutorial.html

In this case my normative description for projections is OpenGIS Well Known
Text format, but internally I convert to PROJ.4 string representation in order
to have the projection work done by PROJ.4.  The class includes methods to
initialize projections from EPSG databases, well known text or to setup by
a number of method calls on the object. 

While use it's quite as convenient as Martin described above, the idea is
similar, and it could be fine tuned somewhat. 

However, I am somewhat concerned about adopting a radical new C++ API for
PROJ.4.  As Jan points out, C++ can be off putting for some developers.  I 
have seen projects where extensive use of STL (the Standard Template Library),
overloading, multiple inheritance and other esoteric C++ features made 
particpation by more mundane programmers such as myself quite difficult.  
Furthermore, use of cutting edge features carries a cost in portability, and
any use of C++ will generally lead to difficulties in exporting the API from
a shared library or DLL to other applications due to complex, and ever changing
name mangling schemes. 

On the other hand, I am currently working on a project mostly written in C
and using Gtk.  Gtk implements object semantics in C and in my opinion it is
a bloody mess.  Stuff that would be so natural in C++ is a mess of macros and
casting in C. 

The C/C++ issue aside, I think we should also consider how much we want to 
step away from the existing PROJ.4 methodology.  My suggestion is:

 o We incorporate datum shifting and "projection dictionary lookup" into the
   existing PROJ.4 C API. 

 o We work on the OGRSpatialReference and OGRCoordinateTransformation C++ 
   classes as a higher level API hosted on top of PROJ.4.  I could even 
   separate them out of their current source tree, and have them be distributed
   with PROJ.4 if that is deemed to be desirable.

Alternatively we could develop a C API that does approximately what Martin
suggests,
but without C++. 

I would also caution against setting ourselves goals that are too ambitious. 
Putting out a PROJ.4 release with broader datum support, and improved online
documentation would be a good first project.  

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerda at home.com
light and sound - activate the windows | http://members.home.com/warmerda
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From jan at intevation.de  Tue Mar 28 08:08:06 2000
From: jan at intevation.de (Jan-Oliver Wagner)
Date: Tue, 28 Mar 2000 18:08:06 +0200
Subject: [OSRS-PROJ] RPM package
Message-ID: <20000328180806.A15954@cheops.usf.Uni-Osnabrueck.DE>

Dear all,

I have provided Frank with a RPM package of
proj 4.4.1 which I prepared for the FreeGIS CD.

Frank pointed out the naming problem of my package.
Is the name of this software PROJ.4 or
PROJ or just proj. I propose the latter.

When I prepared the first package, I downloaded
everything from the previous homepage and I was
not able to find the exact name and version definition.
Frank uses now proj-n.n.n which is most convenient.

Perhaps we should agree on a name to avoid future irritation.

Cheers

	Jan

-- 
Jan-Oliver Wagner				http://intevation.de/~jan/

Intevation GmbH				  	     http://intevation.de/
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From gevenden at capecod.net  Tue Mar 28 08:04:51 2000
From: gevenden at capecod.net (Gerald I. Evenden)
Date: Tue, 28 Mar 2000 11:04:51 -0500
Subject: [OSRS-PROJ] pdf for PROJ.4 documentation
Message-ID: <005001bf98cf$5e12b600$57bad33f@gevenden>

It is important to note that only one of the 3 manuals for the PROJ.4 system
has been converted to pdf format: the original open-file report.  This OF
documentation reflects PROJ.3 use and does not document the
features and some minor changes in PROJ.4.  The user must get the
two "Interim" reports (PROJ.4.3.I2.ps.gz & PROJ.4.3.ps.gz) to have
complete documentation.  There is also the SWISS report but it is of
interest only to a single coordinate system.

Hopefully, someone will put these into pdf format sometime in the
near future.

Jerry Evenden and the low riders: Katie and Daisy-Mae
gevenden at capecod.net  http://www.capecod.net/~gevenden
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20000328/54d3e177/attachment.html>

From warmerda at home.com  Tue Mar 28 08:31:49 2000
From: warmerda at home.com (Frank Warmerdam)
Date: Tue, 28 Mar 2000 11:31:49 -0500
Subject: [OSRS-PROJ] pdf for PROJ.4 documentation
References: <005001bf98cf$5e12b600$57bad33f@gevenden>
Message-ID: <38E0DE75.510E39AB@home.com>

> "Gerald I. Evenden" wrote:
> 
> It is important to note that only one of the 3 manuals for the PROJ.4 system
> has been converted to pdf format: the original open-file report.  This OF
> documentation reflects PROJ.3 use and does not document the
> features and some minor changes in PROJ.4.  The user must get the
> two "Interim" reports (PROJ.4.3.I2.ps.gz & PROJ.4.3.ps.gz) to have
> complete documentation.  There is also the SWISS report but it is of
> interest only to a single coordinate system.
> 
> Hopefully, someone will put these into pdf format sometime in the
> near future.

Gerald,

I have converted each of the files to pdf and updated the web page to point
to them, with an explanation that OF90-284 dates from version 3. 

It's great to have you with us!

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerda at home.com
light and sound - activate the windows | http://members.home.com/warmerda
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From bfraser at geoanalytic.com  Tue Mar 28 11:14:00 2000
From: bfraser at geoanalytic.com (Brent Fraser)
Date: Tue, 28 Mar 2000 12:14:00 -0700
Subject: [OSRS-PROJ] datum transformations
Message-ID: <00d201bf98e9$c6aa1360$390002c0@servo>

Frank (and others),

  I've noticed that Proj4 seems to do NAD 27 / 84 datum
conversions, but I'm still a little lost on how to specify
the parameters on the command line, or drive Proj4 using
the function calls to do the datum conversion.

  I've looked thru the Proj4 doc and the ShapeLib contrib 
doc at the info there is on using Proj4 to do datum conversion.

  Is there any additional datum conversion info specific to Proj4?

Thanks!
Brent Fraser
bfraser at geoanalytic.com 
GeoAnalytic Inc.
#300 , 700 - 4th Avenue SW Calgary, AB T2P 3J4
Tel:  (403)213-2700 Fax:  (403)213-2707
www.geoanalytic.com


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20000328/50cdd6eb/attachment.html>

From gevenden at capecod.net  Tue Mar 28 11:47:32 2000
From: gevenden at capecod.net (Gerald I. Evenden)
Date: Tue, 28 Mar 2000 14:47:32 -0500
Subject: [OSRS-PROJ] datum transformations
Message-ID: <001701bf98ee$fa2f3760$4ebad33f@gevenden>

Program 'proj' doesn't know anything about datums.  The program that
does 84/83 datums for the US is 'nad2nad'.  Execution of nad2nad
is discussed in the (first) interim report.

Jerry Evenden and the low riders: Katie and Daisy-Mae
gevenden at capecod.net  http://www.capecod.net/~gevenden
    -----Original Message-----
    From: Brent Fraser <bfraser at geoanalytic.com>
    To: Proj4 List <osrs-proj at remotesensing.org>
    Date: Tuesday, March 28, 2000 2:11 PM
    Subject: [OSRS-PROJ] datum transformations
    
    
    Frank (and others),
    
      I've noticed that Proj4 seems to do NAD 27 / 84 datum
    conversions, but I'm still a little lost on how to specify
    the parameters on the command line, or drive Proj4 using
    the function calls to do the datum conversion.
    
      I've looked thru the Proj4 doc and the ShapeLib contrib 
    doc at the info there is on using Proj4 to do datum conversion.
    
      Is there any additional datum conversion info specific to Proj4?
     
    Thanks!
    Brent Fraser
    bfraser at geoanalytic.com 
    GeoAnalytic Inc.
    #300 , 700 - 4th Avenue SW Calgary, AB T2P 3J4
    Tel:  (403)213-2700 Fax:  (403)213-2707
    www.geoanalytic.com
    
     
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20000328/f1bbb60d/attachment.html>

From martinm at six.net  Tue Mar 28 15:35:36 2000
From: martinm at six.net (Martin Manningham)
Date: Tue, 28 Mar 2000 18:35:36 -0500
Subject: [OSRS-PROJ] Interface ideas for Proj4
References: <38DFFE41.AA123915@six.net> <38E0C12B.FDF52EBE@home.com>
Message-ID: <38E141C8.B520A29B@six.net>



Frank Warmerdam wrote:

> Martin,
>
> It is great to have you involved!
>
> Martin Manningham wrote:
> > There is one or two problems with PROJ.4. First, this is difficult to
> > handle projections and datum with it, the number of possible fields is
> > long and without the documentation, a user is kind of lost. And how
> > could we know if the projection we want to use is able to translate from
> > and to longitude-lattitude coordinates, what are the limitations of the
> > projection geographically or mathematically? Also, the ability to
> > translate coordonates from one set to another is not obvious and the
> > geodetic datum handling is far from perfect.  I think this is important
> > to provide the most simple API to the user of a library in order to help
> > him build something quick and nice. We must also think to the people who
> > want to update this library with their own projection and datum stuff.
> > These things must be obvious, even without documentation!
>
> To the best of my knowledge the only datum support in PROJ is the NADCON
> based NAD27/NAD83 conversions.  I would like to incorporate support for
> 7 parameter Bursa-Wolf datum transformations, and perhaps introduce a
> support file associating "datum names" with translation coefficients.
> This could be populated from the EPSG database, and then perhaps augmented
> from other sources.
>
> I have already done some work to this end in my higher level "OGR"
> spatial reference code.  If it works and there is broad interest I could
> incorporate it into PROJ.
>

Great, I am sure that will improve the library. Will it be new API functions?


>
> On the point of projection documentation, Martin is right that it is hard
> to get the information to formulate projections.  The PostScript documents
> written by Gerald are good, but even when you browse them them, it is often
> hard to figure out what "implied" parameters are available for whole families
> of projections.  I have done some work in creating a catalog of projections
> on the GeoTIFF web site, and included with these a "PROJ.4 formulation"
> as well as relating them to GeoTIFF, EPSG and OpenGIS Well Known Text.  This
> is available at:
>
>   http://www.remotesensing.org/geotiff/proj_list/index.html
>
> About half a year ago I spoke to Gerald Evenden about getting the LaTeX
> source for his papers, but it seems his methodology for handling all the
> figures was involved, and that the documents are not easily processed
> elsewhere.  I think I will approach him again about getting at least the
> .tex files.
>
> I suppose it is also hard to work out areas of applicability for projections
> though this isn't something I had thought to address.
>
> > This is why I think the best way to start with this library is to keep
> > the current API backward compatible, but we must create a new API, in
> > C++, to ease the interactions between the components. The basic object
> > would be a Projection object that would encapsulate the projection and
> > datum handling. Two possible constructors, one with the "old" Evenden
> > string to set the projection, one with only the projection name. Of
> > course, the parameters are set in object attributes. To perform a
> > transformation, two projections objects must be completely set and a
> > function will handle the transformation.
> >
> > Ex 1:
> >     EProjection proj1("+proj=longlat");
> >     EProjection proj2("+proj=utm +zone=13 +ellps=clrk66");
> >
> >     EProjCoord coord(-47.85,35.567,proj1);   // A coordinate is in a
> > certain projection
> >     if (!coord.convert(proj2)) {
> >         // An error occur...
> >     }
> >
> > This is only an example, but it is a lot easier and obvious to
> > manipulate this kind of objects. In this example, I also describe the
> > "longlat" projection. In fact, most purist say this is not a projection,
> > but this is the easiest way to manipulate projections.
> >
> > Ex 2:
> >     EProjection utm("utm");
> >     if (!utm.SetZone(95)) {
> >          // An error occur, the utm zone is too large
> >     }
> >     cout << utm.GetZone();
> >     cout << utm;  // Display the fields in the utm object in the Evenden
> > format
> >
> > In this example, I try to point how the manipulation of the projection
> > would be a lot easier with that API.
> >
> > This kind of object structure would be easier to maintain and update. It
> > is possible to create methods in the projection object to describe a
> > geographic region where the projection will be valid or less distorded
> > (utm zone as an example). But this last point is less obvious because in
> > many situations, even outside the zone, the projection change is still
> > valid but the distortion is not very important.
> >
> > Of course, I don't think this kind of thing could be simple to implement
> > over the PROJ.4 library. But we could implement it first as an interface
> > to the current C library and then improve it. But it's only an idea, and
> > ideas require "eyeballs" to improve.
>
> The general idea is good.  For various projects of my own I have been working
> on OpenGIS inspired C++ classes for coordinate system handling.  Some
> documentation of these can be found at:
>
> http://gdal.velocet.ca/projects/opengis/ogrhtml/class_ogrspatialreference.html
> http://gdal.velocet.ca/projects/opengis/ogrhtml/osr_tutorial.html
>
> In this case my normative description for projections is OpenGIS Well Known
> Text format, but internally I convert to PROJ.4 string representation in order
> to have the projection work done by PROJ.4.  The class includes methods to
> initialize projections from EPSG databases, well known text or to setup by
> a number of method calls on the object.
>
> While use it's quite as convenient as Martin described above, the idea is
> similar, and it could be fine tuned somewhat.
>
> However, I am somewhat concerned about adopting a radical new C++ API for
> PROJ.4.  As Jan points out, C++ can be off putting for some developers.  I
> have seen projects where extensive use of STL (the Standard Template Library),
> overloading, multiple inheritance and other esoteric C++ features made
> particpation by more mundane programmers such as myself quite difficult.
> Furthermore, use of cutting edge features carries a cost in portability, and
> any use of C++ will generally lead to difficulties in exporting the API from
> a shared library or DLL to other applications due to complex, and ever changing
> name mangling schemes.
>
> On the other hand, I am currently working on a project mostly written in C
> and using Gtk.  Gtk implements object semantics in C and in my opinion it is
> a bloody mess.  Stuff that would be so natural in C++ is a mess of macros and
> casting in C.
>
> The C/C++ issue aside, I think we should also consider how much we want to
> step away from the existing PROJ.4 methodology.  My suggestion is:
>
>  o We incorporate datum shifting and "projection dictionary lookup" into the
>    existing PROJ.4 C API.
>
>  o We work on the OGRSpatialReference and OGRCoordinateTransformation C++
>    classes as a higher level API hosted on top of PROJ.4.  I could even
>    separate them out of their current source tree, and have them be distributed
>    with PROJ.4 if that is deemed to be desirable.
>
> Alternatively we could develop a C API that does approximately what Martin
> suggests,
> but without C++.
>
> I would also caution against setting ourselves goals that are too ambitious.
> Putting out a PROJ.4 release with broader datum support, and improved online
> documentation would be a good first project.
>
> Best regards,

Sound ok for me. Good plan.

Martin

----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From martinm at six.net  Tue Mar 28 15:37:13 2000
From: martinm at six.net (Martin Manningham)
Date: Tue, 28 Mar 2000 18:37:13 -0500
Subject: [OSRS-PROJ] Interface ideas for Proj4
References: <38DFFE41.AA123915@six.net> <20000328133800.A12382@cheops.usf.Uni-Osnabrueck.DE>
Message-ID: <38E14229.B62F93DA@six.net>



Jan-Oliver Wagner wrote:

> Dear Martin,
>
> On Mon, Mar 27, 2000 at 07:35:13PM -0500, Martin Manningham wrote:
> > the current API backward compatible, but we must create a new API, in
> > C++,
>
> your ideas about the API sound interesting. But I must say
> that C++ should better not be used for the base development.
> It makes sense as wrapper to include proj in your own C++
> program.
> It is less optimal for the base code, because proj is free software.
> Frank Wamerdam currently volunteers as a maintainer, but other
> people may follow. Additionally, co-authoring man power could be
> be attracted. C++ is a less spoken and more complicated language
> than many others. It is good for people who have a single
> project done in a closed working group being involved deeply
> (often the case for proprietary development).
> For people jumping from software to software adding their
> source code, fixing bugs it just takes time to understand the code
> and hence they will spend no efford or even choose an alternativ
> product.
> Popular examples where C++ code has been a major problem: guppi (switching
> after 1 year of desertion to C has vitalized development)
> and mnemonic (which has the potential to beat netscape and msie, but
> the main author seems unable to interest people to support in C++
> programming).
>
> I know that Frank Wamerdam ist one of the guys who are
> very good in C++. Honestly I must say, that (though I have
> done large projects in C++) I don't feel comfortable and efficient
> when trying to program in C++.
>
> Cheers
>
>         Jan
>
>

I understand your concerns about the use of C++ in this kind of project,
and your comments and experiences are helpful. However, the main
advantage of object oriented projects is flexibility and is easily
updatable, things that are somewhat a lot more difficult to do if the
project was written in C. As an example, how could you expect to easily
add a datum management in the API without adding more and more
functions?

This is a common problem with well design systems, the first version get
a very simple and easy interface. But, with time, new functionalities
must be implemented and things are getting more and more complex. In the
end, if this evolution is badly managed, the system become a complete
spagetti. Of course, PROJ4 is far from that, but many commercial
applications follow this bad trend.

Regards

Martin
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From warmerda at home.com  Wed Mar 29 06:15:18 2000
From: warmerda at home.com (Frank Warmerdam)
Date: Wed, 29 Mar 2000 09:15:18 -0500
Subject: [OSRS-PROJ] invproj / invgeod
Message-ID: <38E20FF6.710D7D60@home.com>

Folks,

I still forgot one fix yesterday.  I have added install logic to make hardlinks
from invproj to proj and invgeod to geod to the makefiles in CVS.  This should
appear in 4.4.2 eventually.

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerda at home.com
light and sound - activate the windows | http://members.home.com/warmerda
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From gevenden at capecod.net  Wed Mar 29 11:21:05 2000
From: gevenden at capecod.net (Gerald I. Evenden)
Date: Wed, 29 Mar 2000 14:21:05 -0500
Subject: [OSRS-PROJ] Interface ideas for Proj4
Message-ID: <004101bf99b4$06c1f240$98bdd33f@gevenden>

Sorry, I'm jumping into an ongoing discussion so I may be
a little out of context but I felt I needed to add some
material.  See below.

Jerry Evenden and the low riders: Katie and Daisy-Mae
gevenden at capecod.net  http://www.capecod.net/~gevenden
-----Original Message-----
From: Martin Manningham <martinm at six.net>
To: osrs-proj at remotesensing.org <osrs-proj at remotesensing.org>
Date: Tuesday, March 28, 2000 6:28 PM
Subject: Re: [OSRS-PROJ] Interface ideas for Proj4


>Frank Warmerdam wrote:
>
>> Martin,
>>
>> It is great to have you involved!
>>
>> Martin Manningham wrote:
>> > There is one or two problems with PROJ.4. First, this is difficult to
>> > handle projections and datum with it, the number of possible fields is
>> > long and without the documentation, a user is kind of lost. And how
>> > could we know if the projection we want to use is able to translate
from
>> > and to longitude-lattitude coordinates, what are the limitations of the
>> > projection geographically or mathematically?

Oh boy!  This is part of the reason I added the -V option---to allow the
user to examine some of the details of transformation such as scale
factor and other distortions.  In general, knowing the proper use
and limits of a cartographic projection requires looking at the literature,
consulting with a guru and/or projection experience.

>> >                        Also, the ability to
>> > translate coordonates from one set to another is not obvious and the
>> > geodetic datum handling is far from perfect.  I think this is important
>> > to provide the most simple API to the user of a library in order to
help
>> > him build something quick and nice. We must also think to the people
who
>> > want to update this library with their own projection and datum stuff.
>> > These things must be obvious, even without documentation!


Personally, I can't program without documentation.  If I want to use some
function or construct that I don't normally employ, I have to get the book
and do a little studying.  And that's with a subject I am active with.
With an occassional operation, as suggested above, I would not think of
not having documentation for referral.

Doesn't "quick and nice" mean "sloppy and error prone."

I also do not
know what you mean by "their own projection."  Are you saying their
own parameters for a particular projection or their own mathematical
definition of a projection?  Or both?

>> To the best of my knowledge the only datum support in PROJ is the NADCON
>> based NAD27/NAD83 conversions.  I would like to incorporate support for
>> 7 parameter Bursa-Wolf datum transformations, and perhaps introduce a
>> support file associating "datum names" with translation coefficients.
>> This could be populated from the EPSG database, and then perhaps
augmented
>> from other sources.


PROJ.x was never designed to be a datum
system.  The NAD material added was because of the parochial interests
of the USGS and represented an example of how the PROJ.4 library
could be used in a simple US datum conversion program.  Non-US datums
and other coversion methods were not considered especially because
the author (me) did not have access to reliable sources of information
regarding foreign conversions (particularly the constants associated
with them).  I get a little nervious when I hear PROJ.4 being considered
a datum conversion system.
    ...
>> On the point of projection documentation, Martin is right that it is hard
>> to get the information to formulate projections.  The PostScript
documents
>> written by Gerald are good, but even when you browse them them, it is
often
>> hard to figure out what "implied" parameters are available for whole
families
>> of projections.

I wish I knew what you meant here.
    ...
>> About half a year ago I spoke to Gerald Evenden about getting the LaTeX
>> source for his papers, but it seems his methodology for handling all the
>> figures was involved, and that the documents are not easily processed
>> elsewhere.  I think I will approach him again about getting at least the
>> .tex files.

I don't understand to what end.
>>
>> I suppose it is also hard to work out areas of applicability for
projections
>> though this isn't something I had thought to address.


I'm foggy as what you're driving at also. ;-)
    ...
>> > This is only an example, but it is a lot easier and obvious to
>> > manipulate this kind of objects. In this example, I also describe the
>> > "longlat" projection. In fact, most purist say this is not a
projection,
>> > but this is the easiest way to manipulate projections.

I presume you're talking about the Equirectangular.  It is certainly a
simple projection, but a projection none the less.  I don't see how it
"manipulates" projections.??

>> >

    ...

I'm skipping the rest of the stuff as it is for C++ programmers and
far, far too inscrutable for this humble C programmer.

With my historical interest in the PROJ.4 system, I can't help but
have some distress about the binding of datum conversions with the
package.  For me, datums are the property of the geodesists and
have nothing to do with cartographic projections other than providing
the data for the elliptical constants employed.

Lastly, I don't want to get into any brouhaha about anything. I just
contributing my observations.

----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From martinm at six.net  Wed Mar 29 16:03:30 2000
From: martinm at six.net (Martin Manningham)
Date: Wed, 29 Mar 2000 19:03:30 -0500
Subject: [OSRS-PROJ] Interface ideas for Proj4
References: <004101bf99b4$06c1f240$98bdd33f@gevenden>
Message-ID: <38E299D2.7B70A653@six.net>

"Gerald I. Evenden" wrote:

> Sorry, I'm jumping into an ongoing discussion so I may be
> a little out of context but I felt I needed to add some
> material.  See below.
>
> Jerry Evenden and the low riders: Katie and Daisy-Mae
> gevenden at capecod.net  http://www.capecod.net/~gevenden
> -----Original Message-----
> From: Martin Manningham <martinm at six.net>
> To: osrs-proj at remotesensing.org <osrs-proj at remotesensing.org>
> Date: Tuesday, March 28, 2000 6:28 PM
> Subject: Re: [OSRS-PROJ] Interface ideas for Proj4
>
> >Frank Warmerdam wrote:
> >
> >> Martin,
> >>
> >> It is great to have you involved!
> >>
> >> Martin Manningham wrote:
> >> > There is one or two problems with PROJ.4. First, this is difficult to
> >> > handle projections and datum with it, the number of possible fields is
> >> > long and without the documentation, a user is kind of lost. And how
> >> > could we know if the projection we want to use is able to translate
> from
> >> > and to longitude-lattitude coordinates, what are the limitations of the
> >> > projection geographically or mathematically?
>
> Oh boy!  This is part of the reason I added the -V option---to allow the
> user to examine some of the details of transformation such as scale
> factor and other distortions.  In general, knowing the proper use
> and limits of a cartographic projection requires looking at the literature,
> consulting with a guru and/or projection experience.
>
> >> >                        Also, the ability to
> >> > translate coordonates from one set to another is not obvious and the
> >> > geodetic datum handling is far from perfect.  I think this is important
> >> > to provide the most simple API to the user of a library in order to
> help
> >> > him build something quick and nice. We must also think to the people
> who
> >> > want to update this library with their own projection and datum stuff.
> >> > These things must be obvious, even without documentation!
>
> Personally, I can't program without documentation.  If I want to use some
> function or construct that I don't normally employ, I have to get the book
> and do a little studying.  And that's with a subject I am active with.
> With an occassional operation, as suggested above, I would not think of
> not having documentation for referral.
>
> Doesn't "quick and nice" mean "sloppy and error prone."
>
> I also do not
> know what you mean by "their own projection."  Are you saying their
> own parameters for a particular projection or their own mathematical
> definition of a projection?  Or both?
>
> >> To the best of my knowledge the only datum support in PROJ is the NADCON
> >> based NAD27/NAD83 conversions.  I would like to incorporate support for
> >> 7 parameter Bursa-Wolf datum transformations, and perhaps introduce a
> >> support file associating "datum names" with translation coefficients.
> >> This could be populated from the EPSG database, and then perhaps
> augmented
> >> from other sources.
>
> PROJ.x was never designed to be a datum
> system.  The NAD material added was because of the parochial interests
> of the USGS and represented an example of how the PROJ.4 library
> could be used in a simple US datum conversion program.  Non-US datums
> and other coversion methods were not considered especially because
> the author (me) did not have access to reliable sources of information
> regarding foreign conversions (particularly the constants associated
> with them).  I get a little nervious when I hear PROJ.4 being considered
> a datum conversion system.
>     ...
> >> On the point of projection documentation, Martin is right that it is hard
> >> to get the information to formulate projections.  The PostScript
> documents
> >> written by Gerald are good, but even when you browse them them, it is
> often
> >> hard to figure out what "implied" parameters are available for whole
> families
> >> of projections.
>
> I wish I knew what you meant here.
>     ...
> >> About half a year ago I spoke to Gerald Evenden about getting the LaTeX
> >> source for his papers, but it seems his methodology for handling all the
> >> figures was involved, and that the documents are not easily processed
> >> elsewhere.  I think I will approach him again about getting at least the
> >> .tex files.
>
> I don't understand to what end.
> >>
> >> I suppose it is also hard to work out areas of applicability for
> projections
> >> though this isn't something I had thought to address.
>
> I'm foggy as what you're driving at also. ;-)
>     ...
> >> > This is only an example, but it is a lot easier and obvious to
> >> > manipulate this kind of objects. In this example, I also describe the
> >> > "longlat" projection. In fact, most purist say this is not a
> projection,
> >> > but this is the easiest way to manipulate projections.
>
> I presume you're talking about the Equirectangular.  It is certainly a
> simple projection, but a projection none the less.  I don't see how it
> "manipulates" projections.??
>
> >> >
>
>     ...
>
> I'm skipping the rest of the stuff as it is for C++ programmers and
> far, far too inscrutable for this humble C programmer.
>
> With my historical interest in the PROJ.4 system, I can't help but
> have some distress about the binding of datum conversions with the
> package.  For me, datums are the property of the geodesists and
> have nothing to do with cartographic projections other than providing
> the data for the elliptical constants employed.
>
> Lastly, I don't want to get into any brouhaha about anything. I just
> contributing my observations.
>
> ----------------------------------------
> OSRS PRoject PROJ Discussion List
> To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
> To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
> To Report Problems: send a message to owner-osrs-proj at remotesensing.org

This is quite interesting to read this kind of view of what must be projection transformation. And I think
you got a point about the mixing of projection change and datum handling in this library.

The main problem with datum is many organisations want so much precision in the coordinates handling they
even consider the continental shift in the calculations of a map. Many people in the discussion are
handling both domains (datums and projections) and some of them think there should be a way to merge these
two concepts. I don't pretend to have the perfect solution to that problem, but of what I heard in that
discussion is these concepts must be fused outside PROJ.4 (if they had to be fused), maybe in C++ but
certainly with a more global vision of the differents interests involved.

But your concerns are more than important and serious thinking must be done before going too far in the
idea. And you are right about the "brouhaha", a lot of different conceptions of how the library from many
differents kind of users in differents kind of fields using this library are discussing here. And also my
english is far from perfect, I have to apologise about that.

Regards

Martin Manningham



----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From brownrig at erg.sri.com  Thu Mar 30 07:40:49 2000
From: brownrig at erg.sri.com (Rick Brownrigg)
Date: Thu, 30 Mar 2000 09:40:49 -0600
Subject: [OSRS-PROJ] C++ friendly header file?
Message-ID: <38E37581.91AAE995@erg.sri.com>

I've used this library for years, and its great to see renewed interest
in it.

As I typically use C++, I've found that I have problems linking my
code.  My quick-N-dirty solution is to patch the "projects.h" header
file, surround everything by

    #ifdef __cplusplus
        #extern "C" {
    endif
    ...
    #ifdef __cplusplus
        }
    #endif

directives.  This is easy enough to do, but I inevitably forget for new
installations.  There may also be a cleaner approach, and I admit I
haven't investigated thoroughly.

Anyone else see this?  Have better solutions?  More to the point, could
we get whatever prefered solution incorporated into the next release?

Thanks

Rick Brownrigg



----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From warmerda at home.com  Thu Mar 30 10:11:17 2000
From: warmerda at home.com (Frank Warmerdam)
Date: Thu, 30 Mar 2000 13:11:17 -0500
Subject: [OSRS-PROJ] C++ friendly header file?
References: <38E37581.91AAE995@erg.sri.com>
Message-ID: <38E398C5.DE35F7B@home.com>

Rick Brownrigg wrote:
> 
> I've used this library for years, and its great to see renewed interest
> in it.
> 
> As I typically use C++, I've found that I have problems linking my
> code.  My quick-N-dirty solution is to patch the "projects.h" header
> file, surround everything by
> 
>     #ifdef __cplusplus
>         #extern "C" {
>     endif
>     ...
>     #ifdef __cplusplus
>         }
>     #endif
> 
> directives.  This is easy enough to do, but I inevitably forget for new
> installations.  There may also be a cleaner approach, and I admit I
> haven't investigated thoroughly.
> 
> Anyone else see this?  Have better solutions?  More to the point, could
> we get whatever prefered solution incorporated into the next release?

Rick,

Excellent idea. I have applied this to projects.h and geodesic.h in CVS.
This is the standard way I handle C linkage header files I want to be compatible
with C++.  

Note that it's "extern "C" {" not "#extern "C" {".

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerda at home.com
light and sound - activate the windows | http://members.home.com/warmerda
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


From pdjensen at agileimage.com  Thu Mar 30 08:45:52 2000
From: pdjensen at agileimage.com (Paul Jensen)
Date: Thu, 30 Mar 2000 09:45:52 -0700
Subject: [OSRS-PROJ] C++ friendly header file?
References: <38E37581.91AAE995@erg.sri.com>
Message-ID: <38E384C0.5ED7C774@agileimage.com>

I've written a C++ wrapper around Proj4 for my own use and simply put the extern
"C" { ... } code in the wrapper header file around my #include "projects.h".

I also have a few bug fixes that I fed back to Gerald Evenden a long time ago,
but I'll try and do some checking against the current base when I get time.

It's been a very robust library, even in multi-threaded applications. Thanks,
Gerald!

	Paul


Rick Brownrigg wrote:

> As I typically use C++, I've found that I have problems linking my
> code.  My quick-N-dirty solution is to patch the "projects.h" header
> file, surround everything by
> 
>     #ifdef __cplusplus
>         #extern "C" {
>     endif
>     ...
>     #ifdef __cplusplus
>         }
>     #endif
> 
> directives.  This is easy enough to do, but I inevitably forget for new
> installations.  There may also be a cleaner approach, and I admit I
> haven't investigated thoroughly.
> 
> Anyone else see this?  Have better solutions?  More to the point, could
> we get whatever prefered solution incorporated into the next release?

-- 
Paul Jensen	Agile Image Movers	http://agileimage.com
----------------------------------------
OSRS PRoject PROJ Discussion List
To Subscribe: send a message to majordomo at remotesensing.org with 'subscribe osrs-proj' in the body
To Unsubscribe: send a message to majordomo at remotesensing.org with 'unsubscribe osrs-proj' in the body
To Report Problems: send a message to owner-osrs-proj at remotesensing.org


