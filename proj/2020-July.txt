From even.rouault at spatialys.com  Wed Jul  1 02:29:43 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 11:29:43 +0200
Subject: [PROJ] Motion: promote PROJ 7.1.0RC2 to final
In-Reply-To: <1849791.TEsbmNJyXB@even-i700>
References: <1849791.TEsbmNJyXB@even-i700>
Message-ID: <2839802.WgCzf0dgxc@even-i700>

On lundi 29 juin 2020 11:37:16 CEST Even Rouault wrote:
> Hi,
> 
> Motion: promote PROJ 7.1.0RC2 to final 7.1.0

I declare this motion passed with +1 from PSC members HowardB, 
KristianE, ThomasK, CharlesK and myself

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/a345ecf0/attachment.html>

From even.rouault at spatialys.com  Wed Jul  1 05:32:40 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 14:32:40 +0200
Subject: [PROJ] RFC-6: Triangulation-based transformations
Message-ID: <6157144.WjvqYgzIvM@even-i700>

Hi,

For your consideration, a RFC that deals with triangulation-based transformations:
https://github.com/OSGeo/PROJ/pull/2283

More user friendly display of it at:
https://github.com/rouault/PROJ/blob/rfc6_text/docs/source/community/rfc/rfc-6.rst

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/ae852691/attachment.html>

From even.rouault at spatialys.com  Wed Jul  1 05:55:00 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 14:55:00 +0200
Subject: [PROJ] PROJ 7.1.0 and PROJ-data 1.1.0
Message-ID: <3122829.p95KIm86ne@even-i700>

Hi,

On behalf of the PROJ development team I am happy to announce the release
of PROJ 7.1.0 and PROJ-data 1.1.0. They offer both backward compatible feature 
improvements and bug fixes over PROJ 7.0.x and PROJ-data 1.0.0

See release notes below for details. Download the source distributions here: 

https://download.osgeo.org/proj/proj-7.1.0.tar.gz
(md5: https://download.osgeo.org/proj/proj-7.1.0.tar.gz.md5) 
https://download.osgeo.org/proj/proj-7.1.0.zip
(md5: https://download.osgeo.org/proj/proj-7.1.0.zip.md5)

https://download.osgeo.org//proj/proj-data-1.1.tar.gz
https://download.osgeo.org//proj/proj-data-1.1.zip

7.1.0 Release Notes
-------------------

 Updates
 -------

  + New projections:

    o Add square conformal projections from libproject:
      - Adams Hemisphere in a Square
      - Adams World in a Square I
      - Adams World in a Square II
      - Guyou
      - Pierce Quincuncial
      (#2148)

    o Adams Square II: map ESRI WKT to PROJ string, and implement iterative
      inverse method (#2157)

    o Added IGH Oceanic View projection (#2226)

    o Add wink2 inverse by generic inversion of forward method (#2243)

  + Database:

    o Update to EPSG 9.8.12, ESRI 10.8.1 and import scope and remarks for
      conversion (#2238) (#2267)

    o Map the Behrman projection to cae when converting ESRI CRSes (#1986)

    o Support conversion of Flat_Polar_Quartic projection method (#1987)

    o Register 4 new Austrian height grids (see https://github.com/OSGeo/PROJ-data/pull/13)
      and handle 'Vertical Offset by Grid Interpolation (BEV AT)' method (#1989)

    o Add ESRI projection method mappings for Mercator_Variant_A, Mercator_Variant_B
      and Transverse_Cylindrical_Equal_Area and various grid mappings (#2020) (#2195)

    o Map ESRI Transverse_Mercator_Complex to Transverse Mercator (#2040)

    o Register grids for New Caledonia (see https://github.com/OSGeo/PROJ-data/pull/16) 
(#2051) (#2239)

    o Register NZGD2000 -> ITRF96 transformation for NZGD2000 database (#2248)

    o Register geoid file for UK added
      (see https://github.com/OSGeo//PROJ-data/pull/25() (#2250)

    o Register Slovakian geoid transformations with needed code changes (#2259)

    o Register Spanish SPED2ETV2 grid for ED50->ETRS89 (#2261)

  + API:

    o Add API function proj_get_units_from_database() (#2065)

    o Add API function proj_get_suggested_operation() (#2068)

    o Add API functions proj_degree_input() and proj_degree_output() (#2144)

    o Moved proj_context_get_url_endpoint & proj_context_get_user_writable_directory
      from proj_experimental.h to proj.h (#2162)

    o createFromUserInput(): allow compound CRS with the 2 parts given by names,
      e.g. 'WGS 84 + EGM96 height' (#2126)

    o createOperations(): when converting CompoundCRS<-->Geographic3DCrs, do not
      use discard change of ellipsoidal height if a Helmert transformation is
      involved (#2227)

    o proj_list_units() deprecated, superceeded by proj_get_units_from_database()

    o proj_list_angular_units() deprecated, superceeded by proj_get_units_from_database()

 + Optimizations:

    o tmerc/utm: add a +algo=auto/evenden_snyder/poder_engsager parameter (#2030)

    o Extended tmerc (Poder/Engsager): speed optimizations (#2036)

    o Approximate tmerc (Snyder): speed optimizations (#2039)

    o pj_phi2(): speed-up computation (and thus inverse ellipsoidal Mercator and LCC) (#2052)

    o Inverse cart: speed-up computation by 33% (#2145)

    o Extended tmerc: speed-up forward path by ~5% (#2147)

  + Various:

    o Follow PDAL's CMake RPATH strategy (#2009)

    o WKT import/export: add support for WKT1_ESRI VERTCS synta (#2024)

    o projinfo: add a --hide-ballpark option (#2127)

    o gie: implement a strict mode with <gie-strict> </gie-strict> (#2168)

    o Allow importing WKT1 COMPD_CS with a VERT_DATUM[Ellipsoid,2002] (#2229)

    o Add runtime checking that sqlite3 is >= 3.11 (#2235)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/a1177874/attachment-0001.html>

From even.rouault at spatialys.com  Wed Jul  1 06:21:09 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 15:21:09 +0200
Subject: [PROJ] PROJ 7.1.0 and PROJ-data 1.1.0
In-Reply-To: <3122829.p95KIm86ne@even-i700>
References: <3122829.p95KIm86ne@even-i700>
Message-ID: <8134884.CPlmuljqfb@even-i700>

> See release notes below for details. Download the source distributions 
here:

One important item that was missing and I've just added in the NEWS:

  + New transformations:

    o Add a +proj=defmodel transformation for multi-component time-
based deformation models (#2206)

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/9c378dfa/attachment.html>

From Roger.Bivand at nhh.no  Wed Jul  1 07:24:12 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 1 Jul 2020 16:24:12 +0200
Subject: [PROJ] specifying the search paths
Message-ID: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>

I have a question about the use of 
proj_context_set_search_paths(PJ_DEFAULT_CTX, ...). On initiating PRØJ, I 
see from proj_info().searchpath that (now 7.1.0) I have three paths, the 
last two identical /usr/local/share/proj, and the first 
$HOME/.local/share/proj - which contains a cache.db.

For testing on other platforms than my own, I need to change the first 
path to a temporary directory with write access, so that I do not write in 
the user space of the test platform. So I use 
proj_context_set_search_paths(PJ_DEFAULT_CTX, ...), providing the correct 
length of the vector of paths, and the paths themselves. The 
user-writeable path is first, as at startup. It, however, does not contain 
a cache.db file, even of zero length. After finding a coordinate operation 
(using a grid cached in $HOME/.local/share/proj), the temporary directory 
remains empty, $HOME/.local/share/proj is used despite not being on the 
active path list, and the operation completes successfully.

This is, however, not what I need - I need the download to occur to the 
temporary directory, so that I can demonstrate that cache.db gets 
populated.

May libproj be caching paths so that even if the path to the use-writeable 
directory has been set, it still uses the one determined on load, even if 
it had been renamed and is not on the this of search paths? I find the 
default use-writeable directory being re-created even when it is not on 
the declared list of search paths. I'm only using PJ_DEFAULT_CTX - is that 
the problem?

Any advice gratefully received.

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Wed Jul  1 07:40:25 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 16:40:25 +0200
Subject: [PROJ] specifying the search paths
In-Reply-To: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>
References: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>
Message-ID: <2582887.UtbujniLzD@even-i700>

Roger,

> I have a question about the use of
> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...). On initiating PRØJ, I
> see from proj_info().searchpath that (now 7.1.0) I have three paths, the
> last two identical /usr/local/share/proj, and the first
> $HOME/.local/share/proj - which contains a cache.db.
> 
> For testing on other platforms than my own, I need to change the first
> path to a temporary directory with write access, so that I do not write in
> the user space of the test platform. So I use
> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...), providing the correct
> length of the vector of paths, and the paths themselves. The
> user-writeable path is first, as at startup. It, however, does not contain
> a cache.db file, even of zero length. After finding a coordinate operation
> (using a grid cached in $HOME/.local/share/proj), the temporary directory
> remains empty, $HOME/.local/share/proj is used despite not being on the
> active path list, and the operation completes successfully.
> 
> This is, however, not what I need - I need the download to occur to the
> temporary directory, so that I can demonstrate that cache.db gets
> populated.
> 
> May libproj be caching paths so that even if the path to the use-writeable
> directory has been set, it still uses the one determined on load, even if
> it had been renamed and is not on the this of search paths? I find the
> default use-writeable directory being re-created even when it is not on
> the declared list of search paths. I'm only using PJ_DEFAULT_CTX - is that
> the problem?

The location of the user writable directory for cache.db is not controlled through 
proj_context_set_search_paths(). You can get the location with
proj_context_get_user_writable_directory()

In the non-public API (proj_internal.h), there's a pj_context_set_user_writable_directory() 
function to modify it. It is actually PROJ_DLL exported because used by the projsync utility, 
but do not rely on it for production code, as this might change in the future, if the function 
was promoted to the public API.

On Unix, you can also modify it by setting the XDG_DATA_HOME environment variable (the 
actually directory will then be ${XDG_DATA_HOME}/proj)
A non-documented feature used by PROJ tests is also to use
the PROJ_USER_WRITABLE_DIRECTORY environment variable: this will have precedence on 
XDG_DATA_HOME

See
https://github.com/OSGeo/PROJ/blob/b66798a8f3d559b5fe28c22973241e97d191a053/src/
filemanager.cpp#L1190

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/c58f0aaa/attachment.html>

From Roger.Bivand at nhh.no  Wed Jul  1 08:33:05 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 1 Jul 2020 17:33:05 +0200
Subject: [PROJ] specifying the search paths
In-Reply-To: <2582887.UtbujniLzD@even-i700>
References: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>
 <2582887.UtbujniLzD@even-i700>
Message-ID: <alpine.LFD.2.22.394.2007011728220.2998228@reclus.nhh.no>

Even,

On Wed, 1 Jul 2020, Even Rouault wrote:

> Roger,
>
>> I have a question about the use of
>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...). On initiating PRØJ, I
>> see from proj_info().searchpath that (now 7.1.0) I have three paths, the
>> last two identical /usr/local/share/proj, and the first
>> $HOME/.local/share/proj - which contains a cache.db.
>>
>> For testing on other platforms than my own, I need to change the first
>> path to a temporary directory with write access, so that I do not write in
>> the user space of the test platform. So I use
>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...), providing the correct
>> length of the vector of paths, and the paths themselves. The
>> user-writeable path is first, as at startup. It, however, does not contain
>> a cache.db file, even of zero length. After finding a coordinate operation
>> (using a grid cached in $HOME/.local/share/proj), the temporary directory
>> remains empty, $HOME/.local/share/proj is used despite not being on the
>> active path list, and the operation completes successfully.
>>
>> This is, however, not what I need - I need the download to occur to the
>> temporary directory, so that I can demonstrate that cache.db gets
>> populated.
>>
>> May libproj be caching paths so that even if the path to the use-writeable
>> directory has been set, it still uses the one determined on load, even if
>> it had been renamed and is not on the this of search paths? I find the
>> default use-writeable directory being re-created even when it is not on
>> the declared list of search paths. I'm only using PJ_DEFAULT_CTX - is that
>> the problem?
>
> The location of the user writable directory for cache.db is not controlled through
> proj_context_set_search_paths(). You can get the location with
> proj_context_get_user_writable_directory()
>

Thanks for a rapid and full reply. My context is that in order to include 
runnable code examples in R packages, they need to meet a requirement not 
to cause data to be written outside the R temporary directory for the 
running instance irrespective of platform. So I need to control the 
address of the user-writeable directory completely in order to show users 
what is going on, and to permit the package to meet test requirements. I 
can try pj_context_set_user_writable_directory() understanding that it is 
not part of the public API, and will report back.

Best wishes,

Roger

> In the non-public API (proj_internal.h), there's a 
> pj_context_set_user_writable_directory() function to modify it. It is 
> actually PROJ_DLL exported because used by the projsync utility, but do 
> not rely on it for production code, as this might change in the future, 
> if the function was promoted to the public API.
>
> On Unix, you can also modify it by setting the XDG_DATA_HOME environment variable (the
> actually directory will then be ${XDG_DATA_HOME}/proj)
> A non-documented feature used by PROJ tests is also to use
> the PROJ_USER_WRITABLE_DIRECTORY environment variable: this will have precedence on
> XDG_DATA_HOME
>
> See
> https://github.com/OSGeo/PROJ/blob/b66798a8f3d559b5fe28c22973241e97d191a053/src/
> filemanager.cpp#L1190
>
> Even
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Wed Jul  1 08:46:22 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 17:46:22 +0200
Subject: [PROJ] specifying the search paths
In-Reply-To: <alpine.LFD.2.22.394.2007011728220.2998228@reclus.nhh.no>
References: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>
 <2582887.UtbujniLzD@even-i700>
 <alpine.LFD.2.22.394.2007011728220.2998228@reclus.nhh.no>
Message-ID: <2006256.ibJFFmIpxC@even-i700>

On mercredi 1 juillet 2020 17:33:05 CEST Roger Bivand wrote:
> Even,
> 
> On Wed, 1 Jul 2020, Even Rouault wrote:
> > Roger,
> > 
> >> I have a question about the use of
> >> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...). On initiating PRØJ, I
> >> see from proj_info().searchpath that (now 7.1.0) I have three paths, the
> >> last two identical /usr/local/share/proj, and the first
> >> $HOME/.local/share/proj - which contains a cache.db.
> >> 
> >> For testing on other platforms than my own, I need to change the first
> >> path to a temporary directory with write access, so that I do not write
> >> in
> >> the user space of the test platform. So I use
> >> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...), providing the correct
> >> length of the vector of paths, and the paths themselves. The
> >> user-writeable path is first, as at startup. It, however, does not
> >> contain
> >> a cache.db file, even of zero length. After finding a coordinate
> >> operation
> >> (using a grid cached in $HOME/.local/share/proj), the temporary directory
> >> remains empty, $HOME/.local/share/proj is used despite not being on the
> >> active path list, and the operation completes successfully.
> >> 
> >> This is, however, not what I need - I need the download to occur to the
> >> temporary directory, so that I can demonstrate that cache.db gets
> >> populated.
> >> 
> >> May libproj be caching paths so that even if the path to the
> >> use-writeable
> >> directory has been set, it still uses the one determined on load, even if
> >> it had been renamed and is not on the this of search paths? I find the
> >> default use-writeable directory being re-created even when it is not on
> >> the declared list of search paths. I'm only using PJ_DEFAULT_CTX - is
> >> that
> >> the problem?
> > 
> > The location of the user writable directory for cache.db is not controlled
> > through proj_context_set_search_paths(). You can get the location with
> > proj_context_get_user_writable_directory()
> 
> Thanks for a rapid and full reply. My context is that in order to include
> runnable code examples in R packages, they need to meet a requirement not
> to cause data to be written outside the R temporary directory for the
> running instance irrespective of platform. So I need to control the
> address of the user-writeable directory completely in order to show users
> what is going on, and to permit the package to meet test requirements. I
> can try pj_context_set_user_writable_directory() understanding that it is
> not part of the public API, and will report back.

I'd say R shouldn't worry about what PROJ does under the hood. This is just caching. An 
internal detail that shouldn't have observable effect from pepole using the PROJ API. The 
purpose of this per-account directory was that the cache could be shared by many PROJ 
using software: GDAL, QGIS, etc.

If you consider using pj_context_set_user_writable_directory() for more than testing, I'd 
suggest you to propose a pull request to move it to the public API as 
proj_context_set_user_writable_directory().

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/9c331e76/attachment-0001.html>

From patrick.mckendree.young at gmail.com  Wed Jul  1 16:49:25 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Wed, 1 Jul 2020 17:49:25 -0600
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
Message-ID: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>

Hello,

I am trying to figure out how to convert some elevations I have into
heights above ellipsoid via the cs2cs tool.  I am using proj 7.0.1, and
I've run projsync --all to snag all the grids.

Here is an example of what isn't working for me:

echo 565890.947 4192011.754 55 | cs2cs +proj=utm +zone=10 +datum=NAD83
+units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
+datum=NAD83 +units=m +vunits=m +no_defs
565890.95       4192011.75 55.00

I am confused as to why the elevation value isn't changing for me.  My
(extremely limited) understanding is that I am asking for 55m to be
converted from a height referenced against the NADV88 geoid to one
referenced against the NAD83 ellipsoid.  Am I using the wrong geoid grid?
>From the grid readme, it mentions "us_nga_g2018u0.tif : Conterminous US,
referenced to NAD83(2011). Vertical datum: NAVD88"  (presumably the nga <->
noaa is a typo in the readme) so I think I'm using the right one.

Thanks for any help,
Patrick
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/4ae6885f/attachment.html>

From patrick.mckendree.young at gmail.com  Wed Jul  1 18:02:08 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Wed, 1 Jul 2020 19:02:08 -0600
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <40ea90fd-d678-87fc-c10d-ee5ae4fdfbfe@ucsd.edu>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <40ea90fd-d678-87fc-c10d-ee5ae4fdfbfe@ucsd.edu>
Message-ID: <CADXYQQ4YK2rQmUhXoxkiG1HF2MofpOxZxqPSYnHj7ihXhkk6MA@mail.gmail.com>

Ah yes, I mean that projsync pulls us_noaa_g2018u0.tif but the readme
refers to us_nga_g2018u0.tif

On Wed, Jul 1, 2020, 6:36 PM John Helly <hellyj at ucsd.edu> wrote:

> Don't know about your overall problem but NGA is probably the National
> Geospatial Agency and NOAA is National Oceanic and Atmospheric Agency:
> i.e., not just a typo.
>
> J.
>
> On 7/1/20 16:49, Patrick Young wrote:
>
> Hello,
>
> I am trying to figure out how to convert some elevations I have into
> heights above ellipsoid via the cs2cs tool.  I am using proj 7.0.1, and
> I've run projsync --all to snag all the grids.
>
> Here is an example of what isn't working for me:
>
> echo 565890.947 4192011.754 55 | cs2cs +proj=utm +zone=10 +datum=NAD83
> +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
> +datum=NAD83 +units=m +vunits=m +no_defs
> 565890.95       4192011.75 55.00
>
> I am confused as to why the elevation value isn't changing for me.  My
> (extremely limited) understanding is that I am asking for 55m to be
> converted from a height referenced against the NADV88 geoid to one
> referenced against the NAD83 ellipsoid.  Am I using the wrong geoid grid?
> From the grid readme, it mentions "us_nga_g2018u0.tif : Conterminous US,
> referenced to NAD83(2011). Vertical datum: NAVD88"  (presumably the nga <->
> noaa is a typo in the readme) so I think I'm using the right one.
>
> Thanks for any help,
> Patrick
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!QC9CRRDxWQqjGTG2W0eBKp5YjqA5EbNZTcC4hPsgukSEmD_bryOTgIk24FdF9vc$
>
>
> --
> John Helly, University of California, San Diego / San Diego Supercomputer Center / Scripps Institution of Oceanography / 760 840 8660 mobile / http://www.sdsc.edu/~hellyj
> ORCID ID: orcid.org/0000-0002-3779-0603
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/288d284b/attachment.html>

From hellyj at ucsd.edu  Wed Jul  1 17:36:33 2020
From: hellyj at ucsd.edu (John Helly)
Date: Wed, 1 Jul 2020 17:36:33 -0700
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
Message-ID: <40ea90fd-d678-87fc-c10d-ee5ae4fdfbfe@ucsd.edu>

Don't know about your overall problem but NGA is probably the National
Geospatial Agency and NOAA is National Oceanic and Atmospheric Agency:
i.e., not just a typo.

J.

On 7/1/20 16:49, Patrick Young wrote:
> Hello,
>
> I am trying to figure out how to convert some elevations I have into
> heights above ellipsoid via the cs2cs tool.  I am using proj 7.0.1,
> and I've run projsync --all to snag all the grids.
>
> Here is an example of what isn't working for me:
>
> echo 565890.947 4192011.754 55 | cs2cs +proj=utm +zone=10 +datum=NAD83
> +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm
> +zone=10 +datum=NAD83 +units=m +vunits=m +no_defs
> 565890.95       4192011.75 55.00
>
> I am confused as to why the elevation value isn't changing for me.  My
> (extremely limited) understanding is that I am asking for 55m to be
> converted from a height referenced against the NADV88 geoid to one
> referenced against the NAD83 ellipsoid.  Am I using the wrong geoid
> grid?  From the grid readme, it mentions "us_nga_g2018u0.tif :
> Conterminous US, referenced to NAD83(2011). Vertical datum: NAVD88" 
> (presumably the nga <-> noaa is a typo in the readme) so I think I'm
> using the right one.
>
> Thanks for any help,
> Patrick
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!QC9CRRDxWQqjGTG2W0eBKp5YjqA5EbNZTcC4hPsgukSEmD_bryOTgIk24FdF9vc$ 

-- 
John Helly, University of California, San Diego / San Diego Supercomputer Center / Scripps Institution of Oceanography / 760 840 8660 mobile / http://www.sdsc.edu/~hellyj
ORCID ID: orcid.org/0000-0002-3779-0603

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/c903578d/attachment.html>

From brian.shaw at noaa.gov  Wed Jul  1 18:11:52 2020
From: brian.shaw at noaa.gov (Brian Shaw)
Date: Wed, 1 Jul 2020 19:11:52 -0600
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
Message-ID: <2038119f-163b-a684-0779-bd4f10a28aa5@noaa.gov>

Hi Patrick

NOAA does maintain the NAD 83, NAVD 88 and geoid models, looks like the 
typo might be in the readme from anothers email since NGA maintains 
WGS84 and EGM08.

I apologize as Im not completely sure on the format of your command but 
I think I have it you are passing UTM coordinates in NAD83 to geoid18 to 
get an NAVD88 height except that instead of passing an ellipsoid height 
you are passing an orthometric height.

To calculate the ellipsoid height you would use the formula h=H+N where 
h (ellipsoid height, in this case NAD 83), H (orthometric height, in 
this case NAVD 88) and N (geoid height, in this case GEOID18).

You should be providing an ellipsoid height to the geoid to get an 
orthometric height.  Maybe its because its the end of my work day that I 
cant figure out how to do this in one step but I believe if you provide 
0 as the height this will then give you the geoid height for that 
location (in geoid18) and you can just add this to your orthometric 
height to get the ellipsoid height.  You should get a negative number 
since the geoid is all negative for CONUS.

more information about geoid18 can be found here:
https://geodesy.noaa.gov/GEOID/GEOID18/

Hopefully this helps if I think of a way to do it in one command Ill 
respond again if someone else doesnt provide a solution.

Cheers
Brian

On 7/1/2020 5:49 PM, Patrick Young wrote:
> Hello,
>
> I am trying to figure out how to convert some elevations I have into 
> heights above ellipsoid via the cs2cs tool.  I am using proj 7.0.1, 
> and I've run projsync --all to snag all the grids.
>
> Here is an example of what isn't working for me:
>
> echo 565890.947 4192011.754 55 | cs2cs +proj=utm +zone=10 +datum=NAD83 
> +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm 
> +zone=10 +datum=NAD83 +units=m +vunits=m +no_defs
> 565890.95       4192011.75 55.00
>
> I am confused as to why the elevation value isn't changing for me.  My 
> (extremely limited) understanding is that I am asking for 55m to be 
> converted from a height referenced against the NADV88 geoid to one 
> referenced against the NAD83 ellipsoid.  Am I using the wrong geoid 
> grid?  From the grid readme, it mentions "us_nga_g2018u0.tif : 
> Conterminous US, referenced to NAD83(2011). Vertical datum: NAVD88" 
> (presumably the nga <-> noaa is a typo in the readme) so I think I'm 
> using the right one.
>
> Thanks for any help,
> Patrick
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
*************************************
Brian Shaw
Rocky Mountain Regional Advisor (CO, MT, WY)
NOAA's National Geodetic Survey (NGS)
Phone # 240-533-9522

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/27fdc939/attachment-0001.html>

From gdt at lexort.com  Wed Jul  1 18:09:38 2020
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 01 Jul 2020 21:09:38 -0400
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 (Patrick Young's message of "Wed, 1 Jul 2020 17:49:25 -0600")
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
Message-ID: <rmi8sg290z1.fsf@s1.lexort.com>

Patrick Young <patrick.mckendree.young at gmail.com> writes:

> echo 565890.947 4192011.754 55 | cs2cs +proj=utm +zone=10 +datum=NAD83
> +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
> +datum=NAD83 +units=m +vunits=m +no_defs
> 565890.95       4192011.75 55.00

I suspect you need to be very careful to distinguish among

  2D CRS (horizonal only)

  3D version of NAD83 (and thus HAE relative to NAD83 ellipsoid)

  some CRS which has the NAD83 horizontal coordinates and NAVD88 as the
  vertical

I would advise using projinfo to explain the transforms, and you may
have to look up EPSG codes for that particular UTM zone.   I am really
unclear on how cs2cs maps "NAD83" and a zone into a 2d vs 3d CRS.

> Am I using the wrong geoid grid?  From the grid readme, it mentions
> "us_nga_g2018u0.tif : Conterminous US, referenced to
> NAD83(2011). Vertical datum: NAVD88" (presumably the nga <-> noaa is a
> typo in the readme) so I think I'm using the right one.

The US government publishes two kinds of geoid models.  One family is
from the NGA and called "EGMyear" and converts between WGS84 ellipsoidal
height and WGS84 orthometric height.  The other family is by NGS (which
is part of NOAA) and is called GEOIDyear, converting between NAD83
ellipsoidal height and NAVD88.  See
https://www.ngs.noaa.gov/GEOID/GEOID18/ for more.  So in the US,
ignoring NGVD29, treating modern WGS84 as matching ITRF, and ignoring
vertical motions, you still end up with 4 different height values for a
single station.  Which is a long way of saying that GEOID18 is almost
certainly what you do want.

From patrick.mckendree.young at gmail.com  Wed Jul  1 21:45:47 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Wed, 1 Jul 2020 22:45:47 -0600
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <2038119f-163b-a684-0779-bd4f10a28aa5@noaa.gov>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <2038119f-163b-a684-0779-bd4f10a28aa5@noaa.gov>
Message-ID: <CADXYQQ75Lmcp0rqtge5A2Yf+DRywZkaPfP6zWGORCYatPhq6Bg@mail.gmail.com>

Thanks all for the help!

Dinking around a little bit more, I found through trial and error that
eliminating the +vunits seemed to solve it:

echo 565890.947 4192011.754 *55* | cs2cs +proj=utm +zone=10 +datum=NAD83
+units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
+datum=WGS84 +units=m +no_defs
565890.95       4192011.75 *22.79*

Somehow, the addition of +vunits=m on the target angers proj:

echo 565890.947 4192011.754 *55* | cs2cs +proj=utm +zone=10 +datum=NAD83
+units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
+datum=WGS84 +units=m *+vunits=m *+no_defs
565890.91       4192011.91 *55.00*

Adding +vunits=m to the source seems not to matter.  Wish I could say more
on why this is the case; is it a bug or is it a malformed request?

Thanks!
Patrick

On Wed, Jul 1, 2020 at 7:11 PM Brian Shaw <brian.shaw at noaa.gov> wrote:

> Hi Patrick
>
> NOAA does maintain the NAD 83, NAVD 88 and geoid models, looks like the
> typo might be in the readme from anothers email since NGA maintains WGS84
> and EGM08.
>
> I apologize as Im not completely sure on the format of your command but I
> think I have it you are passing UTM coordinates in NAD83 to geoid18 to get
> an NAVD88 height except that instead of passing an ellipsoid height you are
> passing an orthometric height.
>
> To calculate the ellipsoid height you would use the formula h=H+N  where h
> (ellipsoid height, in this case NAD 83), H (orthometric height, in this
> case NAVD 88) and N (geoid height, in this case GEOID18).
>
> You should be providing an ellipsoid height to the geoid to get an
> orthometric height.  Maybe its because its the end of my work day that I
> cant figure out how to do this in one step but I believe if you provide 0
> as the height this will then give you the geoid height for that location
> (in geoid18) and you can just add this to your orthometric height to get
> the ellipsoid height.  You should get a negative number since the geoid is
> all negative for CONUS.
>
> more information about geoid18 can be found here:
> https://geodesy.noaa.gov/GEOID/GEOID18/
>
> Hopefully this helps if I think of a way to do it in one command Ill
> respond again if someone else doesnt provide a solution.
>
> Cheers
> Brian
>
> On 7/1/2020 5:49 PM, Patrick Young wrote:
>
> Hello,
>
> I am trying to figure out how to convert some elevations I have into
> heights above ellipsoid via the cs2cs tool.  I am using proj 7.0.1, and
> I've run projsync --all to snag all the grids.
>
> Here is an example of what isn't working for me:
>
> echo 565890.947 4192011.754 55 | cs2cs +proj=utm +zone=10 +datum=NAD83
> +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
> +datum=NAD83 +units=m +vunits=m +no_defs
> 565890.95       4192011.75 55.00
>
> I am confused as to why the elevation value isn't changing for me.  My
> (extremely limited) understanding is that I am asking for 55m to be
> converted from a height referenced against the NADV88 geoid to one
> referenced against the NAD83 ellipsoid.  Am I using the wrong geoid grid?
> From the grid readme, it mentions "us_nga_g2018u0.tif : Conterminous US,
> referenced to NAD83(2011). Vertical datum: NAVD88"  (presumably the nga <->
> noaa is a typo in the readme) so I think I'm using the right one.
>
> Thanks for any help,
> Patrick
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
>
> --
> *************************************
> Brian Shaw
> Rocky Mountain Regional Advisor (CO, MT, WY)
> NOAA's National Geodetic Survey (NGS)
> Phone # 240-533-9522
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200701/9cfd59a8/attachment.html>

From Roger.Bivand at nhh.no  Thu Jul  2 01:46:30 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 2 Jul 2020 10:46:30 +0200
Subject: [PROJ] specifying the search paths
In-Reply-To: <2006256.ibJFFmIpxC@even-i700>
References: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>
 <2582887.UtbujniLzD@even-i700>
 <alpine.LFD.2.22.394.2007011728220.2998228@reclus.nhh.no>
 <2006256.ibJFFmIpxC@even-i700>
Message-ID: <alpine.LFD.2.22.394.2007021024550.3007674@reclus.nhh.no>

On Wed, 1 Jul 2020, Even Rouault wrote:

> On mercredi 1 juillet 2020 17:33:05 CEST Roger Bivand wrote:
>> Even,
>>
>> On Wed, 1 Jul 2020, Even Rouault wrote:
>>> Roger,
>>>
>>>> I have a question about the use of
>>>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...). On initiating PRØJ, I
>>>> see from proj_info().searchpath that (now 7.1.0) I have three paths, the
>>>> last two identical /usr/local/share/proj, and the first
>>>> $HOME/.local/share/proj - which contains a cache.db.
>>>>
>>>> For testing on other platforms than my own, I need to change the first
>>>> path to a temporary directory with write access, so that I do not write
>>>> in
>>>> the user space of the test platform. So I use
>>>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...), providing the correct
>>>> length of the vector of paths, and the paths themselves. The
>>>> user-writeable path is first, as at startup. It, however, does not
>>>> contain
>>>> a cache.db file, even of zero length. After finding a coordinate
>>>> operation
>>>> (using a grid cached in $HOME/.local/share/proj), the temporary directory
>>>> remains empty, $HOME/.local/share/proj is used despite not being on the
>>>> active path list, and the operation completes successfully.
>>>>
>>>> This is, however, not what I need - I need the download to occur to the
>>>> temporary directory, so that I can demonstrate that cache.db gets
>>>> populated.
>>>>
>>>> May libproj be caching paths so that even if the path to the
>>>> use-writeable
>>>> directory has been set, it still uses the one determined on load, even if
>>>> it had been renamed and is not on the this of search paths? I find the
>>>> default use-writeable directory being re-created even when it is not on
>>>> the declared list of search paths. I'm only using PJ_DEFAULT_CTX - is
>>>> that
>>>> the problem?
>>>
>>> The location of the user writable directory for cache.db is not controlled
>>> through proj_context_set_search_paths(). You can get the location with
>>> proj_context_get_user_writable_directory()
>>
>> Thanks for a rapid and full reply. My context is that in order to include
>> runnable code examples in R packages, they need to meet a requirement not
>> to cause data to be written outside the R temporary directory for the
>> running instance irrespective of platform. So I need to control the
>> address of the user-writeable directory completely in order to show users
>> what is going on, and to permit the package to meet test requirements. I
>> can try pj_context_set_user_writable_directory() understanding that it is
>> not part of the public API, and will report back.
>
> I'd say R shouldn't worry about what PROJ does under the hood. This is just caching. An
> internal detail that shouldn't have observable effect from pepole using the PROJ API. The
> purpose of this per-account directory was that the cache could be shared by many PROJ
> using software: GDAL, QGIS, etc.
>
> If you consider using pj_context_set_user_writable_directory() for more than testing, I'd
> suggest you to propose a pull request to move it to the public API as
> proj_context_set_user_writable_directory().

Trying to be non-invasive, I'm trying to use the available environment 
variables. When rgdal is loaded/attached to the running R environment, I 
used to copy out proj_info().searchpath; now, I'm setting 
PROJ_SKIP_READ_USER_WRITABLE_DIRECTORY and can (apparently) skip the user 
writable directory. From src/filemanager.cpp, line 1197 in master, at the 
top of proj_context_get_user_writable_directory(), I see the environment 
variable PROJ_USER_WRITABLE_DIRECTORY. So I try to use it:

> library(rgdal)
Loading required package: sp
rgdal: version: 1.5-13, (SVN revision 1024)
Geospatial Data Abstraction Library extensions to R successfully loaded
Loaded GDAL runtime: GDAL 3.1.1, released 2020/06/22
Path to GDAL shared files: /usr/local/share/gdal
GDAL binary built with GEOS: TRUE
Loaded PROJ runtime: Rel. 7.1.0, August 1st, 2020, [PJ_VERSION: 710]
Path to PROJ shared files: /usr/local/share/proj:/usr/local/share/proj
PROJ CDN enabled:FALSE
Linking to sp version:1.4-2
To mute warnings of possible GDAL/OSR exportToProj4() degradation,
use options("rgdal_show_exportToProj4_warnings"="none") before loading 
rgdal.
> get_proj_search_paths()
[1] "/usr/local/share/proj" "/usr/local/share/proj"
> td <- tempfile()
> dir.create(td)
> Sys.getenv("PROJ_USER_WRITABLE_DIRECTORY")
[1] ""
> Sys.setenv("PROJ_USER_WRITABLE_DIRECTORY"=td)
> Sys.getenv("PROJ_USER_WRITABLE_DIRECTORY")
[1] "/tmp/RtmpogCuDh/fileac60e50159ef4"
> .Call("get_proj_user_writable_dir", PACKAGE="rgdal")
[1] "/home/rsb/.local/share/proj"

But it seems that my get_proj_user_writable_dir(), calling:

proj_context_get_user_writable_directory(PJ_DEFAULT_CTX, FALSE)

reaches line 1194 in the function and finds that 
ctx->user_writable_directory.empty() is not TRUE, so does not read the 
environment variable.

What am I missing? Does ctx->user_writable_directory get populated anyway 
by the on-load call to proj_info().searchpath? Or is it rather the use of 
PJ_DEFAULT_CTX (seen elsewhere, for example the PROJ_NETWORK environment 
variable seems to be ignored in PJ_DEFAULT_CTX)? Using environment 
variables - and PROJ_SKIP_READ_USER_WRITABLE_DIRECTORY seems to work - is 
less invasive than widening the proj.h API.

The target is to give control over the directory used by CDN, partly for 
documenting what is going on (listing cache.db/chunks before and after), 
partly for testing on CRAN platforms which really dislike packages being 
teested writing outside the R session-specific temporary directory), and 
partly for larger labs wanting to be sure that every user is using the 
same grids (in this case, simply disabling CDN and downloading the 
required grids to a directory on the search path is preferable).

Roger

>
> Even
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Thu Jul  2 02:18:45 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 02 Jul 2020 11:18:45 +0200
Subject: [PROJ] specifying the search paths
In-Reply-To: <alpine.LFD.2.22.394.2007021024550.3007674@reclus.nhh.no>
References: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>
 <2006256.ibJFFmIpxC@even-i700>
 <alpine.LFD.2.22.394.2007021024550.3007674@reclus.nhh.no>
Message-ID: <1928959.mxFDjo9DC0@even-i700>

On jeudi 2 juillet 2020 10:46:30 CEST Roger Bivand wrote:
> On Wed, 1 Jul 2020, Even Rouault wrote:
> > On mercredi 1 juillet 2020 17:33:05 CEST Roger Bivand wrote:
> >> Even,
> >> 
> >> On Wed, 1 Jul 2020, Even Rouault wrote:
> >>> Roger,
> >>> 
> >>>> I have a question about the use of
> >>>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...). On initiating PRØJ,
> >>>> I
> >>>> see from proj_info().searchpath that (now 7.1.0) I have three paths,
> >>>> the
> >>>> last two identical /usr/local/share/proj, and the first
> >>>> $HOME/.local/share/proj - which contains a cache.db.
> >>>> 
> >>>> For testing on other platforms than my own, I need to change the first
> >>>> path to a temporary directory with write access, so that I do not write
> >>>> in
> >>>> the user space of the test platform. So I use
> >>>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...), providing the
> >>>> correct
> >>>> length of the vector of paths, and the paths themselves. The
> >>>> user-writeable path is first, as at startup. It, however, does not
> >>>> contain
> >>>> a cache.db file, even of zero length. After finding a coordinate
> >>>> operation
> >>>> (using a grid cached in $HOME/.local/share/proj), the temporary
> >>>> directory
> >>>> remains empty, $HOME/.local/share/proj is used despite not being on the
> >>>> active path list, and the operation completes successfully.
> >>>> 
> >>>> This is, however, not what I need - I need the download to occur to the
> >>>> temporary directory, so that I can demonstrate that cache.db gets
> >>>> populated.
> >>>> 
> >>>> May libproj be caching paths so that even if the path to the
> >>>> use-writeable
> >>>> directory has been set, it still uses the one determined on load, even
> >>>> if
> >>>> it had been renamed and is not on the this of search paths? I find the
> >>>> default use-writeable directory being re-created even when it is not on
> >>>> the declared list of search paths. I'm only using PJ_DEFAULT_CTX - is
> >>>> that
> >>>> the problem?
> >>> 
> >>> The location of the user writable directory for cache.db is not
> >>> controlled
> >>> through proj_context_set_search_paths(). You can get the location with
> >>> proj_context_get_user_writable_directory()
> >> 
> >> Thanks for a rapid and full reply. My context is that in order to include
> >> runnable code examples in R packages, they need to meet a requirement not
> >> to cause data to be written outside the R temporary directory for the
> >> running instance irrespective of platform. So I need to control the
> >> address of the user-writeable directory completely in order to show users
> >> what is going on, and to permit the package to meet test requirements. I
> >> can try pj_context_set_user_writable_directory() understanding that it is
> >> not part of the public API, and will report back.
> > 
> > I'd say R shouldn't worry about what PROJ does under the hood. This is
> > just caching. An internal detail that shouldn't have observable effect
> > from pepole using the PROJ API. The purpose of this per-account directory
> > was that the cache could be shared by many PROJ using software: GDAL,
> > QGIS, etc.
> > 
> > If you consider using pj_context_set_user_writable_directory() for more
> > than testing, I'd suggest you to propose a pull request to move it to the
> > public API as proj_context_set_user_writable_directory().
> 
> Trying to be non-invasive, I'm trying to use the available environment
> variables. When rgdal is loaded/attached to the running R environment, I
> used to copy out proj_info().searchpath; now, I'm setting
> PROJ_SKIP_READ_USER_WRITABLE_DIRECTORY and can (apparently) skip the user
> writable directory. From src/filemanager.cpp, line 1197 in master, at the
> top of proj_context_get_user_writable_directory(), I see the environment
> 
> variable PROJ_USER_WRITABLE_DIRECTORY. So I try to use it:
> > library(rgdal)
> 
> Loading required package: sp
> rgdal: version: 1.5-13, (SVN revision 1024)
> Geospatial Data Abstraction Library extensions to R successfully loaded
> Loaded GDAL runtime: GDAL 3.1.1, released 2020/06/22
> Path to GDAL shared files: /usr/local/share/gdal
> GDAL binary built with GEOS: TRUE
> Loaded PROJ runtime: Rel. 7.1.0, August 1st, 2020, [PJ_VERSION: 710]
> Path to PROJ shared files: /usr/local/share/proj:/usr/local/share/proj
> PROJ CDN enabled:FALSE
> Linking to sp version:1.4-2
> To mute warnings of possible GDAL/OSR exportToProj4() degradation,
> use options("rgdal_show_exportToProj4_warnings"="none") before loading
> rgdal.
> 
> > get_proj_search_paths()
> 
> [1] "/usr/local/share/proj" "/usr/local/share/proj"
> 
> > td <- tempfile()
> > dir.create(td)
> > Sys.getenv("PROJ_USER_WRITABLE_DIRECTORY")
> 
> [1] ""
> 
> > Sys.setenv("PROJ_USER_WRITABLE_DIRECTORY"=td)
> > Sys.getenv("PROJ_USER_WRITABLE_DIRECTORY")
> 
> [1] "/tmp/RtmpogCuDh/fileac60e50159ef4"
> 
> > .Call("get_proj_user_writable_dir", PACKAGE="rgdal")
> 
> [1] "/home/rsb/.local/share/proj"
> 
> But it seems that my get_proj_user_writable_dir(), calling:
> 
> proj_context_get_user_writable_directory(PJ_DEFAULT_CTX, FALSE)
> 
> reaches line 1194 in the function and finds that
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200702/2620e7bc/attachment-0001.html>

From even.rouault at spatialys.com  Thu Jul  2 02:55:57 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 02 Jul 2020 11:55:57 +0200
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <CADXYQQ4YK2rQmUhXoxkiG1HF2MofpOxZxqPSYnHj7ihXhkk6MA@mail.gmail.com>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <40ea90fd-d678-87fc-c10d-ee5ae4fdfbfe@ucsd.edu>
 <CADXYQQ4YK2rQmUhXoxkiG1HF2MofpOxZxqPSYnHj7ihXhkk6MA@mail.gmail.com>
Message-ID: <11387678.iUXLYAhqQZ@even-i700>

On mercredi 1 juillet 2020 19:02:08 CEST Patrick Young wrote:
> Ah yes, I mean that projsync pulls us_noaa_g2018u0.tif but the 
readme
> refers to us_nga_g2018u0.tif

Oh, that's a copy&paste blunder. Now fixed. Apologies to NOAA.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200702/edd436c2/attachment.html>

From even.rouault at spatialys.com  Thu Jul  2 03:33:26 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 02 Jul 2020 12:33:26 +0200
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <CADXYQQ75Lmcp0rqtge5A2Yf+DRywZkaPfP6zWGORCYatPhq6Bg@mail.gmail.com>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <2038119f-163b-a684-0779-bd4f10a28aa5@noaa.gov>
 <CADXYQQ75Lmcp0rqtge5A2Yf+DRywZkaPfP6zWGORCYatPhq6Bg@mail.gmail.com>
Message-ID: <12077601.N9S7JHxWVd@even-i700>

On mercredi 1 juillet 2020 22:45:47 CEST Patrick Young wrote:
> Thanks all for the help!
> 
> Dinking around a little bit more, I found through trial and error that
> eliminating the +vunits seemed to solve it:
> 
> echo 565890.947 4192011.754 *55* | cs2cs +proj=utm +zone=10 +datum=NAD83
> +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
> +datum=WGS84 +units=m +no_defs
> 565890.95       4192011.75 *22.79*
> 
> Somehow, the addition of +vunits=m on the target angers proj:
> 
> echo 565890.947 4192011.754 *55* | cs2cs +proj=utm +zone=10 +datum=NAD83
> +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif +to +proj=utm +zone=10
> +datum=WGS84 +units=m *+vunits=m *+no_defs
> 565890.91       4192011.91 *55.00*
> 
> Adding +vunits=m to the source seems not to matter.  Wish I could say more
> on why this is the case; is it a bug or is it a malformed request?

When you specify +vunits= in this PROJ.4 legacy syntax, PROJ >= 6 understands it as an 
instruction to create a CompoundCRS with a vertical CRS with a unknown datum, not a 
Projected CRS with ellipsoidal height. And as this is a unknown vertical datum, no 
transformation between it and the WGS84 ellipsoid can be done. This is admitedly a bit 
confusing, non backward compatible and not consistent with the case where you do 
+proj=longlat +vunits=m where it creates a Geographic 3D CRS. I've captured this in https://
github.com/OSGeo/PROJ/issues/2287


Another way of doing this transformation is to use cct and PROJ pipeline syntax:

echo 565890.947 4192011.754 55 | cct \
  +proj=pipeline +step \
      +inv +proj=utm +zone=10 +ellps=GRS80 \
      +step +proj=vgridshift +grids=us_noaa_g2018u0.tif +multiplier=1 \
      +step +proj=utm +zone=10 +ellps=WGS84

The following also works, but you depend here on the fact that geoid2018 is the best 
candidate used currently for the ellipsoidal<-->orthometric height transformation, and 
specifying NAD83(2011) rather than NAD83 is critical to make it sure that geoid2018 is used. 
If using plain NAD83, an older version of the geoid model will be used:

echo 565890.947 4192011.754 55 | cs2cs \
     "NAD83(2011) / UTM zone 10N + NAVD88 height" "WGS84 / UTM zone 10N"

or

echo 565890.947 4192011.754 55 | cs2cs EPSG:6339+5703 EPSG:32610


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200702/f7b4ee2d/attachment.html>

From gdt at lexort.com  Thu Jul  2 05:51:00 2020
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 02 Jul 2020 08:51:00 -0400
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <12077601.N9S7JHxWVd@even-i700> (Even Rouault's message of "Thu, 
 02 Jul 2020 12:33:26 +0200")
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <2038119f-163b-a684-0779-bd4f10a28aa5@noaa.gov>
 <CADXYQQ75Lmcp0rqtge5A2Yf+DRywZkaPfP6zWGORCYatPhq6Bg@mail.gmail.com>
 <12077601.N9S7JHxWVd@even-i700>
Message-ID: <rmipn9e5bd7.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

1) I tried to use projinfo (6.3.2) with this defintiion, thinking that asking proj
"what do you think this really means" would be helpful:

  projinfo +proj=utm +zone=10 +datum=NAD83  +units=m +no_defs +geoidgrids=us_noaa_g2018u0.tif 

got me

  Too many parameters: +zone=10

Is it expected that any string that's valid for cs2cs can be queried
with projinfo?

2) It strikes me that once one moves away from basic 2D datums, the
legacy syntax is dangerous, and people should be encouraged to use a
clearer definition.  Do you agree, and if so I wonder what you think
should be done?

> Another way of doing this transformation is to use cct and PROJ pipeline syntax:
>
> echo 565890.947 4192011.754 55 | cct \
>   +proj=pipeline +step \
>       +inv +proj=utm +zone=10 +ellps=GRS80 \
>       +step +proj=vgridshift +grids=us_noaa_g2018u0.tif +multiplier=1 \
>       +step +proj=utm +zone=10 +ellps=WGS84

(I realize everybody but me thinks that somebody saying "WGS84" means
they have no idea what datum they really mean and thus an error of 2m is
ok, but this seems to be skipping the datum shift from NAD83(2011) to
modern WGS84.)

And, Patrick's original question seemed entirely in NAD83, and then the
example invocation changed to WGS84.  As the ellipsoids are in different
places, this is another source of difficulty.  (I know of no available
transforms from NAVD88 to WGS84 ellipsoidal height, although of course
two steps is the obvious approach.)

(I do realize that the difference in ellipsoidal height between GRS80
and WGS84 ellipsoid definitions, assuming same center, is just about
negligble.)

> The following also works, but you depend here on the fact that geoid2018 is the best 
> candidate used currently for the ellipsoidal<-->orthometric height transformation, and 
> specifying NAD83(2011) rather than NAD83 is critical to make it sure that geoid2018 is used. 
> If using plain NAD83, an older version of the geoid model will be used:
>
> echo 565890.947 4192011.754 55 | cs2cs \
>      "NAD83(2011) / UTM zone 10N + NAVD88 height" "WGS84 / UTM zone 10N"
>
> or
>
> echo 565890.947 4192011.754 55 | cs2cs EPSG:6339+5703 EPSG:32610

3) I didn't realize one caould merge two codes that way to construct a
compound CRS.  That may just be me that doesn't know that, but it might
help to add an example to cs2cs(1).

From Roger.Bivand at nhh.no  Thu Jul  2 06:03:45 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Thu, 2 Jul 2020 15:03:45 +0200
Subject: [PROJ] specifying the search paths
In-Reply-To: <1928959.mxFDjo9DC0@even-i700>
References: <alpine.LFD.2.22.394.2007011556150.2997515@reclus.nhh.no>
 <2006256.ibJFFmIpxC@even-i700>
 <alpine.LFD.2.22.394.2007021024550.3007674@reclus.nhh.no>
 <1928959.mxFDjo9DC0@even-i700>
Message-ID: <alpine.LFD.2.22.394.2007021451260.3009936@reclus.nhh.no>

Short version: environment variable PROJ_USER_WRITABLE_DIRECTORY will only 
override proj_context_get_user_writable_directory() if set before PROJ is 
invoked, example in:

https://rgdal.r-forge.r-project.org/articles/CRS_projections_transformations.html#transformation-grid-files-1

More at foot.

On Thu, 2 Jul 2020, Even Rouault wrote:

> On jeudi 2 juillet 2020 10:46:30 CEST Roger Bivand wrote:
>> On Wed, 1 Jul 2020, Even Rouault wrote:
>>> On mercredi 1 juillet 2020 17:33:05 CEST Roger Bivand wrote:
>>>> Even,
>>>>
>>>> On Wed, 1 Jul 2020, Even Rouault wrote:
>>>>> Roger,
>>>>>
>>>>>> I have a question about the use of
>>>>>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...). On initiating PRØJ,
>>>>>> I
>>>>>> see from proj_info().searchpath that (now 7.1.0) I have three paths,
>>>>>> the
>>>>>> last two identical /usr/local/share/proj, and the first
>>>>>> $HOME/.local/share/proj - which contains a cache.db.
>>>>>>
>>>>>> For testing on other platforms than my own, I need to change the first
>>>>>> path to a temporary directory with write access, so that I do not write
>>>>>> in
>>>>>> the user space of the test platform. So I use
>>>>>> proj_context_set_search_paths(PJ_DEFAULT_CTX, ...), providing the
>>>>>> correct
>>>>>> length of the vector of paths, and the paths themselves. The
>>>>>> user-writeable path is first, as at startup. It, however, does not
>>>>>> contain
>>>>>> a cache.db file, even of zero length. After finding a coordinate
>>>>>> operation
>>>>>> (using a grid cached in $HOME/.local/share/proj), the temporary
>>>>>> directory
>>>>>> remains empty, $HOME/.local/share/proj is used despite not being on the
>>>>>> active path list, and the operation completes successfully.
>>>>>>
>>>>>> This is, however, not what I need - I need the download to occur to the
>>>>>> temporary directory, so that I can demonstrate that cache.db gets
>>>>>> populated.
>>>>>>
>>>>>> May libproj be caching paths so that even if the path to the
>>>>>> use-writeable
>>>>>> directory has been set, it still uses the one determined on load, even
>>>>>> if
>>>>>> it had been renamed and is not on the this of search paths? I find the
>>>>>> default use-writeable directory being re-created even when it is not on
>>>>>> the declared list of search paths. I'm only using PJ_DEFAULT_CTX - is
>>>>>> that
>>>>>> the problem?
>>>>>
>>>>> The location of the user writable directory for cache.db is not
>>>>> controlled
>>>>> through proj_context_set_search_paths(). You can get the location with
>>>>> proj_context_get_user_writable_directory()
>>>>
>>>> Thanks for a rapid and full reply. My context is that in order to include
>>>> runnable code examples in R packages, they need to meet a requirement not
>>>> to cause data to be written outside the R temporary directory for the
>>>> running instance irrespective of platform. So I need to control the
>>>> address of the user-writeable directory completely in order to show users
>>>> what is going on, and to permit the package to meet test requirements. I
>>>> can try pj_context_set_user_writable_directory() understanding that it is
>>>> not part of the public API, and will report back.
>>>
>>> I'd say R shouldn't worry about what PROJ does under the hood. This is
>>> just caching. An internal detail that shouldn't have observable effect
>>> from pepole using the PROJ API. The purpose of this per-account directory
>>> was that the cache could be shared by many PROJ using software: GDAL,
>>> QGIS, etc.
>>>
>>> If you consider using pj_context_set_user_writable_directory() for more
>>> than testing, I'd suggest you to propose a pull request to move it to the
>>> public API as proj_context_set_user_writable_directory().
>>
>> Trying to be non-invasive, I'm trying to use the available environment
>> variables. When rgdal is loaded/attached to the running R environment, I
>> used to copy out proj_info().searchpath; now, I'm setting
>> PROJ_SKIP_READ_USER_WRITABLE_DIRECTORY and can (apparently) skip the user
>> writable directory. From src/filemanager.cpp, line 1197 in master, at the
>> top of proj_context_get_user_writable_directory(), I see the environment
>>
>> variable PROJ_USER_WRITABLE_DIRECTORY. So I try to use it:
>>> library(rgdal)
>>
>> Loading required package: sp
>> rgdal: version: 1.5-13, (SVN revision 1024)
>> Geospatial Data Abstraction Library extensions to R successfully loaded
>> Loaded GDAL runtime: GDAL 3.1.1, released 2020/06/22
>> Path to GDAL shared files: /usr/local/share/gdal
>> GDAL binary built with GEOS: TRUE
>> Loaded PROJ runtime: Rel. 7.1.0, August 1st, 2020, [PJ_VERSION: 710]
>> Path to PROJ shared files: /usr/local/share/proj:/usr/local/share/proj
>> PROJ CDN enabled:FALSE
>> Linking to sp version:1.4-2
>> To mute warnings of possible GDAL/OSR exportToProj4() degradation,
>> use options("rgdal_show_exportToProj4_warnings"="none") before loading
>> rgdal.
>>
>>> get_proj_search_paths()
>>
>> [1] "/usr/local/share/proj" "/usr/local/share/proj"
>>
>>> td <- tempfile()
>>> dir.create(td)
>>> Sys.getenv("PROJ_USER_WRITABLE_DIRECTORY")
>>
>> [1] ""
>>
>>> Sys.setenv("PROJ_USER_WRITABLE_DIRECTORY"=td)
>>> Sys.getenv("PROJ_USER_WRITABLE_DIRECTORY")
>>
>> [1] "/tmp/RtmpogCuDh/fileac60e50159ef4"
>>
>>> .Call("get_proj_user_writable_dir", PACKAGE="rgdal")
>>
>> [1] "/home/rsb/.local/share/proj"
>>
>> But it seems that my get_proj_user_writable_dir(), calling:
>>
>> proj_context_get_user_writable_directory(PJ_DEFAULT_CTX, FALSE)
>>
>> reaches line 1194 in the function and finds that

(the posted version got abbreviated here, I've added back the remainder 
for clarity).

>>
>> ctx->user_writable_directory.empty() is not TRUE, so does not read the
>>
>> environment variable.
>>
>> What am I missing? Does ctx->user_writable_directory get populated 
>> anyway by the on-load call to proj_info().searchpath?
>
> Yes. You should set the env var before any other call to PROJ to be on 
> the safe side.

That was it! Thanks, example now online at:

https://rgdal.r-forge.r-project.org/articles/CRS_projections_transformations.html#transformation-grid-files-1

The document gets checked, run, and rebuilt on local test/check platforms, 
so will vary from mine because most are at PROJ 6, but are looking at 7 
(hence the issue I raised for Brian Ripley and you resolved some days 
ago).

Thanks again,

Roger

>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From panden at gmail.com  Thu Jul  2 06:17:37 2020
From: panden at gmail.com (Andreas B)
Date: Thu, 2 Jul 2020 15:17:37 +0200
Subject: [PROJ] Supported geographical coordinate formats
Message-ID: <CAL2+-iVpycNDQqiF9hb-MDO+t=ZfoL=K6k+gM8sGkMqKpjKkSg@mail.gmail.com>

Hi,

Is there any formal description or definition of what kind of
geographical coordinate format the proj command line tools support
(input and output)?

Several styles are presented in the docs, e.g.
(https://proj.org/apps/cs2cs.html#using-proj-strings)

45d15'33.1" 111.5W
45d15.551666667N -111d30
+45.25919444444 111d30'000w

Any preferred format?

Thanks,
Andreas

From even.rouault at spatialys.com  Thu Jul  2 06:22:00 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 02 Jul 2020 15:22:00 +0200
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <rmipn9e5bd7.fsf@s1.lexort.com>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <12077601.N9S7JHxWVd@even-i700> <rmipn9e5bd7.fsf@s1.lexort.com>
Message-ID: <8135325.EEVXHdCboE@even-i700>

On jeudi 2 juillet 2020 08:51:00 CEST Greg Troxel wrote:
> Even Rouault <even.rouault at spatialys.com> writes:
> 
> 1) I tried to use projinfo (6.3.2) with this defintiion, thinking that
> asking proj "what do you think this really means" would be helpful:
> 
>   projinfo +proj=utm +zone=10 +datum=NAD83  +units=m +no_defs
> +geoidgrids=us_noaa_g2018u0.tif
> 
> got me
> 
>   Too many parameters: +zone=10
> 
> Is it expected that any string that's valid for cs2cs can be queried
> with projinfo?

For projinfo, you need to put the PROJ string inside double quotes, and add a +type=crs

projinfo "+proj=utm +zone=10 +datum=NAD83 +units=m +geoidgrids=us_noaa_g2018u0.tif 
+type=crs"

> 
> 2) It strikes me that once one moves away from basic 2D datums, the
> legacy syntax is dangerous, and people should be encouraged to use a
> clearer definition.  Do you agree, and if so I wonder what you think
> should be done?

The only advantage of it is its compacity, especially for simple things. Using EPSG codes or 
EPSG names for well-known objects is an alternative. Otherwise you have to use more 
verbose syntaxes with WKT or PROJJSON

> (I realize everybody but me thinks that somebody saying "WGS84" means
> they have no idea what datum they really mean and thus an error of 2m is
> ok, but this seems to be skipping the datum shift from NAD83(2011) to
> modern WGS84.)

Indeed, when using the NAD83(2011) datum, you can get more accurate horizontal 
transformations to WGS84 with the HPGN grids.

> 3) I didn't realize one caould merge two codes that way to construct a
> compound CRS.  That may just be me that doesn't know that, but it might
> help to add an example to cs2cs(1).

Was already documented for projinfo, but indeed wasn't explicitly mentionned for cs2cs. 
Should be addressed by https://github.com/OSGeo/PROJ/pull/2290

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200702/f798801c/attachment.html>

From charles at karney.com  Thu Jul  2 06:33:12 2020
From: charles at karney.com (Charles Karney)
Date: Thu, 2 Jul 2020 09:33:12 -0400
Subject: [PROJ] Supported geographical coordinate formats
In-Reply-To: <CAL2+-iVpycNDQqiF9hb-MDO+t=ZfoL=K6k+gM8sGkMqKpjKkSg@mail.gmail.com>
References: <CAL2+-iVpycNDQqiF9hb-MDO+t=ZfoL=K6k+gM8sGkMqKpjKkSg@mail.gmail.com>
Message-ID: <39727764-46a0-12de-4003-9a109b74d854@karney.com>

One major usability issue with PROJ is that the hemisphere designators
NESW *only* specify the sign of the coordinate.  Thus it's easy for
10W to be interpreted as lat = -10.  Fixing this would required some
replumbing of PROJ since the two horizontal components would need to
be decoded together.

On 7/2/20 9:17 AM, Andreas B wrote:
> Hi,
> 
> Is there any formal description or definition of what kind of
> geographical coordinate format the proj command line tools support
> (input and output)?
> 
> Several styles are presented in the docs, e.g.
> (https://proj.org/apps/cs2cs.html#using-proj-strings)
> 
> 45d15'33.1" 111.5W
> 45d15.551666667N -111d30
> +45.25919444444 111d30'000w
> 
> Any preferred format?
> 
> Thanks,
> Andreas

From gdt at lexort.com  Thu Jul  2 06:37:39 2020
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 02 Jul 2020 09:37:39 -0400
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <8135325.EEVXHdCboE@even-i700> (Even Rouault's message of "Thu,
 02 Jul 2020 15:22:00 +0200")
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <12077601.N9S7JHxWVd@even-i700> <rmipn9e5bd7.fsf@s1.lexort.com>
 <8135325.EEVXHdCboE@even-i700>
Message-ID: <rmia70i597g.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

> For projinfo, you need to put the PROJ string inside double quotes, and add a +type=crs
>
> projinfo "+proj=utm +zone=10 +datum=NAD83 +units=m +geoidgrids=us_noaa_g2018u0.tif 
> +type=crs"

Thanks.  I did not figure that out from reading the projinfo man page.
It says

  {object_definition} might be a PROJ string, a WKT string,  a AUTHORITY:CODE, or urn:ogc:def:OBJECT_TYPE:AUTHORITY::CODE

which I guess in hindsight sort of implies a single argument.   The
{foo} syntax makes sense in hindsight but I didn't grasp this.

I only find the +type=crs within --identify.


>> 2) It strikes me that once one moves away from basic 2D datums, the
>> legacy syntax is dangerous, and people should be encouraged to use a
>> clearer definition.  Do you agree, and if so I wonder what you think
>> should be done?
>
> The only advantage of it is its compacity, especially for simple things. Using EPSG codes or 
> EPSG names for well-known objects is an alternative. Otherwise you have to use more 
> verbose syntaxes with WKT or PROJJSON

that makes sense, but it seems that most people are using things that
can be defined via EPSG codes, and if so would be better served by
doing so to reduce confusion.

>> 3) I didn't realize one caould merge two codes that way to construct a
>> compound CRS.  That may just be me that doesn't know that, but it might
>> help to add an example to cs2cs(1).
>
> Was already documented for projinfo, but indeed wasn't explicitly mentionned for cs2cs. 
> Should be addressed by https://github.com/OSGeo/PROJ/pull/2290

Great, thanks.

From panden at gmail.com  Thu Jul  2 06:43:50 2020
From: panden at gmail.com (Andreas B)
Date: Thu, 2 Jul 2020 15:43:50 +0200
Subject: [PROJ] Supported geographical coordinate formats
In-Reply-To: <39727764-46a0-12de-4003-9a109b74d854@karney.com>
References: <CAL2+-iVpycNDQqiF9hb-MDO+t=ZfoL=K6k+gM8sGkMqKpjKkSg@mail.gmail.com>
 <39727764-46a0-12de-4003-9a109b74d854@karney.com>
Message-ID: <CAL2+-iUTjm4GTEXmu0KGP=jZ0t+U=EurKmD0rt9pd5rszPmT8g@mail.gmail.com>

Thanks for answering Charles.

I'm not sure if I understand. Why would 10W be interpreted as lat = -10?


Andreas

On Thu, Jul 2, 2020 at 3:33 PM Charles Karney <charles at karney.com> wrote:
>
> One major usability issue with PROJ is that the hemisphere designators
> NESW *only* specify the sign of the coordinate.  Thus it's easy for
> 10W to be interpreted as lat = -10.  Fixing this would required some
> replumbing of PROJ since the two horizontal components would need to
> be decoded together.
>
> On 7/2/20 9:17 AM, Andreas B wrote:
> > Hi,
> >
> > Is there any formal description or definition of what kind of
> > geographical coordinate format the proj command line tools support
> > (input and output)?
> >
> > Several styles are presented in the docs, e.g.
> > (https://proj.org/apps/cs2cs.html#using-proj-strings)
> >
> > 45d15'33.1" 111.5W
> > 45d15.551666667N -111d30
> > +45.25919444444 111d30'000w
> >
> > Any preferred format?
> >
> > Thanks,
> > Andreas

From patrick.mckendree.young at gmail.com  Thu Jul  2 08:07:20 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Thu, 2 Jul 2020 09:07:20 -0600
Subject: [PROJ] Converting NAD83/NADV88 heights to HAE
In-Reply-To: <rmia70i597g.fsf@s1.lexort.com>
References: <CADXYQQ668tVgz0g5ZzNfCTPKSnG9up1tQ7d6c59+QcrtagOKRw@mail.gmail.com>
 <12077601.N9S7JHxWVd@even-i700> <rmipn9e5bd7.fsf@s1.lexort.com>
 <8135325.EEVXHdCboE@even-i700> <rmia70i597g.fsf@s1.lexort.com>
Message-ID: <CADXYQQ7A8C23FKFAgmAGZ9k6NCCp87vVgPTZL-L-4y+WTL25gQ@mail.gmail.com>

Thanks everyone for the help.  Now I just need to get it going in gdalwarp!

P

On Thu, Jul 2, 2020 at 7:37 AM Greg Troxel <gdt at lexort.com> wrote:

> Even Rouault <even.rouault at spatialys.com> writes:
>
> > For projinfo, you need to put the PROJ string inside double quotes, and
> add a +type=crs
> >
> > projinfo "+proj=utm +zone=10 +datum=NAD83 +units=m
> +geoidgrids=us_noaa_g2018u0.tif
> > +type=crs"
>
> Thanks.  I did not figure that out from reading the projinfo man page.
> It says
>
>   {object_definition} might be a PROJ string, a WKT string,  a
> AUTHORITY:CODE, or urn:ogc:def:OBJECT_TYPE:AUTHORITY::CODE
>
> which I guess in hindsight sort of implies a single argument.   The
> {foo} syntax makes sense in hindsight but I didn't grasp this.
>
> I only find the +type=crs within --identify.
>
>
> >> 2) It strikes me that once one moves away from basic 2D datums, the
> >> legacy syntax is dangerous, and people should be encouraged to use a
> >> clearer definition.  Do you agree, and if so I wonder what you think
> >> should be done?
> >
> > The only advantage of it is its compacity, especially for simple things.
> Using EPSG codes or
> > EPSG names for well-known objects is an alternative. Otherwise you have
> to use more
> > verbose syntaxes with WKT or PROJJSON
>
> that makes sense, but it seems that most people are using things that
> can be defined via EPSG codes, and if so would be better served by
> doing so to reduce confusion.
>
> >> 3) I didn't realize one caould merge two codes that way to construct a
> >> compound CRS.  That may just be me that doesn't know that, but it might
> >> help to add an example to cs2cs(1).
> >
> > Was already documented for projinfo, but indeed wasn't explicitly
> mentionned for cs2cs.
> > Should be addressed by https://github.com/OSGeo/PROJ/pull/2290
>
> Great, thanks.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200702/6cb1f141/attachment-0001.html>

From charles at karney.com  Thu Jul  2 08:57:14 2020
From: charles at karney.com (Charles Karney)
Date: Thu, 2 Jul 2020 11:57:14 -0400
Subject: [PROJ] Supported geographical coordinate formats
In-Reply-To: <CAL2+-iUTjm4GTEXmu0KGP=jZ0t+U=EurKmD0rt9pd5rszPmT8g@mail.gmail.com>
References: <CAL2+-iVpycNDQqiF9hb-MDO+t=ZfoL=K6k+gM8sGkMqKpjKkSg@mail.gmail.com>
 <39727764-46a0-12de-4003-9a109b74d854@karney.com>
 <CAL2+-iUTjm4GTEXmu0KGP=jZ0t+U=EurKmD0rt9pd5rszPmT8g@mail.gmail.com>
Message-ID: <4ea74fcc-3b3a-2b4a-8637-0bd923133866@karney.com>

Because PROJ uses the order of the coordinates to distinguish latitude
and longitude.  E.g.,

   echo 4N 10W | cs2cs +proj=latlong

=>

   4dE     10dS 0.000


On 7/2/20 9:43 AM, Andreas B wrote:
> Thanks for answering Charles.
> 
> I'm not sure if I understand. Why would 10W be interpreted as lat = -10?
> 
> 
> Andreas
> 
> On Thu, Jul 2, 2020 at 3:33 PM Charles Karney <charles at karney.com> wrote:
>>
>> One major usability issue with PROJ is that the hemisphere designators
>> NESW *only* specify the sign of the coordinate.  Thus it's easy for
>> 10W to be interpreted as lat = -10.  Fixing this would required some
>> replumbing of PROJ since the two horizontal components would need to
>> be decoded together.
>>
>> On 7/2/20 9:17 AM, Andreas B wrote:
>>> Hi,
>>>
>>> Is there any formal description or definition of what kind of
>>> geographical coordinate format the proj command line tools support
>>> (input and output)?
>>>
>>> Several styles are presented in the docs, e.g.
>>> (https://proj.org/apps/cs2cs.html#using-proj-strings)
>>>
>>> 45d15'33.1" 111.5W
>>> 45d15.551666667N -111d30
>>> +45.25919444444 111d30'000w
>>>
>>> Any preferred format?
>>>
>>> Thanks,
>>> Andreas

-- 
Charles Karney <charles at karney.com>
Princeton, NJ

From panden at gmail.com  Fri Jul  3 00:14:41 2020
From: panden at gmail.com (Andreas B)
Date: Fri, 3 Jul 2020 09:14:41 +0200
Subject: [PROJ] Supported geographical coordinate formats
In-Reply-To: <4ea74fcc-3b3a-2b4a-8637-0bd923133866@karney.com>
References: <CAL2+-iVpycNDQqiF9hb-MDO+t=ZfoL=K6k+gM8sGkMqKpjKkSg@mail.gmail.com>
 <39727764-46a0-12de-4003-9a109b74d854@karney.com>
 <CAL2+-iUTjm4GTEXmu0KGP=jZ0t+U=EurKmD0rt9pd5rszPmT8g@mail.gmail.com>
 <4ea74fcc-3b3a-2b4a-8637-0bd923133866@karney.com>
Message-ID: <CAL2+-iUc_KNicU63=qs9PoTDDWmZ6qhmNjD=2Ddjn5SS76xNDQ@mail.gmail.com>

Right, so longitude is expected to be in the first input column and
latitude in the second. If you get this wrong proj wont warn you. Got
it, thanks.

PS! Is +proj=latlong the same as +proj=longlat?

Andreas

On Thu, Jul 2, 2020 at 5:57 PM Charles Karney <charles at karney.com> wrote:
>
> Because PROJ uses the order of the coordinates to distinguish latitude
> and longitude.  E.g.,
>
>    echo 4N 10W | cs2cs +proj=latlong
>
> =>
>
>    4dE     10dS 0.000
>
>
> On 7/2/20 9:43 AM, Andreas B wrote:
> > Thanks for answering Charles.
> >
> > I'm not sure if I understand. Why would 10W be interpreted as lat = -10?
> >
> >
> > Andreas
> >
> > On Thu, Jul 2, 2020 at 3:33 PM Charles Karney <charles at karney.com> wrote:
> >>
> >> One major usability issue with PROJ is that the hemisphere designators
> >> NESW *only* specify the sign of the coordinate.  Thus it's easy for
> >> 10W to be interpreted as lat = -10.  Fixing this would required some
> >> replumbing of PROJ since the two horizontal components would need to
> >> be decoded together.
> >>
> >> On 7/2/20 9:17 AM, Andreas B wrote:
> >>> Hi,
> >>>
> >>> Is there any formal description or definition of what kind of
> >>> geographical coordinate format the proj command line tools support
> >>> (input and output)?
> >>>
> >>> Several styles are presented in the docs, e.g.
> >>> (https://proj.org/apps/cs2cs.html#using-proj-strings)
> >>>
> >>> 45d15'33.1" 111.5W
> >>> 45d15.551666667N -111d30
> >>> +45.25919444444 111d30'000w
> >>>
> >>> Any preferred format?
> >>>
> >>> Thanks,
> >>> Andreas
>
> --
> Charles Karney <charles at karney.com>
> Princeton, NJ

From mwtoews at gmail.com  Sun Jul  5 16:06:37 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Mon, 6 Jul 2020 11:06:37 +1200
Subject: [PROJ] Supported geographical coordinate formats
In-Reply-To: <CAL2+-iUc_KNicU63=qs9PoTDDWmZ6qhmNjD=2Ddjn5SS76xNDQ@mail.gmail.com>
References: <CAL2+-iVpycNDQqiF9hb-MDO+t=ZfoL=K6k+gM8sGkMqKpjKkSg@mail.gmail.com>
 <39727764-46a0-12de-4003-9a109b74d854@karney.com>
 <CAL2+-iUTjm4GTEXmu0KGP=jZ0t+U=EurKmD0rt9pd5rszPmT8g@mail.gmail.com>
 <4ea74fcc-3b3a-2b4a-8637-0bd923133866@karney.com>
 <CAL2+-iUc_KNicU63=qs9PoTDDWmZ6qhmNjD=2Ddjn5SS76xNDQ@mail.gmail.com>
Message-ID: <CAM2FmMqskeC9vxKgxWHiOLH=YXwx7ORdAQYvCKTqKS_AF=NGSQ@mail.gmail.com>

On Fri, 3 Jul 2020 at 19:14, Andreas B <panden at gmail.com> wrote:
> PS! Is +proj=latlong the same as +proj=longlat?

Yup, these are all aliases: latlon, latlong, lonlat, longlat

https://proj.org/operations/conversions/latlon.html

From runette at gmail.com  Thu Jul  9 07:09:36 2020
From: runette at gmail.com (Paul Harwood)
Date: Thu, 9 Jul 2020 15:09:36 +0100
Subject: [PROJ] Axis Order in Custom Projection
Message-ID: <CAE8nN5O8c7Kh-A0-Vj0XJq8aZGU-m9vMyVvEpLPGJZsHTxmzYQ@mail.gmail.com>

Hi

I am working on a project to put GIS data into VR in Unity (see virgis.org
for more info - very early stages).

I am using Proj to convert Geospatial data into internal VR Space
coordinates for a model. I did this by defining a custom projection for the
internal model space ( of the form of "+proj=tmerc +datum=WGS84 +units=m
+no-defs +lat_0=53.316200583246534 +lon_0=-1.791218230167096" where the
lat_0 and lon_0 figures depend on the location of the model.).

This is working well in both directions.

However - one constant and annoying fact is that whilst all Geospatial CRS
are "Z-up" i.e. altitude is the Z dimension, VR space is "Y-up". It is
a purely procedural thing to swap the axis but it is a constant
irritation and cause of failures!

The ideal solution would be if the Proj coordinate operation produced
coordinates in "eun" axis order! Would solve a lot of problems. I did try
this to see if it was possible but (not unsurprisingly) got an error.

Is there any way to do this? Or is it so far from the expected usage that
it is just not possible?

Thanks in advanced for any and all comments.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200709/35399d5c/attachment.html>

From even.rouault at spatialys.com  Thu Jul  9 07:25:04 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 09 Jul 2020 16:25:04 +0200
Subject: [PROJ] Axis Order in Custom Projection
In-Reply-To: <CAE8nN5O8c7Kh-A0-Vj0XJq8aZGU-m9vMyVvEpLPGJZsHTxmzYQ@mail.gmail.com>
References: <CAE8nN5O8c7Kh-A0-Vj0XJq8aZGU-m9vMyVvEpLPGJZsHTxmzYQ@mail.gmail.com>
Message-ID: <11077622.l6ZJg9scQq@even-i700>

Paul,

you could do that by building a pipeline
( https://proj.org/operations/pipeline.html )
chaining the tmerc projection with a axisswap operation
( https://proj.org/operations/conversions/axisswap.html )

Even


> Hi
> 
> I am working on a project to put GIS data into VR in Unity (see virgis.org
> for more info - very early stages).
> 
> I am using Proj to convert Geospatial data into internal VR Space
> coordinates for a model. I did this by defining a custom projection for the
> internal model space ( of the form of "+proj=tmerc +datum=WGS84 +units=m
> +no-defs +lat_0=53.316200583246534 +lon_0=-1.791218230167096" where the
> lat_0 and lon_0 figures depend on the location of the model.).
> 
> This is working well in both directions.
> 
> However - one constant and annoying fact is that whilst all Geospatial CRS
> are "Z-up" i.e. altitude is the Z dimension, VR space is "Y-up". It is
> a purely procedural thing to swap the axis but it is a constant
> irritation and cause of failures!
> 
> The ideal solution would be if the Proj coordinate operation produced
> coordinates in "eun" axis order! Would solve a lot of problems. I did try
> this to see if it was possible but (not unsurprisingly) got an error.
> 
> Is there any way to do this? Or is it so far from the expected usage that
> it is just not possible?
> 
> Thanks in advanced for any and all comments.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200709/06c28b3d/attachment.html>

From runette at gmail.com  Thu Jul  9 08:11:43 2020
From: runette at gmail.com (Paul Harwood)
Date: Thu, 9 Jul 2020 16:11:43 +0100
Subject: [PROJ] Axis Order in Custom Projection
In-Reply-To: <11077622.l6ZJg9scQq@even-i700>
References: <CAE8nN5O8c7Kh-A0-Vj0XJq8aZGU-m9vMyVvEpLPGJZsHTxmzYQ@mail.gmail.com>
 <11077622.l6ZJg9scQq@even-i700>
Message-ID: <CAE8nN5Mv8bZKKuqKu-ZyZ=uJZoYfYdW2BbJ_iEFvkGeOZBAgxw@mail.gmail.com>

Thanks, I'll check it out.

On Thu, 9 Jul 2020 at 15:25, Even Rouault <even.rouault at spatialys.com>
wrote:

> Paul,
>
>
>
> you could do that by building a pipeline
>
> ( https://proj.org/operations/pipeline.html )
>
> chaining the tmerc projection with a axisswap operation
>
> ( https://proj.org/operations/conversions/axisswap.html )
>
>
>
> Even
>
>
>
>
>
> > Hi
>
> >
>
> > I am working on a project to put GIS data into VR in Unity (see
> virgis.org
>
> > for more info - very early stages).
>
> >
>
> > I am using Proj to convert Geospatial data into internal VR Space
>
> > coordinates for a model. I did this by defining a custom projection for
> the
>
> > internal model space ( of the form of "+proj=tmerc +datum=WGS84 +units=m
>
> > +no-defs +lat_0=53.316200583246534 +lon_0=-1.791218230167096" where the
>
> > lat_0 and lon_0 figures depend on the location of the model.).
>
> >
>
> > This is working well in both directions.
>
> >
>
> > However - one constant and annoying fact is that whilst all Geospatial
> CRS
>
> > are "Z-up" i.e. altitude is the Z dimension, VR space is "Y-up". It is
>
> > a purely procedural thing to swap the axis but it is a constant
>
> > irritation and cause of failures!
>
> >
>
> > The ideal solution would be if the Proj coordinate operation produced
>
> > coordinates in "eun" axis order! Would solve a lot of problems. I did try
>
> > this to see if it was possible but (not unsurprisingly) got an error.
>
> >
>
> > Is there any way to do this? Or is it so far from the expected usage that
>
> > it is just not possible?
>
> >
>
> > Thanks in advanced for any and all comments.
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200709/a5e6765b/attachment.html>

From urschrei at gmail.com  Mon Jul 13 10:39:23 2020
From: urschrei at gmail.com (=?utf-8?Q?Stephan_H=C3=BCgel?=)
Date: Mon, 13 Jul 2020 18:39:23 +0100
Subject: [PROJ] Advice for debugging network callback implementation
Message-ID: <789EA63E-E5AE-4A0D-A28F-E6BE53ACFD23@gmail.com>

I’m currently implementing PROJ's network callback functionality for the proj-rs Rust crate. I’ve got a skeleton of the functionality, but the docs are a little vague on some points, which is making debugging tricky. Specifically, I’ve implemented the four callbacks (open_cbk, close_cbk, get_header_value_cbk, read_range_cbk), and I’ve set up my test as follows:

- chosen EPSG codes that will trigger a download: from EPSG4326, to EPSG:4326+3855
- create new proj context with proj_context_create
- disabled the grid cache
- enabled the network callbacks using set_network_callbacks
- used the context to create a transform between known EPSG codes using proj_create_crs_to_crs
- A call to open_cbk is triggered:

The url is https://cdn.proj.org/us_nga_egm08_25.tif, with a “Range: bytes=0-16384” header.
I can confirm that I get 1639 bytes of content back, along with a response header: “content-range: bytes 0-1638/93581”
I cast the response bytes to a void pointer, and assign it to the buffer that is passed into open_cbk by PROJ.
I assign the headers and a client instance (this is an implementation detail for now) to a struct which I cast to a void pointer and then to a *PROJ_NETWORK_HANDLE, which I return.

PROJ then calls get_header_value_cbk, passing in *PROJ_NETWORK_HANDLE and the header name, to check the value of "content-range”, which is (again, correctly I believe) "bytes 0-16384/80585622”

At this point, I get an error: "failed to load datum shift file”.

I’m now not sure where to proceed next: Is there any special format or structure I should be assigning to the bytes from the GET call before I cast them to a void pointer and put them into the buffer? Is there any way I can verify that I’m getting back what I should? I can certainly manually read the first 16385 bytes from the tif, and compare them to what I get back over the wire.
What is PROJ trying to do as a next step after it checks the header value, as this is the step which is currently failing?

Any advice gratefully received.


-- 
steph



From even.rouault at spatialys.com  Mon Jul 13 11:05:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jul 2020 20:05:30 +0200
Subject: [PROJ] Advice for debugging network callback implementation
In-Reply-To: <789EA63E-E5AE-4A0D-A28F-E6BE53ACFD23@gmail.com>
References: <789EA63E-E5AE-4A0D-A28F-E6BE53ACFD23@gmail.com>
Message-ID: <7939711.4qL1OGyGT8@even-i700>

Hi,

> I’m currently implementing PROJ's network callback functionality for the
> proj-rs Rust crate. I’ve got a skeleton of the functionality, but the docs
> are a little vague on some points, which is making debugging tricky.
> Specifically, I’ve implemented the four callbacks (open_cbk, close_cbk,
> get_header_value_cbk, read_range_cbk), and I’ve set up my test as follows:
> 
> - chosen EPSG codes that will trigger a download: from EPSG4326, to
> EPSG:4326+3855 - create new proj context with proj_context_create
> - disabled the grid cache
> - enabled the network callbacks using set_network_callbacks
> - used the context to create a transform between known EPSG codes using
> proj_create_crs_to_crs - A call to open_cbk is triggered:
> 
> The url is https://cdn.proj.org/us_nga_egm08_25.tif, with a “Range:
> bytes=0-16384” header.

If offset == 0 and size_to_read == 16384, you should issue a 
"Range: bytes=0-16383" header, since this is the HTTP convention is to use inclusive start and 
end offset. See
https://github.com/OSGeo/PROJ/blob/master/src/networkfilemanager.cpp#L1693

> I can confirm that I get 1639 bytes of content back,
> along with a response header: “content-range: bytes 0-1638/93581”

The values you report are not consistent with your above range

> I cast
> the response bytes to a void pointer, and assign it to the buffer that is
> passed into open_cbk by PROJ. I assign the headers and a client instance
> (this is an implementation detail for now) to a struct which I cast to a
> void pointer and then to a *PROJ_NETWORK_HANDLE, which I return.

Sounds fine

> I’m now not sure where to proceed next: Is there any special format or
> structure I should be assigning to the bytes from the GET call before I
> cast them to a void pointer and put them into the buffer?

No. Up to you to create your own structure.

> Is there any way
> I can verify that I’m getting back what I should? I can certainly manually
> read the first 16385 bytes from the tif, and compare them to what I get
> back over the wire. What is PROJ trying to do as a next step after it
> checks the header value, as this is the step which is currently failing?

You could look at the default curl implementation. See entry points at
https://github.com/OSGeo/PROJ/blob/master/src/networkfilemanager.cpp#L1907

When using that default implementation, you can set the PROJ_CURL_VERBOSE 
environment variable (to any value), and you'll get curl verbose traces for requests issued.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200713/f31d9d04/attachment.html>

From djsuson at gmail.com  Mon Jul 13 12:01:02 2020
From: djsuson at gmail.com (Daniel Suson)
Date: Mon, 13 Jul 2020 14:01:02 -0500
Subject: [PROJ] Requesting help with displaying projection
Message-ID: <f0bcced6-ed35-9ff2-217e-96d45173903b@gmail.com>

     I am implementing a program that as part of its functionality takes 
a sky map stored in memory as a two dimensional array and displays it in 
various map projections on to the screen. It currently implements a 
Mollweide projection via a hard coded routine. I would like to replace 
this with calls to proj. The logical path would be

     (i,j) --> (latitude, longitude) --> (u,v) --> (x,y)

where (i,j) are the coordinates of the entry in the two dimensional 
array, (latitude, longitude) are the latitude/longitude values 
associated with the array coordinates, (u,v) are the position values in 
the projection coordinate system, and (x,y) is the equivalent pixel 
location on the display array.

     I have all of the steps up to the (u,v) --> (x,y) conversion. 
Complicating this problem is that programming-wise it is easier to start 
with a pixel location and go backwards. This will require first checking 
to see if (x,y) is even a valid location for the associated projection's 
(u,v) position. After than it should be a simple matter of doing a 
inverse transformation to find the value in the (i,j) array element.

     While I'm continuing to try and solve this myself, I'm hoping that 
someone in the community may already know how to do this in order to 
reduce the time spent on this step. Any help would be greatly appreciated!

Sincerely,

Dan


From urschrei at gmail.com  Tue Jul 14 08:29:08 2020
From: urschrei at gmail.com (=?utf-8?Q?Stephan_H=C3=BCgel?=)
Date: Tue, 14 Jul 2020 16:29:08 +0100
Subject: [PROJ] Advice for debugging network callback implementation
In-Reply-To: <7939711.4qL1OGyGT8@even-i700>
References: <789EA63E-E5AE-4A0D-A28F-E6BE53ACFD23@gmail.com>
 <7939711.4qL1OGyGT8@even-i700>
Message-ID: <6F52BF6B-A412-4F54-975E-A6BB900D075C@gmail.com>



> On 13 Jul 2020, at 19:05, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Hi,
>  
> > I’m currently implementing PROJ's network callback functionality for the
> > proj-rs Rust crate. I’ve got a skeleton of the functionality, but the docs
> > are a little vague on some points, which is making debugging tricky.
> > Specifically, I’ve implemented the four callbacks (open_cbk, close_cbk,
> > get_header_value_cbk, read_range_cbk), and I’ve set up my test as follows:
> > 
> > - chosen EPSG codes that will trigger a download: from EPSG4326, to
> > EPSG:4326+3855 - create new proj context with proj_context_create
> > - disabled the grid cache
> > - enabled the network callbacks using set_network_callbacks
> > - used the context to create a transform between known EPSG codes using
> > proj_create_crs_to_crs - A call to open_cbk is triggered:
> > 
> > The url is https://cdn.proj.org/us_nga_egm08_25.tif, with a “Range:
> > bytes=0-16384” header.
>  
> If offset == 0 and size_to_read == 16384, you should issue a 
> "Range: bytes=0-16383" header, since this is the HTTP convention is to use inclusive start and end offset. See
> https://github.com/OSGeo/PROJ/blob/master/src/networkfilemanager.cpp#L1693
>  
> > I can confirm that I get 1639 bytes of content back,
> > along with a response header: “content-range: bytes 0-1638/93581”
>  
> The values you report are not consistent with your above range
>  
> > I cast
> > the response bytes to a void pointer, and assign it to the buffer that is
> > passed into open_cbk by PROJ. I assign the headers and a client instance
> > (this is an implementation detail for now) to a struct which I cast to a
> > void pointer and then to a *PROJ_NETWORK_HANDLE, which I return.
>  
> Sounds fine
>  
> > I’m now not sure where to proceed next: Is there any special format or
> > structure I should be assigning to the bytes from the GET call before I
> > cast them to a void pointer and put them into the buffer?
>  
> No. Up to you to create your own structure.

>  
> > Is there any way
> > I can verify that I’m getting back what I should? I can certainly manually
> > read the first 16385 bytes from the tif, and compare them to what I get
> > back over the wire. What is PROJ trying to do as a next step after it
> > checks the header value, as this is the step which is currently failing?
>  
> You could look at the default curl implementation. See entry points at
> https://github.com/OSGeo/PROJ/blob/master/src/networkfilemanager.cpp#L1907
>  
> When using that default implementation, you can set the PROJ_CURL_VERBOSE environment variable (to any value), and you'll get curl verbose traces for requests issued.
>  
> Even
>  
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com

Hi Even,

This was really useful, thanks. It looks like I have something with minimal functionality working (network calls, header lookups, range reads, and network close calls are happening, and cache.db is being populated with valid data from the network, and being correctly read for subsequent calls using the same transform)

— 
s

From kilian.demeulemeester at yellowscan-lidar.com  Thu Jul 16 07:48:38 2020
From: kilian.demeulemeester at yellowscan-lidar.com (Kilian Demeulemeester)
Date: Thu, 16 Jul 2020 16:48:38 +0200
Subject: [PROJ] API migration - Offset on z-axis
Message-ID: <57f2824c-e6e5-c0ec-05c9-4b2bdbd08a7b@yellowscan-lidar.com>

Hello everyone.

Our team upgraded proj API from 4 to 6.

We noticed difference between the result when using projection in 
Switzerland (for instance EPSG:2056).

Here, I try to recap the difference between our implementation:

*Initial implementation (PROJ 4):*

// Input: x,y,z be coordinate expressed in EPSG:4978

projPJ pj_in;
projPJ pj_out;

pj_in = pj_init_plus("+init=epsg:4978");
pj_out = pj_init_plus("+init=epsg:2056");

pj_transform(pj_in, pj_out, 1, 1, x, y, z);

*Current implementation (PROJ 6)*

// Input: PJ_COORD coord expressed in EPSG:4978
PJ_CONTEXT* context = projContextCreate();
PJ* p1 = proj_create_crs_to_crs(context, "EPSG:4978", "EPSG:2056", NULL);
PJ* proj = proj_normalize_for_visualization(context, p1);
coord = proj_trans(proj , PJ_FWD, coord);

---


We noticed that the output using our current implementation yield the 
wrong result: there is an offset along the z-axis.

Are we doing something wrong?

Thank you very much.



Kilian Demeulemeester
Software Developer - R&D

[https://yellowscan-lidar.com/]

1 Chemin de fescau
34980 Montferrier-Sur-Lez - France
Tel: +33 (0)4 11 93 14 06
yellowscan-lidar.com [https://yellowscan-lidar.com/]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200716/b9379c0d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: x-disclaimer-534644925-0.png
Type: image/png
Size: 1125 bytes
Desc: x-disclaimer-534644925-0.png
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200716/b9379c0d/attachment.png>

From even.rouault at spatialys.com  Thu Jul 16 08:21:25 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jul 2020 17:21:25 +0200
Subject: [PROJ] API migration - Offset on z-axis
In-Reply-To: <57f2824c-e6e5-c0ec-05c9-4b2bdbd08a7b@yellowscan-lidar.com>
References: <57f2824c-e6e5-c0ec-05c9-4b2bdbd08a7b@yellowscan-lidar.com>
Message-ID: <23120741.bffzfRIeeh@even-i700>

Kilian,

> Our team upgraded proj API from 4 to 6.
> 
> We noticed difference between the result when using projection in
> Switzerland (for instance EPSG:2056).
> 
> Here, I try to recap the difference between our implementation:
> 
> *Initial implementation (PROJ 4):*
> 
> // Input: x,y,z be coordinate expressed in EPSG:4978
> 
> projPJ pj_in;
> projPJ pj_out;
> 
> pj_in = pj_init_plus("+init=epsg:4978");
> pj_out = pj_init_plus("+init=epsg:2056");
> 
> pj_transform(pj_in, pj_out, 1, 1, x, y, z);
> 
> *Current implementation (PROJ 6)*
> 
> // Input: PJ_COORD coord expressed in EPSG:4978
> PJ_CONTEXT* context = projContextCreate();
> PJ* p1 = proj_create_crs_to_crs(context, "EPSG:4978", "EPSG:2056", NULL);
> PJ* proj = proj_normalize_for_visualization(context, p1);
> coord = proj_trans(proj , PJ_FWD, coord);
> 
> ---
> 
> 
> We noticed that the output using our current implementation yield the
> wrong result: there is an offset along the z-axis.
> 
> Are we doing something wrong?

No, you aren't doing something wrong. This is more a feature/bug of PROJ, and some 
ambiguity in how coordinate operations are presented in the EPSG database

First, what can help when you're investigating issue is to use "projinfo" to look at the 
pipelines. 

For example with latest PROJ master:

projinfo -s EPSG:4978 -t EPSG:2056  -o PROJ
Candidate operations found: 1
-------------------------------------
Operation No. 1:

unknown id, Conversion from WGS 84 (geocentric) to WGS 84 (geog2D) + Inverse of CH1903+ 
to WGS 84 (1) + Swiss Oblique Mercator 1995, 1 m, Europe - Liechtenstein and Switzerland

PROJ string:
+proj=pipeline +step +inv +proj=cart +ellps=WGS84 +step +proj=push +v_3 +step +proj=cart 
+ellps=WGS84 +step +proj=helmert +x=-674.374 +y=-15.056 +z=-405.346 +step +inv 
+proj=cart +ellps=bessel +step +proj=pop +v_3 +step +proj=somerc 
+lat_0=46.9524055555556 +lon_0=7.43958333333333 +k_0=1 +x_0=2600000 +y_0=1200000 
+ellps=bessel

You can see that there are a push v_3 and pop v_3 steps surrounding the cartesian 
conversions and the Helmert transformation. Their effect is to avoid the ellipsoidal height to 
be modified during the Helmert transformation. 
This behaviour is based on the EPSG dataset presenting the Helmert transformation to be in 
the geographic 2D domain, due to the source & target CRS for which the "CH1903+ to WGS 
84 (1)" operation is presented being 2D themselves. So for an operation on 2D CRS, changing 
ellipsoidal height doesn't make sense as there's no ellipsoidal height for such CRS.
Later discussions with experts at EPSG revealed that the intent is however that when using 
the 3D CRS based on those 2D CRS, ellipsoidal height transformation should still be done.

So let's look when using EPSG:4979 (WGS 84 3D geographic) instead of EPSG:4978:

$ projinfo -s EPSG:4979 -t EPSG:2056  -o PROJ
Candidate operations found: 1
-------------------------------------
Operation No. 1:

unknown id, Inverse of CH1903+ to WGS 84 (1) + Swiss Oblique Mercator 1995, 1 m, Europe - 
Liechtenstein and Switzerland

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg 
+z_in=m +xy_out=rad +z_out=m +step +proj=push +v_3 +step +proj=cart +ellps=WGS84 
+step +proj=helmert +x=-674.374 +y=-15.056 +z=-405.346 +step +inv +proj=cart 
+ellps=bessel +step +proj=pop +v_3 +step +proj=somerc +lat_0=46.9524055555556 
+lon_0=7.43958333333333 +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel

Same behaviour as above due to the fact that even if EPSG:4979 is 3D, EPSG:2056 is 2D.
If adding the --3d switch to force its promotion to 3D:

$ projinfo -s EPSG:4979 -t EPSG:2056  -o PROJ --3d
Candidate operations found: 1
-------------------------------------
Operation No. 1:

unknown id, Inverse of CH1903+ to WGS 84 (1) + Swiss Oblique Mercator 1995, 1 m, Europe - 
Liechtenstein and Switzerland

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg 
+z_in=m +xy_out=rad +z_out=m +step +proj=cart +ellps=WGS84 +step +proj=helmert 
+x=-674.374 +y=-15.056 +z=-405.346 +step +inv +proj=cart +ellps=bessel +step +proj=somerc 
+lat_0=46.9524055555556 +lon_0=7.43958333333333 +k_0=1 +x_0=2600000 +y_0=1200000 
+ellps=bessel

one can see that there is no more a push / pop v_3.

However if trying the --3d trick with EPSG:4978 this doesn't lead to the expected result 
currently. So that part of the behaviour is more a bug on PROJ side.

API wise, --3d behaviour is obtained with using proj_crs_promote_to_3D().

For your particular case, you can either use manually the corrected pipeline without the push 
/ pop v_3, or use a more 2-step approach with a first conversion between EPSG:4978 and 
EPSG:4979 chained with a transformation between EPSG:4979 and EPSG:2056 promoted to 
3D. The correct behaviour on ellipsoidal height when using a Geographic 3D CRS was fixed in 
"recent" PROJ 6 or 7 versions, so you'd better using the latest PROJ 7.1.0
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200716/73afe5be/attachment-0001.html>

From ROGER.K.WELLS at leidos.com  Fri Jul 17 12:20:36 2020
From: ROGER.K.WELLS at leidos.com (Wells, Roger K.)
Date: Fri, 17 Jul 2020 19:20:36 +0000
Subject: [PROJ] legacy problem building v5.2.0 on Windows10
Message-ID: <e84ce70c9743463a867e9c213ed7204a@leidos.com>

We have been using proj for a long time and are now in the process of
moving up to the newer releases.
The host OS is Windows 10, up to date & build environment is
msys2/mingw64 up to date as of January.

I still need access to the now deprecated api's: pj_init, pj_fwd, etc 
for a while.
A few months ago I pulled this off with v5.2.0, v6.3.2 & maybe v7.?.?.
Now, when I build v5.2.0 I do not have access to those api's. (the dll's
I built in January do though)
and I simply can't remember what I did other than execute ./configure &
make after un-tarring the distribution file.
Any hints will be very much appreciated.
thanks

-- 
Roger Wells, P.E.
leidos
221 Third St
Newport, RI 02840
401-847-4210 (voice)
401-849-1585 (fax)
roger.k.wells at leidos.com


From idan at miara.com  Fri Jul 24 00:22:56 2020
From: idan at miara.com (Idan Miara)
Date: Fri, 24 Jul 2020 10:22:56 +0300
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <20200724065853.y55c7veqxvpvw3vq@norbit.de>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
Message-ID: <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>

Hi all,

Jürgen suggests proj 7.1 can't be included in OSGeo4W/QGIS installer
because proj-data is 500MB, which is too big.
Is it intentionally so big?

Kind regards,
Idan


---------- Forwarded message ---------
From: Jürgen E. Fischer <jef at norbit.de>
Date: Fri, 24 Jul 2020, 09:58
Subject: Re: [osgeo4w-dev] Gdal 3.1.1, Proj 7.1.0 availablility
To: <osgeo4w-dev at lists.osgeo.org>


Hi Idan,

On Fri, 24. Jul 2020 at 08:52:15 +0300, Idan Miara wrote:
> What's the reason Gdal 3.1.x and Proj 7.1.x is not available in OSGeo4W?

proj-data is 500MB and makes the QGIS standalone installer explode.


Jürgen

-- 
Jürgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
Dipl.-Inf. (FH)             Rheinstraße 13          Fax. +49-4931-918175-50
Software Engineer           D-26506 Norden            https://www.norbit.de
QGIS release manager (PSC)  Germany                    IRC: jef on FreeNode
_______________________________________________
osgeo4w-dev mailing list
osgeo4w-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/osgeo4w-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/42a628ff/attachment.html>

From jef at norbit.de  Fri Jul 24 00:31:41 2020
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Fri, 24 Jul 2020 09:31:41 +0200
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
Message-ID: <20200724073141.wfmm5uqjtmjp4h66@norbit.de>

Hi Idan,

On Fri, 24. Jul 2020 at 10:22:56 +0300, Idan Miara wrote:
> Jürgen suggests proj 7.1 can't be included in OSGeo4W/QGIS installer
> because proj-data is 500MB, which is too big.
> Is it intentionally so big?

It includes all the grids.  And it's not a dependency.  The grids can also be
downloaded dynamically, so using proj-data is probably only intended to be used
if that's not possible for some reason.  You can also interactively download
the grids that you need via cdn.proj.org.  QGIS does currently not support the
dynamic download and we don't know which grid the users will need upfront - so
either including none or all seems to be the only option.  Given that QGIS
previously shipped several grids by default, shipping none probably isn't an
option either - as that would break some installations.


Jürgen

-- 
Jürgen E. Fischer         norBIT GmbH               Tel. +49-4931-918175-31
Dipl.-Inf. (FH)           Rheinstraße 13            Fax. +49-4931-918175-50
Software Engineer         D-26506 Norden              https://www.norbit.de
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/24cf660d/attachment.sig>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Pflichtangaben
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/24cf660d/attachment.ksh>

From sebastic at xs4all.nl  Fri Jul 24 00:41:02 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 24 Jul 2020 09:41:02 +0200
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
Message-ID: <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>

On 7/24/20 9:31 AM, Jürgen E. Fischer wrote:
> On Fri, 24. Jul 2020 at 10:22:56 +0300, Idan Miara wrote:
>> Jürgen suggests proj 7.1 can't be included in OSGeo4W/QGIS installer
>> because proj-data is 500MB, which is too big.
>> Is it intentionally so big?
> 
> It includes all the grids.  And it's not a dependency.  The grids can also be
> downloaded dynamically, so using proj-data is probably only intended to be used
> if that's not possible for some reason.  You can also interactively download
> the grids that you need via cdn.proj.org.  QGIS does currently not support the
> dynamic download and we don't know which grid the users will need upfront - so
> either including none or all seems to be the only option.  Given that QGIS
> previously shipped several grids by default, shipping none probably isn't an
> option either - as that would break some installations.

You could split up the grids per region and only depend on a subset
(excluding au_*, ca_*, de_* & us_* removes most of the very large grids)
and suggest the rest for the users to manually install when they need it.

100.00%  523111200  ( 523.11 MB)  .
 15.41%   80585622  (  80.59 MB)  ./us_nga_egm08_25.tif
 13.96%   73022201  (  73.02 MB)  ./de_lgl_bw_BWTA2017.tif
  5.21%   27272664  (  27.27 MB)
./au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
  3.26%   17033175  (  17.03 MB)  ./us_noaa_g2012bu0.tif
  3.21%   16767965  (  16.77 MB)  ./us_noaa_geoid09_conus.tif
  3.20%   16742155  (  16.74 MB)  ./us_noaa_g2018u0.tif
  3.14%   16451024  (  16.45 MB)  ./us_noaa_geoid03_conus.tif
  2.44%   12781759  (  12.78 MB)  ./au_ga_AUSGeoid09_V1.01.tif
  2.19%   11478497  (  11.48 MB)  ./us_noaa_geoid06_ak.tif
  2.17%   11342483  (  11.34 MB)  ./us_noaa_g2012ba0.tif
  2.16%   11279068  (  11.28 MB)  ./us_noaa_geoid09_ak.tif
  2.11%   11031336  (  11.03 MB)  ./ca_nrc_CGG2013an83.tif
  2.11%   11030895  (  11.03 MB)  ./ca_nrc_CGG2013n83.tif
  2.08%   10906276  (  10.91 MB)  ./ca_nrc_CGG2013ai08.tif
  2.08%   10906091  (  10.91 MB)  ./ca_nrc_CGG2013i08.tif
  1.53%    8002286  (   8.00 MB)  ./ca_nrc_ON27CSv1.tif
  1.49%    7784410  (   7.78 MB)  ./ca_nrc_ntv2_0.tif
  1.40%    7300425  (   7.30 MB)  ./ca_nrc_ON76CSv1.tif
  1.36%    7114024  (   7.11 MB)  ./dk_sdfe_gvr2016.tif
  1.18%    6180460  (   6.18 MB)  ./ca_nrc_MAY76V20.tif
  1.13%    5934098  (   5.93 MB)  ./au_icsm_National_84_02_07_01.tif
  1.12%    5839686  (   5.84 MB)  ./au_ga_AUSGeoid2020_20180201.tif
  1.00%    5232082  (   5.23 MB)  ./nz_linz_nzgeoid2016.tif

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/1e91e5b4/attachment.sig>

From jef at norbit.de  Fri Jul 24 01:00:38 2020
From: jef at norbit.de (=?utf-8?Q?J=C3=BCrgen_E=2E?= Fischer)
Date: Fri, 24 Jul 2020 10:00:38 +0200
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
Message-ID: <20200724080038.qtafts2v4tyanev5@norbit.de>

Hi Bas,

On Fri, 24. Jul 2020 at 09:41:02 +0200, Sebastiaan Couwenberg wrote:
> You could split up the grids per region and only depend on a subset
> (excluding au_*, ca_*, de_* & us_* removes most of the very large grids)
> and suggest the rest for the users to manually install when they need it.
 
I don't want to exclude de completely - esp. because there are grids that were
previously shipped among it.  The ridiculously large Baden-Württemberg grid
wasn't and must be excluded.


Jürgen

-- 
Jürgen E. Fischer         norBIT GmbH               Tel. +49-4931-918175-31
Dipl.-Inf. (FH)           Rheinstraße 13            Fax. +49-4931-918175-50
Software Engineer         D-26506 Norden              https://www.norbit.de
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/39b2c593/attachment.sig>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Pflichtangaben
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/39b2c593/attachment.ksh>

From sebastic at xs4all.nl  Fri Jul 24 01:16:01 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 24 Jul 2020 10:16:01 +0200
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <20200724080038.qtafts2v4tyanev5@norbit.de>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
 <20200724080038.qtafts2v4tyanev5@norbit.de>
Message-ID: <725adb14-09f5-92e1-c9bd-828993efc966@xs4all.nl>

On 7/24/20 10:00 AM, Jürgen E. Fischer wrote:
> On Fri, 24. Jul 2020 at 09:41:02 +0200, Sebastiaan Couwenberg wrote:
>> You could split up the grids per region and only depend on a subset
>> (excluding au_*, ca_*, de_* & us_* removes most of the very large grids)
>> and suggest the rest for the users to manually install when they need it.
>  
> I don't want to exclude de completely - esp. because there are grids that were
> previously shipped among it.  The ridiculously large Baden-Württemberg grid
> wasn't and must be excluded.

Then perhaps split the grids by size similar to the
gmt-gshhg-{low,high,full} packages.

The gmt package in Debian only Recommends gmt-gshhg-low because of size
constraints for OSGeoLive, despite the authors wanting the full package
installed by default.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/dc431e93/attachment-0001.sig>

From j1 at jimenezshaw.com  Fri Jul 24 01:31:14 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 24 Jul 2020 10:31:14 +0200
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <725adb14-09f5-92e1-c9bd-828993efc966@xs4all.nl>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
 <20200724080038.qtafts2v4tyanev5@norbit.de>
 <725adb14-09f5-92e1-c9bd-828993efc966@xs4all.nl>
Message-ID: <CADRrdKu3By5WiKOuCSvJ8DAR2vPkP_jV6qMr-9GG1i_t8nyUNg@mail.gmail.com>

Just one comment: if you have several programs that use proj-data, and each
one installs 500 MB, sounds like a waste of space, right?
Does it make sense to install proj-data only once?

Regards
Javier

El vie., 24 jul. 2020 10:16, Sebastiaan Couwenberg <sebastic at xs4all.nl>
escribió:

> On 7/24/20 10:00 AM, Jürgen E. Fischer wrote:
> > On Fri, 24. Jul 2020 at 09:41:02 +0200, Sebastiaan Couwenberg wrote:
> >> You could split up the grids per region and only depend on a subset
> >> (excluding au_*, ca_*, de_* & us_* removes most of the very large grids)
> >> and suggest the rest for the users to manually install when they need
> it.
> >
> > I don't want to exclude de completely - esp. because there are grids
> that were
> > previously shipped among it.  The ridiculously large Baden-Württemberg
> grid
> > wasn't and must be excluded.
>
> Then perhaps split the grids by size similar to the
> gmt-gshhg-{low,high,full} packages.
>
> The gmt package in Debian only Recommends gmt-gshhg-low because of size
> constraints for OSGeoLive, despite the authors wanting the full package
> installed by default.
>
> Kind Regards,
>
> Bas
>
> --
>  GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/b3e32e9d/attachment.html>

From kreve at sdfe.dk  Fri Jul 24 02:28:48 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 24 Jul 2020 09:28:48 +0000
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <CADRrdKu3By5WiKOuCSvJ8DAR2vPkP_jV6qMr-9GG1i_t8nyUNg@mail.gmail.com>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
 <20200724080038.qtafts2v4tyanev5@norbit.de>
 <725adb14-09f5-92e1-c9bd-828993efc966@xs4all.nl>
 <CADRrdKu3By5WiKOuCSvJ8DAR2vPkP_jV6qMr-9GG1i_t8nyUNg@mail.gmail.com>
Message-ID: <1e0b70279443441bba3252235c801c10@sdfe.dk>

Installing proj-data only once is the intended default use case. As far as I am aware this is how
all the packaging systems that include proj-data handles this (with conda perhaps being the
exception?).

As for the rest of the discussion, it is quite difficult to do The Right Thing regarding distribution
of transformation grids. Previously when we provided smaller regional packages we got complaints
because it wasn’t bundled as one big package, now that we do just that it is also seen to be a
problem (by some users at least).

The current trend is that transformation grids become larger and is used more frequently in new
transformations, so we can reasonable expect the weight of the proj-data package to increase
in the coming years. Even if we again create regional packages they will at some point become
too big to include by default in software like QGIS. That can of course be solved by dividing the
packages into even smaller regions but that very quickly becomes a pain to maintain and package.

The dynamical downloading of grids is really the best we can do to cater to the most users. I want
to encourage everyone to incorporate the dynamic downloading option into their software,
since that will be the most flexible way of providing your users with the necessary transformation
data. I am aware that it in some cases that is difficult to achieve, Nyall Dawson has provided good
arguments for why doing so in QGIS is not as easy as one might expect. I hope that can be resolved
in the future.

/Kristian

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Javier Jimenez Shaw
Sent: 24. juli 2020 10:31
To: PROJ at lists.osgeo.org
Subject: Re: [PROJ] proj-data is 500MB

Just one comment: if you have several programs that use proj-data, and each one installs 500 MB, sounds like a waste of space, right?
Does it make sense to install proj-data only once?

Regards
Javier
El vie., 24 jul. 2020 10:16, Sebastiaan Couwenberg <sebastic at xs4all.nl<mailto:sebastic at xs4all.nl>> escribió:
On 7/24/20 10:00 AM, Jürgen E. Fischer wrote:
> On Fri, 24. Jul 2020 at 09:41:02 +0200, Sebastiaan Couwenberg wrote:
>> You could split up the grids per region and only depend on a subset
>> (excluding au_*, ca_*, de_* & us_* removes most of the very large grids)
>> and suggest the rest for the users to manually install when they need it.
>
> I don't want to exclude de completely - esp. because there are grids that were
> previously shipped among it.  The ridiculously large Baden-Württemberg grid
> wasn't and must be excluded.

Then perhaps split the grids by size similar to the
gmt-gshhg-{low,high,full} packages.

The gmt package in Debian only Recommends gmt-gshhg-low because of size
constraints for OSGeoLive, despite the authors wanting the full package
installed by default.

Kind Regards,

Bas

--
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/c45bd968/attachment.html>

From jmckenna at gatewaygeomatics.com  Fri Jul 24 06:38:35 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 24 Jul 2020 10:38:35 -0300
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <1e0b70279443441bba3252235c801c10@sdfe.dk>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
 <20200724080038.qtafts2v4tyanev5@norbit.de>
 <725adb14-09f5-92e1-c9bd-828993efc966@xs4all.nl>
 <CADRrdKu3By5WiKOuCSvJ8DAR2vPkP_jV6qMr-9GG1i_t8nyUNg@mail.gmail.com>
 <1e0b70279443441bba3252235c801c10@sdfe.dk>
Message-ID: <11573140-cbf2-da5f-2a21-461383445327@gatewaygeomatics.com>

For my (MS4W) packaging use I needed a full list of today's grid files 
and sizes (351 files, 504 MB), which might be useful to see for other 
packagers as they decide how to handle this: 
https://gatewaygeomatics.com/dl/proj-data-size-2020-07-24.txt

(of course a cooler way is to use the viewer at https://cdn.proj.org/ )

-jeff







-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/




On 2020-07-24 6:28 a.m., Kristian Evers wrote:
> Installing proj-data only once is the intended default use case. As far 
> as I am aware this is how
> 
> all the packaging systems that include proj-data handles this (with 
> conda perhaps being the
> 
> exception?).
> 
> As for the rest of the discussion, it is quite difficult to do The Right 
> Thing regarding distribution
> 
> of transformation grids. Previously when we provided smaller regional 
> packages we got complaints
> 
> because it wasn’t bundled as one big package, now that we do just that 
> it is also seen to be a
> 
> problem (by some users at least).
> 
> The current trend is that transformation grids become larger and is used 
> more frequently in new
> 
> transformations, so we can reasonable expect the weight of the proj-data 
> package to increase
> 
> in the coming years. Even if we again create regional packages they will 
> at some point become
> 
> too big to include by default in software like QGIS. That can of course 
> be solved by dividing the
> 
> packages into even smaller regions but that very quickly becomes a pain 
> to maintain and package.
> 
> The dynamical downloading of grids is really the best we can do to cater 
> to the most users. I want
> 
> to encourage everyone to incorporate the dynamic downloading option into 
> their software,
> 
> since that will be the most flexible way of providing your users with 
> the necessary transformation
> 
> data. I am aware that it in some cases that is difficult to achieve, 
> Nyall Dawson has provided good
> 
> arguments for why doing so in QGIS is not as easy as one might expect. I 
> hope that can be resolved
> 
> in the future.
> 
> /Kristian
> 
> *From:*PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Javier Jimenez 
> Shaw
> *Sent:* 24. juli 2020 10:31
> *To:* PROJ at lists.osgeo.org
> *Subject:* Re: [PROJ] proj-data is 500MB
> 
> Just one comment: if you have several programs that use proj-data, and 
> each one installs 500 MB, sounds like a waste of space, right?
> 
> Does it make sense to install proj-data only once?
> 
> Regards
> 
> Javier
> 
> El vie., 24 jul. 2020 10:16, Sebastiaan Couwenberg <sebastic at xs4all.nl 
> <mailto:sebastic at xs4all.nl>> escribió:
> 
>     On 7/24/20 10:00 AM, Jürgen E. Fischer wrote:
>      > On Fri, 24. Jul 2020 at 09:41:02 +0200, Sebastiaan Couwenberg wrote:
>      >> You could split up the grids per region and only depend on a subset
>      >> (excluding au_*, ca_*, de_* & us_* removes most of the very
>     large grids)
>      >> and suggest the rest for the users to manually install when they
>     need it.
>      >
>      > I don't want to exclude de completely - esp. because there are
>     grids that were
>      > previously shipped among it.  The ridiculously large
>     Baden-Württemberg grid
>      > wasn't and must be excluded.
> 
>     Then perhaps split the grids by size similar to the
>     gmt-gshhg-{low,high,full} packages.
> 
>     The gmt package in Debian only Recommends gmt-gshhg-low because of size
>     constraints for OSGeoLive, despite the authors wanting the full package
>     installed by default.
> 
>     Kind Regards,
> 
>     Bas
> 
>     -- 
>       GPG Key ID: 4096R/6750F10AE88D4AF1
>     Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> 
>     _______________________________________________
>     PROJ mailing list
>     PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/proj
> 
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> 


From howard at hobu.co  Fri Jul 24 06:50:51 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 24 Jul 2020 08:50:51 -0500
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <725adb14-09f5-92e1-c9bd-828993efc966@xs4all.nl>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
 <20200724080038.qtafts2v4tyanev5@norbit.de>
 <725adb14-09f5-92e1-c9bd-828993efc966@xs4all.nl>
Message-ID: <2EA32970-BC32-4387-BCDD-E47C95177114@hobu.co>



> On Jul 24, 2020, at 3:16 AM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> Signed PGP part
> On 7/24/20 10:00 AM, Jürgen E. Fischer wrote:
>> On Fri, 24. Jul 2020 at 09:41:02 +0200, Sebastiaan Couwenberg wrote:
>>> You could split up the grids per region and only depend on a subset
>>> (excluding au_*, ca_*, de_* & us_* removes most of the very large grids)
>>> and suggest the rest for the users to manually install when they need it.
>> 
>> I don't want to exclude de completely - esp. because there are grids that were
>> previously shipped among it.  The ridiculously large Baden-Württemberg grid
>> wasn't and must be excluded.
> 
> Then perhaps split the grids by size similar to the
> gmt-gshhg-{low,high,full} packages.
> 
> The gmt package in Debian only Recommends gmt-gshhg-low because of size
> constraints for OSGeoLive, despite the authors wanting the full package
> installed by default.

I'm not particularly sympathetic here. We cut the total size of the grids by  ~60% and enabled them to be lazily downloaded to users' systems incrementally or at user direction in bulk with projsync. Everything is enabled with a global CDN that should be fast just about everywhere.

I would consider adding an optional box to your installer that completes the projsync operation for the user. Then the download cost is between them and the CDN, and data isn't duplicated in your installers. They would get the latest grids, and they could potentially choose which families of content to fetch.

As a backup, you could also make a static proj-data package in OSGeo4W, but this is going to rot in relation to the grids at cdn.proj.org <http://cdn.proj.org/> If users don't know to select it, their software might not behave as they expect.

The complaints about sizes are frustrating. For a fully functioning PROJ in the past, you needed 1.2 gb of grids, and you had to do a bunch of hand jamming to get them situated. The current configuration is much simpler and user friendly in my opinion.

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/d2d7c0bd/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/d2d7c0bd/attachment.sig>

From dagnew at ucsd.edu  Fri Jul 24 06:28:10 2020
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Fri, 24 Jul 2020 06:28:10 -0700
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
Message-ID: <CAG6Em0BHQVpiypu4+ag3k1VVhQ6RN-9GK81woaHMXKKmPzm4tg@mail.gmail.com>

I take Kristian's point, but FWIW would suggest that the geoid grids might
be a separate download option, for those who want to be able to do heights.
Those who don't plan to use this new functionality wouldn't need them, I
assume.

Duncan Agnew

On Fri, Jul 24, 2020 at 12:41 AM Sebastiaan Couwenberg <sebastic at xs4all.nl>
wrote:

> On 7/24/20 9:31 AM, Jürgen E. Fischer wrote:
> > On Fri, 24. Jul 2020 at 10:22:56 +0300, Idan Miara wrote:
> >> Jürgen suggests proj 7.1 can't be included in OSGeo4W/QGIS installer
> >> because proj-data is 500MB, which is too big.
> >> Is it intentionally so big?
> >
> > It includes all the grids.  And it's not a dependency.  The grids can
> also be
> > downloaded dynamically, so using proj-data is probably only intended to
> be used
> > if that's not possible for some reason.  You can also interactively
> download
> > the grids that you need via cdn.proj.org.  QGIS does currently not
> support the
> > dynamic download and we don't know which grid the users will need
> upfront - so
> > either including none or all seems to be the only option.  Given that
> QGIS
> > previously shipped several grids by default, shipping none probably
> isn't an
> > option either - as that would break some installations.
>
> You could split up the grids per region and only depend on a subset
> (excluding au_*, ca_*, de_* & us_* removes most of the very large grids)
> and suggest the rest for the users to manually install when they need it.
>
> 100.00%  523111200  ( 523.11 MB)  .
>  15.41%   80585622  (  80.59 MB)  ./us_nga_egm08_25.tif
>  13.96%   73022201  (  73.02 MB)  ./de_lgl_bw_BWTA2017.tif
>   5.21%   27272664  (  27.27 MB)
> ./au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
>   3.26%   17033175  (  17.03 MB)  ./us_noaa_g2012bu0.tif
>   3.21%   16767965  (  16.77 MB)  ./us_noaa_geoid09_conus.tif
>   3.20%   16742155  (  16.74 MB)  ./us_noaa_g2018u0.tif
>   3.14%   16451024  (  16.45 MB)  ./us_noaa_geoid03_conus.tif
>   2.44%   12781759  (  12.78 MB)  ./au_ga_AUSGeoid09_V1.01.tif
>   2.19%   11478497  (  11.48 MB)  ./us_noaa_geoid06_ak.tif
>   2.17%   11342483  (  11.34 MB)  ./us_noaa_g2012ba0.tif
>   2.16%   11279068  (  11.28 MB)  ./us_noaa_geoid09_ak.tif
>   2.11%   11031336  (  11.03 MB)  ./ca_nrc_CGG2013an83.tif
>   2.11%   11030895  (  11.03 MB)  ./ca_nrc_CGG2013n83.tif
>   2.08%   10906276  (  10.91 MB)  ./ca_nrc_CGG2013ai08.tif
>   2.08%   10906091  (  10.91 MB)  ./ca_nrc_CGG2013i08.tif
>   1.53%    8002286  (   8.00 MB)  ./ca_nrc_ON27CSv1.tif
>   1.49%    7784410  (   7.78 MB)  ./ca_nrc_ntv2_0.tif
>   1.40%    7300425  (   7.30 MB)  ./ca_nrc_ON76CSv1.tif
>   1.36%    7114024  (   7.11 MB)  ./dk_sdfe_gvr2016.tif
>   1.18%    6180460  (   6.18 MB)  ./ca_nrc_MAY76V20.tif
>   1.13%    5934098  (   5.93 MB)  ./au_icsm_National_84_02_07_01.tif
>   1.12%    5839686  (   5.84 MB)  ./au_ga_AUSGeoid2020_20180201.tif
>   1.00%    5232082  (   5.23 MB)  ./nz_linz_nzgeoid2016.tif
>
> Kind Regards,
>
> Bas
>
> --
>  GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200724/d15b11f0/attachment.html>

From kristianevers at gmail.com  Sat Jul 25 03:58:27 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Sat, 25 Jul 2020 12:58:27 +0200
Subject: [PROJ] proj-data is 500MB
In-Reply-To: <CAG6Em0BHQVpiypu4+ag3k1VVhQ6RN-9GK81woaHMXKKmPzm4tg@mail.gmail.com>
References: <CAEDrt3-13BWpXZQr8yvNJNdut73-CL_a-snqeDhvgiqh8uDHvg@mail.gmail.com>
 <20200724065853.y55c7veqxvpvw3vq@norbit.de>
 <CAEDrt3_cz8mVPYgKK8QBQC=6OvLdO+3hzvUFfw1WCqoiwniRNA@mail.gmail.com>
 <20200724073141.wfmm5uqjtmjp4h66@norbit.de>
 <b296c302-b712-81af-78bd-5578e1e01523@xs4all.nl>
 <CAG6Em0BHQVpiypu4+ag3k1VVhQ6RN-9GK81woaHMXKKmPzm4tg@mail.gmail.com>
Message-ID: <43FA7E2D-6CED-4B58-8E42-CC436FF0BB2E@gmail.com>



> On 24 Jul 2020, at 15:28, Duncan Agnew <dagnew at ucsd.edu> wrote:
> 
> I take Kristian's point, but FWIW would suggest that the geoid grids might be a separate download option, for those who want to be able to do heights. Those who don't plan to use this new functionality wouldn't need them, I assume.

Vertical offsets has been around in PROJ for 10 years, so I wouldn’t exactly call it new. Dividing the proj-data package into
various types of grids would result in the same complaints as the regional grid-packages did: Packagers still end up installing
everything and if they don’t users will complain that a particular transformation doesn’t work as they expect.

So it really boils down to either 1) just install everything or 2) use the dynamic downloading option. 

/Kristian


From j1 at jimenezshaw.com  Wed Jul 29 10:10:50 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 29 Jul 2020 19:10:50 +0200
Subject: [PROJ] Update in EPSG db
Message-ID: <CADRrdKtB3Dg1iz17_P3ubUwM+ifTyU8f0NPZPuetvkmkGZ5nnw@mail.gmail.com>

Hi

After adding the spanish peninsula geoid file, now there are available in
EPSG some vertical CRS to include the Canary Island grid. (Spanish IGN
requested them recently).

Their transformations are also available (one per island, also for Balearic
islands).

For instance
https://beta.epsg.org/transformation_9417/REGCAN95-to-Gran-Canaria-height-1.html

The script "grid_tools/vertoffset_grid_to_gtiff.py" needs the vertical CRS
to be there, EPSG:9397 for instance.

I am trying to create PRs in PROJ-data and PROJ to support the new grid on
every "new" vertical CRS.

How is the EPSG database updated?

AFAIK, there are other changes, like "ED50 to ETRS89 (12)" being replaced
by "ED50 to ETRS89 (16)" and "ED50 to ETRS89 (17)"

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200729/de621281/attachment.html>

From even.rouault at spatialys.com  Wed Jul 29 11:33:06 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Jul 2020 20:33:06 +0200
Subject: [PROJ] Update in EPSG db
In-Reply-To: <CADRrdKtB3Dg1iz17_P3ubUwM+ifTyU8f0NPZPuetvkmkGZ5nnw@mail.gmail.com>
References: <CADRrdKtB3Dg1iz17_P3ubUwM+ifTyU8f0NPZPuetvkmkGZ5nnw@mail.gmail.com>
Message-ID: <133006573.GXh5HJnuXG@even-i700>

Javier,

> How is the EPSG database updated?

Normally there's a scripts/build_db.py script that operates on the PostgreSQL dump 
from EPSG and would run with none/little changes in it, or elsewhere in the PROJ 
codebase when we remained in the EPSG v9 series.
But with EPSG v10, this won't work. There are many changes in the structure of the 
upstream EPSG database that will impact the structure of proj.db itself, the import 
script, and also code in PROJ to deal with new concepts that are introduced in the 
EPSG db like DatumEnsemble that will impact not only WKT import/export, but also 
algorithms in the transformation computations. This will be a non-trivial effort. I'd 
estimate it to about 2 weeks of work.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200729/9bcaedc8/attachment.html>

From s+proj at eric.buddington.net  Wed Jul 29 13:49:46 2020
From: s+proj at eric.buddington.net (Eric Buddington)
Date: Wed, 29 Jul 2020 16:49:46 -0400
Subject: [PROJ] proj_create_crs_to_crs_from_pj fails with no error
Message-ID: <20200729204946.GA583090@hermit.home.eric.buddington.net>

I'm upgrading old code to use modern proj routines and use WKS strings
instead.  To handle old PROJ strings (because I don't know the correct
WKS string), I hack in an extra "+type=crs".

When I do this, the call to proj_create succeeds, but
proj_create_crs_to_crs_from_pj() returns NULL and proj_errno(NULL)
returns 0. I want an error message!

Are my expectations for error reporting wrong here?

Here's the code snippet that's failing (throws "failed with no error")
with crs_string2 =
  "+type=crs +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"

<code>
    PJptr const crs1 = proj_create (PJ_DEFAULT_CTX, crs_string2.c_str());
    if (crs1.ptr == NULL)
      throw std::runtime_error
        (std::string ("proj_create (dest):")
         + proj_errno_string (proj_errno (crs1.ptr)));
    
    PJptr const crs_ecef = proj_create (PJ_DEFAULT_CTX,
                                        "+type=crs +proj=geocent +units=m");
    if (crs_ecef.ptr == NULL)
      throw std::runtime_error
        (std::string ("proj_create (ecef):")
         + proj_errno_string (proj_errno (crs1.ptr)));
    
    PJ* proj0 = proj_create_crs_to_crs_from_pj
      (PJ_DEFAULT_CTX, crs1.ptr, crs_ecef.ptr, NULL, NULL);
    if (proj0 == NULL)
      {
        int const err_no = proj_errno (NULL);
        char const * err_str = proj_errno_string (err_no);
        if (err_str == NULL)
          throw std::runtime_error
            ("proj_create_crs_to_crs failed with no error");
        else
          throw std::runtime_error (std::string ("proj_crs_to_crs")
                                    + proj_errno_string (proj_errno (NULL)));
      }
</code>

I'd appreciate any advice!

-Eric

From even.rouault at spatialys.com  Thu Jul 30 08:51:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jul 2020 17:51:32 +0200
Subject: [PROJ] proj_create_crs_to_crs_from_pj fails with no error
In-Reply-To: <20200729204946.GA583090@hermit.home.eric.buddington.net>
References: <20200729204946.GA583090@hermit.home.eric.buddington.net>
Message-ID: <24215692.6b5mSyk484@even-i700>

Eric,

nothing strikes me as obviously wrong in your code, but as it is not a self contained snippet, I 
cannot reproduce exactly

I've tried with the projinfo utility:

$ projinfo -s "+type=crs +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs" -t 
"+type=crs +proj=geocent +units=m" -o PROJ -q

and it outputs a correct pipeline:

+proj=pipeline +step +proj=unitconvert +xy_in=deg +z_in=m +xy_out=rad +z_out=m +step 
+proj=cart +ellps=WGS84

The following also works fine:

cs2cs +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs +to  +proj=geocent

This is with latest PROJ. It might be a bug in the version you use.

Even


> I'm upgrading old code to use modern proj routines and use WKS strings
> instead.  To handle old PROJ strings (because I don't know the correct
> WKS string), I hack in an extra "+type=crs".
> 
> When I do this, the call to proj_create succeeds, but
> proj_create_crs_to_crs_from_pj() returns NULL and proj_errno(NULL)
> returns 0. I want an error message!
> 
> Are my expectations for error reporting wrong here?
> 
> Here's the code snippet that's failing (throws "failed with no error")
> with crs_string2 =
>   "+type=crs +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"
> 
> <code>
>     PJptr const crs1 = proj_create (PJ_DEFAULT_CTX, crs_string2.c_str());
>     if (crs1.ptr == NULL)
>       throw std::runtime_error
>         (std::string ("proj_create (dest):")
>          + proj_errno_string (proj_errno (crs1.ptr)));
> 
>     PJptr const crs_ecef = proj_create (PJ_DEFAULT_CTX,
>                                         "+type=crs +proj=geocent +units=m");
> if (crs_ecef.ptr == NULL)
>       throw std::runtime_error
>         (std::string ("proj_create (ecef):")
>          + proj_errno_string (proj_errno (crs1.ptr)));
> 
>     PJ* proj0 = proj_create_crs_to_crs_from_pj
>       (PJ_DEFAULT_CTX, crs1.ptr, crs_ecef.ptr, NULL, NULL);
>     if (proj0 == NULL)
>       {
>         int const err_no = proj_errno (NULL);
>         char const * err_str = proj_errno_string (err_no);
>         if (err_str == NULL)
>           throw std::runtime_error
>             ("proj_create_crs_to_crs failed with no error");
>         else
>           throw std::runtime_error (std::string ("proj_crs_to_crs")
>                                     + proj_errno_string (proj_errno
> (NULL))); }
> </code>
> 
> I'd appreciate any advice!
> 
> -Eric
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200730/9a889a80/attachment.html>

From jmckenna at gatewaygeomatics.com  Fri Jul 31 14:01:14 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 31 Jul 2020 18:01:14 -0300
Subject: [PROJ] Update in EPSG db
In-Reply-To: <CADRrdKtB3Dg1iz17_P3ubUwM+ifTyU8f0NPZPuetvkmkGZ5nnw@mail.gmail.com>
References: <CADRrdKtB3Dg1iz17_P3ubUwM+ifTyU8f0NPZPuetvkmkGZ5nnw@mail.gmail.com>
Message-ID: <b3568b1e-ddb1-d893-48b8-28dd3a7e6870@gatewaygeomatics.com>

Hi Javier,

I've generated a pull request (https://github.com/OSGeo/PROJ/pull/2308) 
to update to the latest EPSG database version (9.8.13) which does seem 
to contain the changes that you mentioned ("ED50 to ETRS89 (16)" and 
"ED50 to ETRS89 (17)" etc)

If that pull request is accepted, you can expect it to be included in 
the PROJ 7.1.1 release on 1st September.

Cheers from the east coast of Canada,

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/



On 2020-07-29 2:10 p.m., Javier Jimenez Shaw wrote:
> Hi
> 
> After adding the spanish peninsula geoid file, now there are available 
> in EPSG some vertical CRS to include the Canary Island grid. (Spanish 
> IGN requested them recently).
> 
> Their transformations are also available (one per island, also for 
> Balearic islands).
> 
> For instance
> https://beta.epsg.org/transformation_9417/REGCAN95-to-Gran-Canaria-height-1.html
> 
> The script "grid_tools/vertoffset_grid_to_gtiff.py" needs the vertical 
> CRS to be there, EPSG:9397 for instance.
> 
> I am trying to create PRs in PROJ-data and PROJ to support the new grid 
> on every "new" vertical CRS.
> 
> How is the EPSG database updated?
> 
> AFAIK, there are other changes, like "ED50 to ETRS89 (12)" being 
> replaced by "ED50 to ETRS89 (16)" and "ED50 to ETRS89 (17)"
> 
> Thanks.
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
> 
> 

