From dstahlke at gi.alaska.edu  Thu Apr  1 21:32:38 2004
From: dstahlke at gi.alaska.edu (Dan Stahlke)
Date: Thu, 1 Apr 2004 20:32:38 -0900
Subject: [OSRS-PROJ] Quadrilatieralized Spherical Cube projection
Message-ID: <20040402053238.GA19651@entropy.gina.alaska.edu>

I need to efficiently (with low distortion) divide the globe into  
square tiles in order to store global images.  I am currently using a  
modified gnomonic projection onto a cube.  The projection I am  
currently using is an arctangent of the gnomonic projection (which  
could also be visualized as two cylindrical projections, one for each  
axis).  I am using a modified version of GCTP for this, but Proj.4  
looks a lot better.  There doesn't seem to be any existing projection  
similar to what I am using, but in the course of my research I found  
out about the Quadrilatieralized Spherical Cube projection, which  
sounds a lot better.

This projection is used by the COBE project to store images of the sky.   
It is a projection of the sphere onto a cube and is supposed to have  
distortion of less than 1%.

It looks like the Quadrilatieralized Spherical Cube projection doesn't  
currently exist in Proj.4, but if needed I am willing to add it.  My  
question is: does this projection already exist under a different name,  
or is there something else that can be used?  If I add this projection,  
could it be included with the main distribution?

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From cjmce at lsu.edu  Fri Apr  2 05:45:16 2004
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 2 Apr 2004 07:45:16 -0600
Subject: [OSRS-PROJ] Quadrilatieralized Spherical Cube projection
Message-ID: <OF535DF4EC.5D202017-ON86256E6A.004B8E08-86256E6A.004B8E71@lsu.edu>





I think Oscar S. Adams worked up a conformal projection of the sphere onto
a cube in the 1920s or 1930s.  Lee addressed it in his monograph on
Conformal Projections of the Ellipsoid in Cartographia (I think), and John
P. Snyder (of course) wrote of it since Elassal's GCTP was his translation
of Snyder into Fortran.  Gnomonic is certainly the simplest way to do it,
but a conformal projection would really be the only approach to a "low
distortion" solution.  The implementation is non-trivial.

Cliff Mugnier
LOUISIANA STATE UNIVERSITY
-------------------------------------------
I need to efficiently (with low distortion) divide the globe into
square tiles in order to store global images.  I am currently using a
modified gnomonic projection onto a cube.  The projection I am
currently using is an arctangent of the gnomonic projection (which
could also be visualized as two cylindrical projections, one for each
axis).  I am using a modified version of GCTP for this, but Proj.4
looks a lot better.  There doesn't seem to be any existing projection
similar to what I am using, but in the course of my research I found
out about the Quadrilatieralized Spherical Cube projection, which
sounds a lot better.

This projection is used by the COBE project to store images of the sky.
It is a projection of the sphere onto a cube and is supposed to have
distortion of less than 1%.

It looks like the Quadrilatieralized Spherical Cube projection doesn't
currently exist in Proj.4, but if needed I am willing to add it.  My
question is: does this projection already exist under a different name,
or is there something else that can be used?  If I add this projection,
could it be included with the main distribution?

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From d.orme at imperial.ac.uk  Fri Apr  2 05:59:45 2004
From: d.orme at imperial.ac.uk (David Orme)
Date: Fri, 2 Apr 2004 14:59:45 +0100
Subject: [OSRS-PROJ] Another unknown projection
Message-ID: <FF22C0AE-84AD-11D8-ABC4-000393DC1748@ic.ac.uk>

Hi,

Sorry to do this again - I'm working on a project to create global maps 
of bird ranges and none of the sources record the projection of 
distribution maps. This one is a map of Europe 
(http://www.bio.ic.ac.uk/research/iowens/orme/BWP.jpeg  - 600kb file).

The parallels are parallel straight lines and the meridians are 
smoothly converging curves - this all says pseudo-cylindrical to me. 
The spacing of the parallels increase markedly toward the pole, which I 
can't immediately associate with any pseudo-cylindrical projection.

It could be that the parallels _are_ curved but just not visibly so in 
the image, but given the size of the area mapped this seems a bit 
unlikely.

If anyone has got any suggestions, I'd be very grateful to hear them. I 
have asked the publishers - no joy...

Thanks,
David

---------------------------------------
Dr. David Orme

Department of Biological Sciences
Imperial College London
Silwood Park Campus
Ascot, Berkshire SL5 7PY UK.

Tel: +44 (0)20 759 42358
Fax: +44 (0)20 759 42339
e-mail: d.orme at imperial.ac.uk

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Strebe at aol.com  Fri Apr  2 10:38:30 2004
From: Strebe at aol.com (Strebe at aol.com)
Date: Fri, 02 Apr 2004 13:38:30 -0500
Subject: [OSRS-PROJ] Re: Another unknown projection
Message-ID: <22366705.2E1BC50B.00055439@aol.com>


This looks distinctly like Moir's "The Times" projection.

Regards,
daan Strebe


>Hi,
>
>Sorry to do this again - I'm working on a project to create global maps 
>of bird ranges and none of the sources record the projection of 
>distribution maps. This one is a map of Europe 
>(http://www.bio.ic.ac.uk/research/iowens/orme/BWP.jpeg Â - 600kb file).
>
>The parallels are parallel straight lines and the meridians are 
>smoothly converging curves - this all says pseudo-cylindrical to me. 
>The spacing of the parallels increase markedly toward the pole, which I 
>can't immediately associate with any pseudo-cylindrical projection.
>
>It could be that the parallels _are_ curved but just not visibly so in 
>the image, but given the size of the area mapped this seems a bit 
>unlikely.
>
>If anyone has got any suggestions, I'd be very grateful to hear them. I 
>have asked the publishers - no joy...
>
>Thanks,
>David
>
>---------------------------------------
>Dr. David Orme
>
>Department of Biological Sciences
>Imperial College London
>Silwood Park Campus
>Ascot, Berkshire SL5 7PY UK.
>
>Tel: +44 (0)20 759 42358
>Fax: +44 (0)20 759 42339
>e-mail: d.orme at imperial.ac.uk
>
>----------------------------------------
>PROJ.4 Discussion List
>See http://www.remotesensing.org/proj for subscription, unsubscription
>and other information.
>
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Sat Apr  3 07:11:37 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Sat, 3 Apr 2004 10:11:37 -0500
Subject: [OSRS-PROJ] Roussilhe Stereographic Projection
Message-ID: <33CFB73A-8581-11D8-B7FC-000A958A3346@verizon.net>

With many thanks to D.C. Agnew of UCSD, libproj4 now has a Roussilhe
projection based upon the 1922 specifications.

There remain a few nuances that force me to hit upon a friend to 
translate
a few sections to check accuracy details.  At the moment, I feel that 
the
projection is supposed to be accurate to one centimeter at 560km from 
the
origin.

This is a purely an oblique/equitorial projection and cannot be used in
polar form.  Usage is identical to the other two forms of stereographic
except: "+proj=rouss."

Lastly, given all the previous definitions for Roussilhe Stereographic
I cannot guarantee that this is the projection used by some European
countries.  It is merely what what was described by M.H. Roussilhe
in 1922.

I will update the web site with a new library release in a couple days.
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Mon Apr  5 09:27:42 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Mon, 5 Apr 2004 12:27:42 -0400
Subject: [OSRS-PROJ] Roussilhe Stereographic Projection
In-Reply-To: <33CFB73A-8581-11D8-B7FC-000A958A3346@verizon.net>
References: <33CFB73A-8581-11D8-B7FC-000A958A3346@verizon.net>
Message-ID: <29C1BC84-871E-11D8-846B-000A958A3346@verizon.net>

A few additional notes on the stereographics:

1.  +proj=sterea and +proj=rouss compare quite closely and the former
    could be used by those with current libraries to handle Polish grids 
if
    their accuracy needs are not in the cm. range.

2.  +proj=stere (of GCTP fame) produces larger differences and also has
    slightly larger scale errors.  If one is not replicating existing 
grid systems
    using +proj=stere or UPS, I would recommend +proj=sterea for oblique/
    equitorial applications.

3.  While doing the documentation for the stereographic it was readily 
apparent
     that, softwarewise, sterea should be part of the PJ_stere.c file.  
Thus the next
     release will be missing PJ_sterea.c.  Lest anyone panic, the 
+proj=sterea
     entry will still be there and all operations will match previous 
libraries.  If
     polar aspect is chosen in sterea it will resort to the same 
algorithm used
     in stere (which does not go through conformal sphere).
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From werchowyna at pf.pl  Mon Apr  5 13:57:47 2004
From: werchowyna at pf.pl (Maciek Sieczka)
Date: Mon, 5 Apr 2004 22:57:47 +0200
Subject: [OSRS-PROJ] Roussilhe Stereographic Projection
References: <33CFB73A-8581-11D8-B7FC-000A958A3346@verizon.net> <29C1BC84-871E-11D8-846B-000A958A3346@verizon.net>
Message-ID: <00b801c41b50$c0fdab00$d1de1d3e@k7o6e9>

Great to hear about the progress in the 'rouss' projection!
It would be graet if Frank Wanderman could find time to port some
of the new projections including 'rouss' to his proj.4 as he mentioned
once.

Gerald Evenden wrote:

> 1. +proj=sterea and +proj=rouss compare quite closely and the former
>     could be used by those with current libraries to handle Polish grids
>     if  their accuracy needs are not in the cm. range.
>
> 2. +proj=stere (of GCTP fame) produces larger differences and also has
>     slightly larger scale errors.

circa how big are the differences then?
can you tell if it's the same 'stere' projection as in the Grass 5.03?
(the 'sterea' is not available in Grass at all)

BTW:
I didn't manage to access the base line documentation for the 'System 1965'
grid or the Esri software. But I got software for converting coordinates
between Polish grids provided by Polish government geodetic department.
Among the output options there are called 'blh Krasowski' and 'blh GRS80'.
If you think that any could be an appropriote tool for benchmarking your
'rouss' let me know how many points I should convert for each '1965' zone to
make it well. There is an 'xyz' output for Krass and GRS as well.

Maciek Sieczka


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From d.orme at imperial.ac.uk  Wed Apr  7 01:47:32 2004
From: d.orme at imperial.ac.uk (David Orme)
Date: Wed, 7 Apr 2004 09:47:32 +0100
Subject: [OSRS-PROJ] Re: Another unknown projection
In-Reply-To: <22366705.2E1BC50B.00055439@aol.com>
References: <22366705.2E1BC50B.00055439@aol.com>
Message-ID: <358409DE-8870-11D8-8C48-000393DC1748@ic.ac.uk>

That looks to be a very good fit. Many thanks for the suggestion.

Cheers,
David
On 2 Apr 2004, at 19:38, Strebe at aol.com wrote:

>
> This looks distinctly like Moir's "The Times" projection.
>
> Regards,
> daan Strebe
>
>
>> Hi,
>>
>> Sorry to do this again - I'm working on a project to create global 
>> maps
>> of bird ranges and none of the sources record the projection of
>> distribution maps. This one is a map of Europe
>> (http://www.bio.ic.ac.uk/research/iowens/orme/BWP.jpeg Â - 600kb file).
>>
>> The parallels are parallel straight lines and the meridians are
>> smoothly converging curves - this all says pseudo-cylindrical to me.
>> The spacing of the parallels increase markedly toward the pole, which 
>> I
>> can't immediately associate with any pseudo-cylindrical projection.
>>
>> It could be that the parallels _are_ curved but just not visibly so in
>> the image, but given the size of the area mapped this seems a bit
>> unlikely.
>>
>> If anyone has got any suggestions, I'd be very grateful to hear them. 
>> I
>> have asked the publishers - no joy...
>>
>> Thanks,
>> David
>>
>> ---------------------------------------
>> Dr. David Orme
>>
>> Department of Biological Sciences
>> Imperial College London
>> Silwood Park Campus
>> Ascot, Berkshire SL5 7PY UK.
>>
>> Tel: +44 (0)20 759 42358
>> Fax: +44 (0)20 759 42339
>> e-mail: d.orme at imperial.ac.uk
>>
>> ----------------------------------------
>> PROJ.4 Discussion List
>> See http://www.remotesensing.org/proj for subscription, unsubscription
>> and other information.
>>
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From gerald.evenden at verizon.net  Wed Apr  7 17:48:19 2004
From: gerald.evenden at verizon.net (Gerald I. Evenden)
Date: 07 Apr 2004 20:48:19 -0400
Subject: [OSRS-PROJ] Test runs on Polish grid system
Message-ID: <1081385299.4309.3.camel@localhost>

Test run for Polish Grid region Strefar-I 1965 and the city of Lublin
with the three stereographic projections A) original GCTP clone
from Snyder, B) alternative with complete Gauss conversion and
C) Roussehli' polynomial.

Note: my non-French ability interprets Roussehli to claim
3 decimeter accuracy which explains the noise in the least
significant figures of the h-k calculations.  I will be checking
my interpretation by hitting on a local friend who can read
scientific French.  ;-)

See further comments in the second test run with k_0=1. which
explains my lies of a few days ago.

#Stereographic
#	Azi, Sph&Ell
#	lat_ts=
# +proj=stere +a=6378245 +rf=298.3 +lat_0=50d37'30 +lon_0=21d5
+x_0=5467000
# +y_0=4637000 +k_0=0.9998
#Final Earth figure: ellipsoid
#  Major axis (a): 6378245.000
#  1/flattening: 298.300000
#  squared eccentricity: 0.006693421623
  Lublin
Longitude: 22d33'E [ 22.55 ]
Latitude:  51d14'N [ 51.233333333 ]
Easting (x):   5569422.55
Northing (y):  4705679.74
Meridian scale (h) : 0.99992871  ( -0.007129 % error )
Parallel scale (k) : 0.99992871  ( -0.007129 % error )
Areal scale (s):     0.99985743  ( -0.01426 % error )
Angular distortion (w): 0.000
Meridian/Parallel angle: 90.00000
Convergence : 1d8'8.409" [ 1.13566911 ]
Max-min (Tissot axis a-b) scale error: 0.99993 0.99993

#Oblique Stereographic Alternative
#	Azimuthal, Sph&Ell
# +proj=sterea +a=6378245 +rf=298.3 +lat_0=50d37'30 +lon_0=21d5
+x_0=5467000
# +y_0=4637000 +k_0=0.9998
#Final Earth figure: ellipsoid
#  Major axis (a): 6378245.000
#  1/flattening: 298.300000
#  squared eccentricity: 0.006693421623
  Lublin
Longitude: 22d33'E [ 22.55 ]
Latitude:  51d14'N [ 51.233333333 ]
Easting (x):   5569418.92
Northing (y):  4705681.24
Meridian scale (h) : 0.99989334  ( -0.01067 % error )
Parallel scale (k) : 0.99989334  ( -0.01067 % error )
Areal scale (s):     0.99978670  ( -0.02133 % error )
Angular distortion (w): 0.000
Meridian/Parallel angle: 90.00000
Convergence : 1d8'19.367" [ 1.13871319 ]
Max-min (Tissot axis a-b) scale error: 0.99989 0.99989

#Roussilhe Stereographic
#	Azi., Ellps.
# +proj=rouss +a=6378245 +rf=298.3 +lat_0=50d37'30 +lon_0=21d5
+x_0=5467000
# +y_0=4637000 +k_0=0.9998
#Final Earth figure: ellipsoid
#  Major axis (a): 6378245.000
#  1/flattening: 298.300000
#  squared eccentricity: 0.006693421623
  Lublin
Longitude: 22d33'E [ 22.55 ]
Latitude:  51d14'N [ 51.233333333 ]
Easting (x):   5569439.41
Northing (y):  4705694.98
Meridian scale (h) : 1.00009338  ( 0.009338 % error )
Parallel scale (k) : 1.00009335  ( 0.009335 % error )
Areal scale (s):     1.00018674  ( 0.01867 % error )
Angular distortion (w): 0.000
Meridian/Parallel angle: 90.00000
Convergence : 1d8'19.369" [ 1.13871366 ]
Max-min (Tissot axis a-b) scale error: 1.00009 1.00009

Second test with k_0=1.  I statement of a few days ago said the
the error figure for method b was better than method A.  This was
determined when I did not specify k_0 so default was 1.  In the
above run where the Polish factor of .9998 was used, the scale
error was better for method A.  Go figure.

The following is with k_0=1 where you can see that method A has
the poorest showing for scale error.

#Stereographic
#	Azi, Sph&Ell
#	lat_ts=
# +proj=stere +a=6378245 +rf=298.3 +lat_0=50d37'30 +lon_0=21d5
+x_0=5467000
# +y_0=4637000 +k_0=1.
#Final Earth figure: ellipsoid
#  Major axis (a): 6378245.000
#  1/flattening: 298.300000
#  squared eccentricity: 0.006693421623
  Lublin
Longitude: 22d33'E [ 22.55 ]
Latitude:  51d14'N [ 51.233333333 ]
Easting (x):   5569443.04
Northing (y):  4705693.48
Meridian scale (h) : 1.00012874  ( 0.01287 % error )
Parallel scale (k) : 1.00012874  ( 0.01287 % error )
Areal scale (s):     1.00025749  ( 0.02575 % error )
Angular distortion (w): 0.000
Meridian/Parallel angle: 90.00000
Convergence : 1d8'8.409" [ 1.13566911 ]
Max-min (Tissot axis a-b) scale error: 1.00013 1.00013

#Oblique Stereographic Alternative
#	Azimuthal, Sph&Ell
# +proj=sterea +a=6378245 +rf=298.3 +lat_0=50d37'30 +lon_0=21d5
+x_0=5467000
# +y_0=4637000 +k_0=1.
#Final Earth figure: ellipsoid
#  Major axis (a): 6378245.000
#  1/flattening: 298.300000
#  squared eccentricity: 0.006693421623
  Lublin
Longitude: 22d33'E [ 22.55 ]
Latitude:  51d14'N [ 51.233333333 ]
Easting (x):   5569439.41
Northing (y):  4705694.98
Meridian scale (h) : 1.00009336  ( 0.009336 % error )
Parallel scale (k) : 1.00009336  ( 0.009336 % error )
Areal scale (s):     1.00018673  ( 0.01867 % error )
Angular distortion (w): 0.000
Meridian/Parallel angle: 90.00000
Convergence : 1d8'19.367" [ 1.13871319 ]
Max-min (Tissot axis a-b) scale error: 1.00009 1.00009

#Roussilhe Stereographic
#	Azi., Ellps.
# +proj=rouss +a=6378245 +rf=298.3 +lat_0=50d37'30 +lon_0=21d5
+x_0=5467000
# +y_0=4637000 +k_0=1.
#Final Earth figure: ellipsoid
#  Major axis (a): 6378245.000
#  1/flattening: 298.300000
#  squared eccentricity: 0.006693421623
  Lublin
Longitude: 22d33'E [ 22.55 ]
Latitude:  51d14'N [ 51.233333333 ]
Easting (x):   5569439.41
Northing (y):  4705694.98
Meridian scale (h) : 1.00009338  ( 0.009338 % error )
Parallel scale (k) : 1.00009335  ( 0.009335 % error )
Areal scale (s):     1.00018674  ( 0.01867 % error )
Angular distortion (w): 0.000
Meridian/Parallel angle: 90.00000
Convergence : 1d8'19.369" [ 1.13871366 ]
Max-min (Tissot axis a-b) scale error: 1.00009 1.00009


-- 
Gerald I. Evenden <gerald.evenden at verizon.net>

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From proj-admin at remotesensing.org  Tue Apr 13 12:01:06 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Tue, 13 Apr 2004 15:01:06 -0400
Subject: [Proj] Mailing List
Message-ID: <407C38F2.10304@pobox.com>

Folks,

There was a hardware failure on remotesensing.org late last week, and the
Jeff Largent has heroically transferred things to a new server.  While setting
up the new server it seemed like a good time to transfer the older mailing
lists (such as PROJ.4) from majordomo to mailman to simplify administration
and improve privacy options.

I have mass-subscribed everyone so hopefully you don't need to do anything
special.  The new email address is proj at remotesensing.org, instead of
osrs-proj at remotesensing.org.

Let me know if anyone encounters any problems (by direct email preferrably).

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From proj-admin at remotesensing.org  Thu Apr 15 01:12:11 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Thu, 15 Apr 2004 10:12:11 +0200
Subject: [Proj] Error code for PJD_ERR_GEOCENTRIC and pj_strerrno()
Message-ID: <ECF80D1E295FD311959D00805FA7AC0D07E7D289@ocag.ch>

Hi all,

According to the documentation, errors detected by libproj itself should
always
have negative numbers, whereas errors in system libraries have positive.
I recently got error number 100, which turned out to be the following error,
defined in projects.h:

    /* datum system errors */
    #define PJD_ERR_GEOCENTRIC 100

Is there a reason this error doesn't follow the strategy of the other
errors,
and that it isn't "known" by pj_strerrno().

Regards
Thomas


From proj-admin at remotesensing.org  Thu Apr 15 01:14:42 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Thu, 15 Apr 2004 10:14:42 +0200
Subject: [Proj] Compilation under Windows; HAVE_STRERROR in makefile.vc
Message-ID: <ECF80D1E295FD311959D00805FA7AC0D07E7D28A@ocag.ch>

Hi all,

Is there a reason why makefile.vc doesn't have "HAVE_STRERROR" defined?
If not, I suggest to change the CFLAGS line accordingly:
    CFLAGS = /nologo -I. -DPROJ_LIB=\"$(PROJ_LIB_DIR)\" $(OPTFLAGS) /D
"HAVE_STRERROR"

Regards
Thomas


From proj-admin at remotesensing.org  Thu Apr 15 01:26:15 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Thu, 15 Apr 2004 10:26:15 +0200
Subject: [Proj] Compilation under Windows; DLL issues
Message-ID: <ECF80D1E295FD311959D00805FA7AC0D07E7D28B@albana.ocag.ch>

Hi all,

There are some issues using libproj as a DLL under Windows.
The way the definitions currently are, it is not possible to access
pj_errno or pj_release.
The reasons for that are:
*) pj_release is not defined as an export in proj.def
*) pj_errno needs __declspec(dllimport) in its declaration to be accessible

The second issue is a tricky one. Methods don't need the __declspec-stuff,
they just get a second level of indirection in the code. Data, however, need
that.



My suggestion:

-------------------------

In makefile.vc, add the define "PROJ_EXPORTS":
CFLAGS = /nologo -I. -DPROJ_LIB=\"$(PROJ_LIB_DIR)\" $(OPTFLAGS) /D
"PROJ_EXPORTS"

--------------------------

In proj_api.h, do the follwing:

#ifdef DLL_API
#undef DLL_API
#endif

#if !defined(WIN32) && defined(PROJ_EXPORTS)
#define DLL_API
#else
#define DLL_API __declspec(dllimport)
#endif

Add DLL_API before each declaration:

DLL_API extern char const pj_release[]; /* global release id string */
...
DLL_API extern int pj_errno;	/* global error return code */
...

DLL_API projXY pj_fwd(projLP, projPJ);
DLL_API projLP pj_inv(projXY, projPJ);

DLL_API int pj_transform( projPJ src, projPJ dst, long point_count, int
point_offset,
                  double *x, double *y, double *z );
DLL_API int pj_datum_transform( projPJ src, projPJ dst, long point_count,
int point_offset,
                        double *x, double *y, double *z );
DLL_API int pj_geocentric_to_geodetic( double a, double ra,
                               long point_count, int point_offset,
                               double *x, double *y, double *z );
DLL_API int pj_geodetic_to_geocentric( double a, double ra,
                               long point_count, int point_offset,
                               double *x, double *y, double *z );
DLL_API int pj_compare_datums( projPJ srcdefn, projPJ dstdefn );
DLL_API int pj_apply_gridshift( const char *, int, 
                        long point_count, int point_offset,
                        double *x, double *y, double *z );
DLL_API void pj_deallocate_grids();
DLL_API int pj_is_latlong(projPJ);
DLL_API int pj_is_geocent(projPJ);
DLL_API void pj_pr_list(projPJ);
DLL_API void pj_free(projPJ);
DLL_API void pj_set_finder( const char *(*)(const char *) );
DLL_API projPJ pj_init(int, char **);
DLL_API projPJ pj_init_plus(const char *);
DLL_API char *pj_get_def(projPJ, int);
DLL_API projPJ pj_latlong_from_proj( projPJ );
DLL_API void *pj_malloc(size_t);
DLL_API void pj_dalloc(void *);
DLL_API char *pj_strerrno(int);
DLL_API int *pj_get_errno_ref();

--------------------------

In proj.def, add pj_release.

--------------------------

Regards
Thomas


From proj-admin at remotesensing.org  Thu Apr 15 06:03:58 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Thu, 15 Apr 2004 09:03:58 -0400
Subject: [Proj] Compilation under Windows; DLL issues
In-Reply-To: <ECF80D1E295FD311959D00805FA7AC0D07E7D28B@albana.ocag.ch>
References: <ECF80D1E295FD311959D00805FA7AC0D07E7D28B@albana.ocag.ch>
Message-ID: <407E883E.9030202@pobox.com>

> Hi all,
> 
> There are some issues using libproj as a DLL under Windows.
> The way the definitions currently are, it is not possible to access
> pj_errno or pj_release.
> The reasons for that are:
> *) pj_release is not defined as an export in proj.def
> *) pj_errno needs __declspec(dllimport) in its declaration to be accessible
> 
> The second issue is a tricky one. Methods don't need the __declspec-stuff,
> they just get a second level of indirection in the code. Data, however, need
> that.

Thomas,

To get access to the errno value, windows applications are expected to call
pj_get_errno_ref() which returns a pointer to the pj_errno variable.  While
your approach can work, I decided that depending on the ability to export
variables from the DLL/shared library was likely to be a source of problems,
so I provided the function access.

I should have done the same for pj_release, but I wasn't aware anyone was using
it.  I have added a pj_get_release() function that will return the pj_release
string in CVS.  This will appear in the next release.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From proj-admin at remotesensing.org  Thu Apr 15 06:11:34 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Thu, 15 Apr 2004 09:11:34 -0400
Subject: [Proj] Error code for PJD_ERR_GEOCENTRIC and pj_strerrno()
In-Reply-To: <ECF80D1E295FD311959D00805FA7AC0D07E7D289@ocag.ch>
References: <ECF80D1E295FD311959D00805FA7AC0D07E7D289@ocag.ch>
Message-ID: <407E8A06.8010107@pobox.com>

proj-admin at remotesensing.org wrote:
> Hi all,
> 
> According to the documentation, errors detected by libproj itself should
> always
> have negative numbers, whereas errors in system libraries have positive.
> I recently got error number 100, which turned out to be the following error,
> defined in projects.h:
> 
>     /* datum system errors */
>     #define PJD_ERR_GEOCENTRIC 100
> 
> Is there a reason this error doesn't follow the strategy of the other
> errors,
> and that it isn't "known" by pj_strerrno().

Thomas,

I have no idea why I did it this way.  I have corrected this in CVS.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From proj-admin at remotesensing.org  Thu Apr 15 06:51:49 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Thu, 15 Apr 2004 09:51:49 -0400
Subject: [Proj] Compilation under Windows; HAVE_STRERROR in makefile.vc
In-Reply-To: <ECF80D1E295FD311959D00805FA7AC0D07E7D28A@ocag.ch>
References: <ECF80D1E295FD311959D00805FA7AC0D07E7D28A@ocag.ch>
Message-ID: <407E9375.9020007@pobox.com>

proj-admin at remotesensing.org wrote:
> Hi all,
> 
> Is there a reason why makefile.vc doesn't have "HAVE_STRERROR" defined?
> If not, I suggest to change the CFLAGS line accordingly:
>     CFLAGS = /nologo -I. -DPROJ_LIB=\"$(PROJ_LIB_DIR)\" $(OPTFLAGS) /D
> "HAVE_STRERROR"

Thomas,

I agree.  I have applied this change in CVS.  I see the logic to capture
HAVE_STRERROR is completely broken on all platforms currently.  The configure
produces a proj_config.h which should (but does not) have this definition
but nothing includes proj_config.h anyways.

I'll have to look into that too, but for now, I have changed the makefile.vc
at least.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From proj-admin at remotesensing.org  Thu Apr 15 08:20:12 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Thu, 15 Apr 2004 08:20:12 -0700
Subject: [Proj] Compilation under Windows; DLL issues
Message-ID: <s07e45d9.009@dfg.ca.gov>

I found, that to use the PROJ.4 library from Visual Basic, functions
also
need to use __stdcall.  I wrote a simple wrapper for the 4.4.6 build:
http://ftp.dfg.ca.gov/Outgoing/Nafwb/proj4/proj_api.zip 

Eric G. Miller
GIS Analyst
Wildlife and Habitat Data Analysis Branch
Department of Fish and Game

>>> proj-admin at remotesensing.org 4/15/2004 6:03:58 AM >>>

> Hi all,
> 
> There are some issues using libproj as a DLL under Windows.
> The way the definitions currently are, it is not possible to access
> pj_errno or pj_release.
> The reasons for that are:
> *) pj_release is not defined as an export in proj.def
> *) pj_errno needs __declspec(dllimport) in its declaration to be
accessible
> 
> The second issue is a tricky one. Methods don't need the
__declspec-stuff,
> they just get a second level of indirection in the code. Data,
however, need
> that.

Thomas,

To get access to the errno value, windows applications are expected to
call
pj_get_errno_ref() which returns a pointer to the pj_errno variable. 
While
your approach can work, I decided that depending on the ability to
export
variables from the DLL/shared library was likely to be a source of
problems,
so I provided the function access.

I should have done the same for pj_release, but I wasn't aware anyone
was using
it.  I have added a pj_get_release() function that will return the
pj_release
string in CVS.  This will appear in the next release.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com 
light and sound - activate the windows | http://pobox.com/~warmerdam 
and watch the world go round - Rush    | Geospatial Programmer for
Rent



From proj-admin at remotesensing.org  Sun Apr 18 18:24:28 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Mon, 19 Apr 2004 10:24:28 +0900
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal Conic
References: <s07e45d9.009@dfg.ca.gov>
Message-ID: <000e01c425ad$10bb3250$700201c0@MAPQUEST.local>

Hello All,
Anyone familiar with the Neys projection found in the GeoTrans package?

It is stated as being a "Modified Lambert Conformal Conic", but I could not
find any further information in my reference books or online. 
Or is there a more known name for this? Is this supported by proj4?

Just any information on this will do.

Best regards,
Paul.



From proj-admin at remotesensing.org  Mon Apr 19 10:44:39 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Mon, 19 Apr 2004 13:44:39 -0400
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal Conic
In-Reply-To: <000e01c425ad$10bb3250$700201c0@MAPQUEST.local>
References: <s07e45d9.009@dfg.ca.gov> <000e01c425ad$10bb3250$700201c0@MAPQUEST.local>
Message-ID: <3B49501D-9229-11D8-A4DB-000A958A3346@verizon.net>

I cannot find any reference to "Neys" projection in my references or 
bibiography
listings.

Snyder mentions some alternative Lambert Conics; one based upon "Gauss
projection."  Perhaps using the conformal projection to the sphere?  
But Neys
never appears in any index.  Perhaps Russian, but the name does not 
sound
like a Russian name.

The NIMA GeoTrans stuff is completely incomprehensible so I was not able
to verify the location of any related material in the remotesensing 
distribution.

If anyone can supply a reference I would be glad to look into it.

On Apr 18, 2004, at 9:24 PM, proj-admin at remotesensing.org wrote:

> Hello All,
> Anyone familiar with the Neys projection found in the GeoTrans package?
>
> It is stated as being a "Modified Lambert Conformal Conic", but I 
> could not
> find any further information in my reference books or online.
> Or is there a more known name for this? Is this supported by proj4?
>
> Just any information on this will do.
>
> Best regards,
> Paul.
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From proj-admin at remotesensing.org  Mon Apr 19 11:07:23 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Mon, 19 Apr 2004 13:07:23 -0500
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal
 Conic
Message-ID: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu>




The GeoTrans documentation says:

"A.1.25 NEY?S (MODIFIED LAMBERT CONFORMAL CONIC) PROJECTION
The Ney's (Modified Lambert Conformal Conic) projection is a conformal
projection in which the projected parallels are expanded slightly to form
complete concentric circles centered at the pole. As shown in Figure A-27,
the projected meridians are radii of concentric circles that meet at the
pole. Ney's is a limiting form of the Lambert Conformal Conic. There are
two parallels, called standard parallels, along which the point scale
factor is one. One parallel is at either ï¿½ï¿½71 or ï¿½ï¿½74 degrees. The other
parallel is at ï¿½ï¿½89 59 59.0 degrees, depending on which hemisphere the first
parallel is in.
Ney's (Modified Lambert Conformal Conic) is used near the poles. Scale
distortion is small 25ï¿½X to 30ï¿½X from the pole. Distortion rapidly increases
beyond this.
The Easting\X and Northing\Y coordinates range from -40,000,000 to
40,000,000.


"?    1st Standard Parallel ? A latitude value that specifies one of the
two the parallels where the point scale factor is 1.0.  The 1st Standard
Parallel is either ï¿½b71 or ï¿½b74 degrees. The hemisphere of the Origin
Latitude determines the sign.

?     2nd Standard Parallel ? A latitude value that specifies one of the
two the parallels where the point scale factor is 1.0.  The 2nd Standard
Parallel is fixed at ï¿½b89 59 59.0 degrees. The hemisphere of the Origin
Latitude determines the sign."

Other than these specifics regarding the choice for the Standard Parallels,
the Ney's Projection is a standard Lambert Conformal Conic in a secant
(POLAR) case.

Note that: "Ney?s (Modified Lambert Conformal Conic) projection coordinates
consist of two fields labeled Easting/X and Northing/Y.  The legal values
for the Easting/X and the Northing/Y fields are optionally signed real
values, with up to three decimal places, in meters.  The coordinates must
designate a point that is located within the boundaries of the specified
Ney?s (Modified Lambert Conformal Conic) projection."

Ney's Projection is a POLAR (aspect) Projection.

GeoTrans does have its warts, but this explanation is crystal-clear to a
practitioner in the field.

Cliff Mugnier
LOUISIANA STATE UNIVERSITY

-----------------------------------

I cannot find any reference to "Neys" projection in my references or
bibiography
listings.

Snyder mentions some alternative Lambert Conics; one based upon "Gauss
projection."  Perhaps using the conformal projection to the sphere?
But Neys
never appears in any index.  Perhaps Russian, but the name does not
sound
like a Russian name.

The NIMA GeoTrans stuff is completely incomprehensible so I was not able
to verify the location of any related material in the remotesensing
distribution.

If anyone can supply a reference I would be glad to look into it.

On Apr 18, 2004, at 9:24 PM, proj-admin at remotesensing.org wrote:

> Hello All,
> Anyone familiar with the Neys projection found in the GeoTrans package?
>
> It is stated as being a "Modified Lambert Conformal Conic", but I
> could not
> find any further information in my reference books or online.
> Or is there a more known name for this? Is this supported by proj4?
>
> Just any information on this will do.
>
> Best regards,
> Paul.
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua

_______________________________________________
Proj mailing list
Proj at remotesensing.org
http://www.remotesensing.org/mailman/listinfo/proj


From proj-admin at remotesensing.org  Mon Apr 19 12:40:52 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Mon, 19 Apr 2004 15:40:52 -0400
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal Conic
In-Reply-To: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu>
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu>
Message-ID: <7788B1C0-9239-11D8-A4DB-000A958A3346@verizon.net>

The only gotcha might seem to be the near polar spec of one of the
secant latitudes at 89d59'59 but [l]proj seems to handle this OK.  In 
fact,
one can spec it to 59.999" and still not blow it; but 90d even does 
cause
failure.  This does not mean that all is OK in the computations due to
possible loss of significance or other computational hassles.

The spec is not perfect as there is a gore that is about 12km wide 
opposite
the CM.  That is, the cone is not closed.

It would be interesting to compare the scale error with the polar 
stereographic
which, IMHO, would be the preferred projection.

I can see why this is not mentioned anywhere else.

On Apr 19, 2004, at 2:07 PM, proj-admin at remotesensing.org wrote:
>
> The GeoTrans documentation says:
>
> "A.1.25 NEY?S (MODIFIED LAMBERT CONFORMAL CONIC) PROJECTION
> The Ney's (Modified Lambert Conformal Conic) projection is a conformal
> projection in which the projected parallels are expanded slightly to 
> form
> complete concentric circles centered at the pole. As shown in Figure 
> A-27,
> the projected meridians are radii of concentric circles that meet at 
> the
> pole. Ney's is a limiting form of the Lambert Conformal Conic. There 
> are
> two parallels, called standard parallels, along which the point scale
> factor is one. One parallel is at either Â±71 or Â±74 degrees. The other
> parallel is at Â±89 59 59.0 degrees, depending on which hemisphere the 
> first
> parallel is in.
> Ney's (Modified Lambert Conformal Conic) is used near the poles. Scale
> distortion is small 25Â° to 30Â° from the pole. Distortion rapidly 
> increases
> beyond this.
> The Easting\X and Northing\Y coordinates range from -40,000,000 to
> 40,000,000.
>
>
> "?    1st Standard Parallel ? A latitude value that specifies one of 
> the
> two the parallels where the point scale factor is 1.0.  The 1st 
> Standard
> Parallel is either ?71 or ?74 degrees. The hemisphere of the Origin
> Latitude determines the sign.
>
> ?     2nd Standard Parallel ? A latitude value that specifies one of 
> the
> two the parallels where the point scale factor is 1.0.  The 2nd 
> Standard
> Parallel is fixed at ?89 59 59.0 degrees. The hemisphere of the Origin
> Latitude determines the sign."
>
> Other than these specifics regarding the choice for the Standard 
> Parallels,
> the Ney's Projection is a standard Lambert Conformal Conic in a secant
> (POLAR) case.
>
> Note that: "Ney?s (Modified Lambert Conformal Conic) projection 
> coordinates
> consist of two fields labeled Easting/X and Northing/Y.  The legal 
> values
> for the Easting/X and the Northing/Y fields are optionally signed real
> values, with up to three decimal places, in meters.  The coordinates 
> must
> designate a point that is located within the boundaries of the 
> specified
> Ney?s (Modified Lambert Conformal Conic) projection."
>
> Ney's Projection is a POLAR (aspect) Projection.
>
> GeoTrans does have its warts, but this explanation is crystal-clear to 
> a
> practitioner in the field.
>
> Cliff Mugnier
> LOUISIANA STATE UNIVERSITY
>
> -----------------------------------
>
> I cannot find any reference to "Neys" projection in my references or
> bibiography
> listings.
>
> Snyder mentions some alternative Lambert Conics; one based upon "Gauss
> projection."  Perhaps using the conformal projection to the sphere?
> But Neys
> never appears in any index.  Perhaps Russian, but the name does not
> sound
> like a Russian name.
>
> The NIMA GeoTrans stuff is completely incomprehensible so I was not 
> able
> to verify the location of any related material in the remotesensing
> distribution.
>
> If anyone can supply a reference I would be glad to look into it.
>
> On Apr 18, 2004, at 9:24 PM, proj-admin at remotesensing.org wrote:
>
>> Hello All,
>> Anyone familiar with the Neys projection found in the GeoTrans 
>> package?
>>
>> It is stated as being a "Modified Lambert Conformal Conic", but I
>> could not
>> find any further information in my reference books or online.
>> Or is there a more known name for this? Is this supported by proj4?
>>
>> Just any information on this will do.
>>
>> Best regards,
>> Paul.
> _____________________________________
> Jerry and the low riders: Daisy Mae and Joshua
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
>
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 4663 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20040419/dea4f054/attachment.bin>

From proj-admin at remotesensing.org  Mon Apr 19 15:18:23 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Tue, 20 Apr 2004 07:18:23 +0900
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal Conic
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu>
Message-ID: <001001c4265c$3cbd1d50$030ba8c0@SWEETJESUS>

Please Sir,
Where do I find this documentation? It does not seems to be in
the library I downloaded.

Best regards,
Paul.

----- Original Message ----- 
From: <proj-admin at remotesensing.org>
To: <proj at remotesensing.org>
Sent: Tuesday, April 20, 2004 3:07 AM
Subject: Re: [Proj] OT: Geotrans's Neys Projection - Modified Lambert
Conformal Conic


>
>
>
>
> The GeoTrans documentation says:
>
> "A.1.25 NEY?S (MODIFIED LAMBERT CONFORMAL CONIC) PROJECTION
> The Ney's (Modified Lambert Conformal Conic) projection is a conformal
> projection in which the projected parallels are expanded slightly to form
> complete concentric circles centered at the pole. As shown in Figure A-27,
> the projected meridians are radii of concentric circles that meet at the
> pole. Ney's is a limiting form of the Lambert Conformal Conic. There are
> two parallels, called standard parallels, along which the point scale
> factor is one. One parallel is at either ï¿½ï¿½71 or ï¿½ï¿½74 degrees. The other
> parallel is at ï¿½ï¿½89 59 59.0 degrees, depending on which hemisphere the
first
> parallel is in.
> Ney's (Modified Lambert Conformal Conic) is used near the poles. Scale
> distortion is small 25ï¿½X to 30ï¿½X from the pole. Distortion rapidly
increases
> beyond this.
> The Easting\X and Northing\Y coordinates range from -40,000,000 to
> 40,000,000.
>
>
> "?    1st Standard Parallel ? A latitude value that specifies one of the
> two the parallels where the point scale factor is 1.0.  The 1st Standard
> Parallel is either ï¿½b71 or ï¿½b74 degrees. The hemisphere of the Origin
> Latitude determines the sign.
>
> ?     2nd Standard Parallel ? A latitude value that specifies one of the
> two the parallels where the point scale factor is 1.0.  The 2nd Standard
> Parallel is fixed at ï¿½b89 59 59.0 degrees. The hemisphere of the Origin
> Latitude determines the sign."
>
> Other than these specifics regarding the choice for the Standard
Parallels,
> the Ney's Projection is a standard Lambert Conformal Conic in a secant
> (POLAR) case.
>
> Note that: "Ney?s (Modified Lambert Conformal Conic) projection
coordinates
> consist of two fields labeled Easting/X and Northing/Y.  The legal values
> for the Easting/X and the Northing/Y fields are optionally signed real
> values, with up to three decimal places, in meters.  The coordinates must
> designate a point that is located within the boundaries of the specified
> Ney?s (Modified Lambert Conformal Conic) projection."
>
> Ney's Projection is a POLAR (aspect) Projection.
>
> GeoTrans does have its warts, but this explanation is crystal-clear to a
> practitioner in the field.
>
> Cliff Mugnier
> LOUISIANA STATE UNIVERSITY
>
> -----------------------------------
>
> I cannot find any reference to "Neys" projection in my references or
> bibiography
> listings.
>
> Snyder mentions some alternative Lambert Conics; one based upon "Gauss
> projection."  Perhaps using the conformal projection to the sphere?
> But Neys
> never appears in any index.  Perhaps Russian, but the name does not
> sound
> like a Russian name.
>
> The NIMA GeoTrans stuff is completely incomprehensible so I was not able
> to verify the location of any related material in the remotesensing
> distribution.
>
> If anyone can supply a reference I would be glad to look into it.
>
> On Apr 18, 2004, at 9:24 PM, proj-admin at remotesensing.org wrote:
>
> > Hello All,
> > Anyone familiar with the Neys projection found in the GeoTrans package?
> >
> > It is stated as being a "Modified Lambert Conformal Conic", but I
> > could not
> > find any further information in my reference books or online.
> > Or is there a more known name for this? Is this supported by proj4?
> >
> > Just any information on this will do.
> >
> > Best regards,
> > Paul.
> _____________________________________
> Jerry and the low riders: Daisy Mae and Joshua
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>




From proj-admin at remotesensing.org  Mon Apr 19 15:56:57 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Mon, 19 Apr 2004 17:56:57 -0500
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal
 Conic
Message-ID: <OF0CCA0736.09787EA0-ON86256E7B.007E104A-86256E7B.007E1093@lsu.edu>




When I downloaded my copy of GeoTrans from the NGA website and installed
it, the documentation was in the "DOCS" subdirectory.

You can contact me directly and I'll e-mail the document to you.  It is a
WORD document.

Cliff Mugnier  (cjmce at LSU.edu)
LOUISIANA STATE UNIVERSITY
-------------------------------------
Please Sir,
Where do I find this documentation? It does not seems to be in
the library I downloaded.

Best regards,
Paul.

----- Original Message -----
From: <proj-admin at remotesensing.org>
To: <proj at remotesensing.org>
Sent: Tuesday, April 20, 2004 3:07 AM
Subject: Re: [Proj] OT: Geotrans's Neys Projection - Modified Lambert
Conformal Conic


>
>
>
>
> The GeoTrans documentation says:
>
> "A.1.25 NEY?S (MODIFIED LAMBERT CONFORMAL CONIC) PROJECTION
> The Ney's (Modified Lambert Conformal Conic) projection is a conformal
> projection in which the projected parallels are expanded slightly to form
> complete concentric circles centered at the pole. As shown in Figure
A-27,
> the projected meridians are radii of concentric circles that meet at the
> pole. Ney's is a limiting form of the Lambert Conformal Conic. There are
> two parallels, called standard parallels, along which the point scale
> factor is one. One parallel is at either Â¡Ã71 or Â¡Ã74 degrees. The other
> parallel is at Â¡Ã89 59 59.0 degrees, depending on which hemisphere the
first
> parallel is in.
> Ney's (Modified Lambert Conformal Conic) is used near the poles. Scale
> distortion is small 25Â¢X to 30Â¢X from the pole. Distortion rapidly
increases
> beyond this.
> The Easting\X and Northing\Y coordinates range from -40,000,000 to
> 40,000,000.
>
>
> "?    1st Standard Parallel ? A latitude value that specifies one of the
> two the parallels where the point scale factor is 1.0.  The 1st Standard
> Parallel is either ?b71 or ?b74 degrees. The hemisphere of the Origin
> Latitude determines the sign.
>
> ?     2nd Standard Parallel ? A latitude value that specifies one of the
> two the parallels where the point scale factor is 1.0.  The 2nd Standard
> Parallel is fixed at ?b89 59 59.0 degrees. The hemisphere of the Origin
> Latitude determines the sign."
>
> Other than these specifics regarding the choice for the Standard
Parallels,
> the Ney's Projection is a standard Lambert Conformal Conic in a secant
> (POLAR) case.
>
> Note that: "Ney?s (Modified Lambert Conformal Conic) projection
coordinates
> consist of two fields labeled Easting/X and Northing/Y.  The legal values
> for the Easting/X and the Northing/Y fields are optionally signed real
> values, with up to three decimal places, in meters.  The coordinates must
> designate a point that is located within the boundaries of the specified
> Ney?s (Modified Lambert Conformal Conic) projection."
>
> Ney's Projection is a POLAR (aspect) Projection.
>
> GeoTrans does have its warts, but this explanation is crystal-clear to a
> practitioner in the field.
>
> Cliff Mugnier
> LOUISIANA STATE UNIVERSITY
>
> -----------------------------------
>
> I cannot find any reference to "Neys" projection in my references or
> bibiography
> listings.
>
> Snyder mentions some alternative Lambert Conics; one based upon "Gauss
> projection."  Perhaps using the conformal projection to the sphere?
> But Neys
> never appears in any index.  Perhaps Russian, but the name does not
> sound
> like a Russian name.
>
> The NIMA GeoTrans stuff is completely incomprehensible so I was not able
> to verify the location of any related material in the remotesensing
> distribution.
>
> If anyone can supply a reference I would be glad to look into it.
>
> On Apr 18, 2004, at 9:24 PM, proj-admin at remotesensing.org wrote:
>
> > Hello All,
> > Anyone familiar with the Neys projection found in the GeoTrans package?
> >
> > It is stated as being a "Modified Lambert Conformal Conic", but I
> > could not
> > find any further information in my reference books or online.
> > Or is there a more known name for this? Is this supported by proj4?
> >
> > Just any information on this will do.
> >
> > Best regards,
> > Paul.
> _____________________________________
> Jerry and the low riders: Daisy Mae and Joshua
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>


_______________________________________________
Proj mailing list
Proj at remotesensing.org
http://www.remotesensing.org/mailman/listinfo/proj



From proj-admin at remotesensing.org  Mon Apr 19 16:23:57 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Tue, 20 Apr 2004 08:23:57 +0900
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal Conic
References: <OF0CCA0736.09787EA0-ON86256E7B.007E104A-86256E7B.007E1093@lsu.edu>
Message-ID: <004301c42665$65341140$030ba8c0@SWEETJESUS>

Hello,
Thanks for the the information. I have now found the document. It is
located in the users package. I was only using the developers package.

By the way, I have nothing against GeoTrans. It is more suitable for
a work I am doing now in .NET Framework. I easily ported it to C++
and then moved it to C# without any problem.

Best regard,
Paul.

----- Original Message ----- 
From: <proj-admin at remotesensing.org>
To: <proj at remotesensing.org>
Sent: Tuesday, April 20, 2004 7:56 AM
Subject: Re: [Proj] OT: Geotrans's Neys Projection - Modified Lambert
Conformal Conic


>
>
>
>
> When I downloaded my copy of GeoTrans from the NGA website and installed
> it, the documentation was in the "DOCS" subdirectory.
>
> You can contact me directly and I'll e-mail the document to you.  It is a
> WORD document.
>
> Cliff Mugnier  (cjmce at LSU.edu)
> LOUISIANA STATE UNIVERSITY
> -------------------------------------
> Please Sir,
> Where do I find this documentation? It does not seems to be in
> the library I downloaded.
>
> Best regards,
> Paul.
>
> ----- Original Message -----
> From: <proj-admin at remotesensing.org>
> To: <proj at remotesensing.org>
> Sent: Tuesday, April 20, 2004 3:07 AM
> Subject: Re: [Proj] OT: Geotrans's Neys Projection - Modified Lambert
> Conformal Conic
>
>
> >
> >
> >
> >
> > The GeoTrans documentation says:
> >
> > "A.1.25 NEY?S (MODIFIED LAMBERT CONFORMAL CONIC) PROJECTION
> > The Ney's (Modified Lambert Conformal Conic) projection is a conformal
> > projection in which the projected parallels are expanded slightly to
form
> > complete concentric circles centered at the pole. As shown in Figure
> A-27,
> > the projected meridians are radii of concentric circles that meet at the
> > pole. Ney's is a limiting form of the Lambert Conformal Conic. There are
> > two parallels, called standard parallels, along which the point scale
> > factor is one. One parallel is at either Â¡Ã71 or Â¡Ã74 degrees. The other
> > parallel is at Â¡Ã89 59 59.0 degrees, depending on which hemisphere the
> first
> > parallel is in.
> > Ney's (Modified Lambert Conformal Conic) is used near the poles. Scale
> > distortion is small 25Â¢X to 30Â¢X from the pole. Distortion rapidly
> increases
> > beyond this.
> > The Easting\X and Northing\Y coordinates range from -40,000,000 to
> > 40,000,000.
> >
> >
> > "?    1st Standard Parallel ? A latitude value that specifies one of the
> > two the parallels where the point scale factor is 1.0.  The 1st Standard
> > Parallel is either ?b71 or ?b74 degrees. The hemisphere of the Origin
> > Latitude determines the sign.
> >
> > ?     2nd Standard Parallel ? A latitude value that specifies one of the
> > two the parallels where the point scale factor is 1.0.  The 2nd Standard
> > Parallel is fixed at ?b89 59 59.0 degrees. The hemisphere of the Origin
> > Latitude determines the sign."
> >
> > Other than these specifics regarding the choice for the Standard
> Parallels,
> > the Ney's Projection is a standard Lambert Conformal Conic in a secant
> > (POLAR) case.
> >
> > Note that: "Ney?s (Modified Lambert Conformal Conic) projection
> coordinates
> > consist of two fields labeled Easting/X and Northing/Y.  The legal
values
> > for the Easting/X and the Northing/Y fields are optionally signed real
> > values, with up to three decimal places, in meters.  The coordinates
must
> > designate a point that is located within the boundaries of the specified
> > Ney?s (Modified Lambert Conformal Conic) projection."
> >
> > Ney's Projection is a POLAR (aspect) Projection.
> >
> > GeoTrans does have its warts, but this explanation is crystal-clear to a
> > practitioner in the field.
> >
> > Cliff Mugnier
> > LOUISIANA STATE UNIVERSITY
> >
> > -----------------------------------
> >
> > I cannot find any reference to "Neys" projection in my references or
> > bibiography
> > listings.
> >
> > Snyder mentions some alternative Lambert Conics; one based upon "Gauss
> > projection."  Perhaps using the conformal projection to the sphere?
> > But Neys
> > never appears in any index.  Perhaps Russian, but the name does not
> > sound
> > like a Russian name.
> >
> > The NIMA GeoTrans stuff is completely incomprehensible so I was not able
> > to verify the location of any related material in the remotesensing
> > distribution.
> >
> > If anyone can supply a reference I would be glad to look into it.
> >
> > On Apr 18, 2004, at 9:24 PM, proj-admin at remotesensing.org wrote:
> >
> > > Hello All,
> > > Anyone familiar with the Neys projection found in the GeoTrans
package?
> > >
> > > It is stated as being a "Modified Lambert Conformal Conic", but I
> > > could not
> > > find any further information in my reference books or online.
> > > Or is there a more known name for this? Is this supported by proj4?
> > >
> > > Just any information on this will do.
> > >
> > > Best regards,
> > > Paul.
> > _____________________________________
> > Jerry and the low riders: Daisy Mae and Joshua
> >
> > _______________________________________________
> > Proj mailing list
> > Proj at remotesensing.org
> > http://www.remotesensing.org/mailman/listinfo/proj
> > _______________________________________________
> > Proj mailing list
> > Proj at remotesensing.org
> > http://www.remotesensing.org/mailman/listinfo/proj
> >
>
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
>




From proj-admin at remotesensing.org  Mon Apr 19 19:10:52 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Mon, 19 Apr 2004 22:10:52 -0400
Subject: [Proj] OT: Geotrans's Neys Projection - Modified Lambert Conformal Conic
In-Reply-To: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu>
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu>
Message-ID: <F33E8839-926F-11D8-A4DB-000A958A3346@verizon.net>

The more I cogitate on this description the more questions I have.

1: if one uses the basic Lambert equations for the 2 parallel case and
    where neither parallel is 90d then the factor n will be less than 1.
    n is used in the equation; theta=n(lon-lon_0) where theta is the
    polar coordinate angle and the extent of the parallel arcs.
    When (lon-lon_0)=180 and n<1 then theta will be less than 180 and
    total extent of the parallels will leave a gap opposite the central
    meridian.  If n=1 then there will be closure and the parallels will
    make a full circle.

2: If n=1 then only *one* parallel is involved in determining the 
remainder
    of the computations *and* the second standard parallel is at the
    pole.  The projection is secant.

3: It is unclear and apparently unspecified how Ney tinkered with the 
LCC
    to "extend to form complete concentric circles" and why [s]he did not
    simply modify the basic equation to perform the single parallel 
method.
    Also, is this tweaking fully conformal?  I would be *very* suspicious
    because the seemingly obvious method was ignored.

Sorry to not include the full math but it is impossible to make a clean
description in simple ascii text.

On Apr 19, 2004, at 2:07 PM, proj-admin at remotesensing.org wrote:

> The GeoTrans documentation says:
>
> "A.1.25 NEY?S (MODIFIED LAMBERT CONFORMAL CONIC) PROJECTION
> The Ney's (Modified Lambert Conformal Conic) projection is a conformal
> projection in which the projected parallels are expanded slightly to 
> form
> complete concentric circles centered at the pole. As shown in Figure 
> A-27,
> the projected meridians are radii of concentric circles that meet at 
> the
> pole. Ney's is a limiting form of the Lambert Conformal Conic. There 
> are
> two parallels, called standard parallels, along which the point scale
> factor is one. One parallel is at either Â±71 or Â±74 degrees. The other
> parallel is at Â±89 59 59.0 degrees, depending on which hemisphere the 
> first
> parallel is in.
> Ney's (Modified Lambert Conformal Conic) is used near the poles. Scale
> distortion is small 25Â° to 30Â° from the pole. Distortion rapidly 
> increases
> beyond this.
> The Easting\X and Northing\Y coordinates range from -40,000,000 to
> 40,000,000.
>
>
> "?    1st Standard Parallel ? A latitude value that specifies one of 
> the
> two the parallels where the point scale factor is 1.0.  The 1st 
> Standard
> Parallel is either ?71 or ?74 degrees. The hemisphere of the Origin
> Latitude determines the sign.
>
> ?     2nd Standard Parallel ? A latitude value that specifies one of 
> the
> two the parallels where the point scale factor is 1.0.  The 2nd 
> Standard
> Parallel is fixed at ?89 59 59.0 degrees. The hemisphere of the Origin
> Latitude determines the sign."
>
> Other than these specifics regarding the choice for the Standard 
> Parallels,
> the Ney's Projection is a standard Lambert Conformal Conic in a secant
> (POLAR) case.
>
> Note that: "Ney?s (Modified Lambert Conformal Conic) projection 
> coordinates
> consist of two fields labeled Easting/X and Northing/Y.  The legal 
> values
> for the Easting/X and the Northing/Y fields are optionally signed real
> values, with up to three decimal places, in meters.  The coordinates 
> must
> designate a point that is located within the boundaries of the 
> specified
> Ney?s (Modified Lambert Conformal Conic) projection."
>
> Ney's Projection is a POLAR (aspect) Projection.
>
> GeoTrans does have its warts, but this explanation is crystal-clear to 
> a
> practitioner in the field.
>
> Cliff Mugnier
> LOUISIANA STATE UNIVERSITY
>
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 3803 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20040419/4b11ad17/attachment.bin>

From proj-admin at remotesensing.org  Mon Apr 19 21:59:21 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Tue, 20 Apr 2004 13:59:21 +0900
Subject: [Proj] EPSG and ToWGS84
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <7788B1C0-9239-11D8-A4DB-000A958A3346@verizon.net>
Message-ID: <000e01c42694$405ba660$700201c0@MAPQUEST.local>

Hello All,
Please can anyone help me find the ToWGS84 values for a datum in
the EPSG database?

I have being playing with the EPSG database but still could not find
the ToWGS84 parameters anywhere!

Best regards,
Paul.



From proj-admin at remotesensing.org  Tue Apr 20 06:26:48 2004
From: proj-admin at remotesensing.org (proj-admin at remotesensing.org)
Date: Tue, 20 Apr 2004 09:26:48 -0400
Subject: [Proj] To proj elist administrator
In-Reply-To: <F33E8839-926F-11D8-A4DB-000A958A3346@verizon.net>
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <F33E8839-926F-11D8-A4DB-000A958A3346@verizon.net>
Message-ID: <60560ADC-92CE-11D8-80BA-000A958A3346@verizon.net>

The old mechanism for handling this email list had the nice habit of 
putting the
senders name as the "from" field so that one could see from the mail 
handler
who sent the email from the message list.  Now, all I see is the 
subject and
proj-admin at ... as the author.

Unless the author of the message has a signature line we would not
know who sent the message.

Similarly, if one wants to send a message directly to the sender the 
address
of the originator is not available.
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From GalbraithP at dfo-mpo.gc.ca  Tue Apr 20 06:55:15 2004
From: GalbraithP at dfo-mpo.gc.ca (Peter S Galbraith)
Date: Tue, 20 Apr 2004 09:55:15 -0400
Subject: [Proj] To proj elist administrator 
In-Reply-To: Your message of "Tue, 20 Apr 2004 09:26:48 EDT."
             <60560ADC-92CE-11D8-80BA-000A958A3346@verizon.net> 
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <F33E8839-926F-11D8-A4DB-000A958A3346@verizon.net>  <60560ADC-92CE-11D8-80BA-000A958A3346@verizon.net> 
Message-ID: <20040420135516.7B4F7D9E34@mixing.qc.dfo.ca>

proj-admin at remotesensing.org wrote:

> The old mechanism for handling this email list had the nice habit of
> putting the
> senders name as the "from" field so that one could see from the mail handler
> who sent the email from the message list.  Now, all I see is the subject and
> proj-admin at ... as the author.
> 
> Unless the author of the message has a signature line we would not
> know who sent the message.
> 
> Similarly, if one wants to send a message directly to the sender the address
> of the originator is not available.

It also sets `Reply-To: proj at remotesensing.org' as a header, which is
evil.

(Guess I'd better add a sig file here...)

-- 
Peter S. Galbraith, Debian Developer          <psg at debian.org>
                                 http://people.debian.org/~psg
GPG key 1024/D2A913A1 - 97CE 866F F579 96EE  6E68 8170 35FF 799E


From warmerdam at pobox.com  Tue Apr 20 06:57:41 2004
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 20 Apr 2004 09:57:41 -0400
Subject: [Proj] To proj elist administrator
In-Reply-To: <60560ADC-92CE-11D8-80BA-000A958A3346@verizon.net>
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <F33E8839-926F-11D8-A4DB-000A958A3346@verizon.net> <60560ADC-92CE-11D8-80BA-000A958A3346@verizon.net>
Message-ID: <40852C55.5000903@pobox.com>

proj-admin at remotesensing.org wrote:
> The old mechanism for handling this email list had the nice habit of 
> putting the
> senders name as the "from" field so that one could see from the mail 
> handler
> who sent the email from the message list.  Now, all I see is the subject 
> and
> proj-admin at ... as the author.
> 
> Unless the author of the message has a signature line we would not
> know who sent the message.
> 
> Similarly, if one wants to send a message directly to the sender the 
> address
> of the originator is not available.

Gerald,

I had turned on the option to "hide" the email addresses in mailman, which
is what is causing this behaviour, in order to make it harder for spammers
to harvest email addresses from the online archives.   However, I find it
as annoying as you do, and have disabled the option for now.  What I really
want is good email hiding in the archive not on the active list, but I am not
sure how to accomplish that.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent




From neteler at itc.it  Tue Apr 20 09:04:08 2004
From: neteler at itc.it (Markus Neteler)
Date: Tue, 20 Apr 2004 18:04:08 +0200
Subject: [Proj] EPSG and ToWGS84
In-Reply-To: <000e01c42694$405ba660$700201c0@MAPQUEST.local>
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <7788B1C0-9239-11D8-A4DB-000A958A3346@verizon.net> <000e01c42694$405ba660$700201c0@MAPQUEST.local>
Message-ID: <20040420160408.GD16487@thuille.itc.it>

On Tue, Apr 20, 2004 at 01:59:21PM +0900, proj-admin at remotesensing.org wrote:
> Hello All,
> Please can anyone help me find the ToWGS84 values for a datum in
> the EPSG database?
> 
> I have being playing with the EPSG database but still could not find
> the ToWGS84 parameters anywhere!

The SQL query should be something like this (I received this
SQL statement from an EPSG team member):

SELECT o.coord_op_name, m.coord_op_method_name, p.parameter_name,
pu.sort_order, pv.parameter_value, u.unit_of_meas_name, a.area_name
FROM epsg_coordoperation o
JOIN epsg_coordoperationmethod m
ON m.coord_op_method_code = o.coord_op_method_code
JOIN epsg_coordoperationparamvalue pv
ON pv.coord_op_method_code = o.coord_op_method_code AND
pv.coord_op_code = o.coord_op_code
JOIN epsg_coordoperationparamusage pu
ON pu.coord_op_method_code = o.coord_op_method_Code AND
pu.parameter_code = pv.parameter_code
JOIN epsg_coordoperationparam p
ON p.parameter_code = pv.parameter_code
JOIN epsg_unitofmeasure u
ON u.uom_code = pv.uom_code
JOIN epsg_area a
ON a.area_code = o.area_of_use_code
WHERE o.coord_op_type = 'transformation' AND o.coord_op_name 
LIKE '%WGS 84%' AND o.deprecated = 0
ORDER BY coord_op_name;

Best regards,

 Markus



From paul at toolscenter.org  Tue Apr 20 15:21:26 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Wed, 21 Apr 2004 07:21:26 +0900
Subject: [Proj] EPSG and ToWGS84
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <7788B1C0-9239-11D8-A4DB-000A958A3346@verizon.net> <000e01c42694$405ba660$700201c0@MAPQUEST.local> <20040420160408.GD16487@thuille.itc.it>
Message-ID: <005401c42725$d37219c0$030ba8c0@SWEETJESUS>

Thanks so much. I will study it today and see how to make
maximum use of it.

Best regards,
Paul.

----- Original Message ----- 
From: "Markus Neteler" <neteler at itc.it>
To: <proj at remotesensing.org>
Sent: Wednesday, April 21, 2004 1:04 AM
Subject: Re: [Proj] EPSG and ToWGS84


> On Tue, Apr 20, 2004 at 01:59:21PM +0900, proj-admin at remotesensing.org
wrote:
> > Hello All,
> > Please can anyone help me find the ToWGS84 values for a datum in
> > the EPSG database?
> >
> > I have being playing with the EPSG database but still could not find
> > the ToWGS84 parameters anywhere!
>
> The SQL query should be something like this (I received this
> SQL statement from an EPSG team member):
>
> SELECT o.coord_op_name, m.coord_op_method_name, p.parameter_name,
> pu.sort_order, pv.parameter_value, u.unit_of_meas_name, a.area_name
> FROM epsg_coordoperation o
> JOIN epsg_coordoperationmethod m
> ON m.coord_op_method_code = o.coord_op_method_code
> JOIN epsg_coordoperationparamvalue pv
> ON pv.coord_op_method_code = o.coord_op_method_code AND
> pv.coord_op_code = o.coord_op_code
> JOIN epsg_coordoperationparamusage pu
> ON pu.coord_op_method_code = o.coord_op_method_Code AND
> pu.parameter_code = pv.parameter_code
> JOIN epsg_coordoperationparam p
> ON p.parameter_code = pv.parameter_code
> JOIN epsg_unitofmeasure u
> ON u.uom_code = pv.uom_code
> JOIN epsg_area a
> ON a.area_code = o.area_of_use_code
> WHERE o.coord_op_type = 'transformation' AND o.coord_op_name
> LIKE '%WGS 84%' AND o.deprecated = 0
> ORDER BY coord_op_name;
>
> Best regards,
>
>  Markus
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
>




From zarko.mocnik at triera.net  Tue Apr 20 15:26:24 2004
From: zarko.mocnik at triera.net (Zarko Mocnik)
Date: Wed, 21 Apr 2004 00:26:24 +0200
Subject: [Proj] Different results with +ellps and +datum
Message-ID: <003601c42726$863a3a60$7903a1d5@limax>

I noticed the following bahaviour of cs2cs:
 
with
proj -ld
I got:
__datum_id__ __ellipse___
__definition/comments______________________________
       WGS84 WGS84        towgs84=0,0,0
etc..
 
When I enter:
cs2cs  +datum=WGS84 +proj=longlat +to +ellps=bessel +proj=longlat
+towgs84=668,-205,442
15d29'1.2737 46d36'44.7813
I got:
15d29'18.941"E  46d36'46.661"N -21.034
 
But if I change command line to:
cs2cs  +ellps=WGS84 +proj=longlat +to +ellps=bessel +proj=longlat
+towgs84=668,-205,442
15d29'1.2737 46d36'44.7813
I got:
15d29'1.274"E   46d36'42.631"N 704.788
 
I would expect the same result (the first one) in both cases.
 
Is this I bug or a feature?
 
I use cs2cs Rel. 4.4.6, 3 March 2003 (I downloaded precompiled windows
version)
 




 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20040421/cb229668/attachment.html>

From warmerdam at pobox.com  Tue Apr 20 20:13:57 2004
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 20 Apr 2004 23:13:57 -0400
Subject: [Proj] Different results with +ellps and +datum
Message-ID: <20040421031357.GA8964@gdal.velocet.ca>

> When I enter:
> cs2cs  +datum=WGS84 +proj=longlat +to +ellps=bessel +proj=longlat 
> +towgs84=668,-205,442
> 15d29'1.2737 46d36'44.7813
> I got:
> 15d29'18.941"E  46d36'46.661"N -21.034
>  
> But if I change command line to:
> cs2cs  +ellps=WGS84 +proj=longlat +to +ellps=bessel +proj=longlat 
> +towgs84=668,-205,442
> 15d29'1.2737 46d36'44.7813
> I got:
> 15d29'1.274"E   46d36'42.631"N 704.788
>  
> I would expect the same result (the first one) in both cases.
>  
> Is this I bug or a feature?

Zarko,

This is a "feature".  Because the source coordinate system has no
datum defined, the code assumes no datum shift should be applied
during the translation.  Furthermore, because it never goes though
this step, the earth model change is not even applied (a bug). 
My intention is that in the first case the earth model and datum
shift should be applied.  In the second case only the earth model
change should be applied. 

I do anticipate fixing the lack of an earth model change in the near
future. 

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From paul at toolscenter.org  Wed Apr 21 03:09:54 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Wed, 21 Apr 2004 19:09:54 +0900
Subject: [Proj] EPSG and ToWGS84
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <7788B1C0-9239-11D8-A4DB-000A958A3346@verizon.net> <000e01c42694$405ba660$700201c0@MAPQUEST.local> <20040420160408.GD16487@thuille.itc.it> <005401c42725$d37219c0$030ba8c0@SWEETJESUS>
Message-ID: <000b01c42788$cc8f37b0$700201c0@MAPQUEST.local>

Hello Markus Neteler and All,
The SQL statement could not solve my problem. I have adapted it
for the Microsoft Access.

What I really need is the Bursa Wolf transformation parameters
for a datum, normally formatted in WKT as

TOWGS84[Dx, Dy, Dz, Ex, Ey, Ez, PPm]

I am trying to retrieve datum values from the EPSG database
but could not find the Bursa Wolf transformation parameters.
(Sorry, if my earlier post was not clear enough).

Best regards,
Paul.


----- Original Message ----- 
From: "Paul Selormey" <paul at toolscenter.org>
To: <proj at remotesensing.org>
Sent: Wednesday, April 21, 2004 7:21 AM
Subject: Re: [Proj] EPSG and ToWGS84


> Thanks so much. I will study it today and see how to make
> maximum use of it.
> 
> Best regards,
> Paul.
> 
> ----- Original Message ----- 
> From: "Markus Neteler" <neteler at itc.it>
> To: <proj at remotesensing.org>
> Sent: Wednesday, April 21, 2004 1:04 AM
> Subject: Re: [Proj] EPSG and ToWGS84
> 
> 
> > On Tue, Apr 20, 2004 at 01:59:21PM +0900, proj-admin at remotesensing.org
> wrote:
> > > Hello All,
> > > Please can anyone help me find the ToWGS84 values for a datum in
> > > the EPSG database?
> > >
> > > I have being playing with the EPSG database but still could not find
> > > the ToWGS84 parameters anywhere!
> >
> > The SQL query should be something like this (I received this
> > SQL statement from an EPSG team member):
> >
> > SELECT o.coord_op_name, m.coord_op_method_name, p.parameter_name,
> > pu.sort_order, pv.parameter_value, u.unit_of_meas_name, a.area_name
> > FROM epsg_coordoperation o
> > JOIN epsg_coordoperationmethod m
> > ON m.coord_op_method_code = o.coord_op_method_code
> > JOIN epsg_coordoperationparamvalue pv
> > ON pv.coord_op_method_code = o.coord_op_method_code AND
> > pv.coord_op_code = o.coord_op_code
> > JOIN epsg_coordoperationparamusage pu
> > ON pu.coord_op_method_code = o.coord_op_method_Code AND
> > pu.parameter_code = pv.parameter_code
> > JOIN epsg_coordoperationparam p
> > ON p.parameter_code = pv.parameter_code
> > JOIN epsg_unitofmeasure u
> > ON u.uom_code = pv.uom_code
> > JOIN epsg_area a
> > ON a.area_code = o.area_of_use_code
> > WHERE o.coord_op_type = 'transformation' AND o.coord_op_name
> > LIKE '%WGS 84%' AND o.deprecated = 0
> > ORDER BY coord_op_name;
> >
> > Best regards,
> >
> >  Markus
> >
> > _______________________________________________
> > Proj mailing list
> > Proj at remotesensing.org
> > http://www.remotesensing.org/mailman/listinfo/proj
> >
> >
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
> 
> 


From judd at seas.marine.usf.edu  Thu Apr 22 10:16:18 2004
From: judd at seas.marine.usf.edu (Judd Taylor)
Date: Thu, 22 Apr 2004 13:16:18 -0400
Subject: [Proj] Proj API feature requests
Message-ID: <06cb01c4288d$86bed690$0200a8c0@goaway>

    I've been using the proj library through the C API for a couple of years
now. Although I like the simplicity of the API, a couple of extensions would
be useful to make some of the command line tool's functionality available in
C code without having to parse the command line tool's output.
    Here's a list of what features would have made my life easier in the
past, and a couple of things that would make things easy enough that I could
add more functionality to my programs:
    1. Verbose configuraion information, similar to cmdline's '-v' (to be
used to generate FGDC compliant metadata).
    2. Per-point characteristics, similar to cmdline's '-V'
    3. Error estimation similar to cmdline's '-S' option.
    4. Querying through the API of available projections and their
information, as well cartesian units querying, similar to the cmdline's
'-l', '-lP', '-lu', and '-le' options.

    Returning strings would work in a pinch, but it would be nice to get
direct access to the data structures that hold this information. After a
quick look at projects.h, it looks like the interesting structs are going to
be: PJ_LIST, PJ_ELLPS, PJ_UNITS, PJ_DATUMS, PJ_ELLPS, PJ_UNITS,
PJ_PRIME_MERIDIANS, FACTORS. Of course, direct access to the structs via the
API makes might break backwards-compatibility if they change down the
road... so maybe something else may work better.
    For #2-3 above, a seperate function for pj_fwd(), pj_inv(), etc... would
be nice as the extended information would be available, but if you don't
want it you could just call the normal functions which should be faster.

    Any thoughts/ideas/volunteers?

-Judd


______________________________
Judd Taylor
Computer Research Specialist
Institute for Marine Remote Sensing
University of South Florida
140 7th Ave. South
St Petersburg, FL 33701
(727) 553-1186
(727) 553-1103 (fax)
judd at marine.usf.edu



From gerald.evenden at verizon.net  Thu Apr 22 11:10:57 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Thu, 22 Apr 2004 14:10:57 -0400
Subject: [Proj] Proj API feature requests
In-Reply-To: <06cb01c4288d$86bed690$0200a8c0@goaway>
References: <06cb01c4288d$86bed690$0200a8c0@goaway>
Message-ID: <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net>

I suggest you read some of the incomplete manual documentation of 
libproj4 on

http://members.bellatlantic.net/~vze2hc4d/proj4/

It contains a little more information on accessing some of the 
internals.

I have no idea what FGDC is so comment is difficult.

Prime meridians *are not* part of libproj4, so no comment.

Most of what you request, although not necessarily documented is 
available
by example in the [l]proj program.  The data structures referenced may
be updated with different contents but the structure itself is likely to
remain the same.

I guess that part of what you want is a "tutorial" for each of the 
projections.(?)
The library is not constructed with this in mind as it was designed as a
filter program and expects the user to know how to perform cartographic
projections and have a basic understanding of the necessary parameters.

As an aside, I had forgotten about some of the hyphen functions you 
mentioned
and had to look them up myself.  These are all functions of the program 
[l]proj
and not part of the library and except for changing proj to lproj I 
have not messed
with its internals for years.  I only use it to test projections.

My only concern is with the library and not with the program [l]proj 
which is
distributed with the library as an example of how to use the library and
as a reasonably usable filter function.  Certainly, write another 
interface
to the library---I have for several applications like graphics.  But 
internal
tables, structures are my concern and should not be tread upon without
serious thought.

On Apr 22, 2004, at 1:16 PM, Judd Taylor wrote:

>     I've been using the proj library through the C API for a couple of 
> years
> now. Although I like the simplicity of the API, a couple of extensions 
> would
> be useful to make some of the command line tool's functionality 
> available in
> C code without having to parse the command line tool's output.
>     Here's a list of what features would have made my life easier in 
> the
> past, and a couple of things that would make things easy enough that I 
> could
> add more functionality to my programs:
>     1. Verbose configuraion information, similar to cmdline's '-v' (to 
> be
> used to generate FGDC compliant metadata).
>     2. Per-point characteristics, similar to cmdline's '-V'
>     3. Error estimation similar to cmdline's '-S' option.
>     4. Querying through the API of available projections and their
> information, as well cartesian units querying, similar to the cmdline's
> '-l', '-lP', '-lu', and '-le' options.
>
>     Returning strings would work in a pinch, but it would be nice to 
> get
> direct access to the data structures that hold this information. After 
> a
> quick look at projects.h, it looks like the interesting structs are 
> going to
> be: PJ_LIST, PJ_ELLPS, PJ_UNITS, PJ_DATUMS, PJ_ELLPS, PJ_UNITS,
> PJ_PRIME_MERIDIANS, FACTORS. Of course, direct access to the structs 
> via the
> API makes might break backwards-compatibility if they change down the
> road... so maybe something else may work better.
>     For #2-3 above, a seperate function for pj_fwd(), pj_inv(), etc... 
> would
> be nice as the extended information would be available, but if you 
> don't
> want it you could just call the normal functions which should be 
> faster.
>
>     Any thoughts/ideas/volunteers?
>
> -Judd
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From judd at seas.marine.usf.edu  Thu Apr 22 11:53:00 2004
From: judd at seas.marine.usf.edu (Judd Taylor)
Date: Thu, 22 Apr 2004 14:53:00 -0400
Subject: [Proj] Proj API feature requests
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net>
Message-ID: <06f101c4289b$091c0650$0200a8c0@goaway>

I guess I should have mentioned I'm using the remotesensing.org version of
the library...

More below...

----- Original Message ----- 
From: "Gerald Evenden" <gerald.evenden at verizon.net>
To: <proj at remotesensing.org>
Sent: Thursday, April 22, 2004 2:10 PM
Subject: Re: [Proj] Proj API feature requests


> I suggest you read some of the incomplete manual documentation of
> libproj4 on
>
> http://members.bellatlantic.net/~vze2hc4d/proj4/
>
> It contains a little more information on accessing some of the
> internals.
>

Thanks! Didn't know about that manual. It does answer alot of my questions.

> I have no idea what FGDC is so comment is difficult.
>

FGDC stands for the Federal Geographic Data Committee, a group that issues
metadata standards (among other things). Some of the more recent requests
for proposals we've been seeing require that geograpic data products
produced on the grant have metadata that conforms to the FGDC standard. I
can get some of the information I need from libproj. If I haven;t already
bored you enough about metadata, check out:
http://www.fgdc.gov/metadata/meta_stand.html.

> Prime meridians *are not* part of libproj4, so no comment.
>

Sorry, I just saw something possibly interesting in the projects.h header...
guess not.

> Most of what you request, although not necessarily documented is
> available
> by example in the [l]proj program.  The data structures referenced may
> be updated with different contents but the structure itself is likely to
> remain the same.
>
> I guess that part of what you want is a "tutorial" for each of the
> projections.(?)
> The library is not constructed with this in mind as it was designed as a
> filter program and expects the user to know how to perform cartographic
> projections and have a basic understanding of the necessary parameters.
>

Not really looking for a tutorial. I've been wanting to write a GUI where
users of my mapping software (which uses proj), can interactively create and
save configurations that include the parameters I pass to proj_init(). I'm
just thinking of populating menus, etc...

> As an aside, I had forgotten about some of the hyphen functions you
> mentioned
> and had to look them up myself.  These are all functions of the program
> [l]proj
> and not part of the library and except for changing proj to lproj I
> have not messed
> with its internals for years.  I only use it to test projections.
>
> My only concern is with the library and not with the program [l]proj
> which is
> distributed with the library as an example of how to use the library and
> as a reasonably usable filter function.  Certainly, write another
> interface
> to the library---I have for several applications like graphics.  But
> internal
> tables, structures are my concern and should not be tread upon without
> serious thought.
>

Thanks again,
    Judd


> On Apr 22, 2004, at 1:16 PM, Judd Taylor wrote:
>
> >     I've been using the proj library through the C API for a couple of
> > years
> > now. Although I like the simplicity of the API, a couple of extensions
> > would
> > be useful to make some of the command line tool's functionality
> > available in
> > C code without having to parse the command line tool's output.
> >     Here's a list of what features would have made my life easier in
> > the
> > past, and a couple of things that would make things easy enough that I
> > could
> > add more functionality to my programs:
> >     1. Verbose configuraion information, similar to cmdline's '-v' (to
> > be
> > used to generate FGDC compliant metadata).
> >     2. Per-point characteristics, similar to cmdline's '-V'
> >     3. Error estimation similar to cmdline's '-S' option.
> >     4. Querying through the API of available projections and their
> > information, as well cartesian units querying, similar to the cmdline's
> > '-l', '-lP', '-lu', and '-le' options.
> >
> >     Returning strings would work in a pinch, but it would be nice to
> > get
> > direct access to the data structures that hold this information. After
> > a
> > quick look at projects.h, it looks like the interesting structs are
> > going to
> > be: PJ_LIST, PJ_ELLPS, PJ_UNITS, PJ_DATUMS, PJ_ELLPS, PJ_UNITS,
> > PJ_PRIME_MERIDIANS, FACTORS. Of course, direct access to the structs
> > via the
> > API makes might break backwards-compatibility if they change down the
> > road... so maybe something else may work better.
> >     For #2-3 above, a seperate function for pj_fwd(), pj_inv(), etc...
> > would
> > be nice as the extended information would be available, but if you
> > don't
> > want it you could just call the normal functions which should be
> > faster.
> >
> >     Any thoughts/ideas/volunteers?
> >
> > -Judd
> _____________________________________
> Jerry and the low riders: Daisy Mae and Joshua
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>



From gerald.evenden at verizon.net  Thu Apr 22 13:00:57 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Thu, 22 Apr 2004 16:00:57 -0400
Subject: [Proj] Proj API feature requests
In-Reply-To: <06f101c4289b$091c0650$0200a8c0@goaway>
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway>
Message-ID: <C54ECA4E-9497-11D8-BF22-000A958A3346@verizon.net>

Imbedded notes.
On Apr 22, 2004, at 2:53 PM, Judd Taylor wrote:

> I guess I should have mentioned I'm using the remotesensing.org 
> version of
> the library...

Not really that much different except for additions like prime meridian.

>> 	...

>
> FGDC stands for the Federal Geographic Data Committee, a group that 
> issues
> metadata standards (among other things). Some of the more recent 
> requests
> for proposals we've been seeing require that geograpic data products
> produced on the grant have metadata that conforms to the FGDC 
> standard. I
> can get some of the information I need from libproj. If I haven;t 
> already
> bored you enough about metadata, check out:
> http://www.fgdc.gov/metadata/meta_stand.html.

Ah, yes.  Seem to recall that stuff.
> 	...

> Not really looking for a tutorial. I've been wanting to write a GUI 
> where
> users of my mapping software (which uses proj), can interactively 
> create and
> save configurations that include the parameters I pass to proj_init(). 
> I'm
> just thinking of populating menus, etc...

Thought about the same thing many times but a couple of factors have
kept me out of the game: 1) except for a GUI plotting program using
Athena widgets that I did for MAPGEN I do not have much, if any, skill
in this area and 2) finding a GUI that is portable across OSs.  Also the
latter answer must have linkage ability to a C library.  Today it looks
like one would go crazy just making such a choice---too many options.
> 	...
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From judd at seas.marine.usf.edu  Thu Apr 22 15:00:14 2004
From: judd at seas.marine.usf.edu (Judd Taylor)
Date: Thu, 22 Apr 2004 18:00:14 -0400
Subject: [Proj] Proj API feature requests
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway> <C54ECA4E-9497-11D8-BF22-000A958A3346@verizon.net>
Message-ID: <006901c428b5$31a2a1f0$0200a8c0@goaway>

----- Original Message ----- 
From: "Gerald Evenden" <gerald.evenden at verizon.net>
To: <proj at remotesensing.org>
Sent: Thursday, April 22, 2004 4:00 PM
Subject: Re: [Proj] Proj API feature requests

>
> Thought about the same thing many times but a couple of factors have
> kept me out of the game: 1) except for a GUI plotting program using
> Athena widgets that I did for MAPGEN I do not have much, if any, skill
> in this area and 2) finding a GUI that is portable across OSs.  Also the
> latter answer must have linkage ability to a C library.  Today it looks
> like one would go crazy just making such a choice---too many options.
> > ...

I've been playing with Qt a little bit lately. It's free for all unix
variants, and there is a pay version for windows. It's a C++ library, so
linking w/ C code is a piece of cake. There are a ton of options, though...

-Judd



From gerald.evenden at verizon.net  Thu Apr 22 16:50:10 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Thu, 22 Apr 2004 19:50:10 -0400
Subject: [Proj] Proj API feature requests
In-Reply-To: <006901c428b5$31a2a1f0$0200a8c0@goaway>
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway> <C54ECA4E-9497-11D8-BF22-000A958A3346@verizon.net> <006901c428b5$31a2a1f0$0200a8c0@goaway>
Message-ID: <CA9D3789-94B7-11D8-BF22-000A958A3346@verizon.net>

Not familiar with Qt.  Quick search yielded a trolltech.com link but 
nothing
looked liked a free download.

Can php or tk/tcl be used?

There are more, I'm sure.

Of course part of the issue today is using the software over a network.

On Apr 22, 2004, at 6:00 PM, Judd Taylor wrote:

> ----- Original Message -----
> From: "Gerald Evenden" <gerald.evenden at verizon.net>
> To: <proj at remotesensing.org>
> Sent: Thursday, April 22, 2004 4:00 PM
> Subject: Re: [Proj] Proj API feature requests
>
>>
>> Thought about the same thing many times but a couple of factors have
>> kept me out of the game: 1) except for a GUI plotting program using
>> Athena widgets that I did for MAPGEN I do not have much, if any, skill
>> in this area and 2) finding a GUI that is portable across OSs.  Also 
>> the
>> latter answer must have linkage ability to a C library.  Today it 
>> looks
>> like one would go crazy just making such a choice---too many options.
>>> ...
>
> I've been playing with Qt a little bit lately. It's free for all unix
> variants, and there is a pay version for windows. It's a C++ library, 
> so
> linking w/ C code is a piece of cake. There are a ton of options, 
> though...
>
> -Judd
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
>
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From hamish_nospam at yahoo.com  Thu Apr 22 19:18:48 2004
From: hamish_nospam at yahoo.com (Hamish)
Date: Fri, 23 Apr 2004 14:18:48 +1200
Subject: [Proj] Proj API feature requests
In-Reply-To: <CA9D3789-94B7-11D8-BF22-000A958A3346@verizon.net>
References: <06cb01c4288d$86bed690$0200a8c0@goaway>
	<66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net>
	<06f101c4289b$091c0650$0200a8c0@goaway>
	<C54ECA4E-9497-11D8-BF22-000A958A3346@verizon.net>
	<006901c428b5$31a2a1f0$0200a8c0@goaway>
	<CA9D3789-94B7-11D8-BF22-000A958A3346@verizon.net>
Message-ID: <20040423141848.0f0582e2.hamish_nospam@yahoo.com>

>>> Thought about the same thing many times but a couple of factors
>>> have kept me out of the game: 1) except for a GUI plotting program
>>> using Athena widgets that I did for MAPGEN I do not have much, if
>>> any, skill in this area and 2) finding a GUI that is portable across
>>> OSs.  Also  the latter answer must have linkage ability to a C
>>> library.  Today it looks like one would go crazy just making such a
>>> choice---too many options.
...
> >
> > I've been playing with Qt a little bit lately. It's free for all
> > unix variants, and there is a pay version for windows. It's a C++
> > library, so linking w/ C code is a piece of cake. There are a ton of
> > options, though...
...
> Not familiar with Qt.  Quick search yielded a trolltech.com link but 
> nothing
> looked liked a free download.
> 
> Can php or tk/tcl be used?
> 
> There are more, I'm sure.


You might also look at WxWidgets, it's Free on all platforms.
(this is what the popular Audacity sound editor, among others, uses)

http://www.wxwidgets.org



Hamish


From warmerdam at pobox.com  Fri Apr 23 06:39:39 2004
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri, 23 Apr 2004 09:39:39 -0400
Subject: [Proj] Proj API feature requests
In-Reply-To: <06cb01c4288d$86bed690$0200a8c0@goaway>
References: <06cb01c4288d$86bed690$0200a8c0@goaway>
Message-ID: <40891C9B.8000200@pobox.com>

Judd Taylor wrote:
>     I've been using the proj library through the C API for a couple of years
> now. Although I like the simplicity of the API, a couple of extensions would
> be useful to make some of the command line tool's functionality available in
> C code without having to parse the command line tool's output.
>     Here's a list of what features would have made my life easier in the
> past, and a couple of things that would make things easy enough that I could
> add more functionality to my programs:
>     1. Verbose configuraion information, similar to cmdline's '-v' (to be
> used to generate FGDC compliant metadata).
 >     2. Per-point characteristics, similar to cmdline's '-V'

Judd,

I hadn't looked into this before, but it seems that there is a library
entry point called pj_pr_list() which produces the "-v" style output.  You
can also see how the -V output is generated in src/proj.c but it requires
"intimate" access into the PJ object as implemented.

For similar purposes I implemented a pj_get_def() function which attempts
to return a "fully expanded" set of projection parameters in use for a particular
definition.  This should expand +init stuff, include default ellpisoids, units
and so forth.  I am not sure it is comprehensive though.

On the issue of producing FGDC compliant metadata describing a coordinate
system, I don't really feel that belongs in PROJ.4 itself.  While Gerald might
argue that I am too quick to shove everything but the kitchen sink into the
remotesensing.org version of PROJ.4, I have traditionally considered conversion
to and from other coordinate system definition approaches as a higher level
API issue to be done outside PROJ.4.  I have developed conversion capabilities
to various other format, most notably OGC WKT, in my OGRSpatialReference
library.  I could also imagine a way of converting to/from FGDC metadata
descriptions of a coordinate system there.  However, I don't have the time
to work on such a thing just now.

>     3. Error estimation similar to cmdline's '-S' option.

This is apparently done with the pj_factors() function.

>     4. Querying through the API of available projections and their
> information, as well cartesian units querying, similar to the cmdline's
> '-l', '-lP', '-lu', and '-le' options.
> 
>     Returning strings would work in a pinch, but it would be nice to get
> direct access to the data structures that hold this information. After a
> quick look at projects.h, it looks like the interesting structs are going to
> be: PJ_LIST, PJ_ELLPS, PJ_UNITS, PJ_DATUMS, PJ_ELLPS, PJ_UNITS,
> PJ_PRIME_MERIDIANS, FACTORS. Of course, direct access to the structs via the
> API makes might break backwards-compatibility if they change down the
> road... so maybe something else may work better.

I'm pretty sure you can just access these structures if you have included
projects.h though how to do so isn't particularly well documented.

As noted in other messages, it is desirable for many applications to provide
GUIs for building PROJ.4 configuration strings.  I think it would not be
appropriate to do this directly within PROJ.4 ... because as has become obvious
in the following messages there are *many* possible choices of GUI toolkit.

However, what I would like to see is for PROJ.4 to make information available
in some machine usable format on what options there are and how they can be
combined.  This should include the lists of projections, ellipsoids, units,
datums, and prime meridians but also it should "know" which arguments can
be used with which projections, and should carry a brief description of all
the components.  This would make it much easier for applications to build
GUIs.

Even returning the information in machine readable format is a fair effort
if you want to document all the per-projection parameters, but we could start
by returning all the information already found in the various tables, and then
add more details later.

>     For #2-3 above, a seperate function for pj_fwd(), pj_inv(), etc... would
> be nice as the extended information would be available, but if you don't
> want it you could just call the normal functions which should be faster.

I'm not sure what extended information you are talking about here.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From paul at toolscenter.org  Sun Apr 25 03:56:12 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Sun, 25 Apr 2004 19:56:12 +0900
Subject: [Proj] Geod: I need a little guide
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway>
Message-ID: <000701c42ab3$ee07aed0$030ba8c0@SWEETJESUS>

Hello All,
I need a little guide on the geod program, even the command options.

In particular, any guide on the implementations? Is it based the
WGS84 EGM96 model?

Anyone knows the EGM96 binary file format in Geotrans?
(the "egm96.grd" file) - I managed some format after reading
the Geoid conversion sources, but do not know if it is the complete/true
picture.

Best regards,
Paul.




From gerald.evenden at verizon.net  Sun Apr 25 10:43:39 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Sun, 25 Apr 2004 13:43:39 -0400
Subject: [Proj] Geod: I need a little guide
In-Reply-To: <000701c42ab3$ee07aed0$030ba8c0@SWEETJESUS>
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway> <000701c42ab3$ee07aed0$030ba8c0@SWEETJESUS>
Message-ID: <15FC937D-96E0-11D8-A043-000A958A3346@verizon.net>

Are you asking about the geodesic program "geod" that was part of the
original PROJ.4 release?

Or is there another "geod" program in the remotesensing library?

Just curious.

On Apr 25, 2004, at 6:56 AM, Paul Selormey wrote:

> Hello All,
> I need a little guide on the geod program, even the command options.
>
> In particular, any guide on the implementations? Is it based the
> WGS84 EGM96 model?
>
> Anyone knows the EGM96 binary file format in Geotrans?
> (the "egm96.grd" file) - I managed some format after reading
> the Geoid conversion sources, but do not know if it is the 
> complete/true
> picture.
>
> Best regards,
> Paul.
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From warmerdam at pobox.com  Sun Apr 25 11:27:38 2004
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sun, 25 Apr 2004 14:27:38 -0400
Subject: [Proj] Geod: I need a little guide
In-Reply-To: <15FC937D-96E0-11D8-A043-000A958A3346@verizon.net>
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway> <000701c42ab3$ee07aed0$030ba8c0@SWEETJESUS> <15FC937D-96E0-11D8-A043-000A958A3346@verizon.net>
Message-ID: <408C031A.704@pobox.com>

Gerald Evenden wrote:
> Are you asking about the geodesic program "geod" that was part of the
> original PROJ.4 release?
> 
> Or is there another "geod" program in the remotesensing library?

Gerald,

The geod program in the remotesensing.org distribution of PROJ.4 should
be essentially unchanged from the original.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From gerald.evenden at verizon.net  Sun Apr 25 11:52:43 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Sun, 25 Apr 2004 14:52:43 -0400
Subject: [Proj] Geod: I need a little guide
In-Reply-To: <000701c42ab3$ee07aed0$030ba8c0@SWEETJESUS>
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway> <000701c42ab3$ee07aed0$030ba8c0@SWEETJESUS>
Message-ID: <BC5198E2-96E9-11D8-A043-000A958A3346@verizon.net>

As I have been informed that *geod* is the geodesic program I will make
some comments:

1) there is a geod.1 file giving a brief explanation of usage.

2) ellipsoid parameters are selected in the same manner as for program
     *proj*.  For example, +ellps=besset, or +a=, +es=, +rf=, +R=, etc.

3) "forward" of "direct" input consists of lon, lat, azimuth and 
distance and
     the result is the lon-lat of the point and back azimuth.

4) Inverse input consists of lon_1, lat_1, lon_2, lat_2 and the distance
    between the points is returned as well as the azimuth from point 1 
and
    back azimuth from point 2.  Execute geod as "invgeod" or "geod -I 
..."

5) There are a couple of other options.

If you could be more detailed in your needs I could perhaps suggest
an appropriate usage script.

Note: the name "geod" is short for geodesic which is synonymous with
"great circle" or shortest distance between two points on the sphere or
ellipsoid.  The request seems related to the geoid---a completely 
different
animal.

On Apr 25, 2004, at 6:56 AM, Paul Selormey wrote:

> Hello All,
> I need a little guide on the geod program, even the command options.
>
> In particular, any guide on the implementations? Is it based the
> WGS84 EGM96 model?
>
> Anyone knows the EGM96 binary file format in Geotrans?
> (the "egm96.grd" file) - I managed some format after reading
> the Geoid conversion sources, but do not know if it is the 
> complete/true
> picture.
>
> Best regards,
> Paul.
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From cjmce at lsu.edu  Sun Apr 25 14:17:27 2004
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Sun, 25 Apr 2004 16:17:27 -0500
Subject: [Proj] Geod: I need a little guide
Message-ID: <OF6CA4C8E3.B3D627CE-ON86256E81.0074F43D-86256E81.0074F484@lsu.edu>




EGM96 is "Earth Gravity Model 1996" and represents the relation between the
WGS84 ellipsoid AND the WGS84 datum with respect to the distance of the
surface of equipotential energy (mean sea level) and the ellipsoid.  The
equation is a 360-degree spherical harmonic, and the coefficients are
unclassified.

The surface of equipotential energy is called the "GEOID."

When working with remotely-sensed data for topography, such as LIDAR (or
GPS-controlled photogrammetry), the heights obtained are with respect to an
inertial reference system - centered at the center of mass of the Earth -
the origin of the WGS84 datum and ellipsoid.  To obtain elevations from the
data, one must apply a Geoid model, commonly EGM96 - the most reliable
geoid available.

The query was with regard to utilizing a table of values (geoid separation
from the ellipsoid) to convert ellipsoid heights to elevations.

I don't think PROJ4 does that.

Cliff Mugnier
LOUISIANA STATE UNIVERSITY




From paul at toolscenter.org  Sun Apr 25 16:26:45 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Mon, 26 Apr 2004 08:26:45 +0900
Subject: [Proj] Geod: I need a little guide
References: <06cb01c4288d$86bed690$0200a8c0@goaway> <66EC15E3-9488-11D8-BF22-000A958A3346@verizon.net> <06f101c4289b$091c0650$0200a8c0@goaway> <000701c42ab3$ee07aed0$030ba8c0@SWEETJESUS> <BC5198E2-96E9-11D8-A043-000A958A3346@verizon.net>
Message-ID: <000d01c42b1c$c7d88130$030ba8c0@SWEETJESUS>

Thanks for the information. Yes, I thought it was a geoid-ellipsoid
conversion program.

Best regards,
Paul.

----- Original Message ----- 
From: "Gerald Evenden" <gerald.evenden at verizon.net>
To: <proj at remotesensing.org>
Sent: Monday, April 26, 2004 3:52 AM
Subject: Re: [Proj] Geod: I need a little guide


> As I have been informed that *geod* is the geodesic program I will make
> some comments:
> 
> 1) there is a geod.1 file giving a brief explanation of usage.
> 
> 2) ellipsoid parameters are selected in the same manner as for program
>      *proj*.  For example, +ellps=besset, or +a=, +es=, +rf=, +R=, etc.
> 
> 3) "forward" of "direct" input consists of lon, lat, azimuth and 
> distance and
>      the result is the lon-lat of the point and back azimuth.
> 
> 4) Inverse input consists of lon_1, lat_1, lon_2, lat_2 and the distance
>     between the points is returned as well as the azimuth from point 1 
> and
>     back azimuth from point 2.  Execute geod as "invgeod" or "geod -I 
> ..."
> 
> 5) There are a couple of other options.
> 
> If you could be more detailed in your needs I could perhaps suggest
> an appropriate usage script.
> 
> Note: the name "geod" is short for geodesic which is synonymous with
> "great circle" or shortest distance between two points on the sphere or
> ellipsoid.  The request seems related to the geoid---a completely 
> different
> animal.
> 
> On Apr 25, 2004, at 6:56 AM, Paul Selormey wrote:
> 
> > Hello All,
> > I need a little guide on the geod program, even the command options.
> >
> > In particular, any guide on the implementations? Is it based the
> > WGS84 EGM96 model?
> >
> > Anyone knows the EGM96 binary file format in Geotrans?
> > (the "egm96.grd" file) - I managed some format after reading
> > the Geoid conversion sources, but do not know if it is the 
> > complete/true
> > picture.
> >
> > Best regards,
> > Paul.
> _____________________________________
> Jerry and the low riders: Daisy Mae and Joshua
> 
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
> 



From paul at toolscenter.org  Sun Apr 25 16:33:56 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Mon, 26 Apr 2004 08:33:56 +0900
Subject: [Proj] Geod: I need a little guide
References: <OF6CA4C8E3.B3D627CE-ON86256E81.0074F43D-86256E81.0074F484@lsu.edu>
Message-ID: <001501c42b1d$c8a3a3f0$030ba8c0@SWEETJESUS>

Hello My Prof,
Thanks for the information. After reading the sources in the
Geotrans, I searched the internet and got a lot of information
on this.
I thought proj4 was doing a similar thing with the geod program,
and also, there is a point somewhere in the proj4 docs that if you
pass in a 3-point, there is conversion of the Z and so I thought, it
was geoid conversion being applied there.

Again, thanks for the information and the support.

Any information of the format of the binary file for the geoid-ellipsoid
height conversion in the Geotrans, "egm96.grd"?

Best regards,
Paul.

----- Original Message ----- 
From: "Clifford J Mugnier" <cjmce at lsu.edu>
To: <proj at remotesensing.org>
Sent: Monday, April 26, 2004 6:17 AM
Subject: Re: [Proj] Geod: I need a little guide


>
>
>
>
> EGM96 is "Earth Gravity Model 1996" and represents the relation between
the
> WGS84 ellipsoid AND the WGS84 datum with respect to the distance of the
> surface of equipotential energy (mean sea level) and the ellipsoid.  The
> equation is a 360-degree spherical harmonic, and the coefficients are
> unclassified.
>
> The surface of equipotential energy is called the "GEOID."
>
> When working with remotely-sensed data for topography, such as LIDAR (or
> GPS-controlled photogrammetry), the heights obtained are with respect to
an
> inertial reference system - centered at the center of mass of the Earth -
> the origin of the WGS84 datum and ellipsoid.  To obtain elevations from
the
> data, one must apply a Geoid model, commonly EGM96 - the most reliable
> geoid available.
>
> The query was with regard to utilizing a table of values (geoid separation
> from the ellipsoid) to convert ellipsoid heights to elevations.
>
> I don't think PROJ4 does that.
>
> Cliff Mugnier
> LOUISIANA STATE UNIVERSITY
>
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
>




From cjmce at lsu.edu  Sun Apr 25 20:06:46 2004
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Sun, 25 Apr 2004 22:06:46 -0500
Subject: [Proj] Geod: I need a little guide
Message-ID: <OF7CFDB812.AB98B83E-ON86256E82.00111928-86256E82.00111986@lsu.edu>




Info directly related to EGM96 is DoD-only.  However, a subset of EGM96 is
"GEOID03" (and its predecessors) for the United States as done by the U.S.
National Geodetic Survey.  At their site, (www.ngs.noaa.gov) you will find
a number of utilities for working with that geoid subset that includes
binary translators, re-gridding facilites, etc.

The Canadians, the Australians, the U.K. and many European nations have
national geoids.  Some of them have variable-mesh grids (Canada &
Australia) that are different from what the Americans use (constant-density
mesh).  The format of those geoids in binary files are of course,
different.  Depending on the nature of the data set you seek to
"customize," you may want to use the American-based techniques or the
Canadian-based techniques.

Please report back to the list what you find of use to you.

Cliff Mugnier
LOUISIANA STATE UNIVERSITY
-------------------------------------
Hello My Prof,
Thanks for the information. After reading the sources in the
Geotrans, I searched the internet and got a lot of information
on this.
I thought proj4 was doing a similar thing with the geod program,
and also, there is a point somewhere in the proj4 docs that if you
pass in a 3-point, there is conversion of the Z and so I thought, it
was geoid conversion being applied there.

Again, thanks for the information and the support.

Any information of the format of the binary file for the geoid-ellipsoid
height conversion in the Geotrans, "egm96.grd"?

Best regards,
Paul.

----- Original Message -----
From: "Clifford J Mugnier" <cjmce at lsu.edu>
To: <proj at remotesensing.org>
Sent: Monday, April 26, 2004 6:17 AM
Subject: Re: [Proj] Geod: I need a little guide


>
>
>
>
> EGM96 is "Earth Gravity Model 1996" and represents the relation between
the
> WGS84 ellipsoid AND the WGS84 datum with respect to the distance of the
> surface of equipotential energy (mean sea level) and the ellipsoid.  The
> equation is a 360-degree spherical harmonic, and the coefficients are
> unclassified.
>
> The surface of equipotential energy is called the "GEOID."
>
> When working with remotely-sensed data for topography, such as LIDAR (or
> GPS-controlled photogrammetry), the heights obtained are with respect to
an
> inertial reference system - centered at the center of mass of the Earth -
> the origin of the WGS84 datum and ellipsoid.  To obtain elevations from
the
> data, one must apply a Geoid model, commonly EGM96 - the most reliable
> geoid available.
>
> The query was with regard to utilizing a table of values (geoid
separation
> from the ellipsoid) to convert ellipsoid heights to elevations.
>
> I don't think PROJ4 does that.
>
> Cliff Mugnier
> LOUISIANA STATE UNIVERSITY
>
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
>


_______________________________________________
Proj mailing list
Proj at remotesensing.org
http://www.remotesensing.org/mailman/listinfo/proj



From neteler at itc.it  Mon Apr 26 05:14:26 2004
From: neteler at itc.it (Markus Neteler)
Date: Mon, 26 Apr 2004 14:14:26 +0200
Subject: [Proj] EPSG and ToWGS84
In-Reply-To: <000b01c42788$cc8f37b0$700201c0@MAPQUEST.local>
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <7788B1C0-9239-11D8-A4DB-000A958A3346@verizon.net> <000e01c42694$405ba660$700201c0@MAPQUEST.local> <20040420160408.GD16487@thuille.itc.it> <005401c42725$d37219c0$030ba8c0@SWEETJESUS> <000b01c42788$cc8f37b0$700201c0@MAPQUEST.local>
Message-ID: <20040426121426.GR23757@thuille.itc.it>

Hello Paul,

On Wed, Apr 21, 2004 at 07:09:54PM +0900, Paul Selormey wrote:
> Hello Markus Neteler and All,
> The SQL statement could not solve my problem. I have adapted it
> for the Microsoft Access.
> 
> What I really need is the Bursa Wolf transformation parameters
> for a datum, normally formatted in WKT as
> 
> TOWGS84[Dx, Dy, Dz, Ex, Ey, Ez, PPm]
> 
> I am trying to retrieve datum values from the EPSG database
> but could not find the Bursa Wolf transformation parameters.
> (Sorry, if my earlier post was not clear enough).

I have extracted the list of datums from EPSG 6.4 as
posted ealier. Fetch the file here:

 http://mpa.itc.it/markus/tmp/epsg64_datums.csv.gz
 (30kb)

Kind regards

 Markus


-- 
Markus Neteler     <neteler itc it>       http://mpa.itc.it
ITC-irst -  Centro per la Ricerca Scientifica e Tecnologica
MPBA - Predictive Models for Biol. & Environ. Data Analysis
Via Sommarive, 18        -       38050 Povo (Trento), Italy


From paul at toolscenter.org  Mon Apr 26 06:51:00 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Mon, 26 Apr 2004 22:51:00 +0900
Subject: [Proj] EPSG and ToWGS84
References: <OFCCDA57B3.9A9176B7-ON86256E7B.00638D3A-86256E7B.00638D9A@lsu.edu> <7788B1C0-9239-11D8-A4DB-000A958A3346@verizon.net> <000e01c42694$405ba660$700201c0@MAPQUEST.local> <20040420160408.GD16487@thuille.itc.it> <005401c42725$d37219c0$030ba8c0@SWEETJESUS> <000b01c42788$cc8f37b0$700201c0@MAPQUEST.local> <20040426121426.GR23757@thuille.itc.it>
Message-ID: <001b01c42b95$843e8db0$030ba8c0@SWEETJESUS>

Hello Markus,
Thanks so much for the support. I have consumed your precious time, 
very grateful for the service.

As a fellow in the open source community, I hope to pay back one day.

Best regards,
Paul.

----- Original Message ----- 
From: "Markus Neteler" <neteler at itc.it>
To: <proj at remotesensing.org>
Cc: "Paul Selormey" <paul at toolscenter.org>
Sent: Monday, April 26, 2004 9:14 PM
Subject: Re: [Proj] EPSG and ToWGS84


> Hello Paul,
> 
> On Wed, Apr 21, 2004 at 07:09:54PM +0900, Paul Selormey wrote:
> > Hello Markus Neteler and All,
> > The SQL statement could not solve my problem. I have adapted it
> > for the Microsoft Access.
> > 
> > What I really need is the Bursa Wolf transformation parameters
> > for a datum, normally formatted in WKT as
> > 
> > TOWGS84[Dx, Dy, Dz, Ex, Ey, Ez, PPm]
> > 
> > I am trying to retrieve datum values from the EPSG database
> > but could not find the Bursa Wolf transformation parameters.
> > (Sorry, if my earlier post was not clear enough).
> 
> I have extracted the list of datums from EPSG 6.4 as
> posted ealier. Fetch the file here:
> 
>  http://mpa.itc.it/markus/tmp/epsg64_datums.csv.gz
>  (30kb)
> 
> Kind regards
> 
>  Markus
> 
> 
> -- 
> Markus Neteler     <neteler itc it>       http://mpa.itc.it
> ITC-irst -  Centro per la Ricerca Scientifica e Tecnologica
> MPBA - Predictive Models for Biol. & Environ. Data Analysis
> Via Sommarive, 18        -       38050 Povo (Trento), Italy
> 
> 



From paul at toolscenter.org  Mon Apr 26 06:59:34 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Mon, 26 Apr 2004 22:59:34 +0900
Subject: [Proj] Geod: I need a little guide
References: <OF7CFDB812.AB98B83E-ON86256E82.00111928-86256E82.00111986@lsu.edu>
Message-ID: <002301c42b96$b63fa690$030ba8c0@SWEETJESUS>

Thanks for information. The first link I clicked on that page,
failed :-( but the rest worked!

> Please report back to the list what you find of use to you.

Most are, I do not know what others might find interesting.
I will find a way to start.

Again, thanks for the information and the support.

Best regards,
Paul.




From warmerdam at pobox.com  Wed Apr 28 06:59:15 2004
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 28 Apr 2004 09:59:15 -0400
Subject: [Proj] Geocentric vs. Geodetic latitude
Message-ID: <408FB8B3.406@pobox.com>

Folks,

I was recently suprised to encounter locations identified as being
geocentric that were give as a latitude and longitude.  I had expected them
to be x/y/z values in meters.

A client of mine, better versed in such things explained that there is in
fact a distinction between geocentric and geodetic lat/long.  He wrote:

 >"The angle L' is called "geocentric latitude" and is defined as the
 > angle between the equatorial plane and the radius from the geocenter.
 >
 > The angle L is called "geodetic latitude" and is defined as the angle
 > between the equatorial plane and the normal to the surface of the
 > ellipsoid.  The word "latitude" usually means geodetic latitude.  This
 > is the basis for most of the maps and charts we use.  The normal to the
 > surface is the direction that a plumb bob would hang were it not for
 > local anomalies in the earth's gravitational field."

I need to implement some code to convert geocentric latitude to geodetic
latitude.  I think I can do from the above description, but I am wondering
if anyone can confirm the above description, provide a forumla or most
importantly provide some sample latitudes in both systems I can check my
work against.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From gerald.evenden at verizon.net  Wed Apr 28 07:26:45 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Wed, 28 Apr 2004 10:26:45 -0400
Subject: [Proj] Geocentric vs. Geodetic latitude
In-Reply-To: <408FB8B3.406@pobox.com>
References: <408FB8B3.406@pobox.com>
Message-ID: <13D3CB01-9920-11D8-8B9D-000A958A3346@verizon.net>

I believe the code for conversion is in proj.  There is a little used  
option
for geocentric lat/lon as I recall.  Obviously, geocentric only applies  
to
the latitude coordinate.

Normal latitude is the angle of the surface tangent to the ellipsoid  
and thus
the normal to that plane from the tangent point does not penetrate the
earth's center except at the equator and pole.  Geocentric latitude is  
from
the center to the reference point.

Curiously, I had never seen any data with geocentric latitude.

The equation is rather trivial as I recall.

On Apr 28, 2004, at 9:59 AM, Frank Warmerdam wrote:

> Folks,
>
> I was recently suprised to encounter locations identified as being
> geocentric that were give as a latitude and longitude.  I had expected  
> them
> to be x/y/z values in meters.
>
> A client of mine, better versed in such things explained that there is  
> in
> fact a distinction between geocentric and geodetic lat/long.  He wrote:
>
> >"The angle L' is called "geocentric latitude" and is defined as the
> > angle between the equatorial plane and the radius from the geocenter.
> >
> > The angle L is called "geodetic latitude" and is defined as the angle
> > between the equatorial plane and the normal to the surface of the
> > ellipsoid.  The word "latitude" usually means geodetic latitude.   
> This
> > is the basis for most of the maps and charts we use.  The normal to  
> the
> > surface is the direction that a plumb bob would hang were it not for
> > local anomalies in the earth's gravitational field."
>
> I need to implement some code to convert geocentric latitude to  
> geodetic
> latitude.  I think I can do from the above description, but I am  
> wondering
> if anyone can confirm the above description, provide a forumla or most
> importantly provide some sample latitudes in both systems I can check  
> my
> work against.
>
> Best regards,
> --  
> --------------------------------------- 
> +--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam,  
> warmerdam at pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush    | Geospatial Programmer for Rent
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>
>
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From percivall at gsfc.nasa.gov  Wed Apr 28 07:33:48 2004
From: percivall at gsfc.nasa.gov (George Percivall)
Date: Wed, 28 Apr 2004 10:33:48 -0400
Subject: [Proj] Geocentric vs. Geodetic latitude
In-Reply-To: <408FB8B3.406@pobox.com>
Message-ID: <BCB5390C.7633%percivall@gsfc.nasa.gov>

Frank,

The two definitions are consistent with my experience as well.

Coming from a background in satellite data I was familiar with "latitude" as
your geocentric latitude in contrast to your client's experience.  In the
case when you set the ellipsoid equal to a sphere, the two definitions
define the same angle.

During the development of ISO 19111 this was discussed. The editors of 19111
were geodesists and objected to my recommendation to include a geocentric
coordinate system.  The title of ISO 19111 is "Geographic Information -
spatial referencing by coordinates".

The OGC work to implement and extend ISO 19111 includes geocentric
coordinate reference systems.  The relevant OGC document is "OGC Abstract
Specification Topic 2."  Here is the latest public version:
http://www.opengis.org/docs/03-073r1.zip

Whether both angles should be "latitudes" may be a topic of discussion.  The
OGC document uses a spherical coordinate reference system with two angles
and a radius.  It does not specify that one of the angles is latitude:
omission or intentional?

Regards,
George 
_________________________________________________________________
George Percivall
- Principal Engineer, Geospatial Interoperability Office, NASA
   percivall at gsfc.nasa.gov
- Director, The Geospatial Interoperability Group, GST, Inc.
   percivall at gst.com


On 4/28/04 9:59 AM, "Frank Warmerdam" <warmerdam at pobox.com> wrote:

> Folks,
> 
> I was recently suprised to encounter locations identified as being
> geocentric that were give as a latitude and longitude.  I had expected them
> to be x/y/z values in meters.
> 
> A client of mine, better versed in such things explained that there is in
> fact a distinction between geocentric and geodetic lat/long.  He wrote:
> 
>> "The angle L' is called "geocentric latitude" and is defined as the
>> angle between the equatorial plane and the radius from the geocenter.
>> 
>> The angle L is called "geodetic latitude" and is defined as the angle
>> between the equatorial plane and the normal to the surface of the
>> ellipsoid.  The word "latitude" usually means geodetic latitude.  This
>> is the basis for most of the maps and charts we use.  The normal to the
>> surface is the direction that a plumb bob would hang were it not for
>> local anomalies in the earth's gravitational field."
> 
> I need to implement some code to convert geocentric latitude to geodetic
> latitude.  I think I can do from the above description, but I am wondering
> if anyone can confirm the above description, provide a forumla or most
> importantly provide some sample latitudes in both systems I can check my
> work against.
> 
> Best regards,



From warmerdam at pobox.com  Wed Apr 28 08:18:14 2004
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 28 Apr 2004 11:18:14 -0400
Subject: [Proj] Geocentric vs. Geodetic latitude
In-Reply-To: <13D3CB01-9920-11D8-8B9D-000A958A3346@verizon.net>
References: <408FB8B3.406@pobox.com> <13D3CB01-9920-11D8-8B9D-000A958A3346@verizon.net>
Message-ID: <408FCB36.2070905@pobox.com>

Folks,

Thanks for the help everyone! I am reassured that my clients understanding
is correct, not withstanding the fact that from George's satellite perspective
the geocentric angles are more meaningful.

I implemented the conversion by converting the geocentric latitude (and a
nominal longitude of 0) to geocentric x/y/z coordinates, and then using the
existing geocentric x/y/z to geodetic code from Geotrans.  This seems to
work fine, and matches the results with proj.

For my dataset I was getting the following Geocentric values:
Upper Left  (  85.0000000,  32.9833333) ( 85d 0'0.00"E, 32d59'0.00"N)
Lower Left  (  85.0000000,  32.2491667) ( 85d 0'0.00"E, 32d14'57.00"N)
Upper Right (  85.9675000,  32.9833333) ( 85d58'3.00"E, 32d59'0.00"N)
Lower Right (  85.9675000,  32.2491667) ( 85d58'3.00"E, 32d14'57.00"N)
Center      (  85.4837500,  32.6162500) ( 85d29'1.50"E, 32d36'58.50"N)

After converting to geodetic I get:
Upper Left  (  85.0000000,  33.1593160) ( 85d 0'0.00"E, 33d 9'33.54"N)
Lower Left  (  85.0000000,  32.4230943) ( 85d 0'0.00"E, 32d25'23.14"N)
Upper Right (  85.9675000,  33.1593160) ( 85d58'3.00"E, 33d 9'33.54"N)
Lower Right (  85.9675000,  32.4230943) ( 85d58'3.00"E, 32d25'23.14"N)
Center      (  85.4837500,  32.7912051) ( 85d29'1.50"E, 32d47'28.34"N)

To test in PROJ.4 I dummied up a projected value at the top left latitude
in projected coordinates (on the central meridian) and test converted it
to lat/long using the default geodetic and then using the geocentric option
(+geoc). The results matched well:

warmerda at gdal2200[284]% proj +proj=utm +zone=11 +datum=WGS84 +geoc
-117 32.9833333
500000.00       3668948.95
warmerda at gdal2200[285]% proj -I +proj=utm +zone=11 +datum=WGS84 +geoc
500000.00       3668948.95
117dW   32d59'N
warmerda at gdal2200[286]% proj -I +proj=utm +zone=11 +datum=WGS84
500000.00       3668948.95
117dW   33d9'33.537"N

So, I think I am in the clear.  I didn't find the actual geocentric code
in PROJ.4, and had never used this +geoc option before.

By the way, I don't think I mentioned it in my original post but the
geocentric lat/long values are coming from NITF files.  The NITF 2.0
specification had an option to give corner coordinates in geocentric
lat/long in addition to the more common geodetic lat/long.  In my code
I just want to convert to geocentric.  I am not convinced that there is
much actual data distributed in this form, but a client wants it supported
so I am doing it.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From gerald.evenden at verizon.net  Wed Apr 28 08:28:06 2004
From: gerald.evenden at verizon.net (Gerald Evenden)
Date: Wed, 28 Apr 2004 11:28:06 -0400
Subject: [Proj] Geocentric vs. Geodetic latitude
In-Reply-To: <408FCB36.2070905@pobox.com>
References: <408FB8B3.406@pobox.com> <13D3CB01-9920-11D8-8B9D-000A958A3346@verizon.net> <408FCB36.2070905@pobox.com>
Message-ID: <A5946405-9928-11D8-8B9D-000A958A3346@verizon.net>

Search for the string 'geoc' in pj_fwd.c and pj_inv.c.  P->geoc is the
flag causing geocentric conversion.  Conversion follows the 'if'
statement.

I agree that geocentric is most likely a satellite data parameter and
since I have not normally be involved with such data I have not
had much contact with geocentric latitude.

+geoc has been in proj.4 since Hector was a pup and I cannot remember
what prompted me to include it.  Must have sounded like a good idea
at the time.

On Apr 28, 2004, at 11:18 AM, Frank Warmerdam wrote:

>
> Folks,
> 	...

> 117dW   33d9'33.537"N
>
> So, I think I am in the clear.  I didn't find the actual geocentric 
> code
> in PROJ.4, and had never used this +geoc option before.
>
	...
_____________________________________
Jerry and the low riders: Daisy Mae and Joshua



From cjmce at lsu.edu  Wed Apr 28 09:01:52 2004
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Wed, 28 Apr 2004 11:01:52 -0500
Subject: [Proj] Geocentric vs. Geodetic latitude
Message-ID: <OF29DFD953.A9F5FE76-ON86256E84.00580F20-86256E84.00580FD6@lsu.edu>




The use of geocentric latitude has had only one valid geodetic application
in the past century of which I am aware.  The most common application
(nowadays) of geocentric latitude is for thematic cartography applications
where the Earth is considered a sphere and the accuracy of the coordinate
data is no better than a kilometer or so.  Many geographers couldn't care
less about the ellipsoid, so that's what they use.

The valid geodetic application I speak of was discovered by John P. Snyder.
John discovered that the old North American Datum of 1927 State Plane
Coordinate System Projection Books (the blue ones) for each state were
computed "wrongly."  Instead of using the conformal latitude for the
computation/construction of the lookup tables (for the Lambert Conformal
Conic), the U.S. Coast & Geodetic Survey computed GEOCENTRIC latitude
instead.  The reason was the difference was quite minor for the accuracy of
second-order transit/tape surveys (back then only 1:10,000 closure), and it
would not make that meaningful a difference in the computed Lambert
Conformal Conic coordinates AT THAT TIME (1930s).

When Charles N. Claire came out with his Special Publication No. 62-4,
"State Plane Coordinates by Automatic Data Processing," he implemented
special "fudge factors" in the coefficients to enable the duplication of
the screwy geocentric latitude results for the Lambert Conformal Conic
projection transformations in the U.S.  The numerical precision of the
mini-computers of the day were greater than the mechanical calculators, and
Claire needed to make the coefficients "compatible" with the old hand
computation results from the old "blue books."

And that, boys and girls, is the ONLY valid geodetic application of
"Geocentric Latitude" that I have ever heard of, and it was John P. Snyder
that told me about it.

Cliff Mugnier
LOUISIANA STATE UNIVERSITY



From glynn.clements at virgin.net  Wed Apr 28 08:39:27 2004
From: glynn.clements at virgin.net (Glynn Clements)
Date: Wed, 28 Apr 2004 16:39:27 +0100
Subject: [Proj] Geocentric vs. Geodetic latitude
In-Reply-To: <408FB8B3.406@pobox.com>
References: <408FB8B3.406@pobox.com>
Message-ID: <16527.53295.961810.434319@cerise.nosuchdomain.co.uk>

Frank Warmerdam wrote:

> I was recently suprised to encounter locations identified as being
> geocentric that were give as a latitude and longitude.  I had expected them
> to be x/y/z values in meters.
> 
> A client of mine, better versed in such things explained that there is in
> fact a distinction between geocentric and geodetic lat/long.  He wrote:
> 
>  >"The angle L' is called "geocentric latitude" and is defined as the
>  > angle between the equatorial plane and the radius from the geocenter.
>  >
>  > The angle L is called "geodetic latitude" and is defined as the angle
>  > between the equatorial plane and the normal to the surface of the
>  > ellipsoid.  The word "latitude" usually means geodetic latitude.  This
>  > is the basis for most of the maps and charts we use.  The normal to the
>  > surface is the direction that a plumb bob would hang were it not for
>  > local anomalies in the earth's gravitational field."
> 
> I need to implement some code to convert geocentric latitude to geodetic
> latitude.  I think I can do from the above description, but I am wondering
> if anyone can confirm the above description, provide a forumla or most
> importantly provide some sample latitudes in both systems I can check my
> work against.

Given the parametric equation for an ellipse:

        x = a.cos(t)
        y = b.sin(t)

the tangent vector is:

        dx/dt = -a.sin(t)
        dy/dt =  b.cos(t)

and thus the outward normal is:

        nx = b.cos(t)
        ny = a.sin(t)

By the above definitions, the geocentric latitude L' is given by:

        tan(L') = y / x
                = b.sin(t) / a.cos(t)
                = (b/a).tan(t)

while the geodetic latitude L is given by:

        tan(L)  = ny / nx
                = a.sin(t) / b.cos(t)
                = (a/b).tan(t)

Thus the ratio of the two is:

        tan(L) / tan(L')
                = (a/b).tan(t) / (b/a).tan(t)
                = (a/b) / (b/a)
                = aÂ²/bÂ²

So:
        L = atan((aÂ²/bÂ²).tan(L'))
and:
        L' = atan((bÂ²/aÂ²).tan(L))

where a is the equatorial axis and b the polar axis.

-- 
Glynn Clements <glynn.clements at virgin.net>


From feili at telus.net  Wed Apr 28 09:27:08 2004
From: feili at telus.net (Fei Li)
Date: Wed, 28 Apr 2004 09:27:08 -0700
Subject: [Proj] Geocentric vs. Geodetic latitude
References: <408FB8B3.406@pobox.com> <13D3CB01-9920-11D8-8B9D-000A958A3346@verizon.net> <408FCB36.2070905@pobox.com> <A5946405-9928-11D8-8B9D-000A958A3346@verizon.net>
Message-ID: <000d01c42d3d$a68d9c90$0c3d74ce@geoimage6huzpe>

In some satellite application people need geocentric and geodetic coordinate
system both. I am one of them.



----- Original Message ----- 
From: "Gerald Evenden" <gerald.evenden at verizon.net>
To: <proj at remotesensing.org>
Sent: Wednesday, April 28, 2004 8:28 AM
Subject: Re: [Proj] Geocentric vs. Geodetic latitude


> Search for the string 'geoc' in pj_fwd.c and pj_inv.c.  P->geoc is the
> flag causing geocentric conversion.  Conversion follows the 'if'
> statement.
>
> I agree that geocentric is most likely a satellite data parameter and
> since I have not normally be involved with such data I have not
> had much contact with geocentric latitude.
>
> +geoc has been in proj.4 since Hector was a pup and I cannot remember
> what prompted me to include it.  Must have sounded like a good idea
> at the time.
>
> On Apr 28, 2004, at 11:18 AM, Frank Warmerdam wrote:
>
> >
> > Folks,
> > ...
>
> > 117dW   33d9'33.537"N
> >
> > So, I think I am in the clear.  I didn't find the actual geocentric
> > code
> > in PROJ.4, and had never used this +geoc option before.
> >
> ...
> _____________________________________
> Jerry and the low riders: Daisy Mae and Joshua
>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj



From paul at toolscenter.org  Wed Apr 28 09:33:31 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Thu, 29 Apr 2004 01:33:31 +0900
Subject: [Proj] Geocentric vs. Geodetic latitude
References: <408FB8B3.406@pobox.com> <16527.53295.961810.434319@cerise.nosuchdomain.co.uk>
Message-ID: <003101c42d3e$8d31a600$030ba8c0@SWEETJESUS>

Thanks for making a long story short.

Best regards,
Paul.

----- Original Message ----- 
From: "Glynn Clements" <glynn.clements at virgin.net>
To: <proj at remotesensing.org>
Sent: Thursday, April 29, 2004 12:39 AM
Subject: Re: [Proj] Geocentric vs. Geodetic latitude


>
> Frank Warmerdam wrote:
>
> > I was recently suprised to encounter locations identified as being
> > geocentric that were give as a latitude and longitude.  I had expected
them
> > to be x/y/z values in meters.
> >
> > A client of mine, better versed in such things explained that there is
in
> > fact a distinction between geocentric and geodetic lat/long.  He wrote:
> >
> >  >"The angle L' is called "geocentric latitude" and is defined as the
> >  > angle between the equatorial plane and the radius from the geocenter.
> >  >
> >  > The angle L is called "geodetic latitude" and is defined as the angle
> >  > between the equatorial plane and the normal to the surface of the
> >  > ellipsoid.  The word "latitude" usually means geodetic latitude.
This
> >  > is the basis for most of the maps and charts we use.  The normal to
the
> >  > surface is the direction that a plumb bob would hang were it not for
> >  > local anomalies in the earth's gravitational field."
> >
> > I need to implement some code to convert geocentric latitude to geodetic
> > latitude.  I think I can do from the above description, but I am
wondering
> > if anyone can confirm the above description, provide a forumla or most
> > importantly provide some sample latitudes in both systems I can check my
> > work against.
>
> Given the parametric equation for an ellipse:
>
>         x = a.cos(t)
>         y = b.sin(t)
>
> the tangent vector is:
>
>         dx/dt = -a.sin(t)
>         dy/dt =  b.cos(t)
>
> and thus the outward normal is:
>
>         nx = b.cos(t)
>         ny = a.sin(t)
>
> By the above definitions, the geocentric latitude L' is given by:
>
>         tan(L') = y / x
>                 = b.sin(t) / a.cos(t)
>                 = (b/a).tan(t)
>
> while the geodetic latitude L is given by:
>
>         tan(L)  = ny / nx
>                 = a.sin(t) / b.cos(t)
>                 = (a/b).tan(t)
>
> Thus the ratio of the two is:
>
>         tan(L) / tan(L')
>                 = (a/b).tan(t) / (b/a).tan(t)
>                 = (a/b) / (b/a)
>                 = aÂ²/bÂ²
>
> So:
>         L = atan((aÂ²/bÂ²).tan(L'))
> and:
>         L' = atan((bÂ²/aÂ²).tan(L))
>
> where a is the equatorial axis and b the polar axis.
>
> -- 
> Glynn Clements <glynn.clements at virgin.net>
> _______________________________________________
> Proj mailing list
> Proj at remotesensing.org
> http://www.remotesensing.org/mailman/listinfo/proj
>




From warmerdam at pobox.com  Wed Apr 28 09:36:58 2004
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 28 Apr 2004 12:36:58 -0400
Subject: [Proj] Geocentric vs. Geodetic latitude
In-Reply-To: <16527.53295.961810.434319@cerise.nosuchdomain.co.uk>
References: <408FB8B3.406@pobox.com> <16527.53295.961810.434319@cerise.nosuchdomain.co.uk>
Message-ID: <408FDDAA.7060705@pobox.com>

Glynn Clements wrote:
> So:
>         L = atan((aÂ²/bÂ²).tan(L'))
> and:
>         L' = atan((bÂ²/aÂ²).tan(L))
> 
> where a is the equatorial axis and b the polar axis.

Glynn,

Well done!  I have tried (in python):

import math

a = 6378137.0
b = 6356752.3142

gc_lat = 32.98333333333333
gc_lat_rad = gc_lat * math.pi / 180.0

gd_lat_rad = math.atan( ((a*a)/(b*b)) * math.tan(gc_lat_rad) )

gd_lat = gd_lat_rad * 180.0 / math.pi

print gc_lat
print gd_lat

The results is 33.1593159397 as opposed to the  33.1593160 (rounded)
I was getting.  There would appear to be some difference in the 8th
decimal place (the 10th digit) but I don't know why that is.

In any event, your solutions is much briefer than mine, and I will replace
my solution with yours.

Thank you,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



