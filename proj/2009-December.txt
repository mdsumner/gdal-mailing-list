From jgpallero at gmail.com  Sat Dec 12 05:44:10 2009
From: jgpallero at gmail.com (=?ISO-8859-1?Q?Jos=E9_Luis_Garc=EDa_Pallero?=)
Date: Sat, 12 Dec 2009 14:44:10 +0100
Subject: [Proj] Verification of inverse step in projection
Message-ID: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>

Hi,
I'm a new proj user and I have a doubt about the verification of
inverse step in projection. As the manual says (proj.4.3.pdf, page
41):

"Some projections do not have inverse capability; a state that can be
determined by proj->inv==0."

But when I try to test:

#include<proj_api.h>
......
projPJ pjStruct;
pjStruct = pj_init_plus("+proj=tcc +ellps=clrk66 +lon_0=90W");
if(!pjStruct)
    ....
if(pjStruct->inv==0)
    ....

At compilation time I obtain the error:

prueba.c: In function ‘main’:
prueba.c:22: warning: dereferencing ‘void *’ pointer
prueba.c:22: error: request for member ‘inv’ in something not a
structure or union

It says that inv is not a member of the projectios struct.
What is the correct way to check if a projection has inverse step?

Thanks

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************


From jgpallero at gmail.com  Sat Dec 12 09:10:00 2009
From: jgpallero at gmail.com (=?ISO-8859-1?Q?Jos=E9_Luis_Garc=EDa_Pallero?=)
Date: Sat, 12 Dec 2009 18:10:00 +0100
Subject: [Proj] Verification of inverse step in projection
Message-ID: <323eda50912120910s717b40f4m50d66347288bdba@mail.gmail.com>

Hi,
I'm a new proj user and I have a doubt about the verification of
inverse step in projection. As the manual says (proj.4.3.pdf, page
41):

"Some projections do not have inverse capability; a state that can be
determined by proj->inv==0."

But when I try to test:

#include<proj_api.h>
......
projPJ pjStruct;
pjStruct = pj_init_plus("+proj=tcc +ellps=clrk66 +lon_0=90W");
if(!pjStruct)
   ....
if(pjStruct->inv==0)
   ....

At compilation time I obtain the error:

prueba.c: In function ‘main’:
prueba.c:22: warning: dereferencing ‘void *’ pointer
prueba.c:22: error: request for member ‘inv’ in something not a
structure or union

It says that inv is not a member of the projectios struct.
What is the correct way to check if a projection has inverse step?

Thanks

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************


From Joel_Cusick at nps.gov  Sat Dec 12 17:02:07 2009
From: Joel_Cusick at nps.gov (Joel_Cusick at nps.gov)
Date: Sat, 12 Dec 2009 16:02:07 -0900
Subject: [Proj] Joel Cusick/AKSO/NPS is out of office
Message-ID: <OFFC180759.08B93C71-ON8925768B.0005AFF9-8925768B.0005AFF9@nps.gov>


I will be out of the office starting  12/07/2009 and will not return until
12/14/2009.




From roger at opq.se  Sun Dec 13 04:38:04 2009
From: roger at opq.se (Roger Oberholtzer)
Date: Sun, 13 Dec 2009 13:38:04 +0100
Subject: [Proj] Verification of inverse step in projection
In-Reply-To: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>
References: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>
Message-ID: <D1447DCD-D04B-434D-9463-DE09E522B32F@opq.se>


On Dec 12, 2009, at 2:44 PM, José Luis García Pallero wrote:

> Hi,
> I'm a new proj user and I have a doubt about the verification of
> inverse step in projection. As the manual says (proj.4.3.pdf, page
> 41):
>
> "Some projections do not have inverse capability; a state that can be
> determined by proj->inv==0."
>
> But when I try to test:
>
> #include<proj_api.h>
> ......
> projPJ pjStruct;

Perhaps:

projPJ *pjStruct;

as pj_init_plus returns a pointer.


> pjStruct = pj_init_plus("+proj=tcc +ellps=clrk66 +lon_0=90W");
> if(!pjStruct)
>    ....
> if(pjStruct->inv==0)
>    ....
>
> At compilation time I obtain the error:
>
> prueba.c: In function ‘main’:
> prueba.c:22: warning: dereferencing ‘void *’ pointer
> prueba.c:22: error: request for member ‘inv’ in something not a
> structure or union
>
> It says that inv is not a member of the projectios struct.
> What is the correct way to check if a projection has inverse step?
>
> Thanks
>
> -- 
> *****************************************
> José Luis García Pallero
> jgpallero at gmail.com
> (o<
> / / \
> V_/_
> Use Debian GNU/Linux and enjoy!
> *****************************************
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Office: Int +46 8-615 60 20
Mobile: Int +46 70-815 1696

And remember:

It is RSofT and there is always something under construction.
It is like talking about large city with all constructions finished.
Not impossible, but very unlikely.



From jgpallero at gmail.com  Sun Dec 13 06:25:20 2009
From: jgpallero at gmail.com (=?ISO-8859-1?Q?Jos=E9_Luis_Garc=EDa_Pallero?=)
Date: Sun, 13 Dec 2009 15:25:20 +0100
Subject: [Proj] Verification of inverse step in projection
In-Reply-To: <D1447DCD-D04B-434D-9463-DE09E522B32F@opq.se>
References: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>
	<D1447DCD-D04B-434D-9463-DE09E522B32F@opq.se>
Message-ID: <323eda50912130625i3c637b08icd141201708dae0c@mail.gmail.com>

2009/12/13 Roger Oberholtzer <roger at opq.se>:
> Perhaps:
>
> projPJ *pjStruct;
>
> as pj_init_plus returns a pointer.
>
>
>> pjStruct = pj_init_plus("+proj=tcc +ellps=clrk66 +lon_0=90W");
>> if(!pjStruct)
>>    ....
>> if(pjStruct->inv==0)
>>    ....

But pj_init_plus() can't know if you will use the forward or the inverse step.

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************


From roger at opq.se  Sun Dec 13 09:03:09 2009
From: roger at opq.se (Roger Oberholtzer)
Date: Sun, 13 Dec 2009 18:03:09 +0100
Subject: [Proj] Verification of inverse step in projection
In-Reply-To: <323eda50912130625i3c637b08icd141201708dae0c@mail.gmail.com>
References: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>
	<D1447DCD-D04B-434D-9463-DE09E522B32F@opq.se>
	<323eda50912130625i3c637b08icd141201708dae0c@mail.gmail.com>
Message-ID: <44A702CD-E41D-4B79-85D5-FBD1D9854D31@opq.se>


On Dec 13, 2009, at 3:25 PM, José Luis García Pallero wrote:

> 2009/12/13 Roger Oberholtzer <roger at opq.se>:
>> Perhaps:
>>
>> projPJ *pjStruct;
>>
>> as pj_init_plus returns a pointer.
>>
>>
>>> pjStruct = pj_init_plus("+proj=tcc +ellps=clrk66 +lon_0=90W");
>>> if(!pjStruct)
>>>    ....
>>> if(pjStruct->inv==0)
>>>    ....
>
> But pj_init_plus() can't know if you will use the forward or the  
> inverse step.

These are two different issues:

1) You have a syntax error, which I tried to explain. That must be  
corrected no matter.

2) The function that does the actual transform is pj_transform. It  
takes to projPJ pointers. One describes the source data, and one  
describes the desired output. Swapping these two 'reverse' the  
transform.  Here is an example, with three functions. They are part of  
some larger system, but they should be clear enough to demonstrate the  
point. In my case, they  are for wgs84 <-> ed50.

int Init_wgs84_to_ed50(WGS84Info *tinfo) {

         // From GPS WGS84
         if (!((tinfo->fromProj) = pj_init_plus(
                 "+proj=latlong "
                 "+datum=WGS84 "
                 ))) return(ISERROR);

         // To ED50
         if (!((tinfo->toProj) = pj_init_plus(
                 "+proj=utm "
                 "+ellps=intl "
                 "+k=0.999600 "
                 "+x_0=500000.0 "
                 "+y_0=0.0 "
                 "+zone=30 "
                 "+units=m "
                  
"+towgs84=-125.098545,-76.000054,-156.198703,0.0,0.0,-1.129,8.30463103 "
                 "+no_defs"
                 ))) return(ISERROR);

         return(ISOK);
}

// Convert longitude/latitude to northing/easting.

int wgs84LL2NE( WGS84Info *tinfo,
                 double LAT,
                 double LONG,
                 double HEIGHT,
                 double *easting,
                 double *northing,
                 double *altitude) {

         double  lng = LONG * DEGREE_TO_RADIAN,
                 lat = LAT  * DEGREE_TO_RADIAN,
                 alt = HEIGHT;

         if (pj_transform(tinfo->fromProj,
                          tinfo->toProj,
                          1, 0,
                          &lng, &lat, &alt) != ISOK) return(ISERROR);

         *easting  = lng;
         *northing = lat;
         *altitude = alt;

         return(ISOK);
}

// Convert northing/easting to longitude/latitude.

int wgs84NE2LL( WGS84Info *tinfo,
                 double easting,
                 double northing,
                 double altitude,
                 double *LAT,
                 double *LONG,
                 double *HEIGHT) {

         double  le = easting,
                 ln = northing,
                 la = altitude;

         if (pj_transform(tinfo->toProj,
                          tinfo->fromProj,
                          1, 0,
                          &le, &ln, &la) != ISOK) return(ISERROR);

         *LONG   = le / DEGREE_TO_RADIAN;
         *LAT    = ln / DEGREE_TO_RADIAN;
         *HEIGHT = la / DEGREE_TO_RADIAN;

         return(ISOK);
}

Init_wgs84_to_ed50 - called once to initialize the transforms.

wgs84LL2NE - called with a lat/long in WGS84, returns northing/easting  
in ED50

wgs84NE2LL - called with northing/easting in ED50, returns lat/long in  
WGS84

The last two functions are used no matter what the transform is. It is  
the first function that defines the WGS84 lat/long, and the ed50  
northing/easting.

I was surprised how easy it was to get the reverse one working. Just  
reverse the first two parameters to pj_transform. I am sure there are  
places where there are problems. But for all the transforms I go  
(including OSTN02 with a grid shift), it just works.


Hope this helps. The secret is in the two calls to pj_init_plus().  
Note that both are needed even if you're are going in one direction  
only. One describes what you have, the other what you want.

>

Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Office: Int +46 8-615 60 20
Mobile: Int +46 70-815 1696

And remember:

It is RSofT and there is always something under construction.
It is like talking about large city with all constructions finished.
Not impossible, but very unlikely.



From jgpallero at gmail.com  Sun Dec 13 10:13:42 2009
From: jgpallero at gmail.com (=?ISO-8859-1?Q?Jos=E9_Luis_Garc=EDa_Pallero?=)
Date: Sun, 13 Dec 2009 19:13:42 +0100
Subject: [Proj] Verification of inverse step in projection
In-Reply-To: <44A702CD-E41D-4B79-85D5-FBD1D9854D31@opq.se>
References: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>
	<D1447DCD-D04B-434D-9463-DE09E522B32F@opq.se>
	<323eda50912130625i3c637b08icd141201708dae0c@mail.gmail.com>
	<44A702CD-E41D-4B79-85D5-FBD1D9854D31@opq.se>
Message-ID: <323eda50912131013r7a6defd3l808b13b1f29ba958@mail.gmail.com>

2009/12/13 Roger Oberholtzer <roger at opq.se>:
>
> On Dec 13, 2009, at 3:25 PM, José Luis García Pallero wrote:
>
>> 2009/12/13 Roger Oberholtzer <roger at opq.se>:
>>> Perhaps:
>>>
>>> projPJ *pjStruct;
>>>
>>> as pj_init_plus returns a pointer.
>>>
>>>
>>>> pjStruct = pj_init_plus("+proj=tcc +ellps=clrk66 +lon_0=90W");
>>>> if(!pjStruct)
>>>>    ....
>>>> if(pjStruct->inv==0)
>>>>    ....
>>
>> But pj_init_plus() can't know if you will use the forward or the
>> inverse step.
>
> These are two different issues:
>
> 1) You have a syntax error, which I tried to explain. That must be
> corrected no matter.

But the correct way of projPJ declaration is projPJ pjStruct because,
actually, projPJ is internally a pointer, as you can see in
http://trac.osgeo.org/proj/browser/trunk/proj/src/proj_api.h#L53
My problem is that I need to know if any projection has inverse step,
because some of them have not. As I posted in my first message, the
PROJ4 manual says that this can be checked as pjStruct->inv==0
(inverse step do not exist). But my compiler says that the member
'inv' do not exists in pjStruct.

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************


From roger at opq.se  Sun Dec 13 12:24:37 2009
From: roger at opq.se (Roger Oberholtzer)
Date: Sun, 13 Dec 2009 21:24:37 +0100
Subject: [Proj] Verification of inverse step in projection
In-Reply-To: <323eda50912131013r7a6defd3l808b13b1f29ba958@mail.gmail.com>
References: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>
	<D1447DCD-D04B-434D-9463-DE09E522B32F@opq.se>
	<323eda50912130625i3c637b08icd141201708dae0c@mail.gmail.com>
	<44A702CD-E41D-4B79-85D5-FBD1D9854D31@opq.se>
	<323eda50912131013r7a6defd3l808b13b1f29ba958@mail.gmail.com>
Message-ID: <356189E2-8955-49CF-ABB5-2AA0135DC699@opq.se>


On Dec 13, 2009, at 7:13 PM, José Luis García Pallero wrote:

> But the correct way of projPJ declaration is projPJ pjStruct because,
> actually, projPJ is internally a pointer, as you can see in

I was remembering incorrectly. projPJ is a typedef that is really  
either PJ *, or void *, depending on whether PROJECTS_H is defined.  
And this is defined if you include projects.h before the main proj  
include file. As I never access the inside of the struct, I do not  
include projects.h. But it seems to be needed if you want to access  
the inside of the struct.

Sorry for the confusion.


Roger Oberholtzer

OPQ Systems / Ramböll RST

Ramböll Sverige AB
Kapellgränd 7
P.O. Box 4205
SE-102 65 Stockholm, Sweden

Office: Int +46 8-615 60 20
Mobile: Int +46 70-815 1696

And remember:

It is RSofT and there is always something under construction.
It is like talking about large city with all constructions finished.
Not impossible, but very unlikely.



From jgpallero at gmail.com  Sun Dec 13 23:54:38 2009
From: jgpallero at gmail.com (=?ISO-8859-1?Q?Jos=E9_Luis_Garc=EDa_Pallero?=)
Date: Mon, 14 Dec 2009 08:54:38 +0100
Subject: [Proj] Verification of inverse step in projection
In-Reply-To: <356189E2-8955-49CF-ABB5-2AA0135DC699@opq.se>
References: <323eda50912120544x69c3effey39cb33e70ad45ac@mail.gmail.com>
	<D1447DCD-D04B-434D-9463-DE09E522B32F@opq.se>
	<323eda50912130625i3c637b08icd141201708dae0c@mail.gmail.com>
	<44A702CD-E41D-4B79-85D5-FBD1D9854D31@opq.se>
	<323eda50912131013r7a6defd3l808b13b1f29ba958@mail.gmail.com>
	<356189E2-8955-49CF-ABB5-2AA0135DC699@opq.se>
Message-ID: <323eda50912132354x54ef638ew3a6a6c49046cbbd7@mail.gmail.com>

2009/12/13 Roger Oberholtzer <roger at opq.se>:
>
> On Dec 13, 2009, at 7:13 PM, José Luis García Pallero wrote:
>
>> But the correct way of projPJ declaration is projPJ pjStruct because,
>> actually, projPJ is internally a pointer, as you can see in
>
> I was remembering incorrectly. projPJ is a typedef that is really
> either PJ *, or void *, depending on whether PROJECTS_H is defined.
> And this is defined if you include projects.h before the main proj
> include file. As I never access the inside of the struct, I do not
> include projects.h. But it seems to be needed if you want to access
> the inside of the struct.

Thanks, you are right. I can access now to the struct's members.
It's only need to include projects.h, that includes itself proj_api.h
(http://trac.osgeo.org/proj/browser/trunk/proj/src/projects.h#L243)

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************


From mfinn at usgs.gov  Tue Dec 15 13:06:34 2009
From: mfinn at usgs.gov (Michael P Finn)
Date: Tue, 15 Dec 2009 14:06:34 -0700
Subject: [Proj] CaGIS Scholarships
Message-ID: <OFE5764B2F.E51FA98C-ON8725768D.0073EE23-8725768D.0073EBBC@usgs.gov>

THE 2010 CARTOGRAPHY AND GEOGRAPHIC INFORMATION SOCIETY (CaGIS) 
SCHOLARSHIPS

Each year, the Cartography and Geographic Information Society (CaGIS) 
sponsors two scholarships to students whose research and accomplishments 
support the mission of CaGIS. The scholarships recognize academic 
achievement and encourage the continuing success of outstanding 
cartography, geographic information systems (GIS), and geographic 
information science (GIScience) students. The scholarships also recognize 
achievement or potential for achievement in original research advancing 
the 
specific disciplines of cartography or GIScience. Winners are selected 
based on academic achievement, particularly in the calendar year prior to 
the award. Applications are reviewed by the CaGIS Scholarship Committee, 
and awards are announced in February or March. Information on other 
CaGIS-sponsored awards is available at www.cartogis.org/awards.

Awards
CaGIS Masters Scholarship Award ($500): This award is to be granted to a 
student enrolled in, or accepted into, a Masters? degree program during 
2009 or 2010. The winner will have demonstrated excellence in cartography 
or GIScience coursework and the potential to contribute to cartography or 
GIScience research. Outstanding undergraduates seeking to support 
Masters? level research in GIScience are also eligible to apply (see 
below).

CaGIS Doctoral Scholarship Award ($1000): This award is to be granted to a 

student enrolled in, or accepted into, a PhD degree program during 2009 or 

2010. The winner will have demonstrated excellence in cartography or 
GIScience coursework and the potential to contribute to cartography or 
GIScience research.

Winners are invited to present their research at an upcoming 
CaGIS-sponsored conference (such as AAG, GIScience, or AutoCarto) and may 
be eligible for limited travel or registration support if they choose to 
present.

Eligibility
Candidates must be enrolled full-time in a four-year undergraduate or 
graduate degree program during 2009 or 2010, studying cartography, 
geographic information science, or a closely related field. A letter of 
recommendation from a faculty member attesting to these eligibility 
requirements and to scholarly achievement and potential is required. 
Membership in CaGIS is not required, though professional and service 
activities such as participation in CaGIS is one of the selection criteria 

(see below). Prior scholarship winners are eligible to apply in subsequent 

years if all appropriate criteria are satisfied. Undergraduate applicants 
who have not yet been accepted into graduate school should request that 
their faculty advisor assess their potential for graduate study in their 
reference letter.

Selection Criteria
Valid applications for CaGIS awards (see below for application procedures) 

are reviewed by the CaGIS Scholarship Committee, which will use the 
following criteria to judge applications:
?                50% academic record; 
?                20% applicant?s statement;
?                20% letter of recommendation; 
? 10% professional activities (CaGIS membership, conference 
participation, publications, community service, etc.).
Level of financial need will be considered, if necessary, to break ties, 
after the primary criteria have been considered. The committee can choose 
to award no scholarships.

Application Procedure
1.               Go to http://www.cartogis.org/awards/ and complete the 
application form. 
2.               Compile the following: 
?                the completed application form
? a 400-word statement of educational objectives, future study or 
research plans and professional activities, and relationship of activities 

and/or research to mission of CaGIS
?                a digital transcript showing records for 2009
? one letter of recommendation from a faculty member or supervisor 
familiar with your work
3. E-mail these documents; see instructions on form. Applications must 
arrive no later than 5:00pm CST on JANUARY 15, 2010.

Notification of Winners 
The selected applicants for the scholarships will be notified on or near 
February 15, 2010. The winners are encouraged to attend the awards 
ceremony 
at the 2010 AAG conference or the 2010 AutoCarto conference (see 
http://www.cartogis.org/eventspage/ for more information).

________________________________________
CaGIS Scholarship Committee: 
Rob Edsall, Max Baber, and Michael Finn

Contact Information: 
Rob Edsall, CaGIS Student Activities Coordinator
Department of Geography
414 Social Sciences Tower
University of Minnesota
267 19th Ave. S.
Minneapolis, MN 55455

phone: (612) 625-2562
e-mail: edsal001 at umn.edu






-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20091215/090c0cb4/attachment.html>

From cgodkin at gmail.com  Tue Dec 15 21:27:32 2009
From: cgodkin at gmail.com (Carl Godkin)
Date: Tue, 15 Dec 2009 21:27:32 -0800
Subject: [Proj] Rectified Skew Orthomorphic projection, again...
Message-ID: <b042fc280912152127y41510602vdb0a1d24f6e659eb@mail.gmail.com>

Hi,

Almost 6 years ago I asked a question on this list (actually, a predecessor
list) about the rectified skew orthomorphic projection as used in Malaysia.

http://lists.maptools.org/pipermail/proj/2004-January/001025.html

I offered a patch which ended up as Bugzilla 461 to provide an alternative
to
"omerc" called "rso" since the former was almost but not quite correct for
three
batches of test points I had.

At the time Frank said he'd wait for Gerald to weigh in on the situation
which he did (as you could see from the email thread).  Gerald succeeded
to producing the correct results by adding another parameter (which he
called
"gamma_c") to "omerc."

I had meanwhile patched our copy of PROJ 4.4.7 (as I explained in the
Bugzilla entry) so I was happy.

Here's where I made my mistake:

When we updated PROJ versions, I assumed that Gerald's change was
in the PROJ code.  I didn't realized that Gerald had apparently only made
the change to support "gamma_c" (thus obviating my patch) to his libproj
version, and not to PROJ.  (Until today when I started noticing the
message about "gamma_c" not being used, I was unaware of this!)

What should I do?  For now, I've just re-applied my old patch to a more
recent version of PROJ and I'm getting the correct results again.  I
guess the right thing to do would be to patch the "omerc" code as
Gerald did, but I don't know how to do that and his code doesn't seem
to be available anywhere any longer.

Thanks for listening,

carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20091215/a34cbc72/attachment.html>

From warmerdam at pobox.com  Tue Dec 15 21:55:47 2009
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 16 Dec 2009 00:55:47 -0500
Subject: [Proj] Rectified Skew Orthomorphic projection, again...
In-Reply-To: <b042fc280912152127y41510602vdb0a1d24f6e659eb@mail.gmail.com>
References: <b042fc280912152127y41510602vdb0a1d24f6e659eb@mail.gmail.com>
Message-ID: <4B287663.6030403@pobox.com>

Carl Godkin wrote:
> 
> Hi,
> 
> Almost 6 years ago I asked a question on this list (actually, a predecessor 
> list) about the rectified skew orthomorphic projection as used in Malaysia.
> 
> http://lists.maptools.org/pipermail/proj/2004-January/001025.html
> 
> I offered a patch which ended up as Bugzilla 461 to provide an 
> alternative to
> "omerc" called "rso" since the former was almost but not quite correct 
> for three
> batches of test points I had.
> 
> At the time Frank said he'd wait for Gerald to weigh in on the situation
> which he did (as you could see from the email thread).  Gerald succeeded
> to producing the correct results by adding another parameter (which he 
> called 
> "gamma_c") to "omerc."
> 
> I had meanwhile patched our copy of PROJ 4.4.7 (as I explained in the 
> Bugzilla entry) so I was happy.
> 
> Here's where I made my mistake:
> 
> When we updated PROJ versions, I assumed that Gerald's change was
> in the PROJ code.  I didn't realized that Gerald had apparently only made
> the change to support "gamma_c" (thus obviating my patch) to his libproj
> version, and not to PROJ.  (Until today when I started noticing the
> message about "gamma_c" not being used, I was unaware of this!)
> 
> What should I do?  For now, I've just re-applied my old patch to a more
> recent version of PROJ and I'm getting the correct results again.  I
> guess the right thing to do would be to patch the "omerc" code as
> Gerald did, but I don't know how to do that and his code doesn't seem
> to be available anywhere any longer.

Carl,

If you file a ticket, I'll try to port the gamma_c parameter from
libproj.4 and see if I can update the epsg to proj.4 translation to
capture this parameter.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From hamish_b at yahoo.com  Tue Dec 15 22:28:22 2009
From: hamish_b at yahoo.com (Hamish)
Date: Wed, 16 Dec 2009 19:28:22 +1300
Subject: [Proj] adding a local EPSG code
Message-ID: <20091216192822.a3b431a0.hamish_b@yahoo.com>

Hi there,

I am wondering, what's the recommended best-practice way to locally add a
new EPSG code & have the proj4 toolchain pick it up?

do I just pick a suitable number and append it to the end of 
/usr/share/proj/epsg? I'd prefer to add it to /usr/share/proj/other.extra,
but how is that file used? does the code need to be in the file at proj4
and gdal build-time in order to work?  (same Q for the fate of the esri &
esri.extra files, out of curiosity)


fwiw I'm dealing with a nationally known handy-projection not a personal
invention, but probably not up to the popularity that would warrant
submission for official inclusion to whatever the EPSG call themselves
these days. just another local tmerc, but one I'd like to have on all
the local machines..


thanks,
Hamish


From hamish_b at yahoo.com  Tue Dec 15 22:39:19 2009
From: hamish_b at yahoo.com (Hamish)
Date: Tue, 15 Dec 2009 22:39:19 -0800 (PST)
Subject: [Proj] Rectified Skew Orthomorphic projection, again...
In-Reply-To: <b042fc280912152127y41510602vdb0a1d24f6e659eb@mail.gmail.com>
Message-ID: <292750.51590.qm@web110007.mail.gq1.yahoo.com>

Carl wrote:
>  I guess the right thing to do would be to patch the
> "omerc" code asGerald did, but I
> don't know how to do that and his code doesn't
> seemto be available anywhere any longer.

It's there, just the URL changed.
I have now fixed the link to Gerald's site on the proj.osgeo.org webpage.


Hamish



      


From cgodkin at gmail.com  Wed Dec 16 05:18:08 2009
From: cgodkin at gmail.com (Carl Godkin)
Date: Wed, 16 Dec 2009 05:18:08 -0800
Subject: [Proj] Rectified Skew Orthomorphic projection, again...
In-Reply-To: <4B287663.6030403@pobox.com>
References: <b042fc280912152127y41510602vdb0a1d24f6e659eb@mail.gmail.com>
	<4B287663.6030403@pobox.com>
Message-ID: <b042fc280912160518w3c8e64d8u1617385bd6337562@mail.gmail.com>

Frank wrote:


>
> If you file a ticket, I'll try to port the gamma_c parameter from
> libproj.4 and see if I can update the epsg to proj.4 translation to
> capture this parameter.
>
>
>
I've done this.  Thank you!

Hamish wrote:

> I have now fixed the link to Gerald's site on the proj.osgeo.org webpage.

Thanks for doing this.  I was able to read Gerald's proj_omerc.c finally.

carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20091216/a424c189/attachment.html>

From warmerdam at pobox.com  Wed Dec 16 07:15:12 2009
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 16 Dec 2009 10:15:12 -0500
Subject: [Proj] adding a local EPSG code
In-Reply-To: <20091216192822.a3b431a0.hamish_b@yahoo.com>
References: <20091216192822.a3b431a0.hamish_b@yahoo.com>
Message-ID: <4B28F980.9060204@pobox.com>

Hamish wrote:
> Hi there,
> 
> I am wondering, what's the recommended best-practice way to locally add a
> new EPSG code & have the proj4 toolchain pick it up?
> 
> do I just pick a suitable number and append it to the end of 
> /usr/share/proj/epsg? I'd prefer to add it to /usr/share/proj/other.extra,
> but how is that file used? does the code need to be in the file at proj4
> and gdal build-time in order to work?  (same Q for the fate of the esri &
> esri.extra files, out of curiosity)
> 
> fwiw I'm dealing with a nationally known handy-projection not a personal
> invention, but probably not up to the popularity that would warrant
> submission for official inclusion to whatever the EPSG call themselves
> these days. just another local tmerc, but one I'd like to have on all
> the local machines..

Hamish,

If you are using PROJ.4 from the commandline or from environments where
you can pass the PROJ.4 definition string then you can put the definition
in any of the init files and use a meaningful name.

For instance, if you added it at the end of other.extra with the name
hamish_cs then you could reference it as:

   +init=other.extra:hamish_cs

You generally only have to pretend it is an EPSG coordinate system if
you are using PROJ.4 through software that wants to refer to things by
EPSG number and which internally is creating the +init=epsg:n string.
This is the case with the WxS services in MapServer for instance.

The files like other.extra and esri.extra have non-epsg numeric codes
that are sometimes used as if they were epsg codes through WMS and related
software.  When you want to do that you need to manually append other.extra
and esri.extra to the epsg file.

I try to avoid distributing the epsg init file in adultered form as the
EPSG database terms of use discourage redistributing their database under
the name "epsg" if it is not representative of the coordinate system
and parameters as they originally provided them.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent



From don_nell at yahoo.com  Thu Dec 17 04:54:18 2009
From: don_nell at yahoo.com (don_nell)
Date: Thu, 17 Dec 2009 04:54:18 -0800 (PST)
Subject: [Proj]  Convert X and Y to Lat and Lon
Message-ID: <1261054458634-4181089.post@n2.nabble.com>


Hello, 

I'm very new to mapping and I'm trying to use cs2cs.exe from Proj4 to
convert the X and Y values from an ESRI shape file (roads from the state of
Georgia) into Lat and Lon coordinates.  However, I'm not sure what
parameters I need  to accomplish this. 

I've gotten pretty close using the parameters below (plus or minus a city
block), but I'm sure I could do better.

+proj=tmerc +units=us-ft +datum=NAD83 +lat_0=-1.77517 +lon_0=-83.5 +k=0.9999
+x_0=0.0 

The "+lat_0" parameter was derived by trial and error. 

Can anyone tell me the correct parameters to use to make this work? 

The contents of the associated .prj file are as follows. 

Thanks in advance. 

Don 

PROJCS["NAD_1983_Georgia_Statewide_Lambert",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-83.5],PARAMETER["Standard_Parallel_1",31.41666666666667],PARAMETER["Standard_Parallel_2",34.28333333333333],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Foot_US",0.3048006096012192]] 

-- 
View this message in context: http://n2.nabble.com/Convert-X-and-Y-to-Lat-and-Lon-tp4181089p4181089.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From hamish_b at yahoo.com  Thu Dec 17 05:24:56 2009
From: hamish_b at yahoo.com (Hamish)
Date: Thu, 17 Dec 2009 05:24:56 -0800 (PST)
Subject: [Proj] Convert X and Y to Lat and Lon
In-Reply-To: <1261054458634-4181089.post@n2.nabble.com>
Message-ID: <881385.86804.qm@web110013.mail.gq1.yahoo.com>

don_nell wrote:
> I'm very new to mapping and I'm trying to use cs2cs.exe
> from Proj4 to
> convert the X and Y values from an ESRI shape file (roads
> from the state of
> Georgia) into Lat and Lon coordinates.  However, I'm
> not sure what
> parameters I need  to accomplish this. 
> 
> I've gotten pretty close using the parameters below (plus
> or minus a city
> block), but I'm sure I could do better.
> 
> +proj=tmerc +units=us-ft +datum=NAD83 +lat_0=-1.77517
> +lon_0=-83.5 +k=0.9999
> +x_0=0.0 
> 
> The "+lat_0" parameter was derived by trial and error. 
> 
> Can anyone tell me the correct parameters to use to make
> this work? 
> 
> The contents of the associated .prj file are as follows. 
> 
> Thanks in advance. 
> 
> Don 
> 


PROJCS["NAD_1983_Georgia_Statewide_Lambert"
,GEOGCS["GCS_North_American_1983"
,DATUM["D_North_American_1983"
,SPHEROID["GRS_1980",6378137.0,298.257222101]]
,PRIMEM["Greenwich",0.0]
,UNIT["Degree",0.0174532925199433]]
,PROJECTION["Lambert_Conformal_Conic"]
,PARAMETER["False_Easting",0.0]
,PARAMETER["False_Northing",0.0]
,PARAMETER["Central_Meridian",-83.5]
,PARAMETER["Standard_Parallel_1",31.41666666666667]
,PARAMETER["Standard_Parallel_2",34.28333333333333]
,PARAMETER["Latitude_Of_Origin",0.0]
,UNIT["Foot_US",0.3048006096012192]]


try:

+proj=lcc
+datum=NAD83
+x_0=0.0
+y_0=0.0
+lon_0=-83.5
+lat_1=31.41666666666667
+lat_2=34.28333333333333
+lat_0=0.0
+units=us-ft


that is just by hand, I think there is some util which comes
with the gdal(?) source code for translating WKT to +proj4
syntax.

there is one South Georgia LCC in the EPSG file, but it's a
bit different.


Hamish



      


From don_nell at yahoo.com  Thu Dec 17 09:49:23 2009
From: don_nell at yahoo.com (don_nell)
Date: Thu, 17 Dec 2009 09:49:23 -0800 (PST)
Subject: [Proj] Convert X and Y to Lat and Lon
In-Reply-To: <881385.86804.qm@web110013.mail.gq1.yahoo.com>
References: <1261054458634-4181089.post@n2.nabble.com>
	<881385.86804.qm@web110013.mail.gq1.yahoo.com>
Message-ID: <1261072163137-4182536.post@n2.nabble.com>


Hamish,

That's amazing. Thank you so much.

I've been struggling with this for a few days now and finally have the
answer.

Would you happen to know how to go the other way too? If I have the Lat and
Lon, how would I know the X and Y.  I'm still very new to this.

Thanks again for your time.

Don




hamish-2 wrote:
> 
> don_nell wrote:
>> I'm very new to mapping and I'm trying to use cs2cs.exe
>> from Proj4 to
>> convert the X and Y values from an ESRI shape file (roads
>> from the state of
>> Georgia) into Lat and Lon coordinates.  However, I'm
>> not sure what
>> parameters I need  to accomplish this. 
>> 
>> I've gotten pretty close using the parameters below (plus
>> or minus a city
>> block), but I'm sure I could do better.
>> 
>> +proj=tmerc +units=us-ft +datum=NAD83 +lat_0=-1.77517
>> +lon_0=-83.5 +k=0.9999
>> +x_0=0.0 
>> 
>> The "+lat_0" parameter was derived by trial and error. 
>> 
>> Can anyone tell me the correct parameters to use to make
>> this work? 
>> 
>> The contents of the associated .prj file are as follows. 
>> 
>> Thanks in advance. 
>> 
>> Don 
>> 
> 
> 
> PROJCS["NAD_1983_Georgia_Statewide_Lambert"
> ,GEOGCS["GCS_North_American_1983"
> ,DATUM["D_North_American_1983"
> ,SPHEROID["GRS_1980",6378137.0,298.257222101]]
> ,PRIMEM["Greenwich",0.0]
> ,UNIT["Degree",0.0174532925199433]]
> ,PROJECTION["Lambert_Conformal_Conic"]
> ,PARAMETER["False_Easting",0.0]
> ,PARAMETER["False_Northing",0.0]
> ,PARAMETER["Central_Meridian",-83.5]
> ,PARAMETER["Standard_Parallel_1",31.41666666666667]
> ,PARAMETER["Standard_Parallel_2",34.28333333333333]
> ,PARAMETER["Latitude_Of_Origin",0.0]
> ,UNIT["Foot_US",0.3048006096012192]]
> 
> 
> try:
> 
> +proj=lcc
> +datum=NAD83
> +x_0=0.0
> +y_0=0.0
> +lon_0=-83.5
> +lat_1=31.41666666666667
> +lat_2=34.28333333333333
> +lat_0=0.0
> +units=us-ft
> 
> 
> that is just by hand, I think there is some util which comes
> with the gdal(?) source code for translating WKT to +proj4
> syntax.
> 
> there is one South Georgia LCC in the EPSG file, but it's a
> bit different.
> 
> 
> Hamish
> 
> 
> 
>       
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 

-- 
View this message in context: http://n2.nabble.com/Convert-X-and-Y-to-Lat-and-Lon-tp4181089p4182536.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From hamish_b at yahoo.com  Thu Dec 17 18:25:38 2009
From: hamish_b at yahoo.com (Hamish)
Date: Thu, 17 Dec 2009 18:25:38 -0800 (PST)
Subject: [Proj] Convert X and Y to Lat and Lon
In-Reply-To: <1261072163137-4182536.post@n2.nabble.com>
Message-ID: <754138.51415.qm@web110005.mail.gq1.yahoo.com>

don_nell wrote:
> Would you happen to know how to go the other way too? If I
> have the Lat and Lon, how would I know the X and Y.  I'm still
> very new to this.


instead of


cs2cs [LCC +proj= terms]  +to  [longlat +proj= terms]

just reverse them:

cs2cs [longlat +proj= terms]  +to  [LCC +proj= terms]


IIUC you can't count on all projections to be fully reversible, but in
your case I think it'll be ok.

cs2cs expects input data in the form of "x y", i.e. "longitude latitude"
Use the -r flag if your data has reversed columns. be careful with
hemisphere signs and command line quoting for DDDdMM'SS.SSSS" style
input.

if you haven't already found the +nadgrids=nad83 term, you may want to
investigate that.


Hamish



      


From don_nell at yahoo.com  Fri Dec 18 07:23:24 2009
From: don_nell at yahoo.com (don_nell)
Date: Fri, 18 Dec 2009 07:23:24 -0800 (PST)
Subject: [Proj] Convert X and Y to Lat and Lon
In-Reply-To: <754138.51415.qm@web110005.mail.gq1.yahoo.com>
References: <1261054458634-4181089.post@n2.nabble.com>
	<881385.86804.qm@web110013.mail.gq1.yahoo.com>
	<1261072163137-4182536.post@n2.nabble.com>
	<754138.51415.qm@web110005.mail.gq1.yahoo.com>
Message-ID: <1261149804168-4187124.post@n2.nabble.com>


Hamish,

Thank you very much !!!

Don


hamish-2 wrote:
> 
> don_nell wrote:
>> Would you happen to know how to go the other way too? If I
>> have the Lat and Lon, how would I know the X and Y.  I'm still
>> very new to this.
> 
> 
> instead of
> 
> 
> cs2cs [LCC +proj= terms]  +to  [longlat +proj= terms]
> 
> just reverse them:
> 
> cs2cs [longlat +proj= terms]  +to  [LCC +proj= terms]
> 
> 
> IIUC you can't count on all projections to be fully reversible, but in
> your case I think it'll be ok.
> 
> cs2cs expects input data in the form of "x y", i.e. "longitude latitude"
> Use the -r flag if your data has reversed columns. be careful with
> hemisphere signs and command line quoting for DDDdMM'SS.SSSS" style
> input.
> 
> if you haven't already found the +nadgrids=nad83 term, you may want to
> investigate that.
> 
> 
> Hamish
> 
> 
> 
>       
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
> 
> 

-- 
View this message in context: http://n2.nabble.com/Convert-X-and-Y-to-Lat-and-Lon-tp4181089p4187124.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


