From ed at topozone.com  Fri Aug  3 09:08:24 2001
From: ed at topozone.com (Ed McNierney)
Date: Fri, 3 Aug 2001 12:08:24 -0400
Subject: [OSRS-PROJ] PROJ.4 "proj=latlong ellps=GRS80" functionality?
Message-ID: <13858AA1A74F30419F319ACB66A9D12201914E@mercator.topozone.com>

I'm having a hard time understanding how this functionality is supposed
to work.  I've built PROJ 4.4.3 with no troubles (Windows 2000,
Microsoft VC++) and everything seems to be working.

I don't understand the results I'm getting from "proj=latlong
ellps=GRS80", however.  I'm ultimately trying to use this in MapServer,
where I have several input data layers in NAD83 decimal degrees that I'm
trying to project to UTM.

Here's the simple example I don't understand:

C:\>proj -v +proj=latlong +ellps=GRS80
#Lat/long (Geodetic)
#
# +proj=latlong +ellps=GRS80
-71 43
-1.24   0.75

That is, my input coordinate (-71, 43) is transformed to (-1.24, 0.75).
What does this mean?  I would expect the output results to be either
identical to my input (if the input data is presumed to be in the output
ellipsoid or if GRS80 or WGS84 is the default) or I would expect them to
be very slightly different (if the input ellipsoid is something else).

It would be extremely helpful if someone could explain this output to me
- thanks!

	- Ed

Ed McNierney
Chief Mapmaker
TopoZone.com
ed at topozone.com
(978) 251-4242

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From csbruce at cubewerx.com  Fri Aug  3 09:26:15 2001
From: csbruce at cubewerx.com (Craig Bruce)
Date: Fri, 3 Aug 2001 12:26:15 -0400
Subject: [OSRS-PROJ] PROJ.4 "proj=latlong ellps=GRS80" functionality?
Message-ID: <200108031626.MAA00378@tux.cubewerx.com>

"Ed McNierney" <ed at topozone.com> wrote:

> That is, my input coordinate (-71, 43) is transformed to (-1.24, 0.75).
> What does this mean?  I would expect the output results to be either
> identical to my input (if the input data is presumed to be in the output
> ellipsoid or if GRS80 or WGS84 is the default) or I would expect them to
> be very slightly different (if the input ellipsoid is something else).

It looks to me like the output is the same coordinate value as the input,
except translated into radians.  Since only two decimal places seem to be
showing, you probably wouldn't see any difference between GRS80 and WGS84,
though I don't think the ellipsoid is switched in this invocation.

--------------------------+------------------------+--------------------------
Dr. Craig S. Bruce        | Tel: 819-771-8303 x205 |             CubeWerx Inc.
Senior Software Developer |   Home: 613-565-1344   |      Hull, Québec, Canada
csbruce at cubewerx.com      | http://www.csbruce.com |  http://www.cubewerx.com/
--------------------------+------------------------+--------------------------
      "This message contains a Unix e-mail virus.  It works based on the
     honour system.  Please send this message to everyone in your address
          book with a sensitive personal document as an attachment."
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From ed at topozone.com  Fri Aug  3 09:46:52 2001
From: ed at topozone.com (Ed McNierney)
Date: Fri, 3 Aug 2001 12:46:52 -0400
Subject: [OSRS-PROJ] PROJ.4 "proj=latlong ellps=GRS80" functionality?
Message-ID: <13858AA1A74F30419F319ACB66A9D122CFB6@mercator.topozone.com>

Craig -

Thanks!  Somehow that didn't occur to me as I stared at those numbers.
After looking at values with more decimal places, it appears that the
input coordinates are presumed to be relative to the ellipsoid specified
in the output (i.e. no datum shift involved).  That makes sense and is
what I expect.

Now I've got a different problem to solve, but that's a MapServer
discussion, not PROJ.4.  Thanks again.

	- Ed

Ed McNierney
Chief Mapmaker
TopoZone.com
ed at topozone.com
(978) 251-4242


-----Original Message-----
From: Craig Bruce [mailto:csbruce at cubewerx.com]
Sent: Friday, August 03, 2001 12:26 PM
To: osrs-proj at remotesensing.org
Subject: Re: [OSRS-PROJ] PROJ.4 "proj=latlong ellps=GRS80"
functionality?


"Ed McNierney" <ed at topozone.com> wrote:

> That is, my input coordinate (-71, 43) is transformed to (-1.24,
0.75).
> What does this mean?  I would expect the output results to be either
> identical to my input (if the input data is presumed to be in the
output
> ellipsoid or if GRS80 or WGS84 is the default) or I would expect them
to
> be very slightly different (if the input ellipsoid is something else).

It looks to me like the output is the same coordinate value as the
input,
except translated into radians.  Since only two decimal places seem to
be
showing, you probably wouldn't see any difference between GRS80 and
WGS84,
though I don't think the ellipsoid is switched in this invocation.

--------------------------+------------------------+--------------------
------
Dr. Craig S. Bruce        | Tel: 819-771-8303 x205 |
CubeWerx Inc.
Senior Software Developer |   Home: 613-565-1344   |      Hull, Québec,
Canada
csbruce at cubewerx.com      | http://www.csbruce.com |
http://www.cubewerx.com/
--------------------------+------------------------+--------------------
------
      "This message contains a Unix e-mail virus.  It works based on the
     honour system.  Please send this message to everyone in your
address
          book with a sensitive personal document as an attachment."
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From fnievinski at terra.com.br  Sat Aug  4 16:30:49 2001
From: fnievinski at terra.com.br (Felipe G. Nievinski)
Date: Sat, 04 Aug 2001 20:30:49 -0300
Subject: [OSRS-PROJ] da, df
In-Reply-To: <13858AA1A74F30419F319ACB66A9D122CFB6@mercator.topozone.com>
References: <13858AA1A74F30419F319ACB66A9D122CFB6@mercator.topozone.com>
Message-ID: <200108042030490350.00E6B734@smtp.zaz.com.br>

FYI (about the DA and DF parameters)

The DA and DF are the delta values between the ellipsoid used by WGS-84 and another given ellipsoid:
da = [a(WGS 84 ellipsoid) - a(second ellipsoid)] | a = semi-major (equatorial) axis
df = [f(WGS 84 ellipsoid) - f(second ellisoid)*10000] | f = flattening

They are commonly used by NAVSTAR-GPS receivers, which shall already know the WGS-84 model, and therefore needs less space to store just the delta values for the others Earth models than the a and f values themselves.
For example, the Finnish ellipsoid can be defined by:
da = -251 m
df = -0.14192702

hope this helps.

Felipe Nievinski.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From vze2hc4d at verizon.net  Sat Aug  4 17:19:07 2001
From: vze2hc4d at verizon.net (Gerald I. Evenden)
Date: Sat, 04 Aug 2001 20:19:07 -0400
Subject: [OSRS-PROJ] da, df
References: <13858AA1A74F30419F319ACB66A9D122CFB6@mercator.topozone.com> <200108042030490350.00E6B734@smtp.zaz.com.br>
Message-ID: <3B6C90FB.B64849D4@verizon.net>

Remarkable.  The lengths some will go to to save such a trivial number of bytes.

I used to do this back in the 60's when memory was dear, but now???

"Felipe G. Nievinski" wrote:

> FYI (about the DA and DF parameters)
>
> The DA and DF are the delta values between the ellipsoid used by WGS-84 and another given ellipsoid:
> da = [a(WGS 84 ellipsoid) - a(second ellipsoid)] | a = semi-major (equatorial) axis
> df = [f(WGS 84 ellipsoid) - f(second ellisoid)*10000] | f = flattening
>
> They are commonly used by NAVSTAR-GPS receivers, which shall already know the WGS-84 model, and therefore needs less space to store just the delta values for the others Earth models than the a and f values themselves.
> For example, the Finnish ellipsoid can be defined by:
> da = -251 m
> df = -0.14192702

    ...

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From fnievinski at terra.com.br  Sun Aug  5 10:54:04 2001
From: fnievinski at terra.com.br (Felipe G. Nievinski)
Date: Sun, 05 Aug 2001 14:54:04 -0300
Subject: [OSRS-PROJ] da, df
In-Reply-To: <3B6C90FB.B64849D4@verizon.net>
References: <13858AA1A74F30419F319ACB66A9D122CFB6@mercator.topozone.com>
 <200108042030490350.00E6B734@smtp.zaz.com.br>
 <3B6C90FB.B64849D4@verizon.net>
Message-ID: <200108051454040630.00F0454F@smtp.zaz.com.br>


On 04/08/01 at 20:19 Gerald I. Evenden wrote:
>Remarkable.  The lengths some will go to to save such a trivial number of bytes.
>
>I used to do this back in the 60's when memory was dear, but now???
>

Some days ago there was a doubt in this list about what the da and df parameters mean. I found an explanation (from the U.S. NIMA) and sent it hoping it could help someone.

Gerald, I'm sorry, English is not my mother tongue, and I just did not understand what you meant. :((

Felipe.

>"Felipe G. Nievinski" wrote:
>
>> FYI (about the DA and DF parameters)
>>
>> The DA and DF are the delta values between the ellipsoid used by WGS-84 and another given ellipsoid:
>> da = [a(WGS 84 ellipsoid) - a(second ellipsoid)] | a = semi-major (equatorial) axis
>> df = [f(WGS 84 ellipsoid) - f(second ellisoid)*10000] | f = flattening
>>
>> They are commonly used by NAVSTAR-GPS receivers, which shall already know the WGS-84 model, and therefore needs less space to store just the delta values for the others Earth models than the a and f values themselves.
>> For example, the Finnish ellipsoid can be defined by:
>> da = -251 m
>> df = -0.14192702
>
>    ...
>
>----------------------------------------
>PROJ.4 Discussion List
>See http://www.remotesensing.org/proj for subscription, unsubscription
>and other information.



----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From vze2hc4d at verizon.net  Sun Aug  5 13:16:57 2001
From: vze2hc4d at verizon.net (Gerald I. Evenden)
Date: Sun, 05 Aug 2001 16:16:57 -0400
Subject: [OSRS-PROJ] da, df
References: <13858AA1A74F30419F319ACB66A9D122CFB6@mercator.topozone.com>
	 <200108042030490350.00E6B734@smtp.zaz.com.br>
	 <3B6C90FB.B64849D4@verizon.net> <200108051454040630.00F0454F@smtp.zaz.com.br>
Message-ID: <3B6DA9B9.4041E909@verizon.net>

I didn't mean to be obscure and was only commenting on the d f/a parameters
and the factor that it appears that the *reason* that they used this novel form
was that fewer bytes of storage were required to save the list of ellipsoid parameters
in this form as compared to the full specification of each f and a.

20-30 years ago, when computer memory was a scarce resource we would go
to great lengths such as this differential method but I would not bother now.

If there is any criticism, it is solely directed against the coders of the  GPS recievers.

"Felipe G. Nievinski" wrote:

> On 04/08/01 at 20:19 Gerald I. Evenden wrote:
> >Remarkable.  The lengths some will go to to save such a trivial number of bytes.
> >
> >I used to do this back in the 60's when memory was dear, but now???
> >
>
> Some days ago there was a doubt in this list about what the da and df parameters mean. I found an explanation (from the U.S. NIMA) and sent it hoping it could help someone.
>
> Gerald, I'm sorry, English is not my mother tongue, and I just did not understand what you meant. :((
>
> Felipe.
>
> >"Felipe G. Nievinski" wrote:
> >
> >> FYI (about the DA and DF parameters)
> >>
> >> The DA and DF are the delta values between the ellipsoid used by WGS-84 and another given ellipsoid:
> >> da = [a(WGS 84 ellipsoid) - a(second ellipsoid)] | a = semi-major (equatorial) axis
> >> df = [f(WGS 84 ellipsoid) - f(second ellisoid)*10000] | f = flattening
> >>
> >> They are commonly used by NAVSTAR-GPS receivers, which shall already know the WGS-84 model, and therefore needs less space to store just the delta values for the others Earth models than the a and f values themselves.
> >> For example, the Finnish ellipsoid can be defined by:
> >> da = -251 m
> >> df = -0.14192702
> >
> >    ...
> >
> >----------------------------------------
> >PROJ.4 Discussion List
> >See http://www.remotesensing.org/proj for subscription, unsubscription
> >and other information.
>
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From cjmce at lsu.edu  Mon Aug  6 06:41:48 2001
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Mon, 6 Aug 2001 08:41:48 -0500
Subject: [OSRS-PROJ] da, df
Message-ID: <OFF5BBE4C1.39AF2209-ON86256AA0.004B3C94@lsu.edu>


Don't blame the GPS manufacturers; just remember recent history (or
ancient, depending on how old you are), and recognize the fact that GPS is
a military system, and GPS has ALWAYS been a military system.  (Lots of
opinions on the future.)

Decades ago (3) when I was a Engineer Company Commander, the first
electronic satellite system was the Army SECOR.  It compactly fit into two
semi-trailer trucks!  All processing was done back at Army Map Service in
D.C.  That was done on 300 bpi 9-track tapes and punch cards.

That was followed in the early 70's with the Navy TRANSIT system, and the
first portable receivers were the Magnavox 1502 units.  These units fit
into a large suitcase (plus automobile batteries, 1 per 8-hour session),
and had a single-board computer.  With some VERY skillful programming, the
1502's could compute geocentric X,Y,Z coordinates from observations and
store differences in the ellipsoid parameters from the TRANSIT system's
ellipsoid.  Any other ellipsoid used would be a difference from that basic
defining ellipsoid.  This was sufficient to get local Datum Latitude and
Longitude with accuracy to support coordinated (no pun intended) artillery
fire and air to ground operations.  The accuracy was good enough for the
blast radius of large ordinance.  That system was later de-classified in
1976, and everybody and his brother picked up on the "defacto standard" of
the Magnavox 1502.

That "standard," or convention, or custom continues today because that's
the way it started.  It may seem silly now, but that's why it exists and
will probably continue to exist.

All of it from way back in the early 1970's.

Prof. Clifford J. Mugnier (cjmce at LSU.edu)
Surveying, Geodesy, & Photogrammetry
LOUISIANA STATE UNIVERSITY
2408 CEBA Building
Baton Rouge, LA  70803
Voice & Facsimile: (225) 578-8536
========================================
SEE: http://www.ASPRS.org/resources.html
         http://www.ce.LSU.edu/~mugnier/
========================================

I didn't mean to be obscure and was only commenting on the d f/a parameters
and the factor that it appears that the *reason* that they used this novel
form
was that fewer bytes of storage were required to save the list of ellipsoid
parameters
in this form as compared to the full specification of each f and a.

20-30 years ago, when computer memory was a scarce resource we would go
to great lengths such as this differential method but I would not bother
now.

If there is any criticism, it is solely directed against the coders of the
GPS recievers.

"Felipe G. Nievinski" wrote:

> On 04/08/01 at 20:19 Gerald I. Evenden wrote:
> >Remarkable.  The lengths some will go to to save such a trivial number
of bytes.
> >
> >I used to do this back in the 60's when memory was dear, but now???
> >
>
> Some days ago there was a doubt in this list about what the da and df
parameters mean. I found an explanation (from the U.S. NIMA) and sent it
hoping it could help someone.
>
> Gerald, I'm sorry, English is not my mother tongue, and I just did not
understand what you meant. :((
>
> Felipe.
>
> >"Felipe G. Nievinski" wrote:
> >
> >> FYI (about the DA and DF parameters)
> >>
> >> The DA and DF are the delta values between the ellipsoid used by
WGS-84 and another given ellipsoid:
> >> da = [a(WGS 84 ellipsoid) - a(second ellipsoid)] | a = semi-major
(equatorial) axis
> >> df = [f(WGS 84 ellipsoid) - f(second ellisoid)*10000] | f = flattening
> >>
> >> They are commonly used by NAVSTAR-GPS receivers, which shall already
know the WGS-84 model, and therefore needs less space to store just the
delta values for the others Earth models than the a and f values
themselves.
> >> For example, the Finnish ellipsoid can be defined by:
> >> da = -251 m
> >> df = -0.14192702
> >
> >    ...
> >
> >----------------------------------------
> >PROJ.4 Discussion List
> >See http://www.remotesensing.org/proj for subscription, unsubscription
> >and other information.
>
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Tue Aug  7 06:40:10 2001
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 07 Aug 2001 09:40:10 -0400
Subject: [OSRS-PROJ] PROJ.4 "proj=latlong ellps=GRS80" functionality?
References: <13858AA1A74F30419F319ACB66A9D12201914E@mercator.topozone.com>
Message-ID: <3B6FEFBA.7BC7FCB9@pobox.com>

Ed McNierney wrote:
> 
> I'm having a hard time understanding how this functionality is supposed
> to work.  I've built PROJ 4.4.3 with no troubles (Windows 2000,
> Microsoft VC++) and everything seems to be working.
> 
> I don't understand the results I'm getting from "proj=latlong
> ellps=GRS80", however.  I'm ultimately trying to use this in MapServer,
> where I have several input data layers in NAD83 decimal degrees that I'm
> trying to project to UTM.
> 
> Here's the simple example I don't understand:
> 
> C:\>proj -v +proj=latlong +ellps=GRS80
> #Lat/long (Geodetic)
> #
> # +proj=latlong +ellps=GRS80
> -71 43
> -1.24   0.75
> 
> That is, my input coordinate (-71, 43) is transformed to (-1.24, 0.75).
> What does this mean?  I would expect the output results to be either
> identical to my input (if the input data is presumed to be in the output
> ellipsoid or if GRS80 or WGS84 is the default) or I would expect them to
> be very slightly different (if the input ellipsoid is something else).

Ed, 

As suggested the coordinates are being returned in radians; however, this
isn't the desired behaviour.  It should just returned them, reformatted,
in DMS or decimal degrees without any change to the value.  I have submitted
a bug in bugzilla on this issues. 

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From ed at topozone.com  Tue Aug  7 07:52:00 2001
From: ed at topozone.com (Ed McNierney)
Date: Tue, 7 Aug 2001 10:52:00 -0400
Subject: [OSRS-PROJ] PROJ.4 "proj=latlong ellps=GRS80" functionality?
Message-ID: <13858AA1A74F30419F319ACB66A9D122CFFB@mercator.topozone.com>

Thanks, Frank.  That's actually the behavior this naive user was
expecting <g>.

	- Ed

-----Original Message-----
From: Frank Warmerdam [mailto:warmerdam at pobox.com]
Sent: Tuesday, August 07, 2001 9:40 AM
To: osrs-proj at remotesensing.org
Subject: Re: [OSRS-PROJ] PROJ.4 "proj=latlong ellps=GRS80"
functionality?


Ed McNierney wrote:
> 
> I'm having a hard time understanding how this functionality is
supposed
> to work.  I've built PROJ 4.4.3 with no troubles (Windows 2000,
> Microsoft VC++) and everything seems to be working.
> 
> I don't understand the results I'm getting from "proj=latlong
> ellps=GRS80", however.  I'm ultimately trying to use this in
MapServer,
> where I have several input data layers in NAD83 decimal degrees that
I'm
> trying to project to UTM.
> 
> Here's the simple example I don't understand:
> 
> C:\>proj -v +proj=latlong +ellps=GRS80
> #Lat/long (Geodetic)
> #
> # +proj=latlong +ellps=GRS80
> -71 43
> -1.24   0.75
> 
> That is, my input coordinate (-71, 43) is transformed to (-1.24,
0.75).
> What does this mean?  I would expect the output results to be either
> identical to my input (if the input data is presumed to be in the
output
> ellipsoid or if GRS80 or WGS84 is the default) or I would expect them
to
> be very slightly different (if the input ellipsoid is something else).

Ed, 

As suggested the coordinates are being returned in radians; however,
this
isn't the desired behaviour.  It should just returned them, reformatted,
in DMS or decimal degrees without any change to the value.  I have
submitted
a bug in bugzilla on this issues. 

Best regards,

---------------------------------------+--------------------------------
------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Marc-Andre.Morin at altaphoto.com  Tue Aug 21 06:03:08 2001
From: Marc-Andre.Morin at altaphoto.com (=?iso-8859-1?Q?Marc-Andr=E9_Morin?=)
Date: Tue, 21 Aug 2001 09:03:08 -0400
Subject: [OSRS-PROJ] Datum conversion
Message-ID: <BOEJIDOFFMAHNDFIDIGAIEHECAAA.Marc-Andre.Morin@altaphoto.com>

Hi,

I try to convert coordinates from NAD83 (UTM z19) to NAD27 (SPCS Western
Maine) and it doesn't work.
These are the steps that I followed:

1- I'have built nad2bin.exe to convert ASCII files in binary format by this
command:
	nmake /f makefile.vc nadshift
2- I'have built proj to get proj.dll:
	nmake /f makefile.vc all
3- Built port to get cpl.lib:
	nmake /f makefile.vc port_dir
4- Built ogr to get ogr.lib:
	nmake /f makefile.vc ogr_dir

After all, I've made a VC project including:
	1. testepsg.cpp (from OGR's source code)
	2. proj.dll
	3. cpl.lib, cpl.h and cplext.h
	4. cpl.lib

No error and no warning is detected.
The result is correct if I try this command:
testepsg -t 32619 32618 440000 4800000

32619: UTM zone 19
32618: UTM zone 18

But an error happens if I try:
testepsg -t 32619 26784 440000 4800000

26784: SPCS Western Maine

Do you have an idea?

Best regards,

Marc-Andre

__________________________________

Marc-André Morin

AltaPhoto Technologies
390, St-Vallier est, bur. 001
Québec, Qc, Canada
G1K 3P6

Tél.: (418) 641-0008 *290
Fax: (418) 641-2146

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Hawkswan at aol.com  Fri Aug 24 10:39:25 2001
From: Hawkswan at aol.com (Hawkswan at aol.com)
Date: Fri, 24 Aug 2001 13:39:25 EDT
Subject: [OSRS-PROJ] Proj.4 in MS Visual C++ MFC
Message-ID: <9e.194727cd.28b7eb4d@aol.com>

Does anyone have or know of someone's experience in using or having proj.4 
source files for integrating proj.4 in MS Visual C++ MFC environment.  I've 
been trying to employ proj.4 in my applications but am having considerable 
trouble getting the proj.4 library to compile and link without multiple 
errors and other incompatibilities with the MS.  I have successfully 
incorporated proj.4 into PC applications using MKS NutCracker (which lays a 
unix environment over MS Windows), but would like to proceed to a pure MS 
implementation.

Jere Swanson
hawkswan at aol.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20010824/6eb7351f/attachment.html>

From ed at topozone.com  Fri Aug 24 10:57:01 2001
From: ed at topozone.com (Ed McNierney)
Date: Fri, 24 Aug 2001 13:57:01 -0400
Subject: [OSRS-PROJ] Proj.4 in MS Visual C++ MFC
Message-ID: <13858AA1A74F30419F319ACB66A9D122D0A7@mercator.topozone.com>

Jere -
 
PROJ 4.4.3 (the version I'm using) includes a Visual C++ makefile in the
src directory - makefile.vc.  You can build under MS Visual C++ by just
going to that directory and running NMAKE:
 
cd src
nmake /f makefile.vc
 
It worked flawlessly for me the first time with no modification or
tweaking at all.
 
    - Ed



Ed McNierney 
Chief Mapmaker 
TopoZone.com 
ed at topozone.com 
(978) 251-4242 

-----Original Message-----
From: Hawkswan at aol.com [mailto:Hawkswan at aol.com]
Sent: Friday, August 24, 2001 1:39 PM
To: osrs-proj at remotesensing.org
Subject: [OSRS-PROJ] Proj.4 in MS Visual C++ MFC


Does anyone have or know of someone's experience in using or having
proj.4 
source files for integrating proj.4 in MS Visual C++ MFC environment.
I've 
been trying to employ proj.4 in my applications but am having
considerable 
trouble getting the proj.4 library to compile and link without multiple 
errors and other incompatibilities with the MS.  I have successfully 
incorporated proj.4 into PC applications using MKS NutCracker (which
lays a 
unix environment over MS Windows), but would like to proceed to a pure
MS 
implementation. 

Jere Swanson 
hawkswan at aol.com 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From willem at businessware.cjb.net  Fri Aug 24 11:06:40 2001
From: willem at businessware.cjb.net (Willem Fourie)
Date: Fri, 24 Aug 2001 20:06:40 +0200
Subject: [OSRS-PROJ] Proj.4 in MS Visual C++ MFC
References: <9e.194727cd.28b7eb4d@aol.com>
Message-ID: <006301c12cc7$94ff2df0$0200a8c0@willem>

Jere

Am currently using Proj.4.3.3 in an MFC DLL as well as an MFC OCX. It is generated as a static library and then linked into the DLL or OCX.  It compiles with some warnings but zero errors and links with zero errors

Contact me and perhaps I can send you my entire PROJ4 .dsw, .dsp and source files.

Willem Fourie
  ----- Original Message ----- 
  From: Hawkswan at aol.com 
  To: osrs-proj at remotesensing.org 
  Sent: Friday, August 24, 2001 7:39 PM
  Subject: [OSRS-PROJ] Proj.4 in MS Visual C++ MFC


  Does anyone have or know of someone's experience in using or having proj.4 
  source files for integrating proj.4 in MS Visual C++ MFC environment.  I've 
  been trying to employ proj.4 in my applications but am having considerable 
  trouble getting the proj.4 library to compile and link without multiple 
  errors and other incompatibilities with the MS.  I have successfully 
  incorporated proj.4 into PC applications using MKS NutCracker (which lays a 
  unix environment over MS Windows), but would like to proceed to a pure MS 
  implementation. 

  Jere Swanson 
  hawkswan at aol.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20010824/c615b616/attachment.html>

From EVerlynde at isagri.fr  Mon Aug 27 23:42:55 2001
From: EVerlynde at isagri.fr (Emmanuel Verlynde)
Date: Tue, 28 Aug 2001 08:42:55 +0200
Subject: =?ISO-8859-1?Q?R=E9p.=20:=20[OSRS-PROJ]=20Proj.4=20in=20MS=20Vis?=
 =?ISO-8859-1?Q?ual=20C++=20MFC?=
Message-ID: <sb8b59a4.054@isagri.fr>

Personnaly i have integrated proj4 into an windows application without any problems. I use c++builder to compile and link proj4 into a ".lib" incorporated into a .exe and a lot of warning messages appears but are not really important. Also the definition HUGE_VAL is not useable like the unix version... if anyone can find a sloution for this problem... send me the answer. thanks.

(think to build library with "byte alignement" or with same alignement app/lib...)

Mr VERLYNDE Emmanuel
Analyste-Programmeur
ISAGRI (Service Productions végétales)
FRANCE - Avenue des censives 60000 BEAUVAIS
everlynde at yahoo.fr  -  (everlynde at isagri.fr)

>>> Hawkswan at aol.com vendredi 24 août 2001 19:39:25 >>>
Does anyone have or know of someone's experience in using or having proj.4 
source files for integrating proj.4 in MS Visual C++ MFC environment.  I've 
been trying to employ proj.4 in my applications but am having considerable 
trouble getting the proj.4 library to compile and link without multiple 
errors and other incompatibilities with the MS.  I have successfully 
incorporated proj.4 into PC applications using MKS NutCracker (which lays a 
unix environment over MS Windows), but would like to proceed to a pure MS 
implementation.

Jere Swanson
hawkswan at aol.com

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Tue Aug 28 06:30:42 2001
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 28 Aug 2001 09:30:42 -0400
Subject: =?ISO-8859-1?Q?R=E9p=2E?= : [OSRS-PROJ] Proj.4 in MS Visual C++ MFC
References: <sb8b59a4.054@isagri.fr>
Message-ID: <3B8B9D02.4080803@pobox.com>

Emmanuel Verlynde wrote:
> Personnaly i have integrated proj4 into an windows application without any problems. I use c++builder to compile and link proj4 into a ".lib" incorporated into a .exe and a lot of warning messages appears but are not really important. Also the definition HUGE_VAL is not useable like the unix version... if anyone can find a sloution for this problem... send me the answer. thanks.

Emmanuel,

I don't think I run into problems with HUGE_VAL on windows.  What problem are
you running into?  I guess it isn't defined in the C++Builder include files?
I imagine you can just #define it to a large/unlikely value in proj_api.h if
it isn't already defined.  The important thing is that the value won't
occur in normal use, and that the same value is used in the library and the
calling application.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From EVerlynde at isagri.fr  Tue Aug 28 06:53:47 2001
From: EVerlynde at isagri.fr (Emmanuel Verlynde)
Date: Tue, 28 Aug 2001 15:53:47 +0200
Subject: =?ISO-8859-1?Q?Re:=20R=E9p.=20:=20[OSRS-PROJ]=20Proj.4=20in=20MS?=
 =?ISO-8859-1?Q?=20Visual=20C++=20MFC?=
Message-ID: <sb8bbe9a.073@isagri.fr>

>>I don't think I run into problems with HUGE_VAL on windows.  What 
>>problem are you running into?  I guess it isn't defined in the C++Builder 
>>include files?
>>I imagine you can just #define it to a large/unlikely value in proj_api.h if
>>it isn't already defined.  The important thing is that the value won't
>>occur in normal use, and that the same value is used in the library and the
>>calling application.

it's already defined in include files -> #define HUGE_VAL _huge_dble in math.h ... but any use of this definition don't work

   data.u = X * DEG_TO_RAD;
   data.v = Y * DEG_TO_RAD;
   data = pj_fwd (data, ProjInitRef);
   //if (data.u != HUGE_VAL) <- don't work...

   if (data.u > 1.0e-100 || data.u < -1.0e-100)    //<-instead of huge_val
      {
      //...


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


