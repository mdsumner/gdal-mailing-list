From roger.oberholtzer at gmail.com  Tue Nov  1 04:33:15 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Tue, 1 Nov 2016 12:33:15 +0100
Subject: [Proj] Amersfoort / RD New
Message-ID: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>

I am trying to get the Amersfoort / RD New projection working with
proj4. The users (a road authority in the Netherlands) claim to use
this definition with ESRI:

PROJCS["RD_New",GEOGCS["GCS_Amersfoort",DATUM["D_Amersfoort",
SPHEROID["Bessel_1841",6377397.155,299.1528128]],
PRIMEM["Greenwich",0.0],
UNIT["Degree",0.0174532925199433]],
PROJECTION["Double_Stereographic"],
PARAMETER["False_Easting",155000.0],
PARAMETER["False_Northing",463000.0],
PARAMETER["Central_Meridian",5.38763888888889],
PARAMETER["Scale_Factor",0.9999079],
PARAMETER["Latitude_Of_Origin",52.15616055555555],UNIT["Meter",1.0]]

I have started with the definition at
http://spatialreference.org/ref/epsg/amersfoort-rd-new/proj4/. The
projections from that are 100 meters from where they should be. I have
seen claims that the Spatial Reference definition is incorrect, and
that a better one is (it adds the +towgs84):

“+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
+towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.343987817378283,-1.87740163998045,4.0725
+units=m +no_defs”

Still no joy. My source values are WGS84 lat/long from a GPS receiver.

Anyone have the correct proj4 definition for this?


-- 
Roger Oberholtzer


From sebastic at xs4all.nl  Tue Nov  1 04:51:48 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 01 Nov 2016 12:51:48 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
Message-ID: <c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>

On 2016-11-01 12:33, Roger Oberholtzer wrote:
> I am trying to get the Amersfoort / RD New projection working with
> proj4. The users (a road authority in the Netherlands) claim to use
> this definition with ESRI:
> 
> PROJCS["RD_New",GEOGCS["GCS_Amersfoort",DATUM["D_Amersfoort",
> SPHEROID["Bessel_1841",6377397.155,299.1528128]],
> PRIMEM["Greenwich",0.0],
> UNIT["Degree",0.0174532925199433]],
> PROJECTION["Double_Stereographic"],
> PARAMETER["False_Easting",155000.0],
> PARAMETER["False_Northing",463000.0],
> PARAMETER["Central_Meridian",5.38763888888889],
> PARAMETER["Scale_Factor",0.9999079],
> PARAMETER["Latitude_Of_Origin",52.15616055555555],UNIT["Meter",1.0]]
> 
> I have started with the definition at
> http://spatialreference.org/ref/epsg/amersfoort-rd-new/proj4/. The
> projections from that are 100 meters from where they should be. I have
> seen claims that the Spatial Reference definition is incorrect, and
> that a better one is (it adds the +towgs84):
> 
> “+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
> +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
> +towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.343987817378283,-1.87740163998045,4.0725
> +units=m +no_defs”
> 
> Still no joy. My source values are WGS84 lat/long from a GPS receiver.
> 
> Anyone have the correct proj4 definition for this?

The +towgs84 parameters as published by the Dutch Kadaster are:

  +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.877402,4.0725

These are used in the epsg file from PROJ.4 4.9.3, see:

  https://github.com/osgeonl/rdprojectie/blob/master/doc/ntv2grid.md

Alternatively you can use the RDNAP grid shift files also published by 
Kadaster. If you're on Debian/Ubuntu you can install the proj-rdnap 
package (available in jessie-backports/non-free and Ubuntu wily and 
later), otherwise you can find the download link in the PROJ.4 
documentation at:

  http://proj4.org/grids.html#netherlands
  http://www.kadaster.nl/transformatie-van-coordinaten

Use the link in the "Benadering transformatieprocedure" section to go to 
the request package and fill in the form. You'll be sent a download link 
by email.

We've recently had a mini-seminar about the correct usage of RD in open 
source software, and started collecting reference information resulting 
from that in a git repository:

  https://github.com/osgeonl/rdprojectie

You'll find more information in the linked posts on the Dutch 
mailinglist.

Kind Regards,

Bas


From baas at speerit.nl  Tue Nov  1 04:58:50 2016
From: baas at speerit.nl (Jelmer Baas)
Date: Tue, 1 Nov 2016 11:58:50 +0000
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
Message-ID: <BC9747AD8551184D9B674A8310FE337B317D6E01@mailserver>

As an adition: 

If you're trying to match the MapInfo (12.5 and earlier)  projection system, use this:
+proj=stere +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +no_defs

This is something I've been struggling with for a long time, and with help from a dev from within MapInfo, finally managed to find out. 
Would appreciate it if someone could make a note of this, somewhere :)

Regards,
Jelmer Baas
Speer IT B.V.


-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Bas Couwenberg
Sent: dinsdag 1 november 2016 12:52
To: proj at lists.maptools.org
Subject: Re: [Proj] Amersfoort / RD New

On 2016-11-01 12:33, Roger Oberholtzer wrote:
> I am trying to get the Amersfoort / RD New projection working with
> proj4. The users (a road authority in the Netherlands) claim to use
> this definition with ESRI:
> 
> PROJCS["RD_New",GEOGCS["GCS_Amersfoort",DATUM["D_Amersfoort",
> SPHEROID["Bessel_1841",6377397.155,299.1528128]],
> PRIMEM["Greenwich",0.0],
> UNIT["Degree",0.0174532925199433]],
> PROJECTION["Double_Stereographic"],
> PARAMETER["False_Easting",155000.0],
> PARAMETER["False_Northing",463000.0],
> PARAMETER["Central_Meridian",5.38763888888889],
> PARAMETER["Scale_Factor",0.9999079],
> PARAMETER["Latitude_Of_Origin",52.15616055555555],UNIT["Meter",1.0]]
> 
> I have started with the definition at
> http://spatialreference.org/ref/epsg/amersfoort-rd-new/proj4/. The
> projections from that are 100 meters from where they should be. I have
> seen claims that the Spatial Reference definition is incorrect, and
> that a better one is (it adds the +towgs84):
> 
> “+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
> +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
> +towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.343987817378283,-1.87740163998045,4.0725
> +units=m +no_defs”
> 
> Still no joy. My source values are WGS84 lat/long from a GPS receiver.
> 
> Anyone have the correct proj4 definition for this?

The +towgs84 parameters as published by the Dutch Kadaster are:

  +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.877402,4.0725

These are used in the epsg file from PROJ.4 4.9.3, see:

  https://github.com/osgeonl/rdprojectie/blob/master/doc/ntv2grid.md

Alternatively you can use the RDNAP grid shift files also published by 
Kadaster. If you're on Debian/Ubuntu you can install the proj-rdnap 
package (available in jessie-backports/non-free and Ubuntu wily and 
later), otherwise you can find the download link in the PROJ.4 
documentation at:

  http://proj4.org/grids.html#netherlands
  http://www.kadaster.nl/transformatie-van-coordinaten

Use the link in the "Benadering transformatieprocedure" section to go to 
the request package and fill in the form. You'll be sent a download link 
by email.

We've recently had a mini-seminar about the correct usage of RD in open 
source software, and started collecting reference information resulting 
from that in a git repository:

  https://github.com/osgeonl/rdprojectie

You'll find more information in the linked posts on the Dutch 
mailinglist.

Kind Regards,

Bas
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

From roger.oberholtzer at gmail.com  Tue Nov  1 07:05:58 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Tue, 1 Nov 2016 15:05:58 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
Message-ID: <CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>

I downloaded the grid shift file from
http://www.kadaster.nl/transformatie-van-coordinaten

I am not using it yet. I took one of the sample points from the Use doc
that came with it to see what I got compared to the expected. For example:

Zuid-Limburg:
        Ref:    Latitude:   50.7925849160 Longitude:    5.7737955480
Altitude:    245.948
        Ref:    Easting:       182260.450 Northing:       311480.670
Altitude:    200.000
        Proj4:  Easting:       182225.909 Northing:       311388.163
Altitude:    245.948    98.746 meters from Ref

The reference values are ETRS89. But I cannot think that accounts to 100
meters of difference. My proj spec is:

     +proj=sterea
     +lat_0=52.15616055555555
     +lon_0=5.38763888888889
     +k=0.9999079
     +x_0=155000
     +y_0=463000
     +ellps=bessel

+towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.343987817378283,-1.87740163998045,4.0725
     +units=m
     +no_defs

Doing this via the C API as I do for many other projections. These are
passed to pj_init_plus.

Would the grid shift make such a large correction?

On Tue, Nov 1, 2016 at 12:51 PM, Bas Couwenberg <sebastic at xs4all.nl> wrote:

> On 2016-11-01 12:33, Roger Oberholtzer wrote:
> > I am trying to get the Amersfoort / RD New projection working with
> > proj4. The users (a road authority in the Netherlands) claim to use
> > this definition with ESRI:
> >
> > PROJCS["RD_New",GEOGCS["GCS_Amersfoort",DATUM["D_Amersfoort",
> > SPHEROID["Bessel_1841",6377397.155,299.1528128]],
> > PRIMEM["Greenwich",0.0],
> > UNIT["Degree",0.0174532925199433]],
> > PROJECTION["Double_Stereographic"],
> > PARAMETER["False_Easting",155000.0],
> > PARAMETER["False_Northing",463000.0],
> > PARAMETER["Central_Meridian",5.38763888888889],
> > PARAMETER["Scale_Factor",0.9999079],
> > PARAMETER["Latitude_Of_Origin",52.15616055555555],UNIT["Meter",1.0]]
> >
> > I have started with the definition at
> > http://spatialreference.org/ref/epsg/amersfoort-rd-new/proj4/. The
> > projections from that are 100 meters from where they should be. I have
> > seen claims that the Spatial Reference definition is incorrect, and
> > that a better one is (it adds the +towgs84):
> >
> > “+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
> > +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
> > +towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.
> 343987817378283,-1.87740163998045,4.0725
> > +units=m +no_defs”
> >
> > Still no joy. My source values are WGS84 lat/long from a GPS receiver.
> >
> > Anyone have the correct proj4 definition for this?
>
> The +towgs84 parameters as published by the Dutch Kadaster are:
>
>   +towgs84=565.4171,50.3319,465.5524,-0.398957,0.343988,-1.877402,4.0725
>
> These are used in the epsg file from PROJ.4 4.9.3, see:
>
>   https://github.com/osgeonl/rdprojectie/blob/master/doc/ntv2grid.md
>
> Alternatively you can use the RDNAP grid shift files also published by
> Kadaster. If you're on Debian/Ubuntu you can install the proj-rdnap
> package (available in jessie-backports/non-free and Ubuntu wily and
> later), otherwise you can find the download link in the PROJ.4
> documentation at:
>
>   http://proj4.org/grids.html#netherlands
>   http://www.kadaster.nl/transformatie-van-coordinaten
>
> Use the link in the "Benadering transformatieprocedure" section to go to
> the request package and fill in the form. You'll be sent a download link
> by email.
>
> We've recently had a mini-seminar about the correct usage of RD in open
> source software, and started collecting reference information resulting
> from that in a git repository:
>
>   https://github.com/osgeonl/rdprojectie
>
> You'll find more information in the linked posts on the Dutch
> mailinglist.
>
> Kind Regards,
>
> Bas
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj




-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161101/4f264071/attachment.html>

From sebastic at xs4all.nl  Tue Nov  1 07:28:50 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 01 Nov 2016 15:28:50 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
	<CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
Message-ID: <e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>

On 2016-11-01 15:05, Roger Oberholtzer wrote:
> I downloaded the grid shift file from
> http://www.kadaster.nl/transformatie-van-coordinaten
> 
> I am not using it yet. I took one of the sample points from the Use doc
> that came with it to see what I got compared to the expected. For 
> example:
> 
> Zuid-Limburg:
> Ref:   Latitude: 50.7925849160 Longitude: 5.7737955480 Altitude: 
> 245.948
> Ref:   Easting:     182260.450 Northing:    311480.670 Altitude: 
> 200.000
> Proj4: Easting:     182225.909 Northing:    311388.163 Altitude: 
> 245.948
> 98.746 meters from Ref
> 
> The reference values are ETRS89. But I cannot think that accounts to 
> 100
> meters of difference. My proj spec is:
> 
>      +proj=sterea
>      +lat_0=52.15616055555555
>      +lon_0=5.38763888888889
>      +k=0.9999079
>      +x_0=155000
>      +y_0=463000
>      +ellps=bessel
> 
> +towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.343987817378283,-1.87740163998045,4.0725
>      +units=m
>      +no_defs
> 
> Doing this via the C API as I do for many other projections. These are
> passed to pj_init_plus.
> 
> Would the grid shift make such a large correction?

 From the proj-rdnap test script (using PROJ.4 4.9.3):

  Test:   05 Zuid-Limburg
  Exec:   cs2cs -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
  Input:  50.792584908 5.773795547 174.9478
  Output: 182260.4500     311480.6701 129.0000
  Expect: 182260.4500     311480.6700 129.000
  Test OK: From ETRS89 to RD/NAP - 05 Zuid-Limburg (Not identical, but 
within margin)

The above uses the test values from "Use of RDTRANS2008 and 
NAPTRANS2008.pdf" included in the NTv2.zip, your values are different, 
not sure where you got those.

The rdnap configuration for the above test contains:

  # RDNAP with NTv2 and VDatum
  <rdnap> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel 
+nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m +no_defs 
<>

Try using the grid shift files for your test, it should be more accurate 
(at ground level) than using +towgs84 values.

Kind Regards,

Bas


From roger.oberholtzer at gmail.com  Tue Nov  1 07:54:05 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Tue, 1 Nov 2016 15:54:05 +0100
Subject: [Proj] Grid shift files.
Message-ID: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>

I am trying to use a grid shift file via the C API.

It works for me in one situation, but not another:

The working one (OSTN02):

                +proj=tmerc
                +lat_0=49
                +lon_0=-2
                +k=0.9996012717
                +x_0=400000
                +y_0=-100000
                +ellps=airy
                +nadgrids=gb.gsb
                +units=m
                +no_defs

The one that is not working (RD New):

                +proj=sterea
                +lat_0=52.15616055555555
                +lon_0=5.38763888888889
                +k=0.9999079
                +x_0=155000
                +y_0=463000
                +ellps=bessel
                +nadgrids=rdtrans2008.gsb
                +units=m
                +no_defs

The grid shift files are in the same directory. The strange thing is that
when I trace the program execution (strace on Linux), I see that the OSTN02
file gb.gsb is opened and read. However, the one that is not working (RD
New) does not even try to open the rdtrans2008.gsb file. So it is not a
matter of the format of the file. It is not even being accessed. (I may
later have a file format issue. I hope not.)

I know it's old, but this is with 4.8.0. I cannot think the mechanics of
opening the file are different. Could it be related to another parameter I
am using in RD New? +proj or +ellps?

-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161101/43227b3b/attachment.html>

From sebastic at xs4all.nl  Tue Nov  1 08:06:24 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 01 Nov 2016 16:06:24 +0100
Subject: [Proj] Grid shift files.
In-Reply-To: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>
References: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>
Message-ID: <7eb491f3d309983504bf929a4590a0d0@xs4all.nl>

On 2016-11-01 15:54, Roger Oberholtzer wrote:
> I am trying to use a grid shift file via the C API.
> 
> It works for me in one situation, but not another:
> 
> The working one (OSTN02):
> 
> [...]
> 
> The one that is not working (RD New):
> 
> [...]
> 
> The grid shift files are in the same directory. The strange thing is 
> that
> when I trace the program execution (strace on Linux), I see that the 
> OSTN02
> file gb.gsb is opened and read. However, the one that is not working 
> (RD
> New) does not even try to open the rdtrans2008.gsb file. So it is not a
> matter of the format of the file. It is not even being accessed. (I may
> later have a file format issue. I hope not.)
> 
> I know it's old, but this is with 4.8.0. I cannot think the mechanics 
> of
> opening the file are different. Could it be related to another 
> parameter I

Sounds like you're using PROJ.4 4.9.2, and hitting this issue:

  http://lists.maptools.org/pipermail/proj/2016-February/007327.html

Which has been fixed in 4.9.3 with:

  https://github.com/OSGeo/proj.4/pull/349

Kind Regards,

Bas


From roger.oberholtzer at gmail.com  Wed Nov  2 01:11:30 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 2 Nov 2016 09:11:30 +0100
Subject: [Proj] Grid shift files.
In-Reply-To: <7eb491f3d309983504bf929a4590a0d0@xs4all.nl>
References: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>
	<7eb491f3d309983504bf929a4590a0d0@xs4all.nl>
Message-ID: <CANkOqwM6AQBUAJk=jzGM_L6nj7fgnNCFbz8vFDiBXjx23hQTCQ@mail.gmail.com>

On Tue, Nov 1, 2016 at 4:06 PM, Bas Couwenberg <sebastic at xs4all.nl> wrote:

>
>
> Which has been fixed in 4.9.3 with:
>
>   https://github.com/OSGeo/proj.4/pull/349
>


I have updated to 4.9.3 as a test. However, I am still not seeing the grid
file even being accessed. It has to at least try to open it, right? I don't
even see it try and fail. It simply does not try.


-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161102/3ce51906/attachment.html>

From roger.oberholtzer at gmail.com  Wed Nov  2 01:36:49 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 2 Nov 2016 09:36:49 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
	<CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
	<e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>
Message-ID: <CANkOqwOZ9DQ0qjmtKo8Q5N5yO0t5BJruwQ62TgAB-Y00fjAtGA@mail.gmail.com>

I have updated to 4.9.3. My rdnap file is identical to yours:

# RDNAP with NTv2 and VDatum
<rdnap> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
+k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
+nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m +no_defs
<>

If I run this:
cs2cs  -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f

And provide these locations:

50.792584908 5.773795547 174.9478

I get this:

182225.9086     311388.1617 128.9976

Not the values you listed:

182260.4500     311480.6701 129.0000


I'm confused.



On Tue, Nov 1, 2016 at 3:28 PM, Bas Couwenberg <sebastic at xs4all.nl> wrote:

> On 2016-11-01 15:05, Roger Oberholtzer wrote:
> > I downloaded the grid shift file from
> > http://www.kadaster.nl/transformatie-van-coordinaten
> >
> > I am not using it yet. I took one of the sample points from the Use doc
> > that came with it to see what I got compared to the expected. For
> > example:
> >
> > Zuid-Limburg:
> > Ref:   Latitude: 50.7925849160 Longitude: 5.7737955480 Altitude:
> > 245.948
> > Ref:   Easting:     182260.450 Northing:    311480.670 Altitude:
> > 200.000
> > Proj4: Easting:     182225.909 Northing:    311388.163 Altitude:
> > 245.948
> > 98.746 meters from Ref
> >
> > The reference values are ETRS89. But I cannot think that accounts to
> > 100
> > meters of difference. My proj spec is:
> >
> >      +proj=sterea
> >      +lat_0=52.15616055555555
> >      +lon_0=5.38763888888889
> >      +k=0.9999079
> >      +x_0=155000
> >      +y_0=463000
> >      +ellps=bessel
> >
> > +towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.
> 343987817378283,-1.87740163998045,4.0725
> >      +units=m
> >      +no_defs
> >
> > Doing this via the C API as I do for many other projections. These are
> > passed to pj_init_plus.
> >
> > Would the grid shift make such a large correction?
>
>  From the proj-rdnap test script (using PROJ.4 4.9.3):
>
>   Test:   05 Zuid-Limburg
>   Exec:   cs2cs -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
>   Input:  50.792584908 5.773795547 174.9478
>   Output: 182260.4500     311480.6701 129.0000
>   Expect: 182260.4500     311480.6700 129.000
>   Test OK: From ETRS89 to RD/NAP - 05 Zuid-Limburg (Not identical, but
> within margin)
>
> The above uses the test values from "Use of RDTRANS2008 and
> NAPTRANS2008.pdf" included in the NTv2.zip, your values are different,
> not sure where you got those.
>
> The rdnap configuration for the above test contains:
>
>   # RDNAP with NTv2 and VDatum
>   <rdnap> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
> +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
> +nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m +no_defs
> <>
>
> Try using the grid shift files for your test, it should be more accurate
> (at ground level) than using +towgs84 values.
>
> Kind Regards,
>
> Bas
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161102/b1ff3d0f/attachment.html>

From sebastic at xs4all.nl  Wed Nov  2 01:41:48 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Wed, 02 Nov 2016 09:41:48 +0100
Subject: [Proj] Grid shift files.
In-Reply-To: <CANkOqwM6AQBUAJk=jzGM_L6nj7fgnNCFbz8vFDiBXjx23hQTCQ@mail.gmail.com>
References: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>
	<7eb491f3d309983504bf929a4590a0d0@xs4all.nl>
	<CANkOqwM6AQBUAJk=jzGM_L6nj7fgnNCFbz8vFDiBXjx23hQTCQ@mail.gmail.com>
Message-ID: <865098d4739eebe4875e3e8b6d622a09@xs4all.nl>

On 2016-11-02 09:11, Roger Oberholtzer wrote:
> On Tue, Nov 1, 2016 at 4:06 PM, Bas Couwenberg <sebastic at xs4all.nl> 
> wrote:
>> Which has been fixed in 4.9.3 with:
>> 
>>   https://github.com/OSGeo/proj.4/pull/349
> 
> I have updated to 4.9.3 as a test. However, I am still not seeing the 
> grid
> file even being accessed. It has to at least try to open it, right? I 
> don't
> even see it try and fail. It simply does not try.

Yes, if you enable PROJ.4 debug output (using the PROJ_DEBUG=3 
environment variable) your should see pj_open_lib(rdtrans2008.gsb) and 
pj_open_lib(naptrans2008.gtx).

 From the debug output I linked in the earlier message out this issue:

  Test:   05 Zuid-Limburg
  Exec:   cs2cs -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
  Input:  50.792584908 5.773795547 174.9478
  STDERR: pj_open_lib(epsg): call fopen(./epsg) - succeeded

  pj_open_lib(rdnap): call fopen(./rdnap) - succeeded

  pj_open_lib(rdtrans2008.gsb): call fopen(./rdtrans2008.gsb) - succeeded

  NTv2 NL_ALL   63x65: LL=(2.5,50.5) UR=(7.66666667,55.8333333)

  NTv2 NL_LAND  561x421: LL=(3,50.5) UR=(7.66666667,54)

  NTv2 - loading grid NL_LAND
  pj_open_lib(rdtrans2008.gsb): call fopen(./rdtrans2008.gsb) - succeeded

  pj_apply_gridshift(): used NL_LAND
  pj_open_lib(naptrans2008.gtx): call fopen(./naptrans2008.gtx) - 
succeeded

  GTX 311x641: LL=(2.5,50.5) UR=(7.66666667,55.8333333)
  pj_open_lib(naptrans2008.gtx): call fopen(./naptrans2008.gtx) - 
succeeded

  pj_apply_gridshift(): used GTX Vertical Grid Shift File
  Output: 182260.4500	311480.6701 129.0000
  Expect: 182260.4500	311480.6700 129.000
  Test OK: From ETRS89 to RD/NAP - 05 Zuid-Limburg (Not identical, but 
within margin)

Kind Regards,

Bas


From sebastic at xs4all.nl  Wed Nov  2 01:48:25 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Wed, 02 Nov 2016 09:48:25 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <CANkOqwOZ9DQ0qjmtKo8Q5N5yO0t5BJruwQ62TgAB-Y00fjAtGA@mail.gmail.com>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
	<CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
	<e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>
	<CANkOqwOZ9DQ0qjmtKo8Q5N5yO0t5BJruwQ62TgAB-Y00fjAtGA@mail.gmail.com>
Message-ID: <5903525cc67caac5b60229a197575038@xs4all.nl>

On 2016-11-02 09:36, Roger Oberholtzer wrote:
> I have updated to 4.9.3. My rdnap file is identical to yours:
> 
> # RDNAP with NTv2 and VDatum
> <rdnap> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
> +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
> +nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m 
> +no_defs
> <>
> 
> If I run this:
> cs2cs  -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
> 
> And provide these locations:
> 
> 50.792584908 5.773795547 174.9478
> 
> I get this:
> 
> 182225.9086     311388.1617 128.9976
> 
> Not the values you listed:
> 
> 182260.4500     311480.6701 129.0000
> 
> 
> I'm confused.

Does your epsg file use +towgs84 values for EPSG:4258?

  # ETRS89
  <4258> +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs  <>

I guess you're on Windows, which uses a different libc that may also 
explain the divergence.

> On Tue, Nov 1, 2016 at 3:28 PM, Bas Couwenberg <sebastic at xs4all.nl> 
> wrote:
> 
>> On 2016-11-01 15:05, Roger Oberholtzer wrote:
>> > I downloaded the grid shift file from
>> > http://www.kadaster.nl/transformatie-van-coordinaten
>> >
>> > I am not using it yet. I took one of the sample points from the Use doc
>> > that came with it to see what I got compared to the expected. For
>> > example:
>> >
>> > Zuid-Limburg:
>> > Ref:   Latitude: 50.7925849160 Longitude: 5.7737955480 Altitude:
>> > 245.948
>> > Ref:   Easting:     182260.450 Northing:    311480.670 Altitude:
>> > 200.000
>> > Proj4: Easting:     182225.909 Northing:    311388.163 Altitude:
>> > 245.948
>> > 98.746 meters from Ref
>> >
>> > The reference values are ETRS89. But I cannot think that accounts to
>> > 100
>> > meters of difference. My proj spec is:
>> >
>> >      +proj=sterea
>> >      +lat_0=52.15616055555555
>> >      +lon_0=5.38763888888889
>> >      +k=0.9999079
>> >      +x_0=155000
>> >      +y_0=463000
>> >      +ellps=bessel
>> >
>> > +towgs84=565.4174,50.3319,465.5542,-0.398957388243134,0.
>> 343987817378283,-1.87740163998045,4.0725
>> >      +units=m
>> >      +no_defs
>> >
>> > Doing this via the C API as I do for many other projections. These are
>> > passed to pj_init_plus.
>> >
>> > Would the grid shift make such a large correction?
>> 
>>  From the proj-rdnap test script (using PROJ.4 4.9.3):
>> 
>>   Test:   05 Zuid-Limburg
>>   Exec:   cs2cs -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
>>   Input:  50.792584908 5.773795547 174.9478
>>   Output: 182260.4500     311480.6701 129.0000
>>   Expect: 182260.4500     311480.6700 129.000
>>   Test OK: From ETRS89 to RD/NAP - 05 Zuid-Limburg (Not identical, but
>> within margin)
>> 
>> The above uses the test values from "Use of RDTRANS2008 and
>> NAPTRANS2008.pdf" included in the NTv2.zip, your values are different,
>> not sure where you got those.
>> 
>> The rdnap configuration for the above test contains:
>> 
>>   # RDNAP with NTv2 and VDatum
>>   <rdnap> +proj=sterea +lat_0=52.15616055555555 
>> +lon_0=5.38763888888889
>> +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
>> +nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m 
>> +no_defs
>> <>
>> 
>> Try using the grid shift files for your test, it should be more 
>> accurate
>> (at ground level) than using +towgs84 values.
>> 
>> Kind Regards,
>> 
>> Bas


From roger.oberholtzer at gmail.com  Wed Nov  2 03:06:24 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 2 Nov 2016 11:06:24 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <5903525cc67caac5b60229a197575038@xs4all.nl>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
	<CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
	<e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>
	<CANkOqwOZ9DQ0qjmtKo8Q5N5yO0t5BJruwQ62TgAB-Y00fjAtGA@mail.gmail.com>
	<5903525cc67caac5b60229a197575038@xs4all.nl>
Message-ID: <CANkOqwPFop0XPTrrOAiiMONVCNwac1fOtVVBjznJ9i+tg6WV0g@mail.gmail.com>

On Wed, Nov 2, 2016 at 9:48 AM, Bas Couwenberg <sebastic at xs4all.nl> wrote:

> On 2016-11-02 09:36, Roger Oberholtzer wrote:
> > I have updated to 4.9.3. My rdnap file is identical to yours:
> >
> > # RDNAP with NTv2 and VDatum
> > <rdnap> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
> > +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
> > +nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m
> > +no_defs
> > <>
> >
> > If I run this:
> > cs2cs  -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
> >
> > And provide these locations:
> >
> > 50.792584908 5.773795547 174.9478
> >
> > I get this:
> >
> > 182225.9086     311388.1617 128.9976
> >
> > Not the values you listed:
> >
> > 182260.4500     311480.6701 129.0000
> >
> >
> > I'm confused.
>
> Does your epsg file use +towgs84 values for EPSG:4258?
>
>   # ETRS89
>   <4258> +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs  <>
>
> I guess you're on Windows, which uses a different libc that may also
> explain the divergence.
>

I'm on Linux. I see that when I updated my libproj, a new epsg file was
installed. I don't usually use that file. I did here because I wanted to
duplicate your exact command. 4258 is defined as:

<4258> +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs  <>

I'm curious why you use both the definition in the epsg file, as well as
the one in rdnap. Why not everything in the rdnap file? What is your
definition for 4258?

If I change my command to:

cs2cs  -r  +to +init=rdnap:rdnap

I see that the grid shift file is now read. But my computed values are
still:

182225.9086     311388.1617 128.9976




-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161102/984929ac/attachment.html>

From roger.oberholtzer at gmail.com  Wed Nov  2 03:31:43 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 2 Nov 2016 11:31:43 +0100
Subject: [Proj] Grid shift files.
In-Reply-To: <865098d4739eebe4875e3e8b6d622a09@xs4all.nl>
References: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>
	<7eb491f3d309983504bf929a4590a0d0@xs4all.nl>
	<CANkOqwM6AQBUAJk=jzGM_L6nj7fgnNCFbz8vFDiBXjx23hQTCQ@mail.gmail.com>
	<865098d4739eebe4875e3e8b6d622a09@xs4all.nl>
Message-ID: <CANkOqwMS_Mm-aChSN9V+GR-baQ8osQi+7r3z5mvk7q8aMG6Vsw@mail.gmail.com>

On Wed, Nov 2, 2016 at 9:41 AM, Bas Couwenberg <sebastic at xs4all.nl> wrote:

> On 2016-11-02 09:11, Roger Oberholtzer wrote:
> > On Tue, Nov 1, 2016 at 4:06 PM, Bas Couwenberg <sebastic at xs4all.nl>
> > wrote:
> >> Which has been fixed in 4.9.3 with:
> >>
> >>   https://github.com/OSGeo/proj.4/pull/349
> >
> > I have updated to 4.9.3 as a test. However, I am still not seeing the
> > grid
> > file even being accessed. It has to at least try to open it, right? I
> > don't
> > even see it try and fail. It simply does not try.
>
> Yes, if you enable PROJ.4 debug output (using the PROJ_DEBUG=3
> environment variable) your should see pj_open_lib(rdtrans2008.gsb) and
> pj_open_lib(naptrans2008.gtx).
>
>  From the debug output I linked in the earlier message out this issue:
>
>   Test:   05 Zuid-Limburg
>   Exec:   cs2cs -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
>   Input:  50.792584908 5.773795547 174.9478
>   STDERR: pj_open_lib(epsg): call fopen(./epsg) - succeeded
>
>   pj_open_lib(rdnap): call fopen(./rdnap) - succeeded
>
>   pj_open_lib(rdtrans2008.gsb): call fopen(./rdtrans2008.gsb) - succeeded
>
>   NTv2 NL_ALL   63x65: LL=(2.5,50.5) UR=(7.66666667,55.8333333)
>
>   NTv2 NL_LAND  561x421: LL=(3,50.5) UR=(7.66666667,54)
>
>   NTv2 - loading grid NL_LAND
>   pj_open_lib(rdtrans2008.gsb): call fopen(./rdtrans2008.gsb) - succeeded
>
>   pj_apply_gridshift(): used NL_LAND
>   pj_open_lib(naptrans2008.gtx): call fopen(./naptrans2008.gtx) -
> succeeded
>
>   GTX 311x641: LL=(2.5,50.5) UR=(7.66666667,55.8333333)
>   pj_open_lib(naptrans2008.gtx): call fopen(./naptrans2008.gtx) -
> succeeded
>
>   pj_apply_gridshift(): used GTX Vertical Grid Shift File
>   Output: 182260.4500   311480.6701 129.0000
>   Expect: 182260.4500   311480.6700 129.000
>   Test OK: From ETRS89 to RD/NAP - 05 Zuid-Limburg (Not identical, but
> within margin)
>
>
I get:

% PROJ_DEBUG=3  cs2cs -r  +to +init=rdnap:rdnap -f %.4f
pj_open_lib(rdnap): call fopen(/opt/rsoft/lib/proj/rdnap) - succeeded

pj_open_lib(proj_def.dat): call fopen(/opt/rsoft/lib/proj/proj_def.dat) -
succeeded

50.792584908 5.773795547 174.9478
pj_open_lib(naptrans2008.gtx): call
fopen(/opt/rsoft/lib/proj/naptrans2008.gtx) - succeeded

GTX 311x641: LL=(2.5,50.5) UR=(7.66666667,55.8333333)
pj_open_lib(naptrans2008.gtx): call
fopen(/opt/rsoft/lib/proj/naptrans2008.gtx) - succeeded

pj_apply_gridshift(): used GTX Vertical Grid Shift File
182225.9086     311388.1617 128.9976



I wonder why I don't get the NTv2 debug statements.

-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161102/7f616cb2/attachment.html>

From roger.oberholtzer at gmail.com  Wed Nov  2 05:08:53 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 2 Nov 2016 13:08:53 +0100
Subject: [Proj] Grid shift files.
In-Reply-To: <CANkOqwMS_Mm-aChSN9V+GR-baQ8osQi+7r3z5mvk7q8aMG6Vsw@mail.gmail.com>
References: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>
	<7eb491f3d309983504bf929a4590a0d0@xs4all.nl>
	<CANkOqwM6AQBUAJk=jzGM_L6nj7fgnNCFbz8vFDiBXjx23hQTCQ@mail.gmail.com>
	<865098d4739eebe4875e3e8b6d622a09@xs4all.nl>
	<CANkOqwMS_Mm-aChSN9V+GR-baQ8osQi+7r3z5mvk7q8aMG6Vsw@mail.gmail.com>
Message-ID: <CANkOqwMbfZvRmNwiXVAWtQK5R-KDkRZV2GpG0sT=c8NRpADN9A@mail.gmail.com>

On Wed, Nov 2, 2016 at 11:31 AM, Roger Oberholtzer <
roger.oberholtzer at gmail.com> wrote:


> I wonder why I don't get the NTv2 debug statements.
>

I cannot seem to get it to open rdtrans2008.gsb. There is no +wgs84
anywhere. It only does the Vertical Grid Shift. rdtrans2008.gsb is in the
same place as naptrans2008.gtx

I'm curious why +nadgrids=rdtrans2008.gsb is also listed in the From
section. Is that just letting me know it would be used in an inverse
calculation?

% PROJ_DEBUG=3 cs2cs -v -r  +to +init=rdnap:rdnap

pj_open_lib(rdnap): call fopen(/opt/rsoft/lib/proj/rdnap) - succeeded

pj_open_lib(proj_def.dat): call fopen(/opt/rsoft/lib/proj/proj_def.dat) -
succeeded

# ---- From Coordinate System ----
#Lat/long (Geodetic alias)
#
# +proj=latlong +ellps=bessel +nadgrids=rdtrans2008.gsb
# ---- To Coordinate System ----
#Oblique Stereographic Alternative
#       Azimuthal, Sph&Ell
# +init=rdnap:rdnap +proj=sterea +lat_0=52.15616055555555
# +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
# +nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m +no_defs
50.792584908 5.773795547 174.9478
pj_open_lib(naptrans2008.gtx): call
fopen(/opt/rsoft/lib/proj/naptrans2008.gtx) - succeeded

GTX 311x641: LL=(2.5,50.5) UR=(7.66666667,55.8333333)
pj_open_lib(naptrans2008.gtx): call
fopen(/opt/rsoft/lib/proj/naptrans2008.gtx) - succeeded

pj_apply_gridshift(): used GTX Vertical Grid Shift File
182225.91       311388.16 129.00


-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161102/b676b398/attachment.html>

From sebastic at xs4all.nl  Wed Nov  2 11:54:31 2016
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 2 Nov 2016 19:54:31 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <CANkOqwPFop0XPTrrOAiiMONVCNwac1fOtVVBjznJ9i+tg6WV0g@mail.gmail.com>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
	<CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
	<e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>
	<CANkOqwOZ9DQ0qjmtKo8Q5N5yO0t5BJruwQ62TgAB-Y00fjAtGA@mail.gmail.com>
	<5903525cc67caac5b60229a197575038@xs4all.nl>
	<CANkOqwPFop0XPTrrOAiiMONVCNwac1fOtVVBjznJ9i+tg6WV0g@mail.gmail.com>
Message-ID: <5163528f-2d48-c723-71f3-f39b9c8a2d88@xs4all.nl>

On 11/02/2016 11:06 AM, Roger Oberholtzer wrote:
> On Wed, Nov 2, 2016 at 9:48 AM, Bas Couwenberg <sebastic at xs4all.nl> wrote:
> 
>> On 2016-11-02 09:36, Roger Oberholtzer wrote:
>>> I have updated to 4.9.3. My rdnap file is identical to yours:
>>>
>>> # RDNAP with NTv2 and VDatum
>>> <rdnap> +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889
>>> +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel
>>> +nadgrids=rdtrans2008.gsb +geoidgrids=naptrans2008.gtx +units=m
>>> +no_defs
>>> <>
>>>
>>> If I run this:
>>> cs2cs  -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
>>>
>>> And provide these locations:
>>>
>>> 50.792584908 5.773795547 174.9478
>>>
>>> I get this:
>>>
>>> 182225.9086     311388.1617 128.9976
>>>
>>> Not the values you listed:
>>>
>>> 182260.4500     311480.6701 129.0000
>>>
>>>
>>> I'm confused.
>>
>> Does your epsg file use +towgs84 values for EPSG:4258?
>>
>>   # ETRS89
>>   <4258> +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs  <>
>>
>> I guess you're on Windows, which uses a different libc that may also
>> explain the divergence.
>>
> 
> I'm on Linux. I see that when I updated my libproj, a new epsg file was
> installed. I don't usually use that file. I did here because I wanted to
> duplicate your exact command. 4258 is defined as:
> 
> <4258> +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs  <>
> 
> I'm curious why you use both the definition in the epsg file, as well as
> the one in rdnap. Why not everything in the rdnap file? What is your
> definition for 4258?

My definition for EPSG:4258 is the one from PROJ.4 4.9.3, the one below
"# ETRS89" in the quote above.

Since the EPSG:4258 definition is already available in the epsg file,
there is no need to duplicate it in the rdnap file.

> If I change my command to:
> 
> cs2cs  -r  +to +init=rdnap:rdnap
> 
> I see that the grid shift file is now read. But my computed values are
> still:
> 
> 182225.9086     311388.1617 128.9976

We'll need more information about your environment to find out the cause
of the difference. I'm starting to suspect that the old PROJ.4
installation is still being used, not the new version you installed
elsewhere.

I cannot reproduce your problem, both PROJ.4 4.8.0 on Debian stable &
4.9.3 on Debian unstable produce the same result for me:

 $ lsb_release -ds
 Debian GNU/Linux 8.6 (jessie)
 $ apt-cache show proj-bin | grep Version
 Version: 4.8.0-5
 $ echo "50.792584908 5.773795547 174.9478" \
 | PROJ_DEBUG=3 cs2cs  -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
 pj_open_lib(epsg): call fopen(/usr/share/proj/epsg) - succeeded

 pj_open_lib(rdnap): call fopen(/usr/share/proj/rdnap) - succeeded

 pj_open_lib(rdtrans2008.gsb): call
fopen(/usr/share/proj/rdtrans2008.gsb) - succeeded

 NTv2 NL_ALL   63x65: LL=(2.5,50.5) UR=(7.66666667,55.8333333)

 NTv2 NL_LAND  561x421: LL=(3,50.5) UR=(7.66666667,54)

 NTv2 - loading grid NL_LAND
 pj_open_lib(rdtrans2008.gsb): call
fopen(/usr/share/proj/rdtrans2008.gsb) - succeeded

 pj_apply_gridshift(): used NL_LAND
 pj_open_lib(naptrans2008.gtx): call
fopen(/usr/share/proj/naptrans2008.gtx) - succeeded

 GTX 311x641: LL=(2.5,50.5) UR=(7.66666667,55.8333333)
 pj_open_lib(naptrans2008.gtx): call
fopen(/usr/share/proj/naptrans2008.gtx) - succeeded

 pj_apply_gridshift(): used GTX Vertical Grid Shift File
 182260.4500     311480.6701 129.0000


 $ lsb_release -ds
 Debian GNU/Linux unstable (sid)
 $ apt-cache show proj-bin | grep Version
 Version: 4.9.3-1
 $ echo "50.792584908 5.773795547 174.9478" \
 | PROJ_DEBUG=3 cs2cs  -r +init=epsg:4258 +to +init=rdnap:rdnap -f %.4f
 pj_open_lib(epsg): call fopen(/usr/share/proj/epsg) - succeeded

 pj_open_lib(rdnap): call fopen(/usr/share/proj/rdnap) - succeeded

 pj_open_lib(rdtrans2008.gsb): call
fopen(/usr/share/proj/rdtrans2008.gsb) - succeeded

 NTv2 NL_ALL   63x65: LL=(2.5,50.5) UR=(7.66666667,55.8333333)

 NTv2 NL_LAND  561x421: LL=(3,50.5) UR=(7.66666667,54)

 NTv2 - loading grid NL_LAND
 pj_open_lib(rdtrans2008.gsb): call
fopen(/usr/share/proj/rdtrans2008.gsb) - succeeded

 pj_apply_gridshift(): used NL_LAND
 pj_open_lib(naptrans2008.gtx): call
fopen(/usr/share/proj/naptrans2008.gtx) - succeeded

 GTX 311x641: LL=(2.5,50.5) UR=(7.66666667,55.8333333)
 pj_open_lib(naptrans2008.gtx): call
fopen(/usr/share/proj/naptrans2008.gtx) - succeeded

 pj_apply_gridshift(): used GTX Vertical Grid Shift File
 182260.4500     311480.6701 129.0000


Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1


From sebastic at xs4all.nl  Wed Nov  2 11:58:52 2016
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 2 Nov 2016 19:58:52 +0100
Subject: [Proj] Grid shift files.
In-Reply-To: <CANkOqwMbfZvRmNwiXVAWtQK5R-KDkRZV2GpG0sT=c8NRpADN9A@mail.gmail.com>
References: <CANkOqwN5DWtMeTsXF8=DkfQqQxkD-KyJGp_O5468dLSLFbHuww@mail.gmail.com>
	<7eb491f3d309983504bf929a4590a0d0@xs4all.nl>
	<CANkOqwM6AQBUAJk=jzGM_L6nj7fgnNCFbz8vFDiBXjx23hQTCQ@mail.gmail.com>
	<865098d4739eebe4875e3e8b6d622a09@xs4all.nl>
	<CANkOqwMS_Mm-aChSN9V+GR-baQ8osQi+7r3z5mvk7q8aMG6Vsw@mail.gmail.com>
	<CANkOqwMbfZvRmNwiXVAWtQK5R-KDkRZV2GpG0sT=c8NRpADN9A@mail.gmail.com>
Message-ID: <cf614724-40d3-bc7d-f19f-ef805e37295f@xs4all.nl>

On 11/02/2016 01:08 PM, Roger Oberholtzer wrote:
> I'm curious why +nadgrids=rdtrans2008.gsb is also listed in the From
> section. Is that just letting me know it would be used in an inverse
> calculation?

Because you didn't initialize the from projection.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1


From roger.oberholtzer at gmail.com  Thu Nov  3 01:15:07 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Thu, 3 Nov 2016 09:15:07 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <5163528f-2d48-c723-71f3-f39b9c8a2d88@xs4all.nl>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
	<CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
	<e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>
	<CANkOqwOZ9DQ0qjmtKo8Q5N5yO0t5BJruwQ62TgAB-Y00fjAtGA@mail.gmail.com>
	<5903525cc67caac5b60229a197575038@xs4all.nl>
	<CANkOqwPFop0XPTrrOAiiMONVCNwac1fOtVVBjznJ9i+tg6WV0g@mail.gmail.com>
	<5163528f-2d48-c723-71f3-f39b9c8a2d88@xs4all.nl>
Message-ID: <CANkOqwMMUakiQc_UeNSjXb_wwiQC1T1Gj_zDi3jPQZjO3dHMiQ@mail.gmail.com>

It could be that the old epsg file was still being used. The old
(non-working) definition of 4258 was:

     <4258> +proj=longlat +ellps=GRS80 +no_defs  <>

and the new (working) is:

     <4258> +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs  <>

I think the problem was the missing +towgs84=0,0,0,0,0,0,0. Without that,
the grid shift file was not used. And probably other things as well.

I want to continue this without reference to files as they are too variable
to be reliable. Instead, I have moved everything to the command line so
there is no confusion about what is in each system's files.

The command:

     echo "50.792584908 5.773795547 174.9478" | \
         cs2cs -r +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
+no_defs \
              +to +proj=sterea +lat_0=52.15616055555555
+lon_0=5.38763888888889 +k=0.9999079 \
                +x_0=155000 +y_0=463000 +ellps=bessel
+nadgrids=rdtrans2008.gsb \
                +geoidgrids=naptrans2008.gtx +units=m +no_defs -f %.4f

Now correctly provides:

182260.4500     311480.6701 129.0000

I have 'translated' this to the C API and all is working great. I have been
testing with the reference points that came with the grid file.

Texel:
        Ref:    Latitude:   53.1607530420 Longitude:    4.8247619120
Altitude:     42.861
        Ref:    Easting:       117380.120 Northing:       575040.340
Altitude:      1.000
        Calc:   Easting:       117380.120 Northing:       575040.340
Altitude:      1.000    0.000 meters from Ref
        Inv:    Latitude:   53.1607530431 Longitude:    4.8247619081
Altitude:   2455.773

Noord-Groningen:
        Ref:    Latitude:   53.4194820500 Longitude:    6.7767266740
Altitude:     42.359
        Ref:    Easting:       247380.560 Northing:       604580.780
Altitude:      2.000
        Calc:   Easting:       247380.560 Northing:       604580.780
Altitude:      2.000    0.000 meters from Ref
        Inv:    Latitude:   53.4194820513 Longitude:    6.7767266740
Altitude:   2426.971

Amersfoort:
        Ref:    Latitude:   52.1551728970 Longitude:    5.3872036570
Altitude:     43.255
        Ref:    Easting:       155000.000 Northing:       463000.000
Altitude:      0.000
        Calc:   Easting:       155000.000 Northing:       463000.000
Altitude:      0.000    0.000 meters from Ref
        Inv:    Latitude:   52.1551728982 Longitude:    5.3872036577
Altitude:   2478.331

Amersfoort 100m:
        Ref:    Latitude:   52.1551729100 Longitude:    5.3872036580
Altitude:    143.255
        Ref:    Easting:       155000.000 Northing:       463000.000
Altitude:    100.000
        Calc:   Easting:       155000.000 Northing:       463000.001
Altitude:    100.000    0.001 meters from Ref
        Inv:    Latitude:   52.1551728982 Longitude:    5.3872036577
Altitude:   8207.909

Zeeuws-Vlaanderen:
        Ref:    Latitude:   51.3686071520 Longitude:    3.3975885950
Altitude:     47.402
        Ref:    Easting:        16460.910 Northing:       377380.230
Altitude:      3.000
        Calc:   Easting:        16460.910 Northing:       377380.230
Altitude:      3.000    0.000 meters from Ref
        Inv:    Latitude:   51.3686071526 Longitude:    3.3975885974
Altitude:   2715.954

Zuid-Limburg:
        Ref:    Latitude:   50.7925849160 Longitude:    5.7737955480
Altitude:    245.948
        Ref:    Easting:       182260.450 Northing:       311480.670
Altitude:    200.000
        Calc:   Easting:       182260.450 Northing:       311480.671
Altitude:    200.000    0.001 meters from Ref
        Inv:    Latitude:   50.7925849065 Longitude:    5.7737955467
Altitude:  14091.766

Maasvlakte:
        Ref:    Latitude:   51.9473938980 Longitude:    4.0728871010
Altitude:     47.597
        Ref:    Easting:        64640.890 Northing:       440700.010
Altitude:      4.000
        Calc:   Easting:        64640.890 Northing:       440700.010
Altitude:      4.000    0.000 meters from Ref
        Inv:    Latitude:   51.9473938985 Longitude:    4.0728871025
Altitude:   2727.102

The Ref values are the sample points. The Calc is what I now get from proj
(yeah!). The Inv is what I get when I do an inverse projection of my
projected point. It is rather close to the original Ref. Except the
Altitude. I am using the shift file for that as well. Maybe it does not
allow an inverse on the Altitude? It is probably not a big issue for me.
More of a curiosity.

I am also curious about some additional sample points that came with the
grid shift data.

outside:
        Ref:    Latitude:   48.8430302100 Longitude:    8.7232602350
Altitude:     52.029
        Ref:    Easting:       400000.230 Northing:       100000.450
Altitude:      5.000

no_rd&geoid:
        Ref:    Latitude:   50.6874203920 Longitude:    4.6089718130
Altitude:     51.611
        Ref:    Easting:       100000.670 Northing:       300000.890
Altitude:      6.000

no_geoid:
        Ref:    Latitude:   51.1368251970 Longitude:    4.6013753610
Altitude:     50.967
        Ref:    Easting:       100000.670 Northing:       350000.890
Altitude:      6.000

no_rd:
        Ref:    Latitude:   52.4824408390 Longitude:    4.2684038890
Altitude:     49.944
        Ref:    Easting:        79000.010 Northing:       500000.230
Altitude:      7.000

edge_rd:
        Ref:    Latitude:   51.0039765320 Longitude:    3.8912478300
Altitude:     52.743
        Ref:    Easting:        50000.450 Northing:       335999.670
Altitude:      8.000

All of these fail. Since I expect our data to be within the area of the
grid shift file, I guess I do not need to worry about these. Out of
curiosity, how do others deal with such points?

-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161103/ad6b78aa/attachment.html>

From sebastic at xs4all.nl  Thu Nov  3 01:44:51 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Thu, 03 Nov 2016 09:44:51 +0100
Subject: [Proj] Amersfoort / RD New
In-Reply-To: <CANkOqwMMUakiQc_UeNSjXb_wwiQC1T1Gj_zDi3jPQZjO3dHMiQ@mail.gmail.com>
References: <CANkOqwP8BYxtWdN4SyAyJNJ4sa-u4e4CBVcHrkttdUiXfPk7oQ@mail.gmail.com>
	<c917b9e0eecb8d0ca5122b6fe2bbc62a@xs4all.nl>
	<CANkOqwO6tfeXL3k-OqDAQrxa4teQRpgVGg+SLqsFNEZpH=b8FA@mail.gmail.com>
	<e55e41f78f5b6dd7149228ebf0d26335@xs4all.nl>
	<CANkOqwOZ9DQ0qjmtKo8Q5N5yO0t5BJruwQ62TgAB-Y00fjAtGA@mail.gmail.com>
	<5903525cc67caac5b60229a197575038@xs4all.nl>
	<CANkOqwPFop0XPTrrOAiiMONVCNwac1fOtVVBjznJ9i+tg6WV0g@mail.gmail.com>
	<5163528f-2d48-c723-71f3-f39b9c8a2d88@xs4all.nl>
	<CANkOqwMMUakiQc_UeNSjXb_wwiQC1T1Gj_zDi3jPQZjO3dHMiQ@mail.gmail.com>
Message-ID: <0914b69eb54383fe1215a2d40d4d6033@xs4all.nl>

On 2016-11-03 09:15, Roger Oberholtzer wrote:
> It could be that the old epsg file was still being used. The old
> (non-working) definition of 4258 was:
> 
>      <4258> +proj=longlat +ellps=GRS80 +no_defs  <>
> 
> and the new (working) is:
> 
>      <4258> +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs  
> <>
> 
> I think the problem was the missing +towgs84=0,0,0,0,0,0,0. Without 
> that,
> the grid shift file was not used. And probably other things as well.

Yes, the missing +towgs84 values are the cause, I experienced this too 
with the epsg file from PROJ.4 4.7.0 which doesn't have the +towgs84 
values.

See: https://lists.osgeo.org/pipermail/dutch/2014-November/001014.html

> The Ref values are the sample points. The Calc is what I now get from 
> proj
> (yeah!). The Inv is what I get when I do an inverse projection of my
> projected point. It is rather close to the original Ref. Except the
> Altitude. I am using the shift file for that as well. Maybe it does not
> allow an inverse on the Altitude? It is probably not a big issue for 
> me.
> More of a curiosity.

The documentation included along with the grid shift files documents the 
altitude limitation:

"
  1) The rdtrans2008 NTv2-grid can only give identical results to 
RDNAPTRANS TM 2008 within 1
     millimeter at ground level onshore and at mean seal level offshore. 
The horizontal deviation is
     approximately 1 millimeter per 50 meter height difference from 
ground level or mean sea level.
  2) An exception to 1) is the border of the RDNAPTRANS TM 2008 
correction grid. Transformation
     results within cells of the rdtrans2008 NTv2-grid that are 
intersected by the border of the
     RDNAPTRANS TM 2008 correction grid can result in deviations of up to 
20 centimeter.
  3) The naptrans2008 VDatum-grid cannot be used to determine deflections 
of the vertical. For
     this the NLGEO2004 geoid model has to be used.
  4) The naptrans2008 VDatum-grid is referenced to the Bessel-1841 
ellipsoid and cannot be used
     stand-alone, it has to be used in combination with the rdtrans2008 
NTv2-grid.
"

https://anonscm.debian.org/cgit/pkg-grass/proj-rdnap.git/plain/Use%20of%20RDTRANS2008%20and%20NAPTRANS2008.pdf

> I am also curious about some additional sample points that came with 
> the
> grid shift data.
> 
> [...]
> 
> All of these fail. Since I expect our data to be within the area of the
> grid shift file, I guess I do not need to worry about these. Out of
> curiosity, how do others deal with such points?

This also noted in the documentation for the grid shift files:

"
   Points 07 - 10 are outside the region where interpolation between
   either the NLGEO2004 geoid or the RD correction grid points is
   possible. RD is defined only within the region enclosed by the
   following points (in RD), outside this region RD coordinates can
   be computed, but the output should be handled with care.

   Corners of the validity region for RD:
   ┌────────┬────────┐
   │  x (m) │  y (m) │
   ├────────┼────────┤
   │ 140000 │ 630000 │
   │ 100000 │ 600000 │
   │  80000 │ 500000 │
   │  -8000 │ 390000 │
   │  -8000 │ 335000 │
   │ 100000 │ 335000 │
   │ 160000 │ 288000 │
   │ 220000 │ 288000 │
   │ 301000 │ 450000 │
   │ 301000 │ 615000 │
   │ 260000 │ 630000 │
   └────────┴────────┘
"

With the huge values change in PROJ.4 4.9.2 some of these values could 
be calculated correctly, but caused most other tests to fail, so that 
was reverted. See the discussion I linked before:

  http://lists.maptools.org/pipermail/proj/2016-February/007327.html

In my test script I added an override to accept the '*' output from 
cs2cs because these tests are expected to fail.

Kind Regards,

Bas


From kreve at sdfe.dk  Thu Nov  3 07:40:39 2016
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 3 Nov 2016 14:40:39 +0000
Subject: [Proj] A re-rationalized API for PROJ.4
Message-ID: <2E885BB293AF0448A0181138489E9A0E7A85D4C7@S000014.PROD.SITAD.DK>

Hello everybody,

I want to direct your attention to the work Thomas Knudsen is doing on a new and more homogenous API for PROJ.4. Thomas presented his first ideas about a new API earlier this year when talk about transformation pipelines first started. Since then the initial pipeline pull request has been withdrawn and the changes needed to make transformation pipelines happen are broken into smaller more logical chunks. A new API being one of those smaller chunks. Before anyone gets their knickers in a twist, let me just stress the fact that this DOES NOT change the behavior of the old API (projects.h/proj_api.h), it merely adds a cleaner interface that will make usage of PROJ.4 a lot easier in the future.
Thomas has already typed up a description of his work but until now it has only been available on the GitHub page. This is his introduction to the new API:

The original proj API (defined in projects.h) has grown organically
over the years, but it has also grown somewhat messy.

The same has happened with the newer high level API (defined in
proj_api.h): To support various historical objectives, proj_api.h
contains a rather complex combination of conditional defines and
typedefs. Probably for good (historical) reasons, which are not
always evident from today's perspective.

This is an evolving attempt at creating a re-rationalized API
with primary design goals focused on sanitizing the namespaces.
Hence, all symbols exposed are being moved to the pj_ namespace,
while all data types are being moved to the PJ_ namespace.

Please note that this API is *orthogonal* to  the previous APIs:
Apart from some inclusion guards, projects.h and proj_api.h are not
touched - if you do not include proj.h, the projects and proj_api
APIs should work as they always have.

A few implementation details:

Apart from the namespacing efforts, I'm trying to eliminate three
proj_api elements, which I have found especially confusing.

FIRST and foremost, I try to avoid typedef'ing away pointer
semantics. I agree that it can be occasionally useful, but I
prefer having the pointer nature of function arguments being
explicitly visible.

Hence, projCtx has been replaced by PJ_CONTEXT *.

SECOND, I try to eliminate cases of information hiding implemented
by redefining data types to void pointers.

I prefer using a combination of forward declarations and typedefs.
Hence:
    typedef void *projCtx;
Has been replaced by:
    struct projCtx_t;
    typedef struct projCtx_t PJ_CONTEXT;
This makes it possible for the calling program to know that the
PJ_CONTEXT data type exists, and handle pointers to that data type
without having any idea about its internals.

(obviously, in this example, struct projCtx_t should also be moved
to struct pj_ctx some day...)

THIRD, I try to eliminate implicit type punning. Hence this API
introduces the OBSERVATION data type, for generic coordinate and
ancillary data handling.

It includes the PJ_SPATIOTEMPORAL and PJ_TRIPLET unions
making it possible to make explicit the previously used
"implicit type punning", where a XY is turned into a LP by
re#defining both as UV, behind the back of the user.

The bare essentials API presented here follows the PROJ.4
convention of sailing the coordinate to be reprojected, up on
the stack ("call by value"), and symmetrically returning the
result on the stack. Although the OBSERVATION object is 4 times
as large as the traditional XY and LP objects, timing results
have shown the overhead to be very reasonable.

See pj_proj_test.c for an example of how to use the API.

The pull request is found at https://github.com/OSGeo/proj.4/pull/445 and the example code can be found here: https://github.com/busstoptaktik/proj.4/blob/pipeline_plus_api/examples/pj_proj_test.c

Please share your thoughts on the new API that Thomas has been working on. There has already been some discussion about how to expose the thread-contexts of the PJ-objects. In the current incarnation they are somewhat hidden to the user compared the what's in proj_api.h. On top of that, Thomas and I have personally discussed the projFileAPI which does not seem to be used outside of PROJ.4 itself (at least nothing shows up on google, closed source we have no idea about). Is this something people actually need?

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161103/801c9e5a/attachment.html>

From support at mnspoint.com  Mon Nov 14 01:42:23 2016
From: support at mnspoint.com (support at mnspoint.com)
Date: Mon, 14 Nov 2016 11:42:23 +0200
Subject: [Proj] A re-rationalized API for PROJ.4
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E7A85D4C7@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0E7A85D4C7@S000014.PROD.SITAD.DK>
Message-ID: <7d6aace338860dbddbe3be87674405b8@mnspoint.com>

ok, 

... but NO thanks! .. if it does not add anything new .. for example a
new projection .. we do NOT want to have it!! --- it is just some
rewriting which forces all users to do some tricks and hours of extra
work etc. with their working code without actually adding anything
usable. 

Please, do not make such changes that are not required!! -- fix bugs and
add some **useful** features ... but do not play with the coding ...
since that already works! (We actually PREFER to have it old fashion
than anything new and stupid!) --- if you like to make a "clean" Proj.4
for yourself just rename it something else and use it! --- but do not
mess with the current version ... we have had enough about those idiots
that believe they have some KING ideas how everybody should write
programs. And then after next 10 years comes the next one ... and the
next one ... and the next one ... all are pushing some strange ideas to
play with other programmers and make lot of work that is not at all
required! Let it be!! 

Rename it and do what ever you like but stop ***playing*** with the
original Proj.4 source code, thanks! 

Janne. 

------------------------------------------------------------ 

Kristian Evers kirjoitti 2016-11-03 16:40:

> Hello everybody, 
> 
> I want to direct your attention to the work Thomas Knudsen is doing on a new and more homogenous API for PROJ.4. Thomas presented his first ideas about a new API earlier this year when talk about transformation pipelines first started. Since then the initial pipeline pull request has been withdrawn and the changes needed to make transformation pipelines happen are broken into smaller more logical chunks. A new API being one of those smaller chunks. Before anyone gets their knickers in a twist, let me just stress the fact that this DOES NOT change the behavior of the old API (projects.h/proj_api.h), it merely adds a cleaner interface that will make usage of PROJ.4 a lot easier in the future. 
> 
> Thomas has already typed up a description of his work but until now it has only been available on the GitHub page. This is his introduction to the new API: 
> 
> The original proj API (defined in projects.h) has grown organically 
> 
> over the years, but it has also grown somewhat messy. 
> 
> The same has happened with the newer high level API (defined in 
> 
> proj_api.h): To support various historical objectives, proj_api.h 
> 
> contains a rather complex combination of conditional defines and 
> 
> typedefs. Probably for good (historical) reasons, which are not 
> 
> always evident from today's perspective. 
> 
> This is an evolving attempt at creating a re-rationalized API 
> 
> with primary design goals focused on sanitizing the namespaces. 
> 
> Hence, all symbols exposed are being moved to the pj_ namespace, 
> 
> while all data types are being moved to the PJ_ namespace. 
> 
> Please note that this API is *orthogonal* to  the previous APIs: 
> 
> Apart from some inclusion guards, projects.h and proj_api.h are not 
> 
> touched - if you do not include proj.h, the projects and proj_api 
> 
> APIs should work as they always have. 
> 
> A few implementation details: 
> 
> Apart from the namespacing efforts, I'm trying to eliminate three 
> 
> proj_api elements, which I have found especially confusing. 
> 
> FIRST and foremost, I try to avoid typedef'ing away pointer 
> 
> semantics. I agree that it can be occasionally useful, but I 
> 
> prefer having the pointer nature of function arguments being 
> 
> explicitly visible. 
> 
> Hence, projCtx has been replaced by PJ_CONTEXT *. 
> 
> SECOND, I try to eliminate cases of information hiding implemented 
> 
> by redefining data types to void pointers. 
> 
> I prefer using a combination of forward declarations and typedefs. 
> 
> Hence: 
> 
> typedef void *projCtx; 
> 
> Has been replaced by: 
> 
> struct projCtx_t; 
> 
> typedef struct projCtx_t PJ_CONTEXT; 
> 
> This makes it possible for the calling program to know that the 
> 
> PJ_CONTEXT data type exists, and handle pointers to that data type 
> 
> without having any idea about its internals. 
> 
> (obviously, in this example, struct projCtx_t should also be moved 
> 
> to struct pj_ctx some day...) 
> 
> THIRD, I try to eliminate implicit type punning. Hence this API 
> 
> introduces the OBSERVATION data type, for generic coordinate and 
> 
> ancillary data handling. 
> 
> It includes the PJ_SPATIOTEMPORAL and PJ_TRIPLET unions 
> 
> making it possible to make explicit the previously used 
> 
> "implicit type punning", where a XY is turned into a LP by 
> 
> re#defining both as UV, behind the back of the user. 
> 
> The bare essentials API presented here follows the PROJ.4 
> 
> convention of sailing the coordinate to be reprojected, up on 
> 
> the stack ("call by value"), and symmetrically returning the 
> 
> result on the stack. Although the OBSERVATION object is 4 times 
> 
> as large as the traditional XY and LP objects, timing results 
> 
> have shown the overhead to be very reasonable. 
> 
> See pj_proj_test.c for an example of how to use the API. 
> 
> The pull request is found at https://github.com/OSGeo/proj.4/pull/445 [1] and the example code can be found here: https://github.com/busstoptaktik/proj.4/blob/pipeline_plus_api/examples/pj_proj_test.c [2] 
> 
> Please share your thoughts on the new API that Thomas has been working on. There has already been some discussion about how to expose the thread-contexts of the PJ-objects. In the current incarnation they are somewhat hidden to the user compared the what's in proj_api.h. On top of that, Thomas and I have personally discussed the projFileAPI which does not seem to be used outside of PROJ.4 itself (at least nothing shows up on google, closed source we have no idea about). Is this something people actually need? 
> 
> /Kristian 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj

-- 
MNS Support
NNS Master Navigator Software
Copyright (c) Sapper Oy
www.mnspoint.com [3]
support at mnspoint.com 

Links:
------
[1] https://github.com/OSGeo/proj.4/pull/445
[2]
https://github.com/busstoptaktik/proj.4/blob/pipeline_plus_api/examples/pj_proj_test.c
[3] http://www.mnspoint.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161114/05d8c8d9/attachment.html>

From Mikael.Rittri at carmenta.com  Mon Nov 14 04:02:45 2016
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 14 Nov 2016 12:02:45 +0000
Subject: [Proj] A re-rationalized API for PROJ.4
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E7A85D4C7@S000014.PROD.SITAD.DK>
References: <2E885BB293AF0448A0181138489E9A0E7A85D4C7@S000014.PROD.SITAD.DK>
Message-ID: <E4AB3DD44D22854B819908379DE4AD493E167CCC@SETHNWS023.carmenta.se>

I just want to say that, although I personally will probably not bother to change to the new API, I have always found the traditional source code of Proj.4 difficult to read, and I am happy to see a new enthusiastic group of developers taking care of Proj.4.  The period of stagnation a few years ago was unfortunate.

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com<http://www.carmenta.com/>

________________________________
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Kristian Evers
Sent: Thursday, November 03, 2016 3:41 PM
To: PROJ.4 and general Projections Discussions
Subject: [Proj] A re-rationalized API for PROJ.4

Hello everybody,

I want to direct your attention to the work Thomas Knudsen is doing on a new and more homogenous API for PROJ.4. Thomas presented his first ideas about a new API earlier this year when talk about transformation pipelines first started. Since then the initial pipeline pull request has been withdrawn and the changes needed to make transformation pipelines happen are broken into smaller more logical chunks. A new API being one of those smaller chunks. Before anyone gets their knickers in a twist, let me just stress the fact that this DOES NOT change the behavior of the old API (projects.h/proj_api.h), it merely adds a cleaner interface that will make usage of PROJ.4 a lot easier in the future.
Thomas has already typed up a description of his work but until now it has only been available on the GitHub page. This is his introduction to the new API:

The original proj API (defined in projects.h) has grown organically
over the years, but it has also grown somewhat messy.

The same has happened with the newer high level API (defined in
proj_api.h): To support various historical objectives, proj_api.h
contains a rather complex combination of conditional defines and
typedefs. Probably for good (historical) reasons, which are not
always evident from today's perspective.

This is an evolving attempt at creating a re-rationalized API
with primary design goals focused on sanitizing the namespaces.
Hence, all symbols exposed are being moved to the pj_ namespace,
while all data types are being moved to the PJ_ namespace.

Please note that this API is *orthogonal* to  the previous APIs:
Apart from some inclusion guards, projects.h and proj_api.h are not
touched - if you do not include proj.h, the projects and proj_api
APIs should work as they always have.

A few implementation details:

Apart from the namespacing efforts, I'm trying to eliminate three
proj_api elements, which I have found especially confusing.

FIRST and foremost, I try to avoid typedef'ing away pointer
semantics. I agree that it can be occasionally useful, but I
prefer having the pointer nature of function arguments being
explicitly visible.

Hence, projCtx has been replaced by PJ_CONTEXT *.

SECOND, I try to eliminate cases of information hiding implemented
by redefining data types to void pointers.

I prefer using a combination of forward declarations and typedefs.
Hence:
    typedef void *projCtx;
Has been replaced by:
    struct projCtx_t;
    typedef struct projCtx_t PJ_CONTEXT;
This makes it possible for the calling program to know that the
PJ_CONTEXT data type exists, and handle pointers to that data type
without having any idea about its internals.

(obviously, in this example, struct projCtx_t should also be moved
to struct pj_ctx some day...)

THIRD, I try to eliminate implicit type punning. Hence this API
introduces the OBSERVATION data type, for generic coordinate and
ancillary data handling.

It includes the PJ_SPATIOTEMPORAL and PJ_TRIPLET unions
making it possible to make explicit the previously used
"implicit type punning", where a XY is turned into a LP by
re#defining both as UV, behind the back of the user.

The bare essentials API presented here follows the PROJ.4
convention of sailing the coordinate to be reprojected, up on
the stack ("call by value"), and symmetrically returning the
result on the stack. Although the OBSERVATION object is 4 times
as large as the traditional XY and LP objects, timing results
have shown the overhead to be very reasonable.

See pj_proj_test.c for an example of how to use the API.

The pull request is found at https://github.com/OSGeo/proj.4/pull/445 and the example code can be found here: https://github.com/busstoptaktik/proj.4/blob/pipeline_plus_api/examples/pj_proj_test.c

Please share your thoughts on the new API that Thomas has been working on. There has already been some discussion about how to expose the thread-contexts of the PJ-objects. In the current incarnation they are somewhat hidden to the user compared the what's in proj_api.h. On top of that, Thomas and I have personally discussed the projFileAPI which does not seem to be used outside of PROJ.4 itself (at least nothing shows up on google, closed source we have no idea about). Is this something people actually need?

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161114/518edd11/attachment.html>

From roger.oberholtzer at gmail.com  Mon Nov 14 05:45:18 2016
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Mon, 14 Nov 2016 14:45:18 +0100
Subject: [Proj] A re-rationalized API for PROJ.4
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD493E167CCC@SETHNWS023.carmenta.se>
References: <2E885BB293AF0448A0181138489E9A0E7A85D4C7@S000014.PROD.SITAD.DK>
	<E4AB3DD44D22854B819908379DE4AD493E167CCC@SETHNWS023.carmenta.se>
Message-ID: <CANkOqwN0oRWmsA+vFkyjV2h1HTeqWj8-FWChjykaFtpQG2yRzg@mail.gmail.com>

+1 Mikael

On Mon, Nov 14, 2016 at 1:02 PM, Mikael Rittri <Mikael.Rittri at carmenta.com>
wrote:

> I just want to say that, although I personally will probably not bother to
> change to the new API, I have always found the traditional source code of
> Proj.4 difficult to read, and I am happy to see a new enthusiastic group of
> developers taking care of Proj.4.  The period of stagnation a few years ago
> was unfortunate.
>
>
>
> Mikael Rittri
>
> Carmenta
>
> Sweden
> <http://www.carmenta.com/>http://www.carmenta.com
>
>
> ------------------------------
>
> *From:* proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.
> maptools.org] *On Behalf Of *Kristian Evers
> *Sent:* Thursday, November 03, 2016 3:41 PM
> *To:* PROJ.4 and general Projections Discussions
> *Subject:* [Proj] A re-rationalized API for PROJ.4
>
>
>
> Hello everybody,
>
>
>
> I want to direct your attention to the work Thomas Knudsen is doing on a
> new and more homogenous API for PROJ.4. Thomas presented his first ideas
> about a new API earlier this year when talk about transformation pipelines
> first started. Since then the initial pipeline pull request has been
> withdrawn and the changes needed to make transformation pipelines happen
> are broken into smaller more logical chunks. A new API being one of those
> smaller chunks. Before anyone gets their knickers in a twist, let me just
> stress the fact that this DOES NOT change the behavior of the old API
> (projects.h/proj_api.h), it merely adds a cleaner interface that will make
> usage of PROJ.4 a lot easier in the future.
>
> Thomas has already typed up a description of his work but until now it has
> only been available on the GitHub page. This is his introduction to the new
> API:
>
>
>
> The original proj API (defined in projects.h) has grown organically
>
> over the years, but it has also grown somewhat messy.
>
>
>
> The same has happened with the newer high level API (defined in
>
> proj_api.h): To support various historical objectives, proj_api.h
>
> contains a rather complex combination of conditional defines and
>
> typedefs. Probably for good (historical) reasons, which are not
>
> always evident from today's perspective.
>
>
>
> This is an evolving attempt at creating a re-rationalized API
>
> with primary design goals focused on sanitizing the namespaces.
>
> Hence, all symbols exposed are being moved to the pj_ namespace,
>
> while all data types are being moved to the PJ_ namespace.
>
>
>
> Please note that this API is *orthogonal* to  the previous APIs:
>
> Apart from some inclusion guards, projects.h and proj_api.h are not
>
> touched - if you do not include proj.h, the projects and proj_api
>
> APIs should work as they always have.
>
>
>
> A few implementation details:
>
>
>
> Apart from the namespacing efforts, I'm trying to eliminate three
>
> proj_api elements, which I have found especially confusing.
>
>
>
> FIRST and foremost, I try to avoid typedef'ing away pointer
>
> semantics. I agree that it can be occasionally useful, but I
>
> prefer having the pointer nature of function arguments being
>
> explicitly visible.
>
>
>
> Hence, projCtx has been replaced by PJ_CONTEXT *.
>
>
>
> SECOND, I try to eliminate cases of information hiding implemented
>
> by redefining data types to void pointers.
>
>
>
> I prefer using a combination of forward declarations and typedefs.
>
> Hence:
>
>     typedef void *projCtx;
>
> Has been replaced by:
>
>     struct projCtx_t;
>
>     typedef struct projCtx_t PJ_CONTEXT;
>
> This makes it possible for the calling program to know that the
>
> PJ_CONTEXT data type exists, and handle pointers to that data type
>
> without having any idea about its internals.
>
>
>
> (obviously, in this example, struct projCtx_t should also be moved
>
> to struct pj_ctx some day...)
>
>
>
> THIRD, I try to eliminate implicit type punning. Hence this API
>
> introduces the OBSERVATION data type, for generic coordinate and
>
> ancillary data handling.
>
>
>
> It includes the PJ_SPATIOTEMPORAL and PJ_TRIPLET unions
>
> making it possible to make explicit the previously used
>
> "implicit type punning", where a XY is turned into a LP by
>
> re#defining both as UV, behind the back of the user.
>
>
>
> The bare essentials API presented here follows the PROJ.4
>
> convention of sailing the coordinate to be reprojected, up on
>
> the stack ("call by value"), and symmetrically returning the
>
> result on the stack. Although the OBSERVATION object is 4 times
>
> as large as the traditional XY and LP objects, timing results
>
> have shown the overhead to be very reasonable.
>
>
>
> See pj_proj_test.c for an example of how to use the API.
>
>
>
> The pull request is found at https://github.com/OSGeo/proj.4/pull/445 and
> the example code can be found here: https://github.com/
> busstoptaktik/proj.4/blob/pipeline_plus_api/examples/pj_proj_test.c
>
>
>
> Please share your thoughts on the new API that Thomas has been working on.
> There has already been some discussion about how to expose the
> thread-contexts of the PJ-objects. In the current incarnation they are
> somewhat hidden to the user compared the what’s in proj_api.h. On top of
> that, Thomas and I have personally discussed the projFileAPI which does not
> seem to be used outside of PROJ.4 itself (at least nothing shows up on
> google, closed source we have no idea about). Is this something people
> actually need?
>
>
>
> /Kristian
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>



-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20161114/e8fd30b4/attachment.html>

From howard at hobu.co  Mon Nov 14 07:23:00 2016
From: howard at hobu.co (Howard Butler)
Date: Mon, 14 Nov 2016 09:23:00 -0600
Subject: [Proj] A re-rationalized API for PROJ.4
In-Reply-To: <7d6aace338860dbddbe3be87674405b8@mnspoint.com>
References: <2E885BB293AF0448A0181138489E9A0E7A85D4C7@S000014.PROD.SITAD.DK>
	<7d6aace338860dbddbe3be87674405b8@mnspoint.com>
Message-ID: <248AF3C5-397D-4FB6-A485-2CBEF19F407A@hobu.co>


> On Nov 14, 2016, at 3:42 AM, support at mnspoint.com wrote:
> 
> ok,
> 
> 
> 
> ... but NO thanks! .. if it does not add anything new .. for example a new projection .. we do NOT want to have it!! --- it is just some rewriting which forces all users to do some tricks and hours of extra work etc. with their working code without actually adding anything usable.
> 
> Please, do not make such changes that are not required!! -- fix bugs and add some **useful** features ... but do not play with the coding ... since that already works! (We actually PREFER to have it old fashion than anything new and stupid!) --- if you like to make a "clean" Proj.4 for yourself just rename it something else and use it! --- but do not mess with the current version ... we have had enough about those idiots that believe they have some KING ideas how everybody should write programs. And then after next 10 years comes the next one ... and the next one ... and the next one ... all are pushing some strange ideas to play with other programmers and make lot of work that is not at all required! Let it be!!
> 
> 
> 
> Rename it and do what ever you like but stop ***playing*** with the original Proj.4 source code, thanks!
> 

Janne,

You misunderstand the concept of open source software and your company's usage and relationship to it. You are essentially proposing is that we the community only fix bugs that impact your company's usage of Proj.4. As I've stated before, there's nothing that prevents you from using older versions of the software. If your company's software is not robust to changes in Proj.4, it is not the Proj.4 project's fault. It is your company's for not putting enough engineering and testing around your product's (free) use of it.

Some interesting things I've found while researching Gerald and his software for the article [1] I've been working on:

- Proj.4's original code style was evolved from Gerald's work on other programs such as Mapgen and WOLF. He refined his style by applying lessons of the previous system he developed, like any good programmer. 
- There were wildly varying code styles for large C projects evolving in the mid 1980s as evidenced by the evolution of C++ and rise of object oriented programming. Typical GNU-style C hadn't taken hold, and the patterns which we take for granted in many C libraries today, such as opaque object APIs, public vs. private API, and include file management were not widely settled.
- 30+ year old compilers were not very good. Code styles often reflected compiler deficiencies as much as they did explicit design choices.

Please consider Proj.4 in that context. I presume the idiots you're talking about are the fashion-concious, fad-applying programmers, and not Thomas or any of the rest of us contributing and working to improve the manageability, usefulness, and professionalism of the Proj.4 codebase and its website at http://proj4.org. If you've been following any of the thread that Thomas has been writing in github and on the mailing list, you'll know that his improvements are not simply for his edification. It's still C, and the only software fashionability that could ever possibly be achieved is hipster irony.

Here's a list of things the Proj.4 project now has that it did not when Gerald was just tossing tarballs into the ether:

- revision control
- bug listing/tracking
- automated tests
- automated tests that run every time code is committed
- a website that is generated every time code is committed
- releases
- contributors

Each of these things improve the Proj.4 to make your company's (free) use of the software more valuable. None of them would exist if people like Thomas were not committed to keeping Proj.4 viable and alive as an ongoing open source software project. Your company benefits from that, and if you think it doesn't, please internally fork the code and do your own thing. When you do, we will be ahead of you at every iteration.

Howard 


[1] http://lists.maptools.org/pipermail/proj/2016-September/007493.html




