From br at forstware.de  Mon May  9 01:28:55 2022
From: br at forstware.de (Bjoern Ruff)
Date: Mon, 9 May 2022 10:28:55 +0200
Subject: [PROJ] Building release version with cmake
Message-ID: <006701d8637e$d3574290$7a05c7b0$@forstware.de>

Hello,

 

I have build the debug version using cmake with success.

                                cmake .. -G "Visual Studio 17 2022" -A Win32

                                cmake --build .

Now I tried to build the release version:

 

                                md Release

                                cd Release

                                cmake .. -G "Visual Studio 17 2022" -A Win32
-D CMAKE_BUILD_TYPE=Release -D CMAKE_CXX_FLAGS_RELEASE="/MD /O2 /NDEBUG" -D
CMAKE_C_FLAGS_RELEASE="/MD /O2 /NDEBUG"  

                                cmake --build .

but the result was a debug version (identical with the first step)

 

Has someone a idea how I can fix that?

 

Thanks, Bj?rn

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20220509/edbb5a70/attachment.htm>

From even.rouault at spatialys.com  Mon May  9 02:02:25 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 9 May 2022 11:02:25 +0200
Subject: [PROJ] Building release version with cmake
In-Reply-To: <006701d8637e$d3574290$7a05c7b0$@forstware.de>
References: <006701d8637e$d3574290$7a05c7b0$@forstware.de>
Message-ID: <f817aaed-7a9d-f148-3115-e017be5b4ca0@spatialys.com>

For a multiple config generator like Visual Studio (cfhttps://discourse.cmake.org/t/cmake-build-type-ignored/2230/2)

You want rather to do:

cmake --build . --config Release

Le 09/05/2022 ? 10:28, Bjoern Ruff a ?crit?:
>
> Hello,
>
> I have build the debug version using cmake with success.
>
> ??????????????????????????????? cmake .. -G "Visual Studio 17 2022" -A 
> Win32
>
> ??????????????????????????????? cmake --build .
>
> Now I tried to build the release version:
>
> ??????????????????????????????? md Release
>
> ??????????????????????????????? cd Release
>
> ??????????????????????????????? cmake .. -G "Visual Studio 17 2022" -A 
> Win32 -D CMAKE_BUILD_TYPE=Release -D CMAKE_CXX_FLAGS_RELEASE="/MD /O2 
> /NDEBUG" -D CMAKE_C_FLAGS_RELEASE="/MD /O2 /NDEBUG"
>
> ??????????????????????????????? cmake --build .
>
> but the result was a debug version (identical with the first step)
>
> Has someone a idea how I can fix that?
>
> Thanks, Bj?rn
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20220509/0259e513/attachment.htm>

From tma at gatehouse.com  Thu May 12 03:06:48 2022
From: tma at gatehouse.com (Torsten Martinsen)
Date: Thu, 12 May 2022 10:06:48 +0000
Subject: [PROJ] Migrating from PROJ 7 to 8
Message-ID: <DB7PR06MB56725EAB307BCA202A69A68EBECB9@DB7PR06MB5672.eurprd06.prod.outlook.com>

Hi,

I have some code (written by a previous coworker) that uses the functions pj_ctx_alloc(), pj_init_plus_ctx(), and pj_fwd(). These have been deprecated for some time and were removed in PROJ 8.

I have searched the documentation etc., and while it is quite simple to figure out the current equivalents for the two first functions, I cannot figure out the replacement for pj_fwd().

For reference, the code in question is in essence:

void projection::forward(double& x, double&y) const
{
   projUV p;
   p.u = x * geo::deg_to_rad;
   p.v = y * geo::deg_to_rad;
   p = pj_fwd(p, proj_);
   x = p.u * geo::rad_to_deg;
   y = p.v * geo::rad_to_deg;
}

where 'proj_' is returned from pj_init_plus_ctx().

Regards,
Torsten Martinsen

