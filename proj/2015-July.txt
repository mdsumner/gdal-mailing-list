From support at mnspoint.com  Thu Jul  2 07:06:58 2015
From: support at mnspoint.com (support at mnspoint.com)
Date: Thu, 02 Jul 2015 17:06:58 +0300
Subject: [Proj] Experiment to speed up proj.4 by 2 or more
In-Reply-To: <201506231729.50179.even.rouault@spatialys.com>
References: <201506231729.50179.even.rouault@spatialys.com>
Message-ID: <05004df00328127734c89aa215d0c04e@mnspoint.com>

Hello Even,

we have already tested all possible optimizations SSE2 etc. which ever 
we couild
switch our compiler to produce .. the bad news is that even if the 
performance
could be somewhat better in some speed aspects .. the overall system 
performance
got worse and for example the screen updateing matters and interrupt 
servicing
got worse! .. so basically there is not much to be gained taking that 
road. And
we switched back not to optimize some important sections since the 
overloading
of the cpu made the OS not any more work so efficiently and fluently.
(At least for some processors)

The problem with very hard optimizations is that the results can be very 
strange
with different processors an operating systems. And since most of them 
have only
been tested with rather "lame" programs by the manufacturers of 
processors and
operating systems .. it is usually best not to try too much! .. or at 
least
all combinations should be tested .. which might be very huge a task!

If you anyway like to do some special C++ work on the proj.4 package, 
please add
the syntax scanner in front of it .. so that it makes sure the user 
entered
some projection definitions that the library did really understand. That 
would
reduce the number of errors the users makes with the rather complex 
definitions
the library needs. (No the Proj.4v accepts almost what ever definitions 
and says
nothing about the fact that it was maybe totally discarded and did not 
make any
sense)..

And name it something else than "Proj.4" .. there is already "libProj4" 
.. maybe
"Cpp.Proj.4" for example .. so you are free to do what ever! :D

I have not had time to check what the github people have done with the 
package?
Most likely nothing but taken all the glory and destroyed some important
sections? :) -- which is the usual approach.. haha :)

http://libproj4.maptools.org/



regards: Janne.

----------------------------------------------


Even Rouault kirjoitti 23.06.2015 18:29:
> Hi,
> 
> I've done an experiment to use Intel SIMD intrinsics
> (https://en.wikipedia.org/wiki/SIMD), and I think they could be 
> beneficial for
> proj, when called to transform several coordinates at a time.
> 
> I've used the SSE2 instruction set (128 bit registers, so 2 doubles at 
> a
> time), and I managed to speed up the inverse Transverse Mercator 
> ellipsoidal
> transformation (ie. from projected to geodetic) by a factor of ~ 2 
> (excluding
> potential datum transformations)
> 
> One key for performance was to find an efficient way of computing the 
> usual
> transcendental functions (ie. sin, cos, tan and their inverse, exp, ln,
> etc...) with SIMD registers, since they are not included in the 
> instruction
> set. Otherwise you have to collect each component of the SIMD register,
> evaluate it with the x87 coprocessor, and reassemble the SIMD register 
> from
> the computed components, which kills all the other performance gains. 
> The
> SLEEF library (http://freecode.com/projects/sleef) has such routines, 
> is in
> the public domain and works rather well (with gcc/clang, although it 
> has some
> rough edges when trying with MSVC, but nothing that cannot be overcome)
> 
> I've encapsulated the use of SSE2 intrinsics in a C++ class with 
> overloading
> of arithmetics operators, so the resulting code looks pretty much 
> similar to
> the original C code, which is great for readability (although the 
> original C
> code isn't always very readable ;-)), and confidence that it doesn't 
> introduce
> errors. Conditionnal branches are not so great for SIMD performance, 
> but there
> are tricks to rewrite some of them with a ternary-like operator.
> 
> SLEEF also supports the AVX & AVX2+FMA instruction sets (256 bit 
> registers),
Hello

> which could also lead to a further ~ x2 gain over SSE2.
> 
> So I was wondering if there was :
> 
> 1) interest of the project in pursuing into that approach (which 
> involves
> introducing C++ in the code base, as an implementation detail, the 
> interface
> being unchanged). We could imagine to have the same source files 
> compiled
> several times with different register sizes, with runtime selection of 
> the
> appropriate variant (note: SSE2 is guaranteed to be available on all 
> x86_64
> compatible processors. AVX/AVX2 is for more recent CPUs).
> 
> 2) ... and sponsors interested in making that happen.
> 
> Finally, the proof of concept:
> * regular code (runs in ~30s on Core i5 750 @ 2.67GHz  ):
>    https://gist.github.com/rouault/946104d0b98e8e8cc564
> * SSE2 code (~14s):
>    https://gist.github.com/rouault/3bbc31c9f12391d79920
> 
> Best regards,
> 
> Even




From jgpallero at gmail.com  Thu Jul  2 07:25:50 2015
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Thu, 2 Jul 2015 16:25:50 +0200
Subject: [Proj] PROJ.4 and OpenMP
Message-ID: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>

Hello:

Since version 4.8.0, PROJ.4 has some thread safety facilities
(https://trac.osgeo.org/proj/wiki/ThreadSafety) and also the source
code contains an example program in which Posix Threads are used. But
I'm a bit confused about how to use this thread safety with OpenMP.
Could someone, please, upload a code example of using PROJ with
OpenMP? Such example could be also added to the distributed source
code

Thanks

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************


From even.rouault at spatialys.com  Thu Jul  2 07:36:24 2015
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 2 Jul 2015 16:36:24 +0200
Subject: [Proj] Experiment to speed up proj.4 by 2 or more
In-Reply-To: <05004df00328127734c89aa215d0c04e@mnspoint.com>
References: <201506231729.50179.even.rouault@spatialys.com>
	<05004df00328127734c89aa215d0c04e@mnspoint.com>
Message-ID: <201507021636.24932.even.rouault@spatialys.com>

Janne,

> 
> we have already tested all possible optimizations SSE2 etc. which ever
> we couild
> switch our compiler to produce ..

You mean: with proj ?

Well, on Intel 64bit platforms, some compilers (at least GCC) do already 
generate SSE code for floating point operations, but I don't think they can 
manage to auto-vectorize it (no way to predict the number of loops, issue with 
all the trigonometric functions, etc..). So they will generate SSE 
instructions, but only with their "sd" form (single double). My experiment 
made it possible to use the "pd" forms (pair of double).

> the bad news is that even if the
> performance
> could be somewhat better in some speed aspects .. the overall system
> performance
> got worse and for example the screen updateing matters and interrupt
> servicing
> got worse! .. so basically there is not much to be gained taking that
> road. And
> we switched back not to optimize some important sections since the
> overloading
> of the cpu made the OS not any more work so efficiently and fluently.
> (At least for some processors)
> 
> The problem with very hard optimizations is that the results can be very
> strange
> with different processors an operating systems. And since most of them
> have only
> been tested with rather "lame" programs by the manufacturers of
> processors and
> operating systems .. it is usually best not to try too much! .. or at
> least
> all combinations should be tested .. which might be very huge a task!

Woo, that's news to me ! I'd be interested in links to articles, etc.. that 
would document such behaviours.
Most video codecs etc use SIMD instructions. libjpeg-turbo too. libc too I 
think for string operations (strlen, strcmp, etc...). 

> 
> If you anyway like to do some special C++ work on the proj.4 package,
> please add
> the syntax scanner in front of it .. so that it makes sure the user
> entered
> some projection definitions that the library did really understand. That
> would
> reduce the number of errors the users makes with the rather complex
> definitions
> the library needs. (No the Proj.4v accepts almost what ever definitions
> and says
> nothing about the fact that it was maybe totally discarded and did not
> make any
> sense)..

That's another topic. And it doesn't really require C++ to have a syntax 
scanner.

> 
> And name it something else than "Proj.4" .. there is already "libProj4"
> .. maybe
> "Cpp.Proj.4" for example .. so you are free to do what ever! :D

Well, if I pursue the experiment to a further stage than just this proof of 
concept, it'll certainly begin as a fork, but the ultimate goal would  be to 
merge it back into the master branch. I've no interest in creating a long term 
fork. I think a RFC would be appropriate, although I don't think proj.4 has a 
formal project steering committee yet.

> 
> I have not had time to check what the github people have done with the
> package?
> Most likely nothing but taken all the glory and destroyed some important
> sections? :) -- which is the usual approach.. haha :)

I don't think this is very constructive to critize other's work without giving 
any evidence of what they would have supposedly done wrong, and it is rather 
rude to state they have done that for their "glory". In Open Source projects, 
the power belong to those who do the work. Why don't you contribute a patch to 
add a syntax scanner ?
One of the benefit I can see with the github migration is that we have now a 
continuous integration mechanism + code coverage.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From even.rouault at spatialys.com  Thu Jul  2 08:34:11 2015
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 2 Jul 2015 17:34:11 +0200
Subject: [Proj] PROJ.4 and OpenMP
In-Reply-To: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>
References: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>
Message-ID: <201507021734.11446.even.rouault@spatialys.com>

Le jeudi 02 juillet 2015 16:25:50, José Luis García Pallero a écrit :
> Hello:
> 
> Since version 4.8.0, PROJ.4 has some thread safety facilities
> (https://trac.osgeo.org/proj/wiki/ThreadSafety) and also the source
> code contains an example program in which Posix Threads are used. But
> I'm a bit confused about how to use this thread safety with OpenMP.
> Could someone, please, upload a code example of using PROJ with
> OpenMP? Such example could be also added to the distributed source
> code

José,

I don't have a working example to propose nor I am an OpenMP expert, but based 
on https://en.wikipedia.org/wiki/OpenMP, I guess you must use a thread-private 
identifier to select projPJ objects specific to each thread.

The global workflow could be :

- initialization :

projCtxt* tabProjCtx;
projPJ* tabProjSrc;
projPJ* tabProjDst;
int nThreads;
#pragma omp parallel
{
    #pragma omp single
    nThreads =  omp_get_num_threads()
    /* TODO: allocate tabProjCtx, tabProjSrc and tabProjDst to be nThreads 
large */
    /* TODO: loop over nThreads and initialize each tabProjCtx[i], 
tabProjSrc[i] and tabProjDst[i] */
}

- and then use something like :

int th_id;
#pragma omp parallel for private(th_id)
for(i=0;i<...;i++)
{
     th_id = omp_get_thread_num();
     pj_transform(tabProjSrc[th_id], tabProjDst[th_id], ...)
}

Completely untested of course...

If you manage to get a working example, please contribute it.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From jgpallero at gmail.com  Thu Jul  2 08:37:16 2015
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Thu, 2 Jul 2015 17:37:16 +0200
Subject: [Proj] PROJ.4 and OpenMP
In-Reply-To: <201507021734.11446.even.rouault@spatialys.com>
References: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>
	<201507021734.11446.even.rouault@spatialys.com>
Message-ID: <CAFemY3YKLPVeboBLNVFbXBc1F5ZztjuUij3VjFAZnaGdNccm6w@mail.gmail.com>

2015-07-02 17:34 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> Le jeudi 02 juillet 2015 16:25:50, José Luis García Pallero a écrit :
>> Hello:
>>
>> Since version 4.8.0, PROJ.4 has some thread safety facilities
>> (https://trac.osgeo.org/proj/wiki/ThreadSafety) and also the source
>> code contains an example program in which Posix Threads are used. But
>> I'm a bit confused about how to use this thread safety with OpenMP.
>> Could someone, please, upload a code example of using PROJ with
>> OpenMP? Such example could be also added to the distributed source
>> code
>
> José,
>
> I don't have a working example to propose nor I am an OpenMP expert, but based
> on https://en.wikipedia.org/wiki/OpenMP, I guess you must use a thread-private
> identifier to select projPJ objects specific to each thread.
>
> The global workflow could be :
>
> - initialization :
>
> projCtxt* tabProjCtx;
> projPJ* tabProjSrc;
> projPJ* tabProjDst;
> int nThreads;
> #pragma omp parallel
> {
>     #pragma omp single
>     nThreads =  omp_get_num_threads()
>     /* TODO: allocate tabProjCtx, tabProjSrc and tabProjDst to be nThreads
> large */
>     /* TODO: loop over nThreads and initialize each tabProjCtx[i],
> tabProjSrc[i] and tabProjDst[i] */
> }
>
> - and then use something like :
>
> int th_id;
> #pragma omp parallel for private(th_id)
> for(i=0;i<...;i++)
> {
>      th_id = omp_get_thread_num();
>      pj_transform(tabProjSrc[th_id], tabProjDst[th_id], ...)
> }
>
> Completely untested of course...
>
> If you manage to get a working example, please contribute it.

Thanks!

>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com



-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************


From support at mnspoint.com  Thu Jul  2 11:07:49 2015
From: support at mnspoint.com (support at mnspoint.com)
Date: Thu, 02 Jul 2015 21:07:49 +0300
Subject: [Proj] PROJ.4 and OpenMP
In-Reply-To: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>
References: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>
Message-ID: <66767123d6b33fe9fb6105273739fb61@mnspoint.com>

Hello Jose,

if I remember correctly all what Frank W. did was that he added a single 
line containing a mutex object to the source code .. that was all. You 
might want to run a file comparsion for the first "multithreaded" proj.4 
and the version before it .. but just a single line was added I assume?!

So most likely what you should do is to use that mutex object .. there 
should be lot of examples about how to use a mutex objects in the 
network.

https://trac.osgeo.org/proj/wiki/ThreadSafety

https://msdn.microsoft.com/en-us/library/windows/desktop/ms686927%28v=vs.85%29.aspx

It depends what you are doing if you really need such saftey .. most 
simple programs do not need that .. or they can do the proj.4 interface 
in such a way that there will never be any need to have it thread safe 
.. meaning that the slow speed proj.4 calculations for large data sets 
should be done in forehand before the program enters any hard graphics 
work for example .. and that way it just speeds up to avoid that all 
together! -- but what are you doing dictates that of course.

Regards: Janne.

--------------------------------------



José Luis García Pallero kirjoitti 02.07.2015 17:25:
> Hello:
> 
> Since version 4.8.0, PROJ.4 has some thread safety facilities
> (https://trac.osgeo.org/proj/wiki/ThreadSafety) and also the source
> code contains an example program in which Posix Threads are used. But
> I'm a bit confused about how to use this thread safety with OpenMP.
> Could someone, please, upload a code example of using PROJ with
> OpenMP? Such example could be also added to the distributed source
> code
> 
> Thanks

-- 



From support at mnspoint.com  Thu Jul  2 11:46:09 2015
From: support at mnspoint.com (support at mnspoint.com)
Date: Thu, 02 Jul 2015 21:46:09 +0300
Subject: [Proj] Experiment to speed up proj.4 by 2 or more
In-Reply-To: <201507021636.24932.even.rouault@spatialys.com>
References: <201506231729.50179.even.rouault@spatialys.com>
	<05004df00328127734c89aa215d0c04e@mnspoint.com>
	<201507021636.24932.even.rouault@spatialys.com>
Message-ID: <ecb72acaa85b0f8732968725bd0975a1@mnspoint.com>

Even,

Even Rouault kirjoitti 02.07.2015 17:36:
> Janne,
> 
>> 
>> we have already tested all possible optimizations SSE2 etc. which ever
>> we couild
>> switch our compiler to produce ..
> 
> You mean: with proj ?
> 
> Well, on Intel 64bit platforms, some compilers (at least GCC) do 
> already
> generate SSE code for floating point operations, but I don't think they 
> can
> manage to auto-vectorize it (no way to predict the number of loops, 
> issue with
> all the trigonometric functions, etc..). So they will generate SSE
> instructions, but only with their "sd" form (single double). My 
> experiment
> made it possible to use the "pd" forms (pair of double).
> 

you don't need any C++ just to optimize it .. the
compiler can optimize it as it is as well. We are using
C++ with Proj.4 and several other C libraries without
touching it .. it is NOT good idea to write it C++
since many people use it standard C. Or if you
want to write C++ the rename your product totally.


>> the bad news is that even if the
>> performance
>> could be somewhat better in some speed aspects .. the overall system
>> performance
>> got worse and for example the screen updateing matters and interrupt
>> servicing
>> got worse! .. so basically there is not much to be gained taking that
>> road. And
>> we switched back not to optimize some important sections since the
>> overloading
>> of the cpu made the OS not any more work so efficiently and fluently.
>> (At least for some processors)
>> 
>> The problem with very hard optimizations is that the results can be 
>> very
>> strange
>> with different processors an operating systems. And since most of them
>> have only
>> been tested with rather "lame" programs by the manufacturers of
>> processors and
>> operating systems .. it is usually best not to try too much! .. or at
>> least
>> all combinations should be tested .. which might be very huge a task!
> 
> Woo, that's news to me ! I'd be interested in links to articles, etc.. 
> that
> would document such behaviours.
> Most video codecs etc use SIMD instructions. libjpeg-turbo too. libc 
> too I
> think for string operations (strlen, strcmp, etc...).
> 

There are no direct links and no articles .. we are using mostly
Microsoft environments.

>> 
>> If you anyway like to do some special C++ work on the proj.4 package,
>> please add
>> the syntax scanner in front of it .. so that it makes sure the user
>> entered
>> some projection definitions that the library did really understand. 
>> That
>> would
>> reduce the number of errors the users makes with the rather complex
>> definitions
>> the library needs. (No the Proj.4v accepts almost what ever 
>> definitions
>> and says
>> nothing about the fact that it was maybe totally discarded and did not
>> make any
>> sense)..
> 
> That's another topic. And it doesn't really require C++ to have a 
> syntax
> scanner.
> 

yes, that is true. And the scanner should anyway be totally an
independent part which could be omitted if not required.


>> 
>> And name it something else than "Proj.4" .. there is already 
>> "libProj4"
>> .. maybe
>> "Cpp.Proj.4" for example .. so you are free to do what ever! :D
> 
> Well, if I pursue the experiment to a further stage than just this 
> proof of
> concept, it'll certainly begin as a fork, but the ultimate goal would  
> be to
> merge it back into the master branch. I've no interest in creating a 
> long term
> fork. I think a RFC would be appropriate, although I don't think proj.4 
> has a
> formal project steering committee yet.
> 
>> 
>> I have not had time to check what the github people have done with the
>> package?
>> Most likely nothing but taken all the glory and destroyed some 
>> important
>> sections? :) -- which is the usual approach.. haha :)
> 
> I don't think this is very constructive to critize other's work without 
> giving
> any evidence of what they would have supposedly done wrong, and it is 
> rather
> rude to state they have done that for their "glory". In Open Source 
> projects,

I am not very much any open project man here .. I respect Gerald 
Evenden's work and Frank Warmerdam's additions to it. I see Proj.4 
mostly as a two man project (Gerald + Frank) .. and since it is very 
usable as it is now I don't see much point to alter it.

> the power belong to those who do the work. Why don't you contribute a 
> patch to
> add a syntax scanner ?
> One of the benefit I can see with the github migration is that we have 
> now a
> continuous integration mechanism + code coverage.
> 

Simply too busy at the moment to add anything except if it is rather 
important for the functionality of the product. Maybe one day I'll do 
that if nobody does it before .. but it might as well be completely its 
own package or library since it does not need to be tied with Proj.4 to 
function. You just feed your definition first to the scanner if required 
and then to the proj.4 as normal if the scanner and/or the user said ok 
after possible error messages etc.

Certainly some Lint-nism additional to the simple scanner would also be 
desirable..

https://en.wikipedia.org/wiki/Lint_%28software%29

Janne.






From even.rouault at spatialys.com  Thu Jul  2 12:03:07 2015
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 2 Jul 2015 21:03:07 +0200
Subject: [Proj] PROJ.4 and OpenMP
In-Reply-To: <66767123d6b33fe9fb6105273739fb61@mnspoint.com>
References: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>
	<66767123d6b33fe9fb6105273739fb61@mnspoint.com>
Message-ID: <201507022103.07766.even.rouault@spatialys.com>

Le jeudi 02 juillet 2015 20:07:49, support at mnspoint.com a écrit :
> Hello Jose,
> 
> if I remember correctly all what Frank W. did was that he added a single
> line containing a mutex object to the source code .. that was all. 

> You
> might want to run a file comparsion for the first "multithreaded" proj.4
> and the version before it .. but just a single line was added I assume?!
> 
> So most likely what you should do is to use that mutex object .. there
> should be lot of examples about how to use a mutex objects in the
> network.

Janne,

Sorry but I must correct your above statement, since that's just 
misinformation and rather offending regarding FrankW's efforts in that area.

The changes in proj to make it thread-safe involved touching a lot of files, 
not just one. Just look at the first commit to add thread-safety : 
https://github.com/OSGeo/proj.4/commit/ec678c07c2acb83da8a2187c541b8a2e452dec4b 
And there have been several afterwards.

If you use the "new" proj API that accept a projCtx argument, no need for a 
mutex.

Even
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From even.rouault at spatialys.com  Thu Jul  2 12:24:15 2015
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 2 Jul 2015 21:24:15 +0200
Subject: [Proj] Experiment to speed up proj.4 by 2 or more
In-Reply-To: <ecb72acaa85b0f8732968725bd0975a1@mnspoint.com>
References: <201506231729.50179.even.rouault@spatialys.com>
	<201507021636.24932.even.rouault@spatialys.com>
	<ecb72acaa85b0f8732968725bd0975a1@mnspoint.com>
Message-ID: <201507022124.15808.even.rouault@spatialys.com>

> 
> you don't need any C++ just to optimize it .. the
> compiler can optimize it as it is as well. We are using
> C++ with Proj.4 and several other C libraries without
> touching it .. it is NOT good idea to write it C++
> since many people use it standard C. Or if you
> want to write C++ the rename your product totally.

Please read my previous emails on the subject where I explain that the C API 
would be preserved and C++ would be just a conveniency implementation detail 
of proj.4 code to be able to easily have common sources that could be compiled 
with support for non SIMD (as currently), SIMD with 2 doubles or SIMD with 4 
doubles.

> 
> >> the bad news is that even if the
> >> performance
> >> could be somewhat better in some speed aspects .. the overall system
> >> performance
> >> got worse and for example the screen updateing matters and interrupt
> >> servicing
> >> got worse! .. so basically there is not much to be gained taking that
> >> road. And
> >> we switched back not to optimize some important sections since the
> >> overloading
> >> of the cpu made the OS not any more work so efficiently and fluently.
> >> (At least for some processors)
> >> 
> >> The problem with very hard optimizations is that the results can be
> >> very
> >> strange
> >> with different processors an operating systems. And since most of them
> >> have only
> >> been tested with rather "lame" programs by the manufacturers of
> >> processors and
> >> operating systems .. it is usually best not to try too much! .. or at
> >> least
> >> all combinations should be tested .. which might be very huge a task!
> > 
> > Woo, that's news to me ! I'd be interested in links to articles, etc..
> > that
> > would document such behaviours.
> > Most video codecs etc use SIMD instructions. libjpeg-turbo too. libc
> > too I
> > think for string operations (strlen, strcmp, etc...).
> 
> There are no direct links and no articles .. we are using mostly
> Microsoft environments.

I'm still rather skeptical that SIMD instructions have the behaviour you 
describe without more probative evidence. I've never seen that on Linux for 
sure, and I'm not sure why the nature of the OS would matter for that.

> 
> yes, that is true. And the scanner should anyway be totally an
> independent part which could be omitted if not required.

Agreed. There should be a way to turn off validation as it might impact 
performance (although if it is done correctly, that should hopefully be 
neglectable)

> 
> I am not very much any open project man here .. I respect Gerald
> Evenden's work and Frank Warmerdam's additions to it. I see Proj.4
> mostly as a two man project (Gerald + Frank) .. and since it is very
> usable as it is now I don't see much point to alter it.

I also respect very much their work, but that's not a reason for not exploring 
further enhancements. And you can always use existing versions if you don't 
need/like new features.


> but it might as well be completely its
> own package or library since it does not need to be tied with Proj.4 to
> function. You just feed your definition first to the scanner if required
> and then to the proj.4 as normal if the scanner and/or the user said ok
> after possible error messages etc.

This is somehow linked to which projection methods are supported by the 
library, and a few are added from time to time, so I'm not completely sure 
that a validator could be externally added in a sustainable way.
I think that would also require projection methods to explicitely expose the 
parameters they support.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From darren at ontrenet.com  Fri Jul  3 04:35:45 2015
From: darren at ontrenet.com (Darren Govoni)
Date: Fri, 03 Jul 2015 07:35:45 -0400
Subject: [Proj] Custom grid system?
Message-ID: <55967391.7000400@ontrenet.com>

Hi,
   I'd like to create custom grid reference systems with proj4 
(specifically pyproj).
So I want to a method to create all the individual grids and have them 
in a matrix or something.

Are there examples of this? I couldn't find any.

Thanks


From even.rouault at spatialys.com  Sat Jul  4 12:13:25 2015
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 4 Jul 2015 21:13:25 +0200
Subject: [Proj] AppVeyor (Windows CI) setup + Windows CMake question
Message-ID: <201507042113.25715.even.rouault@spatialys.com>

Hi,

Similarly to Linux Travis-CI builds, I've also added the configuration for the 
AppVeyor hosted CI service for Windows builds 
:https://github.com/OSGeo/proj.4/blob/master/appveyor.yml

The following configurations are tested (for pushes and pull requests) :
Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 10; Platform: x64
Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 10; Platform: x86
Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 11; Platform: x64
Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 11; Platform: x86
Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 12; Platform: x64
Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 12; Platform: x86
Environment: BUILD_TYPE=nmake; Platform: x64
Environment: BUILD_TYPE=nmake; Platform: x86

This only runs the build as I don't think there's a test target for Windows ?

Results available at:
https://ci.appveyor.com/project/OSGeo/proj-4

Travis and Appveyor badges displayed on:
https://github.com/OSGeo/proj.4/wiki

I've had a hard time with Windows cmake builds. I had to add  "-
DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=../bin" on the cmake line, otherwise I 
got errors during the build with "..\bin\nad2bin.exe" not being found when 
processing """
CustomBuild:
  Building Custom Rule c:/....../proj.4/nad/CMakeLists.txt
"""
Is it expected?
Without that, the binaries are installed in bin\Release

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From howard at hobu.co  Sun Jul  5 08:21:45 2015
From: howard at hobu.co (Howard Butler)
Date: Sun, 5 Jul 2015 10:21:45 -0500
Subject: [Proj] AppVeyor (Windows CI) setup + Windows CMake question
In-Reply-To: <201507042113.25715.even.rouault@spatialys.com>
References: <201507042113.25715.even.rouault@spatialys.com>
Message-ID: <C0005663-D2E9-474F-A783-EB2BA3C4A945@hobu.co>


> On Jul 4, 2015, at 2:13 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Hi,
> 
> Similarly to Linux Travis-CI builds, I've also added the configuration for the 
> AppVeyor hosted CI service for Windows builds 
> :https://github.com/OSGeo/proj.4/blob/master/appveyor.yml
> 
> The following configurations are tested (for pushes and pull requests) :
> Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 10; Platform: x64
> Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 10; Platform: x86
> Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 11; Platform: x64
> Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 11; Platform: x86
> Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 12; Platform: x64
> Environment: BUILD_TYPE=cmake, VS_VERSION=Visual Studio 12; Platform: x86
> Environment: BUILD_TYPE=nmake; Platform: x64
> Environment: BUILD_TYPE=nmake; Platform: x86

Thanks! So many warnings! [1].

PDAL uses AppVeyor for its windows builds too and we’ve been very happy with it. I paid for the basic account which does make things run quite a bit faster than otherwise would be expected for the OSS variant. Maybe we could convince OSGeo to pay for such infrastructure. 

[1] https://ci.appveyor.com/project/OSGeo/proj-4/build/job/2j2mt8kllv8klqx4

> This only runs the build as I don't think there's a test target for Windows ?

Has there ever been a proj.4 test target for windows?

> I've had a hard time with Windows cmake builds. I had to add  "-
> DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=../bin" on the cmake line, otherwise I 
> got errors during the build with "..\bin\nad2bin.exe" not being found when 
> processing """
> CustomBuild:
>  Building Custom Rule c:/....../proj.4/nad/CMakeLists.txt
> """
> Is it expected?
> Without that, the binaries are installed in bin\Release

That is not surprising. It is a cmake convention to break up builds by build type. Charles may have an opinion on this…

Howard

From kochizufan at gmail.com  Sun Jul  5 17:28:04 2015
From: kochizufan at gmail.com (OHTSUKA Ko-hei)
Date: Mon, 6 Jul 2015 09:28:04 +0900
Subject: [Proj] Can I make definitions of bird-eye-view maps coordinates
 using proj4 and proj4text?
Message-ID: <CAKs-9JKcEcwDS0S2i1b0yeVmR4+tuNqfEqjWYT4nVmrm=as87w@mail.gmail.com>

Hello,

I used proj.4 for transforms of many maps projections, but those
projections are ordinary maps'
projection, like stereographic, orthographic, gnomonic .. and so on.

But these days, I have a question if proj.4 can use for bird-eye-view maps
projection.
Are there any options for making definition of bird-eye-view maps in
proj4text?

Regards,
Ko-hei
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20150706/5dd26cc9/attachment.html>

From even.rouault at spatialys.com  Tue Jul  7 09:53:55 2015
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 7 Jul 2015 18:53:55 +0200
Subject: [Proj] Next major proj version: 4.10 ?
Message-ID: <201507071853.55057.even.rouault@spatialys.com>

Hi,

What will be the number of the next major proj version : 4.10 ?

I'm wondering so as to be able to close a ticket and set the appropriate 
milestone (4.10 doesn't exist currently in github tickets)

Currently, we have:

#define PJ_VERSION 491

I guess that with 4.10 that should become :

/* MAJOR * 10000 + MINOR * 100 + MICRO */
#define PJ_VERSION 41000

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From quantum.analyst at gmail.com  Tue Jul  7 12:20:32 2015
From: quantum.analyst at gmail.com (Elliott Sales de Andrade)
Date: Tue, 7 Jul 2015 15:20:32 -0400
Subject: [Proj] Next major proj version: 4.10 ?
In-Reply-To: <201507071853.55057.even.rouault@spatialys.com>
References: <201507071853.55057.even.rouault@spatialys.com>
Message-ID: <CAJP_izftHrzUghiXaWdtT8MoQGzbbfSaqp9t9Dm7+an32Wor6w@mail.gmail.com>

Hi Even,

On 7 July 2015 at 12:53, Even Rouault <even.rouault at spatialys.com> wrote:
> Hi,
>
> What will be the number of the next major proj version : 4.10 ?
>
> I'm wondering so as to be able to close a ticket and set the appropriate
> milestone (4.10 doesn't exist currently in github tickets)
>

For GitHub, it doesn't matter. You can just call it "next major
release" and rename it once the release is made. (Though I would point
out that according to semver, 4.10.0 is a minor release.)

> Currently, we have:
>
> #define PJ_VERSION 491
>
> I guess that with 4.10 that should become :
>
> /* MAJOR * 10000 + MINOR * 100 + MICRO */
> #define PJ_VERSION 41000
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



-- 
Elliott


From howard at hobu.co  Tue Jul  7 21:05:24 2015
From: howard at hobu.co (Howard Butler)
Date: Tue, 7 Jul 2015 23:05:24 -0500
Subject: [Proj] Next major proj version: 4.10 ?
In-Reply-To: <CAJP_izftHrzUghiXaWdtT8MoQGzbbfSaqp9t9Dm7+an32Wor6w@mail.gmail.com>
References: <201507071853.55057.even.rouault@spatialys.com>
	<CAJP_izftHrzUghiXaWdtT8MoQGzbbfSaqp9t9Dm7+an32Wor6w@mail.gmail.com>
Message-ID: <58178AA9-F8D0-410A-AD3F-569471C82A3A@hobu.co>


> On Jul 7, 2015, at 2:20 PM, Elliott Sales de Andrade <quantum.analyst at gmail.com> wrote:
> 
> Hi Even,
> 
> On 7 July 2015 at 12:53, Even Rouault <even.rouault at spatialys.com> wrote:
>> Hi,
>> 
>> What will be the number of the next major proj version : 4.10 ?
>> 
>> I'm wondering so as to be able to close a ticket and set the appropriate
>> milestone (4.10 doesn't exist currently in github tickets)
>> 
> 
> For GitHub, it doesn't matter. You can just call it "next major
> release" and rename it once the release is made. (Though I would point
> out that according to semver, 4.10.0 is a minor release.)
> 
>> Currently, we have:
>> 
>> #define PJ_VERSION 491
>> 
>> I guess that with 4.10 that should become :
>> 
>> /* MAJOR * 10000 + MINOR * 100 + MICRO */
>> #define PJ_VERSION 41000

This seems fine to me (and follows GDAL too, no?). 

It’s not like we can have a proj.4 5.0 release ;)

Howard

From support at mnspoint.com  Wed Jul  8 02:51:51 2015
From: support at mnspoint.com (support at mnspoint.com)
Date: Wed, 08 Jul 2015 12:51:51 +0300
Subject: [Proj] Next major proj version: 4.10 ?
In-Reply-To: <201507071853.55057.even.rouault@spatialys.com>
References: <201507071853.55057.even.rouault@spatialys.com>
Message-ID: <c5f21b6d4d5d79a51fabfb614139ec99@mnspoint.com>

Hello,

please! do not generate versions unless something really done
and it is important! ..otherwise people have to update all
the time and time is money!

Regards: Janne.

-------------------------------------------------

Even Rouault kirjoitti 07.07.2015 19:53:
> Hi,
> 
> What will be the number of the next major proj version : 4.10 ?
> 
> I'm wondering so as to be able to close a ticket and set the 
> appropriate
> milestone (4.10 doesn't exist currently in github tickets)
> 
> Currently, we have:
> 
> #define PJ_VERSION 491
> 
> I guess that with 4.10 that should become :
> 
> /* MAJOR * 10000 + MINOR * 100 + MICRO */
> #define PJ_VERSION 41000
> 
> Even

-- 
MNS Support
NNS Master Navigator Software
Copyright © Sapper Oy
www.mnspoint.com
support at mnspoint.com


From support at mnspoint.com  Wed Jul  8 02:58:02 2015
From: support at mnspoint.com (support at mnspoint.com)
Date: Wed, 08 Jul 2015 12:58:02 +0300
Subject: [Proj] PROJ.4 and OpenMP
In-Reply-To: <201507022103.07766.even.rouault@spatialys.com>
References: <CAFemY3ZtXHFNzn-t1Z89rp99EuLFLhY3w7bK1gXQhq73oU_GCw@mail.gmail.com>
	<66767123d6b33fe9fb6105273739fb61@mnspoint.com>
	<201507022103.07766.even.rouault@spatialys.com>
Message-ID: <03feca80d4afdd9cd90fff846a367228@mnspoint.com>

Even Rouault kirjoitti 02.07.2015 22:03:
> Le jeudi 02 juillet 2015 20:07:49, support at mnspoint.com a écrit :
>> Hello Jose,
>> 
>> if I remember correctly all what Frank W. did was that he added a 
>> single
>> line containing a mutex object to the source code .. that was all.
> 
>> You
>> might want to run a file comparsion for the first "multithreaded" 
>> proj.4
>> and the version before it .. but just a single line was added I 
>> assume?!
>> 
>> So most likely what you should do is to use that mutex object .. there
>> should be lot of examples about how to use a mutex objects in the
>> network.
> 
> Janne,
> 
> Sorry but I must correct your above statement, since that's just
> misinformation and rather offending regarding FrankW's efforts in that 
> area.
> 
> The changes in proj to make it thread-safe involved touching a lot of 
> files,
> not just one. Just look at the first commit to add thread-safety :
> https://github.com/OSGeo/proj.4/commit/ec678c07c2acb83da8a2187c541b8a2e452dec4b
> And there have been several afterwards.
> 
> If you use the "new" proj API that accept a projCtx argument, no need 
> for a
> mutex.
> 
> Even

Only a single mutex object was added .. and that was all at that point. 
Sure it is possible that something more was done long time before that 
change .. but that was all that could be noticed comparing the versions 
before and after multithreading support!!

Janne.



From support at mnspoint.com  Wed Jul  8 03:08:00 2015
From: support at mnspoint.com (support at mnspoint.com)
Date: Wed, 08 Jul 2015 13:08:00 +0300
Subject: [Proj] Experiment to speed up proj.4 by 2 or more
In-Reply-To: <201507022124.15808.even.rouault@spatialys.com>
References: <201506231729.50179.even.rouault@spatialys.com>
	<201507021636.24932.even.rouault@spatialys.com>
	<ecb72acaa85b0f8732968725bd0975a1@mnspoint.com>
	<201507022124.15808.even.rouault@spatialys.com>
Message-ID: <329f75b0ffcc8dd7c5781cc417b988e0@mnspoint.com>

Even Rouault kirjoitti 02.07.2015 22:24:
>> 
>> you don't need any C++ just to optimize it .. the
>> compiler can optimize it as it is as well. We are using
>> C++ with Proj.4 and several other C libraries without
>> touching it .. it is NOT good idea to write it C++
>> since many people use it standard C. Or if you
>> want to write C++ the rename your product totally.
> 
> Please read my previous emails on the subject where I explain that the 
> C API
> would be preserved and C++ would be just a conveniency implementation 
> detail
> of proj.4 code to be able to easily have common sources that could be 
> compiled
> with support for non SIMD (as currently), SIMD with 2 doubles or SIMD 
> with 4
> doubles.
> 

I don't believe it would add anything much to the project..

>> 
>> >> the bad news is that even if the
>> >> performance
>> >> could be somewhat better in some speed aspects .. the overall system
>> >> performance
>> >> got worse and for example the screen updateing matters and interrupt
>> >> servicing
>> >> got worse! .. so basically there is not much to be gained taking that
>> >> road. And
>> >> we switched back not to optimize some important sections since the
>> >> overloading
>> >> of the cpu made the OS not any more work so efficiently and fluently.
>> >> (At least for some processors)
>> >>
>> >> The problem with very hard optimizations is that the results can be
>> >> very
>> >> strange
>> >> with different processors an operating systems. And since most of them
>> >> have only
>> >> been tested with rather "lame" programs by the manufacturers of
>> >> processors and
>> >> operating systems .. it is usually best not to try too much! .. or at
>> >> least
>> >> all combinations should be tested .. which might be very huge a task!
>> >
>> > Woo, that's news to me ! I'd be interested in links to articles, etc..
>> > that
>> > would document such behaviours.
>> > Most video codecs etc use SIMD instructions. libjpeg-turbo too. libc
>> > too I
>> > think for string operations (strlen, strcmp, etc...).
>> 
>> There are no direct links and no articles .. we are using mostly
>> Microsoft environments.
> 
> I'm still rather skeptical that SIMD instructions have the behaviour 
> you
> describe without more probative evidence. I've never seen that on Linux 
> for
> sure, and I'm not sure why the nature of the OS would matter for that.
> 

In that environment with that processor tested optimizing too heavily 
the code yielded worse response of the overall user interface .. meaning 
that the OS was not at its best with too much such instructions .. and 
it makes sense since those instructions clearly allocate all the CPU and 
it will no more response so fast to external interrupt loading.. (what 
you believe is your problem!)

>> 
>> yes, that is true. And the scanner should anyway be totally an
>> independent part which could be omitted if not required.
> 
> Agreed. There should be a way to turn off validation as it might impact
> performance (although if it is done correctly, that should hopefully be
> neglectable)
> 
>> 
>> I am not very much any open project man here .. I respect Gerald
>> Evenden's work and Frank Warmerdam's additions to it. I see Proj.4
>> mostly as a two man project (Gerald + Frank) .. and since it is very
>> usable as it is now I don't see much point to alter it.
> 
> I also respect very much their work, but that's not a reason for not 
> exploring
> further enhancements. And you can always use existing versions if you 
> don't
> need/like new features.
> 
> 
>> but it might as well be completely its
>> own package or library since it does not need to be tied with Proj.4 
>> to
>> function. You just feed your definition first to the scanner if 
>> required
>> and then to the proj.4 as normal if the scanner and/or the user said 
>> ok
>> after possible error messages etc.
> 
> This is somehow linked to which projection methods are supported by the
> library, and a few are added from time to time, so I'm not completely 
> sure
> that a validator could be externally added in a sustainable way.
> I think that would also require projection methods to explicitely 
> expose the
> parameters they support.

Much possible .. but nobody wants to tie it to the Proj.4 structure too 
closely since it just adds complexity .. and nobody wants that! (it is 
of course a different joke in the academic world where all possible 
complexity is welcome to trop the poor student fellows and take all the 
glory to one self, haha!)

Janne.



From jrobparsons at gmail.com  Thu Jul  9 20:48:03 2015
From: jrobparsons at gmail.com (Rob Parsons)
Date: Thu, 9 Jul 2015 23:48:03 -0400
Subject: [Proj] Verifying cs2cs arguments
Message-ID: <CAFvPsPDbzL4hsF49i6C5BqEMBhZi-Ap-azs-kYYSJS3PQMoPcA@mail.gmail.com>

Hello,

Is there a way to verify the arguments that will be passed to cs2cs.exe
before cs2cs.exe is used?

cs2cs.exe is used from inside a python script. Is there a related tool that
can verify the arguments that will be passed to cs2cs.exe?

Rob Parsons
Raleigh NC
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20150709/c8df65de/attachment.html>

From even.rouault at spatialys.com  Fri Jul 10 12:50:54 2015
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 10 Jul 2015 21:50:54 +0200
Subject: [Proj] Verifying cs2cs arguments
In-Reply-To: <CAFvPsPDbzL4hsF49i6C5BqEMBhZi-Ap-azs-kYYSJS3PQMoPcA@mail.gmail.com>
References: <CAFvPsPDbzL4hsF49i6C5BqEMBhZi-Ap-azs-kYYSJS3PQMoPcA@mail.gmail.com>
Message-ID: <201507102150.55035.even.rouault@spatialys.com>

Le vendredi 10 juillet 2015 05:48:03, Rob Parsons a écrit :
> Hello,
> 
> Is there a way to verify the arguments that will be passed to cs2cs.exe
> before cs2cs.exe is used?
> 
> cs2cs.exe is used from inside a python script. Is there a related tool that
> can verify the arguments that will be passed to cs2cs.exe?

Rob,

That doesn't directly answer your question (I believe the answer is no), but 
https://pypi.python.org/pypi/pyproj/ might be a better option for using proj 
from Python.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


