From j1 at jimenezshaw.com  Mon Nov  1 05:32:10 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 1 Nov 2021 13:32:10 +0100
Subject: [PROJ] Constant vertical offset
Message-ID: <CADRrdKuPT09gdiZqpmfUugJ5o1ysMjg7XGYG4vTN8Sh+6U3kEA@mail.gmail.com>

Hi

I want to make a transformation (at the end an
operation::CoordinateOperation) that replaces the geoid model with a local
constant value.

In some cases there is public grid file for a geoid model, but I can get a
(constant) undulation value (let's say 42.9m) in a (small) area of work. I
would like to include this undulation value in the transformation.

How can I do that? is there any pipeline option for that? (I do not see a
way in https://proj.org/operations/transformations/vgridshift.html) Or a
way to directly create the CoordinateOperation?

Thanks
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211101/8241a170/attachment.html>

From howard at hobu.co  Mon Nov  1 07:09:17 2021
From: howard at hobu.co (Howard Butler)
Date: Mon, 1 Nov 2021 09:09:17 -0500
Subject: [PROJ] PROJ 8.2.0RC1 & PROJ-data 1.8RC1
In-Reply-To: <CAH0YoEPAYnB9yhyAUBaJ8KRP+c5LM8gz11kZyktKj=1cy7eWCA@mail.gmail.com>
References: <138C5AA4-7782-4366-B42A-2012EC4C3DC7@gmail.com>
 <053DB977-7B52-4F69-88C3-85E1892E9E09@gmail.com>
 <CAH0YoEPAYnB9yhyAUBaJ8KRP+c5LM8gz11kZyktKj=1cy7eWCA@mail.gmail.com>
Message-ID: <C4C86472-1209-49EF-BE03-1C058A476C54@hobu.co>

+1 Howard

> On Oct 31, 2021, at 7:23 AM, Thomas Knudsen <knudsen.thomas at gmail.com> wrote:
> 
> +1 Thomas
> 
> s?n. 31. okt. 2021 10.27 skrev Kristian Evers <kristianevers at gmail.com>:
> No issues with the two release candidates have been reported, so I hereby motion
> that the candidates be promoted to final. I?ll start with my +1.
> 
> /Kristian
> 
> > On 26 Oct 2021, at 22:21, Kristian Evers <kristianevers at gmail.com> wrote:
> > 
> > All,
> > 
> > We?re closing in on the release date for the next PROJ version and hence I have prepared
> > release candidates for both PROJ 8.2.0 and PROJ-data 1.8.
> > 
> > The PROJ release includes a number of new features and bug fixes. See the release notes
> > below. The release candidates can be downloaded via the following links:
> > 
> > http://download.osgeo.org/proj/proj-8.2.0RC1.tar.gz
> > http://download.osgeo.org/proj/proj-8.2.0RC1.zip
> > 
> > The PROJ-data release adds two new grid files:
> > 
> > - SAGEOID2010, South African geoid
> > - GGM10, Mexican geoid model
> > 
> > and can be downloaded here:
> > 
> > http://download.osgeo.org/proj/proj-data-1.8RC1.tar.gz
> > http://download.osgeo.org/proj/proj-data-1.8RC1.zip
> > 
> > Please test the release candidates and report back your findings either here on the
> > mailing list in an issue on GitHub. Your feedback is appreciated.
> > 
> > Note that RFC 7 has been adopted which means that the 8.2 branch will be the last
> > which offer the option of building PROJ with autotools. From version 9.0.0 CMake
> > builds will be the only option. I encourage everyone to start adapting their build
> > workflows accordingly.
> > 
> > /Kristian
> > 
> > ??????????????????????????????
> > 
> > 8.2.0 Release Notes
> > -------------------
> > 
> > Announcements
> > -------------
> > 
> > From PROJ 9.0.0 and onwards CMake will be the only build system bundled
> > with the PROJ package. As a consequence support for Autotools builds will
> > stop when the 8.2 branch of PROJ reaches end of life. We encourage
> > everyone to adjust their build workflows as soon as possible and report
> > any discrepancies discovered between Autotools and CMake builds.
> > 
> > Details about the build system unification can be found in PROJ RFC 7.
> > 
> > 
> > Updates
> > -------
> > 
> > o Added the S2 projection (#2749)
> > 
> > o Added support for Degree Sign on input (#2791)
> > 
> > o ESRI WKT: add support for import/export of (non interrupted)
> >   Goode Homolosine (#2827)
> > 
> > o Make filemanager aware of UWP Win32 API (#2831)
> > 
> > o Add proj_create_conversion_pole_rotation_netcdf_cf_convention() to
> >   address netCDF datasets using a pole rotation method (#2835)
> > 
> > o Emit better debug message when a grid isn't found (#2838)
> > 
> > o Add support for GeodeticCRS using a Spherical planetocentric
> >   coordinate system (#2847)
> > 
> > o PROJJSON: support additional properties allowed in id object (version,
> >   authority_citation, uri) for parity with WKT2:2019 (#2850)
> > 
> > o Database layout modified to include "anchor" field to geodetic_datum and
> >   vertical_datum tables, consequently database layout version is increased
> >   to 1.2 (#2859)
> > 
> > o proj_factors(): accept P to be a projected CRS (#2868)
> > 
> > o Add IAU_2015 CRS definitions (#2876)
> > 
> > o CRS::extractGeodeticCRS(): implement for DerivedProjectedCRS (#2877)
> > 
> > o Added proj_trans_bounds() (#2882)
> > 
> > o CMake: add a BUILD_APPS to be able to disable build of all applications (#2895)
> > 
> > o CMake: generate invproj/invgeod binaries (symlinks on Unix, copy otherwise)
> >   (#2897)
> > 
> > o CMake build: add generate_wkt1_parser and generate_wkt2_parser manual
> >   target, and logic to detect when they must be run (#2900)
> > 
> > o Add fallback strategy for tinshift transform to use closest triangle for
> >   points not in any (#2907)
> > 
> > o Database: update to EPSG v10.038 (#2910)
> > 
> > o CMake: revise handling of symbol export and static builds (#2912)
> > 
> > Bug fixes
> > ---------
> > 
> > o Fix O(n^2) performance patterns where n is the number of steps of
> >   a pipeline (#2820)
> > 
> > o Detect ESRI WKT better in certain circumstances (#2823)
> > 
> > o Fix performance issue on pipeline instanciation of huge (broken)
> >   pipelines (#2824)
> > 
> > o Make sure to re-order projection parameters according to their canonical
> >   order if needed (#2842)
> > 
> > o Fix database access across fork() when SQLite3 doesn't use pread[64]() (#2845)
> > 
> > o Fix error in implementation of Inverse ellipsoidal orthographic projection
> >   that cause convergence to sometimes fail (#2853)
> > 
> > o Fix handling of edge-case coordinates in invers ortho ellipsoidal
> >   oblique (#2855)
> > 
> > o proj_normalize_for_visualization(): set input and output units when there
> >   are several alternative transformations (#2867)
> > 
> > o CRS::identify(): fix ignoring CS order when identifying a geodetic CRS
> >   by a PROJ string with just the ellipsoid (#2881)
> > 
> > o Fix CRS Equality with PROJ parameter order (#2887)
> > 
> > o WKT concatenated operation parsing: fix when a axis order reversal conversion
> >   is the first or last operation (#2891)
> > 
> > o WKT1 parser: recognize Lambert_Conformal_Conic as projection name for
> >   LCC 1SP or 2SP (#2893)
> > 
> > o CMake: Always build gie if testing is requested (#2899)
> > 
> > o Geographic 3D CRS: allow to export to WKT1:ESRI if only the GEOGCS is known
> >   (and thus extrapolating a VERTCS) (#2902)
> > 
> > o lib_proj.cmake: add a PROJ::proj alias and add BUILD_INTERFACE include
> >   directories, so that proj can be used as a subdirectory of a larger
> >   project (#2913)
> > 
> > 
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From even.rouault at spatialys.com  Mon Nov  1 09:01:19 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 1 Nov 2021 17:01:19 +0100
Subject: [PROJ] Constant vertical offset
In-Reply-To: <CADRrdKuPT09gdiZqpmfUugJ5o1ysMjg7XGYG4vTN8Sh+6U3kEA@mail.gmail.com>
References: <CADRrdKuPT09gdiZqpmfUugJ5o1ysMjg7XGYG4vTN8Sh+6U3kEA@mail.gmail.com>
Message-ID: <e22fa1c1-2595-d46a-2d57-a8f65a0734f8@spatialys.com>

Javier

Le 01/11/2021 ? 13:32, Javier Jimenez Shaw a ?crit?:
> Hi
>
> I want to make a transformation (at the end an 
> operation::CoordinateOperation) that replaces the geoid model with a 
> local constant value.
>
> In some cases there is public grid file for a geoid model, but I can 
> get a (constant) undulation value (let's say 42.9m) in a (small) area 
> of work. I would like to include this undulation value in the 
> transformation.
>
> How can I do that? is there any pipeline option for that? (I do not 
> see a way in 
> https://proj.org/operations/transformations/vgridshift.html 
> <https://proj.org/operations/transformations/vgridshift.html>) Or a 
> way to directly create the CoordinateOperation?

You can use the 
https://proj.org/operations/transformations/geogoffset.html with the dh 
parameter. This is for example used for transformation EPSG:15596

Even

>
> Thanks
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211101/418bda49/attachment.html>

From kristianevers at gmail.com  Mon Nov  1 10:44:56 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 1 Nov 2021 18:44:56 +0100
Subject: [PROJ] PROJ 8.2.0 and PROJ-data 1.8
Message-ID: <DB1A474B-722C-4ACE-BBF0-491BB2CD90C0@gmail.com>

All,

On behalf of the PROJ team it is my please to announce the release of PROJ 8.2.0 and PROJ-data 1.8.

The PROJ release includes a number of new features and bug fixes. See the release notes
below. The packaged files can be downloaded via the following links:

https://download.osgeo.org/proj/proj-8.2.0.tar.gz
https://download.osgeo.org/proj/proj-8.2.0.zip

The PROJ-data release adds two new grid files:

- SAGEOID2010, South African geoid
- GGM10, Mexican geoid model

and can be downloaded here:

https://download.osgeo.org/proj/proj-data-1.8.tar.gz
https://download.osgeo.org/proj/proj-data-1.8.zip


Note that RFC 7 has recently been adopted which means that the 8.2 branch will be the last
to offer the option of building PROJ with autotools. From version 9.0.0 CMake
builds will be the only option. We encourage everyone to start adapting their build
workflows accordingly.


??????????????????????????????

8.2.0 Release Notes
-------------------

Announcements
-------------

From PROJ 9.0.0 and onwards CMake will be the only build system bundled
with the PROJ package. As a consequence support for Autotools builds will
stop when the 8.2 branch of PROJ reaches end of life. We encourage
everyone to adjust their build workflows as soon as possible and report
any discrepancies discovered between Autotools and CMake builds.

Details about the build system unification can be found in PROJ RFC 7.


Updates
-------

o Added the S2 projection (#2749)

o Added support for Degree Sign on input (#2791)

o ESRI WKT: add support for import/export of (non interrupted)
  Goode Homolosine (#2827)

o Make filemanager aware of UWP Win32 API (#2831)

o Add proj_create_conversion_pole_rotation_netcdf_cf_convention() to
  address netCDF datasets using a pole rotation method (#2835)

o Emit better debug message when a grid isn't found (#2838)

o Add support for GeodeticCRS using a Spherical planetocentric
  coordinate system (#2847)

o PROJJSON: support additional properties allowed in id object (version,
  authority_citation, uri) for parity with WKT2:2019 (#2850)

o Database layout modified to include "anchor" field to geodetic_datum and
  vertical_datum tables, consequently database layout version is increased
  to 1.2 (#2859)

o proj_factors(): accept P to be a projected CRS (#2868)

o Add IAU_2015 CRS definitions (#2876)

o CRS::extractGeodeticCRS(): implement for DerivedProjectedCRS (#2877)

o Added proj_trans_bounds() (#2882)

o CMake: add a BUILD_APPS to be able to disable build of all applications (#2895)

o CMake: generate invproj/invgeod binaries (symlinks on Unix, copy otherwise)
  (#2897)

o CMake build: add generate_wkt1_parser and generate_wkt2_parser manual
  target, and logic to detect when they must be run (#2900)

o Add fallback strategy for tinshift transform to use closest triangle for
  points not in any (#2907)

o Database: update to EPSG v10.038 (#2910)

o CMake: revise handling of symbol export and static builds (#2912)

Bug fixes
---------

o Fix O(n^2) performance patterns where n is the number of steps of
  a pipeline (#2820)

o Detect ESRI WKT better in certain circumstances (#2823)

o Fix performance issue on pipeline instanciation of huge (broken)
  pipelines (#2824)

o Make sure to re-order projection parameters according to their canonical
  order if needed (#2842)

o Fix database access across fork() when SQLite3 doesn't use pread[64]() (#2845)

o Fix error in implementation of Inverse ellipsoidal orthographic projection
  that cause convergence to sometimes fail (#2853)

o Fix handling of edge-case coordinates in invers ortho ellipsoidal
  oblique (#2855)

o proj_normalize_for_visualization(): set input and output units when there
  are several alternative transformations (#2867)

o CRS::identify(): fix ignoring CS order when identifying a geodetic CRS
  by a PROJ string with just the ellipsoid (#2881)

o Fix CRS Equality with PROJ parameter order (#2887)

o WKT concatenated operation parsing: fix when a axis order reversal conversion
  is the first or last operation (#2891)

o WKT1 parser: recognize Lambert_Conformal_Conic as projection name for
  LCC 1SP or 2SP (#2893)

o CMake: Always build gie if testing is requested (#2899)

o Geographic 3D CRS: allow to export to WKT1:ESRI if only the GEOGCS is known
  (and thus extrapolating a VERTCS) (#2902)

o lib_proj.cmake: add a PROJ::proj alias and add BUILD_INTERFACE include
  directories, so that proj can be used as a subdirectory of a larger
  project (#2913)

From kristianevers at gmail.com  Mon Nov  1 10:46:26 2021
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 1 Nov 2021 18:46:26 +0100
Subject: [PROJ] PROJ 8.2.0RC1 & PROJ-data 1.8RC1
In-Reply-To: <C4C86472-1209-49EF-BE03-1C058A476C54@hobu.co>
References: <138C5AA4-7782-4366-B42A-2012EC4C3DC7@gmail.com>
 <053DB977-7B52-4F69-88C3-85E1892E9E09@gmail.com>
 <CAH0YoEPAYnB9yhyAUBaJ8KRP+c5LM8gz11kZyktKj=1cy7eWCA@mail.gmail.com>
 <C4C86472-1209-49EF-BE03-1C058A476C54@hobu.co>
Message-ID: <3F7444A9-4AC7-42C4-994A-F4F1A4557EDC@gmail.com>

Motion approved with +1?s from 

Kristian
Even
Charles
Thomas
Howard

The release was just announce.

/Kristian

> On 1 Nov 2021, at 15:09, Howard Butler <howard at hobu.co> wrote:
> 
> +1 Howard
> 
>> On Oct 31, 2021, at 7:23 AM, Thomas Knudsen <knudsen.thomas at gmail.com> wrote:
>> 
>> +1 Thomas
>> 
>> s?n. 31. okt. 2021 10.27 skrev Kristian Evers <kristianevers at gmail.com>:
>> No issues with the two release candidates have been reported, so I hereby motion
>> that the candidates be promoted to final. I?ll start with my +1.
>> 
>> /Kristian
>> 
>>> On 26 Oct 2021, at 22:21, Kristian Evers <kristianevers at gmail.com> wrote:
>>> 
>>> All,
>>> 
>>> We?re closing in on the release date for the next PROJ version and hence I have prepared
>>> release candidates for both PROJ 8.2.0 and PROJ-data 1.8.
>>> 
>>> The PROJ release includes a number of new features and bug fixes. See the release notes
>>> below. The release candidates can be downloaded via the following links:
>>> 
>>> http://download.osgeo.org/proj/proj-8.2.0RC1.tar.gz
>>> http://download.osgeo.org/proj/proj-8.2.0RC1.zip
>>> 
>>> The PROJ-data release adds two new grid files:
>>> 
>>> - SAGEOID2010, South African geoid
>>> - GGM10, Mexican geoid model
>>> 
>>> and can be downloaded here:
>>> 
>>> http://download.osgeo.org/proj/proj-data-1.8RC1.tar.gz
>>> http://download.osgeo.org/proj/proj-data-1.8RC1.zip
>>> 
>>> Please test the release candidates and report back your findings either here on the
>>> mailing list in an issue on GitHub. Your feedback is appreciated.
>>> 
>>> Note that RFC 7 has been adopted which means that the 8.2 branch will be the last
>>> which offer the option of building PROJ with autotools. From version 9.0.0 CMake
>>> builds will be the only option. I encourage everyone to start adapting their build
>>> workflows accordingly.
>>> 
>>> /Kristian
>>> 
>>> ??????????????????????????????
>>> 
>>> 8.2.0 Release Notes
>>> -------------------
>>> 
>>> Announcements
>>> -------------
>>> 
>>> From PROJ 9.0.0 and onwards CMake will be the only build system bundled
>>> with the PROJ package. As a consequence support for Autotools builds will
>>> stop when the 8.2 branch of PROJ reaches end of life. We encourage
>>> everyone to adjust their build workflows as soon as possible and report
>>> any discrepancies discovered between Autotools and CMake builds.
>>> 
>>> Details about the build system unification can be found in PROJ RFC 7.
>>> 
>>> 
>>> Updates
>>> -------
>>> 
>>> o Added the S2 projection (#2749)
>>> 
>>> o Added support for Degree Sign on input (#2791)
>>> 
>>> o ESRI WKT: add support for import/export of (non interrupted)
>>>  Goode Homolosine (#2827)
>>> 
>>> o Make filemanager aware of UWP Win32 API (#2831)
>>> 
>>> o Add proj_create_conversion_pole_rotation_netcdf_cf_convention() to
>>>  address netCDF datasets using a pole rotation method (#2835)
>>> 
>>> o Emit better debug message when a grid isn't found (#2838)
>>> 
>>> o Add support for GeodeticCRS using a Spherical planetocentric
>>>  coordinate system (#2847)
>>> 
>>> o PROJJSON: support additional properties allowed in id object (version,
>>>  authority_citation, uri) for parity with WKT2:2019 (#2850)
>>> 
>>> o Database layout modified to include "anchor" field to geodetic_datum and
>>>  vertical_datum tables, consequently database layout version is increased
>>>  to 1.2 (#2859)
>>> 
>>> o proj_factors(): accept P to be a projected CRS (#2868)
>>> 
>>> o Add IAU_2015 CRS definitions (#2876)
>>> 
>>> o CRS::extractGeodeticCRS(): implement for DerivedProjectedCRS (#2877)
>>> 
>>> o Added proj_trans_bounds() (#2882)
>>> 
>>> o CMake: add a BUILD_APPS to be able to disable build of all applications (#2895)
>>> 
>>> o CMake: generate invproj/invgeod binaries (symlinks on Unix, copy otherwise)
>>>  (#2897)
>>> 
>>> o CMake build: add generate_wkt1_parser and generate_wkt2_parser manual
>>>  target, and logic to detect when they must be run (#2900)
>>> 
>>> o Add fallback strategy for tinshift transform to use closest triangle for
>>>  points not in any (#2907)
>>> 
>>> o Database: update to EPSG v10.038 (#2910)
>>> 
>>> o CMake: revise handling of symbol export and static builds (#2912)
>>> 
>>> Bug fixes
>>> ---------
>>> 
>>> o Fix O(n^2) performance patterns where n is the number of steps of
>>>  a pipeline (#2820)
>>> 
>>> o Detect ESRI WKT better in certain circumstances (#2823)
>>> 
>>> o Fix performance issue on pipeline instanciation of huge (broken)
>>>  pipelines (#2824)
>>> 
>>> o Make sure to re-order projection parameters according to their canonical
>>>  order if needed (#2842)
>>> 
>>> o Fix database access across fork() when SQLite3 doesn't use pread[64]() (#2845)
>>> 
>>> o Fix error in implementation of Inverse ellipsoidal orthographic projection
>>>  that cause convergence to sometimes fail (#2853)
>>> 
>>> o Fix handling of edge-case coordinates in invers ortho ellipsoidal
>>>  oblique (#2855)
>>> 
>>> o proj_normalize_for_visualization(): set input and output units when there
>>>  are several alternative transformations (#2867)
>>> 
>>> o CRS::identify(): fix ignoring CS order when identifying a geodetic CRS
>>>  by a PROJ string with just the ellipsoid (#2881)
>>> 
>>> o Fix CRS Equality with PROJ parameter order (#2887)
>>> 
>>> o WKT concatenated operation parsing: fix when a axis order reversal conversion
>>>  is the first or last operation (#2891)
>>> 
>>> o WKT1 parser: recognize Lambert_Conformal_Conic as projection name for
>>>  LCC 1SP or 2SP (#2893)
>>> 
>>> o CMake: Always build gie if testing is requested (#2899)
>>> 
>>> o Geographic 3D CRS: allow to export to WKT1:ESRI if only the GEOGCS is known
>>>  (and thus extrapolating a VERTCS) (#2902)
>>> 
>>> o lib_proj.cmake: add a PROJ::proj alias and add BUILD_INTERFACE include
>>>  directories, so that proj can be used as a subdirectory of a larger
>>>  project (#2913)
>>> 
>>> 
>> 
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From archive at mail-archive.com  Mon Nov  1 13:13:20 2021
From: archive at mail-archive.com (archive at mail-archive.com)
Date: Mon, 1 Nov 2021 13:13:20 -0700
Subject: [PROJ] subscribe
Message-ID: <9adfa1a10b4a403bb8946797f1d77d1f@app-exch4.gov.yk.ca>


subscribe

From archive at mail-archive.com  Mon Nov  1 13:07:00 2021
From: archive at mail-archive.com (archive at mail-archive.com)
Date: Mon, 1 Nov 2021 13:07:00 -0700
Subject: [PROJ] subscribe
Message-ID: <fd7d1455d4954700b4bcf217c019e2e0@app-exch4.gov.yk.ca>


subscribe

From jmckenna at gatewaygeomatics.com  Tue Nov  2 05:39:38 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Tue, 2 Nov 2021 09:39:38 -0300
Subject: [PROJ] testing new archive search
Message-ID: <38385397-b35c-449e-d334-1f241ee5978f@gatewaygeomatics.com>

*please ignore*



-- 
Jeff McKenna
GatewayGeo: Developers of MS4W, MapServer Consulting and Training
co-founder of FOSS4G
http://gatewaygeo.com/

From jmckenna at gatewaygeomatics.com  Tue Nov  2 05:41:41 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Tue, 2 Nov 2021 09:41:41 -0300
Subject: [PROJ] testing new archive search
In-Reply-To: <38385397-b35c-449e-d334-1f241ee5978f@gatewaygeomatics.com>
References: <38385397-b35c-449e-d334-1f241ee5978f@gatewaygeomatics.com>
Message-ID: <2ca159f3-6002-b211-ba3b-8ea0a0253b9e@gatewaygeomatics.com>

Seems to be starting (I think it takes a day to archive all messages) : 
https://www.mail-archive.com/proj at lists.osgeo.org/

-jeff



On 2021-11-02 9:39 a.m., Jeff McKenna wrote:
> *please ignore*
> 
> 
> 


-- 
Jeff McKenna
GatewayGeo: Developers of MS4W, MapServer Consulting and Training
co-founder of FOSS4G
http://gatewaygeo.com/

From jmckenna at gatewaygeomatics.com  Tue Nov  2 05:46:06 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Tue, 2 Nov 2021 09:46:06 -0300
Subject: [PROJ] testing new archive search
In-Reply-To: <2ca159f3-6002-b211-ba3b-8ea0a0253b9e@gatewaygeomatics.com>
References: <38385397-b35c-449e-d334-1f241ee5978f@gatewaygeomatics.com>
 <2ca159f3-6002-b211-ba3b-8ea0a0253b9e@gatewaygeomatics.com>
Message-ID: <f7c41374-60fb-2b7c-075b-db8e2814b9ec@gatewaygeomatics.com>

Ah I have to submit an mbox file for past messages, willdo now.  Sorry 
for noise!

-jeff



On 2021-11-02 9:41 a.m., Jeff McKenna wrote:
> Seems to be starting (I think it takes a day to archive all messages) : 
> https://www.mail-archive.com/proj at lists.osgeo.org/
> 
> -jeff
> 
> 
> 
> On 2021-11-02 9:39 a.m., Jeff McKenna wrote:
>> *please ignore*
>>
>>
>>
> 
> 


-- 
Jeff McKenna
GatewayGeo: Developers of MS4W, MapServer Consulting and Training
co-founder of FOSS4G
http://gatewaygeo.com/

From strk at kbt.io  Tue Nov  9 15:02:33 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 10 Nov 2021 00:02:33 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if passing
 proj4 +proj from/to crs ?
Message-ID: <20211109230233.GE3584@c19>

I'm trying to obtain the *same* transformations from different
libproj versions (5.2.0 and 7.2.1) by passing the *same*
proj4 strings to the transformation, but I'm instead getting
different results.

In order to more easily test this I'm a small python script
using pyproj:

  http://strk.kbt.io/tmp/transform_test.py

The script projects coordinates 0,0 from EPSG:32040
to EPSG:3857, using the proj4 string found in 
PostGIS 3.1.4 spatial_ref_sys for those SRIDs.

On a machine (pyproj-3.2.1 using libproj-ce980207.so.22.1.1)
I'm getting these coordinates in output:

  (-11708740.522541871, 3209723.515103944)

On another machine (pyproj-2.6.1 using libproj.so.19)
I'm getting these coordinates:

  (-11708734.486616733, 3209717.223316072)

Can you think of a reason why I'd get different numbers ?
Would it be a regression for the libproj-ce980207.so.22.1.1
version to return different numbers ?

Please keep me in Cc in case of replies as I don't think I'm
receiving emails sent to this list.

--strk;

  Libre GIS consultant/developer
  https://strk.kbt.io/services.html

From even.rouault at spatialys.com  Tue Nov  9 15:48:47 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 10 Nov 2021 00:48:47 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <20211109230233.GE3584@c19>
References: <20211109230233.GE3584@c19>
Message-ID: <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>

Sandro,

there is a NAD27 to WGS84 datum shift involved. So this might depend on 
the transformations registered in the PROJ database of the version you 
use and the grids available.

Result (-11708740.522541871, 3209723.515103944) is suboptimal as it is 
the you get when no grids are used

Result (-11708734.486616733, 3209717.223316072) is the one using the 
conus / us_noaa_conus.tif grid

Whether PROJ networking is enabled (PROJ_NETWORK=ON) can influence the 
result (if it is set, then the conus grid will be used even if not 
installed locally)

Even

Le 10/11/2021 ? 00:02, Sandro Santilli a ?crit?:
> I'm trying to obtain the *same* transformations from different
> libproj versions (5.2.0 and 7.2.1) by passing the *same*
> proj4 strings to the transformation, but I'm instead getting
> different results.
>
> In order to more easily test this I'm a small python script
> using pyproj:
>
>    http://strk.kbt.io/tmp/transform_test.py
>
> The script projects coordinates 0,0 from EPSG:32040
> to EPSG:3857, using the proj4 string found in
> PostGIS 3.1.4 spatial_ref_sys for those SRIDs.
>
> On a machine (pyproj-3.2.1 using libproj-ce980207.so.22.1.1)
> I'm getting these coordinates in output:
>
>    (-11708740.522541871, 3209723.515103944)
>
> On another machine (pyproj-2.6.1 using libproj.so.19)
> I'm getting these coordinates:
>
>    (-11708734.486616733, 3209717.223316072)
>
> Can you think of a reason why I'd get different numbers ?
> Would it be a regression for the libproj-ce980207.so.22.1.1
> version to return different numbers ?
>
> Please keep me in Cc in case of replies as I don't think I'm
> receiving emails sent to this list.
>
> --strk;
>
>    Libre GIS consultant/developer
>    https://strk.kbt.io/services.html
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From strk at kbt.io  Wed Nov 10 06:35:37 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 10 Nov 2021 15:35:37 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
References: <20211109230233.GE3584@c19>
 <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
Message-ID: <20211110143537.GA11363@c19>

On Wed, Nov 10, 2021 at 12:48:47AM +0100, Even Rouault wrote:
> Sandro,
> 
> there is a NAD27 to WGS84 datum shift involved. So this might depend on the
> transformations registered in the PROJ database of the version you use and
> the grids available.
> 
> Result (-11708740.522541871, 3209723.515103944) is suboptimal as it is the
> you get when no grids are used
> 
> Result (-11708734.486616733, 3209717.223316072) is the one using the conus /
> us_noaa_conus.tif grid
> 
> Whether PROJ networking is enabled (PROJ_NETWORK=ON) can influence the
> result (if it is set, then the conus grid will be used even if not installed
> locally)

Thanks. I confirm moving /usr/share/proj/conus away gives me the
suboptimal result unless I set PROJ_NETWORK=ON env variable.

Now back to pyproj: the python module seems to ship with its own
libproj shared library, which does NOT find the "conus" grid.
It works fine with PROJ_NETWORK=ON but otherwise it gives the
suboptimal result.

How do I tell in which paths does such library look into,
and Which env variable (if any) would give that library instruction
as to where to look for the grids ?

--strk;

From even.rouault at spatialys.com  Wed Nov 10 06:39:07 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 10 Nov 2021 15:39:07 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <20211110143537.GA11363@c19>
References: <20211109230233.GE3584@c19>
 <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
 <20211110143537.GA11363@c19>
Message-ID: <d2841fad-5cd7-aeed-a5aa-b06147327fb4@spatialys.com>


> Thanks. I confirm moving /usr/share/proj/conus away gives me the
> suboptimal result unless I set PROJ_NETWORK=ON env variable.
>
> Now back to pyproj: the python module seems to ship with its own
> libproj shared library, which does NOT find the "conus" grid.
> It works fine with PROJ_NETWORK=ON but otherwise it gives the
> suboptimal result.
>
> How do I tell in which paths does such library look into,
> and Which env variable (if any) would give that library instruction
> as to where to look for the grids ?
More a question for https://github.com/pyproj4/pyproj
>
> --strk;

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From strk at kbt.io  Wed Nov 10 07:04:45 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 10 Nov 2021 16:04:45 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <d2841fad-5cd7-aeed-a5aa-b06147327fb4@spatialys.com>
References: <20211109230233.GE3584@c19>
 <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
 <20211110143537.GA11363@c19>
 <d2841fad-5cd7-aeed-a5aa-b06147327fb4@spatialys.com>
Message-ID: <20211110150445.GB11363@c19>

On Wed, Nov 10, 2021 at 03:39:07PM +0100, Even Rouault wrote:
> 
> > Thanks. I confirm moving /usr/share/proj/conus away gives me the
> > suboptimal result unless I set PROJ_NETWORK=ON env variable.
> > 
> > Now back to pyproj: the python module seems to ship with its own
> > libproj shared library, which does NOT find the "conus" grid.
> > It works fine with PROJ_NETWORK=ON but otherwise it gives the
> > suboptimal result.
> > 
> > How do I tell in which paths does such library look into,
> > and Which env variable (if any) would give that library instruction
> > as to where to look for the grids ?
> 
> More a question for https://github.com/pyproj4/pyproj

Well, I figured how to tell and found that the binary installed
by pyproj via pip is using PROJ 8.1.1 and a custom directory
for PROJ_DATA, and the directory does NOT have the "conus" grid.

Is this a known removal from PROJ 7.2.1 to PROJ 8.1.1
or is that a pyproj packaging bug to miss that ?

--strk;

From j1 at jimenezshaw.com  Wed Nov 10 10:12:08 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 10 Nov 2021 19:12:08 +0100
Subject: [PROJ] About geoid_model in proj.db
Message-ID: <CADRrdKsQvE-DY02N0WjmSFB8a9bEmTg22gMMhgZOR3_H=2i04Q@mail.gmail.com>

Hi

In proj.db there is a table "geoid_model" with the list of accepted
GEOIDMODEL tags, like GEOID18, GEOID12B, OSGM15 or GGM10 (I added that last
one because because it is used with NAVD88 height, for consistency)

https://github.com/OSGeo/PROJ/blob/04928472dbee772b6b31c78352dc486fb6543a91/data/sql/customizations.sql#L241

However there are many geoid grid files in PROJ-data that do not have a
geoid model name there.

What is the policy to set geoid models there in that table?
I already have a patch for that table with many of them, like AUSGeoid2020,
DNN, EGM08-REDNAP, RAF09, RAF18, NZGeoid2016 or SAGEOID2010. By the way, we
use them to "know" that there is a grid file for a vertical CRS using
https://proj.org/development/reference/functions.html#c.proj_get_geoid_models_from_database

Does it make sense to add that to the PROJ repository? If yes, would it
make sense that any new geoid grid file added in PROJ-data adds a geoid
model there?
See that this is the tag GEOIDMODEL in WKT2 (if I understood correctly) so
it should not change "so often".
I do not know how sensible it would be to changes in EPSG database.

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211110/a7e177a0/attachment.html>

From even.rouault at spatialys.com  Wed Nov 10 10:45:15 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 10 Nov 2021 19:45:15 +0100
Subject: [PROJ] About geoid_model in proj.db
In-Reply-To: <CADRrdKsQvE-DY02N0WjmSFB8a9bEmTg22gMMhgZOR3_H=2i04Q@mail.gmail.com>
References: <CADRrdKsQvE-DY02N0WjmSFB8a9bEmTg22gMMhgZOR3_H=2i04Q@mail.gmail.com>
Message-ID: <2428fb08-0e7f-9a9b-9168-1fa390d5c0b1@spatialys.com>


Le 10/11/2021 ? 19:12, Javier Jimenez Shaw a ?crit?:
> Hi
>
> In proj.db there is a table "geoid_model" with the list of accepted 
> GEOIDMODEL tags, like GEOID18, GEOID12B, OSGM15 or GGM10 (I added that 
> last one because because it is used with NAVD88 height, for consistency)
>
> https://github.com/OSGeo/PROJ/blob/04928472dbee772b6b31c78352dc486fb6543a91/data/sql/customizations.sql#L241 
> <https://github.com/OSGeo/PROJ/blob/04928472dbee772b6b31c78352dc486fb6543a91/data/sql/customizations.sql#L241>
>
> However there are many geoid grid files in PROJ-data that do not have 
> a geoid model name there.
>
> What is the policy to set geoid models there in that table?
That's a good question... I guess when there's a well accepted name for 
the geoid.
> I already have a patch for that table with many of them, like 
> AUSGeoid2020, DNN, EGM08-REDNAP, RAF09, RAF18, NZGeoid2016 or 
> SAGEOID2010. By the way, we use them to "know" that there is a grid 
> file for a vertical CRS using 
> https://proj.org/development/reference/functions.html#c.proj_get_geoid_models_from_database 
> <https://proj.org/development/reference/functions.html#c.proj_get_geoid_models_from_database>
This is a bit fragile. I'm not sure I have a solution with the existing 
API to propose though. You could issue a raw query to the database in 
the grid_transformation table with the source/target CRS being your 
vertical CRS.
>
> Does it make sense to add that to the PROJ repository? If yes, would 
> it make sense that any new geoid grid file added in PROJ-data adds a 
> geoid model there?
Not a big fan of this
> See that this is the tag GEOIDMODEL in WKT2 (if I understood 
> correctly) so it should not change "so often".
> I do not know how sensible it would be to changes in EPSG database.

We're actually using the GEOIDMODEL node of WKT2 differently from what 
EPSG does (I think I realized that after it was already implemented in PROJ)

In EPSG, GEOIDMODEL is just a reference to one or several 
transformations between the vertical CRS and geographic CRS. So the 
names are the ones of the transformations, like "WGS 84 to EGM2008 
height (1)".? The GEOIDMODEL[] node was initially included in the WKT2 
output, but EPSG changed their policy, and it is no longer in the output 
on epsg.org(I've already forgotten the reason). See 
https://epsg.org/crs_3855/EGM2008-height.html that references 2 geoid 
models but https://epsg.org/crs/wkt/id/3855 doesn't include them.


>
> Thanks.
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211110/c90a9fa8/attachment.html>

From mwtoews at gmail.com  Wed Nov 10 12:40:20 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 11 Nov 2021 09:40:20 +1300
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <20211110150445.GB11363@c19>
References: <20211109230233.GE3584@c19>
 <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
 <20211110143537.GA11363@c19>
 <d2841fad-5cd7-aeed-a5aa-b06147327fb4@spatialys.com>
 <20211110150445.GB11363@c19>
Message-ID: <CAM2FmMrVARnFBnx2zzVRh32qHYki=2Pt2eHu9nkD9SWYJ8JiMA@mail.gmail.com>

On Thu, 11 Nov 2021 at 04:04, Sandro Santilli <strk at kbt.io> wrote:
> Is this a known removal from PROJ 7.2.1 to PROJ 8.1.1
> or is that a pyproj packaging bug to miss that ?

One potential behaviour is that when PROJ_NETWORK is not defined, it
is assumed to be OFF.

Example with pyproj-3.0.1-cp36-cp36m-manylinux2010_x86_64.whl via pip:

import os
from pyproj.transformer import TransformerGroup
tg = TransformerGroup("EPSG:32040", "EPSG:3857")
# shows UserWarning: Best transformation is not available ...
print(tg)
# <TransformerGroup: best_available=False>
# - transformers: 7
# - unavailable_operations: 4

assert "PROJ_NETWORK" not in os.environ
os.environ["PROJ_NETWORK"] = "ON"
tg = TransformerGroup("EPSG:32040", "EPSG:3857")
print(tg)
# <TransformerGroup: best_available=True>
# - transformers: 11
# - unavailable_operations: 0
print(tg.transformers[0].transform(0, 0))
# (-11708734.486616932, 3209717.223316072)

The question is should PROJ default to PROJ_NETWORK=ON if the
PROJ_NETWORK configuration or environment variable is not defined? The
current behaviour is that it defaults to OFF behavior.

From even.rouault at spatialys.com  Wed Nov 10 12:45:07 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 10 Nov 2021 21:45:07 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <CAM2FmMrVARnFBnx2zzVRh32qHYki=2Pt2eHu9nkD9SWYJ8JiMA@mail.gmail.com>
References: <20211109230233.GE3584@c19>
 <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
 <20211110143537.GA11363@c19>
 <d2841fad-5cd7-aeed-a5aa-b06147327fb4@spatialys.com>
 <20211110150445.GB11363@c19>
 <CAM2FmMrVARnFBnx2zzVRh32qHYki=2Pt2eHu9nkD9SWYJ8JiMA@mail.gmail.com>
Message-ID: <5ea33565-5ada-32c2-bcd6-6caf87e8b810@spatialys.com>



> The question is should PROJ default to PROJ_NETWORK=ON if the
> PROJ_NETWORK configuration or environment variable is not defined? The
> current behaviour is that it defaults to OFF behavior.

When https://proj.org/community/rfc/rfc-4.html was discussed, a few 
people were against automatic network access, hence this default.

The default can also be changed by tuning proj.ini: 
https://proj.org/resource_files.html#proj-ini

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From strk at kbt.io  Wed Nov 10 13:12:51 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 10 Nov 2021 22:12:51 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <CAM2FmMrVARnFBnx2zzVRh32qHYki=2Pt2eHu9nkD9SWYJ8JiMA@mail.gmail.com>
References: <20211109230233.GE3584@c19>
 <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
 <20211110143537.GA11363@c19>
 <d2841fad-5cd7-aeed-a5aa-b06147327fb4@spatialys.com>
 <20211110150445.GB11363@c19>
 <CAM2FmMrVARnFBnx2zzVRh32qHYki=2Pt2eHu9nkD9SWYJ8JiMA@mail.gmail.com>
Message-ID: <20211110211251.GA23252@c19>

On Thu, Nov 11, 2021 at 09:40:20AM +1300, Mike Taves wrote:
> On Thu, 11 Nov 2021 at 04:04, Sandro Santilli <strk at kbt.io> wrote:
> > Is this a known removal from PROJ 7.2.1 to PROJ 8.1.1
> > or is that a pyproj packaging bug to miss that ?
> 
> One potential behaviour is that when PROJ_NETWORK is not defined, it
> is assumed to be OFF.

Was it ON by default in 7.2.1 ?

> Example with pyproj-3.0.1-cp36-cp36m-manylinux2010_x86_64.whl via pip:
> 
> import os
> from pyproj.transformer import TransformerGroup
> tg = TransformerGroup("EPSG:32040", "EPSG:3857")
> # shows UserWarning: Best transformation is not available ...
> print(tg)
> # <TransformerGroup: best_available=False>
> # - transformers: 7
> # - unavailable_operations: 4

My actual problem with the pyproj package is that a grid
which was available *offline*, locally, in 7.2.1, is NOT
shipped with the 8.1.1 libproj coming with the pyproj .whl
package. The grid is available, when I build pyproj against
the system-installed libproj package (and data).

A possible workaround could be using some env variable
to tell the pyproj bundled libproj to look in the system
directories for grid files...

--strk;

From strk at kbt.io  Wed Nov 10 13:14:06 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 10 Nov 2021 22:14:06 +0100
Subject: [PROJ] Am I supposed to get same results with libproj if
 passing proj4 +proj from/to crs ?
In-Reply-To: <5ea33565-5ada-32c2-bcd6-6caf87e8b810@spatialys.com>
References: <20211109230233.GE3584@c19>
 <a77dd20a-24b7-8da7-e81a-f67b80ee1ba4@spatialys.com>
 <20211110143537.GA11363@c19>
 <d2841fad-5cd7-aeed-a5aa-b06147327fb4@spatialys.com>
 <20211110150445.GB11363@c19>
 <CAM2FmMrVARnFBnx2zzVRh32qHYki=2Pt2eHu9nkD9SWYJ8JiMA@mail.gmail.com>
 <5ea33565-5ada-32c2-bcd6-6caf87e8b810@spatialys.com>
Message-ID: <20211110211406.GB23252@c19>

On Wed, Nov 10, 2021 at 09:45:07PM +0100, Even Rouault wrote:
> 
> 
> > The question is should PROJ default to PROJ_NETWORK=ON if the
> > PROJ_NETWORK configuration or environment variable is not defined? The
> > current behaviour is that it defaults to OFF behavior.
> 
> When https://proj.org/community/rfc/rfc-4.html was discussed, a few people
> were against automatic network access, hence this default.
> 
> The default can also be changed by tuning proj.ini:
> https://proj.org/resource_files.html#proj-ini

It makes sense to me for it to be OFF by default.
Now I wonder how we could turn it on in PostGIS when not having
access to the PostgreSQL environment (like amazon RDS...).
It screams for a GUC of some sort.

--strk;

From craig.destigter at koordinates.com  Sun Nov 14 12:31:02 2021
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Mon, 15 Nov 2021 09:31:02 +1300
Subject: [PROJ] Adjusting priorities in proj.db: grid vs helmert
 transformations
In-Reply-To: <CAF1M8pdFpGwoKuRpU3GHx2g_bDo=iLO86cT-07TW-hEOJ3-ebg@mail.gmail.com>
References: <CAF1M8pdFpGwoKuRpU3GHx2g_bDo=iLO86cT-07TW-hEOJ3-ebg@mail.gmail.com>
Message-ID: <CAF1M8pcH_kTMqT=4_PYYN4sFC=P8K7HpTcLHoG6ZCVy4R4CTTA@mail.gmail.com>

Hey folks

We're trying to adjust proj to use a specific transformation between two
CRSes *by default* (ie. we don't want our calling software to have to be
explicit about which to use, since there are several places we're calling
PROJ from and we'd like to make them automatically consistent)

Stock proj 8.1.1 gives us these transform choices:

> $ PROJ_NETWORK=ON projinfo -s EPSG:4283 -t EPSG:7844 --spatial-test
intersects --summary
> Candidate operations found: 5
>
> EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore.
> DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia - Australian Capital Territory; New South Wales; Northern Territory; Queensland; South Australia; Tasmania; Western Australia; Victoria.
> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.05 m, Australia - Australian Capital Territory; New South Wales; Northern Territory; Queensland; South Australia; Tasmania; Western Australia; Victoria.
> ...


The one we want is DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), which is
third in the list, and thus not chosen by default.

Aiming to bump that to the top of the list, we modified our proj.db build
to add this SQL:

> -- When transforming from GDA94 to GDA2020,
> -- use the distortion+conformal grid in preference to the conformal-only
grid.
> UPDATE grid_transformation
> SET accuracy = 0.0099
> WHERE auth_name = 'EPSG' AND code = 8447;

We expected this to bump the transform to the top of the list. It did bump
up by one slot, above the other grid-based transform (EPSG:8446). However,
it's still below the helmert transformation (EPSG:8048):

> Candidate operations found: 5
> EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe
Island, Macquarie Island, Ashmore and Cartier Islands, Christmas
Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and
offshore.
> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0099 m, Australia -
Australian Capital Territory; New South Wales; Northern Territory;
Queensland; South Australia; Tasmania; Western Australia; Victoria.
> DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia -
Australian Capital Territory; New South Wales; Northern Territory;
Queensland; South Australia; Tasmania; Western Australia; Victoria.
> ...


I couldn't find anything documenting that PROJ prefers Helmert transforms
over grid-based ones - merely that it prefers operations with defined
accuracy, and then prefers transforms in order of accuracy. In which case I
would have expected it to choose EPSG:8447 over EPSG:8048 now that we've
hacked the accuracy number.

Interestingly, setting the accuracy of the Helmert transform to NULL *did*
fix this:

> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0499 m, Australia -
Australian Capital Territory; New South Wales; Northern Territory;
Queensland; South Australia; Tasmania; Western Australia; Victoria.
> ...
> EPSG:8048, GDA94 to GDA2020 (1), unknown accuracy, Australia including
Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands,
Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore
and offshore.


So my questions are:

1. Is setting the accuracy of EPSG:8048 to NULL a bad idea? We'll still
want to use EPSG:8048 as an offshore fallback.
2. Any idea why PROJ is still prioritising EPSG:8048 after our first tweak?
3. Is there a better way to accomplish this reprioritisation?

Thanks a bunch!

-- 
Regards,
Craig

Platform Engineer
Koordinates

+64 21 256 9488 / koordinates.com / @koordinates

From knudsen.thomas at gmail.com  Mon Nov 15 00:42:53 2021
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Mon, 15 Nov 2021 09:42:53 +0100
Subject: [PROJ] Adjusting priorities in proj.db: grid vs helmert
 transformations
In-Reply-To: <CAF1M8pcH_kTMqT=4_PYYN4sFC=P8K7HpTcLHoG6ZCVy4R4CTTA@mail.gmail.com>
References: <CAF1M8pdFpGwoKuRpU3GHx2g_bDo=iLO86cT-07TW-hEOJ3-ebg@mail.gmail.com>
 <CAF1M8pcH_kTMqT=4_PYYN4sFC=P8K7HpTcLHoG6ZCVy4R4CTTA@mail.gmail.com>
Message-ID: <CAH0YoEMe7OqkURjMdH2YSzR6MYnapO=5heB5tG0y5hrYnZ4J3w@mail.gmail.com>

When you know which transformation you want, you probably shouldn't use
PROJ's search logic to find it, but just use the PROJ-string implementation
of the transformation directly with the PROJ cct utility.

Den s?n. 14. nov. 2021 kl. 21.31 skrev Craig de Stigter <
craig.destigter at koordinates.com>:

> Hey folks
>
> We're trying to adjust proj to use a specific transformation between two
> CRSes *by default* (ie. we don't want our calling software to have to be
> explicit about which to use, since there are several places we're calling
> PROJ from and we'd like to make them automatically consistent)
>
> Stock proj 8.1.1 gives us these transform choices:
>
> > $ PROJ_NETWORK=ON projinfo -s EPSG:4283 -t EPSG:7844 --spatial-test
> intersects --summary
> > Candidate operations found: 5
> >
> > EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe
> Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island,
> Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore.
> > DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
> > DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.05 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
> > ...
>
>
> The one we want is DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), which is
> third in the list, and thus not chosen by default.
>
> Aiming to bump that to the top of the list, we modified our proj.db build
> to add this SQL:
>
> > -- When transforming from GDA94 to GDA2020,
> > -- use the distortion+conformal grid in preference to the conformal-only
> grid.
> > UPDATE grid_transformation
> > SET accuracy = 0.0099
> > WHERE auth_name = 'EPSG' AND code = 8447;
>
> We expected this to bump the transform to the top of the list. It did bump
> up by one slot, above the other grid-based transform (EPSG:8446). However,
> it's still below the helmert transformation (EPSG:8048):
>
> > Candidate operations found: 5
> > EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe
> Island, Macquarie Island, Ashmore and Cartier Islands, Christmas
> Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and
> offshore.
> > DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0099 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
> > DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
> > ...
>
>
> I couldn't find anything documenting that PROJ prefers Helmert transforms
> over grid-based ones - merely that it prefers operations with defined
> accuracy, and then prefers transforms in order of accuracy. In which case I
> would have expected it to choose EPSG:8447 over EPSG:8048 now that we've
> hacked the accuracy number.
>
> Interestingly, setting the accuracy of the Helmert transform to NULL *did*
> fix this:
>
> > DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0499 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
> > ...
> > EPSG:8048, GDA94 to GDA2020 (1), unknown accuracy, Australia including
> Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands,
> Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore
> and offshore.
>
>
> So my questions are:
>
> 1. Is setting the accuracy of EPSG:8048 to NULL a bad idea? We'll still
> want to use EPSG:8048 as an offshore fallback.
> 2. Any idea why PROJ is still prioritising EPSG:8048 after our first tweak?
> 3. Is there a better way to accomplish this reprioritisation?
>
> Thanks a bunch!
>
> --
> Regards,
> Craig
>
> Platform Engineer
> Koordinates
>
> +64 21 256 9488 / koordinates.com / @koordinates
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211115/f8c147da/attachment.html>

From knudsen.thomas at gmail.com  Mon Nov 15 01:00:43 2021
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Mon, 15 Nov 2021 10:00:43 +0100
Subject: [PROJ] Adjusting priorities in proj.db: grid vs helmert
 transformations
In-Reply-To: <CAH0YoEMe7OqkURjMdH2YSzR6MYnapO=5heB5tG0y5hrYnZ4J3w@mail.gmail.com>
References: <CAF1M8pdFpGwoKuRpU3GHx2g_bDo=iLO86cT-07TW-hEOJ3-ebg@mail.gmail.com>
 <CAF1M8pcH_kTMqT=4_PYYN4sFC=P8K7HpTcLHoG6ZCVy4R4CTTA@mail.gmail.com>
 <CAH0YoEMe7OqkURjMdH2YSzR6MYnapO=5heB5tG0y5hrYnZ4J3w@mail.gmail.com>
Message-ID: <CAH0YoEMiigWqUSt3YBhbwu40i2MPtCBL0TWsrU5odfFteBvULQ@mail.gmail.com>

... or, from your own code: use the API calls proj_create(...) +
proj_trans(...) or proj_trans_generic(...)
(see https://proj.org/development/reference/functions.html )

Den man. 15. nov. 2021 kl. 09.42 skrev Thomas Knudsen <
knudsen.thomas at gmail.com>:

>
> When you know which transformation you want, you probably shouldn't use
> PROJ's search logic to find it, but just use the PROJ-string implementation
> of the transformation directly with the PROJ cct utility.
>
> Den s?n. 14. nov. 2021 kl. 21.31 skrev Craig de Stigter <
> craig.destigter at koordinates.com>:
>
>> Hey folks
>>
>> We're trying to adjust proj to use a specific transformation between two
>> CRSes *by default* (ie. we don't want our calling software to have to be
>> explicit about which to use, since there are several places we're calling
>> PROJ from and we'd like to make them automatically consistent)
>>
>> Stock proj 8.1.1 gives us these transform choices:
>>
>> > $ PROJ_NETWORK=ON projinfo -s EPSG:4283 -t EPSG:7844 --spatial-test
>> intersects --summary
>> > Candidate operations found: 5
>> >
>> > EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe
>> Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island,
>> Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore.
>> > DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia -
>> Australian Capital Territory; New South Wales; Northern Territory;
>> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> > DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.05 m, Australia -
>> Australian Capital Territory; New South Wales; Northern Territory;
>> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> > ...
>>
>>
>> The one we want is DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), which is
>> third in the list, and thus not chosen by default.
>>
>> Aiming to bump that to the top of the list, we modified our proj.db build
>> to add this SQL:
>>
>> > -- When transforming from GDA94 to GDA2020,
>> > -- use the distortion+conformal grid in preference to the conformal-only
>> grid.
>> > UPDATE grid_transformation
>> > SET accuracy = 0.0099
>> > WHERE auth_name = 'EPSG' AND code = 8447;
>>
>> We expected this to bump the transform to the top of the list. It did bump
>> up by one slot, above the other grid-based transform (EPSG:8446). However,
>> it's still below the helmert transformation (EPSG:8048):
>>
>> > Candidate operations found: 5
>> > EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe
>> Island, Macquarie Island, Ashmore and Cartier Islands, Christmas
>> Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and
>> offshore.
>> > DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0099 m, Australia -
>> Australian Capital Territory; New South Wales; Northern Territory;
>> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> > DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia -
>> Australian Capital Territory; New South Wales; Northern Territory;
>> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> > ...
>>
>>
>> I couldn't find anything documenting that PROJ prefers Helmert transforms
>> over grid-based ones - merely that it prefers operations with defined
>> accuracy, and then prefers transforms in order of accuracy. In which case
>> I
>> would have expected it to choose EPSG:8447 over EPSG:8048 now that we've
>> hacked the accuracy number.
>>
>> Interestingly, setting the accuracy of the Helmert transform to NULL *did*
>> fix this:
>>
>> > DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0499 m, Australia -
>> Australian Capital Territory; New South Wales; Northern Territory;
>> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> > ...
>> > EPSG:8048, GDA94 to GDA2020 (1), unknown accuracy, Australia including
>> Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands,
>> Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore
>> and offshore.
>>
>>
>> So my questions are:
>>
>> 1. Is setting the accuracy of EPSG:8048 to NULL a bad idea? We'll still
>> want to use EPSG:8048 as an offshore fallback.
>> 2. Any idea why PROJ is still prioritising EPSG:8048 after our first
>> tweak?
>> 3. Is there a better way to accomplish this reprioritisation?
>>
>> Thanks a bunch!
>>
>> --
>> Regards,
>> Craig
>>
>> Platform Engineer
>> Koordinates
>>
>> +64 21 256 9488 / koordinates.com / @koordinates
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211115/5f773186/attachment-0001.html>

From even.rouault at spatialys.com  Mon Nov 15 03:59:45 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 15 Nov 2021 12:59:45 +0100
Subject: [PROJ] Adjusting priorities in proj.db: grid vs helmert
 transformations
In-Reply-To: <CAF1M8pcH_kTMqT=4_PYYN4sFC=P8K7HpTcLHoG6ZCVy4R4CTTA@mail.gmail.com>
References: <CAF1M8pdFpGwoKuRpU3GHx2g_bDo=iLO86cT-07TW-hEOJ3-ebg@mail.gmail.com>
 <CAF1M8pcH_kTMqT=4_PYYN4sFC=P8K7HpTcLHoG6ZCVy4R4CTTA@mail.gmail.com>
Message-ID: <b4858188-ace9-4a93-1d65-81a503cfeed5@spatialys.com>

Craig,

The sorting algorithm of the operations returned by projinfo is given at 
https://proj.org/operations/operations_computation.html#filtering-and-sorting-of-coordinate-operations

I believe you run here in point 8 "consider as more relevant an 
operation whose area of use is larger" that comes before point 9 
"consider as more relevant an operation that has a better accuracy.". 
The rationale is that, until you know exactly which point to transform, 
an operation whose area of use is larger than another one is a better 
default.

But... if you use cs2cs or proj_trans() on the result of 
proj_create_crs_from_crs(), among the candidate operations, they will 
prefer the ones that can be instantiated (that is, in particular, whose 
grids are available) and that have a better accuracy.

Did you actually try with cs2cs ? With your modified record, 
au_icsm_GDA94_GDA2020_conformal_and_distortion.tif is used for me when 
using -35 120 for example.

$ echo -35 120 | PROJ_DEBUG=2 PROJ_NETWORK=ON PROJ_LIB=data src/cs2cs 
EPSG:4283 EPSG:7844
pj_open_lib(proj.db): call fopen(data/proj.db) - succeeded
pj_open_lib(proj.ini): call fopen(data/proj.ini) - succeeded
Using coordinate operation GDA94 to GDA2020 (2)
pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call 
fopen(data/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - failed
pj_open_lib(GDA94_GDA2020_conformal_and_distortion.gsb): call 
fopen(data/GDA94_GDA2020_conformal_and_distortion.gsb) - failed
Using 
https://cdn.proj.org/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
34d59'59.951"S??? 120d0'0.037"E 0.000

And if you add for example --bbox 120,-40,130,-30 to the projinfo 
invokation to restrict a bit the area of use, you should see the order 
you expect.

Setting an operation accuracy to NULL / unknown makes it less prioritary 
than operations that have a known accuracy (point 6 of the above algorithm)

Even

Le 14/11/2021 ? 21:31, Craig de Stigter a ?crit?:
> Hey folks
>
> We're trying to adjust proj to use a specific transformation between two
> CRSes *by default* (ie. we don't want our calling software to have to be
> explicit about which to use, since there are several places we're calling
> PROJ from and we'd like to make them automatically consistent)
>
> Stock proj 8.1.1 gives us these transform choices:
>
>> $ PROJ_NETWORK=ON projinfo -s EPSG:4283 -t EPSG:7844 --spatial-test
> intersects --summary
>> Candidate operations found: 5
>>
>> EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore.
>> DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia - Australian Capital Territory; New South Wales; Northern Territory; Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.05 m, Australia - Australian Capital Territory; New South Wales; Northern Territory; Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> ...
>
> The one we want is DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), which is
> third in the list, and thus not chosen by default.
>
> Aiming to bump that to the top of the list, we modified our proj.db build
> to add this SQL:
>
>> -- When transforming from GDA94 to GDA2020,
>> -- use the distortion+conformal grid in preference to the conformal-only
> grid.
>> UPDATE grid_transformation
>> SET accuracy = 0.0099
>> WHERE auth_name = 'EPSG' AND code = 8447;
> We expected this to bump the transform to the top of the list. It did bump
> up by one slot, above the other grid-based transform (EPSG:8446). However,
> it's still below the helmert transformation (EPSG:8048):
>
>> Candidate operations found: 5
>> EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe
> Island, Macquarie Island, Ashmore and Cartier Islands, Christmas
> Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and
> offshore.
>> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0099 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> ...
>
> I couldn't find anything documenting that PROJ prefers Helmert transforms
> over grid-based ones - merely that it prefers operations with defined
> accuracy, and then prefers transforms in order of accuracy. In which case I
> would have expected it to choose EPSG:8447 over EPSG:8048 now that we've
> hacked the accuracy number.
>
> Interestingly, setting the accuracy of the Helmert transform to NULL *did*
> fix this:
>
>> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0499 m, Australia -
> Australian Capital Territory; New South Wales; Northern Territory;
> Queensland; South Australia; Tasmania; Western Australia; Victoria.
>> ...
>> EPSG:8048, GDA94 to GDA2020 (1), unknown accuracy, Australia including
> Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands,
> Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore
> and offshore.
>
>
> So my questions are:
>
> 1. Is setting the accuracy of EPSG:8048 to NULL a bad idea? We'll still
> want to use EPSG:8048 as an offshore fallback.
> 2. Any idea why PROJ is still prioritising EPSG:8048 after our first tweak?
> 3. Is there a better way to accomplish this reprioritisation?
>
> Thanks a bunch!
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From craig.destigter at koordinates.com  Mon Nov 15 12:07:16 2021
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Tue, 16 Nov 2021 09:07:16 +1300
Subject: [PROJ] Adjusting priorities in proj.db: grid vs helmert
 transformations
In-Reply-To: <b4858188-ace9-4a93-1d65-81a503cfeed5@spatialys.com>
References: <CAF1M8pdFpGwoKuRpU3GHx2g_bDo=iLO86cT-07TW-hEOJ3-ebg@mail.gmail.com>
 <CAF1M8pcH_kTMqT=4_PYYN4sFC=P8K7HpTcLHoG6ZCVy4R4CTTA@mail.gmail.com>
 <b4858188-ace9-4a93-1d65-81a503cfeed5@spatialys.com>
Message-ID: <CAF1M8pfTdNqLKfj-MZp7nszFbgAVYp0QKSfc3nR-=MofOT18Ew@mail.gmail.com>

> When you know which transformation you want, you probably shouldn't use PROJ's search logic to find it

We're aware of that, though the project we're implementing involves
several separate subsystems and we don't control all the layers, so
we're unable to just call specific proj functions. So we're after a
way to get PROJ to use the transformation we want by default.


> I believe you run here in point 8 "consider as more relevant an operation whose area of use is larger" that comes before point 9 "consider as more relevant an operation that has a better accuracy.".

aha, this makes sense! I'm not sure why I missed this when reading those docs.

I can confirm that cs2cs gives me the right results, now that I'm trying it.

Thanks for taking the time to reply :)

Craig



On Tue, 16 Nov 2021 at 00:59, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Craig,
>
> The sorting algorithm of the operations returned by projinfo is given at
> https://proj.org/operations/operations_computation.html#filtering-and-sorting-of-coordinate-operations
>
> I believe you run here in point 8 "consider as more relevant an
> operation whose area of use is larger" that comes before point 9
> "consider as more relevant an operation that has a better accuracy.".
> The rationale is that, until you know exactly which point to transform,
> an operation whose area of use is larger than another one is a better
> default.
>
> But... if you use cs2cs or proj_trans() on the result of
> proj_create_crs_from_crs(), among the candidate operations, they will
> prefer the ones that can be instantiated (that is, in particular, whose
> grids are available) and that have a better accuracy.
>
> Did you actually try with cs2cs ? With your modified record,
> au_icsm_GDA94_GDA2020_conformal_and_distortion.tif is used for me when
> using -35 120 for example.
>
> $ echo -35 120 | PROJ_DEBUG=2 PROJ_NETWORK=ON PROJ_LIB=data src/cs2cs
> EPSG:4283 EPSG:7844
> pj_open_lib(proj.db): call fopen(data/proj.db) - succeeded
> pj_open_lib(proj.ini): call fopen(data/proj.ini) - succeeded
> Using coordinate operation GDA94 to GDA2020 (2)
> pj_open_lib(au_icsm_GDA94_GDA2020_conformal_and_distortion.tif): call
> fopen(data/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif) - failed
> pj_open_lib(GDA94_GDA2020_conformal_and_distortion.gsb): call
> fopen(data/GDA94_GDA2020_conformal_and_distortion.gsb) - failed
> Using
> https://cdn.proj.org/au_icsm_GDA94_GDA2020_conformal_and_distortion.tif
> 34d59'59.951"S    120d0'0.037"E 0.000
>
> And if you add for example --bbox 120,-40,130,-30 to the projinfo
> invokation to restrict a bit the area of use, you should see the order
> you expect.
>
> Setting an operation accuracy to NULL / unknown makes it less prioritary
> than operations that have a known accuracy (point 6 of the above algorithm)
>
> Even
>
> Le 14/11/2021 ? 21:31, Craig de Stigter a ?crit :
> > Hey folks
> >
> > We're trying to adjust proj to use a specific transformation between two
> > CRSes *by default* (ie. we don't want our calling software to have to be
> > explicit about which to use, since there are several places we're calling
> > PROJ from and we'd like to make them automatically consistent)
> >
> > Stock proj 8.1.1 gives us these transform choices:
> >
> >> $ PROJ_NETWORK=ON projinfo -s EPSG:4283 -t EPSG:7844 --spatial-test
> > intersects --summary
> >> Candidate operations found: 5
> >>
> >> EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands, Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and offshore.
> >> DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia - Australian Capital Territory; New South Wales; Northern Territory; Queensland; South Australia; Tasmania; Western Australia; Victoria.
> >> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.05 m, Australia - Australian Capital Territory; New South Wales; Northern Territory; Queensland; South Australia; Tasmania; Western Australia; Victoria.
> >> ...
> >
> > The one we want is DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), which is
> > third in the list, and thus not chosen by default.
> >
> > Aiming to bump that to the top of the list, we modified our proj.db build
> > to add this SQL:
> >
> >> -- When transforming from GDA94 to GDA2020,
> >> -- use the distortion+conformal grid in preference to the conformal-only
> > grid.
> >> UPDATE grid_transformation
> >> SET accuracy = 0.0099
> >> WHERE auth_name = 'EPSG' AND code = 8447;
> > We expected this to bump the transform to the top of the list. It did bump
> > up by one slot, above the other grid-based transform (EPSG:8446). However,
> > it's still below the helmert transformation (EPSG:8048):
> >
> >> Candidate operations found: 5
> >> EPSG:8048, GDA94 to GDA2020 (1), 0.01 m, Australia including Lord Howe
> > Island, Macquarie Island, Ashmore and Cartier Islands, Christmas
> > Island, Cocos (Keeling) Islands, Norfolk Island. All onshore and
> > offshore.
> >> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0099 m, Australia -
> > Australian Capital Territory; New South Wales; Northern Territory;
> > Queensland; South Australia; Tasmania; Western Australia; Victoria.
> >> DERIVED_FROM(EPSG):8446, GDA94 to GDA2020 (3), 0.05 m, Australia -
> > Australian Capital Territory; New South Wales; Northern Territory;
> > Queensland; South Australia; Tasmania; Western Australia; Victoria.
> >> ...
> >
> > I couldn't find anything documenting that PROJ prefers Helmert transforms
> > over grid-based ones - merely that it prefers operations with defined
> > accuracy, and then prefers transforms in order of accuracy. In which case I
> > would have expected it to choose EPSG:8447 over EPSG:8048 now that we've
> > hacked the accuracy number.
> >
> > Interestingly, setting the accuracy of the Helmert transform to NULL *did*
> > fix this:
> >
> >> DERIVED_FROM(EPSG):8447, GDA94 to GDA2020 (2), 0.0499 m, Australia -
> > Australian Capital Territory; New South Wales; Northern Territory;
> > Queensland; South Australia; Tasmania; Western Australia; Victoria.
> >> ...
> >> EPSG:8048, GDA94 to GDA2020 (1), unknown accuracy, Australia including
> > Lord Howe Island, Macquarie Island, Ashmore and Cartier Islands,
> > Christmas Island, Cocos (Keeling) Islands, Norfolk Island. All onshore
> > and offshore.
> >
> >
> > So my questions are:
> >
> > 1. Is setting the accuracy of EPSG:8048 to NULL a bad idea? We'll still
> > want to use EPSG:8048 as an offshore fallback.
> > 2. Any idea why PROJ is still prioritising EPSG:8048 after our first tweak?
> > 3. Is there a better way to accomplish this reprioritisation?
> >
> > Thanks a bunch!
> >
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>


-- 
Regards,
Craig

Platform Engineer
Koordinates

+64 21 256 9488 / koordinates.com / @koordinates

From j1 at jimenezshaw.com  Fri Nov 19 01:19:14 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 19 Nov 2021 10:19:14 +0100
Subject: [PROJ] testing new archive search
In-Reply-To: <f7c41374-60fb-2b7c-075b-db8e2814b9ec@gatewaygeomatics.com>
References: <38385397-b35c-449e-d334-1f241ee5978f@gatewaygeomatics.com>
 <2ca159f3-6002-b211-ba3b-8ea0a0253b9e@gatewaygeomatics.com>
 <f7c41374-60fb-2b7c-075b-db8e2814b9ec@gatewaygeomatics.com>
Message-ID: <CADRrdKut3dSAYDoz_QGg1cH0ovSgT64MzFPxCRj56e0dPBGf2w@mail.gmail.com>

Hi Jeff,

Have you done it? there is no history in
https://www.mail-archive.com/proj at lists.osgeo.org/

Thanks,
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Tue, 2 Nov 2021 at 13:46, Jeff McKenna <jmckenna at gatewaygeomatics.com>
wrote:

> Ah I have to submit an mbox file for past messages, willdo now.  Sorry
> for noise!
>
> -jeff
>
>
>
> On 2021-11-02 9:41 a.m., Jeff McKenna wrote:
> > Seems to be starting (I think it takes a day to archive all messages) :
> > https://www.mail-archive.com/proj at lists.osgeo.org/
> >
> > -jeff
> >
> >
> >
> > On 2021-11-02 9:39 a.m., Jeff McKenna wrote:
> >> *please ignore*
> >>
> >>
> >>
> >
> >
>
>
> --
> Jeff McKenna
> GatewayGeo: Developers of MS4W, MapServer Consulting and Training
> co-founder of FOSS4G
> http://gatewaygeo.com/
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211119/2ad6a50c/attachment.html>

From lnicola at dend.ro  Fri Nov 19 01:22:14 2021
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Fri, 19 Nov 2021 11:22:14 +0200
Subject: [PROJ] testing new archive search
In-Reply-To: <CADRrdKut3dSAYDoz_QGg1cH0ovSgT64MzFPxCRj56e0dPBGf2w@mail.gmail.com>
References: <38385397-b35c-449e-d334-1f241ee5978f@gatewaygeomatics.com>
 <2ca159f3-6002-b211-ba3b-8ea0a0253b9e@gatewaygeomatics.com>
 <f7c41374-60fb-2b7c-075b-db8e2814b9ec@gatewaygeomatics.com>
 <CADRrdKut3dSAYDoz_QGg1cH0ovSgT64MzFPxCRj56e0dPBGf2w@mail.gmail.com>
Message-ID: <a7515908-94f1-4eaf-8e2c-9fb78f9e50e7@www.fastmail.com>

Hi,

Can you use the history from https://lists.osgeo.org/pipermail/proj/ instead?

Laurentiu


On Fri, Nov 19, 2021, at 11:19, Javier Jimenez Shaw wrote:
> Hi Jeff,
> 
> Have you done it? there is no history in https://www.mail-archive.com/proj at lists.osgeo.org/
> 
> Thanks,
> Javier
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales 
> hay infinitos pensamientos irracionales.
> 
> 
> On Tue, 2 Nov 2021 at 13:46, Jeff McKenna <jmckenna at gatewaygeomatics.com> wrote:
>> Ah I have to submit an mbox file for past messages, willdo now.  Sorry 
>> for noise!
>> 
>> -jeff
>> 
>> 
>> 
>> On 2021-11-02 9:41 a.m., Jeff McKenna wrote:
>> > Seems to be starting (I think it takes a day to archive all messages) : 
>> > https://www.mail-archive.com/proj at lists.osgeo.org/
>> > 
>> > -jeff
>> > 
>> > 
>> > 
>> > On 2021-11-02 9:39 a.m., Jeff McKenna wrote:
>> >> *please ignore*
>> >>
>> >>
>> >>
>> > 
>> > 
>> 
>> 
>> -- 
>> Jeff McKenna
>> GatewayGeo: Developers of MS4W, MapServer Consulting and Training
>> co-founder of FOSS4G
>> http://gatewaygeo.com/
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211119/77a7158c/attachment.html>

From vydramail at quick.cz  Fri Nov 26 07:35:33 2021
From: vydramail at quick.cz (wcd)
Date: Fri, 26 Nov 2021 16:35:33 +0100
Subject: [PROJ] transofmrations test suite
Message-ID: <CACDVBKHUzRxHvZEdOSGXrZgM6q7jwwDfU4qyk0hdyoQoe7aauA@mail.gmail.com>

Hello,
I would like to develop a test suite around my coordinate transformation
provider which uses PROJ. The test suite should provide a reference so when
I update say the proj version or some parameters in the future, I can still
be sure I get the same results as before.

I am looking for some test data for this purpose. Perhaps I could generate
some lat lon grids within area of interest of each coordinate system and
project these grids to obtain the reference data. And I could do something
similar to obtain reference data for different datum transformations too.

I wonder if somebody has done this kind of thing before. Do you have a
better idea? Are there any standard datasets that proj or other libraries
are tested against?

Many thanks for any input.
Filip.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/f947f0cc/attachment.html>

From martin.desruisseaux at geomatys.com  Fri Nov 26 07:49:52 2021
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Fri, 26 Nov 2021 16:49:52 +0100
Subject: [PROJ] transofmrations test suite
In-Reply-To: <CACDVBKHUzRxHvZEdOSGXrZgM6q7jwwDfU4qyk0hdyoQoe7aauA@mail.gmail.com>
References: <CACDVBKHUzRxHvZEdOSGXrZgM6q7jwwDfU4qyk0hdyoQoe7aauA@mail.gmail.com>
Message-ID: <932308ce-393a-97e4-3889-7a06552c7348@geomatys.com>

Hello Filip

The International Association of Oil & Gas Producers (IOGP), the group 
which create and maintain the EPSG database, created the Geospatial 
Integrity of Geoscience Software (GIGS) test suite. By coincidence they 
just released version 2 this week: https://gigs.iogp.org/

The GIGS version 2 tests are published as a set CSV files (this is a 
change compared to version 1, which was published as Microsoft Excel 
files). Those tests are partially implemented in a separated project 
which use GeoAPI [1] interfaces for executing those tests. GeoAPI is in 
Java, but can be executed with PROJ using PROJ-JNI [2]. Actually a 
branch of PROJ-JNI already execute part of the GIGS tests. I believe 
that there is also some C/C++ code for executing some GIGS tests in PROJ 
code base. The tests using GeoAPI has the advantage of being executable 
on different implementations, which allow comparisons. The Java code for 
the tests is at [3], but there is discussion for transferring this test 
suite to IOGP if they are interested.

Note sure if it help, but just for information,

 ??? Martin

[1]http://www.geoapi.org/
[2]https://github.com/OSGeo/PROJ-JNI
[3]https://github.com/desruisseaux/GIGS


Le 26/11/2021 ? 16:35, wcd a ?crit?:

> Hello,
> I would like to develop a test suite around my coordinate 
> transformation provider which uses PROJ. The test suite should provide 
> a reference so when I update say the proj version or some parameters 
> in the future, I can still be sure I get the same results as before.
>
> I am looking for some test data for this purpose. Perhaps I could 
> generate some lat lon grids within area of interest of each coordinate 
> system and project these grids to obtain the reference data. And I 
> could do something similar to obtain reference data for different 
> datum transformations too.
>
> I wonder if somebody has done this kind of thing before. Do you have a 
> better idea? Are there any standard datasets that proj or other 
> libraries are tested against?
>
> Many thanks for any input.
> Filip.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/788b9c1d/attachment.html>

From mathieu.poulin at mvtgeosolutions.com  Fri Nov 26 09:03:18 2021
From: mathieu.poulin at mvtgeosolutions.com (Mathieu Poulin)
Date: Fri, 26 Nov 2021 17:03:18 +0000
Subject: [PROJ] Change of datum not working
Message-ID: <YTXPR0101MB154910CE2168B8BBCE14C72D9B639@YTXPR0101MB1549.CANPRD01.PROD.OUTLOOK.COM>

When creating a transformation that requires a change of datum, it does not work. For instance, going from Geographic coordinates in WGS84 to UTM coordinates in NAD83CSRS. It does convert from geographic lat,lon to UTM projection easting,northing but the datum remains WGS84.

I am using Proj 8.2 (but I've also tried this with Proj 7.1 and 7.2) with C++. Here is the code with comments describing the values of the variables, the expected output of the code and the actual output of the code.

// ENTRY: x=-1614798.938 y=-3690228.026 z=4929942.509
GeographicLib::Geocentric::WGS84().Reverse(x, y, z, point.m_latitude, point.m_longitude, point.m_ellipsoidal_height);
// REVERSE: point.m_latitude=50.937434634728845 point.m_longitude=-113.63360224940385 point.m_m_ellipsoidal_height=1005.9387180001410
PJ_COORD coord = proj_coord(point.m_latitude, point.m_longitude, point.m_ellipsoidal_height, 0.0);
PJ* proj_from_WGS84_to_2956 = proj_create_crs_to_crs(0, "EPSG:4326", "EPSG:2956", 0);
PJ_XYZ proj_point_2 = proj_trans(proj_from_WGS84_to_2956, PJ_FWD, coord).xyz;
// EXPECTED RESULT: 314967.330, 5646169.740, 1006.379
// ACTUAL RESULT:   314967.085, 5646169.595, 1005.939

Am I doing something wrong? Am I missing something? If someone could help me out with this bit of code, it would be hugely appreciated.

Thanks,

 - Mathieu Poulin



[cid:b842d2e7-e23d-4c75-9eb0-6cdf834de5b1]



Mathieu Poulin

D?veloppeur | Developer

Division arpentage et g?omatique
D?partement Recherche et D?veloppement



Si?ge social

15069, boulevard Henri-Bourassa

Qu?bec (Qu?bec) G1G 3Z5, Canada

Tel : 1+(418) 641-0344

Sans frais: 1+ (888) 576-7898

mvtgeosolutions.com<http://www.mvtgeosolutions.com/>



[cid:ab93d6d0-85d4-4ebe-8af2-044e71f94958]<https://www.facebook.com/mvtgeosolutions>    [cid:a54b447d-ac65-4951-8fcf-d10c737d0c3a] <https://www.linkedin.com/company/mvtgeosolutions>     [cid:cfbd29c9-c9c3-4973-afce-0be0062013bb] <https://www.youtube.com/channel/UCOFguYWgpbxOlKndKRqqRRQ> <https://www.youtube.com/channel/UCOFguYWgpbxOlKndKRqqRRQ>





ATTENTION NOTICE



Les informations contenues dans le pr?sent message et dans toute pi?ce qui lui est jointe sont confidentielles et peuvent ?tre prot?g?es par le secret professionnel, industriel et/ou droits d'auteurs. Ces informations sont ? l'usage exclusif de son ou de ses destinataires. Si vous avez re?u ce message par m?garde, veuillez communiquer avec l'exp?diteur au +1 (888) 576-7898 poste 101, l'effacer de tout disque dur ou autre m?dia sur lequel il peut ?tre enregistr? et ne pas en conserver de copie. Merci.



This E-mail message and any attachment thereto contain confidential information which may be privileged, industrial secrets or copyrighted and which is intended for the exclusive use of its addressee(s). If you have received this communication in error, please immediately notify us by telephone at +1 (888) 576-7898 poste 101, erase it from any hard disk or other medium on which it may have been saved and do not keep any copy thereof. Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/8d89041f/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-31dfdvgz.png
Type: image/png
Size: 8696 bytes
Desc: Outlook-31dfdvgz.png
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/8d89041f/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-gxopdjhy.png
Type: image/png
Size: 1444 bytes
Desc: Outlook-gxopdjhy.png
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/8d89041f/attachment-0005.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-aio4tfz2.png
Type: image/png
Size: 880 bytes
Desc: Outlook-aio4tfz2.png
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/8d89041f/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-ccv4tpf3.png
Type: image/png
Size: 1584 bytes
Desc: Outlook-ccv4tpf3.png
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/8d89041f/attachment-0007.png>

From gdt at lexort.com  Fri Nov 26 09:35:21 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 26 Nov 2021 12:35:21 -0500
Subject: [PROJ] Change of datum not working
In-Reply-To: <YTXPR0101MB154910CE2168B8BBCE14C72D9B639@YTXPR0101MB1549.CANPRD01.PROD.OUTLOOK.COM>
 (Mathieu Poulin's message of "Fri, 26 Nov 2021 17:03:18 +0000")
References: <YTXPR0101MB154910CE2168B8BBCE14C72D9B639@YTXPR0101MB1549.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <rmia6hq3jmu.fsf@s1.lexort.com>


Mathieu Poulin <mathieu.poulin at mvtgeosolutions.com> writes:

> When creating a transformation that requires a change of datum, it
> does not work. For instance, going from Geographic coordinates in
> WGS84 to UTM coordinates in NAD83CSRS. It does convert from geographic
> lat,lon to UTM projection easting,northing but the datum remains
> WGS84.

I think you mean "the coordinates are those I'd expect if the datum
transformation did not happen".

This has been discussed a lot.  Briefly, WGS84 is a name for a family of
datums, including WGS84(TRANSIT), the original, and the original is
considered equivalent to NAD83(1986).  And, no one (outside the US DoD)
has high-accuracy coordinates that are truly in a WGS84 realization,
because there is no high-accuracy way to access the datum.  The
high-accuracy techniques (carrier phase vs CORS, RTK) are all relative
to either national static datums, or something in someting like ITRF2014
or IGb14.

There are lots of philosophical points about ensembles but my practical
advice is:

  Surely your data is not actually in WGS84(ensemble).

  Beware that terminology is fuzzy with WGS84 the bare word as to
  whether people/programs mean:
    - the realization currently in use
    - the ensemble
    - the original member of the ensemble

  If your data was obtained from non-differential GPS observations, it
  would be in some specific realization of WGS84, depending on the date.
  If it used WAAS, it would be in the WAAS frame instead and not
  actually in WGS84.

  ITRF2008 is a good proxy for relatively recent WGS84 realizations, and
  I think what WAAS uses.  (ITRF2014 is a good proxy for measuremnets
  since early 2021, in WGS84(G2139), but if you can tell the difference
  beteen actual measurements in ITRF2008 and ITRF2014 please tell us how
  :-))

  Keep in mind that ITRF2008 coordinates of points in Canada have
  non-zero velocities.  So you should be thinking about epoch if you
  want to be cm-level.  If you are trying to avoid the meter-level shift
  and ignoring the ~2-3 cm/year over 10 years, that seems like an
  intermediate reasonable approach.  (FWIW, I deal with coordinates in
  NAD83(2011) epoch 2010.0 obtained via RTK that are accurate at the
  5-10 cm level, but once I move to any dynamic frame things get
  messier.)

  If your data is not accurate at the meter level, I would say it still
  makes sense to transform properly form NAD83 to ITRFfoo to match
  others and handle round-tripping, but the finer points probably don't
  make sense to worry about.

  You said NAD83(CSRS) but didn't mention which of the 7 realizations of
  that you are talking about.  However I'm pretty sure those are
  intended to be static and very close the the US NAD83 realizations,
  and close to each other at more or less the 10 cm level.

and thus my real advice is:

  relabel your "WGS84" data as being ITRF2008.  Perhaps by a transform,
  which will be null, or perhaps just label it that way.

  Then, conversion to NAD83(CSRS) should do the datum transform.

  If you are still getting null transforms, transform to NAD83(CSRS)v7
  instead of the bare CSRS word, which might be an ensesmble, and might
  be the original.



A related issue is that with coordinates in Massachusetts State Plane,
defined in terms of NAD83, converting to ITRF2014 can end up null, but
if I convert first to NAD83(2011), which is a null transform, then the
transform to ITRF2014 happens.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/95a37765/attachment.sig>

From even.rouault at spatialys.com  Fri Nov 26 09:32:06 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 26 Nov 2021 18:32:06 +0100
Subject: [PROJ] Change of datum not working
In-Reply-To: <YTXPR0101MB154910CE2168B8BBCE14C72D9B639@YTXPR0101MB1549.CANPRD01.PROD.OUTLOOK.COM>
References: <YTXPR0101MB154910CE2168B8BBCE14C72D9B639@YTXPR0101MB1549.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <f0cf4204-cada-8192-db41-a3c1575324b3@spatialys.com>

Mathieu,


It is not quite true that there is no datum shift. If there was no datum 
shift, you would get the following results (using EPSG:32612 to remain 
in WGS84 datum, but with the UTM zone 12N similarly as EPSG:2956):


$ echo 50.937434634728845 -113.63360224940385 1005.9387180001410 | 
cs2cs? -d 3 EPSG:4326 EPSG:32612
314966.127??? 5646170.391 1005.939


The result you get in your code is the one of the below operation:


$ projinfo -s EPSG:4326 -t EPSG:2956
Candidate operations found: 2
-------------------------------------
Operation No. 1:

unknown id, Inverse of NAD83(CSRS) to WGS 84 (2) + UTM zone 12N, 1 m, 
Canada - onshore and offshore - Alberta; British Columbia; Manitoba; New 
Brunswick; Newfoundland and Labrador; Northwest Territories; Nova 
Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon.

PROJ string:
+proj=pipeline
 ? +step +proj=axisswap +order=2,1
 ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
 ? +step +proj=push +v_3
 ? +step +proj=cart +ellps=WGS84
 ? +step +inv +proj=helmert +x=-0.991 +y=1.9072 +z=0.5129 
+rx=-0.0257899075194932
 ??????? +ry=-0.0096500989602704 +rz=-0.0116599432323421 +s=0
 ??????? +convention=coordinate_frame
 ? +step +inv +proj=cart +ellps=GRS80
 ? +step +proj=pop +v_3
 ? +step +proj=utm +zone=12 +ellps=GRS80

As the 2 CRS you use are 2D ones, the Z coordinate is left untouched 
with the push/pop +v_3 steps.


If you promote the 2 CRS as 3D, you'll get


$ echo 50.937434634728845 -113.63360224940385 1005.9387180001410 | 
cs2cs? -d 3 EPSG:4979 "$(src/projinfo --3d EPSG:2956 -o WKT2_2019 
--single-line -q)"
314967.085??? 5646169.595 1006.393


so you have a 3D datum shift here. Not exactly the one you expect (not 
sure where your expected result comes from), but that's the best one 
we've available in our database, mostly driven by what there is in EPSG.

As there are several iterations of the NAD83(CSRS) datum (the default 
one used in EPSG:2956, but also NAD83(CSRS)v2, v3, v4, v5, v6, v7), it 
is possible that your expected result is obtained with one of those 
later datums.


API wise, you can get the 3D versions of the CRS with things like

PJ* crs_2D = proj_create(ctxt, "EPSG:2956");

PJ* crs_3D = proj_crs_promote_to_3D(ctxt, crs_2D); // in proj_experimental.h

and then use proj_create_crs_to_crs_from_pj()


Also note that the accuracy of the transformation is 1 meter, and that 
anything tagged EPSG:4326 has also a potential inaccuracy of 2 meters.


Even



Le 26/11/2021 ? 18:03, Mathieu Poulin a ?crit?:
> When creating a transformation that requires a change of datum, it 
> does not work. For instance, going from Geographic coordinates in 
> WGS84 to UTM coordinates in NAD83CSRS. It does convert from geographic 
> lat,lon to UTM projection easting,northing but the datum remains WGS84.
>
> I am using Proj 8.2 (but I've also tried this with Proj 7.1 and 7.2) 
> with C++. Here is the code with comments describing?the values of the 
> variables, the expected output of the code and the actual output of 
> the code.
>
> // ENTRY: x=-1614798.938 y=-3690228.026 z=4929942.509
> GeographicLib::Geocentric::WGS84().Reverse(x, y, z, point.m_latitude, 
> point.m_longitude, point.m_ellipsoidal_height);
> // REVERSE: point.m_latitude=50.937434634728845 
> point.m_longitude=-113.63360224940385 
> point.m_m_ellipsoidal_height=1005.9387180001410
> PJ_COORD coord = proj_coord(point.m_latitude, point.m_longitude, 
> point.m_ellipsoidal_height, 0.0);
> PJ* proj_from_WGS84_to_2956 = proj_create_crs_to_crs(0, "EPSG:4326", 
> "EPSG:2956", 0);
> PJ_XYZ proj_point_2 = proj_trans(proj_from_WGS84_to_2956, PJ_FWD, 
> coord).xyz;
> // EXPECTED RESULT: 314967.330, 5646169.740, 1006.379
> // ACTUAL RESULT: ? 314967.085, 5646169.595, 1005.939
>
> Am I doing something?wrong? Am I missing?something? If someone could 
> help me out with this bit of code, it?would?be hugely appreciated.
>
> Thanks,
>
> ?- Mathieu Poulin
>
>
> *Mathieu Poulin*
>
> *D?veloppeur | Developer*
>
> Division arpentage et g?omatique
> D?partement Recherche et D?veloppement
>
> Si?ge social
>
> 15069, boulevard Henri-Bourassa
>
> Qu?bec (Qu?bec) G1G 3Z5, Canada
>
> Tel?: 1+(418) 641-0344
>
> Sans frais: 1+ (888) 576-7898
>
> *mvtgeosolutions.com <http://www.mvtgeosolutions.com/>*
>
> <https://www.facebook.com/mvtgeosolutions><https://www.linkedin.com/company/mvtgeosolutions><https://www.youtube.com/channel/UCOFguYWgpbxOlKndKRqqRRQ><https://www.youtube.com/channel/UCOFguYWgpbxOlKndKRqqRRQ>
>
> ATTENTION NOTICE
>
> Les informations contenues dans le pr?sent message et dans toute pi?ce 
> qui lui est jointe sont confidentielles et peuvent ?tre prot?g?es par 
> le secret professionnel, industriel et/ou droits d'auteurs. Ces 
> informations sont ? l'usage exclusif de son ou de ses destinataires. 
> Si vous avez re?u ce message par m?garde, veuillez communiquer avec 
> l'exp?diteur au +1 (888) 576-7898 poste 101, l'effacer de tout disque 
> dur ou autre m?dia sur lequel il peut ?tre enregistr? et ne pas en 
> conserver de copie. Merci.
>
> This E-mail message and any attachment thereto contain confidential 
> information which may be privileged, industrial secrets or copyrighted 
> and which is intended for the exclusive use of its addressee(s). If 
> you have received this communication in error, please immediately 
> notify us by telephone at +1 (888) 576-7898 poste 101, erase it from 
> any hard disk or other medium on which it may have been saved and do 
> not keep any copy thereof. Thank you.
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/e8c4922b/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-31dfdvgz.png
Type: image/png
Size: 8696 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/e8c4922b/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-gxopdjhy.png
Type: image/png
Size: 1444 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/e8c4922b/attachment-0005.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-aio4tfz2.png
Type: image/png
Size: 880 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/e8c4922b/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Outlook-ccv4tpf3.png
Type: image/png
Size: 1584 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/e8c4922b/attachment-0007.png>

From cjmce at lsu.edu  Fri Nov 26 15:17:50 2021
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 26 Nov 2021 23:17:50 +0000
Subject: [PROJ] Change of datum not working
In-Reply-To: <rmia6hq3jmu.fsf@s1.lexort.com>
References: <YTXPR0101MB154910CE2168B8BBCE14C72D9B639@YTXPR0101MB1549.CANPRD01.PROD.OUTLOOK.COM>
 <rmia6hq3jmu.fsf@s1.lexort.com>
Message-ID: <SN4P221MB0764C567CCD17724A4D271CCA8639@SN4P221MB0764.NAMP221.PROD.OUTLOOK.COM>

Check out a 2021 VERY comprehensive thesis: ""Investigation into the accuracy and practicality of methods for transforming coordinates between geodetic datums (PhD thesis, book-format edition)" by Andrew Ruffhead "

This has some really interesting analyses with included data sets.

Good read.


Clifford J. Mugnier, c.p., c.m.s.

Chief of Geodesy, Emeritus

LSU Center for GeoInformatics (ERAD 266)

Dept. of Civil Engineering

LOUISIANA STATE UNIVERSITY

Baton Rouge, LA  70803

Research:   (225) 578-4578

Cell:           (225) 328-8975

honorary lifetime member, lsps

fellow emeritus, asprs

member, apsg

________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Greg Troxel <gdt at lexort.com>
Sent: Friday, November 26, 2021 11:35 AM
To: Mathieu Poulin <mathieu.poulin at mvtgeosolutions.com>
Cc: proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: Re: [PROJ] Change of datum not working


Mathieu Poulin <mathieu.poulin at mvtgeosolutions.com> writes:

> When creating a transformation that requires a change of datum, it
> does not work. For instance, going from Geographic coordinates in
> WGS84 to UTM coordinates in NAD83CSRS. It does convert from geographic
> lat,lon to UTM projection easting,northing but the datum remains
> WGS84.

I think you mean "the coordinates are those I'd expect if the datum
transformation did not happen".

This has been discussed a lot.  Briefly, WGS84 is a name for a family of
datums, including WGS84(TRANSIT), the original, and the original is
considered equivalent to NAD83(1986).  And, no one (outside the US DoD)
has high-accuracy coordinates that are truly in a WGS84 realization,
because there is no high-accuracy way to access the datum.  The
high-accuracy techniques (carrier phase vs CORS, RTK) are all relative
to either national static datums, or something in someting like ITRF2014
or IGb14.

There are lots of philosophical points about ensembles but my practical
advice is:

  Surely your data is not actually in WGS84(ensemble).

  Beware that terminology is fuzzy with WGS84 the bare word as to
  whether people/programs mean:
    - the realization currently in use
    - the ensemble
    - the original member of the ensemble

  If your data was obtained from non-differential GPS observations, it
  would be in some specific realization of WGS84, depending on the date.
  If it used WAAS, it would be in the WAAS frame instead and not
  actually in WGS84.

  ITRF2008 is a good proxy for relatively recent WGS84 realizations, and
  I think what WAAS uses.  (ITRF2014 is a good proxy for measuremnets
  since early 2021, in WGS84(G2139), but if you can tell the difference
  beteen actual measurements in ITRF2008 and ITRF2014 please tell us how
  :-))

  Keep in mind that ITRF2008 coordinates of points in Canada have
  non-zero velocities.  So you should be thinking about epoch if you
  want to be cm-level.  If you are trying to avoid the meter-level shift
  and ignoring the ~2-3 cm/year over 10 years, that seems like an
  intermediate reasonable approach.  (FWIW, I deal with coordinates in
  NAD83(2011) epoch 2010.0 obtained via RTK that are accurate at the
  5-10 cm level, but once I move to any dynamic frame things get
  messier.)

  If your data is not accurate at the meter level, I would say it still
  makes sense to transform properly form NAD83 to ITRFfoo to match
  others and handle round-tripping, but the finer points probably don't
  make sense to worry about.

  You said NAD83(CSRS) but didn't mention which of the 7 realizations of
  that you are talking about.  However I'm pretty sure those are
  intended to be static and very close the the US NAD83 realizations,
  and close to each other at more or less the 10 cm level.

and thus my real advice is:

  relabel your "WGS84" data as being ITRF2008.  Perhaps by a transform,
  which will be null, or perhaps just label it that way.

  Then, conversion to NAD83(CSRS) should do the datum transform.

  If you are still getting null transforms, transform to NAD83(CSRS)v7
  instead of the bare CSRS word, which might be an ensesmble, and might
  be the original.



A related issue is that with coordinates in Massachusetts State Plane,
defined in terms of NAD83, converting to ITRF2014 can end up null, but
if I convert first to NAD83(2011), which is a null transform, then the
transform to ITRF2014 happens.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211126/eacd3bd1/attachment.html>

From j1 at jimenezshaw.com  Mon Nov 29 07:53:55 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 29 Nov 2021 16:53:55 +0100
Subject: [PROJ] Constant vertical offset
In-Reply-To: <e22fa1c1-2595-d46a-2d57-a8f65a0734f8@spatialys.com>
References: <CADRrdKuPT09gdiZqpmfUugJ5o1ysMjg7XGYG4vTN8Sh+6U3kEA@mail.gmail.com>
 <e22fa1c1-2595-d46a-2d57-a8f65a0734f8@spatialys.com>
Message-ID: <CADRrdKvBVC7uJZND9nSiP8=7gE44tV18HEJb+jxm8iRbzDYdZg@mail.gmail.com>

Thanks Even

Is there anything equivalent to that as Vertical CRS to use in a Compound?
I know it is not correct geodetically, but I want it just as a WKT
temporary object. I just need that PROJ is able to understand it and use it
in a transformation.
That is, given a horizontal CRS, I want to create a compound (or anything
equivalent) with a vertical offset (as WKT2 if it makes things easier)

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Mon, 1 Nov 2021 at 17:01, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier
> Le 01/11/2021 ? 13:32, Javier Jimenez Shaw a ?crit :
>
> Hi
>
> I want to make a transformation (at the end an
> operation::CoordinateOperation) that replaces the geoid model with a local
> constant value.
>
> In some cases there is public grid file for a geoid model, but I can get a
> (constant) undulation value (let's say 42.9m) in a (small) area of work. I
> would like to include this undulation value in the transformation.
>
> How can I do that? is there any pipeline option for that? (I do not see a
> way in https://proj.org/operations/transformations/vgridshift.html) Or a
> way to directly create the CoordinateOperation?
>
> You can use the
> https://proj.org/operations/transformations/geogoffset.html with the dh
> parameter. This is for example used for transformation EPSG:15596
>
> Even
>
>
> Thanks
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
> _______________________________________________
> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211129/3f3c3373/attachment.html>

From even.rouault at spatialys.com  Mon Nov 29 08:04:57 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 29 Nov 2021 17:04:57 +0100
Subject: [PROJ] Constant vertical offset
In-Reply-To: <CADRrdKvBVC7uJZND9nSiP8=7gE44tV18HEJb+jxm8iRbzDYdZg@mail.gmail.com>
References: <CADRrdKuPT09gdiZqpmfUugJ5o1ysMjg7XGYG4vTN8Sh+6U3kEA@mail.gmail.com>
 <e22fa1c1-2595-d46a-2d57-a8f65a0734f8@spatialys.com>
 <CADRrdKvBVC7uJZND9nSiP8=7gE44tV18HEJb+jxm8iRbzDYdZg@mail.gmail.com>
Message-ID: <29a61cc7-3047-e6ad-f88b-4567ef51537d@spatialys.com>

Javier,

If you need a WKT2 with a coordinate operation, then you can simply wrap 
any PROJ string expressing a coordinate operation like the following:

$ projinfo "+proj=geogoffset +dh=5" -o WKT2:2019 -q

CONVERSION["PROJ-based coordinate operation",
 ??? METHOD["PROJ-based operation method: +proj=geogoffset +dh=5"]]

Of course only interoperable in the PROJ universe.

Otherwise using Transformation::createGeographic3DOffsets() / 
createGeographic2DWithHeightOffsets() could have been an option, but if 
your source and target CRS aren't geographic, PROJ will complain when 
getting the PROJ transformation string.

Even

Le 29/11/2021 ? 16:53, Javier Jimenez Shaw a ?crit?:
> Thanks Even
>
> Is there anything equivalent to that as Vertical CRS to use in a 
> Compound? I know it is not correct geodetically, but I want it just as 
> a WKT temporary object. I just need that PROJ is able to understand it 
> and use it in a transformation.
> That is, given a horizontal CRS, I want to create a compound (or 
> anything equivalent) with a vertical offset (as WKT2 if it makes 
> things easier)
>
> Thanks.
> .___ ._ ..._ .. . ._. .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Mon, 1 Nov 2021 at 17:01, Even Rouault <even.rouault at spatialys.com 
> <mailto:even.rouault at spatialys.com>> wrote:
>
>     Javier
>
>     Le 01/11/2021 ? 13:32, Javier Jimenez Shaw a ?crit?:
>>     Hi
>>
>>     I want to make a transformation (at the end an
>>     operation::CoordinateOperation) that replaces the geoid model
>>     with a local constant value.
>>
>>     In some cases there is public grid file for a geoid model, but I
>>     can get a (constant) undulation value (let's say 42.9m) in a
>>     (small) area of work. I would like to include this undulation
>>     value in the transformation.
>>
>>     How can I do that? is there any pipeline option for that? (I do
>>     not see a way in
>>     https://proj.org/operations/transformations/vgridshift.html
>>     <https://proj.org/operations/transformations/vgridshift.html>) Or
>>     a way to directly create the CoordinateOperation?
>
>     You can use the
>     https://proj.org/operations/transformations/geogoffset.html
>     <https://proj.org/operations/transformations/geogoffset.html> with
>     the dh parameter. This is for example used for transformation
>     EPSG:15596
>
>     Even
>
>>
>>     Thanks
>>     .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>>     Entre dos pensamientos racionales
>>     hay infinitos pensamientos irracionales.
>>
>>
>>     _______________________________________________
>>     PROJ mailing list
>>     PROJ at lists.osgeo.org  <mailto:PROJ at lists.osgeo.org>
>>     https://lists.osgeo.org/mailman/listinfo/proj  <https://lists.osgeo.org/mailman/listinfo/proj>
>
>     -- 
>     http://www.spatialys.com  <http://www.spatialys.com>
>     My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211129/a58a9b9b/attachment.html>

From j1 at jimenezshaw.com  Mon Nov 29 08:12:27 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 29 Nov 2021 17:12:27 +0100
Subject: [PROJ] Constant vertical offset
In-Reply-To: <29a61cc7-3047-e6ad-f88b-4567ef51537d@spatialys.com>
References: <CADRrdKuPT09gdiZqpmfUugJ5o1ysMjg7XGYG4vTN8Sh+6U3kEA@mail.gmail.com>
 <e22fa1c1-2595-d46a-2d57-a8f65a0734f8@spatialys.com>
 <CADRrdKvBVC7uJZND9nSiP8=7gE44tV18HEJb+jxm8iRbzDYdZg@mail.gmail.com>
 <29a61cc7-3047-e6ad-f88b-4567ef51537d@spatialys.com>
Message-ID: <CADRrdKs4qXRshEm=KcUMQoOPsevCc0BiNGNvBWfYiqf4ztyW+A@mail.gmail.com>

I was thinking on a WKT that defines the offset as part of the CRS
defintion, in a similar way the geoid grid file can be defined.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Mon, 29 Nov 2021 at 17:05, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier,
>
> If you need a WKT2 with a coordinate operation, then you can simply wrap
> any PROJ string expressing a coordinate operation like the following:
>
> $ projinfo "+proj=geogoffset +dh=5" -o WKT2:2019 -q
>
> CONVERSION["PROJ-based coordinate operation",
>     METHOD["PROJ-based operation method: +proj=geogoffset +dh=5"]]
>
> Of course only interoperable in the PROJ universe.
>
> Otherwise using Transformation::createGeographic3DOffsets() /
> createGeographic2DWithHeightOffsets() could have been an option, but if
> your source and target CRS aren't geographic, PROJ will complain when
> getting the PROJ transformation string.
>
> Even
> Le 29/11/2021 ? 16:53, Javier Jimenez Shaw a ?crit :
>
> Thanks Even
>
> Is there anything equivalent to that as Vertical CRS to use in a Compound?
> I know it is not correct geodetically, but I want it just as a WKT
> temporary object. I just need that PROJ is able to understand it and use it
> in a transformation.
> That is, given a horizontal CRS, I want to create a compound (or anything
> equivalent) with a vertical offset (as WKT2 if it makes things easier)
>
> Thanks.
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Mon, 1 Nov 2021 at 17:01, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> Javier
>> Le 01/11/2021 ? 13:32, Javier Jimenez Shaw a ?crit :
>>
>> Hi
>>
>> I want to make a transformation (at the end an
>> operation::CoordinateOperation) that replaces the geoid model with a local
>> constant value.
>>
>> In some cases there is public grid file for a geoid model, but I can get
>> a (constant) undulation value (let's say 42.9m) in a (small) area of work.
>> I would like to include this undulation value in the transformation.
>>
>> How can I do that? is there any pipeline option for that? (I do not see a
>> way in https://proj.org/operations/transformations/vgridshift.html) Or a
>> way to directly create the CoordinateOperation?
>>
>> You can use the
>> https://proj.org/operations/transformations/geogoffset.html with the dh
>> parameter. This is for example used for transformation EPSG:15596
>>
>> Even
>>
>>
>> Thanks
>> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>> Entre dos pensamientos racionales
>> hay infinitos pensamientos irracionales.
>>
>>
>> _______________________________________________
>> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>>
>> -- http://www.spatialys.com
>> My software is free, but my time generally not.
>>
>> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211129/4602a2e6/attachment-0001.html>

From glen.rice at noaa.gov  Tue Nov 30 05:39:59 2021
From: glen.rice at noaa.gov (Glen Rice - NOAA Federal)
Date: Tue, 30 Nov 2021 08:39:59 -0500
Subject: [PROJ] Constant vertical offset
In-Reply-To: <CADRrdKs4qXRshEm=KcUMQoOPsevCc0BiNGNvBWfYiqf4ztyW+A@mail.gmail.com>
References: <CADRrdKuPT09gdiZqpmfUugJ5o1ysMjg7XGYG4vTN8Sh+6U3kEA@mail.gmail.com>
 <e22fa1c1-2595-d46a-2d57-a8f65a0734f8@spatialys.com>
 <CADRrdKvBVC7uJZND9nSiP8=7gE44tV18HEJb+jxm8iRbzDYdZg@mail.gmail.com>
 <29a61cc7-3047-e6ad-f88b-4567ef51537d@spatialys.com>
 <CADRrdKs4qXRshEm=KcUMQoOPsevCc0BiNGNvBWfYiqf4ztyW+A@mail.gmail.com>
Message-ID: <CAGm0ZKdc=W9+WEnaU72-7bmG2m4hdj1xhJR5-juokG+QpxqSRQ@mail.gmail.com>

Javier,

I'm not sure we are concerned with the same use case, but your mention of
explicitly stating grids made me think there could be overlap with our
goals.

We are interested in explicitly stating the vertical datum as a
combination of grids in WKT(2), but we have been unsuccessful in making
this work operationally.  We started working at a VERTCRS with a
DERIVINGCONVERSTION as described here
<https://github.com/noaa-ocs-hydrography/vyperdatum/blob/8d2a83d78f74a926dc746da6604fb4a051086530/vyperdatum/vypercrs.py#L458>,
but this didn't seem to get where we wanted to go.  At this point we are
creating a compound CRS with a very simple VERTCRS with a remarks section
that contains the PROJ pipeline string (example here
<https://github.com/noaa-ocs-hydrography/vyperdatum/blob/8d2a83d78f74a926dc746da6604fb4a051086530/vyperdatum/vypercrs.py#L530>).
This solution is somewhat hamstrung by the remarks section being stripped
out of the WKT with GeoTIFFs, so at this point we have created a custom
GDAL Tiff Tag VERTICALDATUMWKT to store this information (example temp link
here
<https://noaa-ocs-nationalbathymetry-pds.s3.amazonaws.com/index.html#Bluetopo/US5NH1AH/>)
until we can find a better solution. [A side note for anyone that wants to
know why we did not just use the epsg code for NAVD88 in the above
example: NAVD88
as EPSG <https://epsg.org/crs_5703/NAVD88-height.html> is declared as an
ensemble of many different geoids which we prefer not to have included.]

While our process is tied into a bunch of business logic, we are interested
in making the data we make public as accessible as we can.  If there are
thoughts about how to solve this problem in a better way that facilitates
downstream use through explicit declaration of the grids in WKT I think we
would be interested in hearing other approaches.

Regards,
Glen

On Mon, Nov 29, 2021 at 11:12 AM Javier Jimenez Shaw <j1 at jimenezshaw.com>
wrote:

> I was thinking on a WKT that defines the offset as part of the CRS
> defintion, in a similar way the geoid grid file can be defined.
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Mon, 29 Nov 2021 at 17:05, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> Javier,
>>
>> If you need a WKT2 with a coordinate operation, then you can simply wrap
>> any PROJ string expressing a coordinate operation like the following:
>>
>> $ projinfo "+proj=geogoffset +dh=5" -o WKT2:2019 -q
>>
>> CONVERSION["PROJ-based coordinate operation",
>>     METHOD["PROJ-based operation method: +proj=geogoffset +dh=5"]]
>>
>> Of course only interoperable in the PROJ universe.
>>
>> Otherwise using Transformation::createGeographic3DOffsets() /
>> createGeographic2DWithHeightOffsets() could have been an option, but if
>> your source and target CRS aren't geographic, PROJ will complain when
>> getting the PROJ transformation string.
>>
>> Even
>> Le 29/11/2021 ? 16:53, Javier Jimenez Shaw a ?crit :
>>
>> Thanks Even
>>
>> Is there anything equivalent to that as Vertical CRS to use in a
>> Compound? I know it is not correct geodetically, but I want it just as a
>> WKT temporary object. I just need that PROJ is able to understand it and
>> use it in a transformation.
>> That is, given a horizontal CRS, I want to create a compound (or anything
>> equivalent) with a vertical offset (as WKT2 if it makes things easier)
>>
>> Thanks.
>> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>> Entre dos pensamientos racionales
>> hay infinitos pensamientos irracionales.
>>
>>
>>
>> On Mon, 1 Nov 2021 at 17:01, Even Rouault <even.rouault at spatialys.com>
>> wrote:
>>
>>> Javier
>>> Le 01/11/2021 ? 13:32, Javier Jimenez Shaw a ?crit :
>>>
>>> Hi
>>>
>>> I want to make a transformation (at the end an
>>> operation::CoordinateOperation) that replaces the geoid model with a local
>>> constant value.
>>>
>>> In some cases there is public grid file for a geoid model, but I can get
>>> a (constant) undulation value (let's say 42.9m) in a (small) area of work.
>>> I would like to include this undulation value in the transformation.
>>>
>>> How can I do that? is there any pipeline option for that? (I do not see
>>> a way in https://proj.org/operations/transformations/vgridshift.html)
>>> Or a way to directly create the CoordinateOperation?
>>>
>>> You can use the
>>> https://proj.org/operations/transformations/geogoffset.html with the dh
>>> parameter. This is for example used for transformation EPSG:15596
>>>
>>> Even
>>>
>>>
>>> Thanks
>>> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>>> Entre dos pensamientos racionales
>>> hay infinitos pensamientos irracionales.
>>>
>>>
>>> _______________________________________________
>>> PROJ mailing listPROJ at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/proj
>>>
>>> -- http://www.spatialys.com
>>> My software is free, but my time generally not.
>>>
>>> -- http://www.spatialys.com
>> My software is free, but my time generally not.
>>
>> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>


-- 
Glen Rice
National Bathymetric Source
Hydrographic Systems and Technology Branch
Office of Coast Survey / Coast Survey Development Laboratory
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20211130/90172e6f/attachment.html>

From roger.oberholtzer at gmail.com  Tue Nov 30 23:59:06 2021
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 1 Dec 2021 08:59:06 +0100
Subject: [PROJ] Altitude question
Message-ID: <CANkOqwMF7-UQHhcaaMDF0f-fEQCJad5EVJDc5B_JzASjQUnvfQ@mail.gmail.com>

How does one determine the expected type of altitude (geoid or
ellipsoid) that a transformation expects? For example EPSG:5845
(Sweref99 + RH2000).

If I look at things like https://epsg.io/6499-cs or
https://epsg.io/5208 (which are referenced in the RH2000 definition)
the definition is not shown correctly in my browser. And I do not get
information for them via projinfo. It says the CRS is not found. Which
I guess is correct.

So, where do I look to see the expected type of altitude?


-- 
Roger Oberholtzer

