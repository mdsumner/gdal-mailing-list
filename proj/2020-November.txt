From kristianevers at gmail.com  Sun Nov  1 01:31:27 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Sun, 1 Nov 2020 10:31:27 +0100
Subject: [PROJ] PROJ 7.2.0RC2 and PROJ-data 1.3RC2
In-Reply-To: <7b6d4632-dc16-a4eb-a4b8-18f3570cdd79@karney.com>
References: <BCDB2077-E662-4451-ACCC-70529A737C13@sdfe.dk>
 <0AD3B936-28D0-4ADF-B0D6-44FB5227636B@gmail.com>
 <7b6d4632-dc16-a4eb-a4b8-18f3570cdd79@karney.com>
Message-ID: <9D7EA587-4641-4381-8168-2BDA017CE87F@gmail.com>

Motion passed with +1’s from

Kristian
Thomas
Even
Charles

Announcement of the final release will follow shortly.

/Kristian

> On 30 Oct 2020, at 11:01, Charles Karney <charles at karney.com> wrote:
> 
> +1
> 
>  --Charles
> 
> On 10/30/20 3:51 AM, Kristian Evers wrote:
>> It’s friday and no further issues has been found with the two release candidates, so I hereby
>> motion that they be promoted to final releases.
>> I’ll start with my +1.
>> /Kristian
>>> On 28 Oct 2020, at 14:30, Kristian Evers <kreve at sdfe.dk> wrote:
>>> 
>>> All,
>>> 
>>> A few problems with both release candidates were found, so here’s a new set to be tested:
>>> 
>>> http://download.osgeo.org/proj/proj-7.2.0RC2.tar.gz
>>> http://download.osgeo.org/proj/proj-7.2.0RC2.zip
>>> 
>>> and
>>> 
>>> http://download.osgeo.org/proj/proj-data-1.3RC2.tar.gz
>>> http://download.osgeo.org/proj/proj-data-1.3RC2.zip
>>> 
>>> 
>>> The PROJ package had a wrong ABI number in the CMake setup and in the PROJ-data
>>> package the GSIGEO2011 geoid was not covering the full extend of the source model.
>>> Both issues has now been corrected.
>>> 
>>> Please test the release candiates and report your findings back to the mailing list.
>>> 
>>> I will call for a vote for promotion to final releases on Friday provided that no further issues
>>> are found.
>>> 
>>> /Kristian
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> 
> -- 
> Charles Karney <charles at karney.com>
> Princeton, NJ
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From kristianevers at gmail.com  Sun Nov  1 01:56:41 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Sun, 1 Nov 2020 10:56:41 +0100
Subject: [PROJ] PROJ 7.2.0 & PROJ-data 1.3
Message-ID: <7B68B5D7-978D-446D-8F86-836EB9FE33C0@gmail.com>

All,

On behalf of the PROJ development team I am happy to announce the release
of PROJ 7.2.0 and PROJ-data 1.3.

The PROJ release includes a number of improvements, new features and bug
fixes. See the detailed release notes below. The PROJ-data package includes adds
new resources for Finish TIN shift transformations as well as the Japanese
GSIGEO2011 geoid.


Get the packages here: 
  
http://download.osgeo.org/proj/proj-7.2.0.tar.gz
http://download.osgeo.org/proj/proj-7.2.0.zip 
http://download.osgeo.org/proj/proj-data-1.3.tar.gz
http://download.osgeo.org/proj/proj-data-1.3.zip 


/Kristian 


————————————————————————————————————————

7.2.0 Release Notes
-------------------

 Updates
 -------

 + Command line tools:

   o Add multi-line PROJ string export capability, and use it by default in
     projinfo (unless --single-line is specified) (#2381)

 + Coordinate operations:

    o +proj=col_urban projection, implementing a EPSG projection method
      used by a number of projected CRS in Colombia (#2395)

    o +proj=tinshift for triangulation-based transformations (#2344)

    o Added ellipsoidal formulation of +proj=ortho (#2361)


 + Database

   o Update to EPSG 10.003 and make code base robust to dealing with
     WKT CRS with DatumEnsemble (#2370)

   o Added Finland tinshift operations (#2392)

   o Added transformation from JGD2011 Geographic 3D to JGD2011
     height using GSIGEO2011 (#2393)

   o Improve CompoundCRS identification and name morphing in VerticalCRS
     with ESRI WKT1 (#2386)

   o Added OGC:CRS27 and OGC:CRS83 CRS entries for NAD27 and NAD83
     in longitude, latitude order (#2350)

 + API

 o Added temporal, engineering, and parametric datum
   PJ_TYPE enumerations (#2274)

  o Various improvements to context handling (#2329, #2331)

  o proj_create_vertical_crs_ex(): add a ACCURACY option to provide
     an explicit accuracy, or derive it from the grid name if it is
     known (#2342)

   o proj_crs_create_bound_crs_to_WGS84(): make it work on
     verticalCRS/compoundCRS such as EPSG:4326+5773 and
     EPSG:4326+3855 (#2365)

   o promoteTo3D(): add a remark with the original CRS identifier (#2369)

   o Added proj_context_clone (#2383)


 Bug fixes
 ---------

 o Avoid core dumps when copying contexts in certain scenarios (#2324)

 o proj_trans(): reset errno before attemptying a retry with a new
   coordinate operation (#2353)

 o PROJJSON schema corrected to allow prime meridians values with
   explicitly stating a unit (degrees assumed) (#2354)

 o Adjust createBoundCRSToWGS84IfPossible() and operation filtering
   (for POSGAR 2007 to WGS84 issues) (#2357)

 o createOperations(): several fixes affecting NAD83 -> NAD83(2011) (#2364)

 o WKT2:2019 import/export: handle DATUM (at top level object) with PRIMEM

 o WKT1_ESRI: fix import and export of CompoundCRS (#2389)


From j1 at jimenezshaw.com  Sun Nov  1 12:13:17 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sun, 1 Nov 2020 21:13:17 +0100
Subject: [PROJ] Strange values with NAVD88
In-Reply-To: <rmi1rhejvxv.fsf@s1.lexort.com>
References: <CADRrdKvEOrE7+z4sO9aEph6PpcYCs21Ae2BZCa6+Uof-hLx=_A@mail.gmail.com>
 <rmih7qbkwwh.fsf@s1.lexort.com> <29713347.yLgk3QNz6C@even-i700>
 <rmi1rhejvxv.fsf@s1.lexort.com>
Message-ID: <CADRrdKtQiNSu7wSVmnR7Rf7sx3x9evxZYZ-T9pP2+0bPSRberg@mail.gmail.com>

Wow. Thank you very much, Even and Greg. I was not expecting such a long
and detailed explanation/discussion.

My bigger surprise when I looked at the data was the 1m height difference.
The "america geoids" I was checking were the NGA ones, like Geoid2018,
geoid12b and so on. Not EGM96 or 2008. Now I understand that the difference
comes from the transformations used, with a Helmert transformation or not.
Now I have much more clear the impact of the different datums in the WGS84
ensemble. I knew about the topic due to a previous email from Even in this
list. But didn't go deep until now.

My final use case is C++ transformation. More exactly via GDAL, using
"OGRCreateCoordinateTransformation" and "Transform". There you do not have
that many options. I assume that cs2cs is similar to that.
The final problem I am facing is that data is usually tagged as WGS84.
That's all. I would be very happy (and surprised) if ,for instance, a drone
with RTK is telling the user that the coordinates are in WGS84(G1762).

As you mentioned, with EPSG:4326 you cannot expect sub-metre accuracy.

Let's see how it goes with the "North American Terrestrial Reference Frame
of 2022 (NATRF2022)" + NAPGD2022 ... in a couple of years ;)

Thanks again.
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Sat, 31 Oct 2020 at 15:45, Greg Troxel <gdt at lexort.com> wrote:

>
> Stepping back, some complexities, some of which need to addressed with
> EPSG (once someone(tm) has dug in enough to be sure what to ask for).  I
> realize some of this has been discussed before; hoping it is helpful for
> Javier.
>
>   NADCON5 would be a big help.
>
>   EPSG database currently seems to not include a number of NAD83ish
>   things, including the notion that you can convert among any NAD83
>   flavor with a null transform, and this conversion is better than any
>   transform involving WGS84.
>
>   The current NAD83 label is not obviously NAD83(1986), at least to
>   people who are not already well read in NAD83.
>
>   NAD83 isn't listed as a datum ensemble.
>
>   It's not clear how a datum ensemble should be handled when there are
>   2D and 3D CRSs in the same family.  Perhaps two of them, one 2D and
>   one 3D.  Maybe NAD83 is the only ensemble that isn't all the same
>   kind.
>
>   Perhaps proj should somehow have a validity flag for the third
>   coordinate and throw errors if someone provides coordinates with the
>   third value present as an input for a CRS which is 2D.
>
>   As discussed before, accuracy values for transforms in EPSG are
>   imported into EPSG at face value, and thus cannot be compared against
>   each other.  Doing this right is hard, but seems necessary for proj's
>   transform-search approach to be sound.
>
>   I realize proj doesn't really want to go down this path, but it would
>   be nice to be able to have proj add transforms/etc. locally that
>   aren't in EPSG but should be.  There's a "too much work" aspect, and
>   then there's perhaps a licensing issue, perhaps not.
>
>
> I will try to understand the "NAD83 in EPSG" situation once I get caught
> up on proj updates in pkgsrc.  That's probably the best way to get
> improvement for hours spent as a first step.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201101/fccb2dbb/attachment.html>

From Jochem.Lesparre at kadaster.nl  Mon Nov  2 02:03:07 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 2 Nov 2020 10:03:07 +0000
Subject: [PROJ] Strange values with NAVD88
In-Reply-To: <CADRrdKtQiNSu7wSVmnR7Rf7sx3x9evxZYZ-T9pP2+0bPSRberg@mail.gmail.com>
References: <CADRrdKvEOrE7+z4sO9aEph6PpcYCs21Ae2BZCa6+Uof-hLx=_A@mail.gmail.com>
 <rmih7qbkwwh.fsf@s1.lexort.com> <29713347.yLgk3QNz6C@even-i700>
 <rmi1rhejvxv.fsf@s1.lexort.com>
 <CADRrdKtQiNSu7wSVmnR7Rf7sx3x9evxZYZ-T9pP2+0bPSRberg@mail.gmail.com>
Message-ID: <AM6P192MB04708EFBA2F24D8FC362B1FAEF100@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>

Javier Jimenez Shaw wrote:
> I would be very happy (and surprised) if ,for instance, a drone with RTK is telling the user that the coordinates are in WGS84(G1762).

It is very unlikely that RTK will provide WGS84(G1762), as it provides coordinates in the system of the coordinates of the reference stations, which are in Europe in ETRS89 most of the time.

Regards, Jochem


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201102/02381d5e/attachment.html>

From Nicolas.Bellaiche at ign.fr  Mon Nov  2 03:06:15 2020
From: Nicolas.Bellaiche at ign.fr (Nicolas Bellaiche)
Date: Mon, 2 Nov 2020 11:06:15 +0000
Subject: [PROJ]  proj_factors
Message-ID: <C6A3E3CA0FD04E47839C6B26C02B803A0136B692D4@mailex1.ign.fr>

Hi all,

I meet difficulties using the function 'proj_factors' to compute the meridian convergence and the scale factor.

I compute the (lambda, phi) from the cartographic coordinates (x,y), then I call proj_factors and receive the error (latitude or longitude exceeds limit).
When i check where the function send the error, it states that the function Proj->fwd is NULL in the pj_deriv sub-function .

Have you any clue of what could happen?

Thanks again for your help,

Nicolas Bellaiche

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201102/770125c8/attachment.html>

From roger.oberholtzer at gmail.com  Tue Nov  3 05:43:38 2020
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Tue, 3 Nov 2020 14:43:38 +0100
Subject: [PROJ] Silly question
Message-ID: <CANkOqwOdCH44w=5FFimXgrthFiMjw_ugVQTcFEmkbdbbGMvQ3w@mail.gmail.com>

If the meridian is, say, 13°30'E, should the +lon_0 be specified as
+lon_0=13.50? It makes sense to me that it might be so.

-- 
Roger Oberholtzer

From njacadieux.gitlab at gmail.com  Tue Nov  3 06:59:05 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Tue, 3 Nov 2020 09:59:05 -0500
Subject: [PROJ] Silly question
In-Reply-To: <CANkOqwOdCH44w=5FFimXgrthFiMjw_ugVQTcFEmkbdbbGMvQ3w@mail.gmail.com>
References: <CANkOqwOdCH44w=5FFimXgrthFiMjw_ugVQTcFEmkbdbbGMvQ3w@mail.gmail.com>
Message-ID: <23947829-0F9A-4F24-BC8E-77B9B2FA1B00@gmail.com>

Hi

Dms to decimals is therefore you are right.

DD = d + (min/60) + (sec/3600)

Nicolas Cadieux

> Le 3 nov. 2020 à 08:44, Roger Oberholtzer <roger.oberholtzer at gmail.com> a écrit :
> 
> ﻿If the meridian is, say, 13°30'E, should the +lon_0 be specified as
> +lon_0=13.50? It makes sense to me that it might be so.
> 
> -- 
> Roger Oberholtzer
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201103/b0d54061/attachment.html>

From kristianevers at gmail.com  Tue Nov  3 07:45:28 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Tue, 3 Nov 2020 16:45:28 +0100
Subject: [PROJ] Combining custom transformations with EPSG
Message-ID: <CALECs+ceyt2AN3b9HQnFwz_GZnj+SEdYvo5k23Nu6k3k=FhrWQ@mail.gmail.com>

All,

I am working on moving the NKG transformations from the NKG-init file to
the PROJ database.
So far I have managed to re-create the transformation from ITRF2014 to the
Danish realization
of ETRS89. Broadly, I have done this by

1. setting up a new datum+CRS called NKG_ETRF00 (used as a hub for
   the various transformations defined by the NKG)
2. adding a concatenated operation from ITRF2014 to NKG_ETRF00, using
   three steps (ITRF2014 -> ITRF2000 -> ETRF2000 -> NKG_ETRF00)
3. adding another concatenated operation from NKG_ETRF00 to ETRS89(DK),
   this time using two steps (NKG_ETRF00 -> ETRF92 at 2000.0 -> ETRF92 at 1994.704
)

All of the above can be seen in this changeset:

https://github.com/kbevers/PROJ/commit/cabea1134d704c4e2cbf968442763565994f1c56

When querying the database with projinfo we can see that it works
as intended:

$ PROJ_LIB=./data/ ./src/projinfo -s EPSG:7789 -t EPSG:4936 --area denmark
-o PROJ
Candidate operations found: 2
-------------------------------------
Operation No. 1:

unknown id, Inverse of ITRF2000 to ITRF2014 (1) + ITRF2000 to ETRF2000 (2)
+ ETRF2000 to NKG_ETRF00 + NKG_ETRF00 to ETRF92 at 2000.0 + ETRF92 at 2000.0 to
ETRF92 at 1994.704, 1.11 m, Denmark - onshore and offshore.

PROJ string:
+proj=pipeline
 +step +inv +proj=helmert +x=-0.0007 +y=-0.0012 +z=0.0261 +rx=0 +ry=0 +rz=0
+s=-0.00212 +dx=-0.0001 +dy=-0.0001 +dz=0.0019 +drx=0 +dry=0 +drz=0
+ds=-0.00011 +t_epoch=2010 +convention=position_vector
 +step +proj=helmert +x=0.054 +y=0.051 +z=-0.048 +rx=0.000891 +ry=0.00539
+rz=-0.008712 +s=0 +dx=0 +dy=0 +dz=0 +drx=8.1e-05 +dry=0.00049
+drz=-0.000792 +ds=0 +t_epoch=2000 +convention=position_vector
 +step +proj=deformation +t_epoch=2000.0
+grids=eur_nkg_nkgrf03vel_realigned.tif
 +step +proj=helmert +x=0.03863 +y=0.147 +z=0.02776 +rx=0.00617753
+ry=5.064e-05
+rz=4.729e-05 +s=-0.00942 +convention=position_vector
 +step +proj=deformation +dt=-5.296 +grids=eur_nkg_nkgrf03vel_realigned.tif

-------------------------------------
Operation No. 2:

unknown id, Ballpark geocentric translation from ITRF2014 to ETRS89,
unknown accuracy, World, has ballpark transformation

PROJ string:
+proj=noop

Frankly, I am quite pleased about that. What I am not pleased about is that
I haven't
managed to integrate this completely with the rest of the database. As an
example, let's
say I want to transform between ITRF2008 and ETRS89(DK) instead:

$ PROJ_LIB=./data/ ./src/projinfo -s EPSG:5332 -t EPSG:4936 --area denmark
-o PROJ
Candidate operations found: 1
-------------------------------------
Operation No. 1:

unknown id, Ballpark geocentric translation from ITRF2008 to ETRS89,
unknown accuracy, World, has ballpark transformation

PROJ string:
+proj=noop

My expectation was that PROJ would connect the dots between my new
transformations and the
existing transformation between ITRF2008 and ITRF2014. PROJ of course knows
about it as
seen here:

$ PROJ_LIB=./data/ ./src/projinfo -s EPSG:5332 -t EPSG:7789 --area denmark
-o PROJ
Candidate operations found: 1
-------------------------------------
Operation No. 1:

EPSG:7790, ITRF2008 to ITRF2014 (1), 0.01 m, World.

PROJ string:
+proj=helmert +x=-0.0016 +y=-0.0019 +z=-0.0024 +rx=0 +ry=0 +rz=0 +s=2e-05
+dx=0
 +dy=0 +dz=0.0001 +drx=0 +dry=0 +drz=0 +ds=-3e-05 +t_epoch=2010
 +convention=position_vector


My question is, what have I missed? Should I add more records to the
database? Or is my
expectation of PROJ's abilities completely of the mark? I suspect the
problem might be that
what I want would require two hub-datums which I assume could be too big of
a combinatorial
task for PROJ to solve in a reasonable time and hence is not happening.

I am trying to avoid adding a bunch of concatenated operations from various
ITRFyyyy's
to NKG_ETRF00. Ideally I would skip the ITRF2014->ITF2000 step and let PROJ
handle that on
it's own. Is that even possible?

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201103/a1b93df7/attachment.html>

From even.rouault at spatialys.com  Tue Nov  3 10:33:43 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 03 Nov 2020 19:33:43 +0100
Subject: [PROJ] Combining custom transformations with EPSG
In-Reply-To: <CALECs+ceyt2AN3b9HQnFwz_GZnj+SEdYvo5k23Nu6k3k=FhrWQ@mail.gmail.com>
References: <CALECs+ceyt2AN3b9HQnFwz_GZnj+SEdYvo5k23Nu6k3k=FhrWQ@mail.gmail.com>
Message-ID: <123445755.BDiCGCsoKm@even-i700>

Hi Kristian,

Happy to see too that we are able to encode custom advanced transformations in 
the formalism of the database. 

Side notes:
- the ETRF92_2000_TO_ETRF92_1994 transformation would in an ideal world be 
encoded as a point motion operation (similarly to EPSG:7957 "Canada velocity 
grid v6" that we don't support) if we had ways of doing change of coordinate 
epoch in a "cleaner" way than what we do currently, that is that 
createOperations() could take a input and output coordinate epoch. But that 
would bring new interesting problems regarding on at which step you do the 
coordinate epoch change . I remember there's a EPSG guidance note that 
examines different scenarios regarding that, but not sure that it adresses all 
cases we could hit.
Hum actually looking closer at the way you define this transformation, that 
couldn't be a point motion operation as your target CRS code != source CRS, 
saying that ETRF92 at 1994.704 == ETRS89 in Denmark.

- ETRF2000_TO_NKG_ETRF00 using a fixed central epoch would need to be another 
kind of operation. It would be a bit like the time-specific Helmert 
transformation that is used in a few EPSG transformations (but we currently 
don't map to a PROJ transformation).

> I haven't
> managed to integrate this completely with the rest of the database. As an
> example, let's
> say I want to transform between ITRF2008 and ETRS89(DK) instead:
> My question is, what have I missed? Should I add more records to the
> database? Or is my
> expectation of PROJ's abilities completely of the mark? I suspect the
> problem might be that
> what I want would require two hub-datums which I assume could be too big of
> a combinatorial task for PROJ to solve in a reasonable time and hence is not 
happening.

You guessed right. Figuring out that ITRF2008 to ETRS89 needs to go through 
ITRF2014 and then NKG_ETRF00 as intermediate steps is out of reach of PROJ 
inference capabilities.  It indeed "just" manages one hop. For performance 
results mostly and because the SQL requests would be quite horrific (have a 
look at AuthorityFactory::createFromCRSCodesWithIntermediates() and
AuthorityFactory::createBetweenGeodeticCRSWithDatumBasedIntermediates() for 
the "simple" version with just one intermediate). And with just one hop, in 
some cases that can lead to hundreds of results being returned.

So my suggesting would be that you create concatenated operations for
ITRFxxxx -> NKG_ETRF00
chaining ITRFxxxx -> ITRF2014 and ITRF2014 -> NKG_ETRF00

Normally, concatenated operations of concatenated operations aren't supported 
by ISO19111. I believe that PROJ could accept that as it relaxes that 
constraint, but it would be best to make a slight code change to "flatten" the 
hiearchy (otherwise the WKT produced would be non-conformant for example) when 
building the object from the database, to have at the end ITRFxxx -> 
NKG_ETRF00 being a concatenated operation of single transformations.

The beginning of ConcatenatedOperation::createComputeMetadata() has a logic to 
do that flattening. It should probably be moved in a dedicated static method

std::vector<CoordinateOperationNNPtr> 
ConcatenatedOperation::flattenOperations(
					const std::vector<CoordinateOperationNNPtr> &)

that would be called by the code towards the end of
AuthorityFactory::createCoordinateOperation() before it calls
operation::ConcatenatedOperation::create()


One idea I had in the past to make PROJ inference a bit more powerful, without 
going to a full 2 or 3-hops database lookups would be do define "families" of 
datums, that is sets of datums that are known to be related by 
transformations, which would guide PROJ in infering more transformation paths. 
For example the various NAD83(xxxx) datum (especially if NADCON5 is 
integrated, which has transformations only between 'consecutive' NAD83(xxxx) 
variants, but not between arbitrary pairs of them), or ITRFxxxx, could be such 
families. Writing that, it looks a bit like the DatumEnsemble concept, except 
that we wouldn't constraint those datums to be considered as "equivalent" for 
lower accuracy purposes. Anyway this is just an idea without any 
implementation reality right now.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kristianevers at gmail.com  Tue Nov  3 12:27:03 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Tue, 3 Nov 2020 21:27:03 +0100
Subject: [PROJ] Combining custom transformations with EPSG
In-Reply-To: <123445755.BDiCGCsoKm@even-i700>
References: <CALECs+ceyt2AN3b9HQnFwz_GZnj+SEdYvo5k23Nu6k3k=FhrWQ@mail.gmail.com>
 <123445755.BDiCGCsoKm@even-i700>
Message-ID: <FD34047E-8459-41D0-B548-AAB1C93431A8@gmail.com>

Even,

Thanks for you feedback and confirming my suspicion about PROJ’s limitation.

> Happy to see too that we are able to encode custom advanced transformations in 
> the formalism of the database. 

So am I! You’ve done a great job making all this work.

> 
> Side notes:
> - the ETRF92_2000_TO_ETRF92_1994 transformation would in an ideal world be 
> encoded as a point motion operation (similarly to EPSG:7957 "Canada velocity 
> grid v6" that we don't support) if we had ways of doing change of coordinate 
> epoch in a "cleaner" way than what we do currently, that is that 
> createOperations() could take a input and output coordinate epoch. But that 
> would bring new interesting problems regarding on at which step you do the 
> coordinate epoch change . I remember there's a EPSG guidance note that 
> examines different scenarios regarding that, but not sure that it adresses all 
> cases we could hit.
> Hum actually looking closer at the way you define this transformation, that 
> couldn't be a point motion operation as your target CRS code != source CRS, 
> saying that ETRF92 at 1994.704 == ETRS89 in Denmark.

It’s a bit tricky, but yes, the endpoint is a static frame which effectively is a snapshot
of ETRS89/ETRF92 at epoch 1994.704. It is common practice to put a local name
on such realizations of ETRS89, e.g. the Swedish SWEREF99, but unfortunately
that was never done for the Danish realization of ETRS89. Hence using the ETRS89
ensemble EPSG:4936. I may add NKG:DK CRS/datum to make things clearer but I
haven’t decided on that yet.

> 
> - ETRF2000_TO_NKG_ETRF00 using a fixed central epoch would need to be another 
> kind of operation. It would be a bit like the time-specific Helmert 
> transformation that is used in a few EPSG transformations (but we currently 
> don't map to a PROJ transformation).

I am not sure I follow, are you thinking about a WKT2-mapping of +proj=deformation?
Or perhaps an EPSG-mapping? At some point I will get round to submitting these
transformations to the EPSG registry.

> You guessed right. Figuring out that ITRF2008 to ETRS89 needs to go through 
> ITRF2014 and then NKG_ETRF00 as intermediate steps is out of reach of PROJ 
> inference capabilities.  It indeed "just" manages one hop. For performance 
> results mostly and because the SQL requests would be quite horrific (have a 
> look at AuthorityFactory::createFromCRSCodesWithIntermediates() and
> AuthorityFactory::createBetweenGeodeticCRSWithDatumBasedIntermediates() for 
> the "simple" version with just one intermediate). And with just one hop, in 
> some cases that can lead to hundreds of results being returned.
> 

I figured. I think I remember we had a discussion about this way back when. It’s
good to get confirmed that is the case.

> So my suggesting would be that you create concatenated operations for
> ITRFxxxx -> NKG_ETRF00
> chaining ITRFxxxx -> ITRF2014 and ITRF2014 -> NKG_ETRF00

That would probably work, yes. Another solution is to not use NKG_ETRF00
as a hub at all and simply make one big concatenated operation from ITRF2000
to each national realization of ETRS89. In this particular setup I actually don’t
need the NKG_ETRF00 as a hub. That was usefull in the init-file but shouldn’t
be necessary here. 

> 
> One idea I had in the past to make PROJ inference a bit more powerful, without 
> going to a full 2 or 3-hops database lookups would be do define "families" of 
> datums, that is sets of datums that are known to be related by 
> transformations, which would guide PROJ in infering more transformation paths. 
> For example the various NAD83(xxxx) datum (especially if NADCON5 is 
> integrated, which has transformations only between 'consecutive' NAD83(xxxx) 
> variants, but not between arbitrary pairs of them), or ITRFxxxx, could be such 
> families. Writing that, it looks a bit like the DatumEnsemble concept, except 
> that we wouldn't constraint those datums to be considered as "equivalent" for 
> lower accuracy purposes. Anyway this is just an idea without any 
> implementation reality right now.

It’s an interesting idea, I can see how that might be useful. 

/Kristian

From even.rouault at spatialys.com  Tue Nov  3 13:10:46 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 03 Nov 2020 22:10:46 +0100
Subject: [PROJ] Combining custom transformations with EPSG
In-Reply-To: <FD34047E-8459-41D0-B548-AAB1C93431A8@gmail.com>
References: <CALECs+ceyt2AN3b9HQnFwz_GZnj+SEdYvo5k23Nu6k3k=FhrWQ@mail.gmail.com>
 <123445755.BDiCGCsoKm@even-i700>
 <FD34047E-8459-41D0-B548-AAB1C93431A8@gmail.com>
Message-ID: <28678106.sH8MIFUKHP@even-i700>

> > - ETRF2000_TO_NKG_ETRF00 using a fixed central epoch would need to be
> > another kind of operation. It would be a bit like the time-specific
> > Helmert transformation that is used in a few EPSG transformations (but we
> > currently don't map to a PROJ transformation).
> 
> I am not sure I follow, are you thinking about a WKT2-mapping of
> +proj=deformation? Or perhaps an EPSG-mapping? At some point I will get
> round to submitting these transformations to the EPSG registry.

Yes I was talking about EPSG mapping ( WKT itself doesn't define any name of 
operation method )

> Another solution is to not use NKG_ETRF00
> as a hub at all and simply make one big concatenated operation from ITRF2000
> to each national realization of ETRS89. 

Yes, you would to the 1-hop handled case.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lnicola at dend.ro  Wed Nov  4 11:08:17 2020
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Wed, 04 Nov 2020 21:08:17 +0200
Subject: [PROJ] Realistic way of handling unknown bounds in
	proj_get_area_of_use
Message-ID: <2ec41766-95ec-494b-8fe0-1d430e2c58cc@www.fastmail.com>

Hello, and sorry if this is a strange question -- I'm not really familiar with the PROJ library.

While trying to include proj_get_area_of_use in the Rust PROJ bindings (https://github.com/georust/proj/pull/50) a question came up of how probable is the case when the call succeeds, but the bounds are not available (and are thus returned as -1000).

>From the implementation, it looks like it might happen (it could be that only one of the four values is unknown), but as a novice user I would associate that with an error case. So I guess I'm asking if:

1. could it happen that the area name is available but the bounds are missing?
2. if one or more of the limits is missing, can a caller do anything meaningful with the result, or is it practically an error?

As prior art, pyproj doesn't seem to check for -1000, putting the onus on the caller to validate the bounds. My feeling is that the answer to both questions above is true and the Rust bindings should try to preserve that functionality.

Thanks,
Laurentiu Nicola
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201104/49d3334a/attachment.html>

From even.rouault at spatialys.com  Wed Nov  4 11:33:44 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 04 Nov 2020 20:33:44 +0100
Subject: [PROJ] Realistic way of handling unknown bounds in
	proj_get_area_of_use
In-Reply-To: <2ec41766-95ec-494b-8fe0-1d430e2c58cc@www.fastmail.com>
References: <2ec41766-95ec-494b-8fe0-1d430e2c58cc@www.fastmail.com>
Message-ID: <2847322.yNit4BjnKo@even-i700>

On mercredi 4 novembre 2020 21:08:17 CET Laurențiu Nicola wrote:
> Hello, and sorry if this is a strange question -- I'm not really familiar
> with the PROJ library.
> 
> While trying to include proj_get_area_of_use in the Rust PROJ bindings
> (https://github.com/georust/proj/pull/50) a question came up of how
> probable is the case when the call succeeds, but the bounds are not
> available (and are thus returned as -1000).
> 
> From the implementation, it looks like it might happen (it could be that
> only one of the four values is unknown), but as a novice user I would
> associate that with an error case. So I guess I'm asking if:
> 
> 1. could it happen that the area name is available but the bounds are
> missing? 2. if one or more of the limits is missing, can a caller do
> anything meaningful with the result, or is it practically an error?
> 
> As prior art, pyproj doesn't seem to check for -1000, putting the onus on
> the caller to validate the bounds. My feeling is that the answer to both
> questions above is true and the Rust bindings should try to preserve that
> functionality.

It should be uncommon to have an area of use without its bounding box, but if 
you instanciate a CRS from WKT2 with a USAGE[AREA["foo]] node, you would be in 
that situation.
You'll get either all 4 bounds valid or at -1000, not a mix of valid and 
invalid values.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Nov  4 11:55:00 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 04 Nov 2020 20:55:00 +0100
Subject: [PROJ] Fwd: Bug in the file proj.db
In-Reply-To: <451d50e5-d223-505f-cca0-f383145976a9@olafwillenbrock.de>
References: <da98eebd-258f-725c-972b-8c23bfc0841e@olafwillenbrock.de>
 <451d50e5-d223-505f-cca0-f383145976a9@olafwillenbrock.de>
Message-ID: <1743494.zFYKoQ0dOe@even-i700>

Olaf,

(Forwarding/replying to the list, but you should subscribe to the mailing list 
in order to post.)

The alias you mention are coming from ESRI and are thus the "official" name to 
be used for WKT to put in shapefile .prj files.

Trying with recent GDAL (3.2) and PROJ (7.2), I don't get any round-tripping 
issue.

$ ogr2ogr -a_srs EPSG:31467 out.shp poly.shp
$ gdalsrsinfo -e out.shp | grep "EPSG:"
EPSG:31467

Presumably something has been fixed since the PROJ version you use, likely the 
logic in PROJ to "identify" a WKT string to a known CRS from the database. I 
although suspect this might perhaps come from your QGIS version: I don't 
remember if 3.4 was fully ready to deal with latest PROJ versions. You'd be 
better with 3.10 or later.

Even

On mercredi 4 novembre 2020 19:29:44 CET Olaf Willenbrock wrote:
> second try of my e-mail
> 
> 
> -------- Weitergeleitete Nachricht --------
> Betreff: Bug in the file proj.db
> Datum: Wed, 4 Nov 2020 18:07:49 +0100
> Von: Olaf Willenbrock <mail at olafwillenbrock.de>
> An: proj at lists.osgeo.org
> 
> 
> Hello,
> 
> I think I found a bug in the file proj.db. I am using the version of
> GDAL 3.1.3 from https://gisinternals.com/release.php
> In the file proj.db there is a table called "alias_name". If you start
> the following query:
> select * from "alias_name" where code like "3146%"
> 
> you will find nine coordinate reference systems with the codes 31461 to
> 31469. They are used in Germany. The five CRS 31461 to 31465 are
> deprecated. The four CRS 31466 to 31469 are valid.
> 
> The nine records are:
> table_name    auth_name    code    alt_name    source
> projected_crs    EPSG    31461    DHDN_3_Degree_Gauss_Zone_1    ESRI
> projected_crs    EPSG    31462    DHDN_3_Degree_Gauss_Zone_2    ESRI
> projected_crs    EPSG    31463    DHDN_3_Degree_Gauss_Zone_3    ESRI
> projected_crs    EPSG    31464    DHDN_3_Degree_Gauss_Zone_4    ESRI
> projected_crs    EPSG    31465    DHDN_3_Degree_Gauss_Zone_5    ESRI
> projected_crs    EPSG    31466    DHDN_3_Degree_Gauss_Zone_2    ESRI
> projected_crs    EPSG    31467    DHDN_3_Degree_Gauss_Zone_3    ESRI
> projected_crs    EPSG    31468    DHDN_3_Degree_Gauss_Zone_4    ESRI
> projected_crs    EPSG    31469    DHDN_3_Degree_Gauss_Zone_5    ESRI
> 
> The text in the field "alt_name" is "DHDN_3_Degree_Gauss_Zone_[x]" where
> [x] is a number from 1 to 5. The text for the valid CRS is wrong (I
> think). The word "Kruger_" is missing. It must be
> "DHDN_3_Degree_Gauss_Kruger_Zone_[x]".
> 
> If you look at the table "projected_crs" in the file proj.db you can
> find this nine records:
> 
> auth_name    code    name    deprecated
> EPSG    31461    DHDN / 3-degree Gauss zone 1    1
> EPSG    31462    DHDN / 3-degree Gauss zone 2    1
> EPSG    31463    DHDN / 3-degree Gauss zone 3    1
> EPSG    31464    DHDN / 3-degree Gauss zone 4    1
> EPSG    31465    DHDN / 3-degree Gauss zone 5    1
> EPSG    31466    DHDN / 3-degree Gauss-Kruger zone 2    0
> EPSG    31467    DHDN / 3-degree Gauss-Kruger zone 3    0
> EPSG    31468    DHDN / 3-degree Gauss-Kruger zone 4    0
> EPSG    31469    DHDN / 3-degree Gauss-Kruger zone 5    0
> 
> The names of the valid CRS contains "Kruger".
> 
> I found this bug by using ogr2ogr and QGIS (3.4.8). If you run this
> command with a valid EPSG:
> ogr2ogr.exe -t_srs EPSG:31467 output.shp input.shp
> 
> and open the output.shp in QGIS and look at the file properties you can
> find this:
> EPSG:31463 - DHDN / 3-degree Gauss zone 3 (deprecated)
> This is wrong. This is the wrong EPSG number.
> 
> The prj file contains the text "DHDN_3_Degree_Gauss_Zone_3".
> 
> Now I have modified the file proj.db and added the missing text
> "Kruger_" and run the command again. Now the prj file contains the text
> "DHDN_3_Degree_Gauss_Kruger_Zone_3" and QGIS is showing:
> EPSG:31467 - DHDN / 3-degree Gauss-Kruger zone 3
> This is the correct EPSG number.
> 
> Can you please verify if this is a bug and if the file proj.db is the
> problem? Perhaps the problem is more complicate and other files are
> responsible.
> 
> Best regards
> 
> Olaf


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From henry at silviaterra.com  Thu Nov  5 04:04:04 2020
From: henry at silviaterra.com (Henry Rodman)
Date: Thu, 5 Nov 2020 06:04:04 -0600
Subject: [PROJ] EPSG:2163 is deprecated
Message-ID: <CAB59xmGna8ugmhvoRTAh=QG7B_P+yjVTggDQMqkM=R16tT3hUw@mail.gmail.com>

Hello, I recently updated to new versions of PROJ (7.1.1) and GDAL (3.1.3)
on my Ubuntu machine and am experiencing some unexpected behavior when I
work with files projected in EPSG:2163 (US National Atlas Equal Area). I do
not experience the same issues in environments with PROJ 7.0.0 and GDAL
3.0.4 installed.

It seems as if EPSG:2163 has been "deprecated" or "orphaned" but I cannot
find any information about how or why this happened. I found this request
from Even Rouault with a recent search:
https://apps.epsg.org/api/v1/Change/2020.020/export?format=gml

I use this projection quite often and would like to know if there is
anything I can do to resuscitate EPSG:2163! Maybe there is some parameter I
can set locally that would override the automatic reassignment to
EPSG:9311? Or maybe the CRS needs updated documentation or something like
that?

Either GDAL or PROJ (I don't know which) is attempting to redefine the
projection of my files as EPSG:9311 which I believe has a different datum.

When I run projinfo EPSG:2163, I get this message:
> projinfo EPSG:2163
Warning: object is deprecated
Alternative non-deprecated CRS:
  EPSG:9311

When I run gdalinfo on a file projected in EPSG:2163 it looks as if the
projection has been re-interpreted as EPSG:9311 already:

>gdalinfo test.tif
Driver: GTiff/GeoTIFF
Files: test.tif
       test.tif.aux.xml
Size is 49, 1336
Coordinate System is:
PROJCRS["NAD27 / US National Atlas Equal Area",
    BASEGEOGCRS["NAD27",
        DATUM["North American Datum 1927",
            ELLIPSOID["Clarke 1866",6378206.4,294.978698213898,
                LENGTHUNIT["metre",1]]],
        PRIMEM["Greenwich",0,
            ANGLEUNIT["degree",0.0174532925199433]],
        ID["EPSG",4267]],
    CONVERSION["US National Atlas Equal Area",
        METHOD["Lambert Azimuthal Equal Area (Spherical)",
            ID["EPSG",1027]],
        PARAMETER["Latitude of natural origin",45,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8801]],
        PARAMETER["Longitude of natural origin",-100,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8802]],
        PARAMETER["False easting",0,
            LENGTHUNIT["metre",1],
            ID["EPSG",8806]],
        PARAMETER["False northing",0,
            LENGTHUNIT["metre",1],
            ID["EPSG",8807]]],
    CS[Cartesian,2],
        AXIS["easting (X)",east,
            ORDER[1],
            LENGTHUNIT["metre",1]],
        AXIS["northing (Y)",north,
            ORDER[2],
            LENGTHUNIT["metre",1]],
    USAGE[
        SCOPE["unknown"],
        AREA["USA"],
        BBOX[15.56,167.65,74.71,-65.69]],
    ID["EPSG",9311]]
Data axis to CRS axis mapping: 1,2

I put some more details on this GIS StackExchange question
<https://gis.stackexchange.com/questions/377099/deprecated-crs-epsg2163-gets-reinterpreted-as-another-crs-epsg9311-by-gdal>

Thank you in advance for any advice!

-- 
Henry Rodman
Forest Biometrician
SilviaTerra
henry at silviaterra.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201105/33e68c32/attachment.html>

From even.rouault at spatialys.com  Thu Nov  5 05:07:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Nov 2020 14:07:32 +0100
Subject: [PROJ] EPSG:2163 is deprecated
In-Reply-To: <CAB59xmGna8ugmhvoRTAh=QG7B_P+yjVTggDQMqkM=R16tT3hUw@mail.gmail.com>
References: <CAB59xmGna8ugmhvoRTAh=QG7B_P+yjVTggDQMqkM=R16tT3hUw@mail.gmail.com>
Message-ID: <3320140.tRnuSvICzQ@even-i700>

Henry,

(I've manually forwarded your post to the list, but you should subscribe to 
the mailing list in order to post here)

As far as I remember regarding the deprecation of EPSG:2163, I noticed in a 
recent EPSG release that the underlying datum of EPSG:2163 which is EPSG:4052 
"Unspecified datum based upon the Clarke 1866 Authalic Sphere" was now 
deprecated, but EPSG:2163 was still non-deprecated, which isn't very logical. 
IOGP conclusion was that EPSG:2163 had to be deprecated, and they created 
EPSG:9311 as the future proof CRS.

The automated substitution is done by GDAL 
OGRSpatialReference::ImportFromEPSG() method. I admit this may be a bit 
surprising. If I remember well, this was to emulate a past GDAL behaviour 
where some deprecated Italian CRS had an override in the .csv files GDAL 
handled to "fix" it to have an equivalent definition of the non-deprecated 
newer CRS. The cleanest way with the now PROJ mechanism was to identify the 
non-deprecated version of a deprecated CRS instead, but I can see this is not 
always desirable.

You can opt out for that automatic substituion by setting the 
OSR_USE_NON_DEPRECATED environment variable to NO

Even

> Hello, I recently updated to new versions of PROJ (7.1.1) and GDAL (3.1.3)
> on my Ubuntu machine and am experiencing some unexpected behavior when I
> work with files projected in EPSG:2163 (US National Atlas Equal Area). I do
> not experience the same issues in environments with PROJ 7.0.0 and GDAL
> 3.0.4 installed.
> 
> It seems as if EPSG:2163 has been "deprecated" or "orphaned" but I cannot
> find any information about how or why this happened. I found this request
> from Even Rouault with a recent search:
> https://apps.epsg.org/api/v1/Change/2020.020/export?format=gml
> 
> I use this projection quite often and would like to know if there is
> anything I can do to resuscitate EPSG:2163! Maybe there is some parameter I
> can set locally that would override the automatic reassignment to
> EPSG:9311? Or maybe the CRS needs updated documentation or something like
> that?
> 
> Either GDAL or PROJ (I don't know which) is attempting to redefine the
> projection of my files as EPSG:9311 which I believe has a different datum.
> 
> When I run projinfo EPSG:2163, I get this message:
> > projinfo EPSG:2163
> 
> Warning: object is deprecated
> Alternative non-deprecated CRS:
>   EPSG:9311
> 
> When I run gdalinfo on a file projected in EPSG:2163 it looks as if the
> 
> projection has been re-interpreted as EPSG:9311 already:
> >gdalinfo test.tif
> 
> Driver: GTiff/GeoTIFF
> Files: test.tif
>        test.tif.aux.xml
> Size is 49, 1336
> Coordinate System is:
> PROJCRS["NAD27 / US National Atlas Equal Area",
>     BASEGEOGCRS["NAD27",
>         DATUM["North American Datum 1927",
>             ELLIPSOID["Clarke 1866",6378206.4,294.978698213898,
>                 LENGTHUNIT["metre",1]]],
>         PRIMEM["Greenwich",0,
>             ANGLEUNIT["degree",0.0174532925199433]],
>         ID["EPSG",4267]],
>     CONVERSION["US National Atlas Equal Area",
>         METHOD["Lambert Azimuthal Equal Area (Spherical)",
>             ID["EPSG",1027]],
>         PARAMETER["Latitude of natural origin",45,
>             ANGLEUNIT["degree",0.0174532925199433],
>             ID["EPSG",8801]],
>         PARAMETER["Longitude of natural origin",-100,
>             ANGLEUNIT["degree",0.0174532925199433],
>             ID["EPSG",8802]],
>         PARAMETER["False easting",0,
>             LENGTHUNIT["metre",1],
>             ID["EPSG",8806]],
>         PARAMETER["False northing",0,
>             LENGTHUNIT["metre",1],
>             ID["EPSG",8807]]],
>     CS[Cartesian,2],
>         AXIS["easting (X)",east,
>             ORDER[1],
>             LENGTHUNIT["metre",1]],
>         AXIS["northing (Y)",north,
>             ORDER[2],
>             LENGTHUNIT["metre",1]],
>     USAGE[
>         SCOPE["unknown"],
>         AREA["USA"],
>         BBOX[15.56,167.65,74.71,-65.69]],
>     ID["EPSG",9311]]
> Data axis to CRS axis mapping: 1,2
> 
> I put some more details on this GIS StackExchange question
> <https://gis.stackexchange.com/questions/377099/deprecated-crs-epsg2163-gets
> -reinterpreted-as-another-crs-epsg9311-by-gdal>
> 
> Thank you in advance for any advice!


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Nicolas.Bellaiche at ign.fr  Thu Nov  5 07:08:48 2020
From: Nicolas.Bellaiche at ign.fr (Nicolas Bellaiche)
Date: Thu, 5 Nov 2020 15:08:48 +0000
Subject: [PROJ] Can't obtain meridian convergence and scale factor
Message-ID: <C6A3E3CA0FD04E47839C6B26C02B803A0136B694A6@mailex1.ign.fr>

Hi,

I'm struggling computing the scale factor and the meridian convergence from a PJ object. I'm working with the C++ API, but even with the executable proj, it doesn't seem to work properly:


echo 600000 2200000 | proj +init=IGNF:LAMBE -SV

sends back

#Lambert Conformal Conic

# Conic, Sph&Ell

# lat_1= and lat_2= or lat_0, k_0=

# +init=IGNF:LAMBE +proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742

# +x_0=600000 +y_0=2200000 +ellps=clrk80ign +pm=paris +units=m +no_defs

#--- following specified but NOT used

# +type=crs

#Final Earth figure: ellipsoid

#  Major axis (a): 6378249.200

#  1/flattening: 293.466021

#  squared eccentricity: 0.006803487646

Rel. 7.0.0, March 1st, 2020

<proj>: while processing file: <stdin>, line 1

latitude or longitude exceeded limits


What's wrong? Bug in the code or misunderstanding from me.


Thanks a lot,


Nicolas Bellaiche


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201105/f0b81372/attachment.html>

From jagoncal at gmail.com  Thu Nov  5 09:56:48 2020
From: jagoncal at gmail.com (=?UTF-8?Q?Jose_Gon=C3=A7alves?=)
Date: Thu, 5 Nov 2020 17:56:48 +0000
Subject: [PROJ] Can't obtain meridian convergence and scale factor
In-Reply-To: <C6A3E3CA0FD04E47839C6B26C02B803A0136B694A6@mailex1.ign.fr>
References: <C6A3E3CA0FD04E47839C6B26C02B803A0136B694A6@mailex1.ign.fr>
Message-ID: <CALHLaORfOwQZKp6LJC1WU3RzQi7uLF4SgvYdGy6YkKY0+=g0Cw@mail.gmail.com>

Your input is projected coordinates. You should do the inverse:

echo 600000 2200000 | proj -I +init=IGNF:LAMBE -SV

Regards

José Gonçalves

Em qui., 5 de nov. de 2020 às 15:08, Nicolas Bellaiche
<Nicolas.Bellaiche at ign.fr> escreveu:
>
> Hi,
>
> I'm struggling computing the scale factor and the meridian convergence from a PJ object. I'm working with the C++ API, but even with the executable proj, it doesn't seem to work properly:
>
> echo 600000 2200000 | proj +init=IGNF:LAMBE -SV
>
>
> sends back
>
> #Lambert Conformal Conic
>
> # Conic, Sph&Ell
>
> # lat_1= and lat_2= or lat_0, k_0=
>
> # +init=IGNF:LAMBE +proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742
>
> # +x_0=600000 +y_0=2200000 +ellps=clrk80ign +pm=paris +units=m +no_defs
>
> #--- following specified but NOT used
>
> # +type=crs
>
> #Final Earth figure: ellipsoid
>
> #  Major axis (a): 6378249.200
>
> #  1/flattening: 293.466021
>
> #  squared eccentricity: 0.006803487646
>
> Rel. 7.0.0, March 1st, 2020
>
> <proj>: while processing file: <stdin>, line 1
>
> latitude or longitude exceeded limits
>
>
> What's wrong? Bug in the code or misunderstanding from me.
>
>
> Thanks a lot,
>
>
> Nicolas Bellaiche
>
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From nirvn.asia at gmail.com  Tue Nov 10 01:39:03 2020
From: nirvn.asia at gmail.com (Mathieu Pellerin)
Date: Tue, 10 Nov 2020 16:39:03 +0700
Subject: [PROJ] question regarding vertical shift
Message-ID: <CAC_qv=pFhMwpmicBg=NR9z0QFmBqdXdbYghYXGa92KkE7WzzvQ@mail.gmail.com>

Greetings,

I’m hoping the mailing list can enlighten me regarding handling of vertical
shift in PROJ.

Using this Switzerland vertical shift grid (
https://www.dropbox.com/s/6uzpg3gr47q1p1k/CHGeo04.gtx?dl=0), if I type in
the following command to adjust vertical height (100 meters here):

echo 7.9995 46.7949 100 | cct +proj=vgridshift +grids=CHGeo04.gtx

PROJ returns the following result:

7.9995000000   46.7949000000       49.8406           inf

The adjusted height is 49.8 meters. This puzzles me as the grid’s value at
the provided longitude and latitude (i.e.  7.9995 46.7949) is 50.179. I
would have assumed that this meant a vertical adjustment of +50.179, not
-50.179 as observed by the PROJ returned values.

Is PROJ’s result the correct one based on the grid? Or should an inverse
transformation (i.e. cct -t) be used here? If so, what’s the rationale of
whether to pick forward or inverse transformation?

Regards,

Mathieu Pellerin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201110/0e86d5fd/attachment.html>

From j1 at jimenezshaw.com  Tue Nov 10 02:10:34 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 10 Nov 2020 11:10:34 +0100
Subject: [PROJ] question regarding vertical shift
In-Reply-To: <CAC_qv=pFhMwpmicBg=NR9z0QFmBqdXdbYghYXGa92KkE7WzzvQ@mail.gmail.com>
References: <CAC_qv=pFhMwpmicBg=NR9z0QFmBqdXdbYghYXGa92KkE7WzzvQ@mail.gmail.com>
Message-ID: <CADRrdKta_5Ch6fG7WkbBR20pW6r9c=S1UcO1HHFXvNLXwNLWsw@mail.gmail.com>

Hi Mathieu

I do not know if I understand your question correctly. In Switzerland the
geoid is above the ellipsoid (about 50 meters). That is a positive geoid
undulation. So the orthometric height (over the geoid) is smaller than the
ellipsoidal height.

This may clarify it:
https://www.ngs.noaa.gov/GEOID/GSVS/

Cheers
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Tue, 10 Nov 2020 at 10:39, Mathieu Pellerin <nirvn.asia at gmail.com> wrote:

> Greetings,
>
> I’m hoping the mailing list can enlighten me regarding handling of
> vertical shift in PROJ.
>
> Using this Switzerland vertical shift grid (
> https://www.dropbox.com/s/6uzpg3gr47q1p1k/CHGeo04.gtx?dl=0), if I type in
> the following command to adjust vertical height (100 meters here):
>
> echo 7.9995 46.7949 100 | cct +proj=vgridshift +grids=CHGeo04.gtx
>
> PROJ returns the following result:
>
> 7.9995000000   46.7949000000       49.8406           inf
>
> The adjusted height is 49.8 meters. This puzzles me as the grid’s value at
> the provided longitude and latitude (i.e.  7.9995 46.7949) is 50.179. I
> would have assumed that this meant a vertical adjustment of +50.179, not
> -50.179 as observed by the PROJ returned values.
>
> Is PROJ’s result the correct one based on the grid? Or should an inverse
> transformation (i.e. cct -t) be used here? If so, what’s the rationale of
> whether to pick forward or inverse transformation?
>
> Regards,
>
> Mathieu Pellerin
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201110/3486c931/attachment.html>

From nirvn.asia at gmail.com  Tue Nov 10 02:24:45 2020
From: nirvn.asia at gmail.com (Mathieu Pellerin)
Date: Tue, 10 Nov 2020 17:24:45 +0700
Subject: [PROJ] question regarding vertical shift
In-Reply-To: <CADRrdKta_5Ch6fG7WkbBR20pW6r9c=S1UcO1HHFXvNLXwNLWsw@mail.gmail.com>
References: <CAC_qv=pFhMwpmicBg=NR9z0QFmBqdXdbYghYXGa92KkE7WzzvQ@mail.gmail.com>
 <CADRrdKta_5Ch6fG7WkbBR20pW6r9c=S1UcO1HHFXvNLXwNLWsw@mail.gmail.com>
Message-ID: <CAC_qv=qnPhWM3hNLoseWBNJMWcfuhhirNPBNsPoLH=ONV2DkDg@mail.gmail.com>

Javier, useful link, I think it did provide me with some higher level of
clarity :)

Thanks,

Mathieu

On Tue, Nov 10, 2020 at 5:10 PM Javier Jimenez Shaw <j1 at jimenezshaw.com>
wrote:

> Hi Mathieu
>
> I do not know if I understand your question correctly. In Switzerland the
> geoid is above the ellipsoid (about 50 meters). That is a positive geoid
> undulation. So the orthometric height (over the geoid) is smaller than the
> ellipsoidal height.
>
> This may clarify it:
> https://www.ngs.noaa.gov/GEOID/GSVS/
>
> Cheers
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Tue, 10 Nov 2020 at 10:39, Mathieu Pellerin <nirvn.asia at gmail.com>
> wrote:
>
>> Greetings,
>>
>> I’m hoping the mailing list can enlighten me regarding handling of
>> vertical shift in PROJ.
>>
>> Using this Switzerland vertical shift grid (
>> https://www.dropbox.com/s/6uzpg3gr47q1p1k/CHGeo04.gtx?dl=0), if I type
>> in the following command to adjust vertical height (100 meters here):
>>
>> echo 7.9995 46.7949 100 | cct +proj=vgridshift +grids=CHGeo04.gtx
>>
>> PROJ returns the following result:
>>
>> 7.9995000000   46.7949000000       49.8406           inf
>>
>> The adjusted height is 49.8 meters. This puzzles me as the grid’s value
>> at the provided longitude and latitude (i.e.  7.9995 46.7949) is 50.179. I
>> would have assumed that this meant a vertical adjustment of +50.179, not
>> -50.179 as observed by the PROJ returned values.
>>
>> Is PROJ’s result the correct one based on the grid? Or should an inverse
>> transformation (i.e. cct -t) be used here? If so, what’s the rationale of
>> whether to pick forward or inverse transformation?
>>
>> Regards,
>>
>> Mathieu Pellerin
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201110/d6a6db49/attachment.html>

From even.rouault at spatialys.com  Tue Nov 10 02:39:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 10 Nov 2020 11:39:30 +0100
Subject: [PROJ] question regarding vertical shift
In-Reply-To: <CAC_qv=pFhMwpmicBg=NR9z0QFmBqdXdbYghYXGa92KkE7WzzvQ@mail.gmail.com>
References: <CAC_qv=pFhMwpmicBg=NR9z0QFmBqdXdbYghYXGa92KkE7WzzvQ@mail.gmail.com>
Message-ID: <1993496.bTj6MafdgI@even-i700>

Mathieu,

> I’m hoping the mailing list can enlighten me regarding handling of vertical
> shift in PROJ.
> 
> Using this Switzerland vertical shift grid (
> https://www.dropbox.com/s/6uzpg3gr47q1p1k/CHGeo04.gtx?dl=0), if I type in
> the following command to adjust vertical height (100 meters here):
> 
> echo 7.9995 46.7949 100 | cct +proj=vgridshift +grids=CHGeo04.gtx
> 
> PROJ returns the following result:
> 
> 7.9995000000   46.7949000000       49.8406           inf
> 
> The adjusted height is 49.8 meters. This puzzles me as the grid’s value at
> the provided longitude and latitude (i.e.  7.9995 46.7949) is 50.179. I
> would have assumed that this meant a vertical adjustment of +50.179, not
> -50.179 as observed by the PROJ returned values.
> 
> Is PROJ’s result the correct one based on the grid? Or should an inverse
> transformation (i.e. cct -t) be used here? If so, what’s the rationale of
> whether to pick forward or inverse transformation?

The maths used by PROJ are explained here:
https://proj.org/operations/transformations/vgridshift.html#cmdoption-arg-multiplier

So by default PROJ will subtract the value from the grid to the input Z value. The rationale
is mostly historic and related to the fact +proj=vgridshift was used to emulate PROJ.4 style
+geoidgrids= parameter, which when applied for a target CRS in the forward direction
must go from ellipsoidal height to orthometric height, hence subtracting the value in
a geoid grid (we could also justify this default multiplier=-1 as in EPSG geoid-based
transformations are documented to go from the Geographic 3D CRS to the Vertical CRS, which
also means that the grid value must be subtracted)

So if you want to add the value of a vgridshift / go from orthometric height to ellipsoidal
height, add +multiplier=1  (or using the -I flag, but I find +multiplier=1 less confusing
as you directly specify the math)

vgridshift can also be used to do transformations between 2 vertical CRS, and if the
grid is documented to transfrom from A to B (by adding value of the grid) and you want
to transform from A to B, then you must also specify +multiplier=1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From houder at xs4all.nl  Sun Nov 15 03:23:13 2020
From: houder at xs4all.nl (Houder)
Date: Sun, 15 Nov 2020 12:23:13 +0100
Subject: [PROJ] Minor bug in src/apps/cct.cpp
Message-ID: <d08e65c47750b1ba2c171c638484ec29@xs4all.nl>

Hi,

It would be nice if this minor bug in src/apps/cct.cpp could be 
repaired.

I noticed a (to me irritating) difference in the output of the cct 
command
when an "angular" unit is printed.
Angular? Radian or degree.

A width of 14 is used when printing radians and a width of 13 is used 
when
printing degrees.

Looking around, I found the bug in cct.cpp around line 390 ...

Here is the code:

if "radians"[1] { // what about degrees?
   proj_todeg // convert to degrees (cct is supposed to output degrees)
   print %14.*f decimals_angles, degrees // decimals_angles = 10 by 
default
} else // meters etc. ... Well, that is the intention, but ...
   print %13.*f decimals_distances, meters // decimals_distances = 4 by 
default
--
[1] proj_angular_output (i.e. should really be called 
proj_radian_output)

Before v7, proj_degree_output() did not exist; but now it does, cct.cpp 
can
be modified (repaired) as follows:

if "radians"[1] OR "degrees"[2] { // i.e. not meters etc. ...
   if "radians"
     proj_todeg // convert to degrees (cct is supposed to output degrees)
   print %14.*f decimals_angles, degrees // decimals_angles = 10 by 
default
} else // meters etc. !
   print %13.*f decimals_distances, meters // decimals_distances = 4 by 
default
--
[1] proj_angular_output
[2] proj_degree_output

The above has been verified against v7.2.0

Regards,
Henri

Here is the real code:

         /* Time to print the result */
         // Note: proj_angular_output() should be called 
proj_radian_output()
         if (proj_angular_output (P, direction)
            || proj_degree_output (P, direction)) {
             if (proj_angular_output (P, direction)) {
                 point.lpzt.lam = proj_todeg (point.lpzt.lam);
                 point.lpzt.phi = proj_todeg (point.lpzt.phi);
             }
             print (PJ_LOG_NONE, "%14.*f  %14.*f  %12.*f  %12.4f%s%s",
                    decimals_angles, point.xyzt.x,
                    decimals_angles, point.xyzt.y,
                    decimals_distances, point.xyzt.z,
                    point.xyzt.t, comment_delimiter, comment
             );
         }
         else
             print (PJ_LOG_NONE, "%13.*f  %13.*f  %12.*f  %12.4f%s%s",
                    decimals_distances, point.xyzt.x,
                    decimals_distances, point.xyzt.y,
                    decimals_distances, point.xyzt.z,
                    point.xyzt.t, comment_delimiter, comment
             );
     }

=====

From roger.oberholtzer at gmail.com  Tue Nov 17 02:05:52 2020
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Tue, 17 Nov 2020 11:05:52 +0100
Subject: [PROJ] cs2cs in a pipe
Message-ID: <CANkOqwO6FJo8=e5wYt_gUn1pcx__uG=QMBw8uKcxMz-w59cnBw@mail.gmail.com>

I am doing some programming inTcl (I like it - don't judge:)

I would like to project some lat/long values to Sweref99. Normally I do
this via the C API. But now I want to do so in a Tcl script. I want to
start the program and, for each line I write to it (it's standard input), I
would like to immediately read the results. And just keep doing this. I do
not want to start the program for each set of values as that would take too
long.

I have no trouble getting the cs2cs program to run. But I do not get values
reported. I see when I trace cs2cs when it is running in my script (via
strace that shows all system calls), cs2cs is correctly reading a line of
values to project. However, it never writes anything. It is just in another
read call waiting for the next line.

Should I expect cs2cs to report each projection as each line is read? I
could not think that it buffered them. But maybe the output is buffered via
whatever call cs2cs is doing to list results? If that is the case, is there
some way to tell cs2cs to flush the results after each projection is
complete?

Or is there a better way to do this? I realize that I could make an
interface in C that Tcl could use. I was trying to avoid that if I could
use a program such as cs2cs to accomplish the same thing.

-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201117/9e18019b/attachment.html>

From even.rouault at spatialys.com  Tue Nov 17 03:42:26 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Nov 2020 12:42:26 +0100
Subject: [PROJ] cs2cs in a pipe
In-Reply-To: <CANkOqwO6FJo8=e5wYt_gUn1pcx__uG=QMBw8uKcxMz-w59cnBw@mail.gmail.com>
References: <CANkOqwO6FJo8=e5wYt_gUn1pcx__uG=QMBw8uKcxMz-w59cnBw@mail.gmail.com>
Message-ID: <1756504.1mMlEdIvDd@even-i700>

Roger,

> I am doing some programming inTcl (I like it - don't judge:)
> 
> I would like to project some lat/long values to Sweref99. Normally I do
> this via the C API. But now I want to do so in a Tcl script. I want to
> start the program and, for each line I write to it (it's standard input), I
> would like to immediately read the results. And just keep doing this. I do
> not want to start the program for each set of values as that would take too
> long.
> 
> I have no trouble getting the cs2cs program to run. But I do not get values
> reported. I see when I trace cs2cs when it is running in my script (via
> strace that shows all system calls), cs2cs is correctly reading a line of
> values to project. However, it never writes anything. It is just in another
> read call waiting for the next line.
> 
> Should I expect cs2cs to report each projection as each line is read? I
> could not think that it buffered them. But maybe the output is buffered via
> whatever call cs2cs is doing to list results? If that is the case, is there
> some way to tell cs2cs to flush the results after each projection is
> complete?

cs2cs reports the result with a printf(stdout) with a newline character. 
According to https://stackoverflow.com/a/4201325 , stdout is line buffered for 
an interactive terminal (that is each newline character will cause it to be 
flushed). But in your pipe case, stdout isn't interactive, hence it doesn't 
get flushed at each newline character

Fixed per https://github.com/OSGeo/PROJ/pull/2429

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From uwe.schmitz at bezreg-koeln.nrw.de  Tue Nov 17 04:18:40 2020
From: uwe.schmitz at bezreg-koeln.nrw.de (Schmitz, Uwe)
Date: Tue, 17 Nov 2020 12:18:40 +0000
Subject: [PROJ] cs2cs in a pipe
In-Reply-To: <CANkOqwO6FJo8=e5wYt_gUn1pcx__uG=QMBw8uKcxMz-w59cnBw@mail.gmail.com>
References: <CANkOqwO6FJo8=e5wYt_gUn1pcx__uG=QMBw8uKcxMz-w59cnBw@mail.gmail.com>
Message-ID: <cd24dfe000584728b08a3423dfc3a1d8@bezreg-koeln.nrw.de>

Roger,

You didn't post sample code, so I only can guess some things.
In addition, you haven't written what you have tried so far,
so maybe the following is not unknown to you.

First, I suppose that you set up a pipe to cs2cs like:

set fid [open "|cs2cs" r+]

Second, to send line by line to the pipe you should do

chan configure $fid –buffering line

Finally, you have to make sure that the output is not buffered.
I assume that cs2cs buffers its output. That seems to be your problem,
I guess. You can verify this by sending say 10000 or more transformation 
lines to the pipe. At some point cs2cs may flush its output and you will see
it by reading the pipe.
IMHO, there is no way to prevent cs2cs from buffering.
But... under Linux you can try unbuffer:
https://linux.die.net/man/1/unbuffer

E.g.:
set fid [open "|unbuffer cs2cs" r+]

If you really consider using the bare C-Api, I recommend 
using the great Ffidl package:

https://wiki.tcl-lang.org/page/Ffidl

Hope this helps a bit.
-- 
Uwe Schmitz


From roger.oberholtzer at gmail.com  Wed Nov 18 00:31:11 2020
From: roger.oberholtzer at gmail.com (Roger Oberholtzer)
Date: Wed, 18 Nov 2020 09:31:11 +0100
Subject: [PROJ] cs2cs in a pipe
In-Reply-To: <cd24dfe000584728b08a3423dfc3a1d8@bezreg-koeln.nrw.de>
References: <CANkOqwO6FJo8=e5wYt_gUn1pcx__uG=QMBw8uKcxMz-w59cnBw@mail.gmail.com>
 <cd24dfe000584728b08a3423dfc3a1d8@bezreg-koeln.nrw.de>
Message-ID: <CANkOqwOqyU1dCBfxKvxtTNY9vfoJAp2iXsgOEFrvhBUSSZ_GsQ@mail.gmail.com>

On Tue, Nov 17, 2020 at 1:18 PM Schmitz, Uwe <
uwe.schmitz at bezreg-koeln.nrw.de> wrote:

> Roger,
>
> You didn't post sample code, so I only can guess some things.
> In addition, you haven't written what you have tried so far,
> so maybe the following is not unknown to you.
>
> First, I suppose that you set up a pipe to cs2cs like:
>
> set fid [open "|cs2cs" r+]
>

Pretty much.

Second, to send line by line to the pipe you should do
>
> chan configure $fid –buffering line
>

This is also done. That's why cs2cs reads the first line I send. It is not
buffered out from tcl.

Finally, you have to make sure that the output is not buffered.
> I assume that cs2cs buffers its output. That seems to be your problem,
> I guess. You can verify this by sending say 10000 or more transformation
> lines to the pipe. At some point cs2cs may flush its output and you will
> see
> it by reading the pipe.
> IMHO, there is no way to prevent cs2cs from buffering.
>

I think that's the case. So, I have made my own program for doing this. And
it works. I was just hoping to use an existing program instead of
reinventing the wheel.

But... under Linux you can try unbuffer:
> https://linux.die.net/man/1/unbuffer
>
> E.g.:
> set fid [open "|unbuffer cs2cs" r+]
>

I did not know about this program. I don't see how it can make cs2cs change
it's behavior.


> If you really consider using the bare C-Api, I recommend
> using the great Ffidl package:
>
> https://wiki.tcl-lang.org/page/Ffidl


We already use the C API in a library that simplifies access to proj for
our use. I will actually be using that in the program.

I wonder how one defines proj data structures in a useful way for Ffidl.
That seems like an interesting task. We have done similar things with SWIG.
I'm not a fan of how SWIG accesses shared data structures in tcl. So we
have usually written our own C interface between Tcl and the rest of the
world as needed. Mainly because of tracking changing data structures (the
C/C++ ones).

Thanks for the information!

-- 
Roger Oberholtzer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201118/c42ebbe6/attachment.html>

From mankoff at gmail.com  Thu Nov 19 05:16:38 2020
From: mankoff at gmail.com (Ken Mankoff)
Date: Thu, 19 Nov 2020 05:16:38 -0800
Subject: [PROJ] Transformation to rotated pole
Message-ID: <87mtzdlc5l.fsf@gmail.com>

Hello proj list,

I'm trying to reproject a shapefile to a rotated pole with "o_lat_p=18" and "o_lon_p=-200". Can this be done with ogr2ogr?

I have done this successfully in the past (see https://ibb.co/QrvpMZ5 showing Greenland at the equator), but my historical method doesn't work due to a software update.

What I did in the past was work in GRASS GIS based on this code:
https://lists.osgeo.org/pipermail/grass-user/2011-October/062180.html

And to summarize that, it imported data to an EPSG:4326 projection, then changed some internal files to the rotated pole (call this A), launched a new EPSG:4326 projection (B), and then used the GRASS re-projection code to reproject from A to B. The result is the attached graphic.

The proj4 string from A is 

+proj=ob_tran +o_proj=latlon +lat_0=0.0000000000 +lon_0=180.0000000000 +o_lat_p=18.0 +o_lon_p=-200.0 +a=6378137 +rf=298.257223563 +no_defs +towgs84=0.000,0.000,0.000 +type=crs  +to_meter=.0174532925

Trying to re-create this outside of GRASS just using proj tools, I thought the workflow might be:

1) Assign ob_tran (ish) SRS above to the existing shapfile
2) Reproject from its native (from (1)) to EPSG:4326.

I implement that as:

ogr2ogr -t_srs EPSG:4326 -a_srs "+proj=latlon +lat_0=0.0000000000 +lon_0=180.0000000000 +o_lat_p=18.0 +o_lon_p=-200.0 +a=6378137 +rf=298.257223563 +no_defs +towgs84=0.000,0.000,0.000 +type=crs  +to_meter=.0174532925" -f 'ESRI Shapefile' tmp.shp sectors.shp

ogr2ogr -t_srs EPSG:4326 -f 'ESRI Shapefile' out.shp tmp.shp

The result is not what I am looking for.

Can anyone on this list suggest what I'm doing incorrectly or provide an ogr2ogr command that can re-create the attached graphic? I'm happy to share the shapefile if that would help.

Thank you,

   Ken Mankoff

From gdt at lexort.com  Fri Nov 20 06:40:48 2020
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 20 Nov 2020 09:40:48 -0500
Subject: [PROJ] [central_bureau@iers.org] IERS Message No. 411: The ISO
 Geodetic Registry
Message-ID: <rmih7pk5bwv.fsf@s1.lexort.com>

This was news to me and seems interesting and relevant.

-------------- next part --------------
An embedded message was scrubbed...
From: central_bureau at iers.org
Subject: IERS Message No. 411: The ISO Geodetic Registry
Date: Fri, 20 Nov 2020 12:52:05 +0100 (CET)
Size: 5104
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201120/44845984/attachment.mht>

From j1 at jimenezshaw.com  Fri Nov 20 06:50:45 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 20 Nov 2020 15:50:45 +0100
Subject: [PROJ] [central_bureau@iers.org] IERS Message No. 411: The ISO
 Geodetic Registry
In-Reply-To: <rmih7pk5bwv.fsf@s1.lexort.com>
References: <rmih7pk5bwv.fsf@s1.lexort.com>
Message-ID: <CADRrdKuA7g0GCLMCmefDk9rFWNb9jGSgkPthUzUr7HKq__Pqaw@mail.gmail.com>

I can't help thinking on XKCD Standards strip: https://xkcd.com/927/
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Fri, 20 Nov 2020 at 15:40, Greg Troxel <gdt at lexort.com> wrote:

> This was news to me and seems interesting and relevant.
>
>
>
>
> ---------- Forwarded message ----------
> From: central_bureau at iers.org
> To: messages at iers.org
> Cc:
> Bcc:
> Date: Fri, 20 Nov 2020 12:52:05 +0100 (CET)
> Subject: IERS Message No. 411: The ISO Geodetic Registry
> ************************************************************************
> IERS Message No. 411                                   November 20, 2020
> ************************************************************************
>
>
> The ISO Geodetic Registry
>
>
> The ISO Geodetic Registry is a structured database of international
> coordinate reference systems and transformations that is accessible
> through an on-line registry system at
>
> https://geodetic.isotc211.org
>
> The main purpose of the Registry is to serve as the primary source for
> authoritative information on reference systems and transformations that
> can be used not only by end users but also other registries, including
> the ubiquitous EPSG registry. Unlike many other registries, the
> information contained the ISO Geodetic Registry has been either directly
> entered or approved by the agencies responsible for defining and
> maintaining the reference systems and transformations. The ISO Geodetic
> Registry is not meant to compete with or replace other registries but,
> rather, to complement them as an authoritative source for their content.
>
> The ISO Geodetic Registry also supports the implementation of the Global
> Geodetic Reference Frame (GGRF) under the auspices of the UN GGIM
> Sub-Committee on Geodesy. The GGRF Implementation Plan has recommended
> the use of the ISO Geodetic Registry as the authoritative source of
> information on geodetic reference systems and transformations in order
> to foster the interoperability of geodetic data and products among UN
> Member States.
>
> This Registry is provided under the auspices of the ISO Technical
> Committee on geographic information/geomatics (ISO TC-211) and conforms
> to the ISO standards on spatial referencing by coordinates (ISO
> 19111:2007) and geodetic registries (ISO 19127:2019, ISO 19135-1:2015,
> ISP 19135-2:2012). In the near term, it is planned to bring the
> Registry's data model into conformance with the new ISO 19111:2019
> standard in order to properly represent modern reference systems such as
> dynamic reference frames and geoid-based vertical datums. A number of
> additional enhancements will improve the user interface. Information
> about these ISO standards can be found at https://www.iso.org.
>
> As specified in ISO 19135-1 and ISO 19127, a Control Body composed of
> geodetic experts nominated by the members of ISO/TC 211 is responsible
> for approving the content of the ISO Geodetic Registry together with the
> authoritative sources of the information. The Control Body is chaired by
> representatives appointed by the International Association of Geodesy,
> presently Michael Craymer as Chair and Larry Hothem as Vice-Chair.
>
> The contents of the Registry may be freely browsed by the general
> public. Comments on the Registry and its contents can also be submitted
> using the Registry's feedback link at the top of every Registry web
> page. Authorities wishing to submit their own reference systems and
> transformations can register for an account to do so. The Registry also
> provides a web service interface, allowing geospatial software to query
> and retrieve information from the Registry's database.
>
> For further information on the ISO Geodetic Registry, please visit the
> Registry website.
>
> Michael Craymer
> Chair, Control Body for the ISO Geodetic Registry
> on behalf of the Control Body
>
>
> ************************************************************************
> IERS Messages are edited and distributed by the IERS Central Bureau.
> If not stated otherwise, the IERS is only the distributor of the message
> and is not responsible for its content.
> To submit texts for distribution, please write to
> <central_bureau at iers.org>.
> To subscribe or unsubscribe, please create an IERS account or modify it:
> https://www.iers.org/Login/Login/EN/login_node.html
> or write to <central_bureau at iers.org>.
> Archives: http://www.iers.org/Messages
> ************************************************************************
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201120/5f48d41b/attachment.html>

From gdt at lexort.com  Fri Nov 20 07:09:17 2020
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 20 Nov 2020 10:09:17 -0500
Subject: [PROJ] [central_bureau@iers.org] IERS Message No. 411: The ISO
 Geodetic Registry
In-Reply-To: <CADRrdKuA7g0GCLMCmefDk9rFWNb9jGSgkPthUzUr7HKq__Pqaw@mail.gmail.com>
 (Javier Jimenez Shaw's message of "Fri, 20 Nov 2020 15:50:45 +0100")
References: <rmih7pk5bwv.fsf@s1.lexort.com>
 <CADRrdKuA7g0GCLMCmefDk9rFWNb9jGSgkPthUzUr7HKq__Pqaw@mail.gmail.com>
Message-ID: <rmi8saw5ale.fsf@s1.lexort.com>


Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:

> I can't help thinking on XKCD Standards strip: https://xkcd.com/927/

Yes, but if this is actually open data without the
modifications-prohibited licensing it could be very helpful.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201120/f9cef50c/attachment.sig>

From martin.desruisseaux at geomatys.com  Fri Nov 20 07:11:39 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Fri, 20 Nov 2020 16:11:39 +0100
Subject: [PROJ] [central_bureau@iers.org] IERS Message No. 411: The ISO
 Geodetic Registry
In-Reply-To: <rmi8saw5ale.fsf@s1.lexort.com>
References: <rmih7pk5bwv.fsf@s1.lexort.com>
 <CADRrdKuA7g0GCLMCmefDk9rFWNb9jGSgkPthUzUr7HKq__Pqaw@mail.gmail.com>
 <rmi8saw5ale.fsf@s1.lexort.com>
Message-ID: <f6ca4242-6a92-b951-0df5-738c1d359c7a@geomatys.com>

Le 20/11/2020 ? 16:09, Greg Troxel a ?crit?:

> Yes, but if this is actually open data without the 
> modifications-prohibited licensing it could be very helpful.
>
The license seems very similar to EPSG terms of use:

https://geodetic.isotc211.org/terms

 ??? Martin



From martin.desruisseaux at geomatys.com  Fri Nov 20 07:16:06 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Fri, 20 Nov 2020 16:16:06 +0100
Subject: [PROJ] [central_bureau@iers.org] IERS Message No. 411: The ISO
 Geodetic Registry
In-Reply-To: <CADRrdKuA7g0GCLMCmefDk9rFWNb9jGSgkPthUzUr7HKq__Pqaw@mail.gmail.com>
References: <rmih7pk5bwv.fsf@s1.lexort.com>
 <CADRrdKuA7g0GCLMCmefDk9rFWNb9jGSgkPthUzUr7HKq__Pqaw@mail.gmail.com>
Message-ID: <d78dd2ae-0b28-1578-a189-3b7319a55204@geomatys.com>

Le 20/11/2020 ? 15:50, Javier Jimenez Shaw a ?crit?:

> I can't help thinking on XKCD Standards strip: https://xkcd.com/927/ 
> <https://xkcd.com/927/>
>
There is a significant difference: before this ISO work we did not have 
(as far as I know) any standard for online registry of CRS. The common 
practice was to download the entire EPSG database, then include its data 
in the software product in some way. In my understanding, ISO is working 
on standardization of the way to request a web service for a CRS 
definition. This ISO registry would be the first registry compliant with 
such standard.

This project has been mentioned in various OGC meetings in the last few 
years. EPSG peoples are aware of it, but I do not know to which extent 
they were a collaboration (or not).

 ??? Martin



From brian.shaw at noaa.gov  Fri Nov 20 09:08:48 2020
From: brian.shaw at noaa.gov (Brian Shaw)
Date: Fri, 20 Nov 2020 10:08:48 -0700
Subject: [PROJ] [central_bureau@iers.org] IERS Message No. 411: The ISO
 Geodetic Registry
In-Reply-To: <f6ca4242-6a92-b951-0df5-738c1d359c7a@geomatys.com>
References: <rmih7pk5bwv.fsf@s1.lexort.com>
 <CADRrdKuA7g0GCLMCmefDk9rFWNb9jGSgkPthUzUr7HKq__Pqaw@mail.gmail.com>
 <rmi8saw5ale.fsf@s1.lexort.com>
 <f6ca4242-6a92-b951-0df5-738c1d359c7a@geomatys.com>
Message-ID: <b75cc972-8173-ebd3-f437-1684beb3977b@noaa.gov>

I believe that Roger Lott from EPSG has led this effort trying to get 
the ISO Geodetic Registry to be the official location for 
transformations opposed to having the EPSG be the de facto standard.? I 
believe the NGS Chief Geodesist has made sure all of our transformations 
are registered there although I have not confirmed this.

Cheers
Brian

On 11/20/2020 8:11 AM, Martin Desruisseaux wrote:
> Le 20/11/2020 ? 16:09, Greg Troxel a ?crit?:
>
>> Yes, but if this is actually open data without the 
>> modifications-prohibited licensing it could be very helpful.
>>
> The license seems very similar to EPSG terms of use:
>
> https://geodetic.isotc211.org/terms
>
> ??? Martin
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
*************************************
Brian Shaw
Rocky Mountain Regional Advisor (CO, MT, WY)
NOAA's National Geodetic Survey (NGS)
Cell Phone # 240-988-6363


From leiyang at fio.org.cn  Fri Nov 20 17:05:29 2020
From: leiyang at fio.org.cn (leiyang at fio.org.cn)
Date: Sat, 21 Nov 2020 09:05:29 +0800
Subject: [PROJ] How to transform XYZ to NEU
Message-ID: <202011210905292233927@fio.org.cn>

Hi,

I have the  coordinates of XYZ under earth geocentirc system. I would like to transform them to the NEU (North East Up) system which is a GNSS frequently used system.
Now I know the cct could do the transform XYZ to BLH: 
echo 4097216.6805  4429119.0287 -2065771.3676 0 | cct -I +proj=cart +ellps=GRS8047.2292116930  -19.0183060232     1552.9924        0.0000But I do not know how to transform it to NEU. I also checked the documents, and find no answer.Thanks
Lei 



leiyang at fio.org.cn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201121/7b6a2e85/attachment.html>

From Jochem.Lesparre at kadaster.nl  Fri Nov 20 21:51:06 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Sat, 21 Nov 2020 05:51:06 +0000
Subject: [PROJ] How to transform XYZ to NEU
In-Reply-To: <202011210905292233927@fio.org.cn>
References: <202011210905292233927@fio.org.cn>
Message-ID: <AM6P192MB0470441A088F9709B9C15C2DEFFE0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>

Hi Lei,

Although some users have asked for this feature before, there is no specific PROJ functionality for this. However, you can do the transformation with cct if you use the right parameters:
https://github.com/OSGeo/PROJ/issues/500

Regards, Jochem

________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of leiyang at fio.org.cn <leiyang at fio.org.cn>
Sent: Saturday, 21 November 2020, 02:13
To: proj
Subject: [PROJ] How to transform XYZ to NEU

Hi,

I have the  coordinates of XYZ under earth geocentirc system. I would like to transform them to the NEU (North East Up) system which is a GNSS frequently used system.
Now I know the cct could do the transform XYZ to BLH:

echo 4097216.6805  4429119.0287 -2065771.3676 0 | cct -I +proj=cart +ellps=GRS80

47.2292116930  -19.0183060232     1552.9924        0.0000

But I do not know how to transform it to NEU. I also checked the documents, and find no answer.

Thanks


Lei


________________________________
leiyang at fio.org.cn



Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201121/44d320b3/attachment.html>

From even.rouault at spatialys.com  Sat Nov 21 06:32:26 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 21 Nov 2020 15:32:26 +0100
Subject: [PROJ] Transformation to rotated pole
In-Reply-To: <87mtzdlc5l.fsf@gmail.com>
References: <87mtzdlc5l.fsf@gmail.com>
Message-ID: <2015099.HX4rrGYbHV@even-i700>

Ken,

Not completely clear if you want to reproject from or into rotated pole, but 
you'll fix trivially the below depending on your need.

shapefile .prj AFAIK cannot store a rotated pole CRS, so I'd just try to do it 
in one step, with the following modified & corrected CRS ("+proj=latlon" was 
wrong, it should be "+proj=ob_tran +o_proj=latlon")

ogr2ogr -s_srs "+proj=ob_tran +o_proj=latlon +lat_0=0 +lon_0=180 +o_lat_p=18.0 
+o_lon_p=-200.0 +datum=WGS84 +type=crs"  -t_srs EPSG:4326 output.shp 
source.shp

You may need a quite recent PROJ version for that to work correctly due to 
ob_tran being complicated to handle when "computing" transformation pipelines.

Actually I just did a fix in PROJ master (https://github.com/OSGeo/PROJ/pull/
2441) for ob_tran if there was a +towgs84 term (you don't need one here, as 
+a=6378137 +rf=298.257223563 +towgs84=0,0,0 really means +datum=WGS84)

Or you can also directly specify the transformation pipeline which should 
hopefully work with any GDAL >= 3 and PROJ >= 6

ogr2ogr -ct "+proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad 
+step +inv +proj=ob_tran +o_proj=latlon +lat_0=0 +lon_0=180 +o_lat_p=18 
+o_lon_p=-200 +ellps=WGS84 +step +proj=unitconvert +xy_in=rad +xy_out=deg" 
output.shp source.shp

if you add -t_srs EPSG:4326, you'll also likely need to add " +step 
+proj=axisswap +order=2,1" at the end of the above pipeline to deal with the 
lat,lon axis order of EPSG:4326

(for the reverse direction remove the +inv)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From leiyang at fio.org.cn  Sat Nov 21 06:39:19 2020
From: leiyang at fio.org.cn (=?UTF-8?B?bGVpeWFuZ0BmaW8ub3JnLmNu?=)
Date: Sat, 21 Nov 2020 22:39:19 +0800 (GMT+08:00)
Subject: [PROJ] How to transform XYZ to NEU

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201121/da390709/attachment-0001.html>

From Jochem.Lesparre at kadaster.nl  Sat Nov 21 09:16:26 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Sat, 21 Nov 2020 17:16:26 +0000
Subject: [PROJ] How to transform XYZ to NEU
In-Reply-To: <a8436d1f-0f74-49d2-a1db-2b2135c2731a@fio.org.cn>
References: <a8436d1f-0f74-49d2-a1db-2b2135c2731a@fio.org.cn>
Message-ID: <AM6P192MB04702504ECBEB95AE0112CDFEFFE0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>

Hi Lei,

For the conventional use of ENU for GNSS station coordinates you only need to use the first three parameters (latitude, longitude and height) and you should set the other 5 parameters to zero.

Regards, Jochem


From: leiyang at fio.org.cn <leiyang at fio.org.cn>
Sent: zaterdag 21 november 2020 15:39
To: Lesparre, Jochem <Jochem.Lesparre at kadaster.nl>; proj <proj at lists.osgeo.org>
Subject: Re: [PROJ] How to transform XYZ to NEU

hi,Jochem
Thank you for your bat codes.  I try to run it on my computer.  It needs a bit more input parameters that is not easy for me.
The GNSS community have mature codes that can do the transformation fast and easy. But may not open source.

Kind regards,
Lei

---Original---
From: "Lesparre, Jochem"<Jochem.Lesparre at kadaster.nl<mailto:Jochem.Lesparre at kadaster.nl>>
Date: Sat, Nov 21, 2020 13:51 PM
To: "proj"<proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>>;"leiyang at fio.org.cn<mailto:leiyang at fio.org.cn>"<leiyang at fio.org.cn<mailto:leiyang at fio.org.cn>>;
Subject: Re: [PROJ] How to transform XYZ to NEU

Hi Lei,

Although some users have asked for this feature before, there is no specific PROJ functionality for this. However, you can do the transformation with cct if you use the right parameters:
https://github.com/OSGeo/PROJ/issues/500

Regards, Jochem

________________________________
From: PROJ <proj-bounces at lists.osgeo.org<mailto:proj-bounces at lists.osgeo.org>> on behalf of leiyang at fio.org.cn<mailto:leiyang at fio.org.cn> <leiyang at fio.org.cn<mailto:leiyang at fio.org.cn>>
Sent: Saturday, 21 November 2020, 02:13
To: proj
Subject: [PROJ] How to transform XYZ to NEU

Hi,

I have the  coordinates of XYZ under earth geocentirc system. I would like to transform them to the NEU (North East Up) system which is a GNSS frequently used system.
Now I know the cct could do the transform XYZ to BLH:

echo 4097216.6805  4429119.0287 -2065771.3676 0 | cct -I +proj=cart +ellps=GRS80

47.2292116930  -19.0183060232     1552.9924        0.0000

But I do not know how to transform it to NEU. I also checked the documents, and find no answer.

Thanks



Lei



________________________________
leiyang at fio.org.cn<mailto:leiyang at fio.org.cn>



Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201121/56d630d1/attachment.html>

From j1 at jimenezshaw.com  Tue Nov 24 03:47:19 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 24 Nov 2020 12:47:19 +0100
Subject: [PROJ] Geoidmodel in WKT without grid file
Message-ID: <CADRrdKtkycHRDXmcqZA5ewbRTS02uR50x=K7eKnXUhONWNOTNg@mail.gmail.com>

Hi

I have found a behaviour with the geoidmodel in WKT2 that I do not know if
it is the expected one.

My understanding is:

- if there is a geoidmodel and it matches one defined in proj.db then it
uses it, (regardless the vertical CRS)
  - if the proper grid file for that geoidmodel is NOT found then "* * inf"
is returned.
- if there is a geoidmodel tag, but not found in proj.db then it is ignored
  - if the grid file for the vertical CRS is found then it is used
  - if the grid file for the vertical CRS is NOT found then the
transformation is done, but not the vertical part.

Notice the difference between the 2nd and 5th statements (when grid file is
NOT found)

Is that correct?

How did I get here? I wanted to get (in C++) the lat-long in WGS84
transformation from a CRS defined by the WKT2. I was not interested in the
vertical part, but didn't remove it from the WKT2, just go ahead. It
worked... until a WKT2 included a "valid" geoidmodel tag (for some reasons
I have another WKTs with geoidmodel not present yet in proj.db). Then the
(horizontal) transformation failed miserably. No, I am not using PROJ-data
locally or remotely.

Here are some commands to test that (done in PROJ 7.0.1) I use NAVD88 in
the first ones, and EGM96 in the second. Both cases on NAD83(2011) (to
simplify)

echo 40 -75 0 | cs2cs EPSG:6319 "$(projinfo EPSG:6318+5703 -o WKT2:2019 -q
| sed  '25iGEOIDMODEL["GEOID18"],')"
* * inf
echo 40 -75 0 | cs2cs EPSG:6319 "$(projinfo EPSG:6318+5703 -o WKT2:2019 -q
| sed  '25iGEOIDMODEL["GEOID18_"],')"
40.00 -75.00 0.00
echo 40 -75 0 | cs2cs EPSG:6319 "$(projinfo EPSG:6318+5703 -o WKT2:2019 -q
| sed  '25iGEOIDMODEL["GEOID18"],')"
* * inf
echo 40 -75 0 | PROJ_NETWORK=ON cs2cs EPSG:6319 "$(projinfo EPSG:6318+5703
-o WKT2:2019 -q | sed  '25iGEOIDMODEL["GEOID18"],')"
40.00 -75.00 32.87
echo 40 -75 0 | PROJ_NETWORK=ON cs2cs EPSG:6319 "$(projinfo EPSG:6318+5703
-o WKT2:2019 -q | sed  '25iGEOIDMODEL["GEOID12B"],')"
40.00 -75.00 32.85
echo 40 -75 0 | PROJ_NETWORK=ON cs2cs EPSG:6319 "$(projinfo EPSG:6318+5703
-o WKT2:2019 -q )"
40.00 -75.00 32.87

echo 40 -75 0 | PROJ_NETWORK=ON cs2cs EPSG:6319 "$(projinfo EPSG:6318+5773
-o WKT2:2019 -q )"
40.00 -75.00 34.04
echo 40 -75 0 | PROJ_NETWORK=ON cs2cs EPSG:6319 "$(projinfo EPSG:6318+5773
-o WKT2:2019 -q | sed  '25iGEOIDMODEL["GEOID12B"],')"
40.00 -75.00 32.85
echo 40 -75 0 | PROJ_NETWORK=ON cs2cs EPSG:6319 "$(projinfo EPSG:6318+5773
-o WKT2:2019 -q | sed  '25iGEOIDMODEL["GEOID12B_"],')"
40.00 -75.00 34.04
echo 40 -75 0 | PROJ_NETWORK=ON cs2cs EPSG:6319 "$(projinfo EPSG:6318+5773
-o WKT2:2019 -q | sed  '25iGEOIDMODEL["EGM96"],')"
40.00 -75.00 34.04
echo 40 -75 0 | cs2cs EPSG:6319 "$(projinfo EPSG:6318+5773 -o WKT2:2019 -q
| sed  '25iGEOIDMODEL["GEOID12B"],')"
* * inf
echo 40 -75 0 | cs2cs EPSG:6319 "$(projinfo EPSG:6318+5773 -o WKT2:2019 -q
| sed  '25iGEOIDMODEL["EGM96"],')"
40.00 -75.00 0.00

Thanks
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201124/987096c9/attachment.html>

From j1 at jimenezshaw.com  Tue Nov 24 06:23:11 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 24 Nov 2020 15:23:11 +0100
Subject: [PROJ] Dealing with different versions of PROJ along time
Message-ID: <CADRrdKs5Zo91wpB1Hvhzyt70XPBJvpLn=httgCSa4gK5-bKofA@mail.gmail.com>

Sorry for the not very clear subject. I don't find a short way to summarize
my problem.

The long description could be "Dealing with different versions of PROJ when
creating web mercator tiles and in a later version PROJ (or EPSG) is using
a different transformation"

Let's say I have a GeoTIFF in "HD72 / EOV" on my server. I generate
web-mercator tiles with gdal2tiles one day (to show it in a browser
online), where I am using PROJ 7.0.1.
I also have some other info (markers, GCPs) stored in "HD72 / EOV". To
display those markers in the browser, I convert them on the fly. (btw, all
in python).

Later I update the version on my server to PROJ 7.2.0. When I transform the
marker coordinates to web-mercator to display them in the browser, the
marker does not fit exactly where it was before with the image. Just an
update in the server PROJ version made the location in the browser
different (between the image and the marker).

See that I am not running gdal2tiles again. The tiles stay with the
transformation selected by PROJ 7.0.1
Also I display every coordinate (the numbers I mean) in "HD72 / EOV".
Web-mercator is used mainly to interact with the browser with a javascript
library (openlayers).

Running
projinfo -s "HD72 / EOV" -t "WGS84 / Pseudo-Mercator"
with both versions, I see that in proj 7.0.1 it is using the transformation
"HD72 to WGS 84 (3)" while in 7.2.0 it is using "HD72 to WGS 84 (4)".
Similar but not the same.

I understand that PROJ criteria to choose automatically a transformation
may change. EPSG can change too, or new transformations may appear. I am
not complaining about that.

How can I solve this discrepancy? Regenerating all the tiles every time I
update PROJ could be expensive for every GeoTIFF. That would end up not
updating PROJ as often as wanted.
My problem is not the accuracy, but the consistency along the time.

Anybody had a similar problem? Any suggestion is welcome.

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201124/d1714220/attachment.html>

From even.rouault at spatialys.com  Tue Nov 24 07:43:18 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 24 Nov 2020 16:43:18 +0100
Subject: [PROJ] Geoidmodel in WKT without grid file
In-Reply-To: <CADRrdKtkycHRDXmcqZA5ewbRTS02uR50x=K7eKnXUhONWNOTNg@mail.gmail.com>
References: <CADRrdKtkycHRDXmcqZA5ewbRTS02uR50x=K7eKnXUhONWNOTNg@mail.gmail.com>
Message-ID: <3200849.PXIrj7a27s@even-i700>

Javier,

The code paths that deal with the GEOIDMODEL[] and finding a transformation 
from/into a VerticalCRS aren't exactly the same. In the code path of the 
GEOIDMODEL[], no ballpark vertical transformation was added, so when the grid 
is missing, no transformation can be done.

I've addressed this per https://github.com/OSGeo/PROJ/pull/2449 by making sure 
a ballpart vertical transformation is also added

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Nov 24 07:45:29 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 24 Nov 2020 16:45:29 +0100
Subject: [PROJ] Dealing with different versions of PROJ along time
In-Reply-To: <CADRrdKs5Zo91wpB1Hvhzyt70XPBJvpLn=httgCSa4gK5-bKofA@mail.gmail.com>
References: <CADRrdKs5Zo91wpB1Hvhzyt70XPBJvpLn=httgCSa4gK5-bKofA@mail.gmail.com>
Message-ID: <5520988.u5xanDCs8r@even-i700>

Javier,

> How can I solve this discrepancy?

Work with fixed PROJ pipelines directly. Their evaluation is unlikely to 
change significantly between PROJ versions (unless there's a bug)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From design at golok.net  Tue Nov 24 15:13:22 2020
From: design at golok.net (Christophe Besuchet)
Date: Wed, 25 Nov 2020 00:13:22 +0100
Subject: [PROJ] Installing PROJ on a Mac
Message-ID: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>

Hello,

Dumb question from a dumb new user, so please forgive me if this is not the right place to ask.

I?m a QGIS user and I'm trying to solve a problem of reprojecting rasters in Winkel Tripel projection 54042, in the following environment:

mas OS Mojave 10.14.6
QGIS 3.14

I understood that this was due "to the lack in PROJ of implementation of the inverse projection for Winkel II" and that it was now "added for PROJ 7.1".

https://github.com/qgis/QGIS/issues/35512

This is what I attempted:

1. Used Terminal to check if PROJ was installed on my Mac: got the "-bash: proj: command not found"

2. I downloaded the two following files from the download page of proj.org:

? 2020-11-01 proj-7.2.0.tar.gz
? 2020-11-01 proj-data-1.3.tar.gz

3. Tried to install with the "brew install proj" command, as instructed on the installation page, but to no avail; Terminal returned me the following error message: "Error: No such file or directory @ dir_chdir - /usr/local/Cellar? and "Operation not permitted @ dir_s_mkdir - /usr/local/Cellar".

However, after all this, I found a new "PROJ-master" subdirectory in my user directory. In doubt, I checked once again if PROJ was installed on my Mac, but Terminal returned me the same "-bash: proj: command not found".

Obviously I must have missed something, and my knowledge of Terminal commands is absolute zero? What am I supposed to do now?

In advance thank you zillions for your help!

Cheers,

Christophe Besuchet

From gdt at lexort.com  Tue Nov 24 16:15:25 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 24 Nov 2020 19:15:25 -0500
Subject: [PROJ] Dealing with different versions of PROJ along time
In-Reply-To: <CADRrdKs5Zo91wpB1Hvhzyt70XPBJvpLn=httgCSa4gK5-bKofA@mail.gmail.com>
 (Javier Jimenez Shaw's message of "Tue, 24 Nov 2020 15:23:11 +0100")
References: <CADRrdKs5Zo91wpB1Hvhzyt70XPBJvpLn=httgCSa4gK5-bKofA@mail.gmail.com>
Message-ID: <rmi8saqmgv6.fsf@s1.lexort.com>


Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:

> Let's say I have a GeoTIFF in "HD72 / EOV" on my server. I generate
> web-mercator tiles with gdal2tiles one day (to show it in a browser
> online), where I am using PROJ 7.0.1.
> I also have some other info (markers, GCPs) stored in "HD72 / EOV". To
> display those markers in the browser, I convert them on the fly. (btw, all
> in python).

Slightly out on a limb, you are phrasing this as "dealing with
different", but I would probably change that to "some versions result in
bad transforms due to null transform assumptions".

There is a core bug in TMS/web-mercator in that it is said to be
"WGS84", which in modern times translates to WGS84(ensemble) which means
"some version of WGS84 and I don't know which".  This leads to "because
there is a theoretical possibility that the output will be interpreteted
as WGS84(TRANSIT) and because this is low accuracy, we can just ignore
the last meter or two".  That's not really fair and shows a point of
view, but it's not that far off.

I have the same issue with NAD83 and WGS84 (web mercator).  I actually
have imagery that is referenced to about 0.1m, in jpeg200 in NAD83.
MassGIS has transformed that to TMS/web-mercator and actually
transformed it (a bit more than a meter).  But if I ask proj (6.x) to
transform NAD83 to WGS84, it uses a null transform, because the oldest
NAD83 and the oldest WGS84 are more or less the same.  But NAD83(2011)
that my imagery is in, and WGS84(G1762) that the TMS *should be IMHO*
presumed to be in are clearly different.  This is particularly
troublesome when translating *to* WGS84; while there is some merit tin
the notion of fuzz when someone shows up and says their data is in WGS84
and that they don't know more, if one is asked to transform to WGS84 the
latest realization is a clear target.

I solve this by choosing ITRF2014 (= to WGS84(G1762) at the several mm
level) as my target CRS when producing GPX/geojson for display against
TMS.  Also as my input CRS for ITRF2014, but where I am precise
coordinates are either NAD83(2011) or ITRF, because there is no
reasonable mechanism to access other datums at the 10cm level or beter.

Perhaps it is the same for HD72 and WGS84?

> LATER I update the version on my server to PROJ 7.2.0. When I transform the
> marker coordinates to web-mercator to display them in the browser, the
> marker does not fit exactly where it was before with the image. Just an
> update in the server PROJ version made the location in the browser
> different (between the image and the marker).

Yes, but which one is wrong, or was wrong before?  You are raising the
issue of "difference" but I think the real issue is that one of these
transforms is wrong.

> See that I am not running gdal2tiles again. The tiles stay with the
> transformation selected by PROJ 7.0.1
> Also I display every coordinate (the numbers I mean) in "HD72 / EOV".
> Web-mercator is used mainly to interact with the browser with a javascript
> library (openlayers).

Sure, and leaflet (that I am using for this) is likely to be the same.

> Running
> projinfo -s "HD72 / EOV" -t "WGS84 / Pseudo-Mercator"
> with both versions, I see that in proj 7.0.1 it is using the transformation
> "HD72 to WGS 84 (3)" while in 7.2.0 it is using "HD72 to WGS 84 (4)".
> Similar but not the same.

The root cause is that the definition of TMS using a datum ensemble is
just broken in the modern world.  Change TMS to use ITRF2014 and things
will probably go better.

> I understand that PROJ criteria to choose automatically a transformation
> may change. EPSG can change too, or new transformations may appear. I am
> not complaining about that.

So you are complaining that you are not able to output the chosen
transformation in the first step and to input that in the second step?

> How can I solve this discrepancy? Regenerating all the tiles every time I
> update PROJ could be expensive for every GeoTIFF. That would end up not
> updating PROJ as often as wanted.
> My problem is not the accuracy, but the consistency along the time.

Even was more helpful than I was :-)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201124/9c341ab9/attachment.sig>

From mankoff at gmail.com  Wed Nov 25 06:37:03 2020
From: mankoff at gmail.com (Ken Mankoff)
Date: Wed, 25 Nov 2020 06:37:03 -0800
Subject: [PROJ] Transformation to rotated pole
In-Reply-To: <2015099.HX4rrGYbHV@even-i700>
References: <87mtzdlc5l.fsf@gmail.com> <2015099.HX4rrGYbHV@even-i700>
Message-ID: <87r1oho640.fsf@gmail.com>

Hi Even,

I got it working with your help. Thank you for the clarification and hints.

  -k.

On 2020-11-21 at 06:32 -08, Even Rouault <even.rouault at spatialys.com>
wrote...
> Ken,
>
> Not completely clear if you want to reproject from or into rotated
> pole, but you'll fix trivially the below depending on your need.
>
> shapefile .prj AFAIK cannot store a rotated pole CRS, so I'd just try
> to do it in one step, with the following modified & corrected CRS
> ("+proj=latlon" was wrong, it should be "+proj=ob_tran
> +o_proj=latlon")
>
> ogr2ogr -s_srs "+proj=ob_tran +o_proj=latlon +lat_0=0 +lon_0=180
> +o_lat_p=18.0 +o_lon_p=-200.0 +datum=WGS84 +type=crs" -t_srs EPSG:4326
> output.shp source.shp
>
> You may need a quite recent PROJ version for that to work correctly
> due to ob_tran being complicated to handle when "computing"
> transformation pipelines.
>
> Actually I just did a fix in PROJ master
> (https://github.com/OSGeo/PROJ/pull/ 2441) for ob_tran if there was a
> +towgs84 term (you don't need one here, as +a=6378137
> +rf=298.257223563 +towgs84=0,0,0 really means +datum=WGS84)
>
> Or you can also directly specify the transformation pipeline which
> should hopefully work with any GDAL >= 3 and PROJ >= 6
>
> ogr2ogr -ct "+proj=pipeline +step +proj=unitconvert +xy_in=deg
> +xy_out=rad +step +inv +proj=ob_tran +o_proj=latlon +lat_0=0
> +lon_0=180 +o_lat_p=18 +o_lon_p=-200 +ellps=WGS84 +step
> +proj=unitconvert +xy_in=rad +xy_out=deg" output.shp source.shp
>
> if you add -t_srs EPSG:4326, you'll also likely need to add " +step
> +proj=axisswap +order=2,1" at the end of the above pipeline to deal
> with the lat,lon axis order of EPSG:4326
>
> (for the reverse direction remove the +inv)
>
> Even


From chris.marsh at usask.ca  Wed Nov 25 08:16:45 2020
From: chris.marsh at usask.ca (Chris Marsh)
Date: Wed, 25 Nov 2020 10:16:45 -0600
Subject: [PROJ] Installing PROJ on a Mac
In-Reply-To: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>
References: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>
Message-ID: <CAFgDerFNkmxDjwDFZ283VpvUsRPKUt6ORrM8u-Auc5+dkzDtRQ@mail.gmail.com>

Hi,

I see you note
>QGIS 3.14
but the QGis 3.14 change notes
https://www.qgis.org/en/site/forusers/visualchangelog314/index.html
claim that QGIS 3.14 addresses that problem -- search for  Problem
reprojecting rasters in 54019 and 54042 CRSs #35512
<https://github.com/qgis/QGIS/issues/35512> in the above link

If resolving #35512 in v 3.14 and 3.16 doesn't solve the problem, I would
open a new QGis ticket.

On compiling proj:
proj is one of the geospatial libraries used by QGis and is a core library
for handling reprojection. It is something called by other programs and
isn't going to show up on the command line by typing 'proj'.
Further, the QGis will need to be recompiled against this newer version of
proj to work. Installing proj yourself separately on your computer is
almost certainly not going to bring the new features forward for the
currently installed qgis.
Compiling proj isn't going to do what you want unfortunately.

So, I would confirm this is bug is still a problem on 3.14 (and really
ensure you're trying QGis 3.16) and you aren't accidentally on 3.12.  If
it's still a problem, I would open a new ticket or post on the QGIs mailing
list '
https://qgis.org/en/site/forusers/support.html

Hope this helps,

Cheers
Chris

On Tue, Nov 24, 2020 at 5:21 PM Christophe Besuchet <design at golok.net>
wrote:

> CAUTION: External to USask. Verify sender and use caution with links and
> attachments. Forward suspicious emails to phishing at usask.ca
>
>
> Hello,
>
> Dumb question from a dumb new user, so please forgive me if this is not
> the right place to ask.
>
> I?m a QGIS user and I'm trying to solve a problem of reprojecting rasters
> in Winkel Tripel projection 54042, in the following environment:
>
> mas OS Mojave 10.14.6
> QGIS 3.14
>
> I understood that this was due "to the lack in PROJ of implementation of
> the inverse projection for Winkel II" and that it was now "added for PROJ
> 7.1".
>
> https://github.com/qgis/QGIS/issues/35512
>
> This is what I attempted:
>
> 1. Used Terminal to check if PROJ was installed on my Mac: got the "-bash:
> proj: command not found"
>
> 2. I downloaded the two following files from the download page of proj.org
> :
>
> ? 2020-11-01 proj-7.2.0.tar.gz
> ? 2020-11-01 proj-data-1.3.tar.gz
>
> 3. Tried to install with the "brew install proj" command, as instructed on
> the installation page, but to no avail; Terminal returned me the following
> error message: "Error: No such file or directory @ dir_chdir -
> /usr/local/Cellar? and "Operation not permitted @ dir_s_mkdir -
> /usr/local/Cellar".
>
> However, after all this, I found a new "PROJ-master" subdirectory in my
> user directory. In doubt, I checked once again if PROJ was installed on my
> Mac, but Terminal returned me the same "-bash: proj: command not found".
>
> Obviously I must have missed something, and my knowledge of Terminal
> commands is absolute zero? What am I supposed to do now?
>
> In advance thank you zillions for your help!
>
> Cheers,
>
> Christophe Besuchet
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201125/ed72b076/attachment-0001.html>

From design at golok.net  Wed Nov 25 12:28:45 2020
From: design at golok.net (Christophe Besuchet)
Date: Wed, 25 Nov 2020 21:28:45 +0100
Subject: [PROJ] Installing PROJ on a Mac
In-Reply-To: <CAFgDerFNkmxDjwDFZ283VpvUsRPKUt6ORrM8u-Auc5+dkzDtRQ@mail.gmail.com>
References: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>
 <CAFgDerFNkmxDjwDFZ283VpvUsRPKUt6ORrM8u-Auc5+dkzDtRQ@mail.gmail.com>
Message-ID: <ECC8142A-219C-4630-812E-1F3012AB1042@golok.net>

Chris,

Thank you for your reply.

I updated to 3.16, but the bug persists? I updated the GitHub issue tracker, even though it is closed; if no answer, I'll open a new QGIS ticket. One thing is sure: the user who opened the original ticket has still issues as well (Windows 10, QGIS 3.16).

The weird thing is that I can preview raster with the Winkel Tripel projection, but only part of it; as soon as the preview reaches the end of longitudes, the raster disappear (screenshots on the GitHub issue tracker).

As for my attempt at checking if PROJ was installed by typing 'proj', I had found it here:

https://github.com/dtutic/GDAL-1.10.1-wintri/blob/master/README.md

Anyhow, let's hope this bug can be fixed on QGIS side.

Thanks again for your input.

Cheers,

Christophe

> On 25 Nov 2020, at 17:16, Chris Marsh <chris.marsh at usask.ca> wrote:
> 
> Hi,
> 
> I see you note
> >QGIS 3.14
> but the QGis 3.14 change notes 
> https://www.qgis.org/en/site/forusers/visualchangelog314/index.html <https://www.qgis.org/en/site/forusers/visualchangelog314/index.html>
> claim that QGIS 3.14 addresses that problem -- search for  Problem reprojecting rasters in 54019 and 54042 CRSs #35512 <https://github.com/qgis/QGIS/issues/35512> in the above link
> 
> If resolving #35512 in v 3.14 and 3.16 doesn't solve the problem, I would open a new QGis ticket.
> 
> On compiling proj:
> proj is one of the geospatial libraries used by QGis and is a core library for handling reprojection. It is something called by other programs and isn't going to show up on the command line by typing 'proj'. 
> Further, the QGis will need to be recompiled against this newer version of proj to work. Installing proj yourself separately on your computer is almost certainly not going to bring the new features forward for the currently installed qgis.
> Compiling proj isn't going to do what you want unfortunately. 
> 
> So, I would confirm this is bug is still a problem on 3.14 (and really ensure you're trying QGis 3.16) and you aren't accidentally on 3.12.  If it's still a problem, I would open a new ticket or post on the QGIs mailing list '
> https://qgis.org/en/site/forusers/support.html <https://qgis.org/en/site/forusers/support.html>
> 
> Hope this helps,
> 
> Cheers
> Chris
> 
> On Tue, Nov 24, 2020 at 5:21 PM Christophe Besuchet <design at golok.net <mailto:design at golok.net>> wrote:
> CAUTION: External to USask. Verify sender and use caution with links and attachments. Forward suspicious emails to phishing at usask.ca <mailto:phishing at usask.ca>
> 
> 
> Hello,
> 
> Dumb question from a dumb new user, so please forgive me if this is not the right place to ask.
> 
> I?m a QGIS user and I'm trying to solve a problem of reprojecting rasters in Winkel Tripel projection 54042, in the following environment:
> 
> mas OS Mojave 10.14.6
> QGIS 3.14
> 
> I understood that this was due "to the lack in PROJ of implementation of the inverse projection for Winkel II" and that it was now "added for PROJ 7.1".
> 
> https://github.com/qgis/QGIS/issues/35512 <https://github.com/qgis/QGIS/issues/35512>
> 
> This is what I attempted:
> 
> 1. Used Terminal to check if PROJ was installed on my Mac: got the "-bash: proj: command not found"
> 
> 2. I downloaded the two following files from the download page of proj.org <http://proj.org/>:
> 
> ? 2020-11-01 proj-7.2.0.tar.gz
> ? 2020-11-01 proj-data-1.3.tar.gz
> 
> 3. Tried to install with the "brew install proj" command, as instructed on the installation page, but to no avail; Terminal returned me the following error message: "Error: No such file or directory @ dir_chdir - /usr/local/Cellar? and "Operation not permitted @ dir_s_mkdir - /usr/local/Cellar".
> 
> However, after all this, I found a new "PROJ-master" subdirectory in my user directory. In doubt, I checked once again if PROJ was installed on my Mac, but Terminal returned me the same "-bash: proj: command not found".
> 
> Obviously I must have missed something, and my knowledge of Terminal commands is absolute zero? What am I supposed to do now?
> 
> In advance thank you zillions for your help!
> 
> Cheers,
> 
> Christophe Besuchet
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201125/ca00a182/attachment.html>

From chris.marsh at usask.ca  Wed Nov 25 12:46:23 2020
From: chris.marsh at usask.ca (Chris Marsh)
Date: Wed, 25 Nov 2020 14:46:23 -0600
Subject: [PROJ] Installing PROJ on a Mac
In-Reply-To: <ECC8142A-219C-4630-812E-1F3012AB1042@golok.net>
References: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>
 <CAFgDerFNkmxDjwDFZ283VpvUsRPKUt6ORrM8u-Auc5+dkzDtRQ@mail.gmail.com>
 <ECC8142A-219C-4630-812E-1F3012AB1042@golok.net>
Message-ID: <CAFgDerEt13spPUcxE7NgF9AuUW7tVGdnGZnw-XfADV_3jN-4Ew@mail.gmail.com>

Hi,

Oh...there is a binary that comes with proj! I've never used it, and did
not know about that, my apologies!
Hopefully someone on QGIS list or the issue can give you something more
actionable as my sense is the problem lies there.

Cheers
Chris

On Wed, Nov 25, 2020 at 2:29 PM Christophe Besuchet <design at golok.net>
wrote:

> Chris,
>
> Thank you for your reply.
>
> I updated to 3.16, but the bug persists? I updated the GitHub issue
> tracker, even though it is closed; if no answer, I'll open a new QGIS
> ticket. One thing is sure: the user who opened the original ticket has
> still issues as well (Windows 10, QGIS 3.16).
>
> The weird thing is that I can preview raster with the Winkel Tripel
> projection, but only part of it; as soon as the preview reaches the end of
> longitudes, the raster disappear (screenshots on the GitHub issue tracker).
>
> As for my attempt at checking if PROJ was installed by typing 'proj', I
> had found it here:
>
> https://github.com/dtutic/GDAL-1.10.1-wintri/blob/master/README.md
>
> Anyhow, let's hope this bug can be fixed on QGIS side.
>
> Thanks again for your input.
>
> Cheers,
>
> Christophe
>
> On 25 Nov 2020, at 17:16, Chris Marsh <chris.marsh at usask.ca> wrote:
>
> Hi,
>
> I see you note
> >QGIS 3.14
> but the QGis 3.14 change notes
> https://www.qgis.org/en/site/forusers/visualchangelog314/index.html
> claim that QGIS 3.14 addresses that problem -- search for  Problem
> reprojecting rasters in 54019 and 54042 CRSs #35512
> <https://github.com/qgis/QGIS/issues/35512> in the above link
>
> If resolving #35512 in v 3.14 and 3.16 doesn't solve the problem, I would
> open a new QGis ticket.
>
> On compiling proj:
> proj is one of the geospatial libraries used by QGis and is a core library
> for handling reprojection. It is something called by other programs and
> isn't going to show up on the command line by typing 'proj'.
> Further, the QGis will need to be recompiled against this newer version of
> proj to work. Installing proj yourself separately on your computer is
> almost certainly not going to bring the new features forward for the
> currently installed qgis.
> Compiling proj isn't going to do what you want unfortunately.
>
> So, I would confirm this is bug is still a problem on 3.14 (and really
> ensure you're trying QGis 3.16) and you aren't accidentally on 3.12.  If
> it's still a problem, I would open a new ticket or post on the QGIs mailing
> list '
> https://qgis.org/en/site/forusers/support.html
>
> Hope this helps,
>
> Cheers
> Chris
>
> On Tue, Nov 24, 2020 at 5:21 PM Christophe Besuchet <design at golok.net>
> wrote:
>
>> CAUTION: External to USask. Verify sender and use caution with links and
>> attachments. Forward suspicious emails to phishing at usask.ca
>>
>>
>> Hello,
>>
>> Dumb question from a dumb new user, so please forgive me if this is not
>> the right place to ask.
>>
>> I?m a QGIS user and I'm trying to solve a problem of reprojecting rasters
>> in Winkel Tripel projection 54042, in the following environment:
>>
>> mas OS Mojave 10.14.6
>> QGIS 3.14
>>
>> I understood that this was due "to the lack in PROJ of implementation of
>> the inverse projection for Winkel II" and that it was now "added for PROJ
>> 7.1".
>>
>> https://github.com/qgis/QGIS/issues/35512
>>
>> This is what I attempted:
>>
>> 1. Used Terminal to check if PROJ was installed on my Mac: got the
>> "-bash: proj: command not found"
>>
>> 2. I downloaded the two following files from the download page of
>> proj.org:
>>
>> ? 2020-11-01 proj-7.2.0.tar.gz
>> ? 2020-11-01 proj-data-1.3.tar.gz
>>
>> 3. Tried to install with the "brew install proj" command, as instructed
>> on the installation page, but to no avail; Terminal returned me the
>> following error message: "Error: No such file or directory @ dir_chdir -
>> /usr/local/Cellar? and "Operation not permitted @ dir_s_mkdir -
>> /usr/local/Cellar".
>>
>> However, after all this, I found a new "PROJ-master" subdirectory in my
>> user directory. In doubt, I checked once again if PROJ was installed on my
>> Mac, but Terminal returned me the same "-bash: proj: command not found".
>>
>> Obviously I must have missed something, and my knowledge of Terminal
>> commands is absolute zero? What am I supposed to do now?
>>
>> In advance thank you zillions for your help!
>>
>> Cheers,
>>
>> Christophe Besuchet
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201125/e4c8366a/attachment-0001.html>

From runette at gmail.com  Wed Nov 25 13:07:19 2020
From: runette at gmail.com (Paul Harwood)
Date: Wed, 25 Nov 2020 21:07:19 +0000
Subject: [PROJ] Installing PROJ on a Mac
In-Reply-To: <CAFgDerEt13spPUcxE7NgF9AuUW7tVGdnGZnw-XfADV_3jN-4Ew@mail.gmail.com>
References: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>
 <CAFgDerFNkmxDjwDFZ283VpvUsRPKUt6ORrM8u-Auc5+dkzDtRQ@mail.gmail.com>
 <ECC8142A-219C-4630-812E-1F3012AB1042@golok.net>
 <CAFgDerEt13spPUcxE7NgF9AuUW7tVGdnGZnw-XfADV_3jN-4Ew@mail.gmail.com>
Message-ID: <CAE8nN5P3ovb3O13PFda-JT1AqJqsdnAwuWBgnfV9Wc-JEZEHsA@mail.gmail.com>

There is an executable that comes with proj but I am not at all convinced
that they package that executable into QGIS or that, if they do that it
would be on the path. They don't need the executable in QGIS - it is using
{on the mac} the dylib.

On Wed, 25 Nov 2020 at 20:47, Chris Marsh <chris.marsh at usask.ca> wrote:

> Hi,
>
> Oh...there is a binary that comes with proj! I've never used it, and did
> not know about that, my apologies!
> Hopefully someone on QGIS list or the issue can give you something more
> actionable as my sense is the problem lies there.
>
> Cheers
> Chris
>
> On Wed, Nov 25, 2020 at 2:29 PM Christophe Besuchet <design at golok.net>
> wrote:
>
>> Chris,
>>
>> Thank you for your reply.
>>
>> I updated to 3.16, but the bug persists? I updated the GitHub issue
>> tracker, even though it is closed; if no answer, I'll open a new QGIS
>> ticket. One thing is sure: the user who opened the original ticket has
>> still issues as well (Windows 10, QGIS 3.16).
>>
>> The weird thing is that I can preview raster with the Winkel Tripel
>> projection, but only part of it; as soon as the preview reaches the end of
>> longitudes, the raster disappear (screenshots on the GitHub issue tracker).
>>
>> As for my attempt at checking if PROJ was installed by typing 'proj', I
>> had found it here:
>>
>> https://github.com/dtutic/GDAL-1.10.1-wintri/blob/master/README.md
>>
>> Anyhow, let's hope this bug can be fixed on QGIS side.
>>
>> Thanks again for your input.
>>
>> Cheers,
>>
>> Christophe
>>
>> On 25 Nov 2020, at 17:16, Chris Marsh <chris.marsh at usask.ca> wrote:
>>
>> Hi,
>>
>> I see you note
>> >QGIS 3.14
>> but the QGis 3.14 change notes
>> https://www.qgis.org/en/site/forusers/visualchangelog314/index.html
>> claim that QGIS 3.14 addresses that problem -- search for  Problem
>> reprojecting rasters in 54019 and 54042 CRSs #35512
>> <https://github.com/qgis/QGIS/issues/35512> in the above link
>>
>> If resolving #35512 in v 3.14 and 3.16 doesn't solve the problem, I would
>> open a new QGis ticket.
>>
>> On compiling proj:
>> proj is one of the geospatial libraries used by QGis and is a core
>> library for handling reprojection. It is something called by other programs
>> and isn't going to show up on the command line by typing 'proj'.
>> Further, the QGis will need to be recompiled against this newer version
>> of proj to work. Installing proj yourself separately on your computer is
>> almost certainly not going to bring the new features forward for the
>> currently installed qgis.
>> Compiling proj isn't going to do what you want unfortunately.
>>
>> So, I would confirm this is bug is still a problem on 3.14 (and really
>> ensure you're trying QGis 3.16) and you aren't accidentally on 3.12.  If
>> it's still a problem, I would open a new ticket or post on the QGIs mailing
>> list '
>> https://qgis.org/en/site/forusers/support.html
>>
>> Hope this helps,
>>
>> Cheers
>> Chris
>>
>> On Tue, Nov 24, 2020 at 5:21 PM Christophe Besuchet <design at golok.net>
>> wrote:
>>
>>> CAUTION: External to USask. Verify sender and use caution with links and
>>> attachments. Forward suspicious emails to phishing at usask.ca
>>>
>>>
>>> Hello,
>>>
>>> Dumb question from a dumb new user, so please forgive me if this is not
>>> the right place to ask.
>>>
>>> I?m a QGIS user and I'm trying to solve a problem of reprojecting
>>> rasters in Winkel Tripel projection 54042, in the following environment:
>>>
>>> mas OS Mojave 10.14.6
>>> QGIS 3.14
>>>
>>> I understood that this was due "to the lack in PROJ of implementation of
>>> the inverse projection for Winkel II" and that it was now "added for PROJ
>>> 7.1".
>>>
>>> https://github.com/qgis/QGIS/issues/35512
>>>
>>> This is what I attempted:
>>>
>>> 1. Used Terminal to check if PROJ was installed on my Mac: got the
>>> "-bash: proj: command not found"
>>>
>>> 2. I downloaded the two following files from the download page of
>>> proj.org:
>>>
>>> ? 2020-11-01 proj-7.2.0.tar.gz
>>> ? 2020-11-01 proj-data-1.3.tar.gz
>>>
>>> 3. Tried to install with the "brew install proj" command, as instructed
>>> on the installation page, but to no avail; Terminal returned me the
>>> following error message: "Error: No such file or directory @ dir_chdir -
>>> /usr/local/Cellar? and "Operation not permitted @ dir_s_mkdir -
>>> /usr/local/Cellar".
>>>
>>> However, after all this, I found a new "PROJ-master" subdirectory in my
>>> user directory. In doubt, I checked once again if PROJ was installed on my
>>> Mac, but Terminal returned me the same "-bash: proj: command not found".
>>>
>>> Obviously I must have missed something, and my knowledge of Terminal
>>> commands is absolute zero? What am I supposed to do now?
>>>
>>> In advance thank you zillions for your help!
>>>
>>> Cheers,
>>>
>>> Christophe Besuchet
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>
>>
>> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201125/377a62da/attachment.html>

From runette at gmail.com  Wed Nov 25 15:40:12 2020
From: runette at gmail.com (Paul Harwood)
Date: Wed, 25 Nov 2020 23:40:12 +0000
Subject: [PROJ] Installing PROJ on a Mac
In-Reply-To: <CAE8nN5P3ovb3O13PFda-JT1AqJqsdnAwuWBgnfV9Wc-JEZEHsA@mail.gmail.com>
References: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>
 <CAFgDerFNkmxDjwDFZ283VpvUsRPKUt6ORrM8u-Auc5+dkzDtRQ@mail.gmail.com>
 <ECC8142A-219C-4630-812E-1F3012AB1042@golok.net>
 <CAFgDerEt13spPUcxE7NgF9AuUW7tVGdnGZnw-XfADV_3jN-4Ew@mail.gmail.com>
 <CAE8nN5P3ovb3O13PFda-JT1AqJqsdnAwuWBgnfV9Wc-JEZEHsA@mail.gmail.com>
Message-ID: <CAE8nN5OFRsPZVv=nAfpE4eLyOB5TG1HLotU9kTfCwpTt4buSDw@mail.gmail.com>

I did a quick clean install of QGIS 3.16 onto a Mac (I needed to do it
anyway).

If you go to the menu in QGIS ->"QGIS" -> "About QGIS" it will tell the
version of Proj it was compiled against and the version that it is running
against. For QGIS 31.6 on the Mac. - this reported as 6.3.2.

I don't know why the Mac package appears still to be on 6.3.2 - you have to
ask QGIS that. And Proj is built into the QGIS app as a dylib shared object
- so it does NOT include the proj command line executable.

For Future Reference :

The tar files you downloaded are the source code and cannot be installed.

HomeBrew on the Mac - the "brew" command  - is a mac system that downloads
executables and installs them. That command SHOULD have worked. If it did
not - you will need to get support from HomeBrew and not here. However - I
would not use it anymore. If you want to install locally - then the Conda
command at the top of the install page is a much better option and works on
a Mac if you have installed Conda (another package management application).
HOWEVER - none of that will do what you want - since even if you installed
Proj using Conda on your mac and ran the proj command (which should work) -
the version of proj you will be running is NOT the same version as QGIS is
running - since QGIS has its own instance built into the app.

YOU COULD DO THIS:

Install Conda - see
https://docs.conda.io/projects/conda/en/latest/user-guide/install/
Install gdal - see https://gdal.org/download.html#conda

That should get you GDAL 3.2.0 which includes Proj 7.1.1

Then use the gdal_warp command to reproject your data - see
https://gdal.org/programs/gdalwarp.html#gdalwarp

This is what QGIS uses to reproject. - just without the GUI.


On Wed, 25 Nov 2020 at 21:07, Paul Harwood <runette at gmail.com> wrote:

> There is an executable that comes with proj but I am not at all convinced
> that they package that executable into QGIS or that, if they do that it
> would be on the path. They don't need the executable in QGIS - it is using
> {on the mac} the dylib.
>
> On Wed, 25 Nov 2020 at 20:47, Chris Marsh <chris.marsh at usask.ca> wrote:
>
>> Hi,
>>
>> Oh...there is a binary that comes with proj! I've never used it, and did
>> not know about that, my apologies!
>> Hopefully someone on QGIS list or the issue can give you something more
>> actionable as my sense is the problem lies there.
>>
>> Cheers
>> Chris
>>
>> On Wed, Nov 25, 2020 at 2:29 PM Christophe Besuchet <design at golok.net>
>> wrote:
>>
>>> Chris,
>>>
>>> Thank you for your reply.
>>>
>>> I updated to 3.16, but the bug persists? I updated the GitHub issue
>>> tracker, even though it is closed; if no answer, I'll open a new QGIS
>>> ticket. One thing is sure: the user who opened the original ticket has
>>> still issues as well (Windows 10, QGIS 3.16).
>>>
>>> The weird thing is that I can preview raster with the Winkel Tripel
>>> projection, but only part of it; as soon as the preview reaches the end of
>>> longitudes, the raster disappear (screenshots on the GitHub issue tracker).
>>>
>>> As for my attempt at checking if PROJ was installed by typing 'proj', I
>>> had found it here:
>>>
>>> https://github.com/dtutic/GDAL-1.10.1-wintri/blob/master/README.md
>>>
>>> Anyhow, let's hope this bug can be fixed on QGIS side.
>>>
>>> Thanks again for your input.
>>>
>>> Cheers,
>>>
>>> Christophe
>>>
>>> On 25 Nov 2020, at 17:16, Chris Marsh <chris.marsh at usask.ca> wrote:
>>>
>>> Hi,
>>>
>>> I see you note
>>> >QGIS 3.14
>>> but the QGis 3.14 change notes
>>> https://www.qgis.org/en/site/forusers/visualchangelog314/index.html
>>> claim that QGIS 3.14 addresses that problem -- search for  Problem
>>> reprojecting rasters in 54019 and 54042 CRSs #35512
>>> <https://github.com/qgis/QGIS/issues/35512> in the above link
>>>
>>> If resolving #35512 in v 3.14 and 3.16 doesn't solve the problem, I
>>> would open a new QGis ticket.
>>>
>>> On compiling proj:
>>> proj is one of the geospatial libraries used by QGis and is a core
>>> library for handling reprojection. It is something called by other programs
>>> and isn't going to show up on the command line by typing 'proj'.
>>> Further, the QGis will need to be recompiled against this newer version
>>> of proj to work. Installing proj yourself separately on your computer is
>>> almost certainly not going to bring the new features forward for the
>>> currently installed qgis.
>>> Compiling proj isn't going to do what you want unfortunately.
>>>
>>> So, I would confirm this is bug is still a problem on 3.14 (and really
>>> ensure you're trying QGis 3.16) and you aren't accidentally on 3.12.  If
>>> it's still a problem, I would open a new ticket or post on the QGIs mailing
>>> list '
>>> https://qgis.org/en/site/forusers/support.html
>>>
>>> Hope this helps,
>>>
>>> Cheers
>>> Chris
>>>
>>> On Tue, Nov 24, 2020 at 5:21 PM Christophe Besuchet <design at golok.net>
>>> wrote:
>>>
>>>> CAUTION: External to USask. Verify sender and use caution with links
>>>> and attachments. Forward suspicious emails to phishing at usask.ca
>>>>
>>>>
>>>> Hello,
>>>>
>>>> Dumb question from a dumb new user, so please forgive me if this is not
>>>> the right place to ask.
>>>>
>>>> I?m a QGIS user and I'm trying to solve a problem of reprojecting
>>>> rasters in Winkel Tripel projection 54042, in the following environment:
>>>>
>>>> mas OS Mojave 10.14.6
>>>> QGIS 3.14
>>>>
>>>> I understood that this was due "to the lack in PROJ of implementation
>>>> of the inverse projection for Winkel II" and that it was now "added for
>>>> PROJ 7.1".
>>>>
>>>> https://github.com/qgis/QGIS/issues/35512
>>>>
>>>> This is what I attempted:
>>>>
>>>> 1. Used Terminal to check if PROJ was installed on my Mac: got the
>>>> "-bash: proj: command not found"
>>>>
>>>> 2. I downloaded the two following files from the download page of
>>>> proj.org:
>>>>
>>>> ? 2020-11-01 proj-7.2.0.tar.gz
>>>> ? 2020-11-01 proj-data-1.3.tar.gz
>>>>
>>>> 3. Tried to install with the "brew install proj" command, as instructed
>>>> on the installation page, but to no avail; Terminal returned me the
>>>> following error message: "Error: No such file or directory @ dir_chdir -
>>>> /usr/local/Cellar? and "Operation not permitted @ dir_s_mkdir -
>>>> /usr/local/Cellar".
>>>>
>>>> However, after all this, I found a new "PROJ-master" subdirectory in my
>>>> user directory. In doubt, I checked once again if PROJ was installed on my
>>>> Mac, but Terminal returned me the same "-bash: proj: command not found".
>>>>
>>>> Obviously I must have missed something, and my knowledge of Terminal
>>>> commands is absolute zero? What am I supposed to do now?
>>>>
>>>> In advance thank you zillions for your help!
>>>>
>>>> Cheers,
>>>>
>>>> Christophe Besuchet
>>>> _______________________________________________
>>>> PROJ mailing list
>>>> PROJ at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>>
>>>
>>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201125/01203f04/attachment-0001.html>

From design at golok.net  Wed Nov 25 15:58:25 2020
From: design at golok.net (Christophe Besuchet)
Date: Thu, 26 Nov 2020 00:58:25 +0100
Subject: [PROJ] Installing PROJ on a Mac
In-Reply-To: <CAE8nN5OFRsPZVv=nAfpE4eLyOB5TG1HLotU9kTfCwpTt4buSDw@mail.gmail.com>
References: <5E5AE014-310A-4D9B-A020-050BEAFD2D1E@golok.net>
 <CAFgDerFNkmxDjwDFZ283VpvUsRPKUt6ORrM8u-Auc5+dkzDtRQ@mail.gmail.com>
 <ECC8142A-219C-4630-812E-1F3012AB1042@golok.net>
 <CAFgDerEt13spPUcxE7NgF9AuUW7tVGdnGZnw-XfADV_3jN-4Ew@mail.gmail.com>
 <CAE8nN5P3ovb3O13PFda-JT1AqJqsdnAwuWBgnfV9Wc-JEZEHsA@mail.gmail.com>
 <CAE8nN5OFRsPZVv=nAfpE4eLyOB5TG1HLotU9kTfCwpTt4buSDw@mail.gmail.com>
Message-ID: <F2F8675A-032F-452E-B17E-16A8C59673A5@golok.net>

Paul,

Thank you so much for all these info.

Indeed, on my QGIS version it also indicates "Rel. 6.3.2, May 1st, 2020"? I'll definitely mention this in my ticket.

As for HomeBrew and Conda ? and all the precious references you provided ? I'll keep this as a future reference, in particular if none of that will do what I want. My skills are principally in design, and even though I've got some knowledge of development, it requires a part of my brain that's not always available and currently I cannot afford the learning curve. I'll then pray that QGIS can fix this out.

But thank you zillions for the time spent on this issue. I really appreciate!

Cheers,

Christophe


> On 26 Nov 2020, at 00:40, Paul Harwood <runette at gmail.com> wrote:
> 
> I did a quick clean install of QGIS 3.16 onto a Mac (I needed to do it anyway).
> 
> If you go to the menu in QGIS ->"QGIS" -> "About QGIS" it will tell the version of Proj it was compiled against and the version that it is running against. For QGIS 31.6 on the Mac. - this reported as 6.3.2.
> 
> I don't know why the Mac package appears still to be on 6.3.2 - you have to ask QGIS that. And Proj is built into the QGIS app as a dylib shared object - so it does NOT include the proj command line executable.
> 
> For Future Reference :
> 
> The tar files you downloaded are the source code and cannot be installed.
> 
> HomeBrew on the Mac - the "brew" command  - is a mac system that downloads executables and installs them. That command SHOULD have worked. If it did not - you will need to get support from HomeBrew and not here. However - I would not use it anymore. If you want to install locally - then the Conda command at the top of the install page is a much better option and works on a Mac if you have installed Conda (another package management application). HOWEVER - none of that will do what you want - since even if you installed Proj using Conda on your mac and ran the proj command (which should work) - the version of proj you will be running is NOT the same version as QGIS is running - since QGIS has its own instance built into the app.
> 
> YOU COULD DO THIS: 
> 
> Install Conda - see https://docs.conda.io/projects/conda/en/latest/user-guide/install/ <https://docs.conda.io/projects/conda/en/latest/user-guide/install/>
> Install gdal - see https://gdal.org/download.html#conda <https://gdal.org/download.html#conda>
> 
> That should get you GDAL 3.2.0 which includes Proj 7.1.1
> 
> Then use the gdal_warp command to reproject your data - see https://gdal.org/programs/gdalwarp.html#gdalwarp <https://gdal.org/programs/gdalwarp.html#gdalwarp>
> 
> This is what QGIS uses to reproject. - just without the GUI.
> 
> 
> On Wed, 25 Nov 2020 at 21:07, Paul Harwood <runette at gmail.com <mailto:runette at gmail.com>> wrote:
> There is an executable that comes with proj but I am not at all convinced that they package that executable into QGIS or that, if they do that it would be on the path. They don't need the executable in QGIS - it is using {on the mac} the dylib.
> 
> On Wed, 25 Nov 2020 at 20:47, Chris Marsh <chris.marsh at usask.ca <mailto:chris.marsh at usask.ca>> wrote:
> Hi,
> 
> Oh...there is a binary that comes with proj! I've never used it, and did not know about that, my apologies!
> Hopefully someone on QGIS list or the issue can give you something more actionable as my sense is the problem lies there.
> 
> Cheers
> Chris
> 
> On Wed, Nov 25, 2020 at 2:29 PM Christophe Besuchet <design at golok.net <mailto:design at golok.net>> wrote:
> Chris,
> 
> Thank you for your reply.
> 
> I updated to 3.16, but the bug persists? I updated the GitHub issue tracker, even though it is closed; if no answer, I'll open a new QGIS ticket. One thing is sure: the user who opened the original ticket has still issues as well (Windows 10, QGIS 3.16).
> 
> The weird thing is that I can preview raster with the Winkel Tripel projection, but only part of it; as soon as the preview reaches the end of longitudes, the raster disappear (screenshots on the GitHub issue tracker).
> 
> As for my attempt at checking if PROJ was installed by typing 'proj', I had found it here:
> 
> https://github.com/dtutic/GDAL-1.10.1-wintri/blob/master/README.md <https://github.com/dtutic/GDAL-1.10.1-wintri/blob/master/README.md>
> 
> Anyhow, let's hope this bug can be fixed on QGIS side.
> 
> Thanks again for your input.
> 
> Cheers,
> 
> Christophe
> 
>> On 25 Nov 2020, at 17:16, Chris Marsh <chris.marsh at usask.ca <mailto:chris.marsh at usask.ca>> wrote:
>> 
>> Hi,
>> 
>> I see you note
>> >QGIS 3.14
>> but the QGis 3.14 change notes 
>> https://www.qgis.org/en/site/forusers/visualchangelog314/index.html <https://www.qgis.org/en/site/forusers/visualchangelog314/index.html>
>> claim that QGIS 3.14 addresses that problem -- search for  Problem reprojecting rasters in 54019 and 54042 CRSs #35512 <https://github.com/qgis/QGIS/issues/35512> in the above link
>> 
>> If resolving #35512 in v 3.14 and 3.16 doesn't solve the problem, I would open a new QGis ticket.
>> 
>> On compiling proj:
>> proj is one of the geospatial libraries used by QGis and is a core library for handling reprojection. It is something called by other programs and isn't going to show up on the command line by typing 'proj'. 
>> Further, the QGis will need to be recompiled against this newer version of proj to work. Installing proj yourself separately on your computer is almost certainly not going to bring the new features forward for the currently installed qgis.
>> Compiling proj isn't going to do what you want unfortunately. 
>> 
>> So, I would confirm this is bug is still a problem on 3.14 (and really ensure you're trying QGis 3.16) and you aren't accidentally on 3.12.  If it's still a problem, I would open a new ticket or post on the QGIs mailing list '
>> https://qgis.org/en/site/forusers/support.html <https://qgis.org/en/site/forusers/support.html>
>> 
>> Hope this helps,
>> 
>> Cheers
>> Chris
>> 
>> On Tue, Nov 24, 2020 at 5:21 PM Christophe Besuchet <design at golok.net <mailto:design at golok.net>> wrote:
>> CAUTION: External to USask. Verify sender and use caution with links and attachments. Forward suspicious emails to phishing at usask.ca <mailto:phishing at usask.ca>
>> 
>> 
>> Hello,
>> 
>> Dumb question from a dumb new user, so please forgive me if this is not the right place to ask.
>> 
>> I?m a QGIS user and I'm trying to solve a problem of reprojecting rasters in Winkel Tripel projection 54042, in the following environment:
>> 
>> mas OS Mojave 10.14.6
>> QGIS 3.14
>> 
>> I understood that this was due "to the lack in PROJ of implementation of the inverse projection for Winkel II" and that it was now "added for PROJ 7.1".
>> 
>> https://github.com/qgis/QGIS/issues/35512 <https://github.com/qgis/QGIS/issues/35512>
>> 
>> This is what I attempted:
>> 
>> 1. Used Terminal to check if PROJ was installed on my Mac: got the "-bash: proj: command not found"
>> 
>> 2. I downloaded the two following files from the download page of proj.org <http://proj.org/>:
>> 
>> ? 2020-11-01 proj-7.2.0.tar.gz
>> ? 2020-11-01 proj-data-1.3.tar.gz
>> 
>> 3. Tried to install with the "brew install proj" command, as instructed on the installation page, but to no avail; Terminal returned me the following error message: "Error: No such file or directory @ dir_chdir - /usr/local/Cellar? and "Operation not permitted @ dir_s_mkdir - /usr/local/Cellar".
>> 
>> However, after all this, I found a new "PROJ-master" subdirectory in my user directory. In doubt, I checked once again if PROJ was installed on my Mac, but Terminal returned me the same "-bash: proj: command not found".
>> 
>> Obviously I must have missed something, and my knowledge of Terminal commands is absolute zero? What am I supposed to do now?
>> 
>> In advance thank you zillions for your help!
>> 
>> Cheers,
>> 
>> Christophe Besuchet
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>> https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201126/888af8be/attachment.html>

From idan at miara.com  Thu Nov 26 05:47:06 2020
From: idan at miara.com (Idan Miara)
Date: Thu, 26 Nov 2020 15:47:06 +0200
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps (vs
 EPSG:4326)?
Message-ID: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>

Hi all,

I was wondering if you can enlighten me regarding why Web Marcator (EPSG:3857)
is so popular and used by virtually all major online map providers as
opposed to WGS84 lat/lon (EPSG:4326)?

I've composed some points that I could think about, but it doesn't add up
for why 3857 maps (i.e. slippy map) are more popular than 4326:

1. In 3857 almost all the world fits in a rectangular tile (~85 deg north
to ~85 deg south), which makes it easier to divide the tile further into
sub tiles.
In 4326 all the world fits into two rectangular tiles (so not much more
complicated, I guess).

2. Users expect coordinates in 4326 and the transformation from 3857 to
4326 is rather fast (in comparison to ellipsoidal mercator).
But if you save the coordinates in 4326 then you wouldn't need to transform
at all.

3. 3857 is "almost" conformal - I think that the normal use case is not
marine navigation so it doesn't seem so important.

4. Both 3857 and 4326 have size distortion.

5. You can't measure distances, areas or angles easier in 3857 as far as I
know.

What am I missing? Is 3857 faster or more useful in any other way than 4326?

Kind regards,
Idan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201126/54bcde2a/attachment-0001.html>

From charles at karney.com  Thu Nov 26 06:29:53 2020
From: charles at karney.com (Charles Karney)
Date: Thu, 26 Nov 2020 09:29:53 -0500
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
 (vs EPSG:4326)?
In-Reply-To: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
References: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
Message-ID: <74c0fa75-f1af-adce-16fd-bf0a407f92c7@karney.com>

You don't realize the importance of conformality.

The most common use case for online maps is navigating over short
distances (~100 km or less).  In this case the size distortions of
Mercator are not apparent.  However the 2 key properties of Mercator are
crucial: conformality (the angle of road intersections is preserved) and
that north is "up".  Transverse Mercator gives you conformality but only
gives you the "north is up" property locally; so a single transverse
Mercator projection doesn't work globally.

Presumably the use of "web" Mercator, using the spherical Mercator
formulas instead of the ellipsoidal ones, was done on the basis of
simplicity.  I regard this as an unfortunate compromise.

You *can* measure angles with Mercator.  On large scale maps (covering
small areas), distances and areas are accurately given by applying a
scale factor.  In both cases, there's a little error (approx 1/300)
because of the use of web Mercator instead of ellipsoid Mercator.

   --Charles

On 11/26/20 8:47 AM, Idan Miara wrote:
> Hi all,
> 
> I was wondering if you can enlighten me regarding why Web Marcator 
> (EPSG:3857) is so popular and used by virtually all major online map 
> providers as opposed to WGS84 lat/lon (EPSG:4326)?
> 
> I've composed some points that I could think about, but it doesn't add 
> up for why 3857 maps (i.e. slippy map) are more popular than 4326:
> 
> 1. In 3857 almost all the world fits in a rectangular tile (~85 deg 
> north to ~85 deg south), which makes it easier to divide?the tile 
> further into sub tiles.
> In 4326 all the world fits into two rectangular tiles (so not much more 
> complicated, I guess).
> 
> 2. Users expect coordinates in 4326 and the transformation from 3857 to 
> 4326 is rather fast (in comparison to ellipsoidal mercator).
> But if you save the coordinates in 4326 then you wouldn't need to 
> transform at all.
> 
> 3. 3857 is "almost" conformal - I think that the normal use case is not 
> marine navigation so it doesn't seem so important.
> 
> 4. Both 3857 and 4326 have?size distortion.
> 
> 5. You can't measure distances, areas or angles easier in 3857 as far as 
> I know.
> 
> What am I?missing? Is 3857 faster or more useful in any other way than 4326?
> 
> Kind regards,
> Idan
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> 

From njacadieux.gitlab at gmail.com  Thu Nov 26 06:33:23 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Thu, 26 Nov 2020 09:33:23 -0500
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
 (vs EPSG:4326)?
In-Reply-To: <74c0fa75-f1af-adce-16fd-bf0a407f92c7@karney.com>
References: <74c0fa75-f1af-adce-16fd-bf0a407f92c7@karney.com>
Message-ID: <B1B255B5-D3A9-4667-AFB7-259BD585572D@gmail.com>

Hi,
You may like this article.

https://www.spatialsource.com.au/surveying/gda2020-and-overcoming-the-web-mercator-dilemma

Nicolas Cadieux
https://gitlab.com/njacadieux

> Le 26 nov. 2020 ? 09:30, Charles Karney <charles at karney.com> a ?crit :
> 
> ?You don't realize the importance of conformality.
> 
> The most common use case for online maps is navigating over short
> distances (~100 km or less).  In this case the size distortions of
> Mercator are not apparent.  However the 2 key properties of Mercator are
> crucial: conformality (the angle of road intersections is preserved) and
> that north is "up".  Transverse Mercator gives you conformality but only
> gives you the "north is up" property locally; so a single transverse
> Mercator projection doesn't work globally.
> 
> Presumably the use of "web" Mercator, using the spherical Mercator
> formulas instead of the ellipsoidal ones, was done on the basis of
> simplicity.  I regard this as an unfortunate compromise.
> 
> You *can* measure angles with Mercator.  On large scale maps (covering
> small areas), distances and areas are accurately given by applying a
> scale factor.  In both cases, there's a little error (approx 1/300)
> because of the use of web Mercator instead of ellipsoid Mercator.
> 
>  --Charles
> 
>> On 11/26/20 8:47 AM, Idan Miara wrote:
>> Hi all,
>> I was wondering if you can enlighten me regarding why Web Marcator (EPSG:3857) is so popular and used by virtually all major online map providers as opposed to WGS84 lat/lon (EPSG:4326)?
>> I've composed some points that I could think about, but it doesn't add up for why 3857 maps (i.e. slippy map) are more popular than 4326:
>> 1. In 3857 almost all the world fits in a rectangular tile (~85 deg north to ~85 deg south), which makes it easier to divide the tile further into sub tiles.
>> In 4326 all the world fits into two rectangular tiles (so not much more complicated, I guess).
>> 2. Users expect coordinates in 4326 and the transformation from 3857 to 4326 is rather fast (in comparison to ellipsoidal mercator).
>> But if you save the coordinates in 4326 then you wouldn't need to transform at all.
>> 3. 3857 is "almost" conformal - I think that the normal use case is not marine navigation so it doesn't seem so important.
>> 4. Both 3857 and 4326 have size distortion.
>> 5. You can't measure distances, areas or angles easier in 3857 as far as I know.
>> What am I missing? Is 3857 faster or more useful in any other way than 4326?
>> Kind regards,
>> Idan
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201126/5ec71471/attachment.html>

From gdt at lexort.com  Thu Nov 26 06:44:56 2020
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 26 Nov 2020 09:44:56 -0500
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
 (vs EPSG:4326)?
In-Reply-To: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
 (Idan Miara's message of "Thu, 26 Nov 2020 15:47:06 +0200")
References: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
Message-ID: <rmir1ogfa8n.fsf@s1.lexort.com>


Idan Miara <idan at miara.com> writes:

> I was wondering if you can enlighten me regarding why Web Marcator (EPSG:3857)
> is so popular and used by virtually all major online map providers as
> opposed to WGS84 lat/lon (EPSG:4326)?

Two main reasons:

  3857 is at least almost conformal.  Angles are not distorted enough
  for humans to notice.  With 4326, there is serious distortion around
  me (42 N).  Basically nobody displays maps in pure geodetic
  coordinates because of this reason.  Yes, 3857 has variable size
  distortion, but if you zoom in enough then any given view has
  reasonably matching horizontal and vertical scale.

  Google started using 3857, and that evolved into it being part of the
  TMS spec, and the way that everybody does it.  While many think
  spherical pseudo-Mercator is icky (instead of real Mercator), having
  all TMS services use 3857 means that they can be displayed/switched
  without reprojecting tiles.

> 2. Users expect coordinates in 4326 and the transformation from 3857 to
> 4326 is rather fast (in comparison to ellipsoidal mercator).
> But if you save the coordinates in 4326 then you wouldn't need to transform
> at all.

Transforming coordinates for a point is easy.  Reprojecting rasters is
harder and comes out less well.

> 3. 3857 is "almost" conformal - I think that the normal use case is not
> marine navigation so it doesn't seem so important.

Have you looked at maps in 4326?  I hadn't until a few months ago when I
set that as my project CRS9 (or maybe is was NAD83(2011), 6319, same
thing for this discussion).  Square things on the ground don't look
square, and the same distance north-south appears much bigger on th map
than the east-west distance.

If you are on the equator 4326 preserves shapes. But not at higher
latitudes.

> 4. Both 3857 and 4326 have size distortion.

Yes but distortion within the same view is a bigger deal.  Size
distortion overall is not that important because people zoom to what
they want to see and then look at the scale bar.  Yes, looking at
near-global scale has intra-screen serious size distortion, in both.

> 5. You can't measure distances, areas or angles easier in 3857 as far as I
> know.

In the modern world, 'measure' is grab points and do math, so it doesn't
matter.  But looking at a map in 3857 you get approximately the right
idea of shapes, relative areas, and angles, and looking at 4326 (or any
other unprojected geodetic CRS) you don't.

> What am I missing? Is 3857 faster or more useful in any other way than 4326?

It's all about looking at the map and having things be mostly conformal.

Greg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201126/231232fe/attachment.sig>

From Jochem.Lesparre at kadaster.nl  Thu Nov 26 06:53:24 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Thu, 26 Nov 2020 14:53:24 +0000
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
 (vs EPSG:4326)?
In-Reply-To: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
References: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
Message-ID: <AM6P192MB0470ADE312E4D60428C0EF77EFF90@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>

Hi Idan,

I would like to point out a few issues:


  *   WGS84 is not a projection, therefore it has no projection distortions. The world is an ellipsoid in WGS84, not a rectangular map. The deformations you refer to is what you get when ones uses the platte-car?e projection (x=longitude, y=latitude) as for instance QGIS does by default. Google Earth instead uses a globe for WGS84, so it has (almost) no distortions.
  *   EPSG:4326 is a bad choice for a CRS, as it is 2D and because it is a datum ensemble. It is better specify a specific reference frame (e.g. WGS84-G1761). Or even better: to use the official international terrestrial reference system (e.g. ITRF2014) in stead of a CRS defined by the military of one random country.
  *   Web Mercator is an approximation mixing spherical formulas and ellipsoidal coordinates. Therefore it is not conformal. True Mercator is a better choice as it is conformal. I do not believe the more complex computation is a real problem for modern computers.

Kind regards, Jochem

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Idan Miara
Sent: donderdag 26 november 2020 14:47
To: PROJ <proj at lists.osgeo.org>
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps (vs EPSG:4326)?

Hi all,

I was wondering if you can enlighten me regarding why Web Marcator (EPSG:3857) is so popular and used by virtually all major online map providers as opposed to WGS84 lat/lon (EPSG:4326)?

I've composed some points that I could think about, but it doesn't add up for why 3857 maps (i.e. slippy map) are more popular than 4326:

1. In 3857 almost all the world fits in a rectangular tile (~85 deg north to ~85 deg south), which makes it easier to divide the tile further into sub tiles.
In 4326 all the world fits into two rectangular tiles (so not much more complicated, I guess).

2. Users expect coordinates in 4326 and the transformation from 3857 to 4326 is rather fast (in comparison to ellipsoidal mercator).
But if you save the coordinates in 4326 then you wouldn't need to transform at all.

3. 3857 is "almost" conformal - I think that the normal use case is not marine navigation so it doesn't seem so important.

4. Both 3857 and 4326 have size distortion.

5. You can't measure distances, areas or angles easier in 3857 as far as I know.

What am I missing? Is 3857 faster or more useful in any other way than 4326?

Kind regards,
Idan


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201126/dd8af7ce/attachment-0001.html>

From dagnew at ucsd.edu  Thu Nov 26 06:42:21 2020
From: dagnew at ucsd.edu (Duncan Agnew)
Date: Thu, 26 Nov 2020 06:42:21 -0800
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
 (vs EPSG:4326)?
In-Reply-To: <74c0fa75-f1af-adce-16fd-bf0a407f92c7@karney.com>
References: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
 <74c0fa75-f1af-adce-16fd-bf0a407f92c7@karney.com>
Message-ID: <CAG6Em0BMCQwYw4dqYNzSB2Mh6CxoaqnKsrFw-4f6m5DoHR0aSA@mail.gmail.com>

To zoom in and out seamlessly and have the results "look right" I think
there are only two choices:
Mercator (most Web services) and perspective (Google Earth). The latter
only works because our visual system is
used to this distortion and (almost always) automatically turns it into a
3-d impression.

On Thu, Nov 26, 2020 at 6:29 AM Charles Karney <charles at karney.com> wrote:

> You don't realize the importance of conformality.
>
> The most common use case for online maps is navigating over short
> distances (~100 km or less).  In this case the size distortions of
> Mercator are not apparent.  However the 2 key properties of Mercator are
> crucial: conformality (the angle of road intersections is preserved) and
> that north is "up".  Transverse Mercator gives you conformality but only
> gives you the "north is up" property locally; so a single transverse
> Mercator projection doesn't work globally.
>
> Presumably the use of "web" Mercator, using the spherical Mercator
> formulas instead of the ellipsoidal ones, was done on the basis of
> simplicity.  I regard this as an unfortunate compromise.
>
> You *can* measure angles with Mercator.  On large scale maps (covering
> small areas), distances and areas are accurately given by applying a
> scale factor.  In both cases, there's a little error (approx 1/300)
> because of the use of web Mercator instead of ellipsoid Mercator.
>
>    --Charles
>
> On 11/26/20 8:47 AM, Idan Miara wrote:
> > Hi all,
> >
> > I was wondering if you can enlighten me regarding why Web Marcator
> > (EPSG:3857) is so popular and used by virtually all major online map
> > providers as opposed to WGS84 lat/lon (EPSG:4326)?
> >
> > I've composed some points that I could think about, but it doesn't add
> > up for why 3857 maps (i.e. slippy map) are more popular than 4326:
> >
> > 1. In 3857 almost all the world fits in a rectangular tile (~85 deg
> > north to ~85 deg south), which makes it easier to divide the tile
> > further into sub tiles.
> > In 4326 all the world fits into two rectangular tiles (so not much more
> > complicated, I guess).
> >
> > 2. Users expect coordinates in 4326 and the transformation from 3857 to
> > 4326 is rather fast (in comparison to ellipsoidal mercator).
> > But if you save the coordinates in 4326 then you wouldn't need to
> > transform at all.
> >
> > 3. 3857 is "almost" conformal - I think that the normal use case is not
> > marine navigation so it doesn't seem so important.
> >
> > 4. Both 3857 and 4326 have size distortion.
> >
> > 5. You can't measure distances, areas or angles easier in 3857 as far as
> > I know.
> >
> > What am I missing? Is 3857 faster or more useful in any other way than
> 4326?
> >
> > Kind regards,
> > Idan
> >
> > _______________________________________________
> > PROJ mailing list
> > PROJ at lists.osgeo.org
> >
> https://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!XTrWRSdbVOKDoDk3Ts3Jsi41DvOfA_HxGWhxC_WUvJGADGGmz8NQexK9hkYDic4$
> >
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
>
> https://urldefense.com/v3/__https://lists.osgeo.org/mailman/listinfo/proj__;!!Mih3wA!XTrWRSdbVOKDoDk3Ts3Jsi41DvOfA_HxGWhxC_WUvJGADGGmz8NQexK9hkYDic4$
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201126/f17199aa/attachment.html>

From idan at miara.com  Thu Nov 26 09:45:11 2020
From: idan at miara.com (Idan Miara)
Date: Thu, 26 Nov 2020 19:45:11 +0200
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
 (vs EPSG:4326)?
In-Reply-To: <AM6P192MB0470ADE312E4D60428C0EF77EFF90@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>
References: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
 <AM6P192MB0470ADE312E4D60428C0EF77EFF90@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>
Message-ID: <CAEDrt3-nV-EwW4ZqSsxyWcgCnYAc4=O6zfiJz3vqACdN8Toe_A@mail.gmail.com>

Thank you all for your very detailed explanations!

On Thu, 26 Nov 2020 at 16:53, Lesparre, Jochem <Jochem.Lesparre at kadaster.nl>
wrote:

> Hi Idan,
>
>
>
> I would like to point out a few issues:
>
>
>
>    - WGS84 is not a projection, therefore it has no projection
>    distortions. The world is an ellipsoid in WGS84, not a rectangular map. The
>    deformations you refer to is what you get when ones uses the platte-car?e
>    projection (x=longitude, y=latitude) as for instance QGIS does by default.
>    Google Earth instead uses a globe for WGS84, so it has (almost) no
>    distortions.
>    - EPSG:4326 is a bad choice for a CRS, as it is 2D and because it is a
>    datum ensemble. It is better specify a specific reference frame (e.g.
>    WGS84-G1761). Or even better: to use the official international terrestrial
>    reference system (e.g. ITRF2014) in stead of a CRS defined by the military
>    of one random country.
>    - Web Mercator is an approximation mixing spherical formulas and
>    ellipsoidal coordinates. Therefore it is not conformal. True Mercator is a
>    better choice as it is conformal. I do not believe the more complex
>    computation is a real problem for modern computers.
>
>
>
> Kind regards, Jochem
>
>
>
> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Idan Miara
> *Sent:* donderdag 26 november 2020 14:47
> *To:* PROJ <proj at lists.osgeo.org>
> *Subject:* [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
> (vs EPSG:4326)?
>
>
>
> Hi all,
>
>
>
> I was wondering if you can enlighten me regarding why Web Marcator (EPSG:3857)
> is so popular and used by virtually all major online map providers as
> opposed to WGS84 lat/lon (EPSG:4326)?
>
>
>
> I've composed some points that I could think about, but it doesn't add up
> for why 3857 maps (i.e. slippy map) are more popular than 4326:
>
>
>
> 1. In 3857 almost all the world fits in a rectangular tile (~85 deg north
> to ~85 deg south), which makes it easier to divide the tile further into
> sub tiles.
>
> In 4326 all the world fits into two rectangular tiles (so not much more
> complicated, I guess).
>
>
>
> 2. Users expect coordinates in 4326 and the transformation from 3857 to
> 4326 is rather fast (in comparison to ellipsoidal mercator).
>
> But if you save the coordinates in 4326 then you wouldn't need to
> transform at all.
>
>
>
> 3. 3857 is "almost" conformal - I think that the normal use case is not
> marine navigation so it doesn't seem so important.
>
>
>
> 4. Both 3857 and 4326 have size distortion.
>
>
>
> 5. You can't measure distances, areas or angles easier in 3857 as far as I
> know.
>
>
>
> What am I missing? Is 3857 faster or more useful in any other way than
> 4326?
>
>
>
> Kind regards,
>
> Idan
>
>
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming van
> het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan
> verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee
> without the consent
> of the Kadaster is unlawful. If you have received this message, but are
> not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201126/eab8aa1f/attachment.html>

From phma at bezitopo.org  Thu Nov 26 15:07:40 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Thu, 26 Nov 2020 18:07:40 -0500
Subject: [PROJ] Why is Web Marcator EPSG:3857 so popular for web maps
 (vs EPSG:4326)?
In-Reply-To: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
References: <CAEDrt39SCGtSOuK_7-dP+fCeKC8AFeunriOcgJa6bUjEYkwM7Q@mail.gmail.com>
Message-ID: <2215140.R312OzBnoD@puma>

On Thursday, November 26, 2020 8:47:06 AM EST Idan Miara wrote:
> 3. 3857 is "almost" conformal - I think that the normal use case is not
> marine navigation so it doesn't seem so important.

Marine navigation is not the only use of conformal maps. Surveyors use 
conformal coordinate systems (in the USA, they're called state plane 
coordinates, and most of them are Lambert conic or transverse Mercator) to 
note coordinates of lot corners and benchmarks. When I put a tie to a 
benchmark on a map and note the grid bearing to the nearest second, I know 
that the angle between that tie and a boundary line is the same on the ground 
as on the map (though measuring the boundary line's bearing to the nearest 
second is difficult; at 100 m that's 0.5 mm).

Pierre
-- 
La sal en el mar es m?s que en la sangre.
Le sel dans la mer est plus que dans le sang.




From jmckenna at gatewaygeomatics.com  Fri Nov 27 05:50:13 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 27 Nov 2020 09:50:13 -0400
Subject: [PROJ] update on PROJ >=6 adoption status
Message-ID: <8dd48e07-932c-bbc5-50b2-9df19c97d2fb@gatewaygeomatics.com>

Today osm2pgsql has adopted PROJ>=6, through 
https://github.com/openstreetmap/osm2pgsql/pull/1331

(a reminder of the wiki page that is tracking the progress by various 
libraries and projects: 
https://github.com/OSGeo/PROJ/wiki/proj.h-adoption-status )

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/

From guasqui at actgate.com  Mon Nov 30 07:24:47 2020
From: guasqui at actgate.com (Pierluigi Guasqui)
Date: Mon, 30 Nov 2020 16:24:47 +0100
Subject: [PROJ] How to map pj_latlong_from_proj to PROJ ver 7 API
Message-ID: <CAJNYLRL_SU=8TNut_-0DMQ7roVXTc103JCQ21KL+DWy4JY9_yw@mail.gmail.com>

Hello everyone,

I've successfully compiled PROJ ver 7.2.0 on Windows 10 (build 19041.630)
and I am trying to port my code from PROJ ver 4 API to PROJ ver 7 API but I
can't find a clear matching between the old version 4 API
*pj_latlong_from_proj* routine and version 7 API code.

I tried the suggested function mapping as specified here
https://proj.org/development/migration.html#function-mapping-from-old-to-new-api,
but I am consistently getting a NULL pointer returned by the
*proj_crs_get_horizontal_datum()*. Here is my sample code:

//------------------------------------------------
#include <iostream>
#include <proj.h>

int main()
{
   PJ *proj_test = proj_create(PJ_DEFAULT_CTX, "+proj=ortho +datum=WGS84
+ellps=WGS84 +lat_0=60 +lon_0=90");
   PJ *datum = proj_crs_get_horizontal_datum(PJ_DEFAULT_CTX, proj_test);

   return 0;
}
//------------------------------------------------

*datum* is returned NULL by *proj_crs_get_horizontal_datum().*

I've also tried to use *proj_crs_get_datum()* but I still get a NULL
pointer.

Is there something wrong with my input projection?

Thanks for your help!

-- 
Pierluigi Guasqui
Software Engineer

Applied Coherent Technology Corporation (ACT)
www.actgate.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201130/945d0ce2/attachment.html>

From even.rouault at spatialys.com  Mon Nov 30 12:00:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Nov 2020 21:00:32 +0100
Subject: [PROJ] How to map pj_latlong_from_proj to PROJ ver 7 API
In-Reply-To: <CAJNYLRL_SU=8TNut_-0DMQ7roVXTc103JCQ21KL+DWy4JY9_yw@mail.gmail.com>
References: <CAJNYLRL_SU=8TNut_-0DMQ7roVXTc103JCQ21KL+DWy4JY9_yw@mail.gmail.com>
Message-ID: <2007143.c6FhX6466Z@even-i700>

Pierluigi,

> I've successfully compiled PROJ ver 7.2.0 on Windows 10 (build 19041.630)
> and I am trying to port my code from PROJ ver 4 API to PROJ ver 7 API but I
> can't find a clear matching between the old version 4 API
> *pj_latlong_from_proj* routine and version 7 API code.
> 
> I tried the suggested function mapping as specified here
> https://proj.org/development/migration.html#function-mapping-from-old-to-new
> -api, but I am consistently getting a NULL pointer returned by the
> *proj_crs_get_horizontal_datum()*. Here is my sample code:
> 
> //------------------------------------------------
> #include <iostream>
> #include <proj.h>
> 
> int main()
> {
>    PJ *proj_test = proj_create(PJ_DEFAULT_CTX, "+proj=ortho +datum=WGS84
> +ellps=WGS84 +lat_0=60 +lon_0=90");

The above is instanciated as a coordinate operation, not a CRS, so you can't 
use CRS related API on it. You likely need to add " +type=crs" to the PROJ 
string

>    PJ *datum = proj_crs_get_horizontal_datum(PJ_DEFAULT_CTX, proj_test);

You'll rather want to use proj_get_source_crs() to extract the geographic CRS 
from the projected CRS ( proj_crs_get_geodetic_crs() would also do the job 
here ).

The resulting PJ* object will be a CRS too, so as you likely want to do a 
coordinate operation from your projected CRS to the base geographic CRS, 
you'll need to create a coordinate operation object with:

	proj_create_crs_to_crs_from_pj(PJ_DEFAULT_CTX, proj_test, geog_crs, NULL, 
NULL)

and then you can use proj_trans() on the resulting object.


Another option is to use proj_crs_get_coordoperation(PJ_DEFAULT_CTX, 
proj_test) (with the PROJ string of proj_test having " +type=crs"), which will 
give you the coordinate operation to convert from the base geographic CRS of 
the projected CRS to the projected CRS.
You can use proj_trans() on it (in the reverse direction, if you want to go 
from projected to geographic)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Nov 30 12:32:42 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Nov 2020 21:32:42 +0100
Subject: [PROJ] How to map pj_latlong_from_proj to PROJ ver 7 API
In-Reply-To: <2007143.c6FhX6466Z@even-i700>
References: <CAJNYLRL_SU=8TNut_-0DMQ7roVXTc103JCQ21KL+DWy4JY9_yw@mail.gmail.com>
 <2007143.c6FhX6466Z@even-i700>
Message-ID: <6024048.qmRsSOiBRN@even-i700>

On lundi 30 novembre 2020 21:00:32 CET Even Rouault wrote:
> Pierluigi,
> 
> > I've successfully compiled PROJ ver 7.2.0 on Windows 10 (build 19041.630)
> > and I am trying to port my code from PROJ ver 4 API to PROJ ver 7 API but
> > I
> > can't find a clear matching between the old version 4 API
> > *pj_latlong_from_proj* routine and version 7 API code.
> > 
> > I tried the suggested function mapping as specified here
> > https://proj.org/development/migration.html#function-mapping-from-old-to-n
> > ew -api, but I am consistently getting a NULL pointer returned by the
> > *proj_crs_get_horizontal_datum()*. Here is my sample code:
> > 
> > //------------------------------------------------
> > #include <iostream>
> > #include <proj.h>
> > 
> > int main()
> > {
> > 
> >    PJ *proj_test = proj_create(PJ_DEFAULT_CTX, "+proj=ortho +datum=WGS84
> > 
> > +ellps=WGS84 +lat_0=60 +lon_0=90");
> 
> The above is instanciated as a coordinate operation, not a CRS, so you can't
> use CRS related API on it. You likely need to add " +type=crs" to the PROJ
> string
> 
> >    PJ *datum = proj_crs_get_horizontal_datum(PJ_DEFAULT_CTX, proj_test);
> 
> You'll rather want to use proj_get_source_crs() to extract the geographic
> CRS from the projected CRS ( proj_crs_get_geodetic_crs() would also do the
> job here ).
> 
> The resulting PJ* object will be a CRS too, so as you likely want to do a
> coordinate operation from your projected CRS to the base geographic CRS,
> you'll need to create a coordinate operation object with:
> 
> 	proj_create_crs_to_crs_from_pj(PJ_DEFAULT_CTX, proj_test, geog_crs, NULL,
> NULL)
> 
> and then you can use proj_trans() on the resulting object.
> 
> 
> Another option is to use proj_crs_get_coordoperation(PJ_DEFAULT_CTX,
> proj_test) (with the PROJ string of proj_test having " +type=crs"), which
> will give you the coordinate operation to convert from the base geographic
> CRS of the projected CRS to the projected CRS.
> You can use proj_trans() on it (in the reverse direction, if you want to go
> from projected to geographic)

Actually that can be even be simpler, if your purpose is to transform between 
this projection and the underlying geographic CRS, then you can use directly 
proj_test (without +type=crs) with proj_trans(). In that case, the geographic 
coordinates will be in radians, whereas with the approaches I mentionned 
above, they will be in degrees (since this is the unit for geographic CRS)

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

