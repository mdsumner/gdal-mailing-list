From Sjur.A.Kolberg at sintef.no  Sat Dec  4 09:42:41 2010
From: Sjur.A.Kolberg at sintef.no (Sjur Kolberg)
Date: Sat, 4 Dec 2010 18:42:41 +0100
Subject: [Proj] Building proj.4 using Visual Studio 2008 IDE
Message-ID: <72251B925CE10A478606EEAC6AA683BE1BB541E7CD@SINTEFEXMBX01.sintef.no>


Hello,

Can anyone please answer what I guess is a newbie question:

I try to build proj.4 using Visual Studio 2008 IDE.

By following instructions, I managed to build proj.4 using the nmake utility. For possibly irrational reasons, nmake is a tool I'm uncomfortable with, so I tried to build proj4.dll by creating VS solution and project files. I separated the five outputs (proj.dll, geod.exe, nad2bin.exe, nad2nad.exe and cs2cs) into separate VS projects.

Building somehow works for proj.4, meaning that the dll is successfully created, but no stub library (proj_i.lib). Hence the remaining programs (cs2cs, nad2nad etc) either complain about proj_i.lib not found, or about unresolved externals. Also, DUMPBIN on the created proj.dll shows an empty list of exported symbols.

I have specified /IMPLIB:proj_i.lib, but this is ignored by VS, apparently connected to the fact that nothing is exported from proj.dll. From other libraries, I am used to find __declspec(dllexport) at the declaration of the exported symbols, but there is none of the like in the proj.4 source code. Is this Windows or VS specific?

Still the nmake utility obviously know what to export, DUMPBIN on the nmake-built proj.dll shows a well populated list. I have tried reading the .configure and makefile.vc files, but lack the skill to understand them.

I guess I could read the output from DUPMBIN on the nmake-generated proj.dll  and insert a __declspec(dllexport) in the source code declarations for all these symbols. Is this the only (non-nmake) way of getting these symbols exported from proj.4 under VS?

If I #defined a PROJ_DLL inside some #ifdef to mean __declspec(dllexport)  if (WIN32 and VS-IDE) and nothing otherwise, would anyone be interested in updated proj_api.h and the .sln+.vcproj files?

Regards,

Sjur K :-)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101204/5fb90fb1/attachment.html>

From ericnico.david at gmail.com  Sat Dec  4 10:50:56 2010
From: ericnico.david at gmail.com (nicolas david)
Date: Sat, 4 Dec 2010 19:50:56 +0100
Subject: [Proj] Building proj.4 using Visual Studio 2008 IDE
In-Reply-To: <72251B925CE10A478606EEAC6AA683BE1BB541E7CD@SINTEFEXMBX01.sintef.no>
References: <72251B925CE10A478606EEAC6AA683BE1BB541E7CD@SINTEFEXMBX01.sintef.no>
Message-ID: <AANLkTimh=dsqO+nKO--m7h7PfVR5JjRpW7uTBiKA5X63@mail.gmail.com>

hi

I think you should have a look to the "Exporting from a DLL using def
files<http://msdn.microsoft.com/en-us/library/d91k01sh%28v=VS.90%29.aspx>"
pages of Visual 2008 documentation. There is a proj.def file under proj4
"src" directory which contains the function to export.

hope it's helpful

Nicolas

2010/12/4 Sjur Kolberg <Sjur.A.Kolberg at sintef.no>

>
>
> Hello,
>
>
>
> Can anyone please answer what I guess is a newbie question:
>
>
>
> I try to build proj.4 using Visual Studio 2008 IDE.
>
>
>
> By following instructions, I managed to build proj.4 using the nmake
> utility. For possibly irrational reasons, nmake is a tool Iâ€™m uncomfortable
> with, so I tried to build proj4.dll by creating VS solution and project
> files. I separated the five outputs (proj.dll, geod.exe, nad2bin.exe,
> nad2nad.exe and cs2cs) into separate VS projects.
>
>
>
> Building somehow works for proj.4, meaning that the dll is successfully
> created, but no stub library (proj_i.lib). Hence the remaining programs
> (cs2cs, nad2nad etc) either complain about proj_i.lib not found, or about
> unresolved externals. Also, DUMPBIN on the created proj.dll shows an empty
> list of exported symbols.
>
>
>
> I have specified /IMPLIB:proj_i.lib, but this is ignored by VS, apparently
> connected to the fact that nothing is exported from proj.dll. From other
> libraries, I am used to find __declspec(dllexport) at the declaration of the
> exported symbols, but there is none of the like in the proj.4 source code.
> Is this Windows or VS specific?
>
>
>
> Still the nmake utility obviously know what to export, DUMPBIN on the
> nmake-built proj.dll shows a well populated list. I have tried reading the
> .configure and makefile.vc files, but lack the skill to understand them.
>
>
>
> I guess I could read the output from DUPMBIN on the nmake-generated
> proj.dll  and insert a __declspec(dllexport) in the source code declarations
> for all these symbols. Is this the only (non-nmake) way of getting these
> symbols exported from proj.4 under VS?
>
>
>
> If I #defined a PROJ_DLL inside some #ifdef to mean __declspec(dllexport)
>  if (WIN32 and VS-IDE) and nothing otherwise, would anyone be interested in
> updated proj_api.h and the .sln+.vcproj files?
>
>
>
> Regards,
>
>
>
> Sjur K :-)
>
>
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101204/9e742b9f/attachment.html>

From Sjur.A.Kolberg at sintef.no  Sat Dec  4 16:06:14 2010
From: Sjur.A.Kolberg at sintef.no (Sjur Kolberg)
Date: Sun, 5 Dec 2010 01:06:14 +0100
Subject: [Proj] Building proj.4 using Visual Studio 2008 IDE
In-Reply-To: <AANLkTimh=dsqO+nKO--m7h7PfVR5JjRpW7uTBiKA5X63@mail.gmail.com>
References: <72251B925CE10A478606EEAC6AA683BE1BB541E7CD@SINTEFEXMBX01.sintef.no>
	<AANLkTimh=dsqO+nKO--m7h7PfVR5JjRpW7uTBiKA5X63@mail.gmail.com>
Message-ID: <72251B925CE10A478606EEAC6AA683BE1BB541E7DC@SINTEFEXMBX01.sintef.no>


Thanks, Nicolas!

All I needed to do was to specify that file under Linker-Input as Module Definition file. I hadn't noticed it was there, and it didn't strike me that  the .def file I DUMPBIN'ed from the nmake build could be used that way. It all works now, after moving/copying some files between projects.

Sjur :-)


From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of nicolas david
Sent: 4. desember 2010 19:51
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Building proj.4 using Visual Studio 2008 IDE

hi

I think you should have a look to the "Exporting from a DLL using def files<http://msdn.microsoft.com/en-us/library/d91k01sh%28v=VS.90%29.aspx>" pages of Visual 2008 documentation. There is a proj.def file under proj4 "src" directory which contains the function to export.

hope it's helpful

Nicolas
2010/12/4 Sjur Kolberg <Sjur.A.Kolberg at sintef.no<mailto:Sjur.A.Kolberg at sintef.no>>

Hello,

Can anyone please answer what I guess is a newbie question:

I try to build proj.4 using Visual Studio 2008 IDE.

By following instructions, I managed to build proj.4 using the nmake utility. For possibly irrational reasons, nmake is a tool I'm uncomfortable with, so I tried to build proj4.dll by creating VS solution and project files. I separated the five outputs (proj.dll, geod.exe, nad2bin.exe, nad2nad.exe and cs2cs) into separate VS projects.

Building somehow works for proj.4, meaning that the dll is successfully created, but no stub library (proj_i.lib). Hence the remaining programs (cs2cs, nad2nad etc) either complain about proj_i.lib not found, or about unresolved externals. Also, DUMPBIN on the created proj.dll shows an empty list of exported symbols.

I have specified /IMPLIB:proj_i.lib, but this is ignored by VS, apparently connected to the fact that nothing is exported from proj.dll. From other libraries, I am used to find __declspec(dllexport) at the declaration of the exported symbols, but there is none of the like in the proj.4 source code. Is this Windows or VS specific?

Still the nmake utility obviously know what to export, DUMPBIN on the nmake-built proj.dll shows a well populated list. I have tried reading the .configure and makefile.vc<http://makefile.vc> files, but lack the skill to understand them.

I guess I could read the output from DUPMBIN on the nmake-generated proj.dll  and insert a __declspec(dllexport) in the source code declarations for all these symbols. Is this the only (non-nmake) way of getting these symbols exported from proj.4 under VS?

If I #defined a PROJ_DLL inside some #ifdef to mean __declspec(dllexport)  if (WIN32 and VS-IDE) and nothing otherwise, would anyone be interested in updated proj_api.h and the .sln+.vcproj files?

Regards,

Sjur K :-)



_______________________________________________
Proj mailing list
Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101205/3ae688ac/attachment.html>

From support.mn at elisanet.fi  Sun Dec  5 03:24:25 2010
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Sun, 5 Dec 2010 13:24:25 +0200 (EET)
Subject: [Proj] Building proj.4 using Visual Studio 2008 IDE
Message-ID: <31680045.6721031291548265600.JavaMail.support.mn@elisanet.fi>

Hello,

just collect all source files together and create a library.. you don't need any
make files as long as you have all needed included and compiled in the
library. Then create dependency for your main project which uses that library.

Read VC documentation about how to create libraries. Proj4 is just as
any other library.

Regards: Janne.

-------------------------------------


Sjur Kolberg [Sjur.A.Kolberg at sintef.no] kirjoitti: 
> 
> Hello,
> 
> Can anyone please answer what I guess is a newbie question:
> 
> I try to build proj.4 using Visual Studio 2008 IDE.
> 
> By following instructions, I managed to build proj.4 using the nmake utility. For possibly irrational reasons, nmake is a tool I'm uncomfortable with, so I tried to build proj4.dll by creating VS solution and project files. I separated the five outputs (proj.dll, geod.exe, nad2bin.exe, nad2nad.exe and cs2cs) into separate VS projects.
> 
> Building somehow works for proj.4, meaning that the dll is successfully created, but no stub library (proj_i.lib). Hence the remaining programs (cs2cs, nad2nad etc) either complain about proj_i.lib not found, or about unresolved externals. Also, DUMPBIN on the created proj.dll shows an empty list of exported symbols.
> 
> I have specified /IMPLIB:proj_i.lib, but this is ignored by VS, apparently connected to the fact that nothing is exported from proj.dll. From other libraries, I am used to find __declspec(dllexport) at the declaration of the exported symbols, but there is none of the like in the proj.4 source code. Is this Windows or VS specific?
> 
> Still the nmake utility obviously know what to export, DUMPBIN on the nmake-built proj.dll shows a well populated list. I have tried reading the .configure and makefile.vc files, but lack the skill to understand them.
> 
> I guess I could read the output from DUPMBIN on the nmake-generated proj.dll  and insert a __declspec(dllexport) in the source code declarations for all these symbols. Is this the only (non-nmake) way of getting these symbols exported from proj.4 under VS?
> 
> If I #defined a PROJ_DLL inside some #ifdef to mean __declspec(dllexport)  if (WIN32 and VS-IDE) and nothing otherwise, would anyone be interested in updated proj_api.h and the .sln+.vcproj files?
> 
> Regards,
> 
> Sjur K :-)
> 
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From cgodkin at gmail.com  Mon Dec 20 14:55:02 2010
From: cgodkin at gmail.com (Carl Godkin)
Date: Mon, 20 Dec 2010 14:55:02 -0800
Subject: [Proj] UTM -v and -V output confusing...
Message-ID: <AANLkTimPPQdWi99_qFkuXFs-OAex4ZdWtJQPVbTtj-T+@mail.gmail.com>

Hi,

I am not sure if this is a bug or just something I don't understand.

If I specify the -v option to cs2cs or proj (or the -V option to proj), the
library helpfully prints
the parameters it's using for coordinate conversion.

I am wondering whether there is a bug in the output for UTM.  For instance:

#Universal Transverse Mercator (UTM)
#       Cyl, Sph
#       zone= south
# +proj=utm +zone=30 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m
# +no_defs


What exactly does "zone= south" mean?  I know there's a "+south" option
that's used to specify southern
hemisphere UTM zones but zone=south is unconditionally printed as far as I
can tell.

Thanks!

carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101220/3ca26248/attachment.html>

From cgodkin at gmail.com  Mon Dec 20 21:31:28 2010
From: cgodkin at gmail.com (Carl Godkin)
Date: Mon, 20 Dec 2010 21:31:28 -0800
Subject: [Proj] Question about change in epsg file from named datum to
	defined form...
Message-ID: <AANLkTinb=fbipBKk_Y91UuNw+AOHw87iSKfBNMEDUkv9@mail.gmail.com>

Hi,

I notice that Trac revision 1874 updated the "epsg" definitions file to use
+towgs84= instead of +datum=
as expressed briefly in this comment:

"epsg update from GDAL - add TMSO and change of named datums to defined form
(#18 <http://trac.osgeo.org/proj/ticket/18>)"

I was wondering where I could read about the rationale for the latter
change.  Ticket #18
seems to be about the addition of TMSO only as far as I can see.

This seems to make a difference for the NAD27 coordinate systems as far as I
understand
how PROJ.4 works.

As I understand it, the +datum=NAD27 form (for example) uses datum shift
files whereas
the replacement +towgs84=-10,158,187,0,0,0,0 form represents an average
shift, right?

Can someone either explain why this change was made or point me at a
discussion
perhaps in another list?

Thank you very much,

carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20101220/436112fb/attachment.html>

From jswhit at fastmail.fm  Wed Dec 29 11:13:48 2010
From: jswhit at fastmail.fm (Jeff Whitaker)
Date: Wed, 29 Dec 2010 12:13:48 -0700
Subject: [Proj] patch to PJ_hammer.c for inverse projection
Message-ID: <4D1B886C.6010104@fastmail.fm>

Here's a patch against SVN head to PJ_hammer.c that implements the 
inverse projection for Hammer and Eckert-Greifendorff (based on 
http://mathworld.wolfram.com/Hammer-AitoffEqual-AreaProjection.html):

Index: PJ_hammer.c
===================================================================
--- PJ_hammer.c (revision 1954)
+++ PJ_hammer.c (working copy)
@@ -4,7 +4,7 @@
  #define PJ_LIB__
  # include      <projects.h>
  PROJ_HEAD(hammer, "Hammer & Eckert-Greifendorff")
-       "\n\tMisc Sph, no inv.\n\tW= M=";
+       "\n\tMisc Sph, \n\tW= M=";
  FORWARD(s_forward); /* spheroid */
         double cosphi, d;

@@ -13,6 +13,13 @@
         xy.y = P->rm * d * sin(lp.phi);
         return (xy);
  }
+INVERSE(s_inverse); /* spheroid */
+       double z;
+       z = sqrt(1.-0.25*P->w*P->w*xy.x*xy.x-0.25*xy.y*xy.y);
+       lp.lam = aatan2(P->w * xy.x * z,2. * z * z - 1)/P->w;
+       lp.phi = aasin(z * xy.y);
+       return (lp);
+}
  FREEUP; if (P) pj_dalloc(P); }
  ENTRY0(hammer)
         if (pj_param(P->ctx, P->params, "tW").i) {
@@ -25,5 +32,5 @@
                 P->m = 1.;
         P->rm = 1. / P->m;
         P->m /= P->w;
-       P->es = 0.; P->fwd = s_forward;
+       P->es = 0.; P->fwd = s_forward; P->inv = s_inverse;
  ENDENTRY(P)


-Jeff
-- 
Jeffrey S. Whitaker         Phone  : (303)497-6313
Meteorologist               FAX    : (303)497-6449
NOAA/OAR/PSD  R/PSD1        Email  : Jeffrey.S.Whitaker at noaa.gov
325 Broadway                Office : Skaggs Research Cntr 1D-113
Boulder, CO, USA 80303-3328 Web    : http://tinyurl.com/5telg


