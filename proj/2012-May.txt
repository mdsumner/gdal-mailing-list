From garret.duffy at nuigalway.ie  Tue May  1 08:49:10 2012
From: garret.duffy at nuigalway.ie (Duffy, Garret)
Date: Tue, 1 May 2012 16:49:10 +0100
Subject: [Proj] concatenate EPSG codes in proj4?
Message-ID: <1612FB018DB27B449265FE30F163AF5D0718E1A1@EVS1.ac.nuigalway.ie>

Hi,

Does proj4 support concatenation of EPSG codes?  e.g. I would like to
concatenate any projection with EPSG operation 9621.  I would ideally
like to do this in QGIS.

If not, does anyone have any advice how to do this?

Thanks,

Garret


From fyw at wwwtools.com  Thu May  3 10:40:20 2012
From: fyw at wwwtools.com (Frank Willett)
Date: Thu, 03 May 2012 11:40:20 -0600
Subject: [Proj] Problem with projection imw_p
Message-ID: <4FA2C304.4090908@wwwtools.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

I'm having a problem with the imw_p projection and thought I
should send it to this list for comments before submitting a bug
report. The prompt from proj is % in the following examples and
the prompt from the OS is $.

This is proj-4.8.0 .

imw_p : International Map of the World Polyconic

$ ./proj +proj=imw_p +lat_1=2 +lat_2=6 +lon_1=0 +x_0=500000
%0 0
500000.00       0.00
%0 2
500000.00       0.00
%.0001 .0001
500011.15       -221138.40
%.0001 2
500011.13       0.00
%.0001 2.0001
500011.13       11.06


$ ./proj +proj=imw_p +lat_1=2 +lat_2=6 +lon_1=0 +x_0=500000 -I
%500000 0
- -2147483648d-2147483648'1.#QO"E -2147483648d-2147483648'-1.#IO"N
%500000 1
- -2147483648d-2147483648'1.#QO"E -2147483648d-2147483648'-1.#IO"N
%500001 1
0d0'0.032"E     2d0'0.033"N
%500011.15 -221138.40
0d0'0.36"E      0d0'0.36"N
%500011.13 0
0d0'0.36"E      2dN
%500011.13 11.06
0d0'0.36"E      2d0'0.36"N

Thanks in advance for any comments :-)
Frank Willett
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iEYEARECAAYFAk+iwv0ACgkQWPOM7lMmKDCMkACgzbccN2o4HR7WaCECdbKxxS8p
ByQAn1ABhij03MZNquX6wXbeIx/srvZ1
=wbdL
-----END PGP SIGNATURE-----


From Mikael.Rittri at carmenta.com  Fri May  4 02:57:44 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Fri, 4 May 2012 09:57:44 +0000
Subject: [Proj] How does the datum "NAD27 Michigan" work?
Message-ID: <E4AB3DD44D22854B819908379DE4AD49391C2D24@SETHNWS023.carmenta.se>

Hello,
I am trying to understand the "NAD27 Michigan" datum, EPSG:6268.

As represented in EPSG, this is a datum distinct from NAD27,
and uses the ellipsoid "Clarke 1866 Michigan".
EPSG remarks:

    "Ellipsoid taken to be 800 ft above the NAD27 reference ellipsoid."

The information source (J. P. Snyder. Map Projections: A Working Manual, p. 56, note 1)
is more precise:

   "The major and minor axes of the ellipsoid are taken at exactly 1.0000382 times those
    of the Clarke 1866, for Michigan only. This incorporates an average elevation throughout
    the State of about 800 ft, with limited variation."

Neither EPSG nor Snyder gives any datum shift for NAD 27 Michigan.

However, the Michigan Department of Natural Resources just writes:

      Datum:    NAD27
      Ellipsoid: Modified Clarke, 1866

where the ellipsoid turns out to be the same as "Clarke 1866 Michigan".
(http://www.michigan.gov/documents/DNR_Map_Proj_and_MI_Georef_Info_20889_7.pdf)

So it seems that Michiganders regard the datum NAD27 Michigan to be the same as NAD27:
it is not an adjustment or densification or whatever, it just has a different ellipsoid.

But this can be interpreted in two ways:
   a) that long/lat are the same in both datums,
   b) or that geocentric Cartesian coordinates X,Y,Z are the same in both datums.

If a) is intended, then a correct datum shift for NAD27 Michigan could use the CONUS
grid shift file intended for NAD27.
And if b) is intended, then the 3-parameter shift between NAD27 Michigan
and NAD27 would be 0,0,0.

These interpretations are not quite equivalent.

I've tried out b) in Proj.4, by setting identical towgs84 parameters for both datums.
(These are not very accurate, but since they are the same on both sides, they should
 cancel each other and give a 0,0,0 shift between NAD 27 Michigan and NAD27.)

>cs2cs +proj=longlat +a=6378450.0475 +b=6356826.6215 +towgs84=-9,161,179 +to +proj=longlat +ellps=clrk66 +towgs84=-9,161,179

-85 45 0

85dW    44d59'59.973"N 243.235

So, the point at the ellipsoid surface of NAD27 Michigan is 243.235 m = 798 feet
above the NAD27 ellipsoid, as expected. What surprised me is the latitude
shift of 0.027" = 0.83 meters. Well, I think understand where it comes from: the
line that is perpendicular to the ellipsoid surfaces doesn't go through the ellipsoid
center(s). But the effect is much larger than I would have thought.

So, does anyone know whether a) or b) or something else is the correct interpretation?

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120504/27c17018/attachment.html>

From jon.skoien at jrc.ec.europa.eu  Fri May  4 06:59:39 2012
From: jon.skoien at jrc.ec.europa.eu (Jon Olav Skoien)
Date: Fri, 04 May 2012 15:59:39 +0200
Subject: [Proj] Inconsistencies in projection definition (epsg 3857)
Message-ID: <4FA3E0CB.9050200@jrc.ec.europa.eu>

Dear list,

First of all, I am sorry if this is not the right list for the following 
question.

We are working with some data that has been transformed from latlong via 
different software and have encountered some inconsistencies with the 
coordination system definitions of epsg:3857 (WGS 84 / Pseudo-Mercator, 
often referred to as web mercator as it is used in web services such as 
Google Maps). Some software (e.g. psql2shape) seems to use the 
definition from spatialreference.org:
http://spatialreference.org/ref/sr-org/6864/
which gives the proj4 definition as:
+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 
+towgs84=0,0,0,0,0,0,0 +units=m +no_defs

ogr2ogr appears to use a proj4 definition that is quite similar (gives a 
dislocation of 10-20 meters in y-direction for some locations we have 
checked)
+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs 
+ellps=WGS84 +towgs84=0,0,0

However, the epsg-source of proj seems to use the following definition:
+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 
+k=1.0 +units=m +nadgrids=@null +wktext  +no_defs

The difference for a random location in Europe is about 30 km in 
y-direction between the two definitions (using e.g. cs2cs). Which 
definition should we trust?

Thanks,
Jon


-- 
Jon Olav Skøien
Joint Research Centre - European Commission
Institute for Environment and Sustainability (IES)
Land Resource Management Unit

Via Fermi 2749, TP 440,  I-21027 Ispra (VA), ITALY

jon.skoien at jrc.ec.europa.eu
Tel:  +39 0332 789206

Disclaimer: Views expressed in this email are those of the individual and do not necessarily represent official views of the European Commission.




From Mikael.Rittri at carmenta.com  Fri May  4 07:46:30 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Fri, 4 May 2012 14:46:30 +0000
Subject: [Proj] Inconsistencies in projection definition (epsg 3857)
In-Reply-To: <4FA3E0CB.9050200@jrc.ec.europa.eu>
References: <4FA3E0CB.9050200@jrc.ec.europa.eu>
Message-ID: <95F55AC7-6F67-4212-B57E-B4750585DC46@carmenta.com>

Trust the last one, with +nadgrids. 
See http://trac.osgeo.org/proj/wiki/FAQ (question 8).

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

4 maj 2012 kl. 16:25 skrev "Jon Olav Skoien" <jon.skoien at jrc.ec.europa.eu>:

> Dear list,
> 
> First of all, I am sorry if this is not the right list for the following 
> question.
> 
> We are working with some data that has been transformed from latlong via 
> different software and have encountered some inconsistencies with the 
> coordination system definitions of epsg:3857 (WGS 84 / Pseudo-Mercator, 
> often referred to as web mercator as it is used in web services such as 
> Google Maps). Some software (e.g. psql2shape) seems to use the 
> definition from spatialreference.org:
> http://spatialreference.org/ref/sr-org/6864/
> which gives the proj4 definition as:
> +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 
> +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
> 
> ogr2ogr appears to use a proj4 definition that is quite similar (gives a 
> dislocation of 10-20 meters in y-direction for some locations we have 
> checked)
> +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs 
> +ellps=WGS84 +towgs84=0,0,0
> 
> However, the epsg-source of proj seems to use the following definition:
> +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 
> +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs
> 
> The difference for a random location in Europe is about 30 km in 
> y-direction between the two definitions (using e.g. cs2cs). Which 
> definition should we trust?
> 
> Thanks,
> Jon
> 
> 
> -- 
> Jon Olav Skøien
> Joint Research Centre - European Commission
> Institute for Environment and Sustainability (IES)
> Land Resource Management Unit
> 
> Via Fermi 2749, TP 440,  I-21027 Ispra (VA), ITALY
> 
> jon.skoien at jrc.ec.europa.eu
> Tel:  +39 0332 789206
> 
> Disclaimer: Views expressed in this email are those of the individual and do not necessarily represent official views of the European Commission.
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj


From cjmce at lsu.edu  Fri May  4 08:09:07 2012
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 4 May 2012 15:09:07 +0000
Subject: [Proj] How does the datum "NAD27 Michigan" work?
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49391C2D24@SETHNWS023.carmenta.se>
References: <E4AB3DD44D22854B819908379DE4AD49391C2D24@SETHNWS023.carmenta.se>
Message-ID: <A35D3EE6-B643-4C65-ACAA-B195953603BE@lsu.edu>

Option (a) is the desired intent.  This is an attempt to translate between GIS pros and Cadastral pros.  Many GIS pros back then were not aware of using the Gaussian Sphere to implement the "Sea Level Correction" muchless go above the ellipsoid to the surface.  Minnesota does this on a county-by-county basis; Colombia does city-by-city.  This is essentially a scale factor correction for grid to ground distances.


Sent from Cliff Mugnier's iPhone

On May 4, 2012, at 5:19, "Mikael Rittri" <Mikael.Rittri at carmenta.com<mailto:Mikael.Rittri at carmenta.com>> wrote:

Hello,
I am trying to understand the ”NAD27 Michigan” datum, EPSG:6268.

As represented in EPSG, this is a datum distinct from NAD27,
and uses the ellipsoid “Clarke 1866 Michigan”.
EPSG remarks:

    “Ellipsoid taken to be 800 ft above the NAD27 reference ellipsoid.”

The information source (J. P. Snyder. Map Projections: A Working Manual, p. 56, note 1)
is more precise:

   “The major and minor axes of the ellipsoid are taken at exactly 1.0000382 times those
    of the Clarke 1866, for Michigan only. This incorporates an average elevation throughout
    the State of about 800 ft, with limited variation.”

Neither EPSG nor Snyder gives any datum shift for NAD 27 Michigan.

However, the Michigan Department of Natural Resources just writes:

      Datum:    NAD27
      Ellipsoid: Modified Clarke, 1866

where the ellipsoid turns out to be the same as “Clarke 1866 Michigan”.
(<http://www.michigan.gov/documents/DNR_Map_Proj_and_MI_Georef_Info_20889_7.pdf>http://www.michigan.gov/documents/DNR_Map_Proj_and_MI_Georef_Info_20889_7.pdf)

So it seems that Michiganders regard the datum NAD27 Michigan to be the same as NAD27:
it is not an adjustment or densification or whatever, it just has a different ellipsoid.

But this can be interpreted in two ways:
   a) that long/lat are the same in both datums,
   b) or that geocentric Cartesian coordinates X,Y,Z are the same in both datums.

If a) is intended, then a correct datum shift for NAD27 Michigan could use the CONUS
grid shift file intended for NAD27.
And if b) is intended, then the 3-parameter shift between NAD27 Michigan
and NAD27 would be 0,0,0.

These interpretations are not quite equivalent.

I’ve tried out b) in Proj.4, by setting identical towgs84 parameters for both datums.
(These are not very accurate, but since they are the same on both sides, they should
 cancel each other and give a 0,0,0 shift between NAD 27 Michigan and NAD27.)

>cs2cs +proj=longlat +a=6378450.0475 +b=6356826.6215 +towgs84=-9,161,179 +to +proj=longlat +ellps=clrk66 +towgs84=-9,161,179

-85 45 0

85dW    44d59'59.973"N 243.235

So, the point at the ellipsoid surface of NAD27 Michigan is 243.235 m = 798 feet
above the NAD27 ellipsoid, as expected. What surprised me is the latitude
shift of 0.027" = 0.83 meters. Well, I think understand where it comes from: the
line that is perpendicular to the ellipsoid surfaces doesn’t go through the ellipsoid
center(s). But the effect is much larger than I would have thought.

So, does anyone know whether a) or b) or something else is the correct interpretation?

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

_______________________________________________
Proj mailing list
Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120504/524a7f90/attachment.html>

From Mikael.Rittri at carmenta.com  Mon May  7 01:05:08 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Mon, 7 May 2012 08:05:08 +0000
Subject: [Proj] How does the datum "NAD27 Michigan" work?
In-Reply-To: <A35D3EE6-B643-4C65-ACAA-B195953603BE@lsu.edu>
References: <E4AB3DD44D22854B819908379DE4AD49391C2D24@SETHNWS023.carmenta.se>
	<A35D3EE6-B643-4C65-ACAA-B195953603BE@lsu.edu>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49391C3832@SETHNWS023.carmenta.se>

> Option (a) is the desired intent.
> [ ... ]
> This is essentially a scale factor correction for grid to ground distances.

I see.

> Minnesota does this on a county-by-county basis; Colombia does city-by-city.

Aha, so that's the explanation for things like


GEOGCS["GCS_NAD_1983_HARN_Adj_MN_Carver",

       DATUM["D_NAD_1983_HARN_Adj_MN_Carver",

             SPHEROID["S_GRS_1980_Adj_MN_Carver",6378400.653,298.2572221008827]],

       PRIMEM["Greenwich",0.0],

       UNIT["Degree",0.0174532925199433]]

They have confused me, too.

Thank you very much,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

________________________________
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Clifford J Mugnier
Sent: den 4 maj 2012 17:09
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] How does the datum "NAD27 Michigan" work?

Option (a) is the desired intent.  This is an attempt to translate between GIS pros and Cadastral pros.  Many GIS pros back then were not aware of using the Gaussian Sphere to implement the "Sea Level Correction" muchless go above the ellipsoid to the surface.  Minnesota does this on a county-by-county basis; Colombia does city-by-city.  This is essentially a scale factor correction for grid to ground distances.

Sent from Cliff Mugnier's iPhone

On May 4, 2012, at 5:19, "Mikael Rittri" <Mikael.Rittri at carmenta.com<mailto:Mikael.Rittri at carmenta.com>> wrote:
Hello,
I am trying to understand the "NAD27 Michigan" datum, EPSG:6268.

As represented in EPSG, this is a datum distinct from NAD27,
and uses the ellipsoid "Clarke 1866 Michigan".
EPSG remarks:

    "Ellipsoid taken to be 800 ft above the NAD27 reference ellipsoid."

The information source (J. P. Snyder. Map Projections: A Working Manual, p. 56, note 1)
is more precise:

   "The major and minor axes of the ellipsoid are taken at exactly 1.0000382 times those
    of the Clarke 1866, for Michigan only. This incorporates an average elevation throughout
    the State of about 800 ft, with limited variation."

Neither EPSG nor Snyder gives any datum shift for NAD 27 Michigan.

However, the Michigan Department of Natural Resources just writes:

      Datum:    NAD27
      Ellipsoid: Modified Clarke, 1866

where the ellipsoid turns out to be the same as "Clarke 1866 Michigan".
(<http://www.michigan.gov/documents/DNR_Map_Proj_and_MI_Georef_Info_20889_7.pdf>http://www.michigan.gov/documents/DNR_Map_Proj_and_MI_Georef_Info_20889_7.pdf)

So it seems that Michiganders regard the datum NAD27 Michigan to be the same as NAD27:
it is not an adjustment or densification or whatever, it just has a different ellipsoid.

But this can be interpreted in two ways:
   a) that long/lat are the same in both datums,
   b) or that geocentric Cartesian coordinates X,Y,Z are the same in both datums.

If a) is intended, then a correct datum shift for NAD27 Michigan could use the CONUS
grid shift file intended for NAD27.
And if b) is intended, then the 3-parameter shift between NAD27 Michigan
and NAD27 would be 0,0,0.

These interpretations are not quite equivalent.

I've tried out b) in Proj.4, by setting identical towgs84 parameters for both datums.
(These are not very accurate, but since they are the same on both sides, they should
 cancel each other and give a 0,0,0 shift between NAD 27 Michigan and NAD27.)

>cs2cs +proj=longlat +a=6378450.0475 +b=6356826.6215 +towgs84=-9,161,179 +to +proj=longlat +ellps=clrk66 +towgs84=-9,161,179

-85 45 0

85dW    44d59'59.973"N 243.235

So, the point at the ellipsoid surface of NAD27 Michigan is 243.235 m = 798 feet
above the NAD27 ellipsoid, as expected. What surprised me is the latitude
shift of 0.027" = 0.83 meters. Well, I think understand where it comes from: the
line that is perpendicular to the ellipsoid surfaces doesn't go through the ellipsoid
center(s). But the effect is much larger than I would have thought.

So, does anyone know whether a) or b) or something else is the correct interpretation?

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

_______________________________________________
Proj mailing list
Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120507/7020892d/attachment.html>

From ec_eng01 at yahoo.com  Mon May  7 05:19:53 2012
From: ec_eng01 at yahoo.com (rps_rt)
Date: Mon, 7 May 2012 05:19:53 -0700 (PDT)
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <4CABBD92.4060302@pobox.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>
	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>
Message-ID: <1336393193544-4957639.post@n6.nabble.com>

Dear Warmerdam and all members,

I have been browsing and reading for a while to convert my coordinates with
no hope until finding this Proj. 4.

Kindly, I seek your support here ... I am using Linux Ubuntu to convert from
long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
as accurate as possible results (cm-level if possible).

I was reading this thread because I had a problem of getting a cs2cs results
for espg=31495, while I could get them for espg=31468. But the conversion
results with the later one were not accurate ~ almost 100 meters away.

e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
+init=epsg:31468

but when I change it to: echo "13.755944 51.054555" | cs2cs +init=epsg:4326
+to +init=epsg:31495,
I get the message "projection initialization failure cause: no options found
in 'init' file".

I tried to change something based on this thread, to make sure that my
PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
espg zones gave the below error:
"
pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
Using from definition: init=epsg:31467
Rel. 4.8.0, 6 March 2012
<cs2cs>:
projection initialization cause: no system list, errno: 20
"

I tried to "make uninstall" and "make install" but nothing was fixed!!

Here are more details about my project:

My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
all what is needed to get my coordinates converted accurately, but no idea
how to process them in Proj. 4 (I am totally new here):

PROJCS["DHDN / Germany zone
4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
PARAMETER["false_northing",0],UNIT["metre",1]]
TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
EPSG=31495

%Seven parameters:
% 582.00     - Translation dx in meter to WGS84
% 105.0      - Translation dy in meter to WGS84
% 414.50     - Translation dz in meter to WGS84
% 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
% 1.696e-6   - Rotation rf (phi) in radiant to WGS84
% -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
% 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)

Sorry for the long thread but did not want to miss any details, even in my
first ever thread in this forum.

I will be looking forward to reading form you.
Best regards,
Amro 

--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957639.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From ec_eng01 at yahoo.com  Mon May  7 05:22:20 2012
From: ec_eng01 at yahoo.com (rps_rt)
Date: Mon, 7 May 2012 05:22:20 -0700 (PDT)
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <4CABBD92.4060302@pobox.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>
	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>
Message-ID: <1336393340726-4957644.post@n6.nabble.com>

Dear Warmerdam and all members,

I have been browsing and reading for a while to convert my coordinates with
no hope until finding this Proj. 4.

Kindly, I seek your support here ... I am using Linux Ubuntu to convert from
long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
as accurate as possible results (cm-level if possible).

I was reading this thread because I had a problem of getting a cs2cs results
for espg=31495, while I could get them for espg=31468. But the conversion
results with the later one were not accurate ~ almost 100 meters away.

e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
+init=epsg:31468

but when I change it to: echo "13.755944 51.054555" | cs2cs +init=epsg:4326
+to +init=epsg:31495,
I get the message "projection initialization failure cause: no options found
in 'init' file".

I tried to change something based on this thread, to make sure that my
PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
espg zones gave the below error:
"
pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
Using from definition: init=epsg:31467
Rel. 4.8.0, 6 March 2012
<cs2cs>:
projection initialization cause: no system list, errno: 20
"

I tried to "make uninstall" and "make install" but nothing was fixed!!

Here are more details about my project:

My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
all what is needed to get my coordinates converted accurately, but no idea
how to process them in Proj. 4 (I am totally new here):

PROJCS["DHDN / Germany zone
4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
PARAMETER["false_northing",0],UNIT["metre",1]]
TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
EPSG=31495

%Seven parameters:
% 582.00     - Translation dx in meter to WGS84
% 105.0      - Translation dy in meter to WGS84
% 414.50     - Translation dz in meter to WGS84
% 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
% 1.696e-6   - Rotation rf (phi) in radiant to WGS84
% -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
% 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)

Sorry for the long thread but did not want to miss any details, even in my
first ever thread in this forum.

I will be looking forward to reading form you.
Best regards,
Amro


--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957644.html
Sent from the PROJ.4 mailing list archive at Nabble.com.


From robert.p.fischer-1 at nasa.gov  Mon May  7 05:37:26 2012
From: robert.p.fischer-1 at nasa.gov (Fischer, Robert P. (GISS-6110)[COLUMBIA UNIVERSITY])
Date: Mon, 7 May 2012 07:37:26 -0500
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <1336393340726-4957644.post@n6.nabble.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>, <1336393340726-4957644.post@n6.nabble.com>
Message-ID: <B236CA9710FCCF4EAB144418A4E47F9A8A6D1CD7A3@NDMSSCC06.ndc.nasa.gov>

Have you tried using the version of proj.4 that comes with Ubuntu (apt-get install proj)?

http://packages.ubuntu.com/search?keywords=proj

-- Bob
________________________________________
From: proj-bounces at lists.maptools.org [proj-bounces at lists.maptools.org] On Behalf Of rps_rt [ec_eng01 at yahoo.com]
Sent: Monday, May 07, 2012 8:22 AM
To: proj at lists.maptools.org
Subject: Re: [Proj] Using EPSG codes with cs2cs

Dear Warmerdam and all members,

I have been browsing and reading for a while to convert my coordinates with
no hope until finding this Proj. 4.

Kindly, I seek your support here ... I am using Linux Ubuntu to convert from
long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
as accurate as possible results (cm-level if possible).

I was reading this thread because I had a problem of getting a cs2cs results
for espg=31495, while I could get them for espg=31468. But the conversion
results with the later one were not accurate ~ almost 100 meters away.

e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
+init=epsg:31468

but when I change it to: echo "13.755944 51.054555" | cs2cs +init=epsg:4326
+to +init=epsg:31495,
I get the message "projection initialization failure cause: no options found
in 'init' file".

I tried to change something based on this thread, to make sure that my
PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
espg zones gave the below error:
"
pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
Using from definition: init=epsg:31467
Rel. 4.8.0, 6 March 2012
<cs2cs>:
projection initialization cause: no system list, errno: 20
"

I tried to "make uninstall" and "make install" but nothing was fixed!!

Here are more details about my project:

My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
all what is needed to get my coordinates converted accurately, but no idea
how to process them in Proj. 4 (I am totally new here):

PROJCS["DHDN / Germany zone
4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
PARAMETER["false_northing",0],UNIT["metre",1]]
TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
EPSG=31495

%Seven parameters:
% 582.00     - Translation dx in meter to WGS84
% 105.0      - Translation dy in meter to WGS84
% 414.50     - Translation dz in meter to WGS84
% 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
% 1.696e-6   - Rotation rf (phi) in radiant to WGS84
% -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
% 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)

Sorry for the long thread but did not want to miss any details, even in my
first ever thread in this forum.

I will be looking forward to reading form you.
Best regards,
Amro


--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957644.html
Sent from the PROJ.4 mailing list archive at Nabble.com.
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From jagoncal at gmail.com  Mon May  7 06:20:34 2012
From: jagoncal at gmail.com (=?ISO-8859-1?Q?Jose_Gon=E7alves?=)
Date: Mon, 7 May 2012 14:20:34 +0100
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <1336393193544-4957639.post@n6.nabble.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>
	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>
	<1336393193544-4957639.post@n6.nabble.com>
Message-ID: <CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>

Hi

Are you sure of EPSG code 31495? In my epsg file, installed with proj, I
can find only:

epsg: 31461    # DHDN / 3-degree Gauss zone 1 (deprecated)
epsg: 31462    # DHDN / 3-degree Gauss zone 2 (deprecated)
epsg: 31463    # DHDN / 3-degree Gauss zone 3 (deprecated)
epsg: 31464    # DHDN / 3-degree Gauss zone 4 (deprecated)
epsg: 31465    # DHDN / 3-degree Gauss zone 5 (deprecated)
epsg: 5520      # DHDN / 3-degree Gauss-Kruger zone 1
epsg: 31466    # DHDN / 3-degree Gauss-Kruger zone 2
epsg: 31467    # DHDN / 3-degree Gauss-Kruger zone 3
epsg: 31468    # DHDN / 3-degree Gauss-Kruger zone 4
epsg: 31469    # DHDN / 3-degree Gauss-Kruger zone 5

If a projection ID is not in the file the expected answer is the one you
got. It is not a configuration problem.
Check http://spatialreference.org to check the epsg code

Regards

Jose Gonçalves





2012/5/7 rps_rt <ec_eng01 at yahoo.com>

> Dear Warmerdam and all members,
>
> I have been browsing and reading for a while to convert my coordinates with
> no hope until finding this Proj. 4.
>
> Kindly, I seek your support here ... I am using Linux Ubuntu to convert
> from
> long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
> as accurate as possible results (cm-level if possible).
>
> I was reading this thread because I had a problem of getting a cs2cs
> results
> for espg=31495, while I could get them for espg=31468. But the conversion
> results with the later one were not accurate ~ almost 100 meters away.
>
> e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
> +init=epsg:31468
>
> but when I change it to: echo "13.755944 51.054555" | cs2cs +init=epsg:4326
> +to +init=epsg:31495,
> I get the message "projection initialization failure cause: no options
> found
> in 'init' file".
>
> I tried to change something based on this thread, to make sure that my
> PROJ_LIB path is in place, but it seems I ruined everything. Afterwards,
> all
> espg zones gave the below error:
> "
> pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
> Using from definition: init=epsg:31467
> Rel. 4.8.0, 6 March 2012
> <cs2cs>:
> projection initialization cause: no system list, errno: 20
> "
>
> I tried to "make uninstall" and "make install" but nothing was fixed!!
>
> Here are more details about my project:
>
> My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
> all what is needed to get my coordinates converted accurately, but no idea
> how to process them in Proj. 4 (I am totally new here):
>
> PROJCS["DHDN / Germany zone
> 4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
> SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
> UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
> PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
> PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
> PARAMETER["false_northing",0],UNIT["metre",1]]
> TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
> EPSG=31495
>
> %Seven parameters:
> % 582.00     - Translation dx in meter to WGS84
> % 105.0      - Translation dy in meter to WGS84
> % 414.50     - Translation dz in meter to WGS84
> % 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
> % 1.696e-6   - Rotation rf (phi) in radiant to WGS84
> % -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
> % 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)
>
> Sorry for the long thread but did not want to miss any details, even in my
> first ever thread in this forum.
>
> I will be looking forward to reading form you.
> Best regards,
> Amro
>
> --
> View this message in context:
> http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957639.html
> Sent from the PROJ.4 mailing list archive at Nabble.com.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120507/af609c3c/attachment.html>

From jagoncal at gmail.com  Mon May  7 06:59:26 2012
From: jagoncal at gmail.com (=?ISO-8859-1?Q?Jose_Gon=E7alves?=)
Date: Mon, 7 May 2012 14:59:26 +0100
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>
	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>
	<1336393193544-4957639.post@n6.nabble.com>
	<CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>
Message-ID: <CALHLaOSdjmF6sFC58Ca-dbSGogmYqaeDe31CcwYDVLzMemVAYA@mail.gmail.com>

In addition to my previous e-mail, since you have your own datum shift
parameters it is better to write the full proj string, instead of using an
epsg predefinition. Your rotation angles are in radians but cs2cs expects
arc-seconds. They become 1.04, 0.35, -3.08.
According to the map projection definition you give, the command line
should be something like:

cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000
+towgs84=582,105,414,1.040,0.350,-3.080,8.3
13.755944 51.054555
4623218.81      5659181.06 -46.16

Regards

Jose'  Gonçalves




2012/5/7 Jose Gonçalves <jagoncal at gmail.com>

> Hi
>
> Are you sure of EPSG code 31495? In my epsg file, installed with proj, I
> can find only:
>
> epsg: 31461    # DHDN / 3-degree Gauss zone 1 (deprecated)
> epsg: 31462    # DHDN / 3-degree Gauss zone 2 (deprecated)
> epsg: 31463    # DHDN / 3-degree Gauss zone 3 (deprecated)
> epsg: 31464    # DHDN / 3-degree Gauss zone 4 (deprecated)
> epsg: 31465    # DHDN / 3-degree Gauss zone 5 (deprecated)
> epsg: 5520      # DHDN / 3-degree Gauss-Kruger zone 1
> epsg: 31466    # DHDN / 3-degree Gauss-Kruger zone 2
> epsg: 31467    # DHDN / 3-degree Gauss-Kruger zone 3
> epsg: 31468    # DHDN / 3-degree Gauss-Kruger zone 4
> epsg: 31469    # DHDN / 3-degree Gauss-Kruger zone 5
>
> If a projection ID is not in the file the expected answer is the one you
> got. It is not a configuration problem.
> Check http://spatialreference.org to check the epsg code
>
> Regards
>
> Jose Gonçalves
>
>
>
>
>
>
> 2012/5/7 rps_rt <ec_eng01 at yahoo.com>
>
>> Dear Warmerdam and all members,
>>
>> I have been browsing and reading for a while to convert my coordinates
>> with
>> no hope until finding this Proj. 4.
>>
>> Kindly, I seek your support here ... I am using Linux Ubuntu to convert
>> from
>> long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
>> as accurate as possible results (cm-level if possible).
>>
>> I was reading this thread because I had a problem of getting a cs2cs
>> results
>> for espg=31495, while I could get them for espg=31468. But the conversion
>> results with the later one were not accurate ~ almost 100 meters away.
>>
>> e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
>> +init=epsg:31468
>>
>> but when I change it to: echo "13.755944 51.054555" | cs2cs
>> +init=epsg:4326
>> +to +init=epsg:31495,
>> I get the message "projection initialization failure cause: no options
>> found
>> in 'init' file".
>>
>> I tried to change something based on this thread, to make sure that my
>> PROJ_LIB path is in place, but it seems I ruined everything. Afterwards,
>> all
>> espg zones gave the below error:
>> "
>> pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
>> Using from definition: init=epsg:31467
>> Rel. 4.8.0, 6 March 2012
>> <cs2cs>:
>> projection initialization cause: no system list, errno: 20
>> "
>>
>> I tried to "make uninstall" and "make install" but nothing was fixed!!
>>
>> Here are more details about my project:
>>
>> My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
>> all what is needed to get my coordinates converted accurately, but no idea
>> how to process them in Proj. 4 (I am totally new here):
>>
>> PROJCS["DHDN / Germany zone
>> 4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
>> SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
>> UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
>> PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
>> PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
>> PARAMETER["false_northing",0],UNIT["metre",1]]
>> TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
>> EPSG=31495
>>
>> %Seven parameters:
>> % 582.00     - Translation dx in meter to WGS84
>> % 105.0      - Translation dy in meter to WGS84
>> % 414.50     - Translation dz in meter to WGS84
>> % 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
>> % 1.696e-6   - Rotation rf (phi) in radiant to WGS84
>> % -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
>> % 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)
>>
>> Sorry for the long thread but did not want to miss any details, even in my
>> first ever thread in this forum.
>>
>> I will be looking forward to reading form you.
>> Best regards,
>> Amro
>>
>> --
>> View this message in context:
>> http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957639.html
>> Sent from the PROJ.4 mailing list archive at Nabble.com.
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120507/0c2cde44/attachment.html>

From support.mn at elisanet.fi  Tue May  8 01:19:20 2012
From: support.mn at elisanet.fi (support.mn at elisanet.fi)
Date: Tue, 8 May 2012 11:19:20 +0300 (EEST)
Subject: [Proj] Using EPSG codes with cs2cs
Message-ID: <14724793.9798011336465160867.JavaMail.support.mn@elisanet.fi>

Hello,

rps_rt [ec_eng01 at yahoo.com] kirjoitti: 

> I get the message "projection initialization failure cause: no options found
> in 'init' file".
> 
> I tried to change something based on this thread, to make sure that my
> PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
> espg zones gave the below error:
> "
> pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
> Using from definition: init=epsg:31467
> Rel. 4.8.0, 6 March 2012
> <cs2cs>:
> projection initialization cause: no system list, errno: 20
> "
> 
> I tried to "make uninstall" and "make install" but nothing was fixed!!
> 

it looks like the library cannot find some files it needs. Either your
path to the files is not correct or your files are not where they should
be. Make sure the path to the files is what it should be.. either by
fixing the path string or relocating the files?

I hope this helped.

regards: Janne.




From Mikael.Rittri at carmenta.com  Tue May  8 02:55:11 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 8 May 2012 09:55:11 +0000
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>	<1336393193544-4957639.post@n6.nabble.com>
	<CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49391C3E7A@SETHNWS023.carmenta.se>

Amro wrote:

> PROJCS["DHDN / Germany zone 4",
> ...
> ... PARAMETER["central_meridian",12], ...
> ...
> EPSG=31495

That's not consistent. Zone 4 is indeed the one with central meridian 12,
but as Jose wrote, the EPSG code should be one of

> epsg: 31464    # DHDN / 3-degree Gauss zone 4 (deprecated)
> epsg: 31468    # DHDN / 3-degree Gauss-Kruger zone 4

However, strangely enough, there is a third, semi-possible code

epsg: 31494   "DHDN / Germany zone 4" (deleted)

but note that it should end with 94, not 95, for zone 4.

More generally, to handle EPSG codes 31491 to 31495, you must turn the 9 upside down!
But this is not an old typo. The codes with 9s used to be the EPSG codes for the German
zones, but they were deprecated in the olden days when EPSG had the unfortunate habit
of deleting erroneous entries from the database. (This was the practice before July 2001;
see http://www.epsg.org/guides/docs/G7-1.pdf , footnote on p. 33).

I think the reason at the time for deprecating/deleting them, was only to change the
names, replacing "Germany" by "3-degree Gauss".  Possibly also to correct the grammar
error in the datum name (your WKT has Deutsche instead of Deutsches in the datum
name).

But ESRI continued to support the deleted codes ( http://support.esri.de/files/support/FAQs.pdf ),
so you can still see them used, even though they are no longer in the EPSG database.
They are not supported by Proj.4 or listed on spatialreference.org. Hm, I wonder if supporting
them could be a violation of EPSG Terms of Use, paragraph 6.7:

> 6.7. No data that has been modified other than as permitted in these Terms of Use shall be attributed to the EPSG Dataset.

Anyway, in 2001, the EPSG codes 31461 to 31465 were deprecated, too. Code 31461, zone 1,
was deprecated because "ProjCRS zone not used", and wasn't replaced until much later.
Codes 31462 to 31465, zones 2 to 5, were deprecated because "ProjCRS related to
inappropriate Coordinate system resulting in incorrect axes and name", and replaced
with EPSG codes 31466 to 31469.
    (The deprecated entries were assigned the axes Easting (X) and Northing (Y)
in that order, so they are right-handed systems. The corrected entries have the axes
Northing (X) and Easting (Y) in that order, so they are left handed systems, and X goes north.)

Poor little zone 1 wasn't rehabilitated until July 2011, when epsg:5520 was added,
which is also as a left-handed system with Northing (X) followed by Easting (Y).

Finally, early in 2012, new right-handed variants of all these systems were reintroduced
(EPSG Change Request 2011.104), but the new ones are not yet in Proj.4 or spatialreference.org.
In the new right-handed variants, the axes are abbreviated E and N instead of X and Y.

epsg:5676   "DHDN / 3-degree Gauss-Kruger zone 2 (E-N)"
epsg:5677   "DHDN / 3-degree Gauss-Kruger zone 3 (E-N)"
epsg:5678   "DHDN / 3-degree Gauss-Kruger zone 4 (E-N)"
epsg:5679   "DHDN / 3-degree Gauss-Kruger zone 5 (E-N)"
epsg:5680   "DHDN / 3-degree Gauss-Kruger zone 1 (E-N)"

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

________________________________
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Jose Gonçalves
Sent: den 7 maj 2012 15:21
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Using EPSG codes with cs2cs

Hi

Are you sure of EPSG code 31495? In my epsg file, installed with proj, I can find only:

epsg: 31461    # DHDN / 3-degree Gauss zone 1 (deprecated)
epsg: 31462    # DHDN / 3-degree Gauss zone 2 (deprecated)
epsg: 31463    # DHDN / 3-degree Gauss zone 3 (deprecated)
epsg: 31464    # DHDN / 3-degree Gauss zone 4 (deprecated)
epsg: 31465    # DHDN / 3-degree Gauss zone 5 (deprecated)
epsg: 5520      # DHDN / 3-degree Gauss-Kruger zone 1
epsg: 31466    # DHDN / 3-degree Gauss-Kruger zone 2
epsg: 31467    # DHDN / 3-degree Gauss-Kruger zone 3
epsg: 31468    # DHDN / 3-degree Gauss-Kruger zone 4
epsg: 31469    # DHDN / 3-degree Gauss-Kruger zone 5

If a projection ID is not in the file the expected answer is the one you got. It is not a configuration problem.
Check http://spatialreference.org to check the epsg code

Regards

Jose Gonçalves




2012/5/7 rps_rt <ec_eng01 at yahoo.com<mailto:ec_eng01 at yahoo.com>>
Dear Warmerdam and all members,

I have been browsing and reading for a while to convert my coordinates with
no hope until finding this Proj. 4.

Kindly, I seek your support here ... I am using Linux Ubuntu to convert from
long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
as accurate as possible results (cm-level if possible).

I was reading this thread because I had a problem of getting a cs2cs results
for espg=31495, while I could get them for espg=31468. But the conversion
results with the later one were not accurate ~ almost 100 meters away.

e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
+init=epsg:31468

but when I change it to: echo "13.755944 51.054555" | cs2cs +init=epsg:4326
+to +init=epsg:31495,
I get the message "projection initialization failure cause: no options found
in 'init' file".

I tried to change something based on this thread, to make sure that my
PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
espg zones gave the below error:
"
pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
Using from definition: init=epsg:31467
Rel. 4.8.0, 6 March 2012
<cs2cs>:
projection initialization cause: no system list, errno: 20
"

I tried to "make uninstall" and "make install" but nothing was fixed!!

Here are more details about my project:

My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
all what is needed to get my coordinates converted accurately, but no idea
how to process them in Proj. 4 (I am totally new here):

PROJCS["DHDN / Germany zone
4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
PARAMETER["false_northing",0],UNIT["metre",1]]
TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
EPSG=31495

%Seven parameters:
% 582.00     - Translation dx in meter to WGS84
% 105.0      - Translation dy in meter to WGS84
% 414.50     - Translation dz in meter to WGS84
% 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
% 1.696e-6   - Rotation rf (phi) in radiant to WGS84
% -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
% 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)

Sorry for the long thread but did not want to miss any details, even in my
first ever thread in this forum.

I will be looking forward to reading form you.
Best regards,
Amro

--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957639.html
Sent from the PROJ.4 mailing list archive at Nabble.com.
_______________________________________________
Proj mailing list
Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
http://lists.maptools.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120508/54809386/attachment.html>

From Mikael.Rittri at carmenta.com  Tue May  8 07:34:00 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 8 May 2012 14:34:00 +0000
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <CALHLaOSdjmF6sFC58Ca-dbSGogmYqaeDe31CcwYDVLzMemVAYA@mail.gmail.com>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>	<1336393193544-4957639.post@n6.nabble.com>
	<CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>
	<CALHLaOSdjmF6sFC58Ca-dbSGogmYqaeDe31CcwYDVLzMemVAYA@mail.gmail.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49391C4015@SETHNWS023.carmenta.se>

Amro,

Jose' is right, especially if you want agreement with other data that have been transformed
with those datum shift parameters.

But you wrote:

> My need here is to get as accurate as possible results (cm-level if possible).

Then, a better alternative could be to use the grid shift file BETA2007.gsb. It is not distributed with Proj.4,
but you can find a link at http://trac.osgeo.org/proj/ under Download, Datum shift grids.

If you download it to the directory where the other grid shift files are in Proj.4 (the nad directory),
then you can do

>cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +nadgrids=BETA2007.gsb

13.755944 51.054555

4623220.44      5659181.52 0.00

This result differs by about 1.7 meters from Jose's example.

The BETA2007.gsb file is claimed to give submeter accuracy,
"eine Koordinatengenauigkeit im Submeterbereich". (But maybe it
is still possible that the 7-parameter transformation you cite is more
accurate locally around Dresden.)

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

________________________________
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Jose Gonçalves
Sent: den 7 maj 2012 15:59
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Using EPSG codes with cs2cs

In addition to my previous e-mail, since you have your own datum shift parameters it is better to write the full proj string, instead of using an epsg predefinition. Your rotation angles are in radians but cs2cs expects arc-seconds. They become 1.04, 0.35, -3.08.
According to the map projection definition you give, the command line should be something like:
cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +towgs84=582,105,414,1.040,0.350,-3.080,8.3
13.755944 51.054555
4623218.81      5659181.06 -46.16

Regards

Jose'  Gonçalves




2012/5/7 Jose Gonçalves <jagoncal at gmail.com<mailto:jagoncal at gmail.com>>
Hi

Are you sure of EPSG code 31495? In my epsg file, installed with proj, I can find only:

epsg: 31461    # DHDN / 3-degree Gauss zone 1 (deprecated)
epsg: 31462    # DHDN / 3-degree Gauss zone 2 (deprecated)
epsg: 31463    # DHDN / 3-degree Gauss zone 3 (deprecated)
epsg: 31464    # DHDN / 3-degree Gauss zone 4 (deprecated)
epsg: 31465    # DHDN / 3-degree Gauss zone 5 (deprecated)
epsg: 5520      # DHDN / 3-degree Gauss-Kruger zone 1
epsg: 31466    # DHDN / 3-degree Gauss-Kruger zone 2
epsg: 31467    # DHDN / 3-degree Gauss-Kruger zone 3
epsg: 31468    # DHDN / 3-degree Gauss-Kruger zone 4
epsg: 31469    # DHDN / 3-degree Gauss-Kruger zone 5

If a projection ID is not in the file the expected answer is the one you got. It is not a configuration problem.
Check http://spatialreference.org to check the epsg code

Regards

Jose Gonçalves





2012/5/7 rps_rt <ec_eng01 at yahoo.com<mailto:ec_eng01 at yahoo.com>>
Dear Warmerdam and all members,

I have been browsing and reading for a while to convert my coordinates with
no hope until finding this Proj. 4.

Kindly, I seek your support here ... I am using Linux Ubuntu to convert from
long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
as accurate as possible results (cm-level if possible).

I was reading this thread because I had a problem of getting a cs2cs results
for espg=31495, while I could get them for espg=31468. But the conversion
results with the later one were not accurate ~ almost 100 meters away.

e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
+init=epsg:31468

but when I change it to: echo "13.755944 51.054555" | cs2cs +init=epsg:4326
+to +init=epsg:31495,
I get the message "projection initialization failure cause: no options found
in 'init' file".

I tried to change something based on this thread, to make sure that my
PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
espg zones gave the below error:
"
pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
Using from definition: init=epsg:31467
Rel. 4.8.0, 6 March 2012
<cs2cs>:
projection initialization cause: no system list, errno: 20
"

I tried to "make uninstall" and "make install" but nothing was fixed!!

Here are more details about my project:

My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
all what is needed to get my coordinates converted accurately, but no idea
how to process them in Proj. 4 (I am totally new here):

PROJCS["DHDN / Germany zone
4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
PARAMETER["false_northing",0],UNIT["metre",1]]
TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
EPSG=31495

%Seven parameters:
% 582.00     - Translation dx in meter to WGS84
% 105.0      - Translation dy in meter to WGS84
% 414.50     - Translation dz in meter to WGS84
% 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
% 1.696e-6   - Rotation rf (phi) in radiant to WGS84
% -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
% 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)

Sorry for the long thread but did not want to miss any details, even in my
first ever thread in this forum.

I will be looking forward to reading form you.
Best regards,
Amro

--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957639.html
Sent from the PROJ.4 mailing list archive at Nabble.com.
_______________________________________________
Proj mailing list
Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120508/067c93e6/attachment.html>

From ec_eng01 at yahoo.com  Wed May  9 05:06:17 2012
From: ec_eng01 at yahoo.com (Mohammad Amro)
Date: Wed, 9 May 2012 13:06:17 +0100 (BST)
Subject: [Proj] Using EPSG codes with cs2cs (the one who asked:
	Amro_rt_rps)
In-Reply-To: <mailman.3.1336496401.14109.proj@lists.maptools.org>
References: <mailman.3.1336496401.14109.proj@lists.maptools.org>
Message-ID: <1336565177.36138.YahooMailNeo@web29208.mail.ird.yahoo.com>

Hi all,

Sorry for my late response ... my post in the forum is not yet accepted but I received the replies in the digest :), so I hope this will reach all who helped.


First of all, wow, I am just impressed with the number of sincere and supportive people in this forum.

I have gone through each and every reply and going to tell my input:

@  Bob (Fischer, Robert P. (GISS-6110)[COLUMBIA UNIVERSITY]) said:

"Have you tried using the version of proj.4 that comes with Ubuntu (apt-get install proj)?

http://packages.ubuntu.com/search?keywords=proj

-- Bob"

Yes, but the version there is 4.7.0 (i.e., older). So I sticked to the newer one in Proj. 4 web site. 


Janne (support.mn at elisanet.fi) said:

it looks like the library cannot find some files it needs. Either your
path to the files is not correct or your files are not where they should
be. Make sure the path to the files is what it should be.. either by
fixing the path string or relocating the files?

Janne

Thanks for helping on interpreting this error, the EPSG 31495 is not listed as explained in great details by Miakel Rittri: "epsg: 31494   "DHDN / Germany zone 4" (deleted)" ... 

Jose Gon?alves said: 


1- Are you sure of EPSG code 31495? In my epsg file, installed with proj, I
can find only:

epsg: 31461    # DHDN / 3-degree Gauss zone 1 (deprecated)
.
.
.
epsg: 31469    # DHDN / 3-degree Gauss-Kruger zone 5

If a projection ID is not in the file the expected answer is the one you
got. It is not a configuration problem.
Check http://spatialreference.org to check the epsg code

2- In addition to my previous e-mail, since you have your own datum shift
parameters it is better to write the full proj string, instead of using an
epsg predefinition. Your rotation angles are in radians but cs2cs expects
arc-seconds. They become 1.04, 0.35, -3.08.
According to the map projection definition you give, the command line
should be something like:

cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000
+towgs84=582,105,414,1.040,0.350,-3.080,8.3
13.755944 51.054555
4623218.81      5659181.06 -46.16

Jose Gon?alves

1- Yes, the zone is listed in my WKT.ini file, but as explained in great details by Miakel Rittri: "epsg: 31494   "DHDN / Germany zone 4" (deleted)" ... 

2- Many thanks for this command line, in fact the resulting coordinates are faraway by around 118 meters for Xs and 141 meters for Ys. So, I am considering to do an offset and be happy with a margin of error <±2 meters, especially, I am considering an area of 3x3 Kms in Dresden.


Mikael Rittri said: 


"However, strangely enough, there is a third, semi-possible code

epsg: 31494   "DHDN / Germany zone 4" (deleted)

but note that it should end with 94, not 95, for zone 4.

More generally, to handle EPSG codes 31491 to 31495, you must turn the 9 upside down!
But this is not an old typo. The codes with 9s used to be the EPSG codes for the German
zones, but they were deprecated in the olden days when EPSG had the unfortunate habit
of deleting erroneous entries from the database. (This was the practice before July 2001;
see http://www.epsg.org/guides/docs/G7-1.pdf , footnote on p. 33).

I think the reason at the time for deprecating/deleting them, was only to change the
names, replacing "Germany" by "3-degree Gauss".  Possibly also to correct the grammar
error in the datum name (your WKT has Deutsche instead of Deutsches in the datum
name).

But ESRI continued to support the deleted codes ( http://support.esri.de/files/support/FAQs.pdf ),
so you can still see them used, even though they are no longer in the EPSG database.
They are not supported by Proj.4 or listed on spatialreference.org. Hm, I wonder if supporting
them could be a violation of EPSG Terms of Use, paragraph 6.7:

> 6.7. No data that has been modified other than as permitted in these Terms of Use shall be attributed to the EPSG Dataset.

Anyway, in 2001, the EPSG codes 31461 to 31465 were deprecated, too. Code 31461, zone 1,
was deprecated because "ProjCRS zone not used", and wasn't replaced until much later.
Codes 31462 to 31465, zones 2 to 5, were deprecated because "ProjCRS related to
inappropriate Coordinate system resulting in incorrect axes and name", and replaced
with EPSG codes 31466 to 31469.
    (The deprecated entries were assigned the axes Easting (X) and Northing (Y)
in that order, so they are right-handed systems. The corrected entries have the axes
Northing (X) and Easting (Y) in that order, so they are left handed systems, and X goes north.)

Poor little zone 1 wasn't rehabilitated until July 2011, when epsg:5520 was added,
which is also as a left-handed system with Northing (X) followed by Easting (Y).

Finally, early in 2012, new right-handed variants of all these systems were reintroduced
(EPSG Change Request 2011.104), but the new ones are not yet in Proj.4 or spatialreference.org.
In the new right-handed variants, the axes are abbreviated E and N instead of X and Y.

epsg:5676   "DHDN / 3-degree Gauss-Kruger zone 2 (E-N)"
epsg:5677   "DHDN / 3-degree Gauss-Kruger zone 3 (E-N)"
epsg:5678   "DHDN / 3-degree Gauss-Kruger zone 4 (E-N)"
epsg:5679   "DHDN / 3-degree Gauss-Kruger zone 5 (E-N)"
epsg:5680   "DHDN / 3-degree Gauss-Kruger zone 1 (E-N)"



2- Then, a better alternative could be to use the grid shift file BETA2007.gsb. It is not distributed with Proj.4,
but you can find a link at http://trac.osgeo.org/proj/ under Download, Datum shift grids.

If you download it to the directory where the other grid shift files are in Proj.4 (the nad directory),
then you can do

>cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +nadgrids=BETA2007.gsb

13.755944 51.054555

4623220.44      5659181.52 0.00

This result differs by about 1.7 meters from Jose's example.

3- The BETA2007.gsb file is claimed to give submeter accuracy,
"eine Koordinatengenauigkeit im Submeterbereich". (But maybe it
is still possible that the 7-parameter transformation you cite is more
accurate locally around Dresden.)


Mikael Rittri 


1- Many thanks Mikael for this rich and helpful information, now I understand much better how these things work. 

2- Strangely, I tried this datum shifts but I got worse results (as you said shifted by 1.7 meters) than if I don't use them.
3- Using the 7-parameters as highlighted by Jose Gon?alves gave me better results (by 1.7 meters), so, may be there is no better way to do it than offsetting the different and be happy with that. May be the tool I am using (closed box) is following different methods for conversion?!    


e.g., Long:  13.755944, Lat: 51.0545555

Tools coordinates:
4623100    5659040

7-parameters (X is shifted: 118 m, and Y is shifted 140 m)::

4623218.84    5659181.12
BETA2007 Datum shifts (X is shifted: 120 m, and Y is shifted 140 m):
4623220.44    5659181.52

Anyway, I think, as I am doing this conversion on a small scale area, then a linear offset (-118m, -140m) would result in <±2 meters which is the best I can go with until as you said the 2012 new modifications come to Proj.4.

One last question to all, how do I revers the conversion from X/Y Cartesian to Long/Lat Geographical?

A huge thanks you,
Mohammad Amro
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120509/46808dc6/attachment.html>

From Mikael.Rittri at carmenta.com  Wed May  9 05:32:05 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 9 May 2012 12:32:05 +0000
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49391C4015@SETHNWS023.carmenta.se>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>	<1336393193544-4957639.post@n6.nabble.com>
	<CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>
	<CALHLaOSdjmF6sFC58Ca-dbSGogmYqaeDe31CcwYDVLzMemVAYA@mail.gmail.com>
	<E4AB3DD44D22854B819908379DE4AD49391C4015@SETHNWS023.carmenta.se>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49391C4442@SETHNWS023.carmenta.se>

PS.

Amro,
speaking about grid shift files: Dresden is in Saxony, right? I had a vague recollection
of other German grid shift files, and I have now managed to find one for you: the grid
shift file for Saxony, SAETA2010.gsb, which you can get from here

     http://www.landesvermessung.sachsen.de/inhalt/etrs/etrs.html

Follow the link to "Gitterdateien für den NTv2-Transformationsansatz".
The accuracy is claimed to be better than 4 cm.

However, a problem could be that this grid shift file transforms from the datum RD/83, not
from DHDN.  EPSG writes about RD/83 (the long/lat coordinate system, EPSG:4745):

   "Consistent with DHDN (CRS code 4314) at the 1-metre level.
    For low accuracy applications RD/83 can be considered the same as DHDN."

And about the underlying datum, Rauenberg Datum/83, (EPSG:6745), EPSG writes:

  "RD/83 is the realisation of DHDN in Saxony. It is the resultant of applying
   a transformation derived at 106 points throughout former East Germany to
   Pulkovo 1942/83 points in Saxony."

I must admit that I don't see how these remarks fit together. If RD/83 is the realisation of
DHDN in Saxony, I would expect that they coincide exactly, rather than at the 1 meter level.
But maybe someone else can explain this, or maybe you can find an answer on
the Saxony web site. (I am not very good at reading German documentation.)

Finally, I noticed that Saxony web site provides a free application, TRANS_SN (light),
which may be exactly what you need. It is probably easier to use than Proj.4.

Good luck!

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

________________________________
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikael Rittri
Sent: den 8 maj 2012 16:34
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Using EPSG codes with cs2cs

Amro,

Jose' is right, especially if you want agreement with other data that have been transformed
with those datum shift parameters.

But you wrote:

> My need here is to get as accurate as possible results (cm-level if possible).

Then, a better alternative could be to use the grid shift file BETA2007.gsb. It is not distributed with Proj.4,
but you can find a link at http://trac.osgeo.org/proj/ under Download, Datum shift grids.

If you download it to the directory where the other grid shift files are in Proj.4 (the nad directory),
then you can do

>cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +nadgrids=BETA2007.gsb

13.755944 51.054555

4623220.44      5659181.52 0.00

This result differs by about 1.7 meters from Jose's example.

The BETA2007.gsb file is claimed to give submeter accuracy,
"eine Koordinatengenauigkeit im Submeterbereich". (But maybe it
is still possible that the 7-parameter transformation you cite is more
accurate locally around Dresden.)

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

________________________________
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Jose Gonçalves
Sent: den 7 maj 2012 15:59
To: PROJ.4 and general Projections Discussions
Subject: Re: [Proj] Using EPSG codes with cs2cs

In addition to my previous e-mail, since you have your own datum shift parameters it is better to write the full proj string, instead of using an epsg predefinition. Your rotation angles are in radians but cs2cs expects arc-seconds. They become 1.04, 0.35, -3.08.
According to the map projection definition you give, the command line should be something like:
cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +towgs84=582,105,414,1.040,0.350,-3.080,8.3
13.755944 51.054555
4623218.81      5659181.06 -46.16

Regards

Jose'  Gonçalves




2012/5/7 Jose Gonçalves <jagoncal at gmail.com<mailto:jagoncal at gmail.com>>
Hi

Are you sure of EPSG code 31495? In my epsg file, installed with proj, I can find only:

epsg: 31461    # DHDN / 3-degree Gauss zone 1 (deprecated)
epsg: 31462    # DHDN / 3-degree Gauss zone 2 (deprecated)
epsg: 31463    # DHDN / 3-degree Gauss zone 3 (deprecated)
epsg: 31464    # DHDN / 3-degree Gauss zone 4 (deprecated)
epsg: 31465    # DHDN / 3-degree Gauss zone 5 (deprecated)
epsg: 5520      # DHDN / 3-degree Gauss-Kruger zone 1
epsg: 31466    # DHDN / 3-degree Gauss-Kruger zone 2
epsg: 31467    # DHDN / 3-degree Gauss-Kruger zone 3
epsg: 31468    # DHDN / 3-degree Gauss-Kruger zone 4
epsg: 31469    # DHDN / 3-degree Gauss-Kruger zone 5

If a projection ID is not in the file the expected answer is the one you got. It is not a configuration problem.
Check http://spatialreference.org to check the epsg code

Regards

Jose Gonçalves




2012/5/7 rps_rt <ec_eng01 at yahoo.com<mailto:ec_eng01 at yahoo.com>>
Dear Warmerdam and all members,

I have been browsing and reading for a while to convert my coordinates with
no hope until finding this Proj. 4.

Kindly, I seek your support here ... I am using Linux Ubuntu to convert from
long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
as accurate as possible results (cm-level if possible).

I was reading this thread because I had a problem of getting a cs2cs results
for espg=31495, while I could get them for espg=31468. But the conversion
results with the later one were not accurate ~ almost 100 meters away.

e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
+init=epsg:31468

but when I change it to: echo "13.755944 51.054555" | cs2cs +init=epsg:4326
+to +init=epsg:31495,
I get the message "projection initialization failure cause: no options found
in 'init' file".

I tried to change something based on this thread, to make sure that my
PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
espg zones gave the below error:
"
pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
Using from definition: init=epsg:31467
Rel. 4.8.0, 6 March 2012
<cs2cs>:
projection initialization cause: no system list, errno: 20
"

I tried to "make uninstall" and "make install" but nothing was fixed!!

Here are more details about my project:

My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
all what is needed to get my coordinates converted accurately, but no idea
how to process them in Proj. 4 (I am totally new here):

PROJCS["DHDN / Germany zone
4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
SPHEROID["Bessel 1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
PARAMETER["false_northing",0],UNIT["metre",1]]
TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
EPSG=31495

%Seven parameters:
% 582.00     - Translation dx in meter to WGS84
% 105.0      - Translation dy in meter to WGS84
% 414.50     - Translation dz in meter to WGS84
% 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
% 1.696e-6   - Rotation rf (phi) in radiant to WGS84
% -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
% 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)

Sorry for the long thread but did not want to miss any details, even in my
first ever thread in this forum.

I will be looking forward to reading form you.
Best regards,
Amro

--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957639.html
Sent from the PROJ.4 mailing list archive at Nabble.com.
_______________________________________________
Proj mailing list
Proj at lists.maptools.org<mailto:Proj at lists.maptools.org>
http://lists.maptools.org/mailman/listinfo/proj


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120509/91c600eb/attachment.html>

From ec_eng01 at yahoo.com  Wed May  9 05:55:37 2012
From: ec_eng01 at yahoo.com (Mohammad Amro)
Date: Wed, 9 May 2012 13:55:37 +0100 (BST)
Subject: [Proj] Using EPSG codes with cs2cs
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49391C4442@SETHNWS023.carmenta.se>
References: <1286315945845-5605047.post@n2.nabble.com>
	<4CABA676.5010600@pobox.com>
	<1286319943944-5605212.post@n2.nabble.com>
	<4CABB295.4030408@pobox.com>
	<1286321838437-5605271.post@n2.nabble.com>
	<4CABBD92.4060302@pobox.com>
	<1336393193544-4957639.post@n6.nabble.com>
	<CALHLaOSd7nLuhnkNOp6JZcq-PrMs03+F2j+uz=v0-=6n-Dke6g@mail.gmail.com>
	<CALHLaOSdjmF6sFC58Ca-dbSGogmYqaeDe31CcwYDVLzMemVAYA@mail.gmail.com>
	<E4AB3DD44D22854B819908379DE4AD49391C4015@SETHNWS023.carmenta.se>
	<E4AB3DD44D22854B819908379DE4AD49391C4442@SETHNWS023.carmenta.se>
Message-ID: <1336568137.27177.YahooMailNeo@web29209.mail.ird.yahoo.com>

Hi Mikael,

Using the German wide datum shifts gave  for 13.75594444    51.0545555
cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +nadgrids=BETA2007.gsb

4623220.46    5659181.58
and Saxony wide datum shifts gave
cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +nadgrids=SAETA2010.gsb
4623220.45    5659181.59


1 cm difference, but still not what the tool says!!! (4623100    5659040). I start suspecting it :(

As you advised, last option, I will try the free Saxony tool TRANS_SN (light), and again if it does not match the tool outputs, I will do an offset and be happy with the almost 2m difference.

Many thanks,
Mohammad Amro



________________________________
 Von: Mikael Rittri <Mikael.Rittri at carmenta.com>
An: PROJ.4 and general Projections Discussions <proj at lists.maptools.org> 
CC: Mohammad Amro <ec_eng01 at yahoo.com> 
Gesendet: 14:32 Mittwoch, 9.Mai 2012
Betreff: RE: [Proj] Using EPSG codes with cs2cs
 

 
PS.
 
Amro,
speaking about grid shift files: Dresden 
is in Saxony , right? I had a vague
recollection
of other German grid shift files, and I have now managed to find one for you: the
grid 
shift file for Saxony ,
SAETA2010.gsb, which you can get from here
 
     http://www.landesvermessung.sachsen.de/inhalt/etrs/etrs.html
 
Follow the link to “Gitterdateien für den
NTv2-Transformationsansatz”.
The accuracy is claimed to be better than 4 cm. 
 
However, a problem could be that this grid shift file
transforms from the datum RD/83, not 
from DHDN.  EPSG writes about RD/83 (the long/lat
coordinate system, EPSG:4745): 
   
   “Consistent with DHDN (CRS code 4314) at the
1-metre level. 
    For low accuracy applications RD/83 can be
considered the same as DHDN.”
 
And about the underlying datum, Rauenberg Datum/83, (EPSG:6745),
EPSG writes:
 
  “RD/83 is the realisation of DHDN in Saxony . It is the resultant of applying 
   a transformation derived at 106 points throughout
former East Germany 
to 
   Pulkovo 1942/83 points in Saxony .”
 
I must admit that I don’t see how these remarks
fit together. If RD/83 is the realisation of
DHDN in Saxony , I would expect that they
coincide exactly, rather than at the 1 meter level.
But maybe someone else can explain this, or maybe you
can find an answer on 
the Saxony web site.
(I am not very good at reading German documentation.)
 
Finally, I noticed that Saxony 
web site provides a free application, TRANS_SN (light), 
which may be exactly what you need. It is probably
easier to use than Proj.4. 
 
Good luck!
 
Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com
 

________________________________
 
From:proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mikael Rittri
Sent: den 8 maj 2012 16:34
To: PROJ.4 and general Projections
Discussions
Subject: Re: [Proj] Using EPSG
codes with cs2cs
 
Amro,
 
Jose' is right, especially if you want agreement with
other data that have been transformed
with those datum shift parameters. 
 
But you wrote:
 
> My need here is to get as accurate as possible
results (cm-level if possible).
 
Then, a better alternative could be to use the grid
shift file BETA2007.gsb. It is not distributed with Proj.4,
but you can find a link at http://trac.osgeo.org/proj/ under Download, Datum shift grids.
 
If you download it to the directory where the other
grid shift files are in Proj.4 (the naddirectory),
then you can do 
 
>cs2cs +init=epsg:4326
+to +ellps=bessel +proj=tmerc +lon_0=12 +x_0=4500000 +nadgrids=BETA2007.gsb
 
13.755944 51.054555
 
4623220.44     
5659181.52 0.00
 
This result differs by about 1.7 meters from
Jose’s example. 
 
The BETA2007.gsb file is claimed to give submeter
accuracy, 
“eine Koordinatengenauigkeit im
Submeterbereich”. (But maybe it 
is still possible that the 7-parameter transformation
you cite is more 
accurate locally around Dresden .)
 
Best regards,
 
Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com
 

________________________________
 
From:proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Jose Gonçalves
Sent: den 7 maj 2012 15:59
To: PROJ.4 and general Projections
Discussions
Subject: Re: [Proj] Using EPSG
codes with cs2cs
 
In addition to my
previous e-mail, since you have your own datum shift parameters it is better to
write the full proj string, instead of using an epsg predefinition. Your
rotation angles are in radians but cs2cs expects arc-seconds. They become 1.04,
0.35, -3.08.
According to the map projection definition you give, the command line should be
something like:
cs2cs +init=epsg:4326 +to +ellps=bessel +proj=tmerc +lon_0=12
+x_0=4500000 +towgs84=582,105,414,1.040,0.350,-3.080,8.3
13.755944 51.054555 
4623218.81      5659181.06 -46.16

Regards

Jose'  Gonçalves




2012/5/7 Jose Gonçalves <jagoncal at gmail.com>
Hi

Are you sure of EPSG code 31495? In my epsg file, installed with proj, I can
find only:

epsg: 31461    # DHDN / 3-degree Gauss zone 1 (deprecated)
epsg: 31462    # DHDN / 3-degree Gauss zone 2 (deprecated)
epsg: 31463    # DHDN / 3-degree Gauss zone 3 (deprecated)
epsg: 31464    # DHDN / 3-degree Gauss zone 4 (deprecated)
epsg: 31465    # DHDN / 3-degree Gauss zone 5 (deprecated)
epsg: 5520      # DHDN / 3-degree Gauss-Kruger zone 1
epsg: 31466    # DHDN / 3-degree Gauss-Kruger zone 2
epsg: 31467    # DHDN / 3-degree Gauss-Kruger zone 3
epsg: 31468    # DHDN / 3-degree Gauss-Kruger zone 4
epsg: 31469    # DHDN / 3-degree Gauss-Kruger zone 5

If a projection ID is not in the file the expected answer is the one you got.
It is not a configuration problem.
Check http://spatialreference.org to check the epsg code

Regards

Jose Gonçalves





2012/5/7 rps_rt <ec_eng01 at yahoo.com>
Dear Warmerdam and all members,

I have been browsing and reading for a while to convert my coordinates with
no hope until finding this Proj. 4.

Kindly, I seek your support here ... I am using Linux Ubuntu to convert from
long/lat (WGS84) to Cartesian (x/y) and vice versa. My need here is to get
as accurate as possible results (cm-level if possible).

I was reading this thread because I had a problem of getting a cs2cs results
for espg=31495, while I could get them for espg=31468. But the conversion
results with the later one were not accurate ~ almost 100 meters away.

e.g.,: echo "13.755944 51.054555" | cs2cs +init=epsg:4326 +to
+init=epsg:31468

but when I change it to: echo "13.755944 51.054555" | cs2cs
+init=epsg:4326
+to +init=epsg:31495,
I get the message "projection initialization failure cause: no options
found
in 'init' file".

I tried to change something based on this thread, to make sure that my
PROJ_LIB path is in place, but it seems I ruined everything. Afterwards, all
espg zones gave the below error:
"
pj_open_lib(epsg): call fopen(/usr/local/bin/cs2cs/epsg) - failed
Using from definition: init=epsg:31467
Rel. 4.8.0, 6 March 2012
<cs2cs>:
projection initialization cause: no system list, errno: 20
"

I tried to "make uninstall" and "make install" but nothing
was fixed!!

Here are more details about my project:

My locations are in Dresden city, Germany, (DHDN4), and I have (I assume)
all what is needed to get my coordinates converted accurately, but no idea
how to process them in Proj. 4 (I am totally new here):

PROJCS["DHDN / Germany zone
4",GEOGCS["DHDN",DATUM["Deutsche_Hauptdreiecksnetz",
SPHEROID["Bessel
1841",6377397.155,299.1528128]],PRIMEM["Greenwich",0],
UNIT["degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],
PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",12],
PARAMETER["scale_factor",1],PARAMETER["false_easting",4500000],
PARAMETER["false_northing",0],UNIT["metre",1]]
TOWGS84=582.0,105.0,414.0,5.042e-6,1.696e-6,-1.4932e-5,8.3
EPSG=31495

%Seven parameters:
% 582.00     - Translation dx in meter to WGS84
% 105.0      - Translation dy in meter to WGS84
% 414.50     - Translation dz in meter to WGS84
% 5.042e-6   - Rotation ro (omega) in Radiant to WGS84
% 1.696e-6   - Rotation rf (phi) in radiant to WGS84
% -1.4932e-5 - Rotation rk (Kappa) in Radiant to WGS84
% 8.3e-06    - Mapscale factor in ppm (parts per million) to WGS84(m)

Sorry for the long thread but did not want to miss any details, even in my
first ever thread in this forum.

I will be looking forward to reading form you.
Best regards,
Amro

--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Using-EPSG-codes-with-cs2cs-tp3841592p4957639.html
Sent from the PROJ.4 mailing list archive at Nabble.com.
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120509/70984d38/attachment.html>

From l.pennig at klett.de  Wed May  9 07:18:44 2012
From: l.pennig at klett.de (Lars Pennig)
Date: Wed, 09 May 2012 16:18:44 +0200
Subject: [Proj] Winkel Tripel Problems
Message-ID: <4FAA98E4020000B20002175E@mail3.klett-systeme.de>

Hi all,

since I'm working with QGIS (which relies on proj) I wonder why Winkel
Tripel is not supported. I understand that Winkel Tripel is integrated
in proj (+proj=wintri) but that seems not to work. For Example, defining
a user projection with +proj=wintri within qgis and then trying to
project (on the fly) a dataset of epsg:4326 (plate carree) to this
projection fails. Instead qgis shows the existing dataset in epsg:4326.

Anyone out there with a solution?

Thanks in advance, Lars


From Mikael.Rittri at carmenta.com  Thu May 10 00:02:15 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Thu, 10 May 2012 07:02:15 +0000
Subject: [Proj] Winkel Tripel Problems
In-Reply-To: <4FAA98E4020000B20002175E@mail3.klett-systeme.de>
References: <4FAA98E4020000B20002175E@mail3.klett-systeme.de>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49391C47A2@SETHNWS023.carmenta.se>

Lars wrote:

> ... I wonder why Winkel Tripel is not supported.

Probably because Proj.4 supports only the forward direction
(from Long/Lat to projected coordinates).

>proj +proj=wintri -I
Rel. 4.8.0, 6 March 2012
<proj>:
inverse projection not available
program abnormally terminated

You might think that you only wanted the forward direction, but
for many purposes both directions are needed. I don't know about
QGIS, but maybe they decided to ignore Winkel Tripel completely. 

Some years ago, Oscar van Vlijmen gave a link to a paper that
that described how to invert Winkel Tripel.

   http://lists.maptools.org/pipermail/proj/2007-May/002964.html

Another version of the paper was published in the CaGIS journal,
see 

   http://lists.maptools.org/pipermail/proj/2008-September/003799.html

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

-----Original Message-----
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Lars Pennig
Sent: den 9 maj 2012 16:19
To: proj at lists.maptools.org
Subject: [Proj] Winkel Tripel Problems

Hi all,

since I'm working with QGIS (which relies on proj) I wonder why Winkel
Tripel is not supported. I understand that Winkel Tripel is integrated
in proj (+proj=wintri) but that seems not to work. For Example, defining
a user projection with +proj=wintri within qgis and then trying to
project (on the fly) a dataset of epsg:4326 (plate carree) to this
projection fails. Instead qgis shows the existing dataset in epsg:4326.

Anyone out there with a solution?

Thanks in advance, Lars
_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj


From hamish_b at yahoo.com  Thu May 10 00:29:39 2012
From: hamish_b at yahoo.com (Hamish)
Date: Thu, 10 May 2012 00:29:39 -0700 (PDT)
Subject: [Proj] Winkel Tripel Problems
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49391C47A2@SETHNWS023.carmenta.se>
Message-ID: <1336634979.58052.YahooMailClassic@web110011.mail.gq1.yahoo.com>

Mikael wrote:
> > ... I wonder why Winkel Tripel is not supported.

> Lars wrote:
> Probably because Proj.4 supports only the forward direction
> (from Long/Lat to projected coordinates).

tip o'the day:
 for rasters which won't reproject due to one-way projections, convert
each cell center to a x,y,z point, then use cs2cs (or equiv) to do the
forward projection. Regrid the reprojected swarm of points into a raster
at the other end.

In GRASS this is r.out.xyz -> m.proj (or cs2cs) -> r.in.xyz, but most
other general purpose GIS will have the same capability.

e.g.
 http://adhoc.osgeo.osuosl.org/grass/alternate_projections/earthquakes_wintri.png



Hamish


From markus.eberhard at InUnum.li  Thu May 10 00:43:16 2012
From: markus.eberhard at InUnum.li (Markus Eberhard)
Date: Thu, 10 May 2012 09:43:16 +0200
Subject: [Proj] Proj4-API - pj_init_plus returns a NULL pointer for my ESRI
 projection string
In-Reply-To: <4FAA8D8B.6070006@InUnum.li>
References: <4FAA8D8B.6070006@InUnum.li>
Message-ID: <4FAB7194.9010609@InUnum.li>


Hi *,
I'm using the Proj4-API. Currently I've problems with the following C++
API call:
     projPJ projPixel = pj_init_plus( "+init=esri:21781" );
The called function returns a NULL pointer.

Strange, the following similar function call works for me
    projPJ projPixel = pj_init_plus( "+init=world:CH1903" );

Thanks for your help.

Markus



From l.pennig at klett.de  Thu May 10 01:16:51 2012
From: l.pennig at klett.de (Lars Pennig)
Date: Thu, 10 May 2012 10:16:51 +0200
Subject: [Proj] Antw: RE:  Winkel Tripel Problems
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49391C47A2@SETHNWS023.carmenta.se>
References: <4FAA98E4020000B20002175E@mail3.klett-systeme.de>
	<E4AB3DD44D22854B819908379DE4AD49391C47A2@SETHNWS023.carmenta.se>
Message-ID: <4FAB9593020000B20002178E@mail3.klett-systeme.de>

Great advice!

But what shall I do if I have users who are not familiar with GRASS
etc. and only want to do a forward projection into Winkel Tripel. Is
there any chance that foward and inverse projections are one day
included in proj? Or maybe should I hire a programmer to do so?

L.

>>> Mikael Rittri <Mikael.Rittri at carmenta.com> schrieb am Donnerstag,
10. Mai 2012
um 09:02 in Nachricht
<E4AB3DD44D22854B819908379DE4AD49391C47A2 at SETHNWS023.carmenta.se>:
> Lars wrote:
> 
>> ... I wonder why Winkel Tripel is not supported.
> 
> Probably because Proj.4 supports only the forward direction
> (from Long/Lat to projected coordinates).
> 
>>proj +proj=wintri -I
> Rel. 4.8.0, 6 March 2012
> <proj>:
> inverse projection not available
> program abnormally terminated
> 
> You might think that you only wanted the forward direction, but
> for many purposes both directions are needed. I don't know about
> QGIS, but maybe they decided to ignore Winkel Tripel completely. 
> 
> Some years ago, Oscar van Vlijmen gave a link to a paper that
> that described how to invert Winkel Tripel.
> 
>    http://lists.maptools.org/pipermail/proj/2007-May/002964.html 
> 
> Another version of the paper was published in the CaGIS journal,
> see 
> 
>   
http://lists.maptools.org/pipermail/proj/2008-September/003799.html 
> 
> Best regards,
> 
> Mikael Rittri
> Carmenta
> Sweden
> http://www.carmenta.com 
> 
> -----Original Message-----
> From: proj-bounces at lists.maptools.org
[mailto:proj-bounces at lists.maptools.org] 
> On Behalf Of Lars Pennig
> Sent: den 9 maj 2012 16:19
> To: proj at lists.maptools.org 
> Subject: [Proj] Winkel Tripel Problems
> 
> Hi all,
> 
> since I'm working with QGIS (which relies on proj) I wonder why
Winkel
> Tripel is not supported. I understand that Winkel Tripel is
integrated
> in proj (+proj=wintri) but that seems not to work. For Example,
defining
> a user projection with +proj=wintri within qgis and then trying to
> project (on the fly) a dataset of epsg:4326 (plate carree) to this
> projection fails. Instead qgis shows the existing dataset in
epsg:4326.
> 
> Anyone out there with a solution?
> 
> Thanks in advance, Lars
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org 
> http://lists.maptools.org/mailman/listinfo/proj


From warmerdam at pobox.com  Thu May 10 07:56:55 2012
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 10 May 2012 07:56:55 -0700
Subject: [Proj] Proj4-API - pj_init_plus returns a NULL pointer for my
 ESRI projection string
In-Reply-To: <4FAB7194.9010609@InUnum.li>
References: <4FAA8D8B.6070006@InUnum.li> <4FAB7194.9010609@InUnum.li>
Message-ID: <4FABD737.5010500@pobox.com>

On 12-05-10 12:43 AM, Markus Eberhard wrote:
>
> Hi *,
> I'm using the Proj4-API. Currently I've problems with the following C++
> API call:
>       projPJ projPixel = pj_init_plus( "+init=esri:21781" );
> The called function returns a NULL pointer.
>
> Strange, the following similar function call works for me
>      projPJ projPixel = pj_init_plus( "+init=world:CH1903" );
>
> Thanks for your help.

Markus,

Did you confirm that 21781 is defined in the esri file?  I imagine it
is as I see:
# CH1903 / LV03
<21781> +proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90 
+k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs  no_defs <>

in mine.

The next thing I'd do is set the PROJ_DEBUG environment variable to 4 and
try again.  There should be some reporting to stderr about what file is
opened.

eg.

warmerda at gdal65[10]% cs2cs +init=esri:21781
pj_open_lib(esri): call fopen(/home/warmerda/bld/share/proj/esri) - succeeded

pj_open_lib(proj_def.dat): call 
fopen(/home/warmerda/bld/share/proj/proj_def.dat) - succeeded

If that doesn't give a clue you may need to debug into things to figure it
out.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://home.gdal.org/warmerda
and watch the world go round - Rush    | Geospatial Software Developer



From robert.p.fischer-1 at nasa.gov  Thu May 10 08:51:34 2012
From: robert.p.fischer-1 at nasa.gov (Fischer, Robert P. (GISS-6110)[COLUMBIA UNIVERSITY])
Date: Thu, 10 May 2012 10:51:34 -0500
Subject: [Proj] Memory-Safe C++ API
In-Reply-To: <4FABD737.5010500@pobox.com>
References: <4FAA8D8B.6070006@InUnum.li>
	<4FAB7194.9010609@InUnum.li>,<4FABD737.5010500@pobox.com>
Message-ID: <B236CA9710FCCF4EAB144418A4E47F9A8A6D1CD7A8@NDMSSCC06.ndc.nasa.gov>

Is there interest in a memory-safe C++ API for proj.4?  I have a basic one here that wraps the C API, although I haven't implemented contexts yet.

--- Bob


/** C++ API for proj.4 Projection Library.
By Robert Fischer: robert.fischer at nasa.gov
April 5, 2012

This file is in the public domain.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 THE AUTHORS OR AUTHOR'S EMPLOYERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 DEALINGS IN THE SOFTWARE.
*/

#ifndef PROJPP_HPP
#define PROJPP_HPP

#include <proj_api.h>


#if 0
class ProjContext;

class ProjStatic {
public:
    ProjContext const defaultContext;

    ProjStatic();
};
extern ProjStatic projStatic;


class ProjContext {
    projCtx ctx;

public :


};

#endif

namespace proj {

class Proj {
    projPJ pj;

    explicit Proj(projPJ _pj) : pj(_pj) {}

public:
    Proj() : pj(0) {}

    friend int transform(Proj const &src, Proj const &dest,
        long point_count, int point_offset,
        double *x, double *y, double *z);


    // ------------------ Five Standard constructors/methods
    // See: http://www2.research.att.com/~bs/C++0xFAQ.html

    explicit Proj(std::string const &definition)
    {
        pj = pj_init_plus(definition.c_str());
        // pj_def = 0;
    }

    explicit Proj(char const *definition)
    {
        pj = pj_init_plus(definition);
    }

    ~Proj()
    {
        pj_free(pj);
        // if (pj_def) pj_dalloc(pj_def);
    }

    /** Transfer ownership (move) */
    Proj(Proj&& h) : pj{h.pj} //, pj_def{h.pj_def}
    {
        h.pj = 0;
        // h.pj_def = 0;
    }

    /** Transfer value */
    Proj& operator=(Proj&& h)
    {
        if (pj) pj_free(pj);
        pj = h.pj;
        h.pj = 0;
    }

    /** Copy constructor */
    Proj(const Proj &h)
    {
        char *pj_def = pj_get_def(h.pj, 0);
        pj = pj_init_plus(pj_def);
        pj_dalloc(pj_def);
    }

    // no copy with operator=()
    Proj& operator=(const Proj&) = delete;

    // --------------------------- Other Stuff


    /** Returns TRUE if the passed coordinate system is geographic
    (proj=latlong). */
    int is_latlong() const
        { return pj_is_latlong(pj); }


    /** Returns TRUE if the coordinate system is geocentric
    (proj=geocent). */
    int is_geocent() const
        { return pj_is_geocent(pj); }

    /** Returns the PROJ.4 initialization string suitable for use with
    pj_init_plus() that would produce this coordinate system, but with the
    definition expanded as much as possible (for instance +init= and
    +datum= definitions).
    @param options Unused at this point
    */
    std::string get_def(int options=0) const
    {
        char *pj_def = 0;
        pj_def = pj_get_def(pj, options);

        std::string ret = std::string(pj_def);
        pj_dalloc(pj_def);
        return ret;
    }


    /** Returns a new coordinate system definition which is the geographic
    coordinate (lat/long) system underlying pj_in. */
    Proj latlong_from_proj() const
    {
        return Proj(pj_latlong_from_proj(pj));
    }

};


inline int transform(Proj const &src, Proj const &dest,
    long point_count, int point_offset, double *x, double *y, double *z=0)
{
    return pj_transform(src.pj, dest.pj,
        point_count, point_offset, x, y, z);
}

inline int transform(Proj const &src, Proj const &dest,
    double x0, double y0, double &x1, double &y1)
{
    x1 = x0;
    y1 = y0;
    int ret = transform(src, dest, 1, 1, &x1, &y1);
    return ret;
}


}

#endif


From markus.eberhard at InUnum.li  Thu May 10 12:10:32 2012
From: markus.eberhard at InUnum.li (Markus Eberhard)
Date: Thu, 10 May 2012 21:10:32 +0200
Subject: [Proj] Proj4-API - pj_init_plus returns a NULL pointer for my
 ESRI projection string
In-Reply-To: <4FABD737.5010500@pobox.com>
References: <4FAA8D8B.6070006@InUnum.li> <4FAB7194.9010609@InUnum.li>
	<4FABD737.5010500@pobox.com>
Message-ID: <4FAC12A8.9000101@InUnum.li>

Am 10.05.2012 16:56, schrieb Frank Warmerdam:
> On 12-05-10 12:43 AM, Markus Eberhard wrote:
>> Hi *,
>> I'm using the Proj4-API. Currently I've problems with the following C++
>> API call:
>>        projPJ projPixel = pj_init_plus( "+init=esri:21781" );
>> The called function returns a NULL pointer.
>>
>> Strange, the following similar function call works for me
>>       projPJ projPixel = pj_init_plus( "+init=world:CH1903" );
>>
>> Thanks for your help.
> Markus,
>
> Did you confirm that 21781 is defined in the esri file?  I imagine it
> is as I see:
> # CH1903 / LV03
> <21781>  +proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90
> +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs  no_defs<>
>
> in mine.
>
> The next thing I'd do is set the PROJ_DEBUG environment variable to 4 and
> try again.  There should be some reporting to stderr about what file is
> opened.
>
> eg.
>
> warmerda at gdal65[10]% cs2cs +init=esri:21781
> pj_open_lib(esri): call fopen(/home/warmerda/bld/share/proj/esri) - succeeded
>
> pj_open_lib(proj_def.dat): call
> fopen(/home/warmerda/bld/share/proj/proj_def.dat) - succeeded
>
> If that doesn't give a clue you may need to debug into things to figure it
> out.
>
> Best regards,

Hi Frank,
thanks for your hints. The ESRI projection configuration file is opened 
successfully on my system:

pj_open_lib(esri): call fopen(/usr/share/proj/esri) - succeeded
pj_open_lib(proj_def.dat): call fopen(/usr/share/proj/proj_def.dat) - succeeded

Additionaly I've tried to set the projection config string directly 
using the following function call:

projPJ projPixel = pj_init_plus( "+proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90 +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs" );

-> same result: NULL pointer

I'll try to debug the proj library tomorrow - may be you have an 
additional tip for me?

Thanks
Markus





From markus.eberhard at InUnum.li  Fri May 11 00:52:39 2012
From: markus.eberhard at InUnum.li (Markus Eberhard)
Date: Fri, 11 May 2012 09:52:39 +0200
Subject: [Proj] Proj4-API - pj_init_plus returns a NULL pointer for my
 ESRI projection string
In-Reply-To: <4FAC12A8.9000101@InUnum.li>
References: <4FAA8D8B.6070006@InUnum.li> <4FAB7194.9010609@InUnum.li>
	<4FABD737.5010500@pobox.com> <4FAC12A8.9000101@InUnum.li>
Message-ID: <4FACC547.7020706@InUnum.li>

Am 10.05.2012 21:10, schrieb Markus Eberhard:
> Am 10.05.2012 16:56, schrieb Frank Warmerdam:
>> On 12-05-10 12:43 AM, Markus Eberhard wrote:
>>> Hi *,
>>> I'm using the Proj4-API. Currently I've problems with the following C++
>>> API call:
>>>         projPJ projPixel = pj_init_plus( "+init=esri:21781" );
>>> The called function returns a NULL pointer.
>>>
>>> Strange, the following similar function call works for me
>>>        projPJ projPixel = pj_init_plus( "+init=world:CH1903" );
>>>
>>> Thanks for your help.
>> Markus,
>>
>> Did you confirm that 21781 is defined in the esri file?  I imagine it
>> is as I see:
>> # CH1903 / LV03
>> <21781>   +proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90
>> +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs  no_defs<>
>>
>> in mine.
>>
>> The next thing I'd do is set the PROJ_DEBUG environment variable to 4 and
>> try again.  There should be some reporting to stderr about what file is
>> opened.
>>
>> eg.
>>
>> warmerda at gdal65[10]% cs2cs +init=esri:21781
>> pj_open_lib(esri): call fopen(/home/warmerda/bld/share/proj/esri) - succeeded
>>
>> pj_open_lib(proj_def.dat): call
>> fopen(/home/warmerda/bld/share/proj/proj_def.dat) - succeeded
>>
>> If that doesn't give a clue you may need to debug into things to figure it
>> out.
>>
>> Best regards,
> Hi Frank,
> thanks for your hints. The ESRI projection configuration file is opened
> successfully on my system:
>
> pj_open_lib(esri): call fopen(/usr/share/proj/esri) - succeeded
> pj_open_lib(proj_def.dat): call fopen(/usr/share/proj/proj_def.dat) - succeeded
>
> Additionaly I've tried to set the projection config string directly
> using the following function call:
>
> projPJ projPixel = pj_init_plus( "+proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90 +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs" );
>
> ->  same result: NULL pointer
>
> I'll try to debug the proj library tomorrow - may be you have an
> additional tip for me?
>
> Thanks
> Markus
>
>
>
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>

The projection string defined in the ESRI projection configuration file 
seems to make problems - with the string defined in the ESRI projection 
config file

+proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90 +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs

I get allways a NULL pointer (-> function pj_init_plus).

http://cs2cs.mygeodata.eu uses the following string for the same 
projection (CH1903 / LV03 - SRID=21781)

+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs

That projection string leads to a valid projection object. Why there are 
different projection strings?  http://cs2cs.mygeodata.eu is also based 
on Proj4!

Best regards,
Markus



From Mikael.Rittri at carmenta.com  Sat May 12 10:16:02 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Sat, 12 May 2012 17:16:02 +0000
Subject: [Proj] Proj4-API - pj_init_plus returns a NULL pointer for my
 ESRI projection string
In-Reply-To: <4FACC547.7020706@InUnum.li>
References: <4FAA8D8B.6070006@InUnum.li> <4FAB7194.9010609@InUnum.li>
	<4FABD737.5010500@pobox.com> <4FAC12A8.9000101@InUnum.li>
	<4FACC547.7020706@InUnum.li>
Message-ID: <DA95FF96-F72A-49E2-9F3F-526E55B4F961@carmenta.com>

Hello. 
somerc (Swiss oblique Mercator, invented by Rosenmund) and omerc (Hotine oblique Mercator, invented by Hotine)
are two distinct projection methods using different formulas. Hungary uses a slight generalisation of the Swiss method. 
   According to Oscar van Vlijmen, in a post that should be in the proj list archives somewhere,
the Swiss method can approximate the Hungarian one quite well, with 1 centimeter accuracy I think. 
But when the Hotine method is used for Hungary, the errors can be at least 17 cm, if I remember right. 
I conclude that omerc and somerc probably differs by a couple of decimeters in Switzerland, too. 

Now, there are two complications:
1) A couple of decimeters isn't significant for oil drillers, so EPSG uses omerc (with alpha = 90) for both Switzerland and Hungary.
2) When Gerald Evenden implemented omerc in Proj.4, he didn't implement the case where alpha = 90, which would
require special formulas. 

So you cannot use omerc with alpha = 90 in Proj.4, and there is no reason to do it.
But if one generates projection definitions directly from the EPSG database,
that's what you get for Switzerland and Hungary. 
Apparently, the Proj definitions have been fixed to use somerc, but not the corresponding Esri definitions.

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

11 maj 2012 kl. 09:53 skrev "Markus Eberhard" <markus.eberhard at InUnum.li>:

> Am 10.05.2012 21:10, schrieb Markus Eberhard:
>> Am 10.05.2012 16:56, schrieb Frank Warmerdam:
>>> On 12-05-10 12:43 AM, Markus Eberhard wrote:
>>>> Hi *,
>>>> I'm using the Proj4-API. Currently I've problems with the following C++
>>>> API call:
>>>>        projPJ projPixel = pj_init_plus( "+init=esri:21781" );
>>>> The called function returns a NULL pointer.
>>>> 
>>>> Strange, the following similar function call works for me
>>>>       projPJ projPixel = pj_init_plus( "+init=world:CH1903" );
>>>> 
>>>> Thanks for your help.
>>> Markus,
>>> 
>>> Did you confirm that 21781 is defined in the esri file?  I imagine it
>>> is as I see:
>>> # CH1903 / LV03
>>> <21781>   +proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90
>>> +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs  no_defs<>
>>> 
>>> in mine.
>>> 
>>> The next thing I'd do is set the PROJ_DEBUG environment variable to 4 and
>>> try again.  There should be some reporting to stderr about what file is
>>> opened.
>>> 
>>> eg.
>>> 
>>> warmerda at gdal65[10]% cs2cs +init=esri:21781
>>> pj_open_lib(esri): call fopen(/home/warmerda/bld/share/proj/esri) - succeeded
>>> 
>>> pj_open_lib(proj_def.dat): call
>>> fopen(/home/warmerda/bld/share/proj/proj_def.dat) - succeeded
>>> 
>>> If that doesn't give a clue you may need to debug into things to figure it
>>> out.
>>> 
>>> Best regards,
>> Hi Frank,
>> thanks for your hints. The ESRI projection configuration file is opened
>> successfully on my system:
>> 
>> pj_open_lib(esri): call fopen(/usr/share/proj/esri) - succeeded
>> pj_open_lib(proj_def.dat): call fopen(/usr/share/proj/proj_def.dat) - succeeded
>> 
>> Additionaly I've tried to set the projection config string directly
>> using the following function call:
>> 
>> projPJ projPixel = pj_init_plus( "+proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90 +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs" );
>> 
>> ->  same result: NULL pointer
>> 
>> I'll try to debug the proj library tomorrow - may be you have an
>> additional tip for me?
>> 
>> Thanks
>> Markus
>> 
>> 
>> 
>> _______________________________________________
>> Proj mailing list
>> Proj at lists.maptools.org
>> http://lists.maptools.org/mailman/listinfo/proj
>> 
> 
> The projection string defined in the ESRI projection configuration file 
> seems to make problems - with the string defined in the ESRI projection 
> config file
> 
> +proj=omerc +lat_0=46.95240555555556 +lonc=7.439583333333333 +alpha=90 +k=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs
> 
> I get allways a NULL pointer (-> function pj_init_plus).
> 
> http://cs2cs.mygeodata.eu uses the following string for the same 
> projection (CH1903 / LV03 - SRID=21781)
> 
> +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs
> 
> That projection string leads to a valid projection object. Why there are 
> different projection strings?  http://cs2cs.mygeodata.eu is also based 
> on Proj4!
> 
> Best regards,
> Markus
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj


From Mikael.Rittri at carmenta.com  Sat May 12 14:55:14 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Sat, 12 May 2012 21:55:14 +0000
Subject: [Proj] Proj4-API - pj_init_plus returns a NULL pointer for my
 ESRI projection string
In-Reply-To: <DA95FF96-F72A-49E2-9F3F-526E55B4F961@carmenta.com>
References: <4FAA8D8B.6070006@InUnum.li> <4FAB7194.9010609@InUnum.li>
	<4FABD737.5010500@pobox.com> <4FAC12A8.9000101@InUnum.li>
	<4FACC547.7020706@InUnum.li>
	<DA95FF96-F72A-49E2-9F3F-526E55B4F961@carmenta.com>
Message-ID: <25207F9B-4014-4E20-BAB4-7319EAC7E4C9@carmenta.com>

PS:
Perhaps I was a bit unclear.  I meant that if you replace "esri" by "epsg" in your initialization, then it should work.

Regards,
Mikael

12 maj 2012 kl. 19:18 skrev "Mikael Rittri" <Mikael.Rittri at carmenta.com>:

> [ ... ]
>  
> Apparently, the Proj definitions have been fixed to use somerc, but not the corresponding Esri definitions.
> 
> 11 maj 2012 kl. 09:53 skrev "Markus Eberhard" <markus.eberhard at InUnum.li>:
> 
>> ( text deleted )
>>>>> 
>>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 


From Mikael.Rittri at carmenta.com  Tue May 15 03:18:57 2012
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 15 May 2012 10:18:57 +0000
Subject: [Proj] Using EPSG codes with cs2cs (the one who
	asked:	Amro_rt_rps)
In-Reply-To: <1336565177.36138.YahooMailNeo@web29208.mail.ird.yahoo.com>
References: <mailman.3.1336496401.14109.proj@lists.maptools.org>
	<1336565177.36138.YahooMailNeo@web29208.mail.ird.yahoo.com>
Message-ID: <E4AB3DD44D22854B819908379DE4AD49391C5F06@SETHNWS023.carmenta.se>

Mohammad,

I'm starting to think that the long/lat of your black-box tool is not WGS84 long/lat, but DHDN long/lat.

The DHDN long/lat has EPSG code 4314, and DHDN / 3-degree Gauss-Kruger zone 4
has EPSG code 31468, and I get:

> cs2cs +init=epsg:4314 +to +init=epsg:31468

13.755944 51.0545555

4623099.53      5659041.38 0.00

Here, the default datum shift that Proj.4 uses for DHDN is not important, since both
the source and target uses the DHDN datum. The result is only 1.46 m from your
tool result. Close, but no cigar. At least you can use a smaller Finagle's constant ;-)
("That quantity which, when multiplied by, divided by, added to, or subtracted from the
answer which you got, yields the answer you should have gotten.")

I don't know if DHDN long/lat is often used for German GIS data. The analogous thing
in Sweden would be RT90 long/lat, a format that you never see for GIS data, at least not
from the Swedish Land Survey. But the practice in Germany may be different, of course.

> ... until as you said the 2012 new modifications come to Proj.4.

I don't think they will help you. I think they are identical to the current definitions, except
in the axis order and axis abbreviations. This is important in certain GIS standards from
OGC for transmitting coordinates on the web, but not for you. (Since your problem is not
that you have confused northing with easting.)

> One last question to all, how do I revers the conversion from X/Y Cartesian to Long/Lat Geographical?

When you use cs2cs on the command line, the "left hand side" is everything
between cs2cs and +to, while the "right hand side" is everything after +to.
Just exchange the left and right hand sides to reverse the direction.

Best regards,

Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com

________________________________
From: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mohammad Amro
Sent: Wednesday, May 09, 2012 2:06 PM
To: proj at lists.maptools.org
Subject: Re: [Proj] Using EPSG codes with cs2cs (the one who asked: Amro_rt_rps)

Hi all,

[ - text deleted - ]

... may be there is no better way to do it than offsetting the different and be happy with that. May be the tool I am using (closed box) is following different methods for conversion?!

e.g., Long:  13.755944, Lat: 51.0545555

Tools coordinates:
4623100    5659040

7-parameters (X is shifted: 118 m, and Y is shifted 140 m)::
4623218.84    5659181.12

BETA2007 Datum shifts (X is shifted: 120 m, and Y is shifted 140 m):
4623220.44    5659181.52

Anyway, I think, as I am doing this conversion on a small scale area, then a linear offset (-118m, -140m) would result in <±2 meters which is the best I can go with until as you said the 2012 new modifications come to Proj.4.

One last question to all, how do I revers the conversion from X/Y Cartesian to Long/Lat Geographical?

A huge thanks you,
Mohammad Amro

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120515/d6983276/attachment.html>

From ec_eng01 at yahoo.com  Tue May 15 04:52:53 2012
From: ec_eng01 at yahoo.com (Mohammad Amro)
Date: Tue, 15 May 2012 12:52:53 +0100 (BST)
Subject: [Proj] Using EPSG codes with cs2cs (the one who asked:
	Amro_rt_rps)
In-Reply-To: <E4AB3DD44D22854B819908379DE4AD49391C5F06@SETHNWS023.carmenta.se>
References: <mailman.3.1336496401.14109.proj@lists.maptools.org>
	<1336565177.36138.YahooMailNeo@web29208.mail.ird.yahoo.com>
	<E4AB3DD44D22854B819908379DE4AD49391C5F06@SETHNWS023.carmenta.se>
Message-ID: <1337082773.16707.YahooMailNeo@web29211.mail.ird.yahoo.com>

That's brilliant Mikael ... Thanks for your support all the way.

As per your advice, after communicating withGeobasisinformation
und Vermessung Sachsen(GeoSN), they informed me that "The TRANS_SN_Light-Tool only converts coordinates from RD83_3GK (projected Gauss Krüger-coordinates) to ETRS89_UTM (projected UTM-coordinates)". As you thought :)

They guided me to an easy Java based online tool at http://gdz.bkg.bund.de/web_koordtrans/start.html. 

This service is provided by Bundesamt für Kartographie und Geodäsie (http://www.bkg.bund.de/DE/Home/homepage__node.html__nnn=true).

This tool gave same results as Proj.4 and run online. A data file can be processed too.

Best regards,
Mohammad
 

________________________________
 Von: Mikael Rittri <Mikael.Rittri at carmenta.com>
An: Mohammad Amro <ec_eng01 at yahoo.com>; PROJ.4 and general Projections Discussions <proj at lists.maptools.org> 
Gesendet: 12:18 Dienstag, 15.Mai 2012
Betreff: RE: [Proj] Using EPSG codes with cs2cs (the one who asked: Amro_rt_rps)
 

 
Mohammad, 
 
I’m starting to think that the long/lat of your
black-box tool is not WGS84 long/lat, but DHDN long/lat. 
 
The DHDN long/lat has EPSG code 4314, and DHDN /
3-degree Gauss-Kruger zone 4 
has EPSG code 31468, and I get:
 
> cs2cs +init=epsg:4314
+to +init=epsg:31468
 
13.755944 51.0545555
 
4623099.53      5659041.38
0.00
 
Here, the default datum shift that Proj.4 uses for
DHDN is not important, since both
the source and target uses the DHDN datum. The result is only 1.46 m from your
tool result. Close, but no cigar. At least you can use a smaller Finagle’s
constant ;-) 
(“That quantity which, when multiplied by,
divided by, added to, or subtracted from the 
answer which you got, yields the answer you should
have gotten.”) 
 
I don’t know if DHDN long/lat is often used for
German GIS data. The analogous thing
in Sweden 
would be RT90 long/lat, a format that you never see for GIS data, at least not
from the Swedish
 Land Survey. But the practice in
 Germany may be
different, of course.
 
> … until as you said the 2012 new modifications come to
Proj.4.
 
I don’t think they will help you. I think they are identical
to the current definitions, except
in the axis order and axis abbreviations. This is important in certain GIS
standards from
OGC for transmitting coordinates on the web, but not for you. (Since your
problem is not
that you have confused northing with easting.) 
 
> One last question to all, how do I revers the conversion from
X/Y Cartesian to Long/Lat Geographical?
 
When you use cs2cs on the command line, the “left hand side”
is everything
between cs2cs and +to, while the “right hand side” is everything
after +to. 
Just exchange the left and right hand sides to reverse the
direction. 
 
Best regards,
 
Mikael Rittri
Carmenta
Sweden
http://www.carmenta.com
 

________________________________
 
From:proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] On Behalf Of Mohammad Amro
Sent: Wednesday, May 09, 2012 2:06
PM
To: proj at lists.maptools.org
Subject: Re: [Proj] Using EPSG
codes with cs2cs (the one who asked: Amro_rt_rps)
 
Hi all,
 
[ - text
deleted - ]
 
… may be there is no better way to do it than
offsetting the different and be happy with that. May be the tool I am using
(closed box) is following different methods for conversion?!    
 
e.g., Long: 13.755944, Lat: 51.0545555
 
Tools coordinates:
4623100   
5659040
 
7-parameters (X is shifted: 118 m, and Y is shifted 140 m)::
4623218.84   
5659181.12
 
BETA2007 Datum shifts (X is shifted: 120 m, and Y is shifted 140 m):
4623220.44    5659181.52

Anyway, I think, as I am doing this conversion on a small scale area, then a
linear offset (-118m, -140m) would result in <±2
meters which is the best I can go with until as you said the 2012 new
modifications come to Proj.4.

One last question to all, how do I revers the
conversion from X/Y Cartesian to Long/Lat Geographical?

A huge thanks you,
Mohammad Amro
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20120515/17ca1107/attachment.html>

From mauceri at actgate.com  Thu May 31 04:02:35 2012
From: mauceri at actgate.com (Calogero Mauceri)
Date: Thu, 31 May 2012 13:02:35 +0200
Subject: [Proj] Errors compiling proj4 on linux
Message-ID: <4FC74FCB.6090400@actgate.com>

Hi all,

The compilation of the latest proj library (4.8.0) fails on my linux 
machine, after using configure and make commands.
The compilations stops reporting

jniproj.c:52:26: org_proj4_PJ.h: No such file or directory
...

I noticed there is a ticket opened for this problem 
http://trac.osgeo.org/proj/ticket/153 but it does not seem to have been 
fixed.
Anyone knows how to deal with this problem? Do I need to have java 
installed on my machine? Is that really needed by proj lib or there is a 
way to disable it?

I also tried to compile the trunk version of proj4. The missing file is 
now found but there are a banch of other JAVA related errors like

jniproj.c: In function `Java_org_proj4_PJ_getSemiMajorAxis':
jniproj.c:221: error: `NAN' undeclared (first use in this function)
....


Thanks,
     Calogero



From martin.desruisseaux at geomatys.fr  Thu May 31 04:42:29 2012
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Thu, 31 May 2012 13:42:29 +0200
Subject: [Proj] Errors compiling proj4 on linux
In-Reply-To: <4FC74FCB.6090400@actgate.com>
References: <4FC74FCB.6090400@actgate.com>
Message-ID: <4FC75925.9020204@geomatys.fr>

Hello Calogero

I though that JNI (and consequently Java) was an optional dependency 
compiled only if 'configure' has been run with the --with-jni flag... 
Which commands did you run exactly?

Looking at the SVN log, it seems that the fix applied on trunk on March 
26th has not been propagated to the 4.8 branch. Do you have a chance to 
try compiling the trunk?

     svn checkout http://svn.osgeo.org/metacrs/proj/trunk/proj

I would like to know if it work for you.

     Martin


Le 31/05/12 13:02, Calogero Mauceri a écrit :
> Hi all,
>
> The compilation of the latest proj library (4.8.0) fails on my linux
> machine, after using configure and make commands.
> The compilations stops reporting
>
> jniproj.c:52:26: org_proj4_PJ.h: No such file or directory
> ...
>
> I noticed there is a ticket opened for this problem
> http://trac.osgeo.org/proj/ticket/153 but it does not seem to have been
> fixed.
> Anyone knows how to deal with this problem? Do I need to have java
> installed on my machine? Is that really needed by proj lib or there is a
> way to disable it?
>
> I also tried to compile the trunk version of proj4. The missing file is
> now found but there are a banch of other JAVA related errors like
>
> jniproj.c: In function `Java_org_proj4_PJ_getSemiMajorAxis':
> jniproj.c:221: error: `NAN' undeclared (first use in this function)
> ....
>
>
> Thanks,
>       Calogero



From mauceri at actgate.com  Thu May 31 05:50:10 2012
From: mauceri at actgate.com (Calogero Mauceri)
Date: Thu, 31 May 2012 14:50:10 +0200
Subject: [Proj] Errors compiling proj4 on linux
In-Reply-To: <4FC75925.9020204@geomatys.fr>
References: <4FC74FCB.6090400@actgate.com> <4FC75925.9020204@geomatys.fr>
Message-ID: <4FC76902.7040402@actgate.com>

Hi Martin,

The problem happens just running ./configure without passing any option.
Here is a snapshot of the configure log

...
checking for ANSI C header files... (cached) yes
checking jni.h usability... yes
checking jni.h presence... yes
checking for jni.h... yes
checking whether to enable Java/JNI support... enabled
...

so it seems that it automatically enabled Java/JNI even if I do not pass 
--with-jni option.

If I try to compile the proj from svn trunk, In the configure output JNI 
seems to be still enabled

...
checking for ANSI C header files... (cached) yes
checking jni.h usability... yes
checking jni.h presence... yes
checking for jni.h... yes
checking whether to enable Java/JNI support... enabled
...

but the compilation gives me some errors related to JAVA like:

...
jniproj.c: In function `Java_org_proj4_PJ_getSemiMajorAxis':
jniproj.c:221: error: `NAN' undeclared (first use in this function)
jniproj.c: In function `Java_org_proj4_PJ_getSemiMinorAxis':
jniproj.c:237: error: `NAN' undeclared (first use in this function)
....

Thanks,
     Calogero.



Il 31/05/2012 13.42, Martin Desruisseaux ha scritto:
> Hello Calogero
>
> I though that JNI (and consequently Java) was an optional dependency
> compiled only if 'configure' has been run with the --with-jni flag...
> Which commands did you run exactly?
>
> Looking at the SVN log, it seems that the fix applied on trunk on March
> 26th has not been propagated to the 4.8 branch. Do you have a chance to
> try compiling the trunk?
>
>       svn checkout http://svn.osgeo.org/metacrs/proj/trunk/proj
>
> I would like to know if it work for you.
>
>       Martin
>
>
> Le 31/05/12 13:02, Calogero Mauceri a écrit :
>> Hi all,
>>
>> The compilation of the latest proj library (4.8.0) fails on my linux
>> machine, after using configure and make commands.
>> The compilations stops reporting
>>
>> jniproj.c:52:26: org_proj4_PJ.h: No such file or directory
>> ...
>>
>> I noticed there is a ticket opened for this problem
>> http://trac.osgeo.org/proj/ticket/153 but it does not seem to have been
>> fixed.
>> Anyone knows how to deal with this problem? Do I need to have java
>> installed on my machine? Is that really needed by proj lib or there is a
>> way to disable it?
>>
>> I also tried to compile the trunk version of proj4. The missing file is
>> now found but there are a banch of other JAVA related errors like
>>
>> jniproj.c: In function `Java_org_proj4_PJ_getSemiMajorAxis':
>> jniproj.c:221: error: `NAN' undeclared (first use in this function)
>> ....
>>
>>
>> Thanks,
>>        Calogero
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From robert.p.fischer-1 at nasa.gov  Thu May 31 06:15:45 2012
From: robert.p.fischer-1 at nasa.gov (Fischer, Robert P. (GISS-6110)[COLUMBIA UNIVERSITY])
Date: Thu, 31 May 2012 08:15:45 -0500
Subject: [Proj] Errors compiling proj4 on linux
In-Reply-To: <4FC76902.7040402@actgate.com>
References: <4FC74FCB.6090400@actgate.com>
	<4FC75925.9020204@geomatys.fr>,<4FC76902.7040402@actgate.com>
Message-ID: <B236CA9710FCCF4EAB144418A4E47F9A8A6E7CE3C8@NDMSSCC06.ndc.nasa.gov>

Can you install proj4 from your linux distro via yum or apt-get?

Also... even if this is a bug, the most expedient way around it might be to just install whatever JNI it's looking for --- again, that's really easy from your Linux distro.

--Bob


From mauceri at actgate.com  Thu May 31 06:30:34 2012
From: mauceri at actgate.com (Calogero Mauceri)
Date: Thu, 31 May 2012 15:30:34 +0200
Subject: [Proj] Errors compiling proj4 on linux
In-Reply-To: <B236CA9710FCCF4EAB144418A4E47F9A8A6E7CE3C8@NDMSSCC06.ndc.nasa.gov>
References: <4FC74FCB.6090400@actgate.com> <4FC75925.9020204@geomatys.fr>,
	<4FC76902.7040402@actgate.com>
	<B236CA9710FCCF4EAB144418A4E47F9A8A6E7CE3C8@NDMSSCC06.ndc.nasa.gov>
Message-ID: <4FC7727A.8040709@actgate.com>

I just executed ./configure with --without-jni option and it did work.

Thanks all for your help!
Calogero



Il 31/05/2012 15.15, Fischer, Robert P. (GISS-6110)[COLUMBIA UNIVERSITY] 
ha scritto:
> Can you install proj4 from your linux distro via yum or apt-get?
>
> Also... even if this is a bug, the most expedient way around it might be to just install whatever JNI it's looking for --- again, that's really easy from your Linux distro.
>
> --Bob
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From martin.desruisseaux at geomatys.fr  Thu May 31 06:43:39 2012
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Thu, 31 May 2012 15:43:39 +0200
Subject: [Proj] Errors compiling proj4 on linux
In-Reply-To: <4FC76902.7040402@actgate.com>
References: <4FC74FCB.6090400@actgate.com> <4FC75925.9020204@geomatys.fr>
	<4FC76902.7040402@actgate.com>
Message-ID: <4FC7758B.4020408@geomatys.fr>

Le 31/05/12 14:50, Calogero Mauceri a écrit :
> jniproj.c: In function `Java_org_proj4_PJ_getSemiMajorAxis':
> jniproj.c:221: error: `NAN' undeclared (first use in this function)
> jniproj.c: In function `Java_org_proj4_PJ_getSemiMinorAxis':
> jniproj.c:237: error: `NAN' undeclared (first use in this function)

Looking on the web, it seem that the NAN constant is not guaranteed to 
be available on every compiler. I guess that for being very strict, I 
should returns the value of the java.lang.Double.NaN field (so we would 
also be sure that it is exactly the value expected by Java). I will try 
a patch.

     Martin



From martin.desruisseaux at geomatys.fr  Thu May 31 07:20:41 2012
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Thu, 31 May 2012 16:20:41 +0200
Subject: [Proj] Errors compiling proj4 on linux
In-Reply-To: <4FC7758B.4020408@geomatys.fr>
References: <4FC74FCB.6090400@actgate.com> <4FC75925.9020204@geomatys.fr>
	<4FC76902.7040402@actgate.com> <4FC7758B.4020408@geomatys.fr>
Message-ID: <4FC77E39.3020700@geomatys.fr>

Hello again Calogero

I just committed a patch where I replaced usage of the C/C++ NAN 
constant by usage of the java.lang.Double.NaN constant in the JNI code. 
If you have a chance, could you test the build again with JNI enabled 
please?

For the record, I also updated the test suite in 
http://geoapi.svn.sourceforge.net/svnroot/geoapi/trunk/geoapi-proj4/src/test/java/org/proj4/PJTest.java

     Martin


Le 31/05/12 15:43, Martin Desruisseaux a écrit :
> Le 31/05/12 14:50, Calogero Mauceri a écrit :
>> jniproj.c: In function `Java_org_proj4_PJ_getSemiMajorAxis':
>> jniproj.c:221: error: `NAN' undeclared (first use in this function)
>> jniproj.c: In function `Java_org_proj4_PJ_getSemiMinorAxis':
>> jniproj.c:237: error: `NAN' undeclared (first use in this function)
> Looking on the web, it seem that the NAN constant is not guaranteed to
> be available on every compiler. I guess that for being very strict, I
> should returns the value of the java.lang.Double.NaN field (so we would
> also be sure that it is exactly the value expected by Java). I will try
> a patch.



From martin.desruisseaux at geomatys.fr  Thu May 31 07:30:44 2012
From: martin.desruisseaux at geomatys.fr (Martin Desruisseaux)
Date: Thu, 31 May 2012 16:30:44 +0200
Subject: [Proj] Should we delete the legacy JNI wrapper (replaced by new
	ones)?
Message-ID: <4FC78094.1090606@geomatys.fr>

Since we are at it, the 4.8 release contains new JNI wrappers which 
replace the old ones. The main difference is that the new wrappers fix 
some memory leaks, and are expected to be more efficient by allowing to 
fetch the PJ structure only once instead than for every call to a 
'transform' method. The old wrappers are still present on the trunk as 
"deprecated" code however. Should we remove them from trunk now? (they 
would still be in the 4.8 branch)

Also, should we merge the JNI fixes to the 4.8 branch?

     Martin



From mauceri at actgate.com  Thu May 31 07:41:14 2012
From: mauceri at actgate.com (Calogero Mauceri)
Date: Thu, 31 May 2012 16:41:14 +0200
Subject: [Proj] Errors compiling proj4 on linux
In-Reply-To: <4FC77E39.3020700@geomatys.fr>
References: <4FC74FCB.6090400@actgate.com> <4FC75925.9020204@geomatys.fr>
	<4FC76902.7040402@actgate.com> <4FC7758B.4020408@geomatys.fr>
	<4FC77E39.3020700@geomatys.fr>
Message-ID: <4FC7830A.1050503@actgate.com>

Great Martin!

the trunk version is compiling now.
Thanks,
     Calogero



Il 31/05/2012 16.20, Martin Desruisseaux ha scritto:
> Hello again Calogero
>
> I just committed a patch where I replaced usage of the C/C++ NAN
> constant by usage of the java.lang.Double.NaN constant in the JNI code.
> If you have a chance, could you test the build again with JNI enabled
> please?
>
> For the record, I also updated the test suite in
> http://geoapi.svn.sourceforge.net/svnroot/geoapi/trunk/geoapi-proj4/src/test/java/org/proj4/PJTest.java
>
>       Martin
>
>
> Le 31/05/12 15:43, Martin Desruisseaux a écrit :
>> Le 31/05/12 14:50, Calogero Mauceri a écrit :
>>> jniproj.c: In function `Java_org_proj4_PJ_getSemiMajorAxis':
>>> jniproj.c:221: error: `NAN' undeclared (first use in this function)
>>> jniproj.c: In function `Java_org_proj4_PJ_getSemiMinorAxis':
>>> jniproj.c:237: error: `NAN' undeclared (first use in this function)
>> Looking on the web, it seem that the NAN constant is not guaranteed to
>> be available on every compiler. I guess that for being very strict, I
>> should returns the value of the java.lang.Double.NaN field (so we would
>> also be sure that it is exactly the value expected by Java). I will try
>> a patch.
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From warmerdam at pobox.com  Thu May 31 12:56:42 2012
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 31 May 2012 12:56:42 -0700
Subject: [Proj] Should we delete the legacy JNI wrapper (replaced by new
	ones)?
In-Reply-To: <4FC78094.1090606@geomatys.fr>
References: <4FC78094.1090606@geomatys.fr>
Message-ID: <CA+YzLBeHhUgM44JR-5xu_aYYCkfZPkWERvaf0Ymyi1Q-RnU7zw@mail.gmail.com>

On Thu, May 31, 2012 at 7:30 AM, Martin Desruisseaux
<martin.desruisseaux at geomatys.fr> wrote:
> Since we are at it, the 4.8 release contains new JNI wrappers which
> replace the old ones. The main difference is that the new wrappers fix
> some memory leaks, and are expected to be more efficient by allowing to
> fetch the PJ structure only once instead than for every call to a
> 'transform' method. The old wrappers are still present on the trunk as
> "deprecated" code however. Should we remove them from trunk now? (they
> would still be in the 4.8 branch)

Please feel free to do so.

> Also, should we merge the JNI fixes to the 4.8 branch?

Yes, I think that would be prudent.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer


