From guasqui at actgate.com  Tue Dec  1 03:00:23 2020
From: guasqui at actgate.com (Pierluigi Guasqui)
Date: Tue, 1 Dec 2020 12:00:23 +0100
Subject: [PROJ] How to map pj_latlong_from_proj to PROJ ver 7 API
In-Reply-To: <2007143.c6FhX6466Z@even-i700>
References: <CAJNYLRL_SU=8TNut_-0DMQ7roVXTc103JCQ21KL+DWy4JY9_yw@mail.gmail.com>
 <2007143.c6FhX6466Z@even-i700>
Message-ID: <CAJNYLRL-sKQOPLEs7On9yj-BYkh2KHwBMe3VDgNZBYONt=SddQ@mail.gmail.com>

Even,

thank you so much for your reply.

My intent here is just to replicate the PROJ 4 API behavior of:

//------------------------------------------------
const char *pj_carto_string = "+proj=ortho +datum=WGS84 +ellps=WGS84
+lat_0=60 +lon_0=90";
pj_cart = pj_init_plus( pj_carto_string );
projPJ pj_ll = pj_latlong_from_proj( pj_cart );
char *pj_ll_string = pj_get_def( pj_ll, 0 );
//------------------------------------------------
I am only interested in getting the geographic coordinate string
*pj_ll_string* underlying the input cartographic projection
*pj_carto_string*. So, in this context, I am not interested in performing
any transformation with those projection strings.

Thank you so much!
Pierluigi

On Mon, Nov 30, 2020 at 9:00 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Pierluigi,
>
> > I've successfully compiled PROJ ver 7.2.0 on Windows 10 (build 19041.630)
> > and I am trying to port my code from PROJ ver 4 API to PROJ ver 7 API
> but I
> > can't find a clear matching between the old version 4 API
> > *pj_latlong_from_proj* routine and version 7 API code.
> >
> > I tried the suggested function mapping as specified here
> >
> https://proj.org/development/migration.html#function-mapping-from-old-to-new
> > -api, but I am consistently getting a NULL pointer returned by the
> > *proj_crs_get_horizontal_datum()*. Here is my sample code:
> >
> > //------------------------------------------------
> > #include <iostream>
> > #include <proj.h>
> >
> > int main()
> > {
> >    PJ *proj_test = proj_create(PJ_DEFAULT_CTX, "+proj=ortho +datum=WGS84
> > +ellps=WGS84 +lat_0=60 +lon_0=90");
>
> The above is instanciated as a coordinate operation, not a CRS, so you
> can't
> use CRS related API on it. You likely need to add " +type=crs" to the PROJ
> string
>
> >    PJ *datum = proj_crs_get_horizontal_datum(PJ_DEFAULT_CTX, proj_test);
>
> You'll rather want to use proj_get_source_crs() to extract the geographic
> CRS
> from the projected CRS ( proj_crs_get_geodetic_crs() would also do the job
> here ).
>
> The resulting PJ* object will be a CRS too, so as you likely want to do a
> coordinate operation from your projected CRS to the base geographic CRS,
> you'll need to create a coordinate operation object with:
>
>         proj_create_crs_to_crs_from_pj(PJ_DEFAULT_CTX, proj_test,
> geog_crs, NULL,
> NULL)
>
> and then you can use proj_trans() on the resulting object.
>
>
> Another option is to use proj_crs_get_coordoperation(PJ_DEFAULT_CTX,
> proj_test) (with the PROJ string of proj_test having " +type=crs"), which
> will
> give you the coordinate operation to convert from the base geographic CRS
> of
> the projected CRS to the projected CRS.
> You can use proj_trans() on it (in the reverse direction, if you want to
> go
> from projected to geographic)
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
Pierluigi Guasqui
Software Engineer

Applied Coherent Technology Corporation (ACT)
www.actgate.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201201/9322d3fd/attachment.html>

From even.rouault at spatialys.com  Tue Dec  1 07:21:40 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 01 Dec 2020 16:21:40 +0100
Subject: [PROJ] How to map pj_latlong_from_proj to PROJ ver 7 API
In-Reply-To: <CAJNYLRL-sKQOPLEs7On9yj-BYkh2KHwBMe3VDgNZBYONt=SddQ@mail.gmail.com>
References: <CAJNYLRL_SU=8TNut_-0DMQ7roVXTc103JCQ21KL+DWy4JY9_yw@mail.gmail.com>
 <2007143.c6FhX6466Z@even-i700>
 <CAJNYLRL-sKQOPLEs7On9yj-BYkh2KHwBMe3VDgNZBYONt=SddQ@mail.gmail.com>
Message-ID: <4234705.STsDGsi3N5@even-i700>

On mardi 1 d?cembre 2020 12:00:23 CET Pierluigi Guasqui wrote:
> proj_get_source_crs

You can use my hints about using proj_get_source_crs() and then you can get 
the PROJ string for it with proj_as_proj_string(). Note however that using 
PROJ strings to represent CRS is a suboptimal / deprecated way in some 
situations. You'd be much better with WKT for example.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From j1 at jimenezshaw.com  Thu Dec  3 03:51:40 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 3 Dec 2020 12:51:40 +0100
Subject: [PROJ] Knowing if geoid undulation is applied in C++
Message-ID: <CADRrdKuJ3wuubx3tQaoWP7NNoK6zviQVBkc+RDYWosxVaRxkKQ@mail.gmail.com>

Hi

Let me ask this in 3 levels (all in C++):
- Given two CRS via WKT, is there any way to know if the transformation
from one to the other is applying a geoid undulation?
- ... if the transformation is applying any grid file transformation?
- ... when I run it from GDAL?

I am not using the network functionality to request grid files.

Thanks
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201203/33e52bd5/attachment.html>

From even.rouault at spatialys.com  Thu Dec  3 07:19:19 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 03 Dec 2020 16:19:19 +0100
Subject: [PROJ] Knowing if geoid undulation is applied in C++
In-Reply-To: <CADRrdKuJ3wuubx3tQaoWP7NNoK6zviQVBkc+RDYWosxVaRxkKQ@mail.gmail.com>
References: <CADRrdKuJ3wuubx3tQaoWP7NNoK6zviQVBkc+RDYWosxVaRxkKQ@mail.gmail.com>
Message-ID: <5020096.edgN24aOMj@even-i700>

Javier,

> Let me ask this in 3 levels (all in C++):
> - Given two CRS via WKT, is there any way to know if the transformation
> from one to the other is applying a geoid undulation?
> - ... if the transformation is applying any grid file transformation?

If you don't use the black-box API of proj_create_crs_to_crs() but use instead 
CoordinateOperationFactory::createOperations() and then on each result call 
CoordinateOperation::gridsNeeded(), you can get the grids that will be used. 
To know if a grid is for vertical correction, you'll have to analyze the PROJ 
pipeline string and look for +proj=vgridshift +grids=...

You can do that with the corresponding PROJ C API as well

> - ... when I run it from GDAL?

No, if you use OGRCoordinateTransformation without specifying an explicit 
pipeline, it is a black-box.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cconley717 at gmail.com  Wed Dec  9 10:09:28 2020
From: cconley717 at gmail.com (Chris Conley)
Date: Wed, 9 Dec 2020 12:09:28 -0600
Subject: [PROJ] PROJ source build causing GDAL source build errors
Message-ID: <CALbr+BiifmoOu_UcPTP-KZ9mFsb3uPMjbC4vGpf36X8yiJdTYQ@mail.gmail.com>

I'm building GDAL 3.2.0 from source with PROJ 7.2.0 built from source.
Unfortunately, I'm running into a strange build error involving a source
build of SQLite 3.34.0 while attempting to build GDAL. There seems to be a
problem with either my SQLite source compilation or PROJ source
compilation. Is anyone able to spot what's causing this build error?

I also get this build error when using the official pre-compiled SQLite
amalgamation and pre-compiled binaries.
https://www.sqlite.org/download.html

I'm using Visual Studio 16 2019 and CMake to build via the Visual Studio
command prompt on Windows 10 x64.
https://proj.org/install.html#cmake

My build steps and error output are as follows..

*-SQLite build-*
nmake /f Makefile.msc sqlite3.c
cl sqlite3.c -link -dll -out:sqlite3.dll
cl shell.c sqlite3.c -Fesqlite3.exe

*-PROJ build-*

cmake -DCMAKE_BUILD_TYPE=Release
-DEXE_SQLITE3=C:\dev\sqlite\sqlite3.exe-DSQLITE3_INCLUDE_DIR=C:\dev\sqlite
-DSQLITE3_LIBRARY=C:\dev\sqlite\sqlite3.lib-DTIFF_INCLUDE_DIR=C:\dev\libtiff-master\libtiff-DTIFF_LIBRARY_RELEASE=C:\dev\libtiff-master\libtiff\libtiff.lib-DCURL_INCLUDE_DIR=C:\dev\curl-master\builds\libcurl-vc16-x64-release-dll-ipv6-sspi-schannel\include-DCURL_LIBRARY=C:\dev\curl-master\builds\libcurl-vc16-x64-release-dll-ipv6-sspi-schannel\lib\libcurl.lib
..
cmake --build . --config release --target install

-*GDAL build*-
nmake /f makefile.vc MSVC_VER=1920 WIN64=YES


-*GDAL build error*-

https://pastebin.com/QQXHdHuc
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201209/a79b404a/attachment.html>

From lnicola at dend.ro  Thu Dec 10 10:37:38 2020
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Thu, 10 Dec 2020 20:37:38 +0200
Subject: [PROJ] PROJ source build causing GDAL source build errors
In-Reply-To: <CALbr+BiifmoOu_UcPTP-KZ9mFsb3uPMjbC4vGpf36X8yiJdTYQ@mail.gmail.com>
References: <CALbr+BiifmoOu_UcPTP-KZ9mFsb3uPMjbC4vGpf36X8yiJdTYQ@mail.gmail.com>
Message-ID: <c08f145c-41a5-456a-a514-2e33a25a6893@www.fastmail.com>

Hi Chris,

Lacking other ideas, I'll just ask whether you're sure that PROJ cmake command-line parameters are correct. Maybe some spaces got eaten up, but you've pasted this snippet:

> cmake -DCMAKE_BUILD_TYPE=Release -DEXE_SQLITE3=C:\dev\sqlite\sqlite3.exe-DSQLITE3_INCLUDE_DIR=C:\dev\sqlite -DSQLITE3_LIBRARY=C:\dev\sqlite\sqlite3.lib-DTIFF_INCLUDE_DIR=C:\dev\libtiff-master\libtiff-DTIFF_LIBRARY_RELEASE=C:\dev\libtiff-master\libtiff\libtiff.lib-DCURL_INCLUDE_DIR=C:\dev\curl-master\builds\libcurl-vc16-x64-release-dll-ipv6-sspi-schannel\include-DCURL_LIBRARY=C:\dev\curl-master\builds\libcurl-vc16-x64-release-dll-ipv6-sspi-schannel\lib\libcurl.lib ..

Specifically, there should be spaces between each of the parameters, but your command seems to be lacking most of them. So it should look more like this:

cmake -DCMAKE_BUILD_TYPE=Release -DEXE_SQLITE3=C:\dev\sqlite\sqlite3.exe -DSQLITE3_INCLUDE_DIR=C:\dev\sqlite -DSQLITE3_LIBRARY=C:\dev\sqlite\sqlite3.lib -DTIFF_INCLUDE_DIR=C:\dev\libtiff-master\libtiff -DTIFF_LIBRARY_RELEASE=C:\dev\libtiff-master\libtiff\libtiff.lib -DCURL_INCLUDE_DIR=C:\dev\curl-master\builds\libcurl-vc16-x64-release-dll-ipv6-sspi-schannel\include -DCURL_LIBRARY=C:\dev\curl-master\builds\libcurl-vc16-x64-release-dll-ipv6-sspi-schannel\lib\libcurl.lib .

(that is, assuming the include and library paths are correct)

Other than this, the linker command line doesn't reference sqlite3.lib, which would explain the missing symbols.

Regards,
Laurentiu Nicola

From Nicolas.Bellaiche at ign.fr  Mon Dec 14 02:11:32 2020
From: Nicolas.Bellaiche at ign.fr (Nicolas Bellaiche)
Date: Mon, 14 Dec 2020 10:11:32 +0000
Subject: [PROJ] [API C++] Retrieving units from a crs using a PJ object
Message-ID: <C6A3E3CA0FD04E47839C6B26C02B803A0136B6C691@mailex1.ign.fr>

Hi,

2 questions for the community:

1. I'm struggling to find in which the planar and and altitude coordinates are given from a PJ object. There are the pj_left / pj_right functions but they are not visible for the API users. And the only other function I can find in the API gives the list of all units listed in the cars database.


2. What's the best way to replace pj_geocentric_latitude (that belongs to the internal API) with PROJ-7


Thanks a lot for your answers,


Nicolas Bellaiche

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201214/b835272d/attachment.html>

From eric.g.younkin at noaa.gov  Tue Dec 15 11:36:54 2020
From: eric.g.younkin at noaa.gov (Eric Younkin - NOAA Federal)
Date: Tue, 15 Dec 2020 14:36:54 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
Message-ID: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>

Hello,

I spent some time the past few days reading RFC 4 and some related threads
to the PROJ CDN and PROJ-DATA repo.  I feel like I might be opening a can
of worms here (in that this conversation might have already happened with
someone else from NOAA), but using the CDN for distribution of our Tidal
Datum grids seems like a useful step to take, both for our
internal software development efforts and for other users who might want
these grids.

Where does this group think these Tidal Datum grids should go?  Should they
be included with PROJ-DATA?  The grids in question are ~12 GB in size,
which might be the stopping point here, although with the dynamic CDN
download option, maybe the total PROJ-DATA size is less important now.
What would other users want us to do with these grids?  How could we
provide this data to benefit the PROJ community?

In addition, we are in the process of compiling a metadata package to
formally register these vertical CRS/datum transformations to EPSG, would
using the CDN as a distribution mechanism + EPSG registration allow us to
use these transformations in PROJ?

Welcome any advice on the topic.

Thanks,
Eric

-- 
Eric Younkin
Physical Scientist
NOAA OCS, Hydrographic Systems and Technology Branch
1315 East-West Highway
N/CS11, Room 6604
Silver Spring, MD 20910
Office: 240-847-8208
Cell: 828-331-8197
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201215/a2688e03/attachment.html>

From even.rouault at spatialys.com  Tue Dec 15 12:31:20 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 15 Dec 2020 21:31:20 +0100
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
Message-ID: <4509622.bTgNb2kcHa@even-i700>

Eric,

12 GB is a large volume compared to the current 500 MB of PROJ-data. I don't 
think we would want to distribute that in the .tar.gz/.zip archive we build 
from https://github.com/OSGeo/PROJ-data which contains the 500 MB of data, and 
is already seen as too fat for some users when offline use cases must be 
covered (e.g. QGIS standalone installer)
Incorporating them directly in that github repository would also be probably a 
bad idea, as it would make it unconvenient to manage (any contributor wanting 
to add a 1 MB grid would have to fetch a 12 GB repository...)

However, we could potentially import those grids on the AWS S3 storage behind 
cdn.proj.org (unless you have a cloud storage publicly accessible with those 
grids), and have records in the PROJ database binding the name of the grids as 
found in the EPSG database to the URL where they can be found (which is the 
business of the
https://github.com/OSGeo/PROJ/blob/master/data/sql/grid_alternatives.sql 
table). 
Having those datums, CRSs and grids registered in EPSG is indeed a prior step 
that would make it much easier to make them available to PROJ users, as 
normally the only remaining step is to do that grid name -> URL mapping. There 
might be some small code enhancements to do in PROJ source code depending on 
if a new EPSG transformation method is created for those grids.

Opinions of other PROJ stakeholders welcome on how to handle such dataset.

Even

> Hello,
> 
> I spent some time the past few days reading RFC 4 and some related threads
> to the PROJ CDN and PROJ-DATA repo.  I feel like I might be opening a can
> of worms here (in that this conversation might have already happened with
> someone else from NOAA), but using the CDN for distribution of our Tidal
> Datum grids seems like a useful step to take, both for our
> internal software development efforts and for other users who might want
> these grids.
> 
> Where does this group think these Tidal Datum grids should go?  Should they
> be included with PROJ-DATA?  The grids in question are ~12 GB in size,
> which might be the stopping point here, although with the dynamic CDN
> download option, maybe the total PROJ-DATA size is less important now.
> What would other users want us to do with these grids?  How could we
> provide this data to benefit the PROJ community?
> 
> In addition, we are in the process of compiling a metadata package to
> formally register these vertical CRS/datum transformations to EPSG, would
> using the CDN as a distribution mechanism + EPSG registration allow us to
> use these transformations in PROJ?
> 
> Welcome any advice on the topic.
> 
> Thanks,
> Eric


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Tue Dec 15 15:47:20 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 15 Dec 2020 18:47:20 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <4509622.bTgNb2kcHa@even-i700> (Even Rouault's message of "Tue,
 15 Dec 2020 21:31:20 +0100")
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <4509622.bTgNb2kcHa@even-i700>
Message-ID: <rmiv9d2tywn.fsf@s1.lexort.com>


Even Rouault <even.rouault at spatialys.com> writes:

> Opinions of other PROJ stakeholders welcome on how to handle such dataset.

For background, I have been cranky about "CDN only" approaches and
wanting the data downloadable to make packages that can be used offline,
partly on general principles and partly from an experience building lots
of software to be used on computers with no internet connectivity.

However, in this case, this is such a vast amount of data that I concur
with Even that it does not belong in the repo and proj-data distributed
files.

Agreed that it would be best if NOAA made it available and it was then
referenced into the proj CDN, if there are no funding issues -- I have
no idea how that service gets paid for.

Greg (packager and user)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201215/ac4abe95/attachment.sig>

From michael.smith.erdc at gmail.com  Tue Dec 15 16:15:35 2020
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Tue, 15 Dec 2020 19:15:35 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <rmiv9d2tywn.fsf@s1.lexort.com>
References: <rmiv9d2tywn.fsf@s1.lexort.com>
Message-ID: <BC94325C-32B7-4E9E-8262-714578580421@gmail.com>

Note that with projsync you can download from the CDN for offline use. 



Michael Smith

> On Dec 15, 2020, at 6:47 PM, Greg Troxel <gdt at lexort.com> wrote:
> 
> ?
> Even Rouault <even.rouault at spatialys.com> writes:
> 
>> Opinions of other PROJ stakeholders welcome on how to handle such dataset.
> 
> For background, I have been cranky about "CDN only" approaches and
> wanting the data downloadable to make packages that can be used offline,
> partly on general principles and partly from an experience building lots
> of software to be used on computers with no internet connectivity.
> 
> However, in this case, this is such a vast amount of data that I concur
> with Even that it does not belong in the repo and proj-data distributed
> files.
> 
> Agreed that it would be best if NOAA made it available and it was then
> referenced into the proj CDN, if there are no funding issues -- I have
> no idea how that service gets paid for.
> 
> Greg (packager and user)
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From howard at hobu.co  Wed Dec 16 06:15:28 2020
From: howard at hobu.co (Howard Butler)
Date: Wed, 16 Dec 2020 08:15:28 -0600
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <rmiv9d2tywn.fsf@s1.lexort.com>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <4509622.bTgNb2kcHa@even-i700> <rmiv9d2tywn.fsf@s1.lexort.com>
Message-ID: <4EF6C9E1-5731-419E-BC5A-58B3D1453523@hobu.co>



> On Dec 15, 2020, at 5:47 PM, Greg Troxel <gdt at lexort.com> wrote:
> 
> Agreed that it would be best if NOAA made it available and it was then
> referenced into the proj CDN, if there are no funding issues -- I have
> no idea how that service gets paid for.

As it says in the first paragraph of https://cdn.proj.org/ <https://cdn.proj.org/> it is supported by the Amazon Public Datasets program. They graciously accepted our request for support after we described what the CDN would enable. An additional point that should be made about the CDN is at the very bottom of the page:

> Access logs to this resource are permanently deleted after one day, are not mirrored or stored, and are not publicly available. If this policy is not sufficient, users are encourage to mirror a local copy of the grid files and access them directly.

In short, if you ware worried about leaking sensitive location or processing information through your accesses to the CDN, you are encouraged to pull local copies with projsync and skip accessing the CDN from that point on. 

IMO, NOAA seeking to put 12gb of specialized shift files into the CDN is *exactly* what we were hoping to have happen with the CDN project. They're simply too big to deliver via normal package, but the convenience the CDN can provide for users of these grids is substantial. I hope NOAA can close the loop with EPSG and participate in the OGC standardization effort that is ongoing with respect to deformation grids and their format as well.

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/c6233cf1/attachment.html>

From gdt at lexort.com  Wed Dec 16 06:44:01 2020
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 16 Dec 2020 09:44:01 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <4EF6C9E1-5731-419E-BC5A-58B3D1453523@hobu.co> (Howard Butler's
 message of "Wed, 16 Dec 2020 08:15:28 -0600")
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <4509622.bTgNb2kcHa@even-i700> <rmiv9d2tywn.fsf@s1.lexort.com>
 <4EF6C9E1-5731-419E-BC5A-58B3D1453523@hobu.co>
Message-ID: <rmiy2hxretq.fsf@s1.lexort.com>


Howard Butler <howard at hobu.co> writes:

> IMO, NOAA seeking to put 12gb of specialized shift files into the CDN
> is *exactly* what we were hoping to have happen with the CDN
> project. They're simply too big to deliver via normal package, but the
> convenience the CDN can provide for users of these grids is
> substantial. I hope NOAA can close the loop with EPSG and participate
> in the OGC standardization effort that is ongoing with respect to
> deformation grids and their format as well.

Thanks for explaining.  I really meant simply that I did not understand
and was thus being careful not to opine if this was ok or not.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/733bc47b/attachment.sig>

From gdt at lexort.com  Wed Dec 16 06:52:50 2020
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 16 Dec 2020 09:52:50 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 (Eric Younkin's message of "Tue, 15 Dec 2020 14:36:54 -0500")
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
Message-ID: <rmituslref1.fsf@s1.lexort.com>


Eric Younkin - NOAA Federal via PROJ <proj at lists.osgeo.org> writes:

> In addition, we are in the process of compiling a metadata package to
> formally register these vertical CRS/datum transformations to EPSG, would
> using the CDN as a distribution mechanism + EPSG registration allow us to
> use these transformations in PROJ?

I am curious if NOAA has a view about interacting with

  https://geodetic.isotc211.org/

It's not clear to me where on the path from concept to full implemention
the ISO registry is.  At a quick glance it seems to contain only a small
fraction of what is in the EPSG database.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/c107544c/attachment.sig>

From howard at hobu.co  Wed Dec 16 06:53:52 2020
From: howard at hobu.co (Howard Butler)
Date: Wed, 16 Dec 2020 08:53:52 -0600
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <rmiy2hxretq.fsf@s1.lexort.com>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <4509622.bTgNb2kcHa@even-i700> <rmiv9d2tywn.fsf@s1.lexort.com>
 <4EF6C9E1-5731-419E-BC5A-58B3D1453523@hobu.co>
 <rmiy2hxretq.fsf@s1.lexort.com>
Message-ID: <85CE0181-167F-40D9-8AA4-9FC1448DCB52@hobu.co>



> On Dec 16, 2020, at 8:44 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> 
> Howard Butler <howard at hobu.co> writes:
> 
>> IMO, NOAA seeking to put 12gb of specialized shift files into the CDN
>> is *exactly* what we were hoping to have happen with the CDN
>> project. They're simply too big to deliver via normal package, but the
>> convenience the CDN can provide for users of these grids is
>> substantial. I hope NOAA can close the loop with EPSG and participate
>> in the OGC standardization effort that is ongoing with respect to
>> deformation grids and their format as well.
> 
> Thanks for explaining.  I really meant simply that I did not understand
> and was thus being careful not to opine if this was ok or not.

OK for NOAA to do this or ok for the PROJ project to support it with its CDN? I don't know about the former either, but the past NOAA public transition path for this kind of data was to toss it into the ether in their own format and hope for implementation. I would hope supporting PROJ and modernizing their grid deliveries with Cloud Optimized GeoTIFF would be under their purview.

As for the CDN, we can put a lot of data up there before anyone is going to complain. The URL is purposefully the project's instead of an Amazon one to allow us to gracefully migrate in case AWS decides supporting us is no longer in their interest. 

Howard


From gdt at lexort.com  Wed Dec 16 06:57:07 2020
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 16 Dec 2020 09:57:07 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <85CE0181-167F-40D9-8AA4-9FC1448DCB52@hobu.co> (Howard Butler's
 message of "Wed, 16 Dec 2020 08:53:52 -0600")
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <4509622.bTgNb2kcHa@even-i700> <rmiv9d2tywn.fsf@s1.lexort.com>
 <4EF6C9E1-5731-419E-BC5A-58B3D1453523@hobu.co>
 <rmiy2hxretq.fsf@s1.lexort.com>
 <85CE0181-167F-40D9-8AA4-9FC1448DCB52@hobu.co>
Message-ID: <rmipn39re7w.fsf@s1.lexort.com>


Howard Butler <howard at hobu.co> writes:

>> On Dec 16, 2020, at 8:44 AM, Greg Troxel <gdt at lexort.com> wrote:
>> 
>> 
>> Howard Butler <howard at hobu.co> writes:
>> 
>>> IMO, NOAA seeking to put 12gb of specialized shift files into the CDN
>>> is *exactly* what we were hoping to have happen with the CDN
>>> project. They're simply too big to deliver via normal package, but the
>>> convenience the CDN can provide for users of these grids is
>>> substantial. I hope NOAA can close the loop with EPSG and participate
>>> in the OGC standardization effort that is ongoing with respect to
>>> deformation grids and their format as well.
>> 
>> Thanks for explaining.  I really meant simply that I did not understand
>> and was thus being careful not to opine if this was ok or not.
>
> OK for NOAA to do this or ok for the PROJ project to support it with
> its CDN? I don't know about the former either, but the past NOAA
> public transition path for this kind of data was to toss it into the
> ether in their own format and hope for implementation. I would hope
> supporting PROJ and modernizing their grid deliveries with Cloud
> Optimized GeoTIFF would be under their purview.

I meant ok for the proj project.  I would expect that NOAA would have
their own review processes to determine what's ok for them.  A 24x
increase in size is a big deal, but I'm glad to hear it's known to be
ok.

With US taxpayer hat on, I agree that publishing in open formats is in
the public interest.

> As for the CDN, we can put a lot of data up there before anyone is
> going to complain. The URL is purposefully the project's instead of an
> Amazon one to allow us to gracefully migrate in case AWS decides
> supporting us is no longer in their interest.

Thanks - that all sounds  great.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/ad12beba/attachment.sig>

From j1 at jimenezshaw.com  Wed Dec 16 08:04:18 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 16 Dec 2020 17:04:18 +0100
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <85CE0181-167F-40D9-8AA4-9FC1448DCB52@hobu.co>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <4509622.bTgNb2kcHa@even-i700> <rmiv9d2tywn.fsf@s1.lexort.com>
 <4EF6C9E1-5731-419E-BC5A-58B3D1453523@hobu.co> <rmiy2hxretq.fsf@s1.lexort.com>
 <85CE0181-167F-40D9-8AA4-9FC1448DCB52@hobu.co>
Message-ID: <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>

CDN is a nice place to store big projects. And it is actually great that
they want to use PROJ "format" to publish it. However, as Even and Greg
mentioned, there are other use cases where you need it locally in your
computer/device. If it is it planned to be in PROJ-data, maybe I should buy
a new hard drive ;)

If I am not wrong, NOAA (or other institution) is upgrading the American
horizontal and vertical CRSs in 2022. I could imagine that they will
publish the Tidal Grids referred to the new ones once published. Am I right?

I am curious which data is that, that takes 12GB. Can we see it somewhere?

Cheers,
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Wed, 16 Dec 2020 at 15:53, Howard Butler <howard at hobu.co> wrote:

>
>
> > On Dec 16, 2020, at 8:44 AM, Greg Troxel <gdt at lexort.com> wrote:
> >
> >
> > Howard Butler <howard at hobu.co> writes:
> >
> >> IMO, NOAA seeking to put 12gb of specialized shift files into the CDN
> >> is *exactly* what we were hoping to have happen with the CDN
> >> project. They're simply too big to deliver via normal package, but the
> >> convenience the CDN can provide for users of these grids is
> >> substantial. I hope NOAA can close the loop with EPSG and participate
> >> in the OGC standardization effort that is ongoing with respect to
> >> deformation grids and their format as well.
> >
> > Thanks for explaining.  I really meant simply that I did not understand
> > and was thus being careful not to opine if this was ok or not.
>
> OK for NOAA to do this or ok for the PROJ project to support it with its
> CDN? I don't know about the former either, but the past NOAA public
> transition path for this kind of data was to toss it into the ether in
> their own format and hope for implementation. I would hope supporting PROJ
> and modernizing their grid deliveries with Cloud Optimized GeoTIFF would be
> under their purview.
>
> As for the CDN, we can put a lot of data up there before anyone is going
> to complain. The URL is purposefully the project's instead of an Amazon one
> to allow us to gracefully migrate in case AWS decides supporting us is no
> longer in their interest.
>
> Howard
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/06d2d581/attachment.html>

From symphoni.bush at noaa.gov  Wed Dec 16 09:06:43 2020
From: symphoni.bush at noaa.gov (Symphoni Bush - NOAA Affiliate)
Date: Wed, 16 Dec 2020 12:06:43 -0500
Subject: [PROJ] PROJ.4 EOL Versions?
Message-ID: <CAA5fwB7KJRzkBzDnmDETRQzDnFhPZh4octv4_VJFhnv5e7u0ZQ@mail.gmail.com>

I am trying to find out if there are any end-of-life versions for PROJ.4,
and if so, when do these versions typically become EOL/unsupported? If this
information is publicly stored anywhere please let me know. Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/fdaf6fc3/attachment.html>

From jack.riley at noaa.gov  Wed Dec 16 16:10:03 2020
From: jack.riley at noaa.gov (Jack Riley - NOAA Federal)
Date: Wed, 16 Dec 2020 19:10:03 -0500
Subject: [PROJ] Alternate use model on EPSG v10+ datum ensembles
Message-ID: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>

Hi,

The discussion of datum ensembles in October ([PROJ] EPSG v10 update
status, [PROJ] Using latest realization of a datum ensemble?) talked about
the default use case and associated conundrum: Datum ensembles group
overlapping (1:1) realizations and proj is faced with sorting out the best
transform involving a CRS linked to an ensemble.

Under this default use case it makes sense that one should instead opt for
the specific datum from the ensemble if known (assuming it is also attached
to a CRS definition of its own), rather then the "generic" CRS-datum
ensemble construction that (may) result in less than optimal accuracy.

OK, so the alternate use model of datum ensembles I'd like to pursue is for
encapsulation of a set of realizations with extents that are mutually
exclusive.  For example, I'd like to register a vertical CRS for (say)
'NOAA Chart depth' with a datum height ensemble where the set of datum
members are realized within distinct extents. This vertical CRS/datum
ensemble would then be used to define a compound CRS (e.g., geog2D
NAD83(2011) + 'NOAA Chart depth'), and a coordinate operation would be
defined to transform to/from (reversible) between that and a geog3D CRS.
This transform involves one or more (if a multi-step operation) sets of
gridded transforms in a 1:1 relationship with the extents of the ensemble
members.  The idea being that proj would have to do the heavy lifting of
point-by-point spatial tests per the defined extents in the metadata.

Does this make sense and is it feasible?  The big savings here is to avoid
having to define distinct vertical CRSs plus the associated compound CRSs,
as well as the separate coordinate operations attached to each datum
member.  Not to mention alleviating the need for the user to identify and
partition data set conversions according to the individual extents. The
datum ensemble in question concerns NOAA VDatum which is comprised of
approximately 50 constituent datum members.  That's pretty much entirely a
consequence having to use regular gridding to define the transformations;
the resolution must be constrained in areas which involve complex
shoreline.  And we would would be looking at another set of defines for
'NOAA chart height' (more than a simple sign change; e.g., chart depth
typically on a MLLW datum, whereas chart height per a MHW datum).

There is one example in the v10 EPSG registry that demonstrates this
alternate use model definition (datum members with mutually-exclusive
extents), with vertical and compound CRSs, but no associated coordinate
operations defined as of yet:
Datum: British Isles height ensemble, EPSG Code 1288
https://epsg.org/datum_1288/British-Isles-height-ensemble.html
Vertical CRS: BI height, EPSG code 9451
https://epsg.org/crs_9451/BI-height.html
Compound CRS: ETRS89 + BI height, EPSG code 9452
https://epsg.org/crs_9452/ETRS89-BI-height.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/16de0347/attachment.html>

From brian.shaw at noaa.gov  Wed Dec 16 16:56:03 2020
From: brian.shaw at noaa.gov (Brian Shaw)
Date: Wed, 16 Dec 2020 17:56:03 -0700
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <4509622.bTgNb2kcHa@even-i700> <rmiv9d2tywn.fsf@s1.lexort.com>
 <4EF6C9E1-5731-419E-BC5A-58B3D1453523@hobu.co>
 <rmiy2hxretq.fsf@s1.lexort.com>
 <85CE0181-167F-40D9-8AA4-9FC1448DCB52@hobu.co>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
Message-ID: <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>

All

Just a little background about VDatum, it is a transformation tool 
developed collaboratively by several offices at NOAA including: the 
Center for Operational Oceanographic Products (CO-OPS) that do tidal 
datums, tides and currents; the National Geodetic Survey (NGS) that do 
the datums, geoids and transformations; and the Office of Coast Survey 
(OCS) that make the nautical charts, do bathymetric surveying and more. 
https://vdatum.noaa.gov/ <https://vdatum.noaa.gov/> NGS makes sure to 
include the most recent NGS transformations into both VDatum and the NGS 
Coordinate Conversion and Transformation Tool (NCAT). 
https://geodesy.noaa.gov/NCAT/ <https://geodesy.noaa.gov/NCAT/>

I have seen a couple questions and comments in this thread and I wanted 
to respond to them.

@ Howard - NGS is participating with several scientists including myself 
in the OGC meetings for the deformation grids and developing the GGXF.? 
We still need to work on getting all the NADCON 5 and probably the 
VERTCON 3 grids/transformations incorporated into EPSG.? We have also 
began working to try to provide our grids in GeoTiff formats? (currently 
xGEOID20 is the first one I believe) as well as working to get our tools 
using GeoTiff grids.? The long term plan is to use GGXF once developed 
and standardized but to work to implement GeoTiff until that time.

@ Greg - Our Chief Geodesist has been significantly involved with the 
ISO Geodetic Registry and I believe he has included all of the datum and 
transformation parameters and grids from NGS into the registry.? While 
EPSG is certainly the de facto standard I believe the desire is to have 
this registry be the official location for parameters sometime in the 
future.

@ Javier - You are correct that NGS is planning to modernize the NSRS 
(NAD 83, NAVD 88). The original plan was to update this by the end of 
2022 but with various delays in data collection and more we officially 
announced that it will be delayed. 
https://geodesy.noaa.gov/datums/newdatums/delayed-release.shtml 
<https://geodesy.noaa.gov/datums/newdatums/delayed-release.shtml>

If interested there are 3 Blueprint Documents that go into great detail 
about the upcoming changes.? We have been working on updating all of the 
documents and those updates should be available by the end of February 
as they are currently in review. We have been collaborating with the 
Canadians and actually just had a meeting with them earlier today.
https://geodesy.noaa.gov/datums/newdatums/policy.shtml 
<https://geodesy.noaa.gov/datums/newdatums/policy.shtml>

Please don't hesitate to email me with any questions.

Cheers
Brian


On 12/16/2020 9:04 AM, Javier Jimenez Shaw wrote:
> CDN is a nice place to store big projects. And it is actually great 
> that they want to use PROJ "format" to publish it. However, as Even 
> and Greg mentioned, there are other use cases where you need it 
> locally in your computer/device. If it is it planned to be in 
> PROJ-data, maybe I should buy a new hard drive ;)
>
> If I am not wrong, NOAA (or other institution) is upgrading the 
> American horizontal and vertical CRSs in 2022. I could imagine that 
> they will publish the Tidal Grids referred to the new ones once 
> published. Am I right?
>
> I am curious which data is that, that takes 12GB. Can we see it somewhere?
>
> Cheers,
> Javier
> .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Wed, 16 Dec 2020 at 15:53, Howard Butler <howard at hobu.co 
> <mailto:howard at hobu.co>> wrote:
>
>
>
>     > On Dec 16, 2020, at 8:44 AM, Greg Troxel <gdt at lexort.com
>     <mailto:gdt at lexort.com>> wrote:
>     >
>     >
>     > Howard Butler <howard at hobu.co <mailto:howard at hobu.co>> writes:
>     >
>     >> IMO, NOAA seeking to put 12gb of specialized shift files into
>     the CDN
>     >> is *exactly* what we were hoping to have happen with the CDN
>     >> project. They're simply too big to deliver via normal package,
>     but the
>     >> convenience the CDN can provide for users of these grids is
>     >> substantial. I hope NOAA can close the loop with EPSG and
>     participate
>     >> in the OGC standardization effort that is ongoing with respect to
>     >> deformation grids and their format as well.
>     >
>     > Thanks for explaining.? I really meant simply that I did not
>     understand
>     > and was thus being careful not to opine if this was ok or not.
>
>     OK for NOAA to do this or ok for the PROJ project to support it
>     with its CDN? I don't know about the former either, but the past
>     NOAA public transition path for this kind of data was to toss it
>     into the ether in their own format and hope for implementation. I
>     would hope supporting PROJ and modernizing their grid deliveries
>     with Cloud Optimized GeoTIFF would be under their purview.
>
>     As for the CDN, we can put a lot of data up there before anyone is
>     going to complain. The URL is purposefully the project's instead
>     of an Amazon one to allow us to gracefully migrate in case AWS
>     decides supporting us is no longer in their interest.
>
>     Howard
>
>     _______________________________________________
>     PROJ mailing list
>     PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/proj
>     <https://lists.osgeo.org/mailman/listinfo/proj>
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
*************************************
Brian Shaw
Rocky Mountain Regional Advisor (CO, MT, WY)
NOAA's National Geodetic Survey (NGS)
Cell Phone # 240-988-6363

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201216/22c1ff30/attachment.html>

From even.rouault at spatialys.com  Thu Dec 17 05:22:13 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 17 Dec 2020 14:22:13 +0100
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
 <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>
Message-ID: <2142273.Kn0TYnd2hv@even-i700>

> @ Greg - Our Chief Geodesist has been significantly involved with the
> ISO Geodetic Registry and I believe he has included all of the datum and
> transformation parameters and grids from NGS into the registry.  While
> EPSG is certainly the de facto standard I believe the desire is to have
> this registry be the official location for parameters sometime in the
> future.

>From our free software developer & user perspective, the ISO geodetic registry 
is no better than EPSG due to using quite similar terms of use than the EPSG 
one: https://geodetic.isotc211.org/terms
A true (and non custom!) open data license would make it a much more appealing 
alternative.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Thu Dec 17 05:53:05 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 17 Dec 2020 14:53:05 +0100
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <2142273.Kn0TYnd2hv@even-i700>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
 <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>
 <2142273.Kn0TYnd2hv@even-i700>
Message-ID: <1955f764-965e-c4fa-98f4-c6721b3df037@xs4all.nl>

On 12/17/20 2:22 PM, Even Rouault wrote:
> From our free software developer & user perspective, the ISO geodetic registry 
> is no better than EPSG due to using quite similar terms of use than the EPSG 
> one: https://geodetic.isotc211.org/terms
> A true (and non custom!) open data license would make it a much more appealing 
> alternative.

This cannot be seconded enough!

Limiting modification makes inclusion in open source projects problematic.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Thu Dec 17 05:54:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 17 Dec 2020 14:54:30 +0100
Subject: [PROJ] Alternate use model on EPSG v10+ datum ensembles
In-Reply-To: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
References: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
Message-ID: <1716514.Gf9KO2udga@even-i700>

Jack,

> There is one example in the v10 EPSG registry that demonstrates this
> alternate use model definition (datum members with mutually-exclusive
> extents), with vertical and compound CRSs, but no associated coordinate
> operations defined as of yet:
> Datum: British Isles height ensemble, EPSG Code 1288
> https://epsg.org/datum_1288/British-Isles-height-ensemble.html

That's a good point, but the use of a datum ensemble to model this is quite 
surprising to me. According to ISO-19111:2019, a datum ensemble is a "group of 
multiple realizations of the same terrestrial or vertical reference system 
that, for approximate spatial referencing purposes, are not significantly 
different". One consequence of that would seem that all members of a same 
ensemble should have the same extent (otherwise if you use a 'random' member 
and its extent is not compatible with your point of interest, it is 
significantly different...). I'll raise the matter to EPSG.

> This vertical CRS/datum
> ensemble would then be used to define a compound CRS (e.g., geog2D
> NAD83(2011) + 'NOAA Chart depth'), and a coordinate operation would be
> defined to transform to/from (reversible) between that and a geog3D CRS.
> This transform involves one or more (if a multi-step operation) sets of
> gridded transforms in a 1:1 relationship with the extents of the ensemble
> members.  The idea being that proj would have to do the heavy lifting of
> point-by-point spatial tests per the defined extents in the metadata.
> Does this make sense and is it feasible? 

For the case where it is a single step operation, you would have to define 
either one transformation for each grid (a bit like the records for GEOID99 
where CONUS was split in 8 grids), or have a single transformation pointing to 
a single file made of several grids (PROJ's GeoTIFF TIFF Grids allow this).
There's no method in EPSG where, for a given transformation, you can provide 
an arbitrary list of grids that wouldn't have the same extent (and that would 
make it inefficient for PROJ, or any other software, since you'll have to open 
each grid to figure out if its extent contains the point to transform)

I'm not sure if it makes sense to define the individual datums without 
associated CRS. As far as I can see in EPSG, there's just one case where this 
happens with the vertical datum EPSG:5107 that has no corresponding CRS, but 
that datum is deprecated. But the introduction of the datum ensemble concept 
might perhaps change this.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From martin.desruisseaux at geomatys.com  Thu Dec 17 05:59:01 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 17 Dec 2020 14:59:01 +0100
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <rmituslref1.fsf@s1.lexort.com>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <rmituslref1.fsf@s1.lexort.com>
Message-ID: <842916ee-4efb-bc12-abc3-22a64215ef9f@geomatys.com>

Le 16/12/2020 ? 15:52, Greg Troxel a ?crit?:

> It's not clear to me where on the path from concept to full 
> implemention the ISO registry is. At a quick glance it seems to 
> contain only a small fraction of what is in the EPSG database.
>
My current understanding is that software such as PROJ, Apache SIS, etc. 
would not be direct consumers of ISO registry. Instead, ISO registry 
would feed EPSG (or other) registry, which in turn feed PROJ (or other) 
software. My guess is that the rational for this indirection level is as 
below:

EPSG collects data from various national agencies, but this not always 
done by or under the supervision of agency staff. Errors may happen, and 
the EPG database has many deprecated entries (7% of all entries last 
time I checked ? not all because of errors) replaced by new entries when 
errors were found. By contrast, all entries in the ISO registry are 
either provided directly by national agency staffs, or reviewed by them 
before publication. From EPSG perspective, I think that the ISO registry 
fills a hole: it provides a central authoritative source where EPSG can 
refer instead than hunting themselves for data all around the world.

Last time I checked, I found a web interface and API for querying 
specific CRS, but nothing for downloading the whole database (contrarily 
to EPSG). It contributes to my impression that software interested in 
the whole database are not the primary target of ISO registry.

 ??? Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201217/e18050d3/attachment.html>

From gdt at lexort.com  Thu Dec 17 06:35:34 2020
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 17 Dec 2020 09:35:34 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <1955f764-965e-c4fa-98f4-c6721b3df037@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Thu, 17 Dec 2020 14:53:05 +0100")
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
 <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>
 <2142273.Kn0TYnd2hv@even-i700>
 <1955f764-965e-c4fa-98f4-c6721b3df037@xs4all.nl>
Message-ID: <rmizh2cpkjt.fsf@s1.lexort.com>


Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 12/17/20 2:22 PM, Even Rouault wrote:
>> From our free software developer & user perspective, the ISO geodetic registry 
>> is no better than EPSG due to using quite similar terms of use than the EPSG 
>> one: https://geodetic.isotc211.org/terms
>> A true (and non custom!) open data license would make it a much more appealing 
>> alternative.
>
> This cannot be seconded enough!
>
> Limiting modification makes inclusion in open source projects problematic.

Thirded!

In particular, there is currently an actual problem where EPSG has
transforms listed with uncertainties provided from various places, but
they are not consistent across the dataset.  Hence the approach of
finding a min-cost transformation path can get bad answers.  The fix
would be to increase a few transforms with too-low uncertainties, and
the non-free license makes this harder.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201217/f5388cda/attachment.sig>

From gdt at lexort.com  Thu Dec 17 06:53:55 2020
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 17 Dec 2020 09:53:55 -0500
Subject: [PROJ] Alternate use model on EPSG v10+ datum ensembles
In-Reply-To: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
 (Jack Riley's message of "Wed, 16 Dec 2020 19:10:03 -0500")
References: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
Message-ID: <rmiv9d0pjp8.fsf@s1.lexort.com>


Jack Riley - NOAA Federal via PROJ <proj at lists.osgeo.org> writes:

> OK, so the alternate use model of datum ensembles I'd like to pursue is for
> encapsulation of a set of realizations with extents that are mutually
> exclusive.  For example, I'd like to register a vertical CRS for (say)
> 'NOAA Chart depth' with a datum height ensemble where the set of datum
> members are realized within distinct extents. This vertical CRS/datum
> ensemble would then be used to define a compound CRS (e.g., geog2D
> NAD83(2011) + 'NOAA Chart depth'), and a coordinate operation would be
> defined to transform to/from (reversible) between that and a geog3D CRS.
> This transform involves one or more (if a multi-step operation) sets of
> gridded transforms in a 1:1 relationship with the extents of the ensemble
> members.  The idea being that proj would have to do the heavy lifting of
> point-by-point spatial tests per the defined extents in the metadata.

I can see why you would want to do that, but I don't think it fits the
datum ensemble concept.  It's logically separate, and you are basically
creating a CRS with a large extent that is defined to match a bunch of
other CRSes with smaller extent in each of those extents, rather than
aggregating successive refinements of the same thing.

So I would suggest this be "datum areal group" or some such words and
treated as a different concept.

Maybe I imagined it but I remember seeing something about this for NAD83
(2011, MA11, PA11) aaso being something that isn't really a datum
ensemble (even though there is an ensemble for each region).


This notion did get brought up in discussion of the problem of imagery
in TMS being in "WGS84", which even if one defuzzed to "current
realization" still isn't crust-fixed, and I think some wanted to at
least discuss having a world-wide areal group that aligned to
national (~crust-fixed) datums.  It didn't go very far, but I realize it
sort of fits your "chart datum" notion.)


> Does this make sense and is it feasible?  The big savings here is to avoid
> having to define distinct vertical CRSs plus the associated compound CRSs,
> as well as the separate coordinate operations attached to each datum
> member.  Not to mention alleviating the need for the user to identify and
> partition data set conversions according to the individual extents. The
> datum ensemble in question concerns NOAA VDatum which is comprised of
> approximately 50 constituent datum members.  That's pretty much entirely a
> consequence having to use regular gridding to define the transformations;
> the resolution must be constrained in areas which involve complex
> shoreline.  And we would would be looking at another set of defines for
> 'NOAA chart height' (more than a simple sign change; e.g., chart depth
> typically on a MLLW datum, whereas chart height per a MHW datum).

I don't think you get to avoid defining the  other CRSes.  Ensembles are
groups of defined CRSes.

I basically view datum ensembles as an accomodation to people that don't
really know what datum their data is in, not something to strive for.

Now, if NOAA would like to publish a "chart datum" vertical datum which
is defined as one datum, and has grid files that are based on area, and
a transform from NAVD88 to that or NAD83 HAE to that, that would seem
like an entirely reasonable approach.

Basically I'm suggesting that you put the complexity of the sub-datums
inside a datum you publish, rather than putting it on the outside world.

> There is one example in the v10 EPSG registry that demonstrates this
> alternate use model definition (datum members with mutually-exclusive
> extents), with vertical and compound CRSs, but no associated coordinate
> operations defined as of yet:
> Datum: British Isles height ensemble, EPSG Code 1288
> https://epsg.org/datum_1288/British-Isles-height-ensemble.html
> Vertical CRS: BI height, EPSG code 9451
> https://epsg.org/crs_9451/BI-height.html
> Compound CRS: ETRS89 + BI height, EPSG code 9452
> https://epsg.org/crs_9452/ETRS89-BI-height.html

It feels to me like the intent is that if anyone has data in any of
those and is trying to transform to HAE or EVRF/etc. then there is a
path from "this particular local orthometric height" to "british isles
height" to whatever.  I don't think there is any intent to have separate
transforms from each or at least I don't get it if so.  To me that's
what the 0.4m means - that set of datums is consistent at the 0.4m
level, and if you define transforms for each, they'll each have their
own accuracy.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201217/9be02c2f/attachment.sig>

From martin.desruisseaux at geomatys.com  Thu Dec 17 06:56:42 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Thu, 17 Dec 2020 15:56:42 +0100
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <1955f764-965e-c4fa-98f4-c6721b3df037@xs4all.nl>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
 <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>
 <2142273.Kn0TYnd2hv@even-i700>
 <1955f764-965e-c4fa-98f4-c6721b3df037@xs4all.nl>
Message-ID: <ff3fc27c-69c7-80db-5c04-119c65a71cdb@geomatys.com>

Le 17/12/2020 ? 14:53, Sebastiaan Couwenberg a ?crit?:

> On 12/17/20 2:22 PM, Even Rouault wrote:
>
>> From our free software developer & user perspective, the ISO geodetic 
>> registry is no better than EPSG due to using quite similar terms of 
>> use than the EPSG one: https://geodetic.isotc211.org/terms A true 
>> (and non custom!) open data license would make it a much more 
>> appealing alternative.
>>
> This cannot be seconded enough! Limiting modification makes inclusion 
> in open source projects problematic.
>
I see two aspects in the EPSG/ISO license:

  * A restriction on commercial use.
  * A restriction on modifications.

I agree that the restriction on commercial use is problematic. But the 
restriction on modifications is more debatable, as there is legitimate 
reasons to want to protect data or standard integrity. Greg gave a good 
example of case where ability to make modifications is desirable, but on 
the other hand there is also historical examples of damages caused by 
standards changed at project's will.?The concept of "Open standard" is 
debated at a larger scale than us, and may be something open source 
projects should adapt to:

    https://en.wikipedia.org/wiki/Open_standard

We may argue that the current reality is that EPSG license does not fit 
well in MIT-licensed project. But for making progress we need to not 
only express our point of view, but also understand their concerns and 
see how we could address them.

 ??? Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201217/e6962caa/attachment.html>

From gdt at lexort.com  Thu Dec 17 07:02:58 2020
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 17 Dec 2020 10:02:58 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <ff3fc27c-69c7-80db-5c04-119c65a71cdb@geomatys.com> (Martin
 Desruisseaux's message of "Thu, 17 Dec 2020 15:56:42 +0100")
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
 <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>
 <2142273.Kn0TYnd2hv@even-i700>
 <1955f764-965e-c4fa-98f4-c6721b3df037@xs4all.nl>
 <ff3fc27c-69c7-80db-5c04-119c65a71cdb@geomatys.com>
Message-ID: <rmimtycpja5.fsf@s1.lexort.com>


Martin Desruisseaux <martin.desruisseaux at geomatys.com> writes:

> I see two aspects in the EPSG/ISO license:
>
>  * A restriction on commercial use.
>  * A restriction on modifications.
>
> I agree that the restriction on commercial use is problematic. But the
> restriction on modifications is more debatable, as there is legitimate
> reasons to want to protect data or standard integrity. Greg gave a
> good example of case where ability to make modifications is desirable,
> but on the other hand there is also historical examples of damages
> caused by standards changed at project's will.?The concept of "Open
> standard" is debated at a larger scale than us, and may be something
> open source projects should adapt to:
>
>    https://en.wikipedia.org/wiki/Open_standard

But the EPSG database is not a standard in that sense.  A standard
describes a protocol, more or less.  The EPSG database is a set of
information.

> We may argue that the current reality is that EPSG license does not
> fit well in MIT-licensed project. But for making progress we need to
> not only express our point of view, but also understand their concerns
> and see how we could address them.

Their concerns are real and legitimate.   Currently I see the major
issue being the conflict between

  Transforms are added based on stated accuracy from external sources,
  and there is no notion that these errors are consistent.  Therefore it
  is a mistake to compare two errors from the EPSG dataset, or to add
  them.

  proj uses the database as if the errors can be compared and added.
  Mostly this works.


Perhaps proj should just maintain a lookaside database that is basically
a patch file, consulted at runtime, to use different errors when we find
that the EPSG ones don't work well for how proj uses the database.  That
doesn't resolve the Free Software concerns, but it does help the
practical problem.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201217/8f43251f/attachment-0001.sig>

From jack.riley at noaa.gov  Thu Dec 17 12:24:57 2020
From: jack.riley at noaa.gov (Jack Riley - NOAA Federal)
Date: Thu, 17 Dec 2020 15:24:57 -0500
Subject: [PROJ] Alternate use model on EPSG v10+ datum ensembles
In-Reply-To: <rmiv9d0pjp8.fsf@s1.lexort.com>
References: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
 <rmiv9d0pjp8.fsf@s1.lexort.com>
Message-ID: <CAOc6+p_ScY9BzX-9LLr--WgUe=Eso=5d_um3e1iTAy6+P-9dXQ@mail.gmail.com>

Thanks for the replies, Even and Greg.

The GEOID99 example helped me understand that in EPSG gridded data
transformation extents don't have to encompass the (larger) extents of the
source & target CRS.  So the "chart datum" realizations may be a singular
CRS/datum construct, and N transformations may be attached to that src/tgt
per tiled extents of gridded data therein.  Under that model, we will have
to segregate PROJ actions according to the spatial extent attributed to
each individual transform (similar to NAD83(HARN) to NAVD88 transformations
per the bounds of the various GEOID99 grids).  Regarding the single
transformation option: Can an EPSG transformation parameter point to a
GeoTIFF TIFF Grids model file containing several grids, and PROJ would
handle lookup/interpolation of the appropriate grid on-the-fly?  I'm not
aware of any multi-grid storage formats referenced by EPSG outside of NTV2,
but those nodes hold horizontal corrections for lat & lon, rather than
vertical shift values.


Even Rouault wrote:

> For the case where it is a single step operation, you would have to define
> either one transformation for each grid (a bit like the records for
> GEOID99
> where CONUS was split in 8 grids), or have a single transformation
> pointing to
> a single file made of several grids (PROJ's GeoTIFF TIFF Grids allow this).
> There's no method in EPSG where, for a given transformation, you can
> provide
> an arbitrary list of grids that wouldn't have the same extent (and that
> would
> make it inefficient for PROJ, or any other software, since you'll have to
> open
> each grid to figure out if its extent contains the point to transform)
>
> I'm not sure if it makes sense to define the individual datums without
> associated CRS. As far as I can see in EPSG, there's just one case where
> this
> happens with the vertical datum EPSG:5107 that has no corresponding CRS,
> but
> that datum is deprecated. But the introduction of the datum ensemble
> concept
> might perhaps change this.


Greg Troxel wrote:

> I can see why you would want to do that, but I don't think it fits the
> datum ensemble concept.  It's logically separate, and you are basically
> creating a CRS with a large extent that is defined to match a bunch of
> other CRSes with smaller extent in each of those extents, rather than
> aggregating successive refinements of the same thing.
> ...
> I basically view datum ensembles as an accomodation to people that don't
> really know what datum their data is in, not something to strive for.
>
> Now, if NOAA would like to publish a "chart datum" vertical datum which
> is defined as one datum, and has grid files that are based on area, and
> a transform from NAVD88 to that or NAD83 HAE to that, that would seem
> like an entirely reasonable approach.
>
> Basically I'm suggesting that you put the complexity of the sub-datums
> inside a datum you publish, rather than putting it on the outside world.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201217/13c5aa1f/attachment.html>

From even.rouault at spatialys.com  Thu Dec 17 12:51:10 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 17 Dec 2020 21:51:10 +0100
Subject: [PROJ] Alternate use model on EPSG v10+ datum ensembles
In-Reply-To: <CAOc6+p_ScY9BzX-9LLr--WgUe=Eso=5d_um3e1iTAy6+P-9dXQ@mail.gmail.com>
References: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
 <rmiv9d0pjp8.fsf@s1.lexort.com>
 <CAOc6+p_ScY9BzX-9LLr--WgUe=Eso=5d_um3e1iTAy6+P-9dXQ@mail.gmail.com>
Message-ID: <4250084.Dv4k9l8KHN@even-i700>

> The GEOID99 example helped me understand that in EPSG gridded data
> transformation extents don't have to encompass the (larger) extents of the
> source & target CRS.  So the "chart datum" realizations may be a singular
> CRS/datum construct, and N transformations may be attached to that src/tgt
> per tiled extents of gridded data therein.

That would definitely work. One point of attention though is that PROJ only 
considers the bounding box of the transformation, and not the potentially more 
complex polygonal shape. So if the grids have overlaps, they'd better have 
compatible values otherwise the one that will be picked up by PROJ will be 
"random" (or more precisely, it will be deterministic but hardly predictible 
for mortals) if they have the same declared accuracy.

> Can an EPSG transformation parameter point to a
> GeoTIFF TIFF Grids model file containing several grids, and PROJ would
> handle lookup/interpolation of the appropriate grid on-the-fly?

Yes that would work. (There's no declared method yet in EPSG for a TIFF based 
grid AFAICS, but that should be just a matter of allocating a method number 
for it.)

> I'm not
> aware of any multi-grid storage formats referenced by EPSG outside of NTV2,
> but those nodes hold horizontal corrections for lat & lon, rather than
> vertical shift values.

The PROJ vgridshift operation should work fine with GeoTIFF grids made of 
several base grids. The NTV2 mechanism of several base grids and nested 
subgrids has been ported to the GeoTIFF format and for all currently handled 
grid-based transformation.

To quickly create a composed grid from several grids (GDAL >= 3.0):
gdal_translate first_grid supergrid.tif
gdal_translate second_grid supergrid.tif -co APPEND_SUBDATASET=YES

To make it cloud-friendly, see
https://github.com/OSGeo/PROJ-data/tree/master/grid_tools#optimize-an-existing-geotiff-file

And then use it with
cct +proj=vgridshift +grids=supergrid.tif


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From eric.g.younkin at noaa.gov  Thu Dec 17 13:36:15 2020
From: eric.g.younkin at noaa.gov (Eric Younkin - NOAA Federal)
Date: Thu, 17 Dec 2020 16:36:15 -0500
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <2142273.Kn0TYnd2hv@even-i700>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
 <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov> <2142273.Kn0TYnd2hv@even-i700>
Message-ID: <CAFe6qKhg=UqEThm7_M59xL3Z2KDJLqMBZiOyJ3eyrfMXK9CosA@mail.gmail.com>

Hello all,

I wanted to make sure to chime back in here (in case we go silent while
discussing all of this internally) to thank all of you for your input!  We
are currently investigating some of the options brought up in the
"Alternate use model on EPSG v10+ datum ensembles" thread for publishing
our grids.  We haven't settled on a way forward just yet, but I think we
have much more information than we started with.

Very excited to be making progress on this!

Eric

On Thu, Dec 17, 2020 at 8:22 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> > @ Greg - Our Chief Geodesist has been significantly involved with the
> > ISO Geodetic Registry and I believe he has included all of the datum and
> > transformation parameters and grids from NGS into the registry.  While
> > EPSG is certainly the de facto standard I believe the desire is to have
> > this registry be the official location for parameters sometime in the
> > future.
>
> From our free software developer & user perspective, the ISO geodetic
> registry
> is no better than EPSG due to using quite similar terms of use than the
> EPSG
> one: https://geodetic.isotc211.org/terms
> A true (and non custom!) open data license would make it a much more
> appealing
> alternative.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
Eric Younkin
Physical Scientist
NOAA OCS, Hydrographic Systems and Technology Branch
1315 East-West Highway
N/CS11, Room 6604
Silver Spring, MD 20910
Office: 240-847-8208
Cell: 828-331-8197
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201217/56d0414b/attachment.html>

From even.rouault at spatialys.com  Thu Dec 17 14:00:53 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 17 Dec 2020 23:00:53 +0100
Subject: [PROJ] Alternate use model on EPSG v10+ datum ensembles
In-Reply-To: <1716514.Gf9KO2udga@even-i700>
References: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
 <1716514.Gf9KO2udga@even-i700>
Message-ID: <3849040.btZe7EgBoE@even-i700>

> That's a good point, but the use of a datum ensemble to model this is quite
> surprising to me. According to ISO-19111:2019, a datum ensemble is a "group
> of multiple realizations of the same terrestrial or vertical reference
> system that, for approximate spatial referencing purposes, are not
> significantly different". One consequence of that would seem that all
> members of a same ensemble should have the same extent (otherwise if you
> use a 'random' member and its extent is not compatible with your point of
> interest, it is significantly different...). I'll raise the matter to EPSG.

Just got a very comprehensive answer from Roger Lott, from IOGP:
"""
The ISO 19111 definition "group of multiple realizations of the same
terrestrial or vertical reference system that, for approximate spatial
referencing purposes, are not significantly different" needs to be
understood in the context of significant changes to geodetic practice for
realizing height systems in the past few years.

Historically, vertical CRSs were realized by levelling networks, with the
measurements observed through optical instruments ('levels') with ability to
measure over quite short distances. The levelling networks were unable to
cross wide stretches of water. As a consequence most islands had their own
vertical datum (one or more local tide gauges) and vertical CRS. In modern
geodesy it is possible to get levels through satellite-based techniques.
These satellite-based techniques are very significantly more cost effective
than the old levelling networks. As a consequence, there is a move to
redefine the old levelling networks through a satellite-based solution. The
satellite-based solution is not constrained by wide stretches of water. So
one satellite-based model can be used to define several adjacent island
datums.

This is what has happened in the British Isles. One geoid model covers all
of the islands and now defines all of what were once separate, isolated,
vertical datums. But it is complicated because of the historic horizontal
CRSs of the island of Ireland, and the single geoid model is distributed in
two different files, one grid for all Ireland (Republic and Northern Island
which is part of the UK) and another grid for the rest of the UK and the
Isle of Man. Because of the existence of this single geoid model, the three
national mapping authorities covering the British Isles now consider the old
datums to be part of a single conceptual vertical reference system.

Something similar has happened in Australia. Historically, Australia Height
Datum of 1971 covered only the mainland, with separate height datums on
Tasmania, Cocos Islands and Christmas Island. These are all now considered
to be part of AHD. In this case the geoid model data is went through two
phases of consolidation - first mainland and Tasmania were integrated
(AUSGeoid09) and in 2018 through AUSGeoid2020 Christmas Island and Cocos
Island was added. 

So what is the difference between what has happened in British Isles
compared to Australia? Technically, they are the same - independent
levelling networks replaced by realization through a geoid model. But the
national authorities have taken different approaches to naming. In
Australia, Australia Height Datum (Tasmania) is no longer referred to as
such; since its realization changed from through a levelling network to be
through a geoid model, it is just integrated into the AHD. But in the
British Isles, the names of the old networks are retained. So we have
Ordnance Datum (Newlyn),  Ordnance Datum (Orkney), Ordnance Datum
(Stornoway), etc. (Here is another idiosyncrasy: Newlyn Datum is now
referred to as Ordnance Datum (Newlyn) but Stornaway Datum is still referred
to as that name, despite it legally being Ordnance Datum for the Outer
Hebrides islands).

Australia has a second vertical CRS (Australian Vertical Working Surface).
This will be updated from time to time as new gravity data is incorporated
into a new geoid model.  There is an argument for having an ensemble for
these various AVWS realizations (although Australia will probably not do
this, I expect them to keep the same datum and CRS and replace the geoid
model defining it). AHD is onshore only, whilst AVWS covers onshore and
offshore. The onshore areas are common. But AHD and AVWS can never be part
of the same ensemble, not because they do not cover the same area but
because they are realizations of different conceptual vertical reference
systems (VRS - not to be confused with vertical CRS).

And why no transformations associated with the British Isles vertical
ensemble? There is a series of (geoid model) transformations to each of the
separate islands, but they all use the same model. They are documented this
way to reflect national authority documentation. The same is true for Spain
and the Canary islands. Why a vertical ensemble for the British Isles and
not for the Canary islands? Because the national mapping agencies for the
British Isles requested it (to simplify teir product delivery), the national
mapping agency for Spain has not done so. 

So the vertical case is somewhat different to the horizontal / geometric 3D
case. But both reflect geodetic techniques and practices, not extents. There
is no requirement for members of an ensemble to have the same extent. The
requirement is for ensemble members to be realizations of the same concept.

As far as Proj issue 9980 [note from E. Rouault: issue 9980 is this discussion 
thread about NOAA VDatum] is concerned, I would be very wary about using the
ensemble construct to include a mixture of onshore geodetic vertical datums
and offshore tidal datums - these have different conceptual reference
systems. One models the geoid, the other a tidal surface. Although the geoid
is a surface which best fits MSL, they are not the same or even parallel
with each other.

Datums without CRS. In the vertical, here we have a terminology problem.
Very few people working in the vertical domain use the term 'CRS'.
Colloquially 'Datum' is often used without distinction between (i) an origin
location, (ii) a surface promulgated away from the origin, and (iii) height
or depth coordinates referenced to the surface. But in terms of the ISO
19111 data model, all gravity-related heights and depths can only be
referenced to a CRS, not a datum. There is no coordinate system in a datum.

Why does EPSG have a datum (5107) and no associated CRS? Once upon a time
there was a vertical CRS, 5707, which was associated with datum 5107. Both
were invalidated in 1997. That was before EPSG had introduced its
deprecation policy of never removing data, even if invalid. At that time, in
general invalid data was removed from the Dataset. This is what happened to
CRS 5707. Datum 5107 was retained, because GeoTIFFv1.0 (inappropriately)
referred to EPSG datum codes. Some time later, CRS code 5707 came to be
reused for totally unrelated data (the fact that old use and new use both
were French is coincidence). Our registry software automatically assigns
codes, and it has no record of codes that were deleted prior to the
introduction of our deprecation policy in 2001.
"""

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jack.riley at noaa.gov  Fri Dec 18 06:26:05 2020
From: jack.riley at noaa.gov (Jack Riley - NOAA Federal)
Date: Fri, 18 Dec 2020 09:26:05 -0500
Subject: [PROJ] Alternate use model on EPSG v10+ datum ensembles
In-Reply-To: <3849040.btZe7EgBoE@even-i700>
References: <CAOc6+p_nvg8s_mD54+VWChNr0uPOEgE6DQxiz=d5Zfo-a50mTw@mail.gmail.com>
 <1716514.Gf9KO2udga@even-i700> <3849040.btZe7EgBoE@even-i700>
Message-ID: <CAOc6+p9dZw8joaTGpTqQGM8pzJEhc-Ni7NXUOTqWxBxZA=AuQQ@mail.gmail.com>

>
> Just got a very comprehensive answer from Roger Lott, from IOGP:
> ---snip---
> As far as Proj issue 9980 [note from E. Rouault: issue 9980 is this
> discussion
> thread about NOAA VDatum] is concerned, I would be very wary about using
> the
> ensemble construct to include a mixture of onshore geodetic vertical datums
> and offshore tidal datums - these have different conceptual reference
> systems. One models the geoid, the other a tidal surface. Although the
> geoid
> is a surface which best fits MSL, they are not the same or even parallel
> with each other.
>

Quick point of clarification: In the NOAA VDatum we junction the onshore
geodetic vertical datum and offshore tidal datum through a *local* mean sea
surface (LMSL) construction.  This LMSL tidal surface represents mean
oceanographic topography computed over some epoch, and is modeled as a grid
of offsets relative to the geoid (height) realization.  Heights at the
tidal datums of interest (e.g., Mean High Water, Mean Lower Low Water,
etc.) are modeled in turn as grids relative to the LMSL.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201218/28fe90b7/attachment-0001.html>

From j1 at jimenezshaw.com  Sat Dec 19 07:44:37 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sat, 19 Dec 2020 16:44:37 +0100
Subject: [PROJ] extending proj.db with another db file
Message-ID: <CADRrdKtnt7kJfQaks1_69gER8LT42X8TaoiRSW3=ZwhMstwp9A@mail.gmail.com>

Hi

I think I read about this somewhere, but I am not able to find it.
I would like to extend proj.db with some data (for instance geoid models in
customizations.sql, grid transformation in grid_transformation_custom.sql).
However I don't want to modify proj.db, but extend it with another sqlite
file(s). Is that possible?

Thanks

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201219/c22d0937/attachment.html>

From even.rouault at spatialys.com  Sat Dec 19 08:25:51 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 19 Dec 2020 17:25:51 +0100
Subject: [PROJ] extending proj.db with another db file
In-Reply-To: <CADRrdKtnt7kJfQaks1_69gER8LT42X8TaoiRSW3=ZwhMstwp9A@mail.gmail.com>
References: <CADRrdKtnt7kJfQaks1_69gER8LT42X8TaoiRSW3=ZwhMstwp9A@mail.gmail.com>
Message-ID: <2791553.QBRPGcDQ19@even-i700>

On samedi 19 d?cembre 2020 16:44:37 CET Javier Jimenez Shaw wrote:
> Hi
> 
> I think I read about this somewhere, but I am not able to find it.
> I would like to extend proj.db with some data (for instance geoid models in
> customizations.sql, grid transformation in grid_transformation_custom.sql).
> However I don't want to modify proj.db, but extend it with another sqlite
> file(s). Is that possible?

Yes, although I don't think this has been exercised beyond unit tests.

See the auxDbPaths argument of proj_context_set_database_path()
and attachExtraDatabases_auxiliary() in test/unit/test_factory.cpp

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Jochem.Lesparre at kadaster.nl  Mon Dec 21 07:32:59 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 21 Dec 2020 15:32:59 +0000
Subject: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN
In-Reply-To: <ff3fc27c-69c7-80db-5c04-119c65a71cdb@geomatys.com>
References: <CAFe6qKga5wmtPUAMp7utjb=Cgr_SpfG7ViznrCMxoAFpTZoouw@mail.gmail.com>
 <CADRrdKtNs1tPCukxq28HA8Vs3F03E3A5e3q783v18gMUS1enrw@mail.gmail.com>
 <6c93730f-920b-37cd-cd64-64f41fc5a539@noaa.gov>
 <2142273.Kn0TYnd2hv@even-i700>
 <1955f764-965e-c4fa-98f4-c6721b3df037@xs4all.nl>
 <ff3fc27c-69c7-80db-5c04-119c65a71cdb@geomatys.com>
Message-ID: <AM0P192MB0482031E79500C08C015CBECEFC00@AM0P192MB0482.EURP192.PROD.OUTLOOK.COM>

I agree with Martin Desruisseaux that there are good reasons to want to restrict modifications in grid files. From a national geodetic infrastructure agency point of view, I feel uncomfortable with allowing users to alter the content of the grid shift files. For the moment we do allow modification however, to promote the distribution and use of the official transformation. In an attempt to prevent users from altering the grid shift files or other parts of the transformation, we made the name of the official transformation a registered trademark. We only allow the use of this trademark after written approval, and only if the correct transformation is used. To check the correctness of transformations we created a transformation validation website [1]. Here one can download a dataset with 10000 points, transform these with a method of choice and upload the result. The transformation validation website will then give the percentage of points transformed correctly within 1 mm.

Regards, Jochem
Netherlands Partnership Geodetic Infrastructure (NSGI)

[1] https://www.nsgi.nl/geodetische-infrastructuur/producten/programma-rdnaptrans/validatieservice

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Martin Desruisseaux
Sent: donderdag 17 december 2020 15:57
To: proj at lists.osgeo.org
Subject: Re: [PROJ] NOAA VDatum Tidal Grids and PROJ CDN


Le 17/12/2020 ? 14:53, Sebastiaan Couwenberg a ?crit :

On 12/17/20 2:22 PM, Even Rouault wrote:

From our free software developer & user perspective, the ISO geodetic registry is no better than EPSG due to using quite similar terms of use than the EPSG one: https://geodetic.isotc211.org/terms A true (and non custom!) open data license would make it a much more appealing alternative.

This cannot be seconded enough! Limiting modification makes inclusion in open source projects problematic.

I see two aspects in the EPSG/ISO license:

  *   A restriction on commercial use.
  *   A restriction on modifications.

I agree that the restriction on commercial use is problematic. But the restriction on modifications is more debatable, as there is legitimate reasons to want to protect data or standard integrity. Greg gave a good example of case where ability to make modifications is desirable, but on the other hand there is also historical examples of damages caused by standards changed at project's will. The concept of "Open standard" is debated at a larger scale than us, and may be something open source projects should adapt to:

https://en.wikipedia.org/wiki/Open_standard

We may argue that the current reality is that EPSG license does not fit well in MIT-licensed project. But for making progress we need to not only express our point of view, but also understand their concerns and see how we could address them.

    Martin




Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201221/4d65ac7f/attachment.html>

From kristianevers at gmail.com  Sat Dec 26 11:19:27 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Sat, 26 Dec 2020 20:19:27 +0100
Subject: [PROJ] PROJ 7.2.1RC1 and PROJ-data 1.4RC1
Message-ID: <829B5671-17C2-46D3-8C25-1E3BF338070C@gmail.com>

All,

I have prepared release candidates for PROJ 7.2.1 and PROJ-data 1.4. Links below.


The PROJ release candidate includes a few updates to the database contents as well as a bunch
of bug fixes. See the release notes below.
The PROJ-data release candidate includes two new grid files, au_ga_AGQG_20191107.tif
and eu_nkg_nkgrf2017vel.tif, that are used in new transformations added to PROJ.

Download the two release candidates here:

http://download.osgeo.org/proj/proj-7.2.1RC1.tar.gz
http://download.osgeo.org/proj/proj-7.2.1RC1.zip

http://download.osgeo.org/proj/proj-data-1.4RC1.tar.gz
http://download.osgeo.org/proj/proj-data-1.4RC1.zip

As usual everyone who uses PROJ is encouraged to try out the release candidates and report
back their experiences either here on the mailing list or in the issue tracker on GitHub.

/Kristian

??????????????????????????????????????????????????????


7.2.1 Release Notes
-------------------

 Updates
 -------

 o Add metadata with the version number of the database layout (#2474)

 o Split coordinateoperation.cpp and test_operation.cpp in several parts (#2484)

 o Update to EPSG v10.008 (#2490)

 o Added the NKG 2008 and 2020 transformations in proj.db (#2495)

 Bug fixes
 ---------

 o Set CURL_ENABLED definition on projinfo build (#2405)

 o createBoundCRSToWGS84IfPossible(): make it return same result with a CRS
   built from EPSG code or WKT1 (#2412)

 o WKT2 parsing: several fixes related to map projection parameter units (#2428)

 o createOperation(): make it work properly when one of the CRS is a BoundCRS of
   a DerivedGeographicCRS (+proj=ob_tran +o_proj=lonlat +towgs84=....) (#2441)

 o WKT parsing: fix ingestion of WKT with a Geocentric CRS as the base of the
   projected CRS (#2443)

 o GeographicCRS::_isEquivalentTo(EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS):
   make it work when comparing easting,northing,up and northing,easting,up (#2446)

 o createOperation(): add a ballpark vertical transformation when dealing
   with GEOIDMODEL[] (#2449)

 o Use same arguments to printf format string for both radians and degrees in
   output by cct (#2453)

 o PRIMEM WKT handling: fixes on import for 'sexagesimal DMS' or from WKT1:GDAL/ESRI
   when GEOGCS UNIT != Degree; morph to ESRI the PRIMEM name on export (#2455)

 o createObjectsFromName(): in exact match, make looking for 'ETRS89 / UTM zone 32N'
   return only the exact match (#2462)

 o Inverse tmerc spherical: fix wrong sign of latitude when lat_0 is used (#2469)

 o Add option to allow export of Geographic/Projected 3D CRS in WKT1_GDAL (#2470)

 o Fix building proj.db with SQLite built with -DSQLITE_DQS=0 (#2480)

 o Include JSON Schema files in CMake builds (#2485)

 o createOperations(): fix inconsistent chaining exception when transforming from BoundCRS of projected CRS based on NTF Paris to BoundCRS of geog CRS NTF Paris (#2486)

From Roger.Bivand at nhh.no  Mon Dec 28 01:18:15 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 28 Dec 2020 10:18:15 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
Message-ID: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>

News item:

createOperation(): make it work properly when one of the CRS is a BoundCRS 
of a DerivedGeographicCRS (+proj=ob_tran +o_proj=lonlat +towgs84=....) 
(#2441)

appear to break:

(crds <- matrix(data=c(9.05, 48.52), ncol=2))
(a <- project(crds, paste("+proj=ob_tran +o_proj=longlat",
  "+o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs"),
   use_ob_tran=TRUE, verbose=TRUE))
stopifnot(isTRUE(all.equal(a, matrix(c(-5.917698, -1.87195), ncol=2),
   tolerance=.Machine$double.eps ^ 0.25)))

completely in the R rgdal package. ob_tran has always needed special 
casing, because of the reverse invert direction, but this change is a 
major regression. The operation on input 9.05 48.52 should return 
-5.917698 -1.87195 but now chooses coordOp: +proj=noop +ellps=GRS80. In
  7.2.0, the chosen coordOp is (and probably should be):

+proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv 
+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 
+ellps=sphere +step +proj=unitconvert +xy_in=rad +xy_out=deg

The NEWS item does not lead one to expect this regression.

Hope some light can be thrown on this and that release will not be 
rushed.

Best wishes,

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From kristianevers at gmail.com  Mon Dec 28 02:10:49 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 28 Dec 2020 11:10:49 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
Message-ID: <66D1F150-76E2-4F9B-BBAF-8F5CB038EF5F@gmail.com>

Roger,

Thanks for reporting this. We certainly need to find out what?s going on here. It is possible that this change shouldn?t have been included in 7.2.1.

I can?t fully understand what you are trying to do from your code snippet below, can you provide an example that only uses PROJ tools or API?

/Kristian

> On 28 Dec 2020, at 10:18, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> News item:
> 
> createOperation(): make it work properly when one of the CRS is a BoundCRS of a DerivedGeographicCRS (+proj=ob_tran +o_proj=lonlat +towgs84=....) (#2441)
> 
> appear to break:
> 
> (crds <- matrix(data=c(9.05, 48.52), ncol=2))
> (a <- project(crds, paste("+proj=ob_tran +o_proj=longlat",
> "+o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs"),
>  use_ob_tran=TRUE, verbose=TRUE))
> stopifnot(isTRUE(all.equal(a, matrix(c(-5.917698, -1.87195), ncol=2),
>  tolerance=.Machine$double.eps ^ 0.25)))
> 
> completely in the R rgdal package. ob_tran has always needed special casing, because of the reverse invert direction, but this change is a major regression. The operation on input 9.05 48.52 should return -5.917698 -1.87195 but now chooses coordOp: +proj=noop +ellps=GRS80. In
> 7.2.0, the chosen coordOp is (and probably should be):
> 
> +proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +step +proj=unitconvert +xy_in=rad +xy_out=deg
> 
> The NEWS item does not lead one to expect this regression.
> 
> Hope some light can be thrown on this and that release will not be rushed.
> 
> Best wishes,
> 
> Roger
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From kristianevers at gmail.com  Mon Dec 28 02:26:58 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 28 Dec 2020 11:26:58 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <66D1F150-76E2-4F9B-BBAF-8F5CB038EF5F@gmail.com>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <66D1F150-76E2-4F9B-BBAF-8F5CB038EF5F@gmail.com>
Message-ID: <7141469B-1691-41F5-98E6-3AD75986E78A@gmail.com>

I can reproduce the pipeline you expect using the below call to projinfo, but it is unclear to me if your code is doing something similar behind the scenes. That is, using the projstring as a CRS definition in a transformation from the ob_tran ?CRS? to a latlong CRS. Note that I?ve added ?+type=crs? arguments to both projstrings to let projinfo know that these are legacy PROJ.4 CRS definitions.


$ PROJ_LIB=./data/ ./src/projinfo -s "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +type=crs" -t "proj=longlat +type=crs" -o PROJ
Candidate operations found: 1
-------------------------------------
Operation No. 1:

unknown id, Inverse of unknown + Ballpark geographic offset from unknown to unknown, unknown accuracy, World, has ballpark transformation

PROJ string:
+proj=pipeline
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25
        +lon_0=180 +ellps=sphere
  +step +proj=unitconvert +xy_in=rad +xy_out=deg


/Kristian

> On 28 Dec 2020, at 11:10, Kristian Evers <kristianevers at gmail.com> wrote:
> 
> Roger,
> 
> Thanks for reporting this. We certainly need to find out what?s going on here. It is possible that this change shouldn?t have been included in 7.2.1.
> 
> I can?t fully understand what you are trying to do from your code snippet below, can you provide an example that only uses PROJ tools or API?
> 
> /Kristian
> 
>> On 28 Dec 2020, at 10:18, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>> 
>> News item:
>> 
>> createOperation(): make it work properly when one of the CRS is a BoundCRS of a DerivedGeographicCRS (+proj=ob_tran +o_proj=lonlat +towgs84=....) (#2441)
>> 
>> appear to break:
>> 
>> (crds <- matrix(data=c(9.05, 48.52), ncol=2))
>> (a <- project(crds, paste("+proj=ob_tran +o_proj=longlat",
>> "+o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs"),
>> use_ob_tran=TRUE, verbose=TRUE))
>> stopifnot(isTRUE(all.equal(a, matrix(c(-5.917698, -1.87195), ncol=2),
>> tolerance=.Machine$double.eps ^ 0.25)))
>> 
>> completely in the R rgdal package. ob_tran has always needed special casing, because of the reverse invert direction, but this change is a major regression. The operation on input 9.05 48.52 should return -5.917698 -1.87195 but now chooses coordOp: +proj=noop +ellps=GRS80. In
>> 7.2.0, the chosen coordOp is (and probably should be):
>> 
>> +proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +step +proj=unitconvert +xy_in=rad +xy_out=deg
>> 
>> The NEWS item does not lead one to expect this regression.
>> 
>> Hope some light can be thrown on this and that release will not be rushed.
>> 
>> Best wishes,
>> 
>> Roger
>> 
>> -- 
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From kristianevers at gmail.com  Mon Dec 28 02:33:50 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 28 Dec 2020 11:33:50 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <7141469B-1691-41F5-98E6-3AD75986E78A@gmail.com>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <66D1F150-76E2-4F9B-BBAF-8F5CB038EF5F@gmail.com>
 <7141469B-1691-41F5-98E6-3AD75986E78A@gmail.com>
Message-ID: <953F77DC-3E6D-424A-BBB9-2FDFE0EDD248@gmail.com>

? and with cs2cs I get your expected result:

$ echo 9.05 48.52 |PROJ_LIB=./data/ ./src/cs2cs -f %.6f "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs" +to "proj=longlat +type=crs"
-5.917698	-1.871950 0.000000

I reckon there?s a bit of fine-tuning needed in your test suite. My best guess is adding ?+type=crs? to the projstrings.

/Kristian

> On 28 Dec 2020, at 11:26, Kristian Evers <kristianevers at gmail.com> wrote:
> 
> I can reproduce the pipeline you expect using the below call to projinfo, but it is unclear to me if your code is doing something similar behind the scenes. That is, using the projstring as a CRS definition in a transformation from the ob_tran ?CRS? to a latlong CRS. Note that I?ve added ?+type=crs? arguments to both projstrings to let projinfo know that these are legacy PROJ.4 CRS definitions.
> 
> 
> $ PROJ_LIB=./data/ ./src/projinfo -s "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +type=crs" -t "proj=longlat +type=crs" -o PROJ
> Candidate operations found: 1
> -------------------------------------
> Operation No. 1:
> 
> unknown id, Inverse of unknown + Ballpark geographic offset from unknown to unknown, unknown accuracy, World, has ballpark transformation
> 
> PROJ string:
> +proj=pipeline
>  +step +proj=unitconvert +xy_in=deg +xy_out=rad
>  +step +inv +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25
>        +lon_0=180 +ellps=sphere
>  +step +proj=unitconvert +xy_in=rad +xy_out=deg
> 
> 
> /Kristian
> 
>> On 28 Dec 2020, at 11:10, Kristian Evers <kristianevers at gmail.com> wrote:
>> 
>> Roger,
>> 
>> Thanks for reporting this. We certainly need to find out what?s going on here. It is possible that this change shouldn?t have been included in 7.2.1.
>> 
>> I can?t fully understand what you are trying to do from your code snippet below, can you provide an example that only uses PROJ tools or API?
>> 
>> /Kristian
>> 
>>> On 28 Dec 2020, at 10:18, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>> 
>>> News item:
>>> 
>>> createOperation(): make it work properly when one of the CRS is a BoundCRS of a DerivedGeographicCRS (+proj=ob_tran +o_proj=lonlat +towgs84=....) (#2441)
>>> 
>>> appear to break:
>>> 
>>> (crds <- matrix(data=c(9.05, 48.52), ncol=2))
>>> (a <- project(crds, paste("+proj=ob_tran +o_proj=longlat",
>>> "+o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs"),
>>> use_ob_tran=TRUE, verbose=TRUE))
>>> stopifnot(isTRUE(all.equal(a, matrix(c(-5.917698, -1.87195), ncol=2),
>>> tolerance=.Machine$double.eps ^ 0.25)))
>>> 
>>> completely in the R rgdal package. ob_tran has always needed special casing, because of the reverse invert direction, but this change is a major regression. The operation on input 9.05 48.52 should return -5.917698 -1.87195 but now chooses coordOp: +proj=noop +ellps=GRS80. In
>>> 7.2.0, the chosen coordOp is (and probably should be):
>>> 
>>> +proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +step +proj=unitconvert +xy_in=rad +xy_out=deg
>>> 
>>> The NEWS item does not lead one to expect this regression.
>>> 
>>> Hope some light can be thrown on this and that release will not be rushed.
>>> 
>>> Best wishes,
>>> 
>>> Roger
>>> 
>>> -- 
>>> Roger Bivand
>>> Department of Economics, Norwegian School of Economics,
>>> Helleveien 30, N-5045 Bergen, Norway.
>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>> https://orcid.org/0000-0003-2392-6140
>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
>> 
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From Roger.Bivand at nhh.no  Mon Dec 28 03:41:20 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 28 Dec 2020 12:41:20 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <953F77DC-3E6D-424A-BBB9-2FDFE0EDD248@gmail.com>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <66D1F150-76E2-4F9B-BBAF-8F5CB038EF5F@gmail.com>
 <7141469B-1691-41F5-98E6-3AD75986E78A@gmail.com>
 <953F77DC-3E6D-424A-BBB9-2FDFE0EDD248@gmail.com>
Message-ID: <5e4e2da-c2cc-bcc2-eba7-206321fc4aeb@reclus.nhh.no>

On Mon, 28 Dec 2020, Kristian Evers wrote:

> ? and with cs2cs I get your expected result:
>
> $ echo 9.05 48.52 |PROJ_LIB=./data/ ./src/cs2cs -f %.6f "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs" +to "proj=longlat +type=crs"
> -5.917698	-1.871950 0.000000
>
> I reckon there?s a bit of fine-tuning needed in your test suite. My best 
> guess is adding ?+type=crs? to the projstrings.

Thanks for responding so quickly. The input to the rgdal C function 
project_ng_coordOp() is +proj=ob_tran +o_proj=longlat +o_lon_p=-162 \
+o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs, and inv=TRUE. 
In that function, the PROJ string is passed through proj_create(), then 
proj_crs_get_geodetic_crs() is used on that "target" to get the implied 
"source". If inv=TRUE, the coordOp is found by 
proj_create_crs_to_crs_from_pj() from "target" to "source". Why Proj4 
inverted ob_tran is beyond me, but it has always done so. The proj=noop 
ellps=GRS80 transformation is also found without inversion.

The values passed to proj_create_crs_to_crs_from_pj() with 7.2.1 are:

from (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 
+o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs

to (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 
+o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs

output (proj_pj_info(pj_transform).definition): proj=noop ellps=GRS80

output of proj_normalize_for_visualization() 
(proj_pj_info(pj_transform).definition): proj=noop ellps=GRS80

With 7.2.0:

from (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 
+o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs

to (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 
+o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs

output (proj_pj_info(pj_transform).definition): proj=pipeline step 
proj=unitconvert xy_in=deg xy_out=rad step inv proj=ob_tran o_proj=longlat 
o_lon_p=-162 o_lat_p=39.25 lon_0=180 ellps=sphere step proj=unitconvert 
xy_in=rad xy_out=deg

output of proj_normalize_for_visualization()
(proj_pj_info(pj_transform).definition): proj=pipeline step 
proj=unitconvert xy_in=deg xy_out=rad step inv proj=ob_tran o_proj=longlat 
o_lon_p=-162 o_lat_p=39.25 lon_0=180 ellps=sphere step proj=unitconvert 
xy_in=rad xy_out=deg

I don't see what has happened. I can grasp the stupidity of from and to 
being equal PROJ strings in 7.2.0 but giving the valid pipeline; I can 
also  see that  proj_crs_get_geodetic_crs() might be puzzled by ob_tran 
and not return something like +proj=longlat +ellps=sphere.

Any advice gratefully received.

Best wishes,

Roger

>
> /Kristian
>
>> On 28 Dec 2020, at 11:26, Kristian Evers <kristianevers at gmail.com> wrote:
>>
>> I can reproduce the pipeline you expect using the below call to projinfo, but it is unclear to me if your code is doing something similar behind the scenes. That is, using the projstring as a CRS definition in a transformation from the ob_tran ?CRS? to a latlong CRS. Note that I?ve added ?+type=crs? arguments to both projstrings to let projinfo know that these are legacy PROJ.4 CRS definitions.
>>
>>
>> $ PROJ_LIB=./data/ ./src/projinfo -s "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +type=crs" -t "proj=longlat +type=crs" -o PROJ
>> Candidate operations found: 1
>> -------------------------------------
>> Operation No. 1:
>>
>> unknown id, Inverse of unknown + Ballpark geographic offset from unknown to unknown, unknown accuracy, World, has ballpark transformation
>>
>> PROJ string:
>> +proj=pipeline
>>  +step +proj=unitconvert +xy_in=deg +xy_out=rad
>>  +step +inv +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25
>>        +lon_0=180 +ellps=sphere
>>  +step +proj=unitconvert +xy_in=rad +xy_out=deg
>>
>>
>> /Kristian
>>
>>> On 28 Dec 2020, at 11:10, Kristian Evers <kristianevers at gmail.com> wrote:
>>>
>>> Roger,
>>>
>>> Thanks for reporting this. We certainly need to find out what?s going on here. It is possible that this change shouldn?t have been included in 7.2.1.
>>>
>>> I can?t fully understand what you are trying to do from your code snippet below, can you provide an example that only uses PROJ tools or API?
>>>
>>> /Kristian
>>>
>>>> On 28 Dec 2020, at 10:18, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>
>>>> News item:
>>>>
>>>> createOperation(): make it work properly when one of the CRS is a BoundCRS of a DerivedGeographicCRS (+proj=ob_tran +o_proj=lonlat +towgs84=....) (#2441)
>>>>
>>>> appear to break:
>>>>
>>>> (crds <- matrix(data=c(9.05, 48.52), ncol=2))
>>>> (a <- project(crds, paste("+proj=ob_tran +o_proj=longlat",
>>>> "+o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs"),
>>>> use_ob_tran=TRUE, verbose=TRUE))
>>>> stopifnot(isTRUE(all.equal(a, matrix(c(-5.917698, -1.87195), ncol=2),
>>>> tolerance=.Machine$double.eps ^ 0.25)))
>>>>
>>>> completely in the R rgdal package. ob_tran has always needed special casing, because of the reverse invert direction, but this change is a major regression. The operation on input 9.05 48.52 should return -5.917698 -1.87195 but now chooses coordOp: +proj=noop +ellps=GRS80. In
>>>> 7.2.0, the chosen coordOp is (and probably should be):
>>>>
>>>> +proj=pipeline +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +inv +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +step +proj=unitconvert +xy_in=rad +xy_out=deg
>>>>
>>>> The NEWS item does not lead one to expect this regression.
>>>>
>>>> Hope some light can be thrown on this and that release will not be rushed.
>>>>
>>>> Best wishes,
>>>>
>>>> Roger
>>>>
>>>> --
>>>> Roger Bivand
>>>> Department of Economics, Norwegian School of Economics,
>>>> Helleveien 30, N-5045 Bergen, Norway.
>>>> voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
>>>> https://orcid.org/0000-0003-2392-6140
>>>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>>>> _______________________________________________
>>>> PROJ mailing list
>>>> PROJ at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/proj
>>>
>>> _______________________________________________
>>> PROJ mailing list
>>> PROJ at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/proj
>>
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From kristianevers at gmail.com  Mon Dec 28 04:25:15 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 28 Dec 2020 13:25:15 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <5e4e2da-c2cc-bcc2-eba7-206321fc4aeb@reclus.nhh.no>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <66D1F150-76E2-4F9B-BBAF-8F5CB038EF5F@gmail.com>
 <7141469B-1691-41F5-98E6-3AD75986E78A@gmail.com>
 <953F77DC-3E6D-424A-BBB9-2FDFE0EDD248@gmail.com>
 <5e4e2da-c2cc-bcc2-eba7-206321fc4aeb@reclus.nhh.no>
Message-ID: <74FBC01F-DBAE-4263-98E9-8267A1BBE198@gmail.com>

Thanks, I now understand what you are doing. Basically you are doing your best to emulate the legacy behaviour of PROJ.4. And that is the root cause of this problem. At least partially. That is not saying that it shouldn?t work, though. From the examples below it looks like 7.2.0 has two bugs that in conjunction returns the expected result. The two bugs are

1. proj_create_crs_to_crs_from_pj() does not return a +proj=noop transformation when two identical +proj=ob_tran CRS?s are used as source and target.
2. proj_crs_get_geodetic_crs() returning a CRS that is identical to the +proj=ob_tran CRS that it is fed. Should probably return +proj=latlong +ellps=sphere instead.

In 7.2.1 1) is fixed but not 2). I assume everything would work as expected if 2) is also fixed. Unfortunately I am not familiar enough with this part of the code base to provide a fix. Hopefully Even can find a bit of time to look into that.

For reference, the project_ng_coordOp() function can be seen here: https://github.com/cran/rgdal/blob/87d0d538a5f54681acb41de1b4647fc5a3e271f1/src/proj6.cpp#L656-L719 <https://github.com/cran/rgdal/blob/87d0d538a5f54681acb41de1b4647fc5a3e271f1/src/proj6.cpp#L656-L719>

/Kristian


> On 28 Dec 2020, at 12:41, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> On Mon, 28 Dec 2020, Kristian Evers wrote:
> 
>> ? and with cs2cs I get your expected result:
>> 
>> $ echo 9.05 48.52 |PROJ_LIB=./data/ ./src/cs2cs -f %.6f "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs" +to "proj=longlat +type=crs"
>> -5.917698	-1.871950 0.000000
>> 
>> I reckon there?s a bit of fine-tuning needed in your test suite. My best guess is adding ?+type=crs? to the projstrings.
> 
> Thanks for responding so quickly. The input to the rgdal C function project_ng_coordOp() is +proj=ob_tran +o_proj=longlat +o_lon_p=-162 \
> +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs, and inv=TRUE. In that function, the PROJ string is passed through proj_create(), then proj_crs_get_geodetic_crs() is used on that "target" to get the implied "source". If inv=TRUE, the coordOp is found by proj_create_crs_to_crs_from_pj() from "target" to "source". Why Proj4 inverted ob_tran is beyond me, but it has always done so. The proj=noop ellps=GRS80 transformation is also found without inversion.
> 
> The values passed to proj_create_crs_to_crs_from_pj() with 7.2.1 are:
> 
> from (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
> 
> to (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
> 
> output (proj_pj_info(pj_transform).definition): proj=noop ellps=GRS80
> 
> output of proj_normalize_for_visualization() (proj_pj_info(pj_transform).definition): proj=noop ellps=GRS80
> 
> With 7.2.0:
> 
> from (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
> 
> to (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
> 
> output (proj_pj_info(pj_transform).definition): proj=pipeline step proj=unitconvert xy_in=deg xy_out=rad step inv proj=ob_tran o_proj=longlat o_lon_p=-162 o_lat_p=39.25 lon_0=180 ellps=sphere step proj=unitconvert xy_in=rad xy_out=deg
> 
> output of proj_normalize_for_visualization()
> (proj_pj_info(pj_transform).definition): proj=pipeline step proj=unitconvert xy_in=deg xy_out=rad step inv proj=ob_tran o_proj=longlat o_lon_p=-162 o_lat_p=39.25 lon_0=180 ellps=sphere step proj=unitconvert xy_in=rad xy_out=deg
> 
> I don't see what has happened. I can grasp the stupidity of from and to being equal PROJ strings in 7.2.0 but giving the valid pipeline; I can also  see that  proj_crs_get_geodetic_crs() might be puzzled by ob_tran and not return something like +proj=longlat +ellps=sphere.
> 
> Any advice gratefully received.
> 
> Best wishes,
> 
> Roger

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201228/e560755c/attachment-0001.html>

From Roger.Bivand at nhh.no  Mon Dec 28 04:47:38 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 28 Dec 2020 13:47:38 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <74FBC01F-DBAE-4263-98E9-8267A1BBE198@gmail.com>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <66D1F150-76E2-4F9B-BBAF-8F5CB038EF5F@gmail.com>
 <7141469B-1691-41F5-98E6-3AD75986E78A@gmail.com>
 <953F77DC-3E6D-424A-BBB9-2FDFE0EDD248@gmail.com>
 <5e4e2da-c2cc-bcc2-eba7-206321fc4aeb@reclus.nhh.no>
 <74FBC01F-DBAE-4263-98E9-8267A1BBE198@gmail.com>
Message-ID: <96bc5b66-1770-b696-c662-2ba5255d467a@reclus.nhh.no>

Thanks!

On Mon, 28 Dec 2020, Kristian Evers wrote:

> Thanks, I now understand what you are doing. Basically you are doing 
> your best to emulate the legacy behaviour of PROJ.4. And that is the 
> root cause of this problem. At least partially. That is not saying that 
> it shouldn?t work, though. From the examples below it looks like 7.2.0 
> has two bugs that in conjunction returns the expected result. The two 
> bugs are
>
> 1. proj_create_crs_to_crs_from_pj() does not return a +proj=noop
>    transformation when two identical +proj=ob_tran CRS?s are used as
>    source and target.
> 2. proj_crs_get_geodetic_crs() returning a CRS that is identical to the
>    +proj=ob_tran CRS that it is fed. Should probably return
>    +proj=latlong +ellps=sphere instead.
>
> In 7.2.1 1) is fixed but not 2). I assume everything would work as 
> expected if 2) is also fixed. Unfortunately I am not familiar enough 
> with this part of the code base to provide a fix. Hopefully Even can 
> find a bit of time to look into that.

Yes, that seems a concise summary. And yes, the cases considered here were 
from legacy files, IIRC NetCDF weather/climate model output in ob_tran. If 
need be, I could force the proj_crs_get_geodetic_crs() output to be 
overridden in the > 7.2.0 case, but a proper fix would cover everybodies' 
needs.

>
> For reference, the project_ng_coordOp() function can be seen here: 
> https://github.com/cran/rgdal/blob/87d0d538a5f54681acb41de1b4647fc5a3e271f1/src/proj6.cpp#L656-L719 
> <https://github.com/cran/rgdal/blob/87d0d538a5f54681acb41de1b4647fc5a3e271f1/src/proj6.cpp#L656-L719>
>

The source of project_ng_coordOp() is at:

https://r-forge.r-project.org/scm/viewvc.php/pkg/src/proj6.cpp?root=rgdal&view=log

lines 767-855. The github version is an unauthorised copy and is pretty 
out of date (maintained on R-Forge/SVN because rgdal is maintenance-only, 
the sf package is the development route that we are trying to move users 
over to).

Best wishes,

Roger

> /Kristian
>
>
>> On 28 Dec 2020, at 12:41, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> On Mon, 28 Dec 2020, Kristian Evers wrote:
>>
>>> ? and with cs2cs I get your expected result:
>>>
>>> $ echo 9.05 48.52 |PROJ_LIB=./data/ ./src/cs2cs -f %.6f "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs" +to "proj=longlat +type=crs"
>>> -5.917698	-1.871950 0.000000
>>>
>>> I reckon there?s a bit of fine-tuning needed in your test suite. My best guess is adding ?+type=crs? to the projstrings.
>>
>> Thanks for responding so quickly. The input to the rgdal C function project_ng_coordOp() is +proj=ob_tran +o_proj=longlat +o_lon_p=-162 \
>> +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs, and inv=TRUE. In that function, the PROJ string is passed through proj_create(), then proj_crs_get_geodetic_crs() is used on that "target" to get the implied "source". If inv=TRUE, the coordOp is found by proj_create_crs_to_crs_from_pj() from "target" to "source". Why Proj4 inverted ob_tran is beyond me, but it has always done so. The proj=noop ellps=GRS80 transformation is also found without inversion.
>>
>> The values passed to proj_create_crs_to_crs_from_pj() with 7.2.1 are:
>>
>> from (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
>>
>> to (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
>>
>> output (proj_pj_info(pj_transform).definition): proj=noop ellps=GRS80
>>
>> output of proj_normalize_for_visualization() (proj_pj_info(pj_transform).definition): proj=noop ellps=GRS80
>>
>> With 7.2.0:
>>
>> from (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
>>
>> to (proj_as_proj_string()): +proj=ob_tran +o_proj=longlat +o_lon_p=-162 +o_lat_p=39.25 +lon_0=180 +ellps=sphere +no_defs +type=crs
>>
>> output (proj_pj_info(pj_transform).definition): proj=pipeline step proj=unitconvert xy_in=deg xy_out=rad step inv proj=ob_tran o_proj=longlat o_lon_p=-162 o_lat_p=39.25 lon_0=180 ellps=sphere step proj=unitconvert xy_in=rad xy_out=deg
>>
>> output of proj_normalize_for_visualization()
>> (proj_pj_info(pj_transform).definition): proj=pipeline step proj=unitconvert xy_in=deg xy_out=rad step inv proj=ob_tran o_proj=longlat o_lon_p=-162 o_lat_p=39.25 lon_0=180 ellps=sphere step proj=unitconvert xy_in=rad xy_out=deg
>>
>> I don't see what has happened. I can grasp the stupidity of from and to being equal PROJ strings in 7.2.0 but giving the valid pipeline; I can also  see that  proj_crs_get_geodetic_crs() might be puzzled by ob_tran and not return something like +proj=longlat +ellps=sphere.
>>
>> Any advice gratefully received.
>>
>> Best wishes,
>>
>> Roger
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Mon Dec 28 07:26:24 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 28 Dec 2020 16:26:24 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <74FBC01F-DBAE-4263-98E9-8267A1BBE198@gmail.com>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <5e4e2da-c2cc-bcc2-eba7-206321fc4aeb@reclus.nhh.no>
 <74FBC01F-DBAE-4263-98E9-8267A1BBE198@gmail.com>
Message-ID: <4232894.g9zOAnGjeP@even-i700>

On lundi 28 d?cembre 2020 13:25:15 CET Kristian Evers wrote:
> Thanks, I now understand what you are doing. Basically you are doing your
> best to emulate the legacy behaviour of PROJ.4. And that is the root cause
> of this problem. At least partially. That is not saying that it shouldn?t
> work, though. From the examples below it looks like 7.2.0 has two bugs that
> in conjunction returns the expected result. The two bugs are
> 
> 1. proj_create_crs_to_crs_from_pj() does not return a +proj=noop
> transformation when two identical +proj=ob_tran CRS?s are used as source
> and target. 2. proj_crs_get_geodetic_crs() returning a CRS that is
> identical to the +proj=ob_tran CRS that it is fed. Should probably return
> +proj=latlong +ellps=sphere instead.
> 
> In 7.2.1 1) is fixed but not 2). I assume everything would work as expected
> if 2) is also fixed.

2) is actually correct. "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 
+o_lat_p=39.25 +lon_0=180 +ellps=sphere +type=crs" is represented as a 
DerivedGeographicCRS, but a DerivedGeographicCRS is itself a GeographicCRS 
which is itself a GeodeticCRS.
For a derived CRS, you'd want to use proj_get_source_crs(). The function 
handle different situations, but for a derived CRS, it returns the base CRS, 
which is what you want here.
In the C API we're probably missing a function to easily know if a CRS is a 
derived CRS. So in that situation, you'd want to test the PROJ string for the 
presence of "+proj=ob_tran", and if proj_get_type() returns 
PJ_TYPE_GEOGRAPHIC_2D_CRS, conclude that it is a derived geographic CRS, on 
which you can call proj_get_source_crs()

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kristianevers at gmail.com  Mon Dec 28 07:41:09 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 28 Dec 2020 16:41:09 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <4232894.g9zOAnGjeP@even-i700>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <5e4e2da-c2cc-bcc2-eba7-206321fc4aeb@reclus.nhh.no>
 <74FBC01F-DBAE-4263-98E9-8267A1BBE198@gmail.com>
 <4232894.g9zOAnGjeP@even-i700>
Message-ID: <1564C906-9EA8-45BF-972A-F4A2D8EFDF70@gmail.com>

Thanks for clearing this up, Even. The workflow is a bit cumbersome but with the
knowledge you?ve provided here it should be possible for Roger to adapt the code
to work around this.

I agree that a function to determine if a CRS is derived would be a nice addition.

I guess this problem mostly shows up because ob_tran is a bit of a weird projection.
It is often the cause of problems. I wonder if it is time to get rid of it and replace the
functionality with simpler rotational transformation steps in a pipeline?

/Kristian

> On 28 Dec 2020, at 16:26, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On lundi 28 d?cembre 2020 13:25:15 CET Kristian Evers wrote:
>> Thanks, I now understand what you are doing. Basically you are doing your
>> best to emulate the legacy behaviour of PROJ.4. And that is the root cause
>> of this problem. At least partially. That is not saying that it shouldn?t
>> work, though. From the examples below it looks like 7.2.0 has two bugs that
>> in conjunction returns the expected result. The two bugs are
>> 
>> 1. proj_create_crs_to_crs_from_pj() does not return a +proj=noop
>> transformation when two identical +proj=ob_tran CRS?s are used as source
>> and target. 2. proj_crs_get_geodetic_crs() returning a CRS that is
>> identical to the +proj=ob_tran CRS that it is fed. Should probably return
>> +proj=latlong +ellps=sphere instead.
>> 
>> In 7.2.1 1) is fixed but not 2). I assume everything would work as expected
>> if 2) is also fixed.
> 
> 2) is actually correct. "+proj=ob_tran +o_proj=longlat +o_lon_p=-162 
> +o_lat_p=39.25 +lon_0=180 +ellps=sphere +type=crs" is represented as a 
> DerivedGeographicCRS, but a DerivedGeographicCRS is itself a GeographicCRS 
> which is itself a GeodeticCRS.
> For a derived CRS, you'd want to use proj_get_source_crs(). The function 
> handle different situations, but for a derived CRS, it returns the base CRS, 
> which is what you want here.
> In the C API we're probably missing a function to easily know if a CRS is a 
> derived CRS. So in that situation, you'd want to test the PROJ string for the 
> presence of "+proj=ob_tran", and if proj_get_type() returns 
> PJ_TYPE_GEOGRAPHIC_2D_CRS, conclude that it is a derived geographic CRS, on 
> which you can call proj_get_source_crs()
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From jgale at mathworks.com  Mon Dec 28 07:56:07 2020
From: jgale at mathworks.com (Jonathan Gale)
Date: Mon, 28 Dec 2020 15:56:07 +0000
Subject: [PROJ] WKT1 Vertical Perspective CRS regression
Message-ID: <DS7PR05MB7461696F4FEDD57FB1A242B3B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>

Hi PROJ list,

I'm not sure which list to report this since my initial issue was expressed through GDAL, but since the issue is reproducible in PROJ alone, I'll start here.  I've encountered a regression upgrading from PROJ 6.2.1 to 7.2.0 when using GDAL's GetEPSGGeogCS with the Vertical Perspective CRS expressed by ESRI: 54089. Based on an initial investigation, I think the issue is in WKT1:GDAL generation.

Using PROJ 6.2.1, I can do the following:

projinfo ESRI:54049 -o WKT1:GDAL
WKT1_GDAL:
PROJCS["World_Vertical_Perspective",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0],
        UNIT["Degree",0.0174532925199433]],
    PROJECTION["Vertical_Near_Side_Perspective"],
    PARAMETER["False_Easting",0],
    PARAMETER["False_Northing",0],
    PARAMETER["Longitude_Of_Center",0],
    PARAMETER["Latitude_Of_Center",0],
    PARAMETER["Height",35800000],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AXIS["Easting",EAST],
    AXIS["Northing",NORTH],
    AUTHORITY["ESRI","54049"]]

But in PROJ 7.2.0, I get the following:

projinfo ESRI:54049 -o WKT1:GDAL
WKT1:GDAL string:
Error when exporting to WKT1:GDAL: Unsupported conversion method: Vertical Perspective


I'm aware of release notes for GDAL that impacted Vertical Perspective (and I haven't found any corresponding in PROJ), but I suspect the GDAL issue is rooted in PROJ too.


Thanks,
Jonathan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201228/df0191fa/attachment-0001.html>

From even.rouault at spatialys.com  Mon Dec 28 08:11:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 28 Dec 2020 17:11:16 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <1564C906-9EA8-45BF-972A-F4A2D8EFDF70@gmail.com>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <4232894.g9zOAnGjeP@even-i700>
 <1564C906-9EA8-45BF-972A-F4A2D8EFDF70@gmail.com>
Message-ID: <2256799.2zrEC8lXVR@even-i700>

On lundi 28 d?cembre 2020 16:41:09 CET Kristian Evers wrote:
> Thanks for clearing this up, Even. The workflow is a bit cumbersome but with
> the knowledge you?ve provided here it should be possible for Roger to adapt
> the code to work around this.
> 
> I agree that a function to determine if a CRS is derived would be a nice
> addition.

Queued in https://github.com/OSGeo/PROJ/pull/2496 . I've targetted it for 8.0 
. Could be easily backported if deemed necessary.

> 
> I guess this problem mostly shows up because ob_tran is a bit of a weird
> projection. It is often the cause of problems. I wonder if it is time to
> get rid of it

Although I concur it is an annoyance, I can't see how we could get rid of it. 
There are definitely use cases where people want a CRS object expressing such 
rotation.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Dec 28 08:47:51 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 28 Dec 2020 17:47:51 +0100
Subject: [PROJ] WKT1 Vertical Perspective CRS regression
In-Reply-To: <DS7PR05MB7461696F4FEDD57FB1A242B3B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
References: <DS7PR05MB7461696F4FEDD57FB1A242B3B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
Message-ID: <6344683.GT3GdkFcaf@even-i700>

Jonathan

This is a side effect of https://github.com/OSGeo/PROJ/pull/1971

The past mapping of ESRI:54049 to the below WKT was incorrect. GDAL 2.4 (which 
is what WKT1_GDAL means) has never recognized the nsper projection. If you 
tried the below WKT with it, it would fail.

You have to use WKT2 with that projection.

I tried quickly with GDAL (master and 3.2 branch) to reproduce the issue by 
doing in Python

from osgeo import osr
sr = osr.SpatialReference()
sr.SetFromUserInput('ESRI:54049')
sr.AutoIdentifyEPSG() (which calls GetEPSGGeogCS())

but I couldn't reproduce any error when doing so.

Even

> Hi PROJ list,
> 
> I'm not sure which list to report this since my initial issue was expressed
> through GDAL, but since the issue is reproducible in PROJ alone, I'll start
> here.  I've encountered a regression upgrading from PROJ 6.2.1 to 7.2.0
> when using GDAL's GetEPSGGeogCS with the Vertical Perspective CRS expressed
> by ESRI: 54089. Based on an initial investigation, I think the issue is in
> WKT1:GDAL generation.
> 
> Using PROJ 6.2.1, I can do the following:
> 
> projinfo ESRI:54049 -o WKT1:GDAL
> WKT1_GDAL:
> PROJCS["World_Vertical_Perspective",
>     GEOGCS["WGS 84",
>         DATUM["WGS_1984",
>             SPHEROID["WGS 84",6378137,298.257223563,
>                 AUTHORITY["EPSG","7030"]],
>             AUTHORITY["EPSG","6326"]],
>         PRIMEM["Greenwich",0],
>         UNIT["Degree",0.0174532925199433]],
>     PROJECTION["Vertical_Near_Side_Perspective"],
>     PARAMETER["False_Easting",0],
>     PARAMETER["False_Northing",0],
>     PARAMETER["Longitude_Of_Center",0],
>     PARAMETER["Latitude_Of_Center",0],
>     PARAMETER["Height",35800000],
>     UNIT["metre",1,
>         AUTHORITY["EPSG","9001"]],
>     AXIS["Easting",EAST],
>     AXIS["Northing",NORTH],
>     AUTHORITY["ESRI","54049"]]
> 
> But in PROJ 7.2.0, I get the following:
> 
> projinfo ESRI:54049 -o WKT1:GDAL
> WKT1:GDAL string:
> Error when exporting to WKT1:GDAL: Unsupported conversion method: Vertical
> Perspective
> 
> 
> I'm aware of release notes for GDAL that impacted Vertical Perspective (and
> I haven't found any corresponding in PROJ), but I suspect the GDAL issue is
> rooted in PROJ too.
> 
> 
> Thanks,
> Jonathan


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jgale at mathworks.com  Mon Dec 28 09:11:13 2020
From: jgale at mathworks.com (Jonathan Gale)
Date: Mon, 28 Dec 2020 17:11:13 +0000
Subject: [PROJ] WKT1 Vertical Perspective CRS regression
In-Reply-To: <6344683.GT3GdkFcaf@even-i700>
References: <DS7PR05MB7461696F4FEDD57FB1A242B3B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
 <6344683.GT3GdkFcaf@even-i700>
Message-ID: <DS7PR05MB7461EDF943BBDCB872831310B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>

Hi Even,

Sorry about my lack of clarity. GetEPSGGeogCS didn't error for me either, but it returned -1 instead of a valid EPSG code (4326) as it used to.  I have generally used WKT2 when possible, but this GDAL feature seems to internally use WKT1_GDAL which led me to ask.  Does this mean that GetEPSGGeogCS will no longer return the expected result due to this side effect?  I was under the impression that I could represent this CRS previously even if I could not use it for transformations, but it sounds like that isn't correct.

Jonathan


From: Even Rouault <even.rouault at spatialys.com>
Sent: Monday, December 28, 2020 11:48 AM
To: proj at lists.osgeo.org
Cc: Jonathan Gale <jgale at mathworks.com>
Subject: Re: [PROJ] WKT1 Vertical Perspective CRS regression

Jonathan

This is a side effect of https://github.com/OSGeo/PROJ/pull/1971<https://github.com/OSGeo/PROJ/pull/1971>

The past mapping of ESRI:54049 to the below WKT was incorrect. GDAL 2.4 (which
is what WKT1_GDAL means) has never recognized the nsper projection. If you
tried the below WKT with it, it would fail.

You have to use WKT2 with that projection.

I tried quickly with GDAL (master and 3.2 branch) to reproduce the issue by
doing in Python

from osgeo import osr
sr = osr.SpatialReference()
sr.SetFromUserInput('ESRI:54049')
sr.AutoIdentifyEPSG() (which calls GetEPSGGeogCS())

but I couldn't reproduce any error when doing so.

Even

> Hi PROJ list,
>
> I'm not sure which list to report this since my initial issue was expressed
> through GDAL, but since the issue is reproducible in PROJ alone, I'll start
> here. I've encountered a regression upgrading from PROJ 6.2.1 to 7.2.0
> when using GDAL's GetEPSGGeogCS with the Vertical Perspective CRS expressed
> by ESRI: 54089. Based on an initial investigation, I think the issue is in
> WKT1:GDAL generation.
>
> Using PROJ 6.2.1, I can do the following:
>
> projinfo ESRI:54049 -o WKT1:GDAL
> WKT1_GDAL:
> PROJCS["World_Vertical_Perspective",
> GEOGCS["WGS 84",
> DATUM["WGS_1984",
> SPHEROID["WGS 84",6378137,298.257223563,
> AUTHORITY["EPSG","7030"]],
> AUTHORITY["EPSG","6326"]],
> PRIMEM["Greenwich",0],
> UNIT["Degree",0.0174532925199433]],
> PROJECTION["Vertical_Near_Side_Perspective"],
> PARAMETER["False_Easting",0],
> PARAMETER["False_Northing",0],
> PARAMETER["Longitude_Of_Center",0],
> PARAMETER["Latitude_Of_Center",0],
> PARAMETER["Height",35800000],
> UNIT["metre",1,
> AUTHORITY["EPSG","9001"]],
> AXIS["Easting",EAST],
> AXIS["Northing",NORTH],
> AUTHORITY["ESRI","54049"]]
>
> But in PROJ 7.2.0, I get the following:
>
> projinfo ESRI:54049 -o WKT1:GDAL
> WKT1:GDAL string:
> Error when exporting to WKT1:GDAL: Unsupported conversion method: Vertical
> Perspective
>
>
> I'm aware of release notes for GDAL that impacted Vertical Perspective (and
> I haven't found any corresponding in PROJ), but I suspect the GDAL issue is
> rooted in PROJ too.
>
>
> Thanks,
> Jonathan


--
Spatialys - Geospatial professional services
http://www.spatialys.com<http://www.spatialys.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201228/fd8e7533/attachment.html>

From even.rouault at spatialys.com  Mon Dec 28 09:29:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 28 Dec 2020 18:29:32 +0100
Subject: [PROJ] WKT1 Vertical Perspective CRS regression
In-Reply-To: <DS7PR05MB7461EDF943BBDCB872831310B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
References: <DS7PR05MB7461696F4FEDD57FB1A242B3B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
 <6344683.GT3GdkFcaf@even-i700>
 <DS7PR05MB7461EDF943BBDCB872831310B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
Message-ID: <2469867.dKrm2gtlv9@even-i700>

On lundi 28 d?cembre 2020 17:11:13 CET Jonathan Gale wrote:
> Hi Even,
> 
> Sorry about my lack of clarity. GetEPSGGeogCS didn't error for me either,
> but it returned -1 instead of a valid EPSG code (4326) as it used to. 

Ah missed that.
Fix pending in GDAL per https://github.com/OSGeo/gdal/pull/3327

> I was under the impression that I could represent this CRS
> previously even if I could not use it for transformations, but it sounds
> like that isn't correct.

That worked by accident here as an invalid WKT1 mapping (for the conversion 
part) was returned, but which was sufficient to get the information on its 
geographic CRS. So worked by accident.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jgale at mathworks.com  Mon Dec 28 13:21:31 2020
From: jgale at mathworks.com (Jonathan Gale)
Date: Mon, 28 Dec 2020 21:21:31 +0000
Subject: [PROJ] WKT1 Vertical Perspective CRS regression
In-Reply-To: <2469867.dKrm2gtlv9@even-i700>
References: <DS7PR05MB7461696F4FEDD57FB1A242B3B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
 <6344683.GT3GdkFcaf@even-i700>
 <DS7PR05MB7461EDF943BBDCB872831310B2D90@DS7PR05MB7461.namprd05.prod.outlook.com>
 <2469867.dKrm2gtlv9@even-i700>
Message-ID: <DS7PR05MB7461B47B1F16E6C999DC5FCDB2D90@DS7PR05MB7461.namprd05.prod.outlook.com>

Hi Even,

Thanks for your help.  Good to know what was happening.  I'm happy to see that the conversion aspects will work going forward too.

Jonathan

From: Even Rouault <even.rouault at spatialys.com>
Sent: Monday, December 28, 2020 12:30 PM
To: Jonathan Gale <jgale at mathworks.com>
Cc: proj at lists.osgeo.org
Subject: Re: [PROJ] WKT1 Vertical Perspective CRS regression

On lundi 28 d?cembre 2020 17:11:13 CET Jonathan Gale wrote:
> Hi Even,
>
> Sorry about my lack of clarity. GetEPSGGeogCS didn't error for me either,
> but it returned -1 instead of a valid EPSG code (4326) as it used to.

Ah missed that.
Fix pending in GDAL per https://github.com/OSGeo/gdal/pull/3327<https://github.com/OSGeo/gdal/pull/3327>

> I was under the impression that I could represent this CRS
> previously even if I could not use it for transformations, but it sounds
> like that isn't correct.

That worked by accident here as an invalid WKT1 mapping (for the conversion
part) was returned, but which was sufficient to get the information on its
geographic CRS. So worked by accident.

Even

--
Spatialys - Geospatial professional services
http://www.spatialys.com<http://www.spatialys.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201228/397a443d/attachment.html>

From Roger.Bivand at nhh.no  Tue Dec 29 07:35:20 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 29 Dec 2020 16:35:20 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <2256799.2zrEC8lXVR@even-i700>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <4232894.g9zOAnGjeP@even-i700>
 <1564C906-9EA8-45BF-972A-F4A2D8EFDF70@gmail.com>
 <2256799.2zrEC8lXVR@even-i700>
Message-ID: <43f690c3-ca22-281d-fd6b-813f8992823@reclus.nhh.no>

On Mon, 28 Dec 2020, Even Rouault wrote:

> On lundi 28 d?cembre 2020 16:41:09 CET Kristian Evers wrote:

>> Thanks for clearing this up, Even. The workflow is a bit cumbersome but 
>> with the knowledge you?ve provided here it should be possible for Roger 
>> to adapt the code to work around this.
>>
>> I agree that a function to determine if a CRS is derived would be a nice
>> addition.
>
> Queued in https://github.com/OSGeo/PROJ/pull/2496 . I've targetted it for 8.0
> . Could be easily backported if deemed necessary.
>

Thanks! Handled with

if (proj_get_type(target_crs) == PJ_TYPE_GEOGRAPHIC_2D_CRS && use_ob_tran) 
{
         if ((source_crs = proj_get_source_crs(PJ_DEFAULT_CTX, target_crs)) 
== 0)
...

where use_ob_tran is declared by the user as TRUE if the user wishes, and 
the involved CRS include the proj=ob_tran string.

Tested OK with 7.2.1 RC1 and 7.2.0; now need to check for earlier 
releases. Current code on R-Forge SVN, revisions 1086-1088.

Roger


>>
>> I guess this problem mostly shows up because ob_tran is a bit of a 
>> weird projection. It is often the cause of problems. I wonder if it is 
>> time to get rid of it
>
> Although I concur it is an annoyance, I can't see how we could get rid 
> of it. There are definitely use cases where people want a CRS object 
> expressing such rotation.
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger.Bivand at nhh.no  Tue Dec 29 12:12:50 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 29 Dec 2020 21:12:50 +0100
Subject: [PROJ] 7.2.1 RC1 ob_tran changes break existing logic
In-Reply-To: <43f690c3-ca22-281d-fd6b-813f8992823@reclus.nhh.no>
References: <9641a77b-d5be-d520-db83-d44d1edf7714@reclus.nhh.no>
 <4232894.g9zOAnGjeP@even-i700>
 <1564C906-9EA8-45BF-972A-F4A2D8EFDF70@gmail.com>
 <2256799.2zrEC8lXVR@even-i700>
 <43f690c3-ca22-281d-fd6b-813f8992823@reclus.nhh.no>
Message-ID: <5c519420-bf67-967f-b63b-7f78a751e224@reclus.nhh.no>

On Tue, 29 Dec 2020, Roger Bivand wrote:

> On Mon, 28 Dec 2020, Even Rouault wrote:
>
>>  On lundi 28 d?cembre 2020 16:41:09 CET Kristian Evers wrote:
>
>>>  Thanks for clearing this up, Even. The workflow is a bit cumbersome but
>>>  with the knowledge you?ve provided here it should be possible for Roger
>>>  to adapt the code to work around this.
>>>
>>>  I agree that a function to determine if a CRS is derived would be a nice
>>>  addition.
>>
>>  Queued in https://github.com/OSGeo/PROJ/pull/2496 . I've targetted it for
>>  8.0
>>  . Could be easily backported if deemed necessary.
>> 
>
> Thanks! Handled with
>
> if (proj_get_type(target_crs) == PJ_TYPE_GEOGRAPHIC_2D_CRS && use_ob_tran) {
>        if ((source_crs = proj_get_source_crs(PJ_DEFAULT_CTX, target_crs)) == 
> 0)
> ...
>
> where use_ob_tran is declared by the user as TRUE if the user wishes, and the 
> involved CRS include the proj=ob_tran string.
>
> Tested OK with 7.2.1 RC1 and 7.2.0; now need to check for earlier releases. 
> Current code on R-Forge SVN, revisions 1086-1088.

Check with PROJ 6.3.1/GDAL 3.0.4 OK.

No further problems with RC1.

Roger

>
> Roger
>
>
>>>
>>>  I guess this problem mostly shows up because ob_tran is a bit of a weird
>>>  projection. It is often the cause of problems. I wonder if it is time to
>>>  get rid of it
>>
>>  Although I concur it is an annoyance, I can't see how we could get rid of
>>  it. There are definitely use cases where people want a CRS object
>>  expressing such rotation.
>> 
>> 
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From kristianevers at gmail.com  Wed Dec 30 03:56:27 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 30 Dec 2020 12:56:27 +0100
Subject: [PROJ] Motion: Promote PROJ 7.2.1RC1 and PROJ-data 1.4RC1 to final
Message-ID: <CD2FC3C3-B7B8-42A8-BE4E-60C28A032242@gmail.com>

PSC members,

No issues has been found in the  candidates for new PROJ and PROJ-data releases has been found,
so I hereby motion that they be promoted to final.

I?ll start with my +1.

/Kristian

From knudsen.thomas at gmail.com  Wed Dec 30 04:45:14 2020
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Wed, 30 Dec 2020 13:45:14 +0100
Subject: [PROJ] Motion: Promote PROJ 7.2.1RC1 and PROJ-data 1.4RC1 to
 final
In-Reply-To: <CD2FC3C3-B7B8-42A8-BE4E-60C28A032242@gmail.com>
References: <CD2FC3C3-B7B8-42A8-BE4E-60C28A032242@gmail.com>
Message-ID: <CAH0YoEPsE-f-xbLZX4yu_1X10_KdEXspF_8y3n2_x4n+myKSnw@mail.gmail.com>

+1 /thomas

Den ons. 30. dec. 2020 kl. 12.56 skrev Kristian Evers <
kristianevers at gmail.com>:

> PSC members,
>
> No issues has been found in the  candidates for new PROJ and PROJ-data
> releases has been found,
> so I hereby motion that they be promoted to final.
>
> I?ll start with my +1.
>
> /Kristian
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20201230/bc5cf5c3/attachment.html>

From even.rouault at spatialys.com  Wed Dec 30 05:47:57 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 30 Dec 2020 14:47:57 +0100
Subject: [PROJ] Motion: Promote PROJ 7.2.1RC1 and PROJ-data 1.4RC1 to
 final
In-Reply-To: <CD2FC3C3-B7B8-42A8-BE4E-60C28A032242@gmail.com>
References: <CD2FC3C3-B7B8-42A8-BE4E-60C28A032242@gmail.com>
Message-ID: <3804550.9xiPzNO4Rr@even-i700>

On mercredi 30 d?cembre 2020 12:56:27 CET Kristian Evers wrote:
> PSC members,
> 
> No issues has been found in the  candidates for new PROJ and PROJ-data
> releases has been found, so I hereby motion that they be promoted to final.
> 
> I?ll start with my +1.

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From charles at karney.com  Wed Dec 30 05:54:16 2020
From: charles at karney.com (Charles Karney)
Date: Wed, 30 Dec 2020 13:54:16 +0000
Subject: [PROJ] Motion: Promote PROJ 7.2.1RC1 and PROJ-data 1.4RC1 to
 final
In-Reply-To: <CD2FC3C3-B7B8-42A8-BE4E-60C28A032242@gmail.com>
References: <CD2FC3C3-B7B8-42A8-BE4E-60C28A032242@gmail.com>
Message-ID: <BL0PR1701MB2562D58AE741EFB3C804F2E0A9D70@BL0PR1701MB2562.namprd17.prod.outlook.com>

+1

Charles

?-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Kristian Evers <kristianevers at gmail.com>
Date: Wednesday, December 30, 2020 at 6:57 AM
To: PROJ <proj at lists.osgeo.org>
Subject: [PROJ] Motion: Promote PROJ 7.2.1RC1 and PROJ-data 1.4RC1 to final

    PSC members,

    No issues has been found in the  candidates for new PROJ and PROJ-data releases has been found,
    so I hereby motion that they be promoted to final.

    I?ll start with my +1.

    /Kristian
    _______________________________________________
    PROJ mailing list
    PROJ at lists.osgeo.org
    https://lists.osgeo.org/mailman/listinfo/proj

From howard at hobu.co  Wed Dec 30 06:24:29 2020
From: howard at hobu.co (Howard Butler)
Date: Wed, 30 Dec 2020 08:24:29 -0600
Subject: [PROJ] Motion: Promote PROJ 7.2.1RC1 and PROJ-data 1.4RC1 to
 final
In-Reply-To: <BL0PR1701MB2562D58AE741EFB3C804F2E0A9D70@BL0PR1701MB2562.namprd17.prod.outlook.com>
References: <BL0PR1701MB2562D58AE741EFB3C804F2E0A9D70@BL0PR1701MB2562.namprd17.prod.outlook.com>
Message-ID: <66884EA2-2546-4428-AB17-D27825C884FD@hobu.co>

+1

> On Dec 30, 2020, at 7:54 AM, Charles Karney <charles at karney.com> wrote:
> 
> ?+1
> 
> Charles
> 
> ?-----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Kristian Evers <kristianevers at gmail.com>
> Date: Wednesday, December 30, 2020 at 6:57 AM
> To: PROJ <proj at lists.osgeo.org>
> Subject: [PROJ] Motion: Promote PROJ 7.2.1RC1 and PROJ-data 1.4RC1 to final
> 
>    PSC members,
> 
>    No issues has been found in the  candidates for new PROJ and PROJ-data releases has been found,
>    so I hereby motion that they be promoted to final.
> 
>    I?ll start with my +1.
> 
>    /Kristian
>    _______________________________________________
>    PROJ mailing list
>    PROJ at lists.osgeo.org
>    https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

