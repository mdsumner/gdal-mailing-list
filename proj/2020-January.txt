From kreve at sdfe.dk  Wed Jan  1 12:56:54 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 1 Jan 2020 20:56:54 +0000
Subject: [PROJ] PROJ 6.3.0
Message-ID: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>

Happy new year everyone! What better than to celebrate with a new PROJ release.
The PROJ 6.3.0 release includes new features and a range of bug fixes. Download
the archives here:


https://download.osgeo.org/proj/proj-6.3.0.tar.gz (https://download.osgeo.org/proj/proj-6.3.0.tar.gz.md5
) 
https://download.osgeo.org/proj/proj-6.3.0.zip    (https://download.osgeo.org/proj/proj-6.3.0.zip.md5
)

See the release notes below.


In addition to the PROJ release we are also issuing releases of  three regional
datumgrid packages:

Oceania-1.1:

http://download.osgeo.org/proj/proj-datumgrid-oceania-1.1.zip

- Added AUSGeoid98, AUSGeoid09 & AUSGeoid2020
- Added various grids for New Zealand
- Added GDA94_GDA2020 grids for Christmas and Coco Island

North-America-1.3:

http://download.osgeo.org/proj/proj-datumgrid-north-america-1.3.zip

- Added Quebec grids na27na83.gsb and cq77na83.gsb
- Added MAY76V20.gsb for Canadian NAD27(76)->NAD83 transformations
- Added Canadian geoid models for CGVD28, CGVD2013(CGG2013) and CGVD2013(CGG2013a)
- Added Canadian provincial horizontal shift grids
- Added USA geoid models 1999, 2003, 2006, 2009 and 2018


Europe-1.5:

http://download.osgeo.org/proj/proj-datumgrid-europe-1.5.zip

- Added SeTa2016.gsb for DE_DHDN -> ETRS89 in Saarland
- Added 100800401.gsb for Catalonia ED50 -> ETRS89
- Added NTv2_SN.gsb for RD/83 to ETRS89 in Saxony
- Added AT_GIS_GRID.gsb for Austria MGI->ETRS89
- Added various grids for Iceland, including ISL init file
- Added BWTA2017.gsb for DHDN->ETRS89 for Baden-Württemberg
- Addedvertical grids for Saint-Pierre-et-Miquelon: RASPM2018 and CGVD2013RGSPM06
- Added NTv2 grids for convertion between Portuguese Lisbon Datum and Datum 73 to ETRS89




————————————

6.3.0 Release Notes
-------------------

Updates
-------

o Database: tune accuracy of Canadian NTv1 file w.r.t NTv2 (#1812)

o Modify verbosity level of some debug/trace messages (#1811)

o projinfo: no longer call createBoundCRSToWGS84IfPossible() for WKT1:GDAL
  (#1810)

o proj_trans: add retry logic to select other transformation if the best one
  fails. (#1809)

o BoundCRS::identify(): improvements to discard CRS that aren't relevant
  (#1802)

o Database: update to IGNF v3.1.0 (#1785)

o Build: Only export symbols if building DLL (#1773)

o Database: update ESRI entries with ArcGIS Desktop version 10.8.0 database
  (#1762)

o createOperations(): chain operations whose middle CRSs are not identical but
  have the same datum (#1734)

o import/export PROJJSON: support a interpolation_crs key to geoid_model
  (#1732)

o Database: update to EPSG v9.8.4 (#1725)

o Build: require SQLite 3.11 (#1721)

o Add support for GEOIDMODEL (#1710)

o Better filtering based on extent and performance improvements (#1709)


Bug fixes
---------

o Horizontal grid shift: fix issue on iterative inverse computation when
  switching between (sub)grids (#1797)

o createOperations(): make filtering out of 'uninteresting' operations less
  aggressive (#1788)

o Make EPSG:102100 resolve to ESRI:102100 (#1786)

o ob_tran: restore traditional handling of +to_meter with pj_transform() and
  proj utility (#1783)

o CRS identification: use case insensitive comparison for authority name
  (#1780)

o normalizeForVisualization() and other methods applying on a ProjectedCRS: do
  not mess the derivingConversion object of the original object (#1746)

o createOperations(): fix transformation computation from/to a CRS with
  +geoidgrids and +vunits != m (#1731)

o Fix proj_assign_context()/pj_set_ctx() with pipelines and alternative coord
  operations (#1726)

o Database: add an auxiliary concatenated_operation_step table to allow
  arbitrary number of steps (#1696)

o Fix errors running gie-based tests in Debug mode on Windows (#1688)

From even.rouault at spatialys.com  Thu Jan  2 05:47:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 02 Jan 2020 14:47:21 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
Message-ID: <3762285.xbWIhGd3QI@even-i700>

Hi,

PROJ 6.3 being out, it is time to consider the next steps :-)

RFC4
https://github.com/rouault/PROJ/blob/rfc4_remote_and_geotiff_grid/docs/source/community/rfc/rfc-4.rst
is hopefully now in its final state. Number of changes have been added to it since
the initial version to synchronize it with the implementation, but nothing dramatically different.
You can the diff at https://github.com/rouault/PROJ/compare/5bbfc07..2b16de3

It is now backed by a working implementation available at
https://github.com/OSGeo/PROJ/pull/1817

The CDN, storing grids converted to GeoTIFF, is now available at https://cdn.proj.org/

As an example, the following will now work (using the OSTN15_NTv2_OSGBtoETRS.tif grid):

$ echo 60 2 | PROJ_NETWORK=ON cs2cs -d 8 OSGB36 ETRS89
59.99957003	1.99763761 0.00000000

On next invocations, the parts of the grid that are needed and have already been
queried will be retrieved from the cache (at ~/.local/share/proj/cache.db on Linux)

For now, the RFC4 implementation works with a grid_alternatives database table still
pointing at the NTv2 & GTX files of https://github.com/osgeo/proj-datumgrid and it will
automagically try to fetch the correspond .tif files from the CDN when they are not locally
available.

In a next step, we'll also need to decide how/when we switch to
https://github.com/osgeo/proj-datumgrid-geotiff (which is the master of cdn.proj.org) and
if we provide a single or multiple packages of it (current total size of files is 486 MB),
and/or a utility to retrieve as a post installation stage grids of interest from a given
bounding box / producer / country from the CDN.
I was initially thinking to a python utility, but there could have
issues with Python dependencies, so perhaps a binary using the new curl dependency would be
easier to deploy & use. This can be for follow-up discussions.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Fri Jan  3 01:17:10 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 3 Jan 2020 19:17:10 +1000
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <3762285.xbWIhGd3QI@even-i700>
References: <3762285.xbWIhGd3QI@even-i700>
Message-ID: <CAB28Asg2i+R9PMnYAzsV9v4qYcTCw5SOCpjq38jT5veoSxRg7w@mail.gmail.com>

On Thu, 2 Jan 2020 at 23:47, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> PROJ 6.3 being out, it is time to consider the next steps :-)
>
> RFC4
> https://github.com/rouault/PROJ/blob/rfc4_remote_and_geotiff_grid/docs/source/community/rfc/rfc-4.rst
> is hopefully now in its final state. Number of changes have been added to it since
> the initial version to synchronize it with the implementation, but nothing dramatically different.
> You can the diff at https://github.com/rouault/PROJ/compare/5bbfc07..2b16de3

Hi Even,

Over the Christmas season I've been mulling over this in the back of
my mind, specifically trying to brainstorm on how the new CDN based
delivery approach could fit into a GUI type application like QGIS.

While the current RFC4 API will allow us to reuse the existing QGIS
network layer (making it seamlessly work with existing proxy settings,
etc), I'm doubtful that the current API will allow for a good user
experience in QGIS. My reservation is that given that the network
fetching will be (understandably) a blocking process, it means that
QGIS will suffer application/GUI hangs whenever proj determines that
it needs to fetch a new area of the grid and the network download
occurs. (why a GUI hang? well, by necessity all the render job
preparation has to occur on the main thread. So any blocking operation
during this preparation, such as reprojecting layer extents to the
target map crs, will block the main thread without any way for us to
notify users as to why this is occurring or how the download is
progressing).

I've been trying to mull over what would be an ideal UX here. I think
the best we could possibly do would be:

1. If a grid download is required, we don't do this upfront. Instead,
we use the best available non-download-grid operation so that the
reprojection can occur without blocking.
2. We notify the users that a non-preferred projection was used for the render.
3. In a background thread, we fire up a download request for the
required grid portion.
4. When the download finishes, the map refreshes automatically using
the newly available coordinate operation

and then

5. Proactively fetch nearby grid regions based on the current map view
extent (i.e. download the neighbouring tiles in background threads)
6. Offer users a way to manually download the grids for a selected region

My understanding of the current API leads me to believe that this
wouldn't be possible in the current RFC4 API. The missing bits would
be:

1. Public api to query if the preferred operation between two crses
requires a grid download for a certain area
2. (Thread safe) API to manually download a grid for a certain area

What's your thoughts on this?

Nyall





>
> It is now backed by a working implementation available at
> https://github.com/OSGeo/PROJ/pull/1817
>
> The CDN, storing grids converted to GeoTIFF, is now available at https://cdn.proj.org/
>
> As an example, the following will now work (using the OSTN15_NTv2_OSGBtoETRS.tif grid):
>
> $ echo 60 2 | PROJ_NETWORK=ON cs2cs -d 8 OSGB36 ETRS89
> 59.99957003     1.99763761 0.00000000
>
> On next invocations, the parts of the grid that are needed and have already been
> queried will be retrieved from the cache (at ~/.local/share/proj/cache.db on Linux)
>
> For now, the RFC4 implementation works with a grid_alternatives database table still
> pointing at the NTv2 & GTX files of https://github.com/osgeo/proj-datumgrid and it will
> automagically try to fetch the correspond .tif files from the CDN when they are not locally
> available.
>
> In a next step, we'll also need to decide how/when we switch to
> https://github.com/osgeo/proj-datumgrid-geotiff (which is the master of cdn.proj.org) and
> if we provide a single or multiple packages of it (current total size of files is 486 MB),
> and/or a utility to retrieve as a post installation stage grids of interest from a given
> bounding box / producer / country from the CDN.
> I was initially thinking to a python utility, but there could have
> issues with Python dependencies, so perhaps a binary using the new curl dependency would be
> easier to deploy & use. This can be for follow-up discussions.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From even.rouault at spatialys.com  Fri Jan  3 04:24:50 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 Jan 2020 13:24:50 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <CAB28Asg2i+R9PMnYAzsV9v4qYcTCw5SOCpjq38jT5veoSxRg7w@mail.gmail.com>
References: <3762285.xbWIhGd3QI@even-i700>
 <CAB28Asg2i+R9PMnYAzsV9v4qYcTCw5SOCpjq38jT5veoSxRg7w@mail.gmail.com>
Message-ID: <4173727.pU7mn6Nje8@even-i700>

Hi Nyall,

> My understanding of the current API leads me to believe that this
> wouldn't be possible in the current RFC4 API. The missing bits would
> be:
> 
> 1. Public api to query if the preferred operation between two crses
> requires a grid download for a certain area
> 2. (Thread safe) API to manually download a grid for a certain area
> 
> What's your thoughts on this?

I appreciate your suggestions but I can see some difficulties:

- "requires a grid download for a certain area". Imagine that the case is
  to reproject the 4 corners of Continental US. You just need (part of) the  
  grids at those points, not for the whole continent. More generally, this
  depends on the 'density' of points on a given area with respect to the
  resolution of grid(s).

- there is also the fact that the local cache is of limited size, so if for
  the whole set of points to coordinates you'd need more than the cache
  maximum size, eviction will occur. For that point, that could be potentially
  avoided by making the cache size such that it never happens. I arbitrarily
  decided for a default of 100 MB. The total size of GeoTIFF grids is close
  to 500 MB currently. So if we set the default to a bit more than the total
  size of grids, eviction would never occur. That said, this point is probably
  only theoretical. The 2 largest files currently are egm08_25.tif (77 MB) and
  BWTA2017.tif (70 MB), so even if you reprojected entire Baden-Wurttemberg
  and referenced EGM08 height that would still below 100 MB.
   
So perhaps an easier & robust solution for your use case could be:

- for the transformation of interest, use the PROJ_GRID_AVAILABILITY_IGNORED 
flag to have the operations returned in the ideal case. Then for each point to 
transform, you check the first candidate operation whose area of use 
intersects with the point. That's the one that would be selected in an ideal 
world. If it references a grid that proj_coordoperation_get_grid_used() 
indicate as not available, take note of it, and use the next operation that 
doesn't need a grid or for which grids are available, to perform the 
approximate coordinate transformation.

- at the end of this stage, collect the set of missing grids and download them 
(entirely), and restart the transformation.

Which can be done with existing (non-RFC4) API.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From knudsen.thomas at gmail.com  Fri Jan  3 08:35:10 2020
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Fri, 3 Jan 2020 17:35:10 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <3762285.xbWIhGd3QI@even-i700>
References: <3762285.xbWIhGd3QI@even-i700>
Message-ID: <CAH0YoEPxExwUBe2PQ8TF3PtdPz5VC39WES=xUT8vy37_Ue_eGg@mail.gmail.com>

In general, I think the RFC is awesome, suggesting a design that will
greatly
improve the interoperability (and ubiquity) of geodetic transformations.

I do, however, worry that we are rapidly entering a complexity level where
the
code base becomes write-only, or at least alarmingly dependent on a single
developer, although a highly competent one, but so much more worrying.

As we all know geo-programming competence is measured in the proposed SI
unit
“rouault” - abbreviated Rt. Currently the Rt cannot be expressed based on
known
physical constants (although this is a matter of active research by leading
standards laboratories), so it is tentatively defined by the sample specimen
curated by the company Spatialys, and exposed to the world for calibration,
through Github.

Experiments have shown that the combined mass of geo-programming competence
in
the known universe is less than 2 Rt - and although analysis is ongoing, it
is
not even known whether geo-programming competence is conserved under state
changes.

Hence, there are good reasons to fear that PROJ, an essential piece of
geodetic
infrastructure, in a future where Spatialys has lost interest, will have to
be
maintained by lesser spirits, lacking the mental power to grasp the
multifaceted
monolith of PROJ source.

I never fully succeeded in my attempts to restructure the PROJ architecture,
before the WKT2 etc. efforts funded through https://gdalbarn.com/ suddenly
doubled the size of the source code, introduced SQLite as a direct
dependency,
and largely rendered my plans obsolete.

The switch to C++ as primary development language has, however, potentially
simplified much of that work, and I still think it will be a good idea to
redo the overall architecture of the code base in order to make it
maintainable
for a group of mental midgets, individually weighing less than 0.01 Rt,
rather
than the solitary 1.0 Rt mental giant currently doing such remarkable work.

I am fully aware that obtaining funding for such “invisible” work is very
hard,
and I am not at all volunteering to do it myself. I do, however, think it is
worth giving it a few thoughts directly in the RFC - e.g. by including an
explicit list of additional dependencies introduced. If I read the RFC
correctly, these include:

libtiff
curl
zlib

But please elaborate on this - and perhaps add a few remarks about potential
internal interfaces (i.e. considering the grid handling and grid shift
functionality as a kind of server with a minimal interface, which in
principle - long term - could reside on a remote machine). Any comment of
this
kind in the RFC will ease the road forward for architectural restructuring
for
improved long term (decades, centuries) maintainability.

One thing I especially worry about is the potential loss of mind share:
Up until version 5.0, PROJ depended on the C standard library only, and
hence was quite easy to build and contribute to.

With the increasing build complexity, I fear that less new material
(projections
and other new operations) will be contributed to PROJ, unless we make it
easier
to integrate external code seamlessly with the library - a thing that is not
easily done with the current static tables of operations.

The current low level architecture, however, mostly mimics in C the de facto
workings of C++ inheritance and virtual functions, so a C++ redo of some low
level stuff will potentially simplify a lot of the basic stuff.
This is way beyond the scope of this RFC, but please try not to complicate
this
kind of work unnecessarily.

Apart from these, possibly unfounded, concerns, I find the RFC tasteful
and well balanced.

I especially enjoy the fact that you dismiss the use of HDF5 (which I
consider
a horrible reinvention of zip files) and NTv2 (which I consider a horrible,
and
limited, reinvention of TIFF files).

When TIFF is what is needed (despite all its arcane monstrosities),
TIFF is what we should use. Lets get rid of unnecessary specialized
file formats, if TIFF can support all our needs.

/thomas


Den tor. 2. jan. 2020 kl. 14.47 skrev Even Rouault <
even.rouault at spatialys.com>:

> Hi,
>
> PROJ 6.3 being out, it is time to consider the next steps :-)
>
> RFC4
>
> https://github.com/rouault/PROJ/blob/rfc4_remote_and_geotiff_grid/docs/source/community/rfc/rfc-4.rst
> is hopefully now in its final state. Number of changes have been added to
> it since
> the initial version to synchronize it with the implementation, but nothing
> dramatically different.
> You can the diff at
> https://github.com/rouault/PROJ/compare/5bbfc07..2b16de3
>
> It is now backed by a working implementation available at
> https://github.com/OSGeo/PROJ/pull/1817
>
> The CDN, storing grids converted to GeoTIFF, is now available at
> https://cdn.proj.org/
>
> As an example, the following will now work (using the
> OSTN15_NTv2_OSGBtoETRS.tif grid):
>
> $ echo 60 2 | PROJ_NETWORK=ON cs2cs -d 8 OSGB36 ETRS89
> 59.99957003     1.99763761 0.00000000
>
> On next invocations, the parts of the grid that are needed and have
> already been
> queried will be retrieved from the cache (at ~/.local/share/proj/cache.db
> on Linux)
>
> For now, the RFC4 implementation works with a grid_alternatives database
> table still
> pointing at the NTv2 & GTX files of
> https://github.com/osgeo/proj-datumgrid and it will
> automagically try to fetch the correspond .tif files from the CDN when
> they are not locally
> available.
>
> In a next step, we'll also need to decide how/when we switch to
> https://github.com/osgeo/proj-datumgrid-geotiff (which is the master of
> cdn.proj.org) and
> if we provide a single or multiple packages of it (current total size of
> files is 486 MB),
> and/or a utility to retrieve as a post installation stage grids of
> interest from a given
> bounding box / producer / country from the CDN.
> I was initially thinking to a python utility, but there could have
> issues with Python dependencies, so perhaps a binary using the new curl
> dependency would be
> easier to deploy & use. This can be for follow-up discussions.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200103/157c80ef/attachment.html>

From even.rouault at spatialys.com  Fri Jan  3 10:12:59 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 Jan 2020 19:12:59 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <CAH0YoEPxExwUBe2PQ8TF3PtdPz5VC39WES=xUT8vy37_Ue_eGg@mail.gmail.com>
References: <3762285.xbWIhGd3QI@even-i700>
 <CAH0YoEPxExwUBe2PQ8TF3PtdPz5VC39WES=xUT8vy37_Ue_eGg@mail.gmail.com>
Message-ID: <3440222.VWonCjZL8x@even-i700>

Thomas,

> I do, however, worry that we are rapidly entering a complexity level where
> the
> code base becomes write-only, or at least alarmingly dependent on a single
> developer, although a highly competent one, but so much more worrying.

Looking back at the history of PROJ, pretty much the same could be said for 
the long time one-man shows of Jerry Evenden and then Frank Warmerdam :-) And 
we're still hacking into it.

To be honest, the monstruous part I contributed is what I documented in
https://proj.org/operations/operations_computation.html . This *is* 
complicated logic (but most of it is due to the reality of geodetic concept 
and database modelling). No idea how I'd rewrite that in a simpler way while 
keeping the same level of functionality... The rest of the gdalbarn stuff 
should be mostly straightforward for anyone familiar with the underlying 
standards (OGC abstract topic 2/ISO19111 & WKT CRS) and with some knowledge of 
C++.

> I read the RFC correctly, these include:
> 
> libtiff
> curl
> zlib

Yes. But zlib only as an indirect dependency of libtiff.

> and perhaps add a few remarks about potential
> internal interfaces (i.e. considering the grid handling and grid shift
> functionality as a kind of server with a minimal interface, which in
> principle - long term - could reside on a remote machine). Any comment of
> this
> kind in the RFC will ease the road forward for architectural restructuring
> for
> improved long term (decades, centuries) maintainability.

I believe this RFC is already long enough to add details about internal 
interfaces into it. But I'd welcome reviews of the pull requests sitting at
https://github.com/OSGeo/PROJ/pulls to potentially improve the code, and add 
comments where reviewers feel it is needed. That's the best way actually for 
other contributors to get familiar with the added code and avoid my write-only 
type of contributions :-)

> With the increasing build complexity, I fear that less new material
> (projections
> and other new operations) will be contributed to PROJ

I've an action item to write a build howto. Most of the material is actually 
in https://github.com/OSGeo/PROJ/issues/1776#issuecomment-570060704

> The current low level architecture, however, mostly mimics in C the de facto
> workings of C++ inheritance and virtual functions, so a C++ redo of some
> low level stuff will potentially simplify a lot of the basic stuff.
> This is way beyond the scope of this RFC, but please try not to complicate
> this kind of work unnecessarily.

The existing architecture of how operations are integrated is completely 
unrelated to this RFC, so I didn't "complicate" that part at least :-). That 
said, "even if it is in C", it isn't that bad & complicated. Personnaly, I 
wouldn't revisite the way the > 100 operations are implemented just for the 
sake of a C++-ification. But rather for a good reason, like perhaps 
propagating accuracy information along a pipeline, or having operations 
dynamically document their parameters, or be GPGPU / SIMD friendly, etc...

> When TIFF is what is needed (despite all its arcane monstrosities),
> TIFF is what we should use. Lets get rid of unnecessary specialized
> file formats, if TIFF can support all our needs.

The RFC doesn't drop support for the existing file formats (except the old, 
historic and completely broken CTable(1) format. CTable2 is still there). 
There are a lot of NTv2 grids in the wild, it is the de-facto standard used 
currently by most producers of horizontal shift grids, so removing support for 
it is going to take time. And that would be just about removing about 200 
lines of code, so there's no pressing need to do so. We might consider that 
when >90% of producers of geodetic adjustment datasets use TIFF :-)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Fri Jan  3 13:13:02 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sat, 4 Jan 2020 07:13:02 +1000
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <4173727.pU7mn6Nje8@even-i700>
References: <3762285.xbWIhGd3QI@even-i700>
 <CAB28Asg2i+R9PMnYAzsV9v4qYcTCw5SOCpjq38jT5veoSxRg7w@mail.gmail.com>
 <4173727.pU7mn6Nje8@even-i700>
Message-ID: <CAB28Asi1z0Bexhkdb8dWvNdSeroZTvWtcrCy+omGu-AgQV1Mvw@mail.gmail.com>

On Fri, 3 Jan 2020 at 22:24, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi Nyall,
>
> > My understanding of the current API leads me to believe that this
> > wouldn't be possible in the current RFC4 API. The missing bits would
> > be:
> >
> > 1. Public api to query if the preferred operation between two crses
> > requires a grid download for a certain area
> > 2. (Thread safe) API to manually download a grid for a certain area
> >
> > What's your thoughts on this?
>
> I appreciate your suggestions but I can see some difficulties:
>
> - "requires a grid download for a certain area". Imagine that the case is
>   to reproject the 4 corners of Continental US. You just need (part of) the
>   grids at those points, not for the whole continent. More generally, this
>   depends on the 'density' of points on a given area with respect to the
>   resolution of grid(s).

(Actually, when QGIS reprojects a bounding box (such as a layer
bounds), it will automatically densify the edges first -- so we'd need
at least the grids covering the whole of the perimeter as a start. But
that's nitpicking!)

>
> - there is also the fact that the local cache is of limited size, so if for
>   the whole set of points to coordinates you'd need more than the cache
>   maximum size, eviction will occur. For that point, that could be potentially
>   avoided by making the cache size such that it never happens. I arbitrarily
>   decided for a default of 100 MB. The total size of GeoTIFF grids is close
>   to 500 MB currently. So if we set the default to a bit more than the total
>   size of grids, eviction would never occur. That said, this point is probably
>   only theoretical. The 2 largest files currently are egm08_25.tif (77 MB) and
>   BWTA2017.tif (70 MB), so even if you reprojected entire Baden-Wurttemberg
>   and referenced EGM08 height that would still below 100 MB.
>
> So perhaps an easier & robust solution for your use case could be:
>
> - for the transformation of interest, use the PROJ_GRID_AVAILABILITY_IGNORED
> flag to have the operations returned in the ideal case. Then for each point to
> transform, you check the first candidate operation whose area of use
> intersects with the point. That's the one that would be selected in an ideal
> world. If it references a grid that proj_coordoperation_get_grid_used()
> indicate as not available, take note of it, and use the next operation that
> doesn't need a grid or for which grids are available, to perform the
> approximate coordinate transformation.
>
> - at the end of this stage, collect the set of missing grids and download them
> (entirely), and restart the transformation.

That's exactly the current approach - minus the auto download.
Instead, we just warn users and advise them on the steps required for
downloading the grid themselves and provide an option to "install" the
downloaded grid (copy it to a proj lib folder).

Based on this, I'm thinking that the best approach to take with QGIS
in a post rfc-4 world would be to leave the built-in proj networking
disabled, and then extend the current QGIS approach to provide an
option to download the whole grid from the CDN instead of just showing
the manual steps to download them. (And possibly, just do a
post-install, first run background task which bulk downloads the
complete set of grids from the CDN so that they're available
already...)

> Which can be done with existing (non-RFC4) API.

On a different note -- I'm finding it very difficult to find the RFC4
proposal text. This appears to live only in the proj website contents
in the rfc4 branch on your proj fork, so aren't actually available on
the proj website (and googling proj rfc4 gives no useful results as a
consequence). This seems a step back from the GDAL/trac RFC approach,
where RFC text is available for widespread review on the GDAL page
**prior** to the RFC PR merge. Is the approach used for RFC4 the plan
for RFCs going forward?

Nyall


>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Fri Jan  3 13:30:58 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 3 Jan 2020 17:30:58 -0400
Subject: [PROJ] Interested in helping for inclusion of grids for Spain,
 Austria, Slovakia, Brazil ?
In-Reply-To: <d8c52951-ebfb-d2de-1bf3-3399fc6ea061@gatewaygeomatics.com>
References: <4172696.CJjv76bh8s@even-i700>
 <d8c52951-ebfb-d2de-1bf3-3399fc6ea061@gatewaygeomatics.com>
Message-ID: <97218444-6a7a-ba19-43c3-3236d1e1670e@gatewaygeomatics.com>

There has been some progress from the QGIS-Brasil community, pointing to 
the official grid shift files.  I have filed a ticket with the info, and 
will try to get others to comment directly in the ticket: 
https://github.com/OSGeo/proj-datumgrid/issues/101

-jeff



On 2019-12-02 9:09 AM, Jeff McKenna wrote:
> I've forwarded this to the vibrant QGIS-Brasil community.  -jeff
> 
> 
> 
> On 2019-12-01 7:18 PM, Even Rouault wrote:
>> Hi,
>>
>> I'm requesting help from good wills of the community to help us grow 
>> our datasets of grids at
>> https://github.com/OSGeo/proj-datumgrid/
>> Below a few candidates I've identified, mentionned in EPSG and with a 
>> number of them with
>> download links, but license clarification would be needed.
>>
>> Community members from those countries are probably in a better 
>> position than me to
>> connect with the relevant authority and see if they'd be willing to 
>> adopt one of the licenses
>> mentionned at 
>> https://github.com/OSGeo/proj-datumgrid#about-the-datum-grid-package
>>
>> Spain
>> -----
>>
>> * Peninsula and Baleares:
>>
>> Anyone from the Spanish community to help clarifying license of
>> https://www.fomento.gob.es/recursos_mfom/gridshift1.zip (ED50 to ETRS89),
>> presumably whith IGN Spain
>>
>> The download link is accessible from
>> https://www.fomento.gob.es/organos-colegiados/consejo-superior-geografico/csg/etrs89/etrs89-nuevo-sistema-de-referencia-geodesico-oficial-en-espana 
>>
>>
>> This file has a sort of CC license
>> (https://gist.github.com/rouault/1ff4ad2d8053e068f9dbf451572692f4) but 
>> with a
>> annoying non-modification clause that makes it incompatible with our 
>> requirements
>> (we might want to transform it to another format like GeoTIFF),
>> and no version/link to the actual CC license.
>>
>> * Catalonia:
>>
>> Grid specific to Catalonia for ED50 to ETRS89 : 100800401.gsb
>> File found in 
>> http://www.icgc.cat/content/download/48766/337962/version/1/file/Malla_NTv2_11_03.zip 
>>
>> but no explicit license mention.
>> https://www.icgc.cat/en/Web/Help/Legal-notice has a vague mention of 
>> Creative Commons,
>> but no precise identification of which variant of it, and which version.
>>
>> Austria
>> -------
>>
>> The AT_GIS_GRID.gsb grid for MGI to ETRS89 is available at
>> http://www.bev.gv.at/portal/page?_pageid=713,2157075&_dad=portal&_schema=PORTAL 
>> :
>>
>> http://www.bev.gv.at/pls/portal/docs/PAGE/BEV_PORTAL_CONTENT_ALLGEMEIN/0200_PRODUKTE/UNENTGELTLICHE_PRODUKTE_DES_BEV/GIS-Grid.zip 
>>
>>
>> Copyright info I could find is
>> "Hinsichtlich seiner Datenbanken verfügt das BEV über das ausschließliche
>> Werknutzungsrecht gemäß §§ 40f bis 40h UrhG und das sui generis-Recht 
>> gemäß §§ 76c bis 76e UrhG."
>>
>> which by itself is not super promising.
>>
>> Slovakia
>> --------
>>
>> https://www.geoportal.sk/en/geodeticke-zaklady/download/ offers for 
>> download 3 grids
>> referenced by EPSG:
>> Slovakia_ETRS89h_to_Baltic1957.gtx
>> Slovakia_ETRS89h_to_EVRF2007.gtx
>> Slovakia_JTSK03_to_JTSK.LAS / .LOS
>>
>> I've emailed the contact mentionned on the site to get info regarding 
>> the license.
>> But wouldn't hurt to get feedback of knowledgeable people too.
>>
>> Brazil
>> ------
>>
>> Looking for official download links & license for the following:
>>
>> Corrego Alegre 1961 to SIRGAS 2000: CA61_003.gsb
>> Corrego Alegre 1970-72 to SIRGAS 2000: CA7072_003.gsb
>> SAD69 to SIRGAS 2000: SAD69_003.gsb
>> SAD69(96) to SIRGAS 2000: SAD96_003.gsb
>>
>> https://www.killetsoft.de/p_gdln_e.htm has download links but official 
>> ones from IBGE
>> would be preferable if possible.
>>
>>
>> Of course there are certainly gaps to fill for other countries I've 
>> not mentionned...
>>
>> Even
>>
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/

From even.rouault at spatialys.com  Fri Jan  3 13:32:33 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 Jan 2020 22:32:33 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <CAB28Asi1z0Bexhkdb8dWvNdSeroZTvWtcrCy+omGu-AgQV1Mvw@mail.gmail.com>
References: <3762285.xbWIhGd3QI@even-i700> <4173727.pU7mn6Nje8@even-i700>
 <CAB28Asi1z0Bexhkdb8dWvNdSeroZTvWtcrCy+omGu-AgQV1Mvw@mail.gmail.com>
Message-ID: <1915011.ko6kftWelk@even-i700>

> And possibly, just do a
> post-install, first run background task which bulk downloads the
> complete set of grids from the CDN so that they're available
> already...

This brute force approach can work (unless we reach gigabytes of
geodetic adjustment data :-))
I guess use cases where RFC4 will particular shine will be short-lived jobs
in the context of serverless computing.

> On a different note -- I'm finding it very difficult to find the RFC4
> proposal text. This appears to live only in the proj website contents
> in the rfc4 branch on your proj fork, so aren't actually available on
> the proj website (and googling proj rfc4 gives no useful results as a
> consequence). This seems a step back from the GDAL/trac RFC approach,
> where RFC text is available for widespread review on the GDAL page
> **prior** to the RFC PR merge. Is the approach used for RFC4 the plan
> for RFCs going forward?

GDAL no longer uses Trac for RFCs, so on the same line as PROJ. I do agree
with you that the current situation is slightly less convenient, as the
integration with Sphinx requires merging into  the official tree to have final
rendering. This is slightly complicated in PROJ case as proj.org is generated
from the current of the stable branch, so each time a change would be done,
that would require pushing into master + active branch, hence I'm differing
that until the doc is in its final state. We would probably need to have
some scratch area with the doc rendering coming from pull requests (something
we have considered for GDAL actually, but not implemented)

~~~~

So let me re-iterate that a reasonable rendering of the doc can be currently
found at:
https://github.com/rouault/PROJ/blob/rfc4_remote_and_geotiff_grid/docs/source/community/rfc/rfc-4.rst

And the pull request with incremental changes at:
https://github.com/OSGeo/PROJ/pull/1747

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Sat Jan  4 08:00:01 2020
From: howard at hobu.co (Howard Butler)
Date: Sat, 4 Jan 2020 10:00:01 -0600
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <CAH0YoEPxExwUBe2PQ8TF3PtdPz5VC39WES=xUT8vy37_Ue_eGg@mail.gmail.com>
References: <3762285.xbWIhGd3QI@even-i700>
 <CAH0YoEPxExwUBe2PQ8TF3PtdPz5VC39WES=xUT8vy37_Ue_eGg@mail.gmail.com>
Message-ID: <4C065F97-E124-4C51-9C4B-DF0DF9C270FD@hobu.co>



> On Jan 3, 2020, at 10:35 AM, Thomas Knudsen <knudsen.thomas at gmail.com> wrote:
> 
> As we all know geo-programming competence is measured in the proposed SI unit
> “rouault” - abbreviated Rt. Currently the Rt cannot be expressed based on known
> physical constants (although this is a matter of active research by leading
> standards laboratories), so it is tentatively defined by the sample specimen
> curated by the company Spatialys, and exposed to the world for calibration,
> through Github.
> 

...

> I am fully aware that obtaining funding for such “invisible” work is very hard,
> and I am not at all volunteering to do it myself.

GDALBarn and the efforts of this RFC are attempts to explicitly fund invisible infrastructure work. By definition, infrastructure work effects everyone because all our software drives over these rails, bridges, and stations. We have taken care to organize the activities so it isn't a decade-long miasma of transition like Python 3, but there is still going to be a little transition pain. Most of that user-inflicted transition pain appears to be centered around the deficiencies of proj4 definitions and rectifying sins of the past in regard to those. Affected projects are going to have to take their medicine in regards to that, in exchange for now being able to communicate WKTv2 descriptions with more than a single software library. Even has also done a lot to try to soften its bitterness, but it is still there and a consequence of PROJ transitioning to a fully-featured geodetic transformation library.

> libtiff
> curl
> zlib

libtiff, curl, and zlib all have operational lifetimes that will be equivalent or longer than PROJ. PROJ is over 35 years old. Just about every attempt to retire PROJ has resulted in a fork that is out-of-date and stale in some way. The required additional support libraries of zlib and libtiff have equivalents or cross-compiled versions in alternative execution runtimes such as Javascript or Java. 

> One thing I especially worry about is the potential loss of mind share:
> Up until version 5.0, PROJ depended on the C standard library only, and
> hence was quite easy to build and contribute to.

I disagree that PROJ was ever easy to contribute to. It has always been a specialists' library that required someone with significant math abilities, experience with preprocessor macro torture, and comfort with C conventions of the 1980s. The size of population that those skills was a lot less than your Rt constant for a lot of years. The work that you and Kristian put in for PROJ 5.0 to step away from those requirements is what has enabled Even's development to happen. In a sense, this is all your fault ;)

Your PROJ 5.0 efforts definitively changed the thesis statement of PROJ from a "a library of cartographic reprojection operations" to "a library of cartographic reprojection operations with a geodetic transformation engine". The follow-ons of WKTv2 support (aligning and leading with the standards of the community) and grids/CDN (getting ahead of a challenging support data issue) are both in support of the latter addition to PROJ's thesis statement. Geodetic transformation engines require the ability to communicate transformation operations and they require support data to apply models to data. Without either, they are broken. 

> With the increasing build complexity, I fear that less new material (projections
> and other new operations) will be contributed to PROJ, unless we make it easier
> to integrate external code seamlessly with the library - a thing that is not
> easily done with the current static tables of operations.

We can make it easier to contribute these kinds of things with documentation, examples, and workflow that help a contributor with passing familiarity with the library add their new methods in a modular way. We are missing this kind of bootstrapping documentation.

Howard



From gdt at lexort.com  Sun Jan  5 09:35:19 2020
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 05 Jan 2020 12:35:19 -0500
Subject: [PROJ] included tests and grids
In-Reply-To: <20f48cd8-daa9-87c6-60e4-8f63bad4e7f0@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Mon, 30 Dec 2019 07:08:16 +0100")
References: <rmimuba4j2v.fsf@s1.lexort.com>
 <20f48cd8-daa9-87c6-60e4-8f63bad4e7f0@xs4all.nl>
Message-ID: <rmi4kx9957s.fsf_-_@s1.lexort.com>

Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 12/30/19 3:56 AM, Greg Troxel wrote:
>> Are tests of 6.2.1 expected to pass?  With the following grids, or
>> something else?
>
> The tests are expected to pass with only the grids from proj-datumgrid
> available, when also adding grids from the regional archives you should
> expect failures like these.

Thanks for explaining that to me (again!).

All:

I have added to my in-progress proj6 package the notion of an option for
grids, and added a faux test target to fail when the option is enabled.

I understand how we got here, but the combination of it being good for
users to have the grids (assuming they have the disk space, which I
think most do) and it being bad to have grids for testing means that
it's hard to run the tests.  (Yes, I realize one could split the
packages.)

So it would be nice if either the tests expected what seems to be the
standard set of extra grids (i.e., what is listed at
https://proj.org/download.html under "Current Release"), or somehow
avoided reading things that aren't part of base.

To me, this is part of a larger repeatability issue.  I understand that
there are transforms of different accuracy, but the computer scientist
in me wants the property that "install proj, do transform x" will either
get a consistent answer or fail.  But I realize there are lots of other
opinions, so I'll say this briefly and try not to do so more than once
a year.

From gdt at lexort.com  Sun Jan  5 09:41:21 2020
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 05 Jan 2020 12:41:21 -0500
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk> (Kristian Evers's
 message of "Wed, 1 Jan 2020 20:56:54 +0000")
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
Message-ID: <rmizhf17qda.fsf@s1.lexort.com>

The downloage page:

  https://proj.org/download.html

lists "PDF Manual" as being at:

  https://raw.githubusercontent.com/OSGeo/PROJ/gh-pages/proj.pdf

I wondered how it was versioned, and see that it is freshly generated
for 6.3.0.

It would be really nice if this were at

  https://download.osgeo.org/proj/

as

  proj-manual-6.3.0.pdf

or something like that.   This would make it easier to include in binary
packages, because:

  The file would be versioned, so that someone with e.g. 6.2.1 package
  control files could still build that package with the 6.2.1 manual.
  (In general, packaging systems aim to be reproducible, which leads to
  a ddislike of URLs with variable contents.)

  It would be downloadable from the same base URL, which makes life
  easier.

Thanks,
Greg

From sebastic at xs4all.nl  Sun Jan  5 10:13:08 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Sun, 5 Jan 2020 19:13:08 +0100
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <rmizhf17qda.fsf@s1.lexort.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
Message-ID: <8a8f2fdd-941f-10aa-81b3-60a946a3733a@xs4all.nl>

On 1/5/20 6:41 PM, Greg Troxel wrote:
> I wondered how it was versioned, and see that it is freshly generated
> for 6.3.0.

You can generate it yourself when you use the sources from GitHub:

 https://github.com/OSGeo/PROJ/tree/master/docs

Use the release tags to get the specific version.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Sun Jan  5 10:30:42 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 05 Jan 2020 19:30:42 +0100
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <rmizhf17qda.fsf@s1.lexort.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
Message-ID: <2273684.fb6arvOvHh@even-i700>

Greg,

> I wondered how it was versioned, and see that it is freshly generated
> for 6.3.0.

It is actually generated as part of the continuous integration:

https://github.com/OSGeo/PROJ/blob/master/travis/build_docs.sh
https://github.com/OSGeo/PROJ/blob/master/travis/deploy_website.sh

and the later stage is only applied for the current stable branch:
https://github.com/OSGeo/PROJ/blob/6.3/travis/after_success.sh#L14

> 
> It would be really nice if this were at
> 
>   https://download.osgeo.org/proj/
> 
> as
> 
>   proj-manual-6.3.0.pdf
> 
> or something like that.   This would make it easier to include in binary
> packages, because:
> 
>   The file would be versioned, so that someone with e.g. 6.2.1 package
>   control files could still build that package with the 6.2.1 manual.
>   (In general, packaging systems aim to be reproducible, which leads to
>   a ddislike of URLs with variable contents.)
> 
>   It would be downloadable from the same base URL, which makes life
>   easier.

If you want a manual of 6.3.0, you can replicate that with something along the 
following lines:
- checkout the 6.3.0 git tag
- install doxygen & graphviz packages
- pip3 install sphinxcontrib-bibtex
- cd docs; make .doxygen_up_to_date latexpdf
- results is in docs/build/latex/proj.pdf

We could indeed include that as part of the release process to create a 
snapshot

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Sun Jan  5 11:33:41 2020
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 05 Jan 2020 14:33:41 -0500
Subject: [PROJ] test failure with 6.3.0 geodtest
Message-ID: <rmid0bx7l62.fsf@s1.lexort.com>

(I have been paged out for a while and realize I am testing things now
that I should have tested earlier.)

I recently updated the pkgsrc-wip entry for proj from 6.0.0 to 6.2.1.
All tests passed on NetBSD 8/amd64 (with no additional datumgrid files).

I then updated to 6.3.0 and the new datumgrids, which went like one
would expect.

Testing 6.3.0 (with no additonal grid files), I get failures in
geodtest:

  ====================================
     PROJ 6.3.0: src/test-suite.log
  ====================================

  # TOTAL: 1
  # PASS:  0
  # SKIP:  0
  # XFAIL: 0
  # FAIL:  1
  # XPASS: 0
  # ERROR: 0

  .. contents:: :depth: 2

  FAIL: geodtest
  ==============

  checkEquals fails: 1.001875e+07 != 3.002268e+07 +/- 1
  checkEquals fails: 1.001875e+07 != 2.002072e+07 +/- 1
  Planimeter0 fail: 2
  checkEquals fails: 7.612398e-07 != 1000000 +/- 0.01
  Planimeter29 fail: 1
  FAIL geodtest (exit status: 2)

This seems to be two planimeter test cases only, and as I read the test
code, the rest of the planimeter cases are ok, as are all the rest of
the many test.

The system gets a clean pass from the floating-point test paranoia.


I assume this test passes on Linux/amd64.  I am curious what other
platforms it has been run on, and results.

From gdt at lexort.com  Sun Jan  5 11:36:26 2020
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 05 Jan 2020 14:36:26 -0500
Subject: [PROJ] test failure with 6.3.0 geodtest
In-Reply-To: <rmid0bx7l62.fsf@s1.lexort.com> (Greg Troxel's message of "Sun,
 05 Jan 2020 14:33:41 -0500")
References: <rmid0bx7l62.fsf@s1.lexort.com>
Message-ID: <rmi8sml7l1h.fsf@s1.lexort.com>

I did find a warning in the build:

  c++ -DHAVE_CONFIG_H -I.  -DPROJ_LIB=\"/usr/pkg/share/proj\" -DMUTEX_pthread  -I../include  -I/usr/include -Wall -Wextra -Winit-self -Wunused-parameter -Wformat -Werror=format\
  -security -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla -Wdate-time -Wfloat-conversion -Wmissing-prototypes -Wmissing-declarations -Wnon-virtual-dtor -Weffc++ -Wov\
  erloaded-virtual -Wdeprecated -Wzero-as-null-pointer-constant  -O2 -D_FORTIFY_SOURCE=2 -I/usr/include -fvisibility=hidden -MT tests/geodtest.o -MD -MP -MF $depbase.Tpo -c -o \
  tests/geodtest.o tests/geodtest.cpp &&\
  mv -f $depbase.Tpo $depbase.Po
  tests/geodtest.cpp: In function 'int checkNaN(double)':
  tests/geodtest.cpp:38:7: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
     if (isnan(x))
         ^
and I'll retry with FORTIFY/SSP disabled.

From even.rouault at spatialys.com  Sun Jan  5 12:29:04 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 05 Jan 2020 21:29:04 +0100
Subject: [PROJ] test failure with 6.3.0 geodtest
In-Reply-To: <rmid0bx7l62.fsf@s1.lexort.com>
References: <rmid0bx7l62.fsf@s1.lexort.com>
Message-ID: <5531003.2t44UkIDBz@even-i700>

> This seems to be two planimeter test cases only, and as I read the test
> code, the rest of the planimeter cases are ok, as are all the rest of
> the many test.
> 
> The system gets a clean pass from the floating-point test paranoia.
> 
> 
> I assume this test passes on Linux/amd64.  I am curious what other
> platforms it has been run on, and results.

CI also tests FreeBSD 11, MSVC 2015 & 2017 and MacOSX, and all are successful 
on the whole test suite.
I see that geodesic.c has seen non trivial changes between 6.2.1 and 6.3.0, 
one of them being that we rely on C99 for PROJ builds. Is your setup (compiler 
+ libc) of netBSD 8 C99 compliant?
You might try building with -DHAVE_C99_MATH=0 to check that.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Sun Jan  5 12:52:33 2020
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 05 Jan 2020 15:52:33 -0500
Subject: [PROJ] test failure with 6.3.0 geodtest
In-Reply-To: <5531003.2t44UkIDBz@even-i700> (Even Rouault's message of "Sun,
 05 Jan 2020 21:29:04 +0100")
References: <rmid0bx7l62.fsf@s1.lexort.com> <5531003.2t44UkIDBz@even-i700>
Message-ID: <rmik16562y6.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

>> This seems to be two planimeter test cases only, and as I read the test
>> code, the rest of the planimeter cases are ok, as are all the rest of
>> the many test.
>> 
>> The system gets a clean pass from the floating-point test paranoia.
>> 
>> 
>> I assume this test passes on Linux/amd64.  I am curious what other
>> platforms it has been run on, and results.
>
> CI also tests FreeBSD 11, MSVC 2015 & 2017 and MacOSX, and all are successful 
> on the whole test suite.

Thanks, that's useful.

> I see that geodesic.c has seen non trivial changes between 6.2.1 and 6.3.0, 
> one of them being that we rely on C99 for PROJ builds. Is your setup (compiler 
> + libc) of netBSD 8 C99 compliant?

Yes, it's gcc 5.5.0 and I have declared C99 and C++11.   proj's
configure says:

  checking dependency style of gcc... gcc3
  checking for gcc option to accept ISO C99... none needed
  checking whether we are using the GNU C++ compiler... yes
  checking whether c++ accepts -g... yes
  checking dependency style of c++... gcc3
  checking whether c++ supports C++11 features by default... yes

> You might try building with -DHAVE_C99_MATH=0 to check that.

With that it passes, which helps narrow down things a lot.  I'll ask the
NetBSD math experts to look into it.

I suppose I can bisect on the various replacements the file has.

From even.rouault at spatialys.com  Sun Jan  5 14:11:19 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 05 Jan 2020 23:11:19 +0100
Subject: [PROJ] included tests and grids
In-Reply-To: <rmi4kx9957s.fsf_-_@s1.lexort.com>
References: <rmimuba4j2v.fsf@s1.lexort.com>
 <20f48cd8-daa9-87c6-60e4-8f63bad4e7f0@xs4all.nl>
 <rmi4kx9957s.fsf_-_@s1.lexort.com>
Message-ID: <1843864.M8uP8HkOtJ@even-i700>

> So it would be nice if either the tests expected what seems to be the
> standard set of extra grids (i.e., what is listed at
> https://proj.org/download.html under "Current Release"), or somehow
> avoided reading things that aren't part of base.

https://github.com/OSGeo/PROJ/pull/1822 should fix this issue

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Sun Jan  5 16:44:52 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 6 Jan 2020 10:44:52 +1000
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <1915011.ko6kftWelk@even-i700>
References: <3762285.xbWIhGd3QI@even-i700> <4173727.pU7mn6Nje8@even-i700>
 <CAB28Asi1z0Bexhkdb8dWvNdSeroZTvWtcrCy+omGu-AgQV1Mvw@mail.gmail.com>
 <1915011.ko6kftWelk@even-i700>
Message-ID: <CAB28Ashy_WPYfcq9uyvkZUksoxdOAdWVS7aZACewxyp9Dj3oSQ@mail.gmail.com>

On Sat, 4 Jan 2020 at 07:32, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > And possibly, just do a
> > post-install, first run background task which bulk downloads the
> > complete set of grids from the CDN so that they're available
> > already...
>
> This brute force approach can work (unless we reach gigabytes of
> geodetic adjustment data :-))

The other issue would be keeping track of updates to the grids. I'm
guessing there's no public api for determining the grid changes
available?

> GDAL no longer uses Trac for RFCs, so on the same line as PROJ. I do agree
> with you that the current situation is slightly less convenient, as the
> integration with Sphinx requires merging into  the official tree to have final
> rendering. This is slightly complicated in PROJ case as proj.org is generated
> from the current of the stable branch, so each time a change would be done,
> that would require pushing into master + active branch, hence I'm differing
> that until the doc is in its final state. We would probably need to have
> some scratch area with the doc rendering coming from pull requests (something
> we have considered for GDAL actually, but not implemented)

Thanks for the explanation! Wouldn't it be possible to treat the RFC
text separate from the RFC implementation, and merge the RFC text
before the implementation is done/merged?

Nyall


>
> ~~~~
>
> So let me re-iterate that a reasonable rendering of the doc can be currently
> found at:
> https://github.com/rouault/PROJ/blob/rfc4_remote_and_geotiff_grid/docs/source/community/rfc/rfc-4.rst
>
> And the pull request with incremental changes at:
> https://github.com/OSGeo/PROJ/pull/1747
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From gdt at lexort.com  Sun Jan  5 17:05:41 2020
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 05 Jan 2020 20:05:41 -0500
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <CAB28Ashy_WPYfcq9uyvkZUksoxdOAdWVS7aZACewxyp9Dj3oSQ@mail.gmail.com>
 (Nyall Dawson's message of "Mon, 6 Jan 2020 10:44:52 +1000")
References: <3762285.xbWIhGd3QI@even-i700> <4173727.pU7mn6Nje8@even-i700>
 <CAB28Asi1z0Bexhkdb8dWvNdSeroZTvWtcrCy+omGu-AgQV1Mvw@mail.gmail.com>
 <1915011.ko6kftWelk@even-i700>
 <CAB28Ashy_WPYfcq9uyvkZUksoxdOAdWVS7aZACewxyp9Dj3oSQ@mail.gmail.com>
Message-ID: <rmipnfx1jiy.fsf@s1.lexort.com>

Nyall Dawson <nyall.dawson at gmail.com> writes:

> On Sat, 4 Jan 2020 at 07:32, Even Rouault <even.rouault at spatialys.com> wrote:
>>
>> > And possibly, just do a
>> > post-install, first run background task which bulk downloads the
>> > complete set of grids from the CDN so that they're available
>> > already...
>>
>> This brute force approach can work (unless we reach gigabytes of
>> geodetic adjustment data :-))
>
> The other issue would be keeping track of updates to the grids. I'm
> guessing there's no public api for determining the grid changes
> available?

I am behind in reading everything, but I would hope that within the proj
world the downloaded grids have version numbers and are essentially just
a caching distributed filesystem to get parts of the files which could
have been downloaded.  So this should be the same as "does your
installation have proj-datumgrid-north-america-1.3.tar.gz"?

From nyall.dawson at gmail.com  Sun Jan  5 17:07:41 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 6 Jan 2020 11:07:41 +1000
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <rmipnfx1jiy.fsf@s1.lexort.com>
References: <3762285.xbWIhGd3QI@even-i700> <4173727.pU7mn6Nje8@even-i700>
 <CAB28Asi1z0Bexhkdb8dWvNdSeroZTvWtcrCy+omGu-AgQV1Mvw@mail.gmail.com>
 <1915011.ko6kftWelk@even-i700>
 <CAB28Ashy_WPYfcq9uyvkZUksoxdOAdWVS7aZACewxyp9Dj3oSQ@mail.gmail.com>
 <rmipnfx1jiy.fsf@s1.lexort.com>
Message-ID: <CAB28Ash93_LT=Nqe+pQikDXy04O=890puwTZFSJL-_6JoT4mFg@mail.gmail.com>

On Mon, 6 Jan 2020 at 11:05, Greg Troxel <gdt at lexort.com> wrote:
>
> Nyall Dawson <nyall.dawson at gmail.com> writes:
>
> > On Sat, 4 Jan 2020 at 07:32, Even Rouault <even.rouault at spatialys.com> wrote:
> >>
> >> > And possibly, just do a
> >> > post-install, first run background task which bulk downloads the
> >> > complete set of grids from the CDN so that they're available
> >> > already...
> >>
> >> This brute force approach can work (unless we reach gigabytes of
> >> geodetic adjustment data :-))
> >
> > The other issue would be keeping track of updates to the grids. I'm
> > guessing there's no public api for determining the grid changes
> > available?
>
> I am behind in reading everything, but I would hope that within the proj
> world the downloaded grids have version numbers and are essentially just
> a caching distributed filesystem to get parts of the files which could
> have been downloaded.  So this should be the same as "does your
> installation have proj-datumgrid-north-america-1.3.tar.gz"?

Right - but you'd still need an api for querying the latest grid
version (or you'd have to implement this part yourself)

Nyall

From kreve at sdfe.dk  Sun Jan  5 23:47:53 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 6 Jan 2020 07:47:53 +0000
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <2273684.fb6arvOvHh@even-i700>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
Message-ID: <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>

> We could indeed include that as part of the release process to create a 
> Snapshot

It would be great to have this as part of the "make dist" step in the release
process. The same goes for the man-pages. I don't think that it is too
complicated to set up. 

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 5. januar 2020 19:31
To: proj at lists.osgeo.org
Subject: Re: [PROJ] proj manual, versioning, download location

Greg,

> I wondered how it was versioned, and see that it is freshly generated
> for 6.3.0.

It is actually generated as part of the continuous integration:

https://github.com/OSGeo/PROJ/blob/master/travis/build_docs.sh
https://github.com/OSGeo/PROJ/blob/master/travis/deploy_website.sh

and the later stage is only applied for the current stable branch:
https://github.com/OSGeo/PROJ/blob/6.3/travis/after_success.sh#L14

> 
> It would be really nice if this were at
> 
>   https://download.osgeo.org/proj/
> 
> as
> 
>   proj-manual-6.3.0.pdf
> 
> or something like that.   This would make it easier to include in binary
> packages, because:
> 
>   The file would be versioned, so that someone with e.g. 6.2.1 package
>   control files could still build that package with the 6.2.1 manual.
>   (In general, packaging systems aim to be reproducible, which leads to
>   a ddislike of URLs with variable contents.)
> 
>   It would be downloadable from the same base URL, which makes life
>   easier.

If you want a manual of 6.3.0, you can replicate that with something along the 
following lines:
- checkout the 6.3.0 git tag
- install doxygen & graphviz packages
- pip3 install sphinxcontrib-bibtex
- cd docs; make .doxygen_up_to_date latexpdf
- results is in docs/build/latex/proj.pdf

We could indeed include that as part of the release process to create a 
snapshot

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From kreve at sdfe.dk  Mon Jan  6 02:07:58 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 6 Jan 2020 10:07:58 +0000
Subject: [PROJ] Budget for 2020
Message-ID: <8223cd3e01be4503a5e483b8999d44ea@sdfe.dk>

All,

The OSGeo board is asking projects to submit their budgets for 2020 [0]. This is the
first time PROJ is able to receive funding directly from OSGeo. Since we been able
to run without a budget for 30+ years I don't expect that we need much this year
but I would encourage you all to suggest ways we can improve the project by means
of OSGeo funding. Initially 2000 USD is allotted all projects but projects are allowed
to request more or less than that. I expect that we will fall in the "less" part of that
statement. Especially since our main expenses are continuous integration and git-lfs
support on GitHub, both of which are planned to be covered directly by OSGeo as
they are cross-project costs.

I have a few suggestions myself:


1.      Payment for proj.org  - as far as I know this is done on a charity basis by either Howard Butler or Paul Ramsey

2.      Maintenance of project infrastructure such as continuous integration, GitHub bots, etc. Things break from time to time and fixing them is often times very tedious. A candidate for this category would be establishing a new backporting bot since the old one stopped supporting our use cases.

3.      Travel expenses for code sprints or FOSS4G

4.      Merchandise - we've got a new logo, I think that it is only fitting that it get put on stickers!

The budget has to be submitted by January 13th [1] so please don't hold your suggestions back to long.

Best regards
Kristian

[0] https://wiki.osgeo.org/wiki/OSGeo_Budget_2020
[1] https://lists.osgeo.org/pipermail/board/2020-January/012507.html

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200106/b2273b5f/attachment-0001.html>

From even.rouault at spatialys.com  Mon Jan  6 05:30:45 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jan 2020 14:30:45 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <CAB28Ash93_LT=Nqe+pQikDXy04O=890puwTZFSJL-_6JoT4mFg@mail.gmail.com>
References: <3762285.xbWIhGd3QI@even-i700> <rmipnfx1jiy.fsf@s1.lexort.com>
 <CAB28Ash93_LT=Nqe+pQikDXy04O=890puwTZFSJL-_6JoT4mFg@mail.gmail.com>
Message-ID: <1745552.nqXnqdD1oB@even-i700>

On lundi 6 janvier 2020 11:07:41 CET Nyall Dawson wrote:
> On Mon, 6 Jan 2020 at 11:05, Greg Troxel <gdt at lexort.com> wrote:
> > Nyall Dawson <nyall.dawson at gmail.com> writes:
> > > On Sat, 4 Jan 2020 at 07:32, Even Rouault <even.rouault at spatialys.com> 
wrote:
> > >> > And possibly, just do a
> > >> > post-install, first run background task which bulk downloads the
> > >> > complete set of grids from the CDN so that they're available
> > >> > already...
> > >> 
> > >> This brute force approach can work (unless we reach gigabytes of
> > >> geodetic adjustment data :-))
> > > 
> > > The other issue would be keeping track of updates to the grids. I'm
> > > guessing there's no public api for determining the grid changes
> > > available?
> > 
> > I am behind in reading everything, but I would hope that within the proj
> > world the downloaded grids have version numbers and are essentially just
> > a caching distributed filesystem to get parts of the files which could
> > have been downloaded.  So this should be the same as "does your
> > installation have proj-datumgrid-north-america-1.3.tar.gz"?
> 
> Right - but you'd still need an api for querying the latest grid
> version (or you'd have to implement this part yourself)

Regarding how files are managed on the CDN, the idea is that a given grid 
identified by a filename is only updated if it contains errors (in its data
or metadata). Which is different from releasing an improved version of a 
model, for example the successive generations of the USA, Australia or New 
Zealand geoid models that have each their own filename.

The local cache of grid chunks stores the value of a few HTTP headers (file 
size, Last-Modified, ETag) in a table, as well as the timestamp of the last 
time when it has checked them. When the current timestamp is > TTL value + 
last_checked_timestamp (where TTL value defaults to one day), the cache then 
queries again one chunk from the CDN to check if the value of those HTTP 
headers has changed or not. If they have, then it discards all cached chunks 
of that files, so they are retrieved again from the CDN.

There's no public API that exposes that logic for people who would want to
do whole file download.

Would the following function be useful ?

/** Download a file in the PROJ user-writable directory.
 *
 * The file will only be downloaded if it does not exist yet in the
 * user-writable directory, or if it is determined that a more recent
 * version exists. To determine if a more recent version exists, PROJ will
 * use the "downloaded_files" table of its grid cache database.
 * Consequently files manually placed in the user-writable
 * directory without using this function would be considered as
 * non-existing/obsolete and would be unconditionnaly downloaded again.
 *
 * This function can only be used if networking is enabled, and either
 * the default curl network API or a custom one have been installed.
 *
 * @param ignore_ttl_setting If set to FALSE, PROJ will only check the
 *                           recentness of an already downloaded file, if
 *                           the delay between the last time it has been
 *                           verified and the current time exceeds the TTL
 *                           setting. This can save network accesses.
 *                           If set to TRUE, PROJ will unconditionnally
 *                           check from the server the recentness of the file.
 * @return TRUE if the download was successful (or not needed)
 */

int proj_download_file(
  PJ_CONTEXT* ctx,
  const char* url_or_filename,
  int ignore_ttl_setting,
  int (*progress_cbk)(PJ_CONTEXT*, double pct, void* user_data),
  void* user_data);

That said, I can anticipate issues on Windows in the situation where a PROJ 
pipeline would have a grid opened from the PROJ user-writable directory,
and someone would call proj_download_file() on that file, and it would be
determined that we have to update it. We would not be able to replace
the file, because it would be already opened. So we would probably need some 
logic to use a different local filename for the most recent version, store in 
the database the most recent local filename, and the deprecated one(s), and do 
cleanup when we can actually delete files... (reading a bit on the subject,
it appears the FILE_SHARE_DELETE flag of the Win32 API OpenFile() wouldn't 
even solve the issue, as it allows to delete a opened file, but not to create 
a file with the same name while the old version is still opened, contrary to 
POSIX unlink())

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Mon Jan  6 05:56:23 2020
From: howard at hobu.co (Howard Butler)
Date: Mon, 6 Jan 2020 07:56:23 -0600
Subject: [PROJ] Budget for 2020
In-Reply-To: <8223cd3e01be4503a5e483b8999d44ea@sdfe.dk>
References: <8223cd3e01be4503a5e483b8999d44ea@sdfe.dk>
Message-ID: <2A2FB6F8-2B0C-413C-B7B6-E04A384A1778@hobu.co>



> On Jan 6, 2020, at 4:07 AM, Kristian Evers <kreve at sdfe.dk> wrote:
>  
> 1.      Payment for proj.org <http://proj.org/>  - as far as I know this is done on a charity basis by either Howard Butler or Paul Ramsey

proj.org and proj4.org are already completely managed by OSGeo SAC, and OSGeo paid for the transfer and ongoing registration of proj.org. 

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200106/51338bf8/attachment.html>

From gdt at lexort.com  Mon Jan  6 06:08:31 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 06 Jan 2020 09:08:31 -0500
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <1745552.nqXnqdD1oB@even-i700> (Even Rouault's message of "Mon,
 06 Jan 2020 14:30:45 +0100")
References: <3762285.xbWIhGd3QI@even-i700> <rmipnfx1jiy.fsf@s1.lexort.com>
 <CAB28Ash93_LT=Nqe+pQikDXy04O=890puwTZFSJL-_6JoT4mFg@mail.gmail.com>
 <1745552.nqXnqdD1oB@even-i700>
Message-ID: <rmilfqk1xuo.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

> Regarding how files are managed on the CDN, the idea is that a given grid 
> identified by a filename is only updated if it contains errors (in its data
> or metadata). Which is different from releasing an improved version of a 
> model, for example the successive generations of the USA, Australia or New 
> Zealand geoid models that have each their own filename.

I am really uncomfortable with a single name mapping to variable data.
This seems very much like replacing a software tarball for
foo-1.2.tar.gz with a different version.

What is driving the need to not change the name in some way?   It would
seem that some sort of micro-version could be implemented for changes.

It would also seem that the CDN download service should be essentially
providing a different form of access to datumgrid files that one could
download, and that the download service should have the same version
number scheme as the regular files.  Maybe I don't get something, but it
seems best to have a single authoritative data source, and then two
methods to get it.


> The local cache of grid chunks stores the value of a few HTTP headers (file 
> size, Last-Modified, ETag) in a table, as well as the timestamp of the last 
> time when it has checked them. When the current timestamp is > TTL value + 
> last_checked_timestamp (where TTL value defaults to one day), the cache then 
> queries again one chunk from the CDN to check if the value of those HTTP 
> headers has changed or not. If they have, then it discards all cached chunks 
> of that files, so they are retrieved again from the CDN.

That seems sensible for variable data.  From a repeatability point of
view, the notion of variable data for a name seems uncomfortable, as I
don't see any way to record what was done and to be able to do it again.

> There's no public API that exposes that logic for people who would want to
> do whole file download.

>From a packaging point of view, it seems that one should be able to
package whatever grid files there are, if one wants, and then also offer
users a choice of faulting them in dynamically, if they want.  I guess I
am really at a loss to understand why the multiple mechanisms should
cause a departure from a single versioned namespace.

Once there is a versioned namespace (where
proj-datumgrid-northamerica-1.3.tar.gz becomes
proj-datumgrid-northamerica-1.3.1.tar.gz when revised), then the
question arises of how users change their notion of what they want to
fetch.  I would want there to be a versioned directory that lists all of
the names, so that one updates to a version of that directory, and thus
all of the data is fixed.  We more or less have that versioning now with
the included grids, and the versioned extra grid files.    This seems
like a property that should not be give up lightly.

There's also the issue of formats changing.  Right now grids are
released more or less with proj, and there is a notion that proj works
with those grids.  But proj released this week might not work with grids
that are released in 3 years.  That's fine - that's not a reasonable
expectation.

> Would the following function be useful ?
>
> /** Download a file in the PROJ user-writable directory.
>  *
>  * The file will only be downloaded if it does not exist yet in the
>  * user-writable directory, or if it is determined that a more recent
>  * version exists. To determine if a more recent version exists, PROJ will
>  * use the "downloaded_files" table of its grid cache database.
>  * Consequently files manually placed in the user-writable
>  * directory without using this function would be considered as
>  * non-existing/obsolete and would be unconditionnaly downloaded again.
>  *
>  * This function can only be used if networking is enabled, and either
>  * the default curl network API or a custom one have been installed.
>  *
>  * @param ignore_ttl_setting If set to FALSE, PROJ will only check the
>  *                           recentness of an already downloaded file, if
>  *                           the delay between the last time it has been
>  *                           verified and the current time exceeds the TTL
>  *                           setting. This can save network accesses.
>  *                           If set to TRUE, PROJ will unconditionnally
>  *                           check from the server the recentness of the file.
>  * @return TRUE if the download was successful (or not needed)
>  */
>
> int proj_download_file(
>   PJ_CONTEXT* ctx,
>   const char* url_or_filename,
>   int ignore_ttl_setting,
>   int (*progress_cbk)(PJ_CONTEXT*, double pct, void* user_data),
>   void* user_data);
>
> That said, I can anticipate issues on Windows in the situation where a PROJ 
> pipeline would have a grid opened from the PROJ user-writable directory,
> and someone would call proj_download_file() on that file, and it would be
> determined that we have to update it. We would not be able to replace
> the file, because it would be already opened. So we would probably need some 
> logic to use a different local filename for the most recent version, store in 
> the database the most recent local filename, and the deprecated one(s), and do 
> cleanup when we can actually delete files... (reading a bit on the subject,
> it appears the FILE_SHARE_DELETE flag of the Win32 API OpenFile() wouldn't 
> even solve the issue, as it allows to delete a opened file, but not to create 
> a file with the same name while the old version is still opened, contrary to 
> POSIX unlink())

It might be, but I'm more concerned about the versioning issues.   If
a given name become unchangeable, following software distribution
practice, then there is no need for all the ttl stuff.

Also, the directory of available files could have a hash, allowing
validation of downloaded/stored files.

From even.rouault at spatialys.com  Mon Jan  6 06:59:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jan 2020 15:59:16 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <rmilfqk1xuo.fsf@s1.lexort.com>
References: <3762285.xbWIhGd3QI@even-i700> <1745552.nqXnqdD1oB@even-i700>
 <rmilfqk1xuo.fsf@s1.lexort.com>
Message-ID: <2445190.SWUYB1nQHD@even-i700>

On lundi 6 janvier 2020 09:08:31 CET Greg Troxel wrote:
> Even Rouault <even.rouault at spatialys.com> writes:
> > Regarding how files are managed on the CDN, the idea is that a given grid
> > identified by a filename is only updated if it contains errors (in its
> > data
> > or metadata). Which is different from releasing an improved version of a
> > model, for example the successive generations of the USA, Australia or New
> > Zealand geoid models that have each their own filename.
> 
> I am really uncomfortable with a single name mapping to variable data.
> This seems very much like replacing a software tarball for
> foo-1.2.tar.gz with a different version.

Data producers do themselves not adhere to super strict versionning. See the 
warning notice at top of https://www.ngs.noaa.gov/GEOID/GEOID18/ : the wrong 
files have just been replaced with corrected files.

Other example: recently I realized that the NAD83 HARN grids for American 
Samoa were completely wrong: there was an error on the sign of the latitude in 
the extent of the file, so past grids were completely unusable.

> What is driving the need to not change the name in some way?   It would
> seem that some sort of micro-version could be implemented for changes.

The proj.db, that is attached to a given release of PROJ, references for 
example a file "foo.tif". Which behaviour would we want ? That it corresponds 
to the version of "foo.tif" at the time the PROJ release was made (possibly 
with errors corrected later), or the latest version of foo.tif ? Currently 
that's the latest option which is implemented.
If we want super strict versionning, that would mean that we would never 
change a file that has been released, and if we need to do fixes, we would 
then append a v2, v3 etc. to the filename, *and* update proj.db to point to 
the latest version. Do we really need/want that ?
As you say later, one advantage of that approach is that once a file is 
downloaded, we'd know we don't need to possibly refresh it.
A downside is that it requires a bit of changing (but nothing dramatic) in the 
creation process of static snapshots, as we won't be able to just create a zip 
from the content of the git repository, but we'd some logic to only put in the 
zip the latest version of the file (there's no point in creating a new archive 
with obsolete versions of the files. it would be like proposing an option to 
emulate past bugs of the code. you may download an older version of the 
package if you want to replicate old bugs, but there's generally no point, or 
it comes at greater maintainance cost, in providing a way to replicate the 
past wrong behaviour in the new release)

> There's also the issue of formats changing.  Right now grids are
> released more or less with proj, and there is a notion that proj works
> with those grids. But proj released this week might not work with grids
> that are released in 3 years.  That's fine - that's not a reasonable
> expectation.

If in the future we decided to adopt HDF5 or whatever, we could just let the 
old .tif files on the CDN and things would just work fine.

> Also, the directory of available files could have a hash, allowing
> validation of downloaded/stored files.

Yes, we could publish .md5 side car files for each file on the CDN if that may 
help.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Mon Jan  6 07:07:56 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 06 Jan 2020 10:07:56 -0500
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <2445190.SWUYB1nQHD@even-i700> (Even Rouault's message of "Mon,
 06 Jan 2020 15:59:16 +0100")
References: <3762285.xbWIhGd3QI@even-i700> <1745552.nqXnqdD1oB@even-i700>
 <rmilfqk1xuo.fsf@s1.lexort.com> <2445190.SWUYB1nQHD@even-i700>
Message-ID: <rmiblrgzkqb.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

> On lundi 6 janvier 2020 09:08:31 CET Greg Troxel wrote:
>> Even Rouault <even.rouault at spatialys.com> writes:
>> > Regarding how files are managed on the CDN, the idea is that a given grid
>> > identified by a filename is only updated if it contains errors (in its
>> > data
>> > or metadata). Which is different from releasing an improved version of a
>> > model, for example the successive generations of the USA, Australia or New
>> > Zealand geoid models that have each their own filename.
>> 
>> I am really uncomfortable with a single name mapping to variable data.
>> This seems very much like replacing a software tarball for
>> foo-1.2.tar.gz with a different version.
>
> Data producers do themselves not adhere to super strict versionning. See the 
> warning notice at top of https://www.ngs.noaa.gov/GEOID/GEOID18/ : the wrong 
> files have just been replaced with corrected files.
>
> Other example: recently I realized that the NAD83 HARN grids for American 
> Samoa were completely wrong: there was an error on the sign of the latitude in 
> the extent of the file, so past grids were completely unusable.

I think them replacing without versions is a bug (they are geodesists,
not software engineers), but I realize that's fighting city hall.

Even in the HARN case, I think it's good for people to be able to know
that "foo-1.0" is broken and "foo-1.0.1" is what they should use,
instead of "I have foo-1.0; is that the ok version or not?"

>> What is driving the need to not change the name in some way?   It would
>> seem that some sort of micro-version could be implemented for changes.
>
> The proj.db, that is attached to a given release of PROJ, references for 
> example a file "foo.tif". Which behaviour would we want ? That it corresponds 
> to the version of "foo.tif" at the time the PROJ release was made (possibly 
> with errors corrected later), or the latest version of foo.tif ? Currently 
> that's the latest option which is implemented.
> If we want super strict versionning, that would mean that we would never 
> change a file that has been released, and if we need to do fixes, we would 
> then append a v2, v3 etc. to the filename, *and* update proj.db to point to 
> the latest version. Do we really need/want that ?
> As you say later, one advantage of that approach is that once a file is 
> downloaded, we'd know we don't need to possibly refresh it.
> A downside is that it requires a bit of changing (but nothing dramatic) in the 
> creation process of static snapshots, as we won't be able to just create a zip 
> from the content of the git repository, but we'd some logic to only put in the 
> zip the latest version of the file (there's no point in creating a new archive 
> with obsolete versions of the files.

I would think the old files could be "git rm"ed, and the files built
from them for distribution could remain.  This is much like the old proj
release sources still being on the download area, even though the
sources have long been changed.

> it would be like proposing an option to 
> emulate past bugs of the code. you may download an older version of the 
> package if you want to replicate old bugs, but there's generally no point, or 
> it comes at greater maintainance cost, in providing a way to replicate the 
> past wrong behaviour in the new release)

I see using an older file as exactly like using an older proj version.
We have the old verions of proj-datumgrids on the download site.   My
point really is that just because there is an additional method to
obtain the bits, the basic semantics shouldn't change.

>> There's also the issue of formats changing.  Right now grids are
>> released more or less with proj, and there is a notion that proj works
>> with those grids. But proj released this week might not work with grids
>> that are released in 3 years.  That's fine - that's not a reasonable
>> expectation.
>
> If in the future we decided to adopt HDF5 or whatever, we could just let the 
> old .tif files on the CDN and things would just work fine.

Sure.  I meant that there is an issue if an older proj then starts to
download files that are newer.  But I see your point that the files are
referenced from proj.db, so this wotn' happen.

>> Also, the directory of available files could have a hash, allowing
>> validation of downloaded/stored files.
>
> Yes, we could publish .md5 side car files for each file on the CDN if that may 
> help.


I am probably a minority opinion here, but I am coming at this from a
packaging and a configuration management viewpoint, which is probably
not the norm.  Thanks for listening.

From even.rouault at spatialys.com  Mon Jan  6 07:21:36 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jan 2020 16:21:36 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <rmiblrgzkqb.fsf@s1.lexort.com>
References: <3762285.xbWIhGd3QI@even-i700> <2445190.SWUYB1nQHD@even-i700>
 <rmiblrgzkqb.fsf@s1.lexort.com>
Message-ID: <10916846.uAZTlv9gIn@even-i700>

> Even in the HARN case, I think it's good for people to be able to know
> that "foo-1.0" is broken and "foo-1.0.1" is what they should use,
> instead of "I have foo-1.0; is that the ok version or not?"

For a number of uses of the API, like using the high level 
proj_create_crs_to_crs(), people will not know which grids or version of grids 
are used.

One downside of the strict versionning approach is that people using manual 
pipelines like "+proj=hgridshift +grids=foo.tif", where foo.tif would be 
provided by proj-datumgrid-geotiff-1.0.zip, would have to change it to
"+proj=hgridshift +grids=foov2.tif" if they upgrade to
proj-datumgrid-geotiff-1.1.zip where foo.tif has been replaced by foov2.tif. 
Both a feature and a bug depending on the point of view...

> I would think the old files could be "git rm"ed, and the files built
> from them for distribution could remain.

Yes, I was thinking that the "aws s3 sync" we use to resynchroize the CDN with 
the proj-datumgrid-geotiff repository would perhaps remove grids that are no 
longer in the local source directory, but reading at the doc, it is only 
additive by default, so yes removing from git master would be reasonable.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mwtoews at gmail.com  Mon Jan  6 14:50:04 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 7 Jan 2020 11:50:04 +1300
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
 <2273684.fb6arvOvHh@even-i700> <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
Message-ID: <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>

I've previously suggested adapting Read the Docs [1] to publish the
PROJ documentation for multiple versions and formats.

It could be worthwhile investigating how to integrate RTD to provide this need.

[1] https://github.com/OSGeo/PROJ/issues/1122

From nyall.dawson at gmail.com  Mon Jan  6 16:08:13 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 7 Jan 2020 10:08:13 +1000
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <1745552.nqXnqdD1oB@even-i700>
References: <3762285.xbWIhGd3QI@even-i700> <rmipnfx1jiy.fsf@s1.lexort.com>
 <CAB28Ash93_LT=Nqe+pQikDXy04O=890puwTZFSJL-_6JoT4mFg@mail.gmail.com>
 <1745552.nqXnqdD1oB@even-i700>
Message-ID: <CAB28Ashg7Sej86KH2y4a=6rvd3b6EV0UP9zWCoCyUDp9DWJ=xQ@mail.gmail.com>

> Would the following function be useful ?
>
> /** Download a file in the PROJ user-writable directory.
>  *
>  * The file will only be downloaded if it does not exist yet in the
>  * user-writable directory, or if it is determined that a more recent
>  * version exists. To determine if a more recent version exists, PROJ will
>  * use the "downloaded_files" table of its grid cache database.
>  * Consequently files manually placed in the user-writable
>  * directory without using this function would be considered as
>  * non-existing/obsolete and would be unconditionnaly downloaded again.
>  *
>  * This function can only be used if networking is enabled, and either
>  * the default curl network API or a custom one have been installed.
>  *
>  * @param ignore_ttl_setting If set to FALSE, PROJ will only check the
>  *                           recentness of an already downloaded file, if
>  *                           the delay between the last time it has been
>  *                           verified and the current time exceeds the TTL
>  *                           setting. This can save network accesses.
>  *                           If set to TRUE, PROJ will unconditionnally
>  *                           check from the server the recentness of the file.
>  * @return TRUE if the download was successful (or not needed)
>  */
>
> int proj_download_file(
>   PJ_CONTEXT* ctx,
>   const char* url_or_filename,
>   int ignore_ttl_setting,
>   int (*progress_cbk)(PJ_CONTEXT*, double pct, void* user_data),
>   void* user_data);
>

yes -- that looks handy! The only thing I'm unsure about is whether
we'd also need a call to determine in advance IF a download is
required (so that we can alert the user and then trigger the full
download in a background thread)

> That said, I can anticipate issues on Windows in the situation where a PROJ
> pipeline would have a grid opened from the PROJ user-writable directory,
> and someone would call proj_download_file() on that file, and it would be
> determined that we have to update it. We would not be able to replace
> the file, because it would be already opened. So we would probably need some
> logic to use a different local filename for the most recent version, store in
> the database the most recent local filename, and the deprecated one(s), and do
> cleanup when we can actually delete files... (reading a bit on the subject,
> it appears the FILE_SHARE_DELETE flag of the Win32 API OpenFile() wouldn't
> even solve the issue, as it allows to delete a opened file, but not to create
> a file with the same name while the old version is still opened, contrary to
> POSIX unlink())

Wouldn't this be an issue with the on-demand grid downloads too?

Nyall


>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jan  6 16:25:31 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jan 2020 01:25:31 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <CAB28Ashg7Sej86KH2y4a=6rvd3b6EV0UP9zWCoCyUDp9DWJ=xQ@mail.gmail.com>
References: <3762285.xbWIhGd3QI@even-i700> <1745552.nqXnqdD1oB@even-i700>
 <CAB28Ashg7Sej86KH2y4a=6rvd3b6EV0UP9zWCoCyUDp9DWJ=xQ@mail.gmail.com>
Message-ID: <4964217.hhtffHeId4@even-i700>

> yes -- that looks handy! The only thing I'm unsure about is whether
> we'd also need a call to determine in advance IF a download is
> required (so that we can alert the user and then trigger the full
> download in a background thread)

Yes, I was pretty sure we'd need something like that

int proj_is_download_needed(
	PJ_CONTEXT* ctx,
	const char* url_or_filename,
	int ignore_ttl_setting)

> Wouldn't this be an issue with the on-demand grid downloads too?

I don't think so. All grid chunks are stored in a single SQLite database, with 
appropriate exclusive locking (which works as we are on local storage...), so 
we are safe w.r.t such filesystem issue.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jan  6 17:34:00 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jan 2020 02:34:00 +0100
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <10916846.uAZTlv9gIn@even-i700>
References: <3762285.xbWIhGd3QI@even-i700> <rmiblrgzkqb.fsf@s1.lexort.com>
 <10916846.uAZTlv9gIn@even-i700>
Message-ID: <5258213.NS5H1X5vCq@even-i700>

On lundi 6 janvier 2020 16:21:36 CET Even Rouault wrote:
> > Even in the HARN case, I think it's good for people to be able to know
> > that "foo-1.0" is broken and "foo-1.0.1" is what they should use,
> > instead of "I have foo-1.0; is that the ok version or not?"
> 

After discussing this topic of grid versionning with Howard, this seems a bit 
of over-engineering for now, at least for the remote grid fetching part. We 
might reconsider this in the future, for example if grid producers themselves 
adhere to stricter versionning.
The static snapshots of the git repository (to be determined if we go to a 
single one or some other subdivision scheme) will remain the main tools to 
have grid versioning for now.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Mon Jan  6 23:11:02 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 7 Jan 2020 07:11:02 +0000
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
 <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
Message-ID: <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>

Mike,

RTD would definitely be a good option to provide multiple versions of the docs.
If you are willing to spend some time to get that working that would be great.
It’s only recently that we’ve actually had docs that was worth keeping multiple
versions of, so now is a good time to revisit the question of RTD.

We can still use proj.org<http://proj.org> with RTD, right?

/Kristian

On 6 Jan 2020, at 23:50, Mike Taves <mwtoews at gmail.com<mailto:mwtoews at gmail.com>> wrote:

I've previously suggested adapting Read the Docs [1] to publish the
PROJ documentation for multiple versions and formats.

It could be worthwhile investigating how to integrate RTD to provide this need.

[1] https://github.com/OSGeo/PROJ/issues/1122
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200107/5ce7af6b/attachment.html>

From kreve at sdfe.dk  Mon Jan  6 23:16:14 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 7 Jan 2020 07:16:14 +0000
Subject: [PROJ] Budget for 2020
In-Reply-To: <2A2FB6F8-2B0C-413C-B7B6-E04A384A1778@hobu.co>
References: <8223cd3e01be4503a5e483b8999d44ea@sdfe.dk>
 <2A2FB6F8-2B0C-413C-B7B6-E04A384A1778@hobu.co>
Message-ID: <55DCBB93-76E8-4C18-BC09-17041E98D990@sdfe.dk>

That is great Howard. I wasn’t aware of that.

/Kristian

On 6 Jan 2020, at 14:56, Howard Butler <howard at hobu.co<mailto:howard at hobu.co>> wrote:



On Jan 6, 2020, at 4:07 AM, Kristian Evers <kreve at sdfe.dk<mailto:kreve at sdfe.dk>> wrote:

1.      Payment for proj.org<http://proj.org/>  - as far as I know this is done on a charity basis by either Howard Butler or Paul Ramsey

proj.org<http://proj.org/> and proj4.org<http://proj4.org/> are already completely managed by OSGeo SAC, and OSGeo paid for the transfer and ongoing registration of proj.org<http://proj.org/>.

Howard

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200107/a198ab01/attachment.html>

From even.rouault at spatialys.com  Tue Jan  7 04:20:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jan 2020 13:20:07 +0100
Subject: [PROJ] Motion: adopt RFC 4
Message-ID: <4131592.bgbqFsJybT@even-i700>

Hi,

I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
https://github.com/OSGeo/PROJ/pull/1747

Starting with my +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Tue Jan  7 06:07:36 2020
From: howard at hobu.co (Howard Butler)
Date: Tue, 7 Jan 2020 08:07:36 -0600
Subject: [PROJ] RFC4: last chance to comment before motion
In-Reply-To: <5258213.NS5H1X5vCq@even-i700>
References: <3762285.xbWIhGd3QI@even-i700> <rmiblrgzkqb.fsf@s1.lexort.com>
 <10916846.uAZTlv9gIn@even-i700> <5258213.NS5H1X5vCq@even-i700>
Message-ID: <1A639EED-94BB-42A8-B1E3-F8F395192B0F@hobu.co>



> On Jan 6, 2020, at 7:34 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On lundi 6 janvier 2020 16:21:36 CET Even Rouault wrote:
>>> Even in the HARN case, I think it's good for people to be able to know
>>> that "foo-1.0" is broken and "foo-1.0.1" is what they should use,
>>> instead of "I have foo-1.0; is that the ok version or not?"
>> 
> 
> After discussing this topic of grid versionning with Howard, this seems a bit 
> of over-engineering for now, at least for the remote grid fetching part. We 
> might reconsider this in the future, for example if grid producers themselves 
> adhere to stricter versionning.

My worry is PROJ applying its own version naming scheme to grid files will have the effect of the PROJ project creating a new set of canonical names, when they should really be originating from the agencies or the authority.  It isn't PROJ's scope to fix the sins of the grid providers or the authority(s), and if we assume responsibility, we now need to version'ify every grid filename, we need to provide an API to provide a pointer to the "latest" file, and we have to keep a ledger of changes.

> The static snapshots of the git repository (to be determined if we go to a 
> single one or some other subdivision scheme) will remain the main tools to 
> have grid versioning for now.

We have also enabled S3 object versioning on the bucket that hosts the CDN data. Versions aren't public for now, but this will give us protection to rollback in case of a mishap or if it is clear in the future that we need to engineer something to handle the issue. A legitimate worry about expanding this approach is the lock-in for S3/CloudFront, which I agree we should seek to minimize. 

Howard

From howard at hobu.co  Tue Jan  7 06:12:37 2020
From: howard at hobu.co (Howard Butler)
Date: Tue, 7 Jan 2020 08:12:37 -0600
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
 <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
Message-ID: <0529D5DB-9155-407E-894D-CE169F53798C@hobu.co>



> On Jan 7, 2020, at 1:11 AM, Kristian Evers <kreve at sdfe.dk> wrote:
> 
> We can still use proj.org <http://proj.org/> with RTD, right?

Another option is to use RTD's Sphinx templates to support multiple doc versions but keep our own documentation setup. I don't know for sure if PROJ is doing any Sphinx stuff that is unsupported by RTD either.

Howard

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200107/36ff21d1/attachment.html>

From kreve at sdfe.dk  Tue Jan  7 06:19:52 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 7 Jan 2020 14:19:52 +0000
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <0529D5DB-9155-407E-894D-CE169F53798C@hobu.co>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
 <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <0529D5DB-9155-407E-894D-CE169F53798C@hobu.co>
Message-ID: <adee27b01ecc411c8aa160554ed3afb6@sdfe.dk>

It is entirely possible that RTD doesn't support generation of API documentation using Doxygen and Breathe. We also have some custom CSS and the way we handle references isn't completely standard either (as far as I remember).

/Kristian

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Howard Butler
Sent: 7. januar 2020 15:13
To: proj at lists.osgeo.org
Subject: Re: [PROJ] proj manual, versioning, download location




On Jan 7, 2020, at 1:11 AM, Kristian Evers <kreve at sdfe.dk<mailto:kreve at sdfe.dk>> wrote:

We can still use proj.org<http://proj.org/> with RTD, right?

Another option is to use RTD's Sphinx templates to support multiple doc versions but keep our own documentation setup. I don't know for sure if PROJ is doing any Sphinx stuff that is unsupported by RTD either.

Howard

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200107/21d3b3ed/attachment.html>

From mwtoews at gmail.com  Tue Jan  7 11:46:30 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Wed, 8 Jan 2020 08:46:30 +1300
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
 <2273684.fb6arvOvHh@even-i700> <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
Message-ID: <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>

On Tue, 7 Jan 2020 at 20:11, Kristian Evers <kreve at sdfe.dk> wrote:
> RTD would definitely be a good option to provide multiple versions of the docs.
> If you are willing to spend some time to get that working that would be great.
> It’s only recently that we’ve actually had docs that was worth keeping multiple
> versions of, so now is a good time to revisit the question of RTD.
>
> We can still use proj.org with RTD, right?

Sure, I'll investigate this a bit further to see if it's possible,
given the complexity of Doxygen and Breathe. And yes, you can
customize domains.

From kreve at sdfe.dk  Wed Jan  8 05:11:47 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 8 Jan 2020 13:11:47 +0000
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <4131592.bgbqFsJybT@even-i700>
References: <4131592.bgbqFsJybT@even-i700>
Message-ID: <dae4ab9052b94739b21c6ac990920355@sdfe.dk>

+1

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 7. januar 2020 13:20
To: proj at lists.osgeo.org
Subject: [PROJ] Motion: adopt RFC 4

Hi,

I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
https://github.com/OSGeo/PROJ/pull/1747

Starting with my +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From even.rouault at spatialys.com  Wed Jan  8 12:38:43 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 Jan 2020 21:38:43 +0100
Subject: [PROJ] Vertical deflection: of interest for PROJ ?
Message-ID: <37615565.uA5inoFNAI@even-i700>

Hi,

While integrating different datasets over the last months, I've noticed that a 
few geoids (like the USA or Australian geoids) are accompanied with the angles 
for the vertical deflection. I've read a bit about that, but I'm still unclear 
if such data would be useful for what PROJ does, that is coordinate 
transformations.

For the formula converting between ellipsoidal height to orthometric height, 
H = h - N, sometimes instead of the = one sees a ~= . My understanding of the 
typical deflection angles is that the approximation is legitimate, as being 
largely a sub millimetric phenomenon, given that the cosinus of small angles 
is super close to 1.
But would there be an impact on horizontal coordinates ?
For example for a difference of height of 1000 m and a deflection of 50 arc 
second, that would be 1000 * tan(50'') = 0.24 m
But perhaps the use case for a PROJ-like context could be "given a skyscrapper 
1 km high whose facade is vertical along the plumb line, given the coordinates 
at the bottom, what are the coordinates at the top ?", which doesn't seem to 
be something people would use routinely :-)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Wed Jan  8 14:37:18 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 9 Jan 2020 08:37:18 +1000
Subject: [PROJ] Vertical deflection: of interest for PROJ ?
In-Reply-To: <37615565.uA5inoFNAI@even-i700>
References: <37615565.uA5inoFNAI@even-i700>
Message-ID: <CAB28Asj8voTuCuAKKrCKecnUUyUZad=K0yOReir3vE6eiLsSZw@mail.gmail.com>

On Thu, 9 Jan 2020 at 06:38, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> While integrating different datasets over the last months, I've noticed that a
> few geoids (like the USA or Australian geoids) are accompanied with the angles
> for the vertical deflection. I've read a bit about that, but I'm still unclear
> if such data would be useful for what PROJ does, that is coordinate
> transformations.
>
> For the formula converting between ellipsoidal height to orthometric height,
> H = h - N, sometimes instead of the = one sees a ~= . My understanding of the
> typical deflection angles is that the approximation is legitimate, as being
> largely a sub millimetric phenomenon, given that the cosinus of small angles
> is super close to 1.
> But would there be an impact on horizontal coordinates ?
> For example for a difference of height of 1000 m and a deflection of 50 arc
> second, that would be 1000 * tan(50'') = 0.24 m
> But perhaps the use case for a PROJ-like context could be "given a skyscrapper
> 1 km high whose facade is vertical along the plumb line, given the coordinates
> at the bottom, what are the coordinates at the top ?", which doesn't seem to
> be something people would use routinely :-)

Hmmm... you say that now, but with the ever blurring line between
CAD/GIS/BIM I think it IS likely to be a requirement in the near
future!

Nyall

From joel.haasdyk at customerservice.nsw.gov.au  Wed Jan  8 18:07:19 2020
From: joel.haasdyk at customerservice.nsw.gov.au (Joel Haasdyk)
Date: Thu, 9 Jan 2020 02:07:19 +0000
Subject: [PROJ] Vertical deflection: of interest for PROJ ?
In-Reply-To: <ME4P282MB07279D5A9452E623AF22C0C4E2390@ME4P282MB0727.AUSP282.PROD.OUTLOOK.COM>
References: <37615565.uA5inoFNAI@even-i700>
 <CAB28Asj8voTuCuAKKrCKecnUUyUZad=K0yOReir3vE6eiLsSZw@mail.gmail.com>
 <ME4P282MB07279D5A9452E623AF22C0C4E2390@ME4P282MB0727.AUSP282.PROD.OUTLOOK.COM>
Message-ID: <ME4P282MB072775E024A2C2AEBA2DCB3AE2390@ME4P282MB0727.AUSP282.PROD.OUTLOOK.COM>

Great question Even,
Prompted me to review for myself...

As you point out yourself, a 50" deflection of the vertical would result in a deviation of 0.24m at a dHeight of 1000m.
However even at dHeight of only 10m, that means 2.4mm.
As Nyall points out... one man's noise is another man's signal; A couple of mm is a long way, in some applications.
I too would suggest/request that PROJ makes use of the best available information where possible.


Will E. Featherstone & Jean M. Rüeger (2000) The importance of using deviations of the vertical for the reduction of survey data to a geocentric datum, Australian Surveyor, 45:2, 46-61, DOI: 10.1080/00050326.2000.10440341 (available from https://www.tandfonline.com/doi/abs/10.1080/00050326.2000.10440341 or by request to the author, perhaps), 
describes these issues (and more) in detail. That paper aims to remind surveyors that modernising to a global ellipsoid (GRS80) would require use of these corrections, where they were previously largely ignored when using a local Australian ellipsoid (ANS).
It appears that you have likely read this document already;  the 50" deviation in your example is also the maximum deflection expected across the Australian continent (with average 6.8"), after it switched from a local to a global ellipsoid.

The paper discusses the importance for the SURVEY community in applications including:
     1. transformation between astronomical coordinates and geodetic coordinates;
     2. conversion between astronomic or gyro azimuths and geodetic azimuths;
     3. reduction of measured horizontal directions (and angles) to the ellipsoid;
     4. reduction of measured zenith angles to the ellipsoid;
     5. reduction of slope electronic distance measurements (EDM) to the ellipsoid using zenith angles; and
	[See table 10]
     6. determination of height differences from zenith angles and slope distances.
	[See table 16]

Some of the above (e.g. #1, #5, #6) are directly related to your coordinate transformation question.
[Apologies that I can't attach to link the source doc. It is for purchase, so it is not for me to distribute!]

Joel Haasdyk | GDA2020 Implementation Program Manager (NSW)
--------------------------------------------------------------------------------------------------
Spatial Services | Department of Customer Service p (02) 87376322 | m 0427 229 589 e Joel.Haasdyk at customerservice.nsw.gov.au
w www.spatial.nsw.gov.au
Level 14 West, McKell Building, 2-24 Rawson Place, Sydney NSW 2000

https://www.icsm.gov.au/gda2020 (FAQs & Forum)
--------------------------------------------------------------------------------------------------


-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
Sent: Thursday, 9 January 2020 9:37 AM
To: Even Rouault <even.rouault at spatialys.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] Vertical deflection: of interest for PROJ ?

On Thu, 9 Jan 2020 at 06:38, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> While integrating different datasets over the last months, I've 
> noticed that a few geoids (like the USA or Australian geoids) are 
> accompanied with the angles for the vertical deflection. I've read a 
> bit about that, but I'm still unclear if such data would be useful for 
> what PROJ does, that is coordinate transformations.
>
> For the formula converting between ellipsoidal height to orthometric 
> height, H = h - N, sometimes instead of the = one sees a ~= . My 
> understanding of the typical deflection angles is that the 
> approximation is legitimate, as being largely a sub millimetric 
> phenomenon, given that the cosinus of small angles is super close to 1.
> But would there be an impact on horizontal coordinates ?
> For example for a difference of height of 1000 m and a deflection of
> 50 arc second, that would be 1000 * tan(50'') = 0.24 m But perhaps the 
> use case for a PROJ-like context could be "given a skyscrapper
> 1 km high whose facade is vertical along the plumb line, given the 
> coordinates at the bottom, what are the coordinates at the top ?", 
> which doesn't seem to be something people would use routinely :-)

Hmmm... you say that now, but with the ever blurring line between CAD/GIS/BIM I think it IS likely to be a requirement in the near future!

Nyall
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: Thursday, 9 January 2020 7:39 AM
To: proj at lists.osgeo.org
Subject: [PROJ] Vertical deflection: of interest for PROJ ?

Hi,

While integrating different datasets over the last months, I've noticed that a few geoids (like the USA or Australian geoids) are accompanied with the angles for the vertical deflection. I've read a bit about that, but I'm still unclear if such data would be useful for what PROJ does, that is coordinate transformations.

For the formula converting between ellipsoidal height to orthometric height, H = h - N, sometimes instead of the = one sees a ~= . My understanding of the typical deflection angles is that the approximation is legitimate, as being largely a sub millimetric phenomenon, given that the cosinus of small angles is super close to 1.
But would there be an impact on horizontal coordinates ?
For example for a difference of height of 1000 m and a deflection of 50 arc second, that would be 1000 * tan(50'') = 0.24 m But perhaps the use case for a PROJ-like context could be "given a skyscrapper
1 km high whose facade is vertical along the plumb line, given the coordinates at the bottom, what are the coordinates at the top ?", which doesn't seem to be something people would use routinely :-)

Even

--
Spatialys - Geospatial professional services https://clicktime.symantec.com/3KNKDXcsoQUaKZGBsbU9Vr57Vc?u=http%3A%2F%2Fwww.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://clicktime.symantec.com/3T97Jbf5DipVKvTXS4CZPnv7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj



**********************************************************************************
This email message and any attached files is confidential and intended solely for the use of the individual or entity to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure under applicable law. If you have received this email in error, delete all copies and notify the sender.

This email is subject to copyright. No part of it should be reproduced, published, communicated or adapted without the copyright owner's written consent. No employee or agent is authorised to conclude any binding agreement on behalf of the Department of Customer Service (DCS) by email without express written confirmation.

The views or opinions presented in this email are solely those of the author and do not necessarily represent those of the DCS. DCS accepts no liability for any loss or damage arising from the use of this email and the recipient should check this email and any attached files for the presence of viruses.

**********************************************************************************

From even.rouault at spatialys.com  Thu Jan  9 03:17:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 09 Jan 2020 12:17:07 +0100
Subject: [PROJ] Vertical deflection: of interest for PROJ ?
In-Reply-To: <ME4P282MB072775E024A2C2AEBA2DCB3AE2390@ME4P282MB0727.AUSP282.PROD.OUTLOOK.COM>
References: <37615565.uA5inoFNAI@even-i700>
 <ME4P282MB07279D5A9452E623AF22C0C4E2390@ME4P282MB0727.AUSP282.PROD.OUTLOOK.COM>
 <ME4P282MB072775E024A2C2AEBA2DCB3AE2390@ME4P282MB0727.AUSP282.PROD.OUTLOOK.COM>
Message-ID: <5570690.VHs6OqC8Y7@even-i700>

> Will E. Featherstone & Jean M. Rüeger (2000) The importance of using
> deviations of the vertical for the reduction of survey data to a geocentric
> datum, Australian Surveyor, 45:2, 46-61, DOI:
> 10.1080/00050326.2000.10440341 (available from
> https://www.tandfonline.com/doi/abs/10.1080/00050326.2000.10440341 or by
> request to the author, perhaps), describes these issues (and more) in
> detail.

Unofficial link to the paper:
http://fgg-web.fgg.uni-lj.si/~/mkuhar/Pouk/SG/Seminar/Azimut/Featherstone_dev_vert.pdf

> The paper discusses the importance for the SURVEY community

I don't perceive PROJ as being used to establish geodetic surveys, but more at
transforming coordinates once surveys have been established.

> in applications
> including: 1. transformation between astronomical coordinates and geodetic
> coordinates; 2. conversion between astronomic or gyro azimuths and geodetic
> azimuths; 3. reduction of measured horizontal directions (and angles) to
> the ellipsoid; 4. reduction of measured zenith angles to the ellipsoid;
>      5. reduction of slope electronic distance measurements (EDM) to the
> ellipsoid using zenith angles; and [See table 10]
>      6. determination of height differences from zenith angles and slope
> distances. [See table 16]
> 
> Some of the above (e.g. #1, #5, #6) are directly related to your coordinate
> transformation question. 

I'm not so sure. At least not in obvious ways regarding to what PROJ API and tools
currently offer (but users are often very creative in extending the intended use)

1. Astronomical <--> geodetic coordinates: not covered by PROJ AFAIK
5. reduction of slope electronic distance measurements to the ellipsoid: idem.
   I'd expect this to be something done internally in total stations
6. determination of height differences from zenith angles and slope distances: idem

The use case I mentionned would require a new PROJ operation method, something like

+proj=add_ortho_height +grids=dov_geoid_XXX.tif +dh=YYY

And probably with angles w.r.t the plumb line to make it more general than just along
the plumb line.

Or perhaps a more realistic example as Nyall mentionned would be to transform coordinates
between a CAD/BIM local 3D cartesian coordinate system, whose horizontal plane would
be perpendicular to the plumb line (assuming they work in such systems!) to
geodetic/geocentric coordinates.

My main point was to make sure that we're not missing anything in not using vertical
deflection for an operation like vgridshift which affects only the Z value.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From knudsen.thomas at gmail.com  Fri Jan 10 04:37:21 2020
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Fri, 10 Jan 2020 13:37:21 +0100
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <dae4ab9052b94739b21c6ac990920355@sdfe.dk>
References: <4131592.bgbqFsJybT@even-i700>
 <dae4ab9052b94739b21c6ac990920355@sdfe.dk>
Message-ID: <CAH0YoEOXUeukSCJstpNGTz_JyPjYy0h-GM90HzcurFMDFyMQnQ@mail.gmail.com>

+1

Den ons. 8. jan. 2020 kl. 14.12 skrev Kristian Evers <kreve at sdfe.dk>:

> +1
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
> Sent: 7. januar 2020 13:20
> To: proj at lists.osgeo.org
> Subject: [PROJ] Motion: adopt RFC 4
>
> Hi,
>
> I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
> https://github.com/OSGeo/PROJ/pull/1747
>
> Starting with my +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200110/1de84f40/attachment.html>

From jmckenna at gatewaygeomatics.com  Fri Jan 10 04:51:53 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 10 Jan 2020 08:51:53 -0400
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <4131592.bgbqFsJybT@even-i700>
References: <4131592.bgbqFsJybT@even-i700>
Message-ID: <86ef8552-3453-5b6e-9b0d-102973be9ad9@gatewaygeomatics.com>

On 2020-01-07 8:20 AM, Even Rouault wrote:
> 
> I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
> https://github.com/OSGeo/PROJ/pull/1747

+1 jeff






From schwehr at gmail.com  Fri Jan 10 06:47:02 2020
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 10 Jan 2020 06:47:02 -0800
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <86ef8552-3453-5b6e-9b0d-102973be9ad9@gatewaygeomatics.com>
References: <4131592.bgbqFsJybT@even-i700>
 <86ef8552-3453-5b6e-9b0d-102973be9ad9@gatewaygeomatics.com>
Message-ID: <CACmBxyvwGVA0rZVHP2MhB4JjXS7bQ5pNBkUnOXmKfCr0jruxjw@mail.gmail.com>

+1 Kurt

On Fri, Jan 10, 2020, 4:52 AM Jeff McKenna <jmckenna at gatewaygeomatics.com>
wrote:

> On 2020-01-07 8:20 AM, Even Rouault wrote:
> >
> > I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
> > https://github.com/OSGeo/PROJ/pull/1747
>
> +1 jeff
>
>
>
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200110/262feaf1/attachment.html>

From howard at hobu.co  Fri Jan 10 07:02:18 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 10 Jan 2020 09:02:18 -0600
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <CACmBxyvwGVA0rZVHP2MhB4JjXS7bQ5pNBkUnOXmKfCr0jruxjw@mail.gmail.com>
References: <4131592.bgbqFsJybT@even-i700>
 <86ef8552-3453-5b6e-9b0d-102973be9ad9@gatewaygeomatics.com>
 <CACmBxyvwGVA0rZVHP2MhB4JjXS7bQ5pNBkUnOXmKfCr0jruxjw@mail.gmail.com>
Message-ID: <77BA6020-F5BA-4ECE-BB39-C5581940C221@hobu.co>

+1 

Howard

> On Jan 10, 2020, at 8:47 AM, Kurt Schwehr <schwehr at gmail.com> wrote:
> 
> +1 Kurt
> 
> On Fri, Jan 10, 2020, 4:52 AM Jeff McKenna <jmckenna at gatewaygeomatics.com <mailto:jmckenna at gatewaygeomatics.com>> wrote:
> On 2020-01-07 8:20 AM, Even Rouault wrote:
> > 
> > I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
> > https://github.com/OSGeo/PROJ/pull/1747 <https://github.com/OSGeo/PROJ/pull/1747>
> 
> +1 jeff
> 
> 
> 
> 
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj <https://lists.osgeo.org/mailman/listinfo/proj>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200110/18c53385/attachment.html>

From even.rouault at spatialys.com  Fri Jan 10 07:20:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 10 Jan 2020 16:20:21 +0100
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <dae4ab9052b94739b21c6ac990920355@sdfe.dk>
References: <4131592.bgbqFsJybT@even-i700>
 <dae4ab9052b94739b21c6ac990920355@sdfe.dk>
Message-ID: <4466318.Hzq7U0iF5D@even-i700>

> I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
> https://github.com/OSGeo/PROJ/pull/1747

I declare this motion passed with +1 from PSC members KristianE, ThomasK, 
KurtS, HowardB and myself.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Mon Jan 13 02:25:40 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 13 Jan 2020 10:25:40 +0000
Subject: [PROJ] Closing in on PROJ 7 release date
Message-ID: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>

All,

This is a reminder that we are getting close to the release of PROJ 7.0.0 on March 1st.
Since this is a major version release I plan to put out a release candidate earlier than
usual. I am aiming towards a release of 7.0.0RC1 on February 15. As a consequence,
you need to make sure that code you want in PROJ 7 is merged within the next month.
Most prominently we have the code related to RFC4. Luckily most of this is already done
by Even, however the pull requests that currently are open could use a round or two of
review. I plan to go through all of the PR's but I don't expect to be able to give thorough
reviews as I am not particularly familiar with either TIFF-files, the networking features or
CDN's. So please review the code if you are familiar with these subjects.

In addition to the RFC4 work there is also a few other things that need doing before
PROJ 7. The 7.0.0-milestone on GitHub [0] has those covered. Some of the issues are
already assigned to someone and the remaining ones should be dealt with by the original
author of the issue.

/Kristian

[0] https://github.com/OSGeo/PROJ/issues?q=is%3Aopen+milestone%3A7.0.0+sort%3Aupdated-desc

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200113/f6157ad6/attachment.html>

From kreve at sdfe.dk  Mon Jan 13 03:04:45 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 13 Jan 2020 11:04:45 +0000
Subject: [PROJ] Budget for 2020
In-Reply-To: <8223cd3e01be4503a5e483b8999d44ea@sdfe.dk>
References: <8223cd3e01be4503a5e483b8999d44ea@sdfe.dk>
Message-ID: <d69e037b454f4bc6b069722d591fc7d2@sdfe.dk>

I haven't received any specific requests for the 2020 budget. I guess that means
we don't have a big need for outside funds at the moment. I'll put in a request
for 1000 USD for miscellaneous procurements during 2020.

/Kristian

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Kristian Evers
Sent: 6. januar 2020 11:08
To: proj at lists.osgeo.org
Subject: [PROJ] Budget for 2020

All,

The OSGeo board is asking projects to submit their budgets for 2020 [0]. This is the
first time PROJ is able to receive funding directly from OSGeo. Since we been able
to run without a budget for 30+ years I don't expect that we need much this year
but I would encourage you all to suggest ways we can improve the project by means
of OSGeo funding. Initially 2000 USD is allotted all projects but projects are allowed
to request more or less than that. I expect that we will fall in the "less" part of that
statement. Especially since our main expenses are continuous integration and git-lfs
support on GitHub, both of which are planned to be covered directly by OSGeo as
they are cross-project costs.

I have a few suggestions myself:


1.      Payment for proj.org  - as far as I know this is done on a charity basis by either Howard Butler or Paul Ramsey

2.      Maintenance of project infrastructure such as continuous integration, GitHub bots, etc. Things break from time to time and fixing them is often times very tedious. A candidate for this category would be establishing a new backporting bot since the old one stopped supporting our use cases.

3.      Travel expenses for code sprints or FOSS4G

4.      Merchandise - we've got a new logo, I think that it is only fitting that it get put on stickers!

The budget has to be submitted by January 13th [1] so please don't hold your suggestions back to long.

Best regards
Kristian

[0] https://wiki.osgeo.org/wiki/OSGeo_Budget_2020
[1] https://lists.osgeo.org/pipermail/board/2020-January/012507.html

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200113/351c6eae/attachment.html>

From gdt at lexort.com  Mon Jan 13 07:28:48 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 13 Jan 2020 10:28:48 -0500
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk> (Kristian Evers's
 message of "Mon, 13 Jan 2020 10:25:40 +0000")
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
Message-ID: <rmio8v7ml3j.fsf@s1.lexort.com>

Kristian Evers <kreve at sdfe.dk> writes:

> This is a reminder that we are getting close to the release of PROJ 7.0.0 on March 1st.
> Since this is a major version release I plan to put out a release candidate earlier than
> usual.

pkgsrc has not yet updated to 6 due to a lack of confidence on my part
that proj-depending packages will break, although perhaps it is now time
to do that.  My impression is that at least some other packaging systems
have also not upgraded to 6.

So, I wonder if you or someone could share a quick summary of any API
breaks or withdrawals from 6 to 7?  (From a packaging point of view,
going from "if you define WANT_OLD_API and that worked in 6 and doesn't
in 7", that's an API withdrawal.)

(I was about to review NEWS on master from the repo, but it seems that
  https://proj.org/development/index.html
does not, or does not obviously have, a link to the sources.
Having found what I think is the right repo at
https://github.com/OSGeo/PROJ/
it seems the master branch NEWS doesn't have any 7 entries.)

I will of course need to know if there is an ABI break when doing the
update, but that is not a problem for the packaging system, as simply
noting that and expecting everything to be rebuilt is well within
normal.

Thanks,
greg


From even.rouault at spatialys.com  Mon Jan 13 07:39:54 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 16:39:54 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
Message-ID: <1790126.7znSokOG3R@even-i700>

Hi,

This is one of the last major topic linked to RFC4: should we switch to 
GeoTIFF grids as the prime format for the grids we deliver alongside the 
software? While there is no strong technical requirement to do so, it could be 
the right moment to do it, or we might prefer postponing that to PROJ 8.

Currently RFC4 implementation continues to refer to .gtx / .gsb files in the 
grid_alternatives database table. When network access if allowed and needed, 
the code patches the extension to access a .tif file on the CDN.

It would probably be cleaner to avoid this patching and having 
grid_alternatives directly point to .tif files. This would also enable us to 
put https://github.com/osgeo/proj-datumgrid in a pure maintainance state and 
just make https://github.com/osgeo/proj-datumgrid-geotiff the new home for 
grids (currently the later has to be resynchronized with the former)

Currently:
proj-datumgrid: total size: 703 MB as 5 .zip and 1.5 GB uncompressed
proj-datumgrid-geotiff: total size: 486 MB

One potential issue with switching to GeoTIFF files is for people having 
pipeline strings using the current grid names in them. But similarly to what 
is currently done for remote access, for local access, if we fail to find a 
.gtx/.gsb file, we could just retry with the .tif extension.

If we switch to proj-datumgrid-geotiff, would we still split the content in 
several archives (and if so, according to which logic...) ? Having a single 
archive would be for sure the simplest solution. Some feedback from packagers 
would be welcome.

A bit linked to the above, if we switch to proj-datumgrid-geotiff, in the 
grid_alternatives table, instead of having each grid entry pointing to a 
package (like "proj-datumgrid-europe", which itself points to a URL of a .zip 
archive), we could just point to the exact file on the CDN rather than the 
archive.

If we adopt proj-datumgrid-geotiff, I'd also willing to add a proj-datumgrid-
download utility that would download, in the user-writable directory (or 
system directory), files from the CDN based on criteria such as bounding box, 
producer name, country of the producer, etc...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Mon Jan 13 07:47:38 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 13 Jan 2020 15:47:38 +0000
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <rmio8v7ml3j.fsf@s1.lexort.com>
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmio8v7ml3j.fsf@s1.lexort.com>
Message-ID: <7273c4246748467d85e61cb49606f73d@sdfe.dk>

Greg,

Breaking changes going from 6 to 7 will mainly be:

1. removal of proj_api.h as a public interface (this is the big one!)
2. removal of the Java Native Interface bindings (as they rely on the above)
3. ... and possibly RFC4-related changes regarding grid management (not sure about this one yet)

As for the NEWS file, I update that as part of the release procedure so that
won't cover 7.0 specifics until the first RC is out. For now you can keep an eye
on https://github.com/OSGeo/PROJ/issues?q=is%3Aclosed+milestone%3A7.0.0 
which tracks pull requests and issues related to the 7.0.0 release.

You are right in saying that the website doesn't have an obvious link to the repository
on GitHub. We should fix that. Where would be a good place to put it? Development section?

I plan on maintaining the 6.3.x branch during all of 2020. I don't know how much longer
than that it make sense to keep it alive, but at least it should extend the period
that packagers can keep software that depends on proj_api.h. An updated release
schedule is on my todo-list! 

/Kristian

-----Original Message-----
From: Greg Troxel <gdt at lexort.com> 
Sent: 13. januar 2020 16:29
To: Kristian Evers <kreve at sdfe.dk>
Cc: proj at lists.osgeo.org
Subject: Re: [PROJ] Closing in on PROJ 7 release date

Kristian Evers <kreve at sdfe.dk> writes:

> This is a reminder that we are getting close to the release of PROJ 7.0.0 on March 1st.
> Since this is a major version release I plan to put out a release candidate earlier than
> usual.

pkgsrc has not yet updated to 6 due to a lack of confidence on my part
that proj-depending packages will break, although perhaps it is now time
to do that.  My impression is that at least some other packaging systems
have also not upgraded to 6.

So, I wonder if you or someone could share a quick summary of any API
breaks or withdrawals from 6 to 7?  (From a packaging point of view,
going from "if you define WANT_OLD_API and that worked in 6 and doesn't
in 7", that's an API withdrawal.)

(I was about to review NEWS on master from the repo, but it seems that
  https://proj.org/development/index.html
does not, or does not obviously have, a link to the sources.
Having found what I think is the right repo at
https://github.com/OSGeo/PROJ/
it seems the master branch NEWS doesn't have any 7 entries.)

I will of course need to know if there is an ABI break when doing the
update, but that is not a problem for the packaging system, as simply
noting that and expecting everything to be rebuilt is well within
normal.

Thanks,
greg


From gdt at lexort.com  Mon Jan 13 08:10:06 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 13 Jan 2020 11:10:06 -0500
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <1790126.7znSokOG3R@even-i700> (Even Rouault's message of "Mon,
 13 Jan 2020 16:39:54 +0100")
References: <1790126.7znSokOG3R@even-i700>
Message-ID: <rmi36cjmj6p.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

> This is one of the last major topic linked to RFC4: should we switch to 
> GeoTIFF grids as the prime format for the grids we deliver alongside the 
> software? While there is no strong technical requirement to do so, it could be 
> the right moment to do it, or we might prefer postponing that to PROJ 8.
>
> Currently RFC4 implementation continues to refer to .gtx / .gsb files in the 
> grid_alternatives database table. When network access if allowed and needed, 
> the code patches the extension to access a .tif file on the CDN.

I think it's really important for the RFC4 implementation to end up
being an alternative mechanism to get the exact same bits that could
have been packaged.  As a test, this means that someone who has all the
grids in the entire set of released grid files, should have no negatives
and no different outcomes, compared to having used RFC4 instead.

I also think it's important that people not choosing to use RFC4 not be
second-class in their proj experience in any way.

So if the RFC4 world is tif (which is not objectionable; it seems
obvious we are talking a container format for the same bits -- but tell
me if I got that wrong), then it really seems simpler to just have that
as the format.

> It would probably be cleaner to avoid this patching and having 
> grid_alternatives directly point to .tif files. This would also enable us to 
> put https://github.com/osgeo/proj-datumgrid in a pure maintainance state and 
> just make https://github.com/osgeo/proj-datumgrid-geotiff the new home for 
> grids (currently the later has to be resynchronized with the former)

You say "maintenance", but would there be new releases of packages
derived from proj-datumgrid, for example for the benefit of proj5/6
users that have no upgraded?  Or do you mean "it will just sit there as
an archive"?

> Currently:
> proj-datumgrid: total size: 703 MB as 5 .zip and 1.5 GB uncompressed
> proj-datumgrid-geotiff: total size: 486 MB

Do you expect the sizes for the same data to be different?  It seems
obvious that every file in the old directory needs to be transformed to
tif and put in the new one -- but again I may be missing something.

> One potential issue with switching to GeoTIFF files is for people having 
> pipeline strings using the current grid names in them. But similarly to what 
> is currently done for remote access, for local access, if we fail to find a 
> .gtx/.gsb file, we could just retry with the .tif extension.

Basically, you are proposing to consider a grid name to not have an
extension, and that seems sensible

> If we switch to proj-datumgrid-geotiff, would we still split the content in 
> several archives (and if so, according to which logic...) ? Having a single 
> archive would be for sure the simplest solution. Some feedback from packagers 
> would be welcome.

A good question.  With the release of the grid archives associated with
6.3.0, the sizes have really grown.  I tend to think that not having
grids installed is a bug (given that proj will get different answers, as
opposed to throwing a missing grid file exception).  So, the proj6
package I am working on has all of the released grids.  But, as grids
get bigger (which seems expected over time), this becomes less
reasonable, and eventually I would think there would be separate
packages.

It would be good if all packaging systems that have multiple packges for
grids had the same split and more or less the same names.  So that means
that the proj project should define the split, as it does now.

So if anything, I would think the repo should be split up into more
archives.  The current regions seem sensible, and then there perhaps is
another axis of normal things vs. esoteric things.   Right now I can't
articulate that and I am not sure that makes sense.

So for now, I would advise not changing the archive split plan, until we
have a good basis for believing that some other plan is good.

> A bit linked to the above, if we switch to proj-datumgrid-geotiff, in the 
> grid_alternatives table, instead of having each grid entry pointing to a 
> package (like "proj-datumgrid-europe", which itself points to a URL of a .zip 
> archive), we could just point to the exact file on the CDN rather than the 
> archive.

A caution about "CDN".  There is nothing magic, just a way to make it
more efficient for people to download things.  I think we are really
just talking about a collection of files on a web server (that happens
to be a distributed system with spiffy caching).

It seems sensible for the database of what grid files are needed to have
a single namespace, and that one can get them either via download or by
unpacking them (bit for bit identical).

> If we adopt proj-datumgrid-geotiff, I'd also willing to add a proj-datumgrid-
> download utility that would download, in the user-writable directory (or 
> system directory), files from the CDN based on criteria such as bounding box, 
> producer name, country of the producer, etc...

As opposed to them being downloaded because someone asked for a
transform that chose them?  It seems really clear to me that these sorts
of asked-for operations are entirely necessary for the whole system to
make sense.  Surely there would be download by name.  It would be really
nice if one could ask "show me the transform pipelines that this request
would invoke" and also to get from that "this is the list of grids you
need and don't have for one or all" and then to be able to get them.

So what if someone has not enabled RFC4, and asks for a transform that
would use a grid if it were there.  Instead of downloading dynamically,
what happens?  I have always wanted that to throw an exception, unless
the user has disabled something, but I know i'm way on one side on the
"consistent outputs" side of things.




Overall, this makes me think that 7 is being rushed, or that the RFC4
stuff is being rushed into 7.  I don't really understand what's driving
a fixed release date for a major branch, and I don't understand why
having that fixed date instead of an approach of getting the RFC4 stuff
done and out for beta and we'll see how it goes.

But, there is virtually zero chance of me packaging 7.0, as opposed to
some later 7.x version.

From even.rouault at spatialys.com  Mon Jan 13 08:11:38 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 17:11:38 +0100
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <7273c4246748467d85e61cb49606f73d@sdfe.dk>
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmio8v7ml3j.fsf@s1.lexort.com> <7273c4246748467d85e61cb49606f73d@sdfe.dk>
Message-ID: <5773423.5l9X4J8DLs@even-i700>

> 3. ... and possibly RFC4-related changes regarding grid management (not
> sure about this one yet)

None at the API level. There has just been removal of 2 esoteric 
functionality: the undocumented +catalog and the ancient & no longer used 
CTable format.
Depending on the outcome of the discussion I've opened on using
proj-datumgrid-geotiff, there might be changes in how dependencies to grid 
packages are expressed (doesn't impact API)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Mon Jan 13 08:15:59 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 13 Jan 2020 11:15:59 -0500
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <7273c4246748467d85e61cb49606f73d@sdfe.dk> (Kristian Evers's
 message of "Mon, 13 Jan 2020 15:47:38 +0000")
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmio8v7ml3j.fsf@s1.lexort.com>
 <7273c4246748467d85e61cb49606f73d@sdfe.dk>
Message-ID: <rmimuarl4cg.fsf@s1.lexort.com>

Kristian Evers <kreve at sdfe.dk> writes:

> Breaking changes going from 6 to 7 will mainly be:
>
> 1. removal of proj_api.h as a public interface (this is the big one!)
> 2. removal of the Java Native Interface bindings (as they rely on the above)
> 3. ... and possibly RFC4-related changes regarding grid management (not sure about this one yet)

That's pretty big!

> As for the NEWS file, I update that as part of the release procedure so that
> won't cover 7.0 specifics until the first RC is out. For now you can keep an eye
> on https://github.com/OSGeo/PROJ/issues?q=is%3Aclosed+milestone%3A7.0.0 
> which tracks pull requests and issues related to the 7.0.0 release.

Not my call, but it seems to me that NEWS should be updated
simultaneously with changes being merged to master, so that it's more or
less accurate at all times.

> You are right in saying that the website doesn't have an obvious link to the repository
> on GitHub. We should fix that. Where would be a good place to put it? Development section?

Yes, the very top of development should have a new section that is
baiscally where is the code and where is the bugtracker.

> I plan on maintaining the 6.3.x branch during all of 2020. I don't know how much longer
> than that it make sense to keep it alive, but at least it should extend the period
> that packagers can keep software that depends on proj_api.h. An updated release
> schedule is on my todo-list! 

5 really should still get microreleases for security fixes, if any.  I
don't think we've yet arrived at the point where packaging systems can
upgrade from 5 to 6 without orphaning packages.  (I'd like to hear where
Bas is on this.)


From gdt at lexort.com  Mon Jan 13 08:17:38 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 13 Jan 2020 11:17:38 -0500
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <5773423.5l9X4J8DLs@even-i700> (Even Rouault's message of "Mon,
 13 Jan 2020 17:11:38 +0100")
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmio8v7ml3j.fsf@s1.lexort.com>
 <7273c4246748467d85e61cb49606f73d@sdfe.dk>
 <5773423.5l9X4J8DLs@even-i700>
Message-ID: <rmiimlfl49p.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

>> 3. ... and possibly RFC4-related changes regarding grid management (not
>> sure about this one yet)
>
> None at the API level. There has just been removal of 2 esoteric 
> functionality: the undocumented +catalog and the ancient & no longer used 
> CTable format.
> Depending on the outcome of the discussion I've opened on using
> proj-datumgrid-geotiff, there might be changes in how dependencies to grid 
> packages are expressed (doesn't impact API)

That all sounds fine.  My concern is really

  Given some random package P that uses proj, if I update from 5 to 6,
  or from 6 to 7, does P build (without touching it) or does it build
  with "#define ENABLE_DEPRECATED_FOO", or do I have to mark it broken
  in the packaging system.

From even.rouault at spatialys.com  Mon Jan 13 08:34:10 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 17:34:10 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <rmi36cjmj6p.fsf@s1.lexort.com>
References: <1790126.7znSokOG3R@even-i700> <rmi36cjmj6p.fsf@s1.lexort.com>
Message-ID: <2326814.iVNZEzlDUD@even-i700>

> So if the RFC4 world is tif (which is not objectionable; it seems
> obvious we are talking a container format for the same bits -- but tell
> me if I got that wrong), then it really seems simpler to just have that
> as the format.

Yes the results are binary identical whether you use NTv2/GTX or equivalent 
TIFF files.

> You say "maintenance", but would there be new releases of packages
> derived from proj-datumgrid, for example for the benefit of proj5/6
> users that have no upgraded?  Or do you mean "it will just sit there as
> an archive"?

That's an open question. As long as we maintain PROJ 6.x, we need at a minimum 
to maintain proj-datumgrid. But the maintainance might be minimal. Just accept 
fixes to currently delivered material, and new content would be for
proj-datumgrid-geotiff. And at some point, proj-datumgrid would be frozen.

> > Currently:
> > proj-datumgrid: total size: 703 MB as 5 .zip and 1.5 GB uncompressed
> > proj-datumgrid-geotiff: total size: 486 MB
> 
> Do you expect the sizes for the same data to be different?  It seems
> obvious that every file in the old directory needs to be transformed to
> tif and put in the new one -- but again I may be missing something.

The content in both repositories is the same. proj-datumgrid-geotiff files are 
smaller because they use the TIFF Predictor mechanism which increases the 
efficiency of deflate compression over what .zip can do, hence 486 MB < 703 
MB.

> So if anything, I would think the repo should be split up into more
> archives.  The current regions seem sensible, and then there perhaps is
> another axis of normal things vs. esoteric things.   Right now I can't
> articulate that and I am not sure that makes sense.
> 
> So for now, I would advise not changing the archive split plan, until we
> have a good basis for believing that some other plan is good.

Actually, in the github repo, I've changed the organization to be based on the 
producer, mostly to make area of responisibility clearer:
https://github.com/osgeo/proj-datumgrid-geotiff
But currently everything is bundled in a single archive.

> > If we adopt proj-datumgrid-geotiff, I'd also willing to add a
> > proj-datumgrid- download utility that would download, in the
> > user-writable directory (or system directory), files from the CDN based
> > on criteria such as bounding box, producer name, country of the producer,
> > etc...
> 
> As opposed to them being downloaded because someone asked for a
> transform that chose them?

More as an alternative to someone not wanting to enable on-demand grid 
download, but also not wanting to download the whole set of grids because he 
knows that he'll work only in a given area.

> It seems really clear to me that these sorts
> of asked-for operations are entirely necessary for the whole system to
> make sense.  Surely there would be download by name.  It would be really
> nice if one could ask "show me the transform pipelines that this request
> would invoke" and also to get from that "this is the list of grids you
> need and don't have for one or all" and then to be able to get them.

projinfo and related API already report which grids are missing.

> So what if someone has not enabled RFC4, and asks for a transform that
> would use a grid if it were there.  Instead of downloading dynamically,
> what happens?  I have always wanted that to throw an exception, unless
> the user has disabled something, but I know i'm way on one side on the
> "consistent outputs" side of things.

RFC4 has not changed anything on that side. We cannot impose a particular grid 
to be used, because sometimes the guess done by PROJ is not necessarily the 
most appropriate (because of implementation limitations, or sometimes just 
because it needs a human brain to decide).

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Mon Jan 13 08:42:34 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Mon, 13 Jan 2020 17:42:34 +0100
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <rmimuarl4cg.fsf@s1.lexort.com>
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmio8v7ml3j.fsf@s1.lexort.com> <7273c4246748467d85e61cb49606f73d@sdfe.dk>
 <rmimuarl4cg.fsf@s1.lexort.com>
Message-ID: <05726498-519a-ba8a-3463-ffc5be54e55b@xs4all.nl>

On 1/13/20 5:15 PM, Greg Troxel wrote:
> 5 really should still get microreleases for security fixes, if any.  I
> don't think we've yet arrived at the point where packaging systems can
> upgrade from 5 to 6 without orphaning packages.  (I'd like to hear where
> Bas is on this.)

Upgrading to PROJ 6 will likely require removing some dead projects, we
had to remove Geo::Proj4 (Perl bindings) and it Geo::Point rdep, along
with merkaartor from Debian as part of the transition to PROJ 6. And we
patched vtk6 & vtk7 to use the embedded copy of PROJ4 because only very
recent VTK releases support proj.h. Several projects like

The related transition to GDAL 3 also got dans-gdal-scripts, prepair &
pprepair removed because it's not updated for changes in that.

With the release of PROJ 7 on the horizon you should really start moving
to PROJ 6 for NetBSD. Not everything supports proj.h yet, but you can
build those projects with -DACCEPT_USE_OF_DEPRECATED_PROJ_API_H.

With the removal of proj_api.h from PROJ 7 there are still some blockers
like MapServer, SpatiaLite, libosmium and others. From that list only
MapServer and libosmium are actual blockers for me, I'm willing to
remove SpatiaLite from Debian if the current lack of stable upstream
releases with PROJ 6 support remain absent.

We'll have PROJ6 & GDAL3 in the next Debian stable release, and will
move to PROJ 7 during the development cycle for the release after that.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Mon Jan 13 08:54:43 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 17:54:43 +0100
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <05726498-519a-ba8a-3463-ffc5be54e55b@xs4all.nl>
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmimuarl4cg.fsf@s1.lexort.com>
 <05726498-519a-ba8a-3463-ffc5be54e55b@xs4all.nl>
Message-ID: <4122356.Wv9ZhuDgQh@even-i700>

> With the removal of proj_api.h from PROJ 7 there are still some blockers
> like MapServer, SpatiaLite, libosmium and others. From that list only
> MapServer and libosmium are actual blockers for me, 

MapServer 7.6 with proj.h support should be released in February (support 
already available in master)

> I'm willing to
> remove SpatiaLite from Debian if the current lack of stable upstream
> releases with PROJ 6 support remain absent.

That would remove important functionality from GDAL, and I'm not sure QGIS 
would compile without Spatialite (or at least some functionality like WFS 
client would be broken).
I got feedback past week from the Spatialite maintainer that he was finally 
able to resume development and hoped to be able to release a stable version 
soon.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Mon Jan 13 09:16:27 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 13 Jan 2020 12:16:27 -0500
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <2326814.iVNZEzlDUD@even-i700> (Even Rouault's message of "Mon,
 13 Jan 2020 17:34:10 +0100")
References: <1790126.7znSokOG3R@even-i700> <rmi36cjmj6p.fsf@s1.lexort.com>
 <2326814.iVNZEzlDUD@even-i700>
Message-ID: <rmizherjmz8.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

>> You say "maintenance", but would there be new releases of packages
>> derived from proj-datumgrid, for example for the benefit of proj5/6
>> users that have no upgraded?  Or do you mean "it will just sit there as
>> an archive"?
>
> That's an open question. As long as we maintain PROJ 6.x, we need at a minimum 
> to maintain proj-datumgrid. But the maintainance might be minimal. Just accept 
> fixes to currently delivered material, and new content would be for
> proj-datumgrid-geotiff. And at some point, proj-datumgrid would be frozen.

Sounds reasonable.

>> > Currently:
>> > proj-datumgrid: total size: 703 MB as 5 .zip and 1.5 GB uncompressed
>> > proj-datumgrid-geotiff: total size: 486 MB
>> 
>> Do you expect the sizes for the same data to be different?  It seems
>> obvious that every file in the old directory needs to be transformed to
>> tif and put in the new one -- but again I may be missing something.
>
> The content in both repositories is the same. proj-datumgrid-geotiff files are 
> smaller because they use the TIFF Predictor mechanism which increases the 
> efficiency of deflate compression over what .zip can do, hence 486 MB < 703 
> MB.

That'a a good reason to switch, especially as the TIFF compression
remains on people's disks, whereas unzipping on distribution does not.

>> So if anything, I would think the repo should be split up into more
>> archives.  The current regions seem sensible, and then there perhaps is
>> another axis of normal things vs. esoteric things.   Right now I can't
>> articulate that and I am not sure that makes sense.
>> 
>> So for now, I would advise not changing the archive split plan, until we
>> have a good basis for believing that some other plan is good.
>
> Actually, in the github repo, I've changed the organization to be based on the 
> producer, mostly to make area of responisibility clearer:
> https://github.com/osgeo/proj-datumgrid-geotiff
> But currently everything is bundled in a single archive.

I view single archive as a breaking change, whereas a mere change of
format not, from the packaging viewpoint.  As I said, pkgsrc is
currently just grabbing them all, but this is becoming less reasonable.
At 500 MB, though, it doesn't seem terrible.  4GB would be something
else.


>> It seems really clear to me that these sorts
>> of asked-for operations are entirely necessary for the whole system to
>> make sense.  Surely there would be download by name.  It would be really
>> nice if one could ask "show me the transform pipelines that this request
>> would invoke" and also to get from that "this is the list of grids you
>> need and don't have for one or all" and then to be able to get them.
>
> projinfo and related API already report which grids are missing.

Great, and it would be nice to have a programmatic way to fetch them
from having run projinfo.

>> So what if someone has not enabled RFC4, and asks for a transform that
>> would use a grid if it were there.  Instead of downloading dynamically,
>> what happens?  I have always wanted that to throw an exception, unless
>> the user has disabled something, but I know i'm way on one side on the
>> "consistent outputs" side of things.
>
> RFC4 has not changed anything on that side. We cannot impose a particular grid 
> to be used, because sometimes the guess done by PROJ is not necessarily the 
> most appropriate (because of implementation limitations, or sometimes just 
> because it needs a human brain to decide).

I am not really following this.  I get it that sometimes humans need to
choose which approach is best.

What I meant is that in a world where all the grid files are on the
disk, one can say "show me all the plausible transforms, sorted by some
error metric".  If the grid file isn't present, I'd still like that
process to be able to operate the same way, but essentialy throwing an
execption if a grid file that's needed isn't there -- as opposed to
pruning pipelines that make sense but which cannot currently be done
locally.  I realize this is a discusion about the pre-RFC4 world, but to
me this is part of avoiding those not opting into RFC4 becoming
second-class.

From gdt at lexort.com  Mon Jan 13 09:20:52 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 13 Jan 2020 12:20:52 -0500
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <05726498-519a-ba8a-3463-ffc5be54e55b@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Mon, 13 Jan 2020 17:42:34 +0100")
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmio8v7ml3j.fsf@s1.lexort.com>
 <7273c4246748467d85e61cb49606f73d@sdfe.dk>
 <rmimuarl4cg.fsf@s1.lexort.com>
 <05726498-519a-ba8a-3463-ffc5be54e55b@xs4all.nl>
Message-ID: <rmiv9pfjmrv.fsf@s1.lexort.com>

Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 1/13/20 5:15 PM, Greg Troxel wrote:
>> 5 really should still get microreleases for security fixes, if any.  I
>> don't think we've yet arrived at the point where packaging systems can
>> upgrade from 5 to 6 without orphaning packages.  (I'd like to hear where
>> Bas is on this.)
>
> Upgrading to PROJ 6 will likely require removing some dead projects, we
> had to remove Geo::Proj4 (Perl bindings) and it Geo::Point rdep, along
> with merkaartor from Debian as part of the transition to PROJ 6. And we
> patched vtk6 & vtk7 to use the embedded copy of PROJ4 because only very
> recent VTK releases support proj.h. Several projects like
>
> The related transition to GDAL 3 also got dans-gdal-scripts, prepair &
> pprepair removed because it's not updated for changes in that.
>
> With the release of PROJ 7 on the horizon you should really start moving
> to PROJ 6 for NetBSD. Not everything supports proj.h yet, but you can
> build those projects with -DACCEPT_USE_OF_DEPRECATED_PROJ_API_H.

Thanks.  My impression was that I should move to 6 basically now, and
that there would be some orphans, but that they are unmaintained
upstream anyway, but your comments confirm that solidly.

> With the removal of proj_api.h from PROJ 7 there are still some blockers
> like MapServer, SpatiaLite, libosmium and others. From that list only
> MapServer and libosmium are actual blockers for me, I'm willing to
> remove SpatiaLite from Debian if the current lack of stable upstream
> releases with PROJ 6 support remain absent.
>
> We'll have PROJ6 & GDAL3 in the next Debian stable release, and will
> move to PROJ 7 during the development cycle for the release after that.

Thanks for the note about where you are.

Anybody else doing packaging here?

From sebastic at xs4all.nl  Mon Jan 13 09:41:24 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Mon, 13 Jan 2020 18:41:24 +0100
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <rmiv9pfjmrv.fsf@s1.lexort.com>
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <rmio8v7ml3j.fsf@s1.lexort.com> <7273c4246748467d85e61cb49606f73d@sdfe.dk>
 <rmimuarl4cg.fsf@s1.lexort.com>
 <05726498-519a-ba8a-3463-ffc5be54e55b@xs4all.nl>
 <rmiv9pfjmrv.fsf@s1.lexort.com>
Message-ID: <75814ac0-7450-2d6c-ce62-b80bf8e3c699@xs4all.nl>

On 1/13/20 6:20 PM, Greg Troxel wrote:
> Anybody else doing packaging here?

AFAIK no other packagers are subscribed to this list.

6.2.0 is in Fedora 32 & EPEL 8
Maintainer: Devrim Gündüz <devrim at gunduz.org>

6.2.1 is in Gentoo
https://gentoobrowse.randomdan.homeip.net/packages/sci-libs/proj#changelog

6.1.1 is in FreeBSD ports
Maintainer: wen at FreeBSD.org

6.3.0 is in OpenBSD ports
Maintainer: Landry Breuil <landry at openbsd.org>

6.3.0 is in MacPorts
Maintainer: @stromnov

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Mon Jan 13 09:48:36 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 18:48:36 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <rmizherjmz8.fsf@s1.lexort.com>
References: <1790126.7znSokOG3R@even-i700> <2326814.iVNZEzlDUD@even-i700>
 <rmizherjmz8.fsf@s1.lexort.com>
Message-ID: <2221780.Yt81HdAI6K@even-i700>

> Great, and it would be nice to have a programmatic way to fetch them
> from having run projinfo.

To be pondered. In a Unix style philosophy where each utility has its purpose, 
I wouldn't have imagined projinfo to proceed to download itself.

> What I meant is that in a world where all the grid files are on the
> disk, one can say "show me all the plausible transforms, sorted by some
> error metric".  If the grid file isn't present, I'd still like that
> process to be able to operate the same way, but essentialy throwing an
> execption if a grid file that's needed isn't there -- as opposed to
> pruning pipelines that make sense but which cannot currently be done
> locally. 

What you describe is really how PROJ 6 works:

Extract from output of:
projinfo -s NAD27 -t NAD83 --spatial-test intersects -o PROJ

"""
[snip]
-------------------------------------
Operation No. 4:

DERIVED_FROM(EPSG):1313, NAD27 to NAD83 (4), 1.5 m, Canada - NAD27, at least 
one grid missing

PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert 
+xy_in=deg +xy_out=rad +step +proj=hgridshift +grids=ntv2_0.gsb +step 
+proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

Grid ntv2_0.gsb needed but not found on the system. Can be obtained from the 
proj-datumgrid-north-america package at https://download.osgeo.org/proj/proj-datumgrid-north-america-1.3.zip
"""

> I realize this is a discusion about the pre-RFC4 world, but to
> me this is part of avoiding those not opting into RFC4 becoming
> second-class.

RFC4 is not about making exiting usages second-class. It is about making new 
usages easier/possible.
Requiring grids of "best" transformation to be available when using the black 
box/high level API proj_create_crs_to_crs() (like in cs2cs) is really another 
topic to the one I'd want to address in this thread :-) and a rather 
controversial one. PROJ offers the API for making people aware of what is 
missing and could be used, as used by QGIS 3.10 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mwtoews at gmail.com  Mon Jan 13 12:49:31 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 14 Jan 2020 09:49:31 +1300
Subject: [PROJ] Bump CMake version for PROJ 7.0
Message-ID: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>

Hi all,

As was suggested in https://github.com/OSGeo/PROJ/pull/1542 this is a
discussion to bump the minimum CMake version for PROJ 7.0

Based on the default versions of CMake [1], I can see that CMake 3.9
is installed on most development systems, including Travis CI, so this
would be an ideal minimum.

CMake 3.9.0 was released [2] July 2017, so is at least 2 years old for
PROJ RFC 3's requirement.

One feature from this version that I plan to implement is
CheckIPOSupported [3] module. GoogleTest [4] was added for this
release, however I don't think it would provide any advantage.

Any other thoughts or suggestions on other CMake versions?

Cheers,
Mike

[1] https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions
[2] https://blog.kitware.com/cmake-3-9-0-available-for-download/
[3] https://cmake.org/cmake/help/v3.9/module/CheckIPOSupported.html
[4] https://cmake.org/cmake/help/v3.9/module/GoogleTest.html

From even.rouault at spatialys.com  Mon Jan 13 14:01:11 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 23:01:11 +0100
Subject: [PROJ] Closing in on PROJ 7 release date
In-Reply-To: <5773423.5l9X4J8DLs@even-i700>
References: <f01f38b729b34bd78bfe2ff25c3e9c40@sdfe.dk>
 <7273c4246748467d85e61cb49606f73d@sdfe.dk> <5773423.5l9X4J8DLs@even-i700>
Message-ID: <11073481.rLUVGDSLox@even-i700>

On lundi 13 janvier 2020 17:11:38 CET Even Rouault wrote:
> > 3. ... and possibly RFC4-related changes regarding grid management (not
> > sure about this one yet)
> 
> None at the API level.

Not strictly RFC-4 related, but queued in the related pull requests, there is 
also an adoption of UTF-8 for filenames passed/returned by PROJ, that may have 
impact for Windows users.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From phma at bezitopo.org  Mon Jan 13 15:38:15 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Mon, 13 Jan 2020 18:38:15 -0500
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
Message-ID: <3181056.3b7LHarrWA@puma>

On Monday, 13 January 2020 15.49.31 EST Mike Taves wrote:
> Hi all,
> 
> As was suggested in https://github.com/OSGeo/PROJ/pull/1542 this is a
> discussion to bump the minimum CMake version for PROJ 7.0
> 
> Based on the default versions of CMake [1], I can see that CMake 3.9
> is installed on most development systems, including Travis CI, so this
> would be an ideal minimum.
> 
> CMake 3.9.0 was released [2] July 2017, so is at least 2 years old for
> PROJ RFC 3's requirement.
> 
> One feature from this version that I plan to implement is
> CheckIPOSupported [3] module. GoogleTest [4] was added for this
> release, however I don't think it would provide any advantage.
> 
> Any other thoughts or suggestions on other CMake versions?

I set the minimum to 3.8 for PerfectTIN because it requires C++17 because it 
uses readers-writer locks. The rest of my projects have a minimum of 3.1 if 
they use Qt and 2.8 otherwise, except for a few oddballs.

Two years old sounds good. That's how often Ubuntu releases LTS versions. But 
you may run into people who still run RHEL 7. A few weeks ago I got PerfectTIN 
to run on a CentOS 7 box, where the compiler understood C++17 but CMake did 
not. It took much manularity.

Pierre

-- 
gau do li'i co'e kei do




From nyall.dawson at gmail.com  Mon Jan 13 18:54:10 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 14 Jan 2020 12:54:10 +1000
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <1790126.7znSokOG3R@even-i700>
References: <1790126.7znSokOG3R@even-i700>
Message-ID: <CAB28Asg3kmUcb7jGJKMaWVkYeLk+6uL4cb3iMCW2J3DqnPXwkw@mail.gmail.com>

On Tue, 14 Jan 2020 at 01:40, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> This is one of the last major topic linked to RFC4: should we switch to
> GeoTIFF grids as the prime format for the grids we deliver alongside the
> software? While there is no strong technical requirement to do so, it could be
> the right moment to do it, or we might prefer postponing that to PROJ 8.
>
> Currently RFC4 implementation continues to refer to .gtx / .gsb files in the
> grid_alternatives database table. When network access if allowed and needed,
> the code patches the extension to access a .tif file on the CDN.
>
> It would probably be cleaner to avoid this patching and having
> grid_alternatives directly point to .tif files. This would also enable us to
> put https://github.com/osgeo/proj-datumgrid in a pure maintainance state and
> just make https://github.com/osgeo/proj-datumgrid-geotiff the new home for
> grids (currently the later has to be resynchronized with the former)

Possibly QGIS is a bit of an outlier in terms of Proj clients, but
this change **would** impact us. Not in a major way, but in the order
of 2-3 hours work to rectify (and even MORE proj version #ifdefs in
the code! Woohoo!). If the intention is to make this an api break
(given that it's v7), then that's fine, but if you're intending for
this change to be transparent to clients just be aware that it isn't!

> Currently:
> proj-datumgrid: total size: 703 MB as 5 .zip and 1.5 GB uncompressed
> proj-datumgrid-geotiff: total size: 486 MB
>
> One potential issue with switching to GeoTIFF files is for people having
> pipeline strings using the current grid names in them. But similarly to what
> is currently done for remote access, for local access, if we fail to find a
> .gtx/.gsb file, we could just retry with the .tif extension.

This would be a necessity for QGIS, otherwise existing projects will
break and reproject differently upon loading in a build based on the
newer PROJ version. (I suspect R would also see this as a necessity to
avoid changing end user's existing results)

Nyall

From nyall.dawson at gmail.com  Mon Jan 13 19:00:11 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 14 Jan 2020 13:00:11 +1000
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <2221780.Yt81HdAI6K@even-i700>
References: <1790126.7znSokOG3R@even-i700> <2326814.iVNZEzlDUD@even-i700>
 <rmizherjmz8.fsf@s1.lexort.com> <2221780.Yt81HdAI6K@even-i700>
Message-ID: <CAB28AsiML6L_n90RMA_4b21NFoi_09e7FVkBzKhQgr5tg-0UdA@mail.gmail.com>

On Tue, 14 Jan 2020 at 03:48, Even Rouault <even.rouault at spatialys.com> wrote:
>
>
> RFC4 is not about making exiting usages second-class. It is about making new
> usages easier/possible.
> Requiring grids of "best" transformation to be available when using the black
> box/high level API proj_create_crs_to_crs() (like in cs2cs) is really another
> topic to the one I'd want to address in this thread :-) and a rather
> controversial one. PROJ offers the API for making people aware of what is
> missing and could be used, as used by QGIS 3.10

Yes -- we use this heavily, and I can attest that it all works VERY
nicely! See https://github.com/qgis/QGIS/pull/30559#issuecomment-509039902
for a screenshot.
https://www.icsm.gov.au/sites/default/files/North%20Road%20Handling%20GDA2020%20within%20Geospatial%20Software%20Development.pdf
goes into more depth about how to implement this choice from a client
application.

Nyall

From kreve at sdfe.dk  Tue Jan 14 02:52:22 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 14 Jan 2020 10:52:22 +0000
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <rmi36cjmj6p.fsf@s1.lexort.com>
References: <1790126.7znSokOG3R@even-i700> <rmi36cjmj6p.fsf@s1.lexort.com>
Message-ID: <b799512b05c2464bb39b358a34680964@sdfe.dk>

Greg,

> Overall, this makes me think that 7 is being rushed, or that the RFC4
> stuff is being rushed into 7. 

RFC4 is not being rushed. Even and Howard has been working on this
for a long time. The majority of the new code has been ready for more
than a month already. What you are seeing now is the final sprint to
get it polished for release.

> I don't really understand what's driving
> a fixed release date for a major branch, and I don't understand why
> having that fixed date instead of an approach of getting the RFC4 stuff
> done and out for beta and we'll see how it goes.

As you've noticed, PROJ 7 introduces a rather large API break. So did
PROJ 6. Having fixed release dates for this stuff is in my opinion crucial
information for everyone who depends on PROJ. We've announced this
break two years in advance and made a hell of a lot of noise about it so
that it wouldn't come as a surprise for you and everyone else. Overall
I think we have succeeded with that, although not everyone has caught
up yet awareness has been raised and most projects have either already
migrated or have plans to do so soon. I don't think we could have achieved
that with a loosely defined release schedule.

Another benefit of a fixed release schedule is that those of us who
regularly work on PROJ can plan around activities related to releases.
At least for me it is necessary to block a few days in the calendar at release
time. Otherwise the releases would not happen!

Also related to release schedules, recently we had a bit of a mismatch
regarding PROJ, GDAL and QGIS releases that caused some unfortunate
bugs in the 3.4-branch of QGIS. This could probably have been avoided
if we had coordinate releases better between the three projects. That is
something I would like to take into consideration in the future. We need
a discussion between OSGeo projects on the topic. I'll initiate that
sometime soon.

/Kristian

From neteler at osgeo.org  Tue Jan 14 02:55:50 2020
From: neteler at osgeo.org (Markus Neteler)
Date: Tue, 14 Jan 2020 11:55:50 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <b799512b05c2464bb39b358a34680964@sdfe.dk>
References: <1790126.7znSokOG3R@even-i700> <rmi36cjmj6p.fsf@s1.lexort.com>
 <b799512b05c2464bb39b358a34680964@sdfe.dk>
Message-ID: <CALFmHhtq6dvUxhpvVr9UZ=7y16tus3C_cCUwuoZybj-x9=X_Dw@mail.gmail.com>

On Tue, Jan 14, 2020 at 11:52 AM Kristian Evers <kreve at sdfe.dk> wrote:
...
> Also related to release schedules, recently we had a bit of a mismatch
> regarding PROJ, GDAL and QGIS releases that caused some unfortunate
> bugs in the 3.4-branch of QGIS. This could probably have been avoided
> if we had coordinate releases better between the three projects. That is
> something I would like to take into consideration in the future. We need
> a discussion between OSGeo projects on the topic. I'll initiate that
> sometime soon.

Please keep in mind that more projects depend on PROJ, not only QGIS.
So yes, let's move this to OSGeo level, not only single projects.

Best,
Markus

From kreve at sdfe.dk  Tue Jan 14 03:43:19 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 14 Jan 2020 11:43:19 +0000
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <CALFmHhtq6dvUxhpvVr9UZ=7y16tus3C_cCUwuoZybj-x9=X_Dw@mail.gmail.com>
References: <1790126.7znSokOG3R@even-i700> <rmi36cjmj6p.fsf@s1.lexort.com>
 <b799512b05c2464bb39b358a34680964@sdfe.dk>
 <CALFmHhtq6dvUxhpvVr9UZ=7y16tus3C_cCUwuoZybj-x9=X_Dw@mail.gmail.com>
Message-ID: <84c45f943ac44322a4dad9181791e9de@sdfe.dk>

Markus,

Yes, don't worry. I only brought up GDAL and QGIS since they were
affected in this particular issue. The intention is to coordinate across
as many OSGeo projects as possible. I'll bring the topic up on the
"discuss" list. I can also ping individual project lists but I fear that will
results in too many diverging email threads.

/Kristian

-----Original Message-----
From: Markus Neteler <neteler at osgeo.org> 
Sent: 14. januar 2020 11:56
To: Kristian Evers <kreve at sdfe.dk>
Cc: Greg Troxel <gdt at lexort.com>; Even Rouault <even.rouault at spatialys.com>; proj at lists.osgeo.org
Subject: Re: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?

On Tue, Jan 14, 2020 at 11:52 AM Kristian Evers <kreve at sdfe.dk> wrote:
...
> Also related to release schedules, recently we had a bit of a mismatch
> regarding PROJ, GDAL and QGIS releases that caused some unfortunate
> bugs in the 3.4-branch of QGIS. This could probably have been avoided
> if we had coordinate releases better between the three projects. That is
> something I would like to take into consideration in the future. We need
> a discussion between OSGeo projects on the topic. I'll initiate that
> sometime soon.

Please keep in mind that more projects depend on PROJ, not only QGIS.
So yes, let's move this to OSGeo level, not only single projects.

Best,
Markus

From phma at bezitopo.org  Tue Jan 14 05:51:42 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Tue, 14 Jan 2020 08:51:42 -0500
Subject: [PROJ] Transverse and oblique Mercator
Message-ID: <2121432.YXINHqTAIZ@puma>

I've been working on a surveying CAD program, one of whose parts is converting 
between lat/long and the coordinate systems used in surveying. I did Lambert 
conformal conic first, since it's easier (and I live in North Carolina), then 
figured out transverse Mercator. (I also did spherical stereographic, which 
Bezitopo uses for internal purposes.) The test for projections, before I wrote 
transverse Mercator, required that, at all but a negligible fraction of points 
(i.e. a branch cut), the inverse projection of the projection of a point be 
within 1 mm of the point and the distance between two points 1 m apart in a 
random direction match the computed scale. When I added transverse Mercator, I 
had to reduce all but a negligible fraction, but I lowered it to no less than 
80%. It is accurate to within 100 µm over 71% of the earth, which is within 
45° of the central meridian. How does this compare to PROJ?

Lambert conic and transverse Mercator together cover all but one of the US 
state plane grids and all of UTM, but there are others. I'd like to understand 
the oblique Mercator well enough to write code for it and what the differences 
are (besides the obvious) between Alaska and Switzerland.

Pierre
-- 
ve ka'a ro klaji la .romas. se jmaji




From charles at karney.com  Tue Jan 14 06:14:33 2020
From: charles at karney.com (Charles Karney)
Date: Tue, 14 Jan 2020 09:14:33 -0500
Subject: [PROJ] Transverse and oblique Mercator
In-Reply-To: <2121432.YXINHqTAIZ@puma>
References: <2121432.YXINHqTAIZ@puma>
Message-ID: <3bdd9831-e8ae-357c-1865-d27203ddb648@karney.com>

Transverse Mercator as implemented in PROJ is accurate to about 5
nanometers within 3900 km of the central meridian.  See Fig. 2 on

https://geographiclib.sourceforge.io/html/transversemercator.html#tmfigures

GeographicLib implements an "exact" version of transverse Mercator (in
terms of elliptic functions) which is accurate to 9 nanometers over
the whole ellipsoid.  However, this isn't included in PROJ.

Regarding oblique Mercator...  I understand how this is defined for a
sphere.  But, I'm not sure there's a well accepted definition of how
it is defined on an ellipsoid.  In the case of Mercator (resp.
transverse Mercator) the equator (resp. central meridian) projects to
a straight line at equal scale.  The equivalent line would need to be
specified for oblique Mercator.

   --Charles

On 1/14/20 8:51 AM, Pierre Abbat wrote:
> I've been working on a surveying CAD program, one of whose parts is converting
> between lat/long and the coordinate systems used in surveying. I did Lambert
> conformal conic first, since it's easier (and I live in North Carolina), then
> figured out transverse Mercator. (I also did spherical stereographic, which
> Bezitopo uses for internal purposes.) The test for projections, before I wrote
> transverse Mercator, required that, at all but a negligible fraction of points
> (i.e. a branch cut), the inverse projection of the projection of a point be
> within 1 mm of the point and the distance between two points 1 m apart in a
> random direction match the computed scale. When I added transverse Mercator, I
> had to reduce all but a negligible fraction, but I lowered it to no less than
> 80%. It is accurate to within 100 µm over 71% of the earth, which is within
> 45° of the central meridian. How does this compare to PROJ?
> 
> Lambert conic and transverse Mercator together cover all but one of the US
> state plane grids and all of UTM, but there are others. I'd like to understand
> the oblique Mercator well enough to write code for it and what the differences
> are (besides the obvious) between Alaska and Switzerland.
> 
> Pierre
> 

From gdt at lexort.com  Tue Jan 14 07:38:56 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 14 Jan 2020 10:38:56 -0500
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <b799512b05c2464bb39b358a34680964@sdfe.dk> (Kristian Evers's
 message of "Tue, 14 Jan 2020 10:52:22 +0000")
References: <1790126.7znSokOG3R@even-i700> <rmi36cjmj6p.fsf@s1.lexort.com>
 <b799512b05c2464bb39b358a34680964@sdfe.dk>
Message-ID: <rmisgkif3ov.fsf@s1.lexort.com>

Kristian Evers <kreve at sdfe.dk> writes:

> As you've noticed, PROJ 7 introduces a rather large API break. So did
> PROJ 6. Having fixed release dates for this stuff is in my opinion crucial
> information for everyone who depends on PROJ. We've announced this
> break two years in advance and made a hell of a lot of noise about it so
> that it wouldn't come as a surprise for you and everyone else. Overall
> I think we have succeeded with that, although not everyone has caught
> up yet awareness has been raised and most projects have either already
> migrated or have plans to do so soon. I don't think we could have achieved
> that with a loosely defined release schedule.

My comment about rush was not meant to be about the API break.  It's
about significant things intended for the release not yet being on
master -- but my notions regarding that are almost certainly an outlier
and are not particularly important, and this isn't a packaging issue.

I don't keep track of the future too much, as in packaging I'm mostly
concerned about releases that have happened, what has to be done
differently, and whether packaged versions of actual releases of things
that depend on PROJ can work with the new version.  The real issue is
that there are a lot of things that depend on PROJ and a number of those
are not really maintained.

So we can continue to track in the wiki page, and see where we are in
terms of PROJ-using projects having formal releases that work with PROJ
7.  Ideally they would all have had releases that will build with 7
before the release of PROJ 7, given the advance warnings, but
  https://github.com/OSGeo/PROJ/wiki/proj.h-adoption-status
says that only 10 projects are ok with PROJ 7.

I certainly understand that none of the PROJ team can deal with the
issue of other projects not having adequate maintenance.


From gdt at lexort.com  Tue Jan 14 10:26:10 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 14 Jan 2020 13:26:10 -0500
Subject: [PROJ] test failure with 6.3.0 geodtest
In-Reply-To: <rmik16562y6.fsf@s1.lexort.com> (Greg Troxel's message of "Sun,
 05 Jan 2020 15:52:33 -0500")
References: <rmid0bx7l62.fsf@s1.lexort.com> <5531003.2t44UkIDBz@even-i700>
 <rmik16562y6.fsf@s1.lexort.com>
Message-ID: <rmik15tevy5.fsf@s1.lexort.com>

I have narrowed down the geodtest issue.  Thanks very much for your
earlier hint.

With respect to HAVE_C99_MATH, I have (munging the source) basically set
it to 1 in all respects, except that I am using the PROJ-provided
remquox implementation.  Then, tests pass.

In remquox, I added a call to remquo (OS-supplied), and looked for cases
with different output.  There are many, in *n (which I read the docs to
say is an output parameter).  Right now this points to a difference in
NetBSD's remqo from remquox, and it seems the NetBSD implementation is
out of spec, but the spec is slightly hard to follow.  I'll follow up
within NetBSD.


From even.rouault at spatialys.com  Tue Jan 14 11:28:13 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 14 Jan 2020 20:28:13 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <CAB28Asg3kmUcb7jGJKMaWVkYeLk+6uL4cb3iMCW2J3DqnPXwkw@mail.gmail.com>
References: <1790126.7znSokOG3R@even-i700>
 <CAB28Asg3kmUcb7jGJKMaWVkYeLk+6uL4cb3iMCW2J3DqnPXwkw@mail.gmail.com>
Message-ID: <23581876.vQLWT69ZNB@even-i700>

> > It would probably be cleaner to avoid this patching and having
> > grid_alternatives directly point to .tif files. This would also enable us
> > to put https://github.com/osgeo/proj-datumgrid in a pure maintainance
> > state and just make https://github.com/osgeo/proj-datumgrid-geotiff the
> > new home for grids (currently the later has to be resynchronized with the
> > former)
> Possibly QGIS is a bit of an outlier in terms of Proj clients, but
> this change **would** impact us. Not in a major way, but in the order
> of 2-3 hours work to rectify (and even MORE proj version #ifdefs in
> the code! Woohoo!). If the intention is to make this an api break
> (given that it's v7), then that's fine, but if you're intending for
> this change to be transparent to clients just be aware that it isn't!

Maybe I've missed something or wasn't clear, but I don't see this is as an API 
break (as in C API). I can imagine some effect on test suites that would test 
that the PROJ pipeline from A to B would return a foo.gsb filename, and now 
that would be foo.tif, but not on the production code itself.
The impact as I see it would be more on the packaging side (grab the proj-
datumgrid-geotiff.zip )

>> One potential issue with switching to GeoTIFF files is for people having
>> pipeline strings using the current grid names in them. But similarly to 
what
>> is currently done for remote access, for local access, if we fail to find a
>> .gtx/.gsb file, we could just retry with the .tif extension.

> This would be a necessity for QGIS, otherwise existing projects will
> break and reproject differently upon loading in a build based on the
> newer PROJ version. (I suspect R would also see this as a necessity to
> avoid changing end user's existing results)

Yes, that would be definitely something to do to make the transition smoother.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Tue Jan 14 15:17:15 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 15 Jan 2020 09:17:15 +1000
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <23581876.vQLWT69ZNB@even-i700>
References: <1790126.7znSokOG3R@even-i700>
 <CAB28Asg3kmUcb7jGJKMaWVkYeLk+6uL4cb3iMCW2J3DqnPXwkw@mail.gmail.com>
 <23581876.vQLWT69ZNB@even-i700>
Message-ID: <CAB28AsjP0DRPGWWOJ+4XZPuHDcFPgcEo0QZuwapCZ-4KoWzCMg@mail.gmail.com>

On Wed, 15 Jan 2020 at 05:28, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > > It would probably be cleaner to avoid this patching and having
> > > grid_alternatives directly point to .tif files. This would also enable us
> > > to put https://github.com/osgeo/proj-datumgrid in a pure maintainance
> > > state and just make https://github.com/osgeo/proj-datumgrid-geotiff the
> > > new home for grids (currently the later has to be resynchronized with the
> > > former)
> > Possibly QGIS is a bit of an outlier in terms of Proj clients, but
> > this change **would** impact us. Not in a major way, but in the order
> > of 2-3 hours work to rectify (and even MORE proj version #ifdefs in
> > the code! Woohoo!). If the intention is to make this an api break
> > (given that it's v7), then that's fine, but if you're intending for
> > this change to be transparent to clients just be aware that it isn't!
>
> Maybe I've missed something or wasn't clear, but I don't see this is as an API
> break (as in C API). I can imagine some effect on test suites that would test
> that the PROJ pipeline from A to B would return a foo.gsb filename, and now
> that would be foo.tif, but not on the production code itself.
> The impact as I see it would be more on the packaging side (grab the proj-
> datumgrid-geotiff.zip )

It's not a c api break - but it still does change things for clients
which were previously coded to use downloads from
https://github.com/osgeo/proj-datumgrid and which have code which
handles .gsb files manually (such as installing them after downloading
the grid referenced by proj)

Nyall


>
> >> One potential issue with switching to GeoTIFF files is for people having
> >> pipeline strings using the current grid names in them. But similarly to
> what
> >> is currently done for remote access, for local access, if we fail to find a
> >> .gtx/.gsb file, we could just retry with the .tif extension.
>
> > This would be a necessity for QGIS, otherwise existing projects will
> > break and reproject differently upon loading in a build based on the
> > newer PROJ version. (I suspect R would also see this as a necessity to
> > avoid changing end user's existing results)
>
> Yes, that would be definitely something to do to make the transition smoother.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From phma at bezitopo.org  Tue Jan 14 18:53:28 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Tue, 14 Jan 2020 21:53:28 -0500
Subject: [PROJ] Transverse and oblique Mercator
In-Reply-To: <3bdd9831-e8ae-357c-1865-d27203ddb648@karney.com>
References: <2121432.YXINHqTAIZ@puma>
 <3bdd9831-e8ae-357c-1865-d27203ddb648@karney.com>
Message-ID: <2038341.TjUG5XDXGA@caracal>

On Tuesday, January 14, 2020 9:14:33 AM EST Charles Karney wrote:
> Transverse Mercator as implemented in PROJ is accurate to about 5
> nanometers within 3900 km of the central meridian.  See Fig. 2 on
> 
> https://geographiclib.sourceforge.io/html/transversemercator.html#tmfigures
> 
> GeographicLib implements an "exact" version of transverse Mercator (in
> terms of elliptic functions) which is accurate to 9 nanometers over
> the whole ellipsoid.  However, this isn't included in PROJ.

I'm thinking of using TMcoords.dat in Bezitopo to test the accuracy of the 
projection. What would be a good way to graph the results? I'd post the graphs 
that transmer makes, but the file is 5 MB, including several graphs for each 
ellipsoid.

Bezitopo computes the projection as follows:
1. Conformally project the ellipsoid to a sphere of equal volume.
2. Project the sphere transversely to a plane, giving Gauss-Schreiber.
3. Pass the resulting point as a complex number to a Fourier series and add it 
to the point.
This seems to be what Krüger was doing before he computed the n-series, but I 
have trouble understanding the hundred-year-old math paper in German with 
archaic notation,

> Regarding oblique Mercator...  I understand how this is defined for a
> sphere.  But, I'm not sure there's a well accepted definition of how
> it is defined on an ellipsoid.  In the case of Mercator (resp.
> transverse Mercator) the equator (resp. central meridian) projects to
> a straight line at equal scale.  The equivalent line would need to be
> specified for oblique Mercator.

However it's defined in Alaska, Switzerland, and anywhere else that uses the 
projection, that's how I have to do it. There may be more than one way of 
specifying an instance of the projection (for conformal conic, you can specify 
two parallels, or one parallel and a scale), but if it's the same projection, 
it needs only to be implemented once.

Pierre
-- 
gau do li'i co'e kei do


From even.rouault at spatialys.com  Wed Jan 15 10:45:13 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 15 Jan 2020 19:45:13 +0100
Subject: [PROJ] GGXF
Message-ID: <27718015.YPxeChfWEJ@even-i700>

FYI, just got notice that some information regarding GGXF has been released in

https://github.com/Esri/ggxf

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mwtoews at gmail.com  Wed Jan 15 11:17:12 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 16 Jan 2020 08:17:12 +1300
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
 <2273684.fb6arvOvHh@even-i700> <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
Message-ID: <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>

On Wed, 8 Jan 2020 at 08:46, Mike Taves <mwtoews at gmail.com> wrote:

> Sure, I'll investigate this a bit further to see if it's possible,
> given the complexity of Doxygen and Breathe. And yes, you can
> customize domains.

Good news, it wasn't too difficult to setup with RTD. I've set up a
temporary site to look at:
https://proj-tmp.readthedocs.io/en/latest/

This has versions 6.0, 6.1, 6.2 and master (7.0), in html and PDF,
which can be navigated on the bottom left side. This works for mobile
browsers too.

Now, we decide if we like it. And if we do, then Howard could set-up a
more permanent RTD account. I could then make a initial PR, and
backport as needed.

One upside of offloading building docs to RTD is that it could free up
Travis CI time. It takes about 8 mins for RTD to process html and pdf
outputs.

From howard at hobu.co  Wed Jan 15 11:48:35 2020
From: howard at hobu.co (Howard Butler)
Date: Wed, 15 Jan 2020 13:48:35 -0600
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
 <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
Message-ID: <C6C77051-F1CC-4326-9023-83494915A7EE@hobu.co>



> On Jan 15, 2020, at 1:17 PM, Mike Taves <mwtoews at gmail.com> wrote:
> 
> On Wed, 8 Jan 2020 at 08:46, Mike Taves <mwtoews at gmail.com> wrote:
> 
>> Sure, I'll investigate this a bit further to see if it's possible,
>> given the complexity of Doxygen and Breathe. And yes, you can
>> customize domains.
> 
> Good news, it wasn't too difficult to setup with RTD. I've set up a
> temporary site to look at:
> https://proj-tmp.readthedocs.io/en/latest/

Looks great!

> 
> This has versions 6.0, 6.1, 6.2 and master (7.0), in html and PDF,
> which can be navigated on the bottom left side. This works for mobile
> browsers too.
> 
> Now, we decide if we like it. And if we do, then Howard could set-up a
> more permanent RTD account. I could then make a initial PR, and
> backport as needed.

I say you go for it. Multi-versioned documents is a frequent user request, and managing it ourselves is painful. The travis offloading is nice too.

Howard


From kreve at sdfe.dk  Wed Jan 15 11:52:14 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 15 Jan 2020 19:52:14 +0000
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <C6C77051-F1CC-4326-9023-83494915A7EE@hobu.co>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
 <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
 <C6C77051-F1CC-4326-9023-83494915A7EE@hobu.co>
Message-ID: <0977C49F-0CE2-4F58-A8B2-C62654BC8835@sdfe.dk>


> On 15 Jan 2020, at 20:48, Howard Butler <howard at hobu.co> wrote:
> 
> 
> 
>> On Jan 15, 2020, at 1:17 PM, Mike Taves <mwtoews at gmail.com> wrote:
>> 
>> On Wed, 8 Jan 2020 at 08:46, Mike Taves <mwtoews at gmail.com> wrote:
>> 
>>> Sure, I'll investigate this a bit further to see if it's possible,
>>> given the complexity of Doxygen and Breathe. And yes, you can
>>> customize domains.
>> 
>> Good news, it wasn't too difficult to setup with RTD. I've set up a
>> temporary site to look at:
>> https://proj-tmp.readthedocs.io/en/latest/
> 
> Looks great!

Agreed! Well… apart from the advert. Can we get rid of it somehow? I’m open to
putting some of our budget towards that if necessary.

> 
>> 
>> This has versions 6.0, 6.1, 6.2 and master (7.0), in html and PDF,
>> which can be navigated on the bottom left side. This works for mobile
>> browsers too.
>> 
>> Now, we decide if we like it. And if we do, then Howard could set-up a
>> more permanent RTD account. I could then make a initial PR, and
>> backport as needed.
> 
> I say you go for it. Multi-versioned documents is a frequent user request, and managing it ourselves is painful. The travis offloading is nice too.
> 

Me too. Especially since it seems that RTD has no problems generating the PDF as well. Will definitely be nice to make Travis work faster.

/Kristian

From schwehr at gmail.com  Wed Jan 15 13:06:32 2020
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 15 Jan 2020 13:06:32 -0800
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <4466318.Hzq7U0iF5D@even-i700>
References: <4131592.bgbqFsJybT@even-i700>
 <dae4ab9052b94739b21c6ac990920355@sdfe.dk>
 <4466318.Hzq7U0iF5D@even-i700>
Message-ID: <CACmBxytsUc6D3WHB+zSfssbkrgsOwLoOTRm5L73xH3mvCL2i0Q@mail.gmail.com>

Can someone add the RFC to https://proj.org/community/rfc/index.html ?

On Fri, Jan 10, 2020 at 7:20 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> > I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
> > https://github.com/OSGeo/PROJ/pull/1747
>
> I declare this motion passed with +1 from PSC members KristianE, ThomasK,
> KurtS, HowardB and myself.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200115/7655cc59/attachment.html>

From kreve at sdfe.dk  Wed Jan 15 13:13:44 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 15 Jan 2020 21:13:44 +0000
Subject: [PROJ] Motion: adopt RFC 4
In-Reply-To: <CACmBxytsUc6D3WHB+zSfssbkrgsOwLoOTRm5L73xH3mvCL2i0Q@mail.gmail.com>
References: <4131592.bgbqFsJybT@even-i700>
 <dae4ab9052b94739b21c6ac990920355@sdfe.dk> <4466318.Hzq7U0iF5D@even-i700>
 <CACmBxytsUc6D3WHB+zSfssbkrgsOwLoOTRm5L73xH3mvCL2i0Q@mail.gmail.com>
Message-ID: <5B8EDB61-3E7F-449D-92A5-644F6666FDB4@sdfe.dk>

Yes, I’ve just pushed it to the 6.3 branch which the website is generated from.

/Kristian

On 15 Jan 2020, at 22:06, Kurt Schwehr <schwehr at gmail.com<mailto:schwehr at gmail.com>> wrote:

Can someone add the RFC to https://proj.org/community/rfc/index.html ?

On Fri, Jan 10, 2020 at 7:20 AM Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> wrote:
> I move to adopt RFC 4 "Remote access to grids and GeoTIFF grids"
> https://github.com/OSGeo/PROJ/pull/1747

I declare this motion passed with +1 from PSC members KristianE, ThomasK,
KurtS, HowardB and myself.

Even

--
Spatialys - Geospatial professional services
http://www.spatialys.com<http://www.spatialys.com/>
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200115/97ecb72c/attachment.html>

From mwtoews at gmail.com  Wed Jan 15 13:30:18 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 16 Jan 2020 10:30:18 +1300
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <0977C49F-0CE2-4F58-A8B2-C62654BC8835@sdfe.dk>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
 <2273684.fb6arvOvHh@even-i700> <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
 <C6C77051-F1CC-4326-9023-83494915A7EE@hobu.co>
 <0977C49F-0CE2-4F58-A8B2-C62654BC8835@sdfe.dk>
Message-ID: <CAM2FmMoQ+Oxq5zaw2+zPjtqhmues4VTpE_v36Uk3ZCVWrYaZsA@mail.gmail.com>

On Thu, 16 Jan 2020 at 08:52, Kristian Evers <kreve at sdfe.dk> wrote:
> Agreed! Well… apart from the advert. Can we get rid of it somehow? I’m open to
> putting some of our budget towards that if necessary.

According to https://readthedocs.org/accounts/gold/subscription/ a
"Gold Membership" will remove adds for all visitors to their projects.
They ask anywhere between $5/mo to $50, if you consider the project a
"small businesses or personal projects" or a "corporate supported open
source project". I'm not sure where PROJ falls exactly, but perhaps
somewhere in-between these, as it only has a non-profit backing from
OSGeo.

From mwtoews at gmail.com  Wed Jan 15 13:36:28 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 16 Jan 2020 10:36:28 +1300
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <CAM2FmMoQ+Oxq5zaw2+zPjtqhmues4VTpE_v36Uk3ZCVWrYaZsA@mail.gmail.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
 <2273684.fb6arvOvHh@even-i700> <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
 <C6C77051-F1CC-4326-9023-83494915A7EE@hobu.co>
 <0977C49F-0CE2-4F58-A8B2-C62654BC8835@sdfe.dk>
 <CAM2FmMoQ+Oxq5zaw2+zPjtqhmues4VTpE_v36Uk3ZCVWrYaZsA@mail.gmail.com>
Message-ID: <CAM2FmMrCX+z-OHg9rvNnstfdLqqwHLoyWcCPMntZQcJbpasnrA@mail.gmail.com>

On Thu, 16 Jan 2020 at 10:30, Mike Taves <mwtoews at gmail.com> wrote:
>
> On Thu, 16 Jan 2020 at 08:52, Kristian Evers <kreve at sdfe.dk> wrote:
> > Agreed! Well… apart from the advert. Can we get rid of it somehow? I’m open to
> > putting some of our budget towards that if necessary.

Another suggestion is to check with OSGeo if they are willing to
subscribe for a $50/mo basic plan, which could be used by multiple
projects (e.g. GDAL, etc.), see https://readthedocs.com/pricing/

From even.rouault at spatialys.com  Wed Jan 15 15:58:52 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jan 2020 00:58:52 +0100
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
Message-ID: <2183401.FmsU1VfKAo@even-i700>

Mike,

> https://proj-tmp.readthedocs.io/en/latest/

Looks great! (I was actually thinking today of using Travis or some other CI 
doing checkouts of several branches, building the docs and copy them at 
appropriate subdirectories)

Just a few observations:

The html target of docs/Makefile has a final step doing

@cp -r ../schemas $(BUILDDIR)/html/schemas

so as to have
https://proj.org/schemas/v0.1/projjson.schema.json
https://proj.org/schemas/v0.2/projjson.schema.json

I don't see files at:

https://proj-tmp.readthedocs.io/en/latest/schemas/v0.1/projjson.schema.json
or
https://proj-tmp.readthedocs.io/schemas/v0.1/projjson.schema.json

And similarly for the nasty hack just above in the Makefile removing the
namespace occurences you can see in
https://proj-tmp.readthedocs.io/en/latest/development/reference/cpp/
cpp_general.html
but not in
https://proj.org/development/reference/cpp/cpp_general.html

Are those post-Sphinx customization/hack steps doable ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mwtoews at gmail.com  Wed Jan 15 16:23:01 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 16 Jan 2020 13:23:01 +1300
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <2183401.FmsU1VfKAo@even-i700>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
 <2183401.FmsU1VfKAo@even-i700>
Message-ID: <CAM2FmMrdoqJgsDzHigNOLGXrLr4c80+1CchYrV6KrCDumYgFkg@mail.gmail.com>

On Thu, 16 Jan 2020 at 12:58, Even Rouault <even.rouault at spatialys.com> wrote:
> Just a few observations:
>
> The html target of docs/Makefile has a final step doing
>
> @cp -r ../schemas $(BUILDDIR)/html/schemas
>
> so as to have
> https://proj.org/schemas/v0.1/projjson.schema.json
> https://proj.org/schemas/v0.2/projjson.schema.json
>
> I don't see files at:
>
> https://proj-tmp.readthedocs.io/en/latest/schemas/v0.1/projjson.schema.json
> or
> https://proj-tmp.readthedocs.io/schemas/v0.1/projjson.schema.json
>
> And similarly for the nasty hack just above in the Makefile removing the
> namespace occurences you can see in
> https://proj-tmp.readthedocs.io/en/latest/development/reference/cpp/
> cpp_general.html
> but not in
> https://proj.org/development/reference/cpp/cpp_general.html
>
> Are those post-Sphinx customization/hack steps doable ?

Even,

I see the html Makefile target has a few steps, and I'll admit that
I've only done the first step to run the doxygen.sh script. Near the
top of conf.py I've added a simple:

os.system('cd .. && make .doxygen_up_to_date && cd source')

RTD does not use the Makefile, it directly runs sphinx-build on the
conf.py file. I'll have to see if there is a way to add a hook for to
add post-Sphinx logic near the end of processing.

As for controlling domain names like schemas/v0.1 (without en/latest),
I'm not sure how customizable this is, or if you can mix parts of one
domain with another.

From gdt at lexort.com  Wed Jan 15 16:52:19 2020
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 15 Jan 2020 19:52:19 -0500
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
 (Mike Taves's message of "Thu, 16 Jan 2020 08:17:12 +1300")
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
 <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
Message-ID: <rmi8sm88bp8.fsf@s1.lexort.com>

Mike Taves <mwtoews at gmail.com> writes:

> One upside of offloading building docs to RTD is that it could free up
> Travis CI time. It takes about 8 mins for RTD to process html and pdf
> outputs.

I don't follow this, as PROJ still needs to have docs that build to
include in packages (e.g. for offline ues), and it would seem that
validating that the docs build properly should remain part of CI.

Or is there some hook to have results from RTD fed back to the main CI
to fail the build if the docs failed?

From mwtoews at gmail.com  Wed Jan 15 17:31:42 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 16 Jan 2020 14:31:42 +1300
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <rmi8sm88bp8.fsf@s1.lexort.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com>
 <2273684.fb6arvOvHh@even-i700> <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
 <rmi8sm88bp8.fsf@s1.lexort.com>
Message-ID: <CAM2FmMoWvdhm1k1Ex7YuU5DZrvEcjncQBqugP19qLef_x-aNkg@mail.gmail.com>

On Thu, 16 Jan 2020 at 13:52, Greg Troxel <gdt at lexort.com> wrote:
> I don't follow this, as PROJ still needs to have docs that build to
> include in packages (e.g. for offline ues), and it would seem that
> validating that the docs build properly should remain part of CI.
>
> Or is there some hook to have results from RTD fed back to the main CI
> to fail the build if the docs failed?

GitHub has "checks" for PRs (currently PROJ has Cirrus CI and Travis
CI), however I don't see how to add RTD to the list of checks.

However, I can add a SVG badge to README.md, see:
https://readthedocs.org/projects/proj-tmp/

If one branch of docs fails for whatever reason, then their status
should visibly change and the docs remain with the last passing build
(if any). There are also email and webhook notifications that can be
enabled.

Also, I don't mind if the html docs are still built by Travis CI, as
these only take a minute to complete. The PDFs, however, take several
minutes to produce, and would be nice to offload these builds
elsewhere.

From even.rouault at spatialys.com  Thu Jan 16 12:19:38 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jan 2020 21:19:38 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <1790126.7znSokOG3R@even-i700>
References: <1790126.7znSokOG3R@even-i700>
Message-ID: <1896510.vLJCtlMlZf@even-i700>

Hi,

I've tried to articulate my latest thoughts about how to switch to
proj-datumgrid-geotiff & organize it in
https://docs.google.com/document/d/1-QK5NkQ9ADJrF66_6VoUcQoRoYoIiFY8CRsg1Y_MMzc/edit?usp=sharing

Feel free to edit/comment directly in it.

We should try to reach to a quick conclusion if we want to have this ready for PROJ 7, as there
will be some bits of development to do. But I think it is the good time to do this.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Thu Jan 16 15:49:16 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 17 Jan 2020 09:49:16 +1000
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <1896510.vLJCtlMlZf@even-i700>
References: <1790126.7znSokOG3R@even-i700> <1896510.vLJCtlMlZf@even-i700>
Message-ID: <CAB28AshZOzyzJE8jyFZyW-P_Xkra5maQKEWkz3gpf51=Ud9idw@mail.gmail.com>

On Fri, 17 Jan 2020 at 06:19, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> I've tried to articulate my latest thoughts about how to switch to
> proj-datumgrid-geotiff & organize it in
> https://docs.google.com/document/d/1-QK5NkQ9ADJrF66_6VoUcQoRoYoIiFY8CRsg1Y_MMzc/edit?usp=sharing
>
> Feel free to edit/comment directly in it.
>
> We should try to reach to a quick conclusion if we want to have this ready for PROJ 7, as there
> will be some bits of development to do. But I think it is the good time to do this.

One thing that concerns me:

> due to the potential different subdivision in packages, the database (grid_alternatives table) should no longer refer to the URL of a package for the location where to find the grid, but to the grid itself, and a good candidate would be to point to the URL of the grid in the CDN

Could we possibly keep the api returning the grid urls from the
existing repos, mark that api as deprecated, and then add new api to
get the new geotiff download urls? Otherwise this is a functional
break for clients, and I'd rather it became a hard-compilation failure
then a silent change in behaviour.

Nyall




>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From even.rouault at spatialys.com  Thu Jan 16 16:20:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 17 Jan 2020 01:20:30 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <CAB28AshZOzyzJE8jyFZyW-P_Xkra5maQKEWkz3gpf51=Ud9idw@mail.gmail.com>
References: <1790126.7znSokOG3R@even-i700> <1896510.vLJCtlMlZf@even-i700>
 <CAB28AshZOzyzJE8jyFZyW-P_Xkra5maQKEWkz3gpf51=Ud9idw@mail.gmail.com>
Message-ID: <1601419.sWMmAWy6kv@even-i700>

Nyall,

> Could we possibly keep the api returning the grid urls from the
> existing repos, mark that api as deprecated, and then add new api to
> get the new geotiff download urls? 

That would not be only at the API level. We would also need to keep for each 
grid in the database a location for the old package, and for the new API. That 
doesn't sound very good to me that we set in-stone past behaviour.

> Otherwise this is a functional
> break for clients, and I'd rather it became a hard-compilation failure
> then a silent change in behaviour.

Technically, this is not an API break. The PROJ 6 API already has a provision 
for this case.

If you look at

int PROJ_DLL proj_coordoperation_get_grid_used(PJ_CONTEXT *ctx,
                                               const PJ *coordoperation,
                                               int index,
                                               const char **out_short_name,
                                               const char **out_full_name,
                                               const char **out_package_name,
                                               const char **out_url,
                                               int *out_direct_download,
                                               int *out_open_license,
                                               int *out_available);

then when *out_package_name might actually be an empty string, and *out_url is 
then mean to be the URL of the grid to download, and not the URL of a package.

The PROJ6 database has actually already 2 entries following this for the 
Netherlands / RDNAP grids, such as

INSERT INTO grid_alternatives(original_grid_name,
                              proj_grid_name,
                              proj_grid_format,
                              proj_method,
                              inverse_direction,
                              package_name,
                              url, direct_download, open_license, directory)
                      VALUES ('rdtrans2008.gsb',
                              'rdtrans2008.gsb',
                              'NTv2',
                              'hgridshift',
                              0,
                              NULL, -- package name
                              'https://salsa.debian.org/debian-gis-team/proj-rdnap/raw/upstream/2008/rdtrans2008.gsb',
                              1, -- direct download
                              0, -- non-freely licensed. See https://
salsa.debian.org/debian-gis-team/proj-rdnap/raw/master/debian/copyright
                              NULL);

The output of
"""
#include <stdio.h>

#include "proj.h"

int main(void) {

    PJ_CONTEXT *ctx = proj_context_create();
    auto op = proj_create_from_database(ctx, "EPSG", "7000",
                                            PJ_CATEGORY_COORDINATE_OPERATION, 
true,
                                            nullptr);
    const char *shortName = nullptr;
    const char *fullName = nullptr;
    const char *packageName = nullptr;
    const char *url = nullptr;
    int directDownload = 0;
    int openLicense = 0;
    int available = 0;
    proj_coordoperation_get_grid_used(
                  ctx, op, 0, &shortName, &fullName, &packageName, &url,
                  &directDownload, &openLicense, &available);

    printf("packageName = '%s'\n", packageName);
    printf("url = '%s'\n", url);
    printf("directDownload = %d\n", directDownload);

    return 0;
}
"""

with PROJ 6.3 (and earlier) is

packageName = ''
url = 'https://salsa.debian.org/debian-gis-team/proj-rdnap/raw/upstream/2008/
rdtrans2008.gsb'
directDownload = 1


So, although admitedly the exception currently, the behaviour I propose in the 
document and that would become the general rule, can already happen.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mkennedy2 at earthlink.net  Wed Jan 15 15:11:24 2020
From: mkennedy2 at earthlink.net (Melita Kennedy)
Date: Wed, 15 Jan 2020 15:11:24 -0800 (GMT-08:00)
Subject: [PROJ] Transverse and oblique Mercator
Message-ID: <109659497.13146.1579129884297@wamui-albus.atl.sa.earthlink.net>


-----Original Message-----

>Date: Tue, 14 Jan 2020 21:53:28 -0500
>From: Pierre Abbat <phma at bezitopo.org>
>To: proj at lists.osgeo.org
>Subject: Re: [PROJ] Transverse and oblique Mercator
>
>On Tuesday, January 14, 2020 9:14:33 AM EST Charles Karney wrote:
>> Transverse Mercator as implemented in PROJ is accurate to about 5
>> nanometers within 3900 km of the central meridian.  See Fig. 2 on
>> 
>> https://geographiclib.sourceforge.io/html/transversemercator.html#tmfigures
>> 
>> GeographicLib implements an "exact" version of transverse Mercator (in
>> terms of elliptic functions) which is accurate to 9 nanometers over
>> the whole ellipsoid.  However, this isn't included in PROJ.
>
>I'm thinking of using TMcoords.dat in Bezitopo to test the accuracy of the 
>projection. What would be a good way to graph the results? I'd post the graphs 
>that transmer makes, but the file is 5 MB, including several graphs for each 
>ellipsoid.
>
>Bezitopo computes the projection as follows:
>1. Conformally project the ellipsoid to a sphere of equal volume.
>2. Project the sphere transversely to a plane, giving Gauss-Schreiber.
>3. Pass the resulting point as a complex number to a Fourier series and add it 
>to the point.
>This seems to be what Krüger was doing before he computed the n-series, but I 
>have trouble understanding the hundred-year-old math paper in German with 
>archaic notation,
>
>> Regarding oblique Mercator...  I understand how this is defined for a
>> sphere.  But, I'm not sure there's a well accepted definition of how
>> it is defined on an ellipsoid.  In the case of Mercator (resp.
>> transverse Mercator) the equator (resp. central meridian) projects to
>> a straight line at equal scale.  The equivalent line would need to be
>> specified for oblique Mercator.
>
>However it's defined in Alaska, Switzerland, and anywhere else that uses the 
>projection, that's how I have to do it. There may be more than one way of 
>specifying an instance of the projection (for conformal conic, you can specify 
>two parallels, or one parallel and a scale), but if it's the same projection, 
>it needs only to be implemented once.

John Snyder discusses 4 different oblique Mercator implementations on page 162 
of his book Flattening the Earth. Rosenmund's was first and is used in 
Switzerland. It's not quite the same as Hotine's which is used in Alaska, but 
it's close enough that Esri, at least, is using Hotine's version for Switzerland. 
Madagascar uses Laborde's version. It converts to a conformal sphere, then uses 
a spherical transverse Mercator, and finally a 3rd-order complex-algebra 
transformation to make it oblique. It cannot be emulated with Hotine with a 
reasonable accuracy. Snyder also lists one designed by Cole for Egypt, but it's 
not in common use.

Disclosure: I work for Esri.

Melita

From even.rouault at spatialys.com  Thu Jan 16 18:38:05 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 17 Jan 2020 03:38:05 +0100
Subject: [PROJ] Switch to proj-datumgrid-geotiff for PROJ 7 ?
In-Reply-To: <1601419.sWMmAWy6kv@even-i700>
References: <1790126.7znSokOG3R@even-i700>
 <CAB28AshZOzyzJE8jyFZyW-P_Xkra5maQKEWkz3gpf51=Ud9idw@mail.gmail.com>
 <1601419.sWMmAWy6kv@even-i700>
Message-ID: <1835749.pIAKOJGbU5@even-i700>

> So, although admitedly the exception currently, the behaviour I propose in
> the document and that would become the general rule, can already happen.

Hum thinking however that with the ${agency_name}/${grid_name} structure I 
proposed, then having the URL only wouldn't be enough to know where to put the 
file exactly. You should also look at the shortName that might be "fr_ign/
ntf_r93.tif" to potentially create the appropriate subdirectory.

Darn. A bit more complicated than I'd like it to be. The flat organization 
might be the less risky after all.

So, we could just have the ${agency_name}.txt files listing the grids related 
to an agency to help packagers create smaller packagers.

Or an idea I had but didn't expose yet, prefix grid name with the agency name.

fr_ign_ntf_r93.tif
nz_linz_nzgd2kgrid0005.tif
etc...


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Thu Jan 16 23:51:03 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 17 Jan 2020 07:51:03 +0000
Subject: [PROJ] proj manual, versioning, download location
In-Reply-To: <CAM2FmMoQ+Oxq5zaw2+zPjtqhmues4VTpE_v36Uk3ZCVWrYaZsA@mail.gmail.com>
References: <BF63171C-D6BD-45DB-A3C1-158461FA9DF5@sdfe.dk>
 <rmizhf17qda.fsf@s1.lexort.com> <2273684.fb6arvOvHh@even-i700>
 <d3ef9a89d575465aad2dd86c4c3a4985@sdfe.dk>
 <CAM2FmMrb6P77Oeg1tFAX=EuuUi4FAH4Fhx-XXgZtHr+At1s-3w@mail.gmail.com>
 <19FEFD10-51E5-40D8-A6B3-3156D3C14DA1@sdfe.dk>
 <CAM2FmMqvW+t_TqPdt4cri2eJd5zDfeacj5Lyv4sD-P4gGMFx8Q@mail.gmail.com>
 <CAM2FmMq53+P+BqXPeU0KHQuVEgrHy1O4vWWyFWE3EmFmrUzLQA@mail.gmail.com>
 <C6C77051-F1CC-4326-9023-83494915A7EE@hobu.co>
 <0977C49F-0CE2-4F58-A8B2-C62654BC8835@sdfe.dk>
 <CAM2FmMoQ+Oxq5zaw2+zPjtqhmues4VTpE_v36Uk3ZCVWrYaZsA@mail.gmail.com>
Message-ID: <b4221a6800aa40388cd57255d810d271@sdfe.dk>

Mike,

Thanks for looking into the pricing brackets. If you can get the last bits
of the docs build correct on RTD I think we should just go with for it. It's
a significant improvement to our docs and it even eases the load on
Travis. 

I had a look at the gold membership and it actually seems that they let
you decide your own price. Anywhere between $5 and $50, depending on
the size of your project/organization. I'll check with the OSGeo board if
they want to make a shared membership for all OSGeo projects or if
we should finance it ourselves using the projects allowance from OSGeo.
If we end up doing the latter I think we should put $10-$15/month towards
the membership.

/Kristian

-----Original Message-----
From: Mike Taves <mwtoews at gmail.com> 
Sent: 15. januar 2020 22:30
To: Kristian Evers <kreve at sdfe.dk>
Cc: Howard Butler <howard at hobu.co>; proj at lists.osgeo.org
Subject: Re: [PROJ] proj manual, versioning, download location

On Thu, 16 Jan 2020 at 08:52, Kristian Evers <kreve at sdfe.dk> wrote:
> Agreed! Well… apart from the advert. Can we get rid of it somehow? I’m open to
> putting some of our budget towards that if necessary.

According to https://readthedocs.org/accounts/gold/subscription/ a
"Gold Membership" will remove adds for all visitors to their projects.
They ask anywhere between $5/mo to $50, if you consider the project a
"small businesses or personal projects" or a "corporate supported open
source project". I'm not sure where PROJ falls exactly, but perhaps
somewhere in-between these, as it only has a non-profit backing from
OSGeo.

From charles.karney at sri.com  Fri Jan 17 08:08:53 2020
From: charles.karney at sri.com (Charles Karney)
Date: Fri, 17 Jan 2020 16:08:53 +0000
Subject: [PROJ] Transverse and oblique Mercator
In-Reply-To: <2038341.TjUG5XDXGA@caracal>
References: <2121432.YXINHqTAIZ@puma>
 <3bdd9831-e8ae-357c-1865-d27203ddb648@karney.com>
 <2038341.TjUG5XDXGA@caracal>
Message-ID: <a02ad010-5a95-3da4-c246-c0707dec44d4@sri.com>

The error in the Krueger series for the TM projection is primarily a
function of the distance from the central meridian.  So I recommend:

   * taking a series of points a given (geodesic) distance from the
     central meridian
   * computing the errors in the forward and reverse projections for each
     point
   * convert the error in the TM coordinates to a true distance (divide
     by the TM scale)
   * taking the maximum of the error (over all points + forward +
     reverse)
   * plotting this error as a function of the distance

This is how I produced Figure 2 on

https://geographiclib.sourceforge.io/html/transversemercator.html#tmfigures

To obtain exact results (against which to compare your results), I
recommend using the TransverseMercatorExact class in GeographicLib

https://geographiclib.sourceforge.io/html/classGeographicLib_1_1TransverseMercatorExact.html

In order to avoid round-off errors in the "exact" calculations, you will
need to compile GeographicLib to use a precision higher than double; for
details, see

https://geographiclib.sourceforge.io/html/highprec.html

   --Charles

On 2020-01-14 21:53, Pierre Abbat wrote:
> On Tuesday, January 14, 2020 9:14:33 AM EST Charles Karney wrote:
>> Transverse Mercator as implemented in PROJ is accurate to about 5
>> nanometers within 3900 km of the central meridian.  See Fig. 2 on
>>
>> https://geographiclib.sourceforge.io/html/transversemercator.html#tmfigures
>>
>> GeographicLib implements an "exact" version of transverse Mercator (in
>> terms of elliptic functions) which is accurate to 9 nanometers over
>> the whole ellipsoid.  However, this isn't included in PROJ.
> I'm thinking of using TMcoords.dat in Bezitopo to test the accuracy of the
> projection. What would be a good way to graph the results? I'd post the graphs
> that transmer makes, but the file is 5 MB, including several graphs for each
> ellipsoid.
> 
> Bezitopo computes the projection as follows:
> 1. Conformally project the ellipsoid to a sphere of equal volume.
> 2. Project the sphere transversely to a plane, giving Gauss-Schreiber.
> 3. Pass the resulting point as a complex number to a Fourier series and add it
> to the point.
> This seems to be what Krüger was doing before he computed the n-series, but I
> have trouble understanding the hundred-year-old math paper in German with
> archaic notation,
> 

From phma at bezitopo.org  Sat Jan 18 22:13:58 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Sun, 19 Jan 2020 01:13:58 -0500
Subject: [PROJ] Transverse and oblique Mercator
In-Reply-To: <109659497.13146.1579129884297@wamui-albus.atl.sa.earthlink.net>
References: <109659497.13146.1579129884297@wamui-albus.atl.sa.earthlink.net>
Message-ID: <5121830.g0erNuU6of@puma>

On Wednesday, 15 January 2020 18.11.24 EST Melita Kennedy wrote:
> John Snyder discusses 4 different oblique Mercator implementations on page
> 162 of his book Flattening the Earth. Rosenmund's was first and is used in
> Switzerland. It's not quite the same as Hotine's which is used in Alaska,
> but it's close enough that Esri, at least, is using Hotine's version for
> Switzerland. Madagascar uses Laborde's version. It converts to a conformal
> sphere, then uses a spherical transverse Mercator, and finally a 3rd-order
> complex-algebra transformation to make it oblique. It cannot be emulated
> with Hotine with a reasonable accuracy. Snyder also lists one designed by
> Cole for Egypt, but it's not in common use.

http://mapref.org/ObliqueMercatorProjection.html says that Rosenmund's version 
is simply a conformal projection from the ellipsoid to the sphere, followed by 
an oblique Mercator projection of the sphere. That's easy.

Should I get Snyder's book? Your book?

Pierre
-- 
.i toljundi do .ibabo mi'afra tu'a do
.ibabo damba do .ibabo do jinga
.icu'u la ma'atman.




From kreve at sdfe.dk  Sun Jan 19 03:28:29 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Sun, 19 Jan 2020 11:28:29 +0000
Subject: [PROJ] Transverse and oblique Mercator
In-Reply-To: <5121830.g0erNuU6of@puma>
References: <109659497.13146.1579129884297@wamui-albus.atl.sa.earthlink.net>
 <5121830.g0erNuU6of@puma>
Message-ID: <e695d23013914400b8a985fde5ada0c7@sdfe.dk>

Pierre,

You can download a digital copy of Snyders book at https://pubs.er.usgs.gov/publication/pp1395

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Pierre Abbat
Sent: 19. januar 2020 07:14
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Transverse and oblique Mercator

On Wednesday, 15 January 2020 18.11.24 EST Melita Kennedy wrote:
> John Snyder discusses 4 different oblique Mercator implementations on page
> 162 of his book Flattening the Earth. Rosenmund's was first and is used in
> Switzerland. It's not quite the same as Hotine's which is used in Alaska,
> but it's close enough that Esri, at least, is using Hotine's version for
> Switzerland. Madagascar uses Laborde's version. It converts to a conformal
> sphere, then uses a spherical transverse Mercator, and finally a 3rd-order
> complex-algebra transformation to make it oblique. It cannot be emulated
> with Hotine with a reasonable accuracy. Snyder also lists one designed by
> Cole for Egypt, but it's not in common use.

http://mapref.org/ObliqueMercatorProjection.html says that Rosenmund's version 
is simply a conformal projection from the ellipsoid to the sphere, followed by 
an oblique Mercator projection of the sphere. That's easy.

Should I get Snyder's book? Your book?

Pierre
-- 
.i toljundi do .ibabo mi'afra tu'a do
.ibabo damba do .ibabo do jinga
.icu'u la ma'atman.



_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From phma at bezitopo.org  Mon Jan 20 05:25:55 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Mon, 20 Jan 2020 08:25:55 -0500
Subject: [PROJ] Transverse and oblique Mercator
In-Reply-To: <e695d23013914400b8a985fde5ada0c7@sdfe.dk>
References: <109659497.13146.1579129884297@wamui-albus.atl.sa.earthlink.net>
 <5121830.g0erNuU6of@puma> <e695d23013914400b8a985fde5ada0c7@sdfe.dk>
Message-ID: <1890845.D21DElyM4p@puma>

On Sunday, 19 January 2020 06.28.29 EST Kristian Evers wrote:
> Pierre,
> 
> You can download a digital copy of Snyders book at
> https://pubs.er.usgs.gov/publication/pp1395

As far as I can figure out, Hotine and Rosenmund are the same, except for the 
size of the sphere that the ellipsoid is conformally projected to. Hotine 
claims to be equidistant along a geodesic, but it can't be, unless the 
geodesic is the equator (in which case it's just axial Mercator). Laborde is 
different, but the book doesn't give formulas for Laborde.

Pierre

-- 
The gostak pelled at the fostin lutt for darfs for her martle plave.
The darfs had smibbed, the lutt was thale, and the pilter had nothing snave.




From phma at bezitopo.org  Mon Jan 20 05:34:59 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Mon, 20 Jan 2020 08:34:59 -0500
Subject: [PROJ] Arc length of an ellipse
Message-ID: <2924714.VOIZBZW9L0@puma>

I'd like to make a separate transmer program which will compute the Fourier 
series coefficients for transverse Mercator with greater precision than the 
transmer program in Bezitopo does. To do this, I need to compute the arc 
length from the equator to any point along the meridian of an ellipsoid. 
Wikipedia says that elliptic integrals came from computing the arc length of 
an ellipse, but doesn't explain how to compute the arc length using elliptic 
functions. Do you know how to do this?

I won't get around to doing this until late March at the earliest. I'm going 
to present at the MAA sectional, and to compute in 16-byte floats I need a 
Power9 box, which I don't have yet.

Pierre
-- 
The Black Garden on the Mountain is not on the Black Mountain.




From charles at karney.com  Mon Jan 20 06:16:57 2020
From: charles at karney.com (Charles Karney)
Date: Mon, 20 Jan 2020 09:16:57 -0500
Subject: [PROJ] Arc length of an ellipse
In-Reply-To: <2924714.VOIZBZW9L0@puma>
References: <2924714.VOIZBZW9L0@puma>
Message-ID: <a5dbcb1e-502e-a647-8796-c2b8b0e25fa8@karney.com>

Wikipedia gives exact formulas, involving the incomplete elliptic
integral of the second kind, E(phi, k), for the meridian arc length
measured from the equator.  You can use these.  Perhaps you're asking
how to compute E(k, phi)?  I recommend Carlson (1995)

   https://doi.org/10.1007/BF02198293

which allows E(k, phi) to be computed to arbitrary precision.  The
EllipticFunction class in GeographicLib uses Carlson's methods:

https://geographiclib.sourceforge.io/html/classGeographicLib_1_1EllipticFunction.html

You also mentioned computing the Fourier coefficients for transverse
Mercator to higher order.  You will find the coefficients accurate to
f^30 (f = flattening) in

   https://geographiclib.sourceforge.io/html/tmseries30.html

These are the Fourier coefficients from conversion between conformal and
rectifying latitudes.

Finally, I note that you can use 128-bit floats with boost's
boost::multiprecision::float128 type.  This depends on the GCC's
libquadmath library and so is available on vanilla Linux systems.

   --Charles

On 1/20/20 8:34 AM, Pierre Abbat wrote:
> I'd like to make a separate transmer program which will compute the Fourier
> series coefficients for transverse Mercator with greater precision than the
> transmer program in Bezitopo does. To do this, I need to compute the arc
> length from the equator to any point along the meridian of an ellipsoid.
> Wikipedia says that elliptic integrals came from computing the arc length of
> an ellipse, but doesn't explain how to compute the arc length using elliptic
> functions. Do you know how to do this?
> 
> I won't get around to doing this until late March at the earliest. I'm going
> to present at the MAA sectional, and to compute in 16-byte floats I need a
> Power9 box, which I don't have yet.
> 
> Pierre
> 

-- 
Charles Karney <charles at karney.com>
Princeton, NJ

From cjmce at lsu.edu  Mon Jan 20 08:22:00 2020
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Mon, 20 Jan 2020 16:22:00 +0000
Subject: [PROJ] Transverse and oblique Mercator
In-Reply-To: <1890845.D21DElyM4p@puma>
References: <109659497.13146.1579129884297@wamui-albus.atl.sa.earthlink.net>
 <5121830.g0erNuU6of@puma>
 <e695d23013914400b8a985fde5ada0c7@sdfe.dk>,<1890845.D21DElyM4p@puma>
Message-ID: <BYAPR06MB549519D51F05BDCEFFE4E7E5A8320@BYAPR06MB5495.namprd06.prod.outlook.com>


Like I said, Laborde and Rosenmund are Double Projections.  (Spherical projections as first step.). Hotine goes first to the aposphere which is shaped like a turnip.

Get Outlook for iOS<https://aka.ms/o0ukef>
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Pierre Abbat <phma at bezitopo.org>
Sent: Monday, January 20, 2020 7:25:55 AM
To: proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: Re: [PROJ] Transverse and oblique Mercator

On Sunday, 19 January 2020 06.28.29 EST Kristian Evers wrote:
> Pierre,
>
> You can download a digital copy of Snyders book at
> https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Fpubs.er.usgs.gov%2Fpublication%2Fpp1395&amp;data=02%7C01%7Ccjmce%40lsu.edu%7C15534768979d4535841c08d79dac527c%7C2d4dad3f50ae47d983a09ae2b1f466f8%7C0%7C0%7C637151235750835698&amp;sdata=nigN4%2BseRhC5A%2FXk8GgzGBmlBOan915BtUk%2FUaZhBt4%3D&amp;reserved=0

As far as I can figure out, Hotine and Rosenmund are the same, except for the
size of the sphere that the ellipsoid is conformally projected to. Hotine
claims to be equidistant along a geodesic, but it can't be, unless the
geodesic is the equator (in which case it's just axial Mercator). Laborde is
different, but the book doesn't give formulas for Laborde.

Pierre

--
The gostak pelled at the fostin lutt for darfs for her martle plave.
The darfs had smibbed, the lutt was thale, and the pilter had nothing snave.



_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj&amp;data=02%7C01%7Ccjmce%40lsu.edu%7C15534768979d4535841c08d79dac527c%7C2d4dad3f50ae47d983a09ae2b1f466f8%7C0%7C0%7C637151235750835698&amp;sdata=BH8Ln7QrBn0YVCoKXUQhHsA%2FeAY%2BEmerRWcRNOjiMaA%3D&amp;reserved=0
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200120/2ee8f7bf/attachment.html>

From luis.de.sousa at protonmail.ch  Wed Jan 22 05:58:31 2020
From: luis.de.sousa at protonmail.ch (=?UTF-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Wed, 22 Jan 2020 13:58:31 +0000
Subject: [PROJ] Relevant descrepancies between Sinusoidal and Homolosine
Message-ID: <ZsykyKxONMAuWLmLJWl1SclSYaxXCCFBDkLRQXu5QQ8h8kNtPM-nYdRSXEtL8pcd6zWSHjNJM2eQGJQlIz-4trEJbYBy2Yjky3S1Yb2a-X4=@protonmail.ch>

Dear all,

the past couple of weeks I have been struggling with visible differences between the Sinusoidal and the Homolosine. Between 40º S and 40º N the northing coordinates in the both projections should be the same - the interruptions in the Homolosine only affect easting. However this is not case, and the further away from the Equator the worse it is. By parallel 40 the difference is well past 20 km. One of the two computations must be incorrect.

While trying to identify the cause I found out that the Sinusoidal as implemented by PROJ is not actually equal area. The further away from the Equator, the smaller areas become. Whereas other equal-area projections like the Homolosine, Eckert IV or Mollweide all agree closely in their full co-domain. I am attaching a small CSV that digests some of these computations.

Before digging further into this issue, I would like to ask you to verify these discrepancies. Can you replicate, or am I seeing this wrong?

My set up:
- Ubuntu 18.04
- UbuntuGIS-Unstable PPA
- PROJ 5.2.0

The PROJ strings I am using:
+proj=sinu +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=moll +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=latlong +datum=WGS84

Thank you.

--
Luís
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200122/a3b204b5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Sinusoidal.csv
Type: text/csv
Size: 958 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200122/a3b204b5/attachment.csv>

From strebe at aol.com  Wed Jan 22 09:15:34 2020
From: strebe at aol.com (strebe at aol.com)
Date: Wed, 22 Jan 2020 17:15:34 +0000 (UTC)
Subject: [PROJ] Relevant descrepancies between Sinusoidal and Homolosine
References: <109188857.17827757.1579713334832.ref@mail.yahoo.com>
Message-ID: <109188857.17827757.1579713334832@mail.yahoo.com>

 
Caveat: I don’t know much about PROJ specifically.
The formulæ given here for sinusoidal are wrong:https://proj.org/operations/projections/sinu.html
There is no parameterization of these formulæ attributed to “MacBryde” (presumably McBride) and Thomas whereby you arrive at the sinusoidal. I haven’t looked at the source code to see if that’s actually how they’re implemented.

Also, the datum you specify is ellipsoidal, but the formulæ operate against the sphere. This results in not-quite-equal-area, at least theoretically. Again,  don’t know anything about the implementation. That would be a problem for all three of the equal-area projections you list, though.

— daan
 
 
-----Original Message-----
From: Luí­s Moreira de Sousa <luis.de.sousa at protonmail.ch>
To: proj at lists.osgeo.org <proj at lists.osgeo.org>
Sent: Wed, Jan 22, 2020 6:06 am
Subject: [PROJ] Relevant descrepancies between Sinusoidal and Homolosine

Dear all,

the past couple of weeks I have been struggling with visible differences between the Sinusoidal and the Homolosine. Between 40º S and 40º N the northing coordinates in the both projections should be the same - the interruptions in the Homolosine only affect easting. However this is not case, and the further away from the Equator the worse it is. By parallel 40 the difference is well past 20 km. One of the two computations must be incorrect.

While trying to identify the cause I found out that the Sinusoidal as implemented by PROJ is not actually equal area. The further away from the Equator, the smaller areas become. Whereas other equal-area projections like the Homolosine, Eckert IV or Mollweide all agree closely in their full co-domain. I am attaching a small CSV that digests some of these computations.

Before digging further into this issue, I would like to ask you to verify these discrepancies. Can you replicate, or am I seeing this wrong?

My set up:
- Ubuntu 18.04
- UbuntuGIS-Unstable PPA
- PROJ 5.2.0

The PROJ strings I am using:
+proj=sinu +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=moll +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=latlong +datum=WGS84

Thank you.

--
Luís
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200122/2a912d7c/attachment.html>

From even.rouault at spatialys.com  Wed Jan 22 09:52:02 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 22 Jan 2020 18:52:02 +0100
Subject: [PROJ] RFC 5: Adopt GeoTIFF-based grids for grids delivered with
	PROJ
Message-ID: <4003443.TWSVWSJljn@even-i700>

Hi,

RFC 4 has now been merged into PROJ master. Enjoy! Thanks to all people
who have helped in shaping and reviewing it.

As an attempt to come to a conclusion regarding how to deliver grids with
PROJ 7, I've created RFC5 summarizing discussions of the past couple of weeks.

Pull request at: https://github.com/OSGeo/PROJ/pull/1868

RST rendering at:
https://github.com/rouault/PROJ/blob/rfc5_text/docs/source/community/rfc/rfc-5.rst

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cjmce at lsu.edu  Wed Jan 22 10:20:47 2020
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Wed, 22 Jan 2020 18:20:47 +0000
Subject: [PROJ] Relevant descrepancies between Sinusoidal and Homolosine
In-Reply-To: <109188857.17827757.1579713334832@mail.yahoo.com>
References: <109188857.17827757.1579713334832.ref@mail.yahoo.com>,
 <109188857.17827757.1579713334832@mail.yahoo.com>
Message-ID: <BYAPR06MB5495953F7C3BEBD874ADC758A80C0@BYAPR06MB5495.namprd06.prod.outlook.com>

What about using Authalic Latitide?

Cliff Mugnier

Get Outlook for iOS<https://aka.ms/o0ukef>
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of strebe at aol.com <strebe at aol.com>
Sent: Wednesday, January 22, 2020 11:15:34 AM
To: luis.de.sousa at protonmail.ch <luis.de.sousa at protonmail.ch>; proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: Re: [PROJ] Relevant descrepancies between Sinusoidal and Homolosine


Caveat: I don’t know much about PROJ specifically.

The formulæ given here for sinusoidal are wrong:
https://proj.org/operations/projections/sinu.html

There is no parameterization of these formulæ attributed to “MacBryde” (presumably McBride) and Thomas whereby you arrive at the sinusoidal. I haven’t looked at the source code to see if that’s actually how they’re implemented.

Also, the datum you specify is ellipsoidal, but the formulæ operate against the sphere. This results in not-quite-equal-area, at least theoretically. Again,  don’t know anything about the implementation. That would be a problem for all three of the equal-area projections you list, though.

— daan


-----Original Message-----
From: Luí­s Moreira de Sousa <luis.de.sousa at protonmail.ch>
To: proj at lists.osgeo.org <proj at lists.osgeo.org>
Sent: Wed, Jan 22, 2020 6:06 am
Subject: [PROJ] Relevant descrepancies between Sinusoidal and Homolosine

Dear all,

the past couple of weeks I have been struggling with visible differences between the Sinusoidal and the Homolosine. Between 40º S and 40º N the northing coordinates in the both projections should be the same - the interruptions in the Homolosine only affect easting. However this is not case, and the further away from the Equator the worse it is. By parallel 40 the difference is well past 20 km. One of the two computations must be incorrect.

While trying to identify the cause I found out that the Sinusoidal as implemented by PROJ is not actually equal area. The further away from the Equator, the smaller areas become. Whereas other equal-area projections like the Homolosine, Eckert IV or Mollweide all agree closely in their full co-domain. I am attaching a small CSV that digests some of these computations.

Before digging further into this issue, I would like to ask you to verify these discrepancies. Can you replicate, or am I seeing this wrong?

My set up:
- Ubuntu 18.04
- UbuntuGIS-Unstable PPA
- PROJ 5.2.0

The PROJ strings I am using:
+proj=sinu +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=moll +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs
+proj=latlong +datum=WGS84

Thank you.

--
Luís
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj<https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj&data=02%7C01%7Ccjmce%40lsu.edu%7C30925ece0f784cf9747b08d79f5eb3c1%7C2d4dad3f50ae47d983a09ae2b1f466f8%7C0%7C1%7C637153101404777879&sdata=Gl2WZVeKQda4VPUaJFG%2FMjWxEuz8deEzIAF7BwnOHwQ%3D&reserved=0>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200122/0ba1e9fd/attachment-0001.html>

From kreve at sdfe.dk  Thu Jan 23 11:27:39 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 23 Jan 2020 19:27:39 +0000
Subject: [PROJ] Postponing removal of proj_api.h
Message-ID: <EDD8B284-C421-4AB6-829C-38450A0AC7AA@sdfe.dk>

All,

Removing proj_api.h from the public API of PROJ has been a controversial topic
since it was announced with the 5.0.0 release. As we’ve moved closer and closer
to the release date of PROJ 7.0.0 resistance has increased. The resistance is
coming both from the wider community and several PSC members [0]. That can’t be
ignored, so the upcoming 7.0.0 release *will* include proj_api.h allowing
downstream projects to still use the deprecated API for another release cycle.
Hopefully this decision will make life easier for both developers and packagers
and give everyone some much needed time to catch up.

Be aware though, the decision to postpone the removal of proj_api.h does not
mean that will be skipped altogether. It *will* be removed in PROJ 8.0.0. The
immediate consequence of extending the life-time of proj_api.h is that there
will not be any more maintenance releases of the 6.3 branch. The only reason we
planned on doing that was to offer a maintained version of PROJ that includes
proj_api.h. With the most recent version including the header file that is no
longer a concern. With 7.0 delaying removal of the header for one more release
cycle, this concern is eliminated. We expect no 7.x maintenance release
activity related to the old API, but it is probable there will be some related
to recent efforts.

/Kristian


[0] https://github.com/OSGeo/PROJ/pull/1872
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200123/255e1667/attachment.html>

From jmckenna at gatewaygeomatics.com  Thu Jan 23 12:06:35 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 23 Jan 2020 16:06:35 -0400
Subject: [PROJ] Postponing removal of proj_api.h
In-Reply-To: <EDD8B284-C421-4AB6-829C-38450A0AC7AA@sdfe.dk>
References: <EDD8B284-C421-4AB6-829C-38450A0AC7AA@sdfe.dk>
Message-ID: <8c89a584-44c3-ecd4-8b8a-d9dc1ec4d97f@gatewaygeomatics.com>

Thank you Kristian, controversial for sure, but it gives more time for 
so many projects to catch-up to all of the many great changes being made 
by the PROJ community.

-jeff



On 2020-01-23 3:27 p.m., Kristian Evers wrote:
> All,
> 
> Removing proj_api.h from the public API of PROJ has been a controversial 
> topic
> since it was announced with the 5.0.0 release. As we’ve moved closer and 
> closer
> to the release date of PROJ 7.0.0 resistance has increased. The 
> resistance is
> coming both from the wider community and several PSC members [0]. That 
> can’t be
> ignored, so the upcoming 7.0.0 release *will* include proj_api.h allowing
> downstream projects to still use the deprecated API for another release 
> cycle.
> Hopefully this decision will make life easier for both developers and 
> packagers
> and give everyone some much needed time to catch up.
> 
> Be aware though, the decision to postpone the removal of proj_api.h does not
> mean that will be skipped altogether. It *will* be removed in PROJ 
> 8.0.0. The
> immediate consequence of extending the life-time of proj_api.h is that there
> will not be any more maintenance releases of the 6.3 branch. The only 
> reason we
> planned on doing that was to offer a maintained version of PROJ that 
> includes
> proj_api.h. With the most recent version including the header file that 
> is no
> longer a concern. With 7.0 delaying removal of the header for one more 
> release
> cycle, this concern is eliminated. We expect no 7.x maintenance release
> activity related to the old API, but it is probable there will be some 
> related
> to recent efforts.
> 
> /Kristian
> 
> 
> [0] https://github.com/OSGeo/PROJ/pull/1872
> 
> 

From jmckenna at gatewaygeomatics.com  Thu Jan 23 12:42:04 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 23 Jan 2020 16:42:04 -0400
Subject: [PROJ] Postponing removal of proj_api.h
In-Reply-To: <8c89a584-44c3-ecd4-8b8a-d9dc1ec4d97f@gatewaygeomatics.com>
References: <EDD8B284-C421-4AB6-829C-38450A0AC7AA@sdfe.dk>
 <8c89a584-44c3-ecd4-8b8a-d9dc1ec4d97f@gatewaygeomatics.com>
Message-ID: <0b2f0183-7147-9b91-0112-0e60229fa618@gatewaygeomatics.com>

To save everyone from googling, here is the link to the Adoption status 
wiki page, listing status by project name (please everyone keep your 
project status updated) : 
https://github.com/OSGeo/PROJ/wiki/proj.h-adoption-status

-jeff



On 2020-01-23 4:06 p.m., Jeff McKenna wrote:
> Thank you Kristian, controversial for sure, but it gives more time for 
> so many projects to catch-up to all of the many great changes being made 
> by the PROJ community.
> 
> -jeff
> 
> 
> 
> On 2020-01-23 3:27 p.m., Kristian Evers wrote:
>> All,
>>
>> Removing proj_api.h from the public API of PROJ has been a 
>> controversial topic
>> since it was announced with the 5.0.0 release. As we’ve moved closer 
>> and closer
>> to the release date of PROJ 7.0.0 resistance has increased. The 
>> resistance is
>> coming both from the wider community and several PSC members [0]. That 
>> can’t be
>> ignored, so the upcoming 7.0.0 release *will* include proj_api.h allowing
>> downstream projects to still use the deprecated API for another 
>> release cycle.
>> Hopefully this decision will make life easier for both developers and 
>> packagers
>> and give everyone some much needed time to catch up.
>>
>> Be aware though, the decision to postpone the removal of proj_api.h 
>> does not
>> mean that will be skipped altogether. It *will* be removed in PROJ 
>> 8.0.0. The
>> immediate consequence of extending the life-time of proj_api.h is that 
>> there
>> will not be any more maintenance releases of the 6.3 branch. The only 
>> reason we
>> planned on doing that was to offer a maintained version of PROJ that 
>> includes
>> proj_api.h. With the most recent version including the header file 
>> that is no
>> longer a concern. With 7.0 delaying removal of the header for one more 
>> release
>> cycle, this concern is eliminated. We expect no 7.x maintenance release
>> activity related to the old API, but it is probable there will be some 
>> related
>> to recent efforts.
>>
>> /Kristian
>>
>>
>> [0] https://github.com/OSGeo/PROJ/pull/1872
>>
>>

From sebastic at xs4all.nl  Fri Jan 24 01:38:58 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 24 Jan 2020 10:38:58 +0100
Subject: [PROJ] OSGeo incubation status
In-Reply-To: <b5cf21de-b933-4c6e-71e2-1dbc0436ff16@xs4all.nl>
References: <AA1B1545-6662-4F5B-9861-2A8707F290F4@sdfe.dk>
 <7E0BC148-5653-4B85-AFA2-4071FC88890F@sdfe.dk>
 <6d7f70fe-ff3c-7d16-6c3b-f814d5e82273@xs4all.nl>
 <2820421.5RQSEPL7dH@even-i700> <19AECC58-1569-4FD6-B5A3-B9E998399AD6@sdfe.dk>
 <0846a40e-54ff-b59c-096b-eadecb62729b@geomatys.com>
 <012ca336-a53b-13ff-c67a-1bea0039d950@xs4all.nl>
 <54268c90-91b8-0a45-80ef-66a371b28bb7@geomatys.com>
 <b5cf21de-b933-4c6e-71e2-1dbc0436ff16@xs4all.nl>
Message-ID: <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>

On 9/10/19 1:50 PM, Sebastiaan Couwenberg wrote:
> On 9/10/19 1:16 PM, Martin Desruisseaux wrote:
>> On EPSG, can we really said that the data fail under MIT license because
>> we do not modify it? The EPSG terms of use said:
>>
>>> You are obliged to inform anyone to whom you provide the EPSG
>>> Facilities of these Terms of Use.
>> So we need to inform users that they can not modify those data without
>> changing the EPSG name. And also that they can not extract the data and
>> sell them alone (without the added value of PROJ or other software).
>> Those conditions are not MIT terms.
> 
> Unless PROJ already modifies the data and doesn't attribute it to the
> EPSG dataset. There is no epsg init file any more, there is proj.db now.
> 
> Not being a lawyer I cannot provide an authoritative answer, only my
> interpretation.
> 
>> The Apache Software Foundation legal team has debated about the
>> permission to include EPSG data in Apache software [3], and our
>> conclusion was that we can not provide them directly. We do that
>> indirectly by providing the data in a "non-free" package and require an
>> explicit action from users (which we try to make as simple as possible)
>> to get them.
> 
> I hope we can prevent this situation with proj, as we'll revert back to
> the one with libgeotiff-epsg which few users installed despite needing it.
> 
> In the worst case scenario proj moves to non-free and everything that
> depends on it to contrib, making them not part of Debian and loose QA
> coverage, autobuilding and the like. This would be very harmful to users.
> 
> I would stick to the working theory until IOGP complains and proves us
> otherwise.

There was an event about the new Dutch grids yesterday, there I spoke
with Roel Nicolai who has been involved with EPSG since the beginning
and drafted the EPSG TOU. He told me that my interpretation of the terms
is incorrect, the MIT license cannot be applied to the SQL files derived
from the EPSG data as done currently. He also strongly urged us to
separate code and data, i.e. don't include the SQL files in the source
tree nor build the database as part of the build process.

To resolve this issue without making PROJ non-free with the adverse
ripple effect on all its dependent projects, we should implement a
process similar to Apache SIS.

Alternatively we need to convince IOPG to dual license the EPSG data
under and DFSG compatible license.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kreve at sdfe.dk  Fri Jan 24 03:02:11 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 24 Jan 2020 11:02:11 +0000
Subject: [PROJ] OSGeo incubation status
In-Reply-To: <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>
References: <AA1B1545-6662-4F5B-9861-2A8707F290F4@sdfe.dk>
 <7E0BC148-5653-4B85-AFA2-4071FC88890F@sdfe.dk>
 <6d7f70fe-ff3c-7d16-6c3b-f814d5e82273@xs4all.nl>
 <2820421.5RQSEPL7dH@even-i700> <19AECC58-1569-4FD6-B5A3-B9E998399AD6@sdfe.dk>
 <0846a40e-54ff-b59c-096b-eadecb62729b@geomatys.com>
 <012ca336-a53b-13ff-c67a-1bea0039d950@xs4all.nl>
 <54268c90-91b8-0a45-80ef-66a371b28bb7@geomatys.com>
 <b5cf21de-b933-4c6e-71e2-1dbc0436ff16@xs4all.nl>
 <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>
Message-ID: <ee5b873814974d428558d7ec0e7371cf@sdfe.dk>

Bas,

That's not good! Thanks for looking into this. We will have to find a solution
to this.

> He also strongly urged us to
> separate code and data, i.e. don't include the SQL files in the source
> tree nor build the database as part of the build process.

I think this is easier said than done. Even, is this a realistic option?

> Alternatively we need to convince IOPG to dual license the EPSG data
under and DFSG compatible license.

This is obviously the best option. As far as I am aware all attempts so far
has been rejected by the IOGP. We can always try again, this time including
a thorough analysis of the effects of PROJ not being able to provide access
to the EPSG registry in a simple fashion. I suspect that PROJ indirectly is by
far one of the biggest consumers of the registry. Maybe that can provide
a bit of leverage?

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Sebastiaan Couwenberg
Sent: 24. januar 2020 10:39
To: proj at lists.osgeo.org
Subject: Re: [PROJ] OSGeo incubation status

On 9/10/19 1:50 PM, Sebastiaan Couwenberg wrote:
> On 9/10/19 1:16 PM, Martin Desruisseaux wrote:
>> On EPSG, can we really said that the data fail under MIT license because
>> we do not modify it? The EPSG terms of use said:
>>
>>> You are obliged to inform anyone to whom you provide the EPSG
>>> Facilities of these Terms of Use.
>> So we need to inform users that they can not modify those data without
>> changing the EPSG name. And also that they can not extract the data and
>> sell them alone (without the added value of PROJ or other software).
>> Those conditions are not MIT terms.
> 
> Unless PROJ already modifies the data and doesn't attribute it to the
> EPSG dataset. There is no epsg init file any more, there is proj.db now.
> 
> Not being a lawyer I cannot provide an authoritative answer, only my
> interpretation.
> 
>> The Apache Software Foundation legal team has debated about the
>> permission to include EPSG data in Apache software [3], and our
>> conclusion was that we can not provide them directly. We do that
>> indirectly by providing the data in a "non-free" package and require an
>> explicit action from users (which we try to make as simple as possible)
>> to get them.
> 
> I hope we can prevent this situation with proj, as we'll revert back to
> the one with libgeotiff-epsg which few users installed despite needing it.
> 
> In the worst case scenario proj moves to non-free and everything that
> depends on it to contrib, making them not part of Debian and loose QA
> coverage, autobuilding and the like. This would be very harmful to users.
> 
> I would stick to the working theory until IOGP complains and proves us
> otherwise.

There was an event about the new Dutch grids yesterday, there I spoke
with Roel Nicolai who has been involved with EPSG since the beginning
and drafted the EPSG TOU. He told me that my interpretation of the terms
is incorrect, the MIT license cannot be applied to the SQL files derived
from the EPSG data as done currently. He also strongly urged us to
separate code and data, i.e. don't include the SQL files in the source
tree nor build the database as part of the build process.

To resolve this issue without making PROJ non-free with the adverse
ripple effect on all its dependent projects, we should implement a
process similar to Apache SIS.

Alternatively we need to convince IOPG to dual license the EPSG data
under and DFSG compatible license.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From martin.desruisseaux at geomatys.com  Fri Jan 24 04:05:10 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Fri, 24 Jan 2020 13:05:10 +0100
Subject: [PROJ] OSGeo incubation status
In-Reply-To: <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>
References: <AA1B1545-6662-4F5B-9861-2A8707F290F4@sdfe.dk>
 <7E0BC148-5653-4B85-AFA2-4071FC88890F@sdfe.dk>
 <6d7f70fe-ff3c-7d16-6c3b-f814d5e82273@xs4all.nl>
 <2820421.5RQSEPL7dH@even-i700> <19AECC58-1569-4FD6-B5A3-B9E998399AD6@sdfe.dk>
 <0846a40e-54ff-b59c-096b-eadecb62729b@geomatys.com>
 <012ca336-a53b-13ff-c67a-1bea0039d950@xs4all.nl>
 <54268c90-91b8-0a45-80ef-66a371b28bb7@geomatys.com>
 <b5cf21de-b933-4c6e-71e2-1dbc0436ff16@xs4all.nl>
 <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>
Message-ID: <cfc95f96-14a7-fc2f-0a65-b262fff2def5@geomatys.com>

Thanks Sebastiaan for looking at it! I'm not a lawyer neither, but my 
understanding is that what PROJ is doing is re-licensing (not to be 
confused with sub-licensing), which is disallowed by almost every 
licenses I'm aware of, even the MIT license. Repackaging the data in a 
different format does not erase the creator copyright, in the same way 
that re-encoding a movie in a different video codec does not erase the 
movie creator rights. However the situation is not so problematic: it 
does not necessarily force users to do an extra step, it depends on the 
policy chosen by the project using PROJ (more on it below).

PROJ 6 and later are already complying with most EPSG conditions: it 
does not modify the data, new data (e.g. IAU data) are not attributed to 
EPSG. The main remaining condition is to inform users about EPSG terms 
of use, and not give them the impression that they are under MIT 
license. The approach can be as below:

1) Put EPSG data in a separated directory or repository, with a clear 
LICENSE file containing a copy of EPSG terms of use and a link to the 
http://www.epsg.org/TermsOfUse.aspx page.

2) Make the EPSG database optional (even if obviously strongly 
recommended) for PROJ working.

3) Projects using PROJ have a choice:

  * They can bundle the EPSG database directly in their software if it
    is okay for them to inform users about EPSG terms of use when they
    download the binary. Many projects show the license on the web page
    where users download the software, and it is not uncommon that there
    is more than one license. In my understanding if that page said
    clearly the licenses of all material in the software (including EPSG
    terms of use), it is okay.
  * Alternatively, some projects refuse to add any licenses stricter
    than their own license. This is the case of Apache foundation, where
    even LGPL code are not accepted in Apache projects. Apache projects
    like NetBeans workaround this problem with a popup windows shown the
    first time that the application is started, which offer to download
    the material under non-Apache license. It is only one click for the
    user, and is required only for projects who don't want to bundle
    EPSG terms of use in their software from the root.

So for example QGIS could offer two downloads: a 100% free version where 
downloading EPSG database would be a separated step, and maybe (if the 
foundation driving the QGIS project is fine with that) an alternative 
download with EPSG database bundled in it, but with also the EPSG terms 
of use "bundled" with the license of that version.

Having material under a stricter license is not uncommon in open source 
project. Apache projects are facing this situation many times and 
developed different ways to address that, Linux distributions have 
"non-free" repository (e.g. for proprietary video drivers), etc. 
Furthermore putting the data in a separated directory is desirable even 
if we didn't had licensing issue because the main source of CRS 
definitions is currently EPSG, but ISO is also working on that. So in 
the future we may have 2 sources of definitions, probably with different 
tradeoff to chose.

     Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200124/8b63011a/attachment-0001.html>

From martin.desruisseaux at geomatys.com  Fri Jan 24 04:18:50 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Fri, 24 Jan 2020 13:18:50 +0100
Subject: [PROJ] OSGeo incubation status
In-Reply-To: <ee5b873814974d428558d7ec0e7371cf@sdfe.dk>
References: <AA1B1545-6662-4F5B-9861-2A8707F290F4@sdfe.dk>
 <7E0BC148-5653-4B85-AFA2-4071FC88890F@sdfe.dk>
 <6d7f70fe-ff3c-7d16-6c3b-f814d5e82273@xs4all.nl>
 <2820421.5RQSEPL7dH@even-i700> <19AECC58-1569-4FD6-B5A3-B9E998399AD6@sdfe.dk>
 <0846a40e-54ff-b59c-096b-eadecb62729b@geomatys.com>
 <012ca336-a53b-13ff-c67a-1bea0039d950@xs4all.nl>
 <54268c90-91b8-0a45-80ef-66a371b28bb7@geomatys.com>
 <b5cf21de-b933-4c6e-71e2-1dbc0436ff16@xs4all.nl>
 <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>
 <ee5b873814974d428558d7ec0e7371cf@sdfe.dk>
Message-ID: <18e8ae27-b80b-b5f8-1d71-8712d2c55143@geomatys.com>

Le 24/01/2020 à 12:02, Kristian Evers a écrit :

>> Alternatively we need to convince IOPG to dual license the EPSG data 
>> under and DFSG compatible license.
>>
> This is obviously the best option. As far as I am aware all attempts 
> so far has been rejected by the IOGP. We can always try again, this 
> time including a thorough analysis of the effects of PROJ not being 
> able to provide access to the EPSG registry in a simple fashion. I 
> suspect that PROJ indirectly is by far one of the biggest consumers of 
> the registry. Maybe that can provide a bit of leverage?
>
I'm not sure that would be the best option. We are talking about 
something more like "open standards" here, which is not the same than 
"open source". There is some definition attempts about "open standards" 
on Wikipedia and elsewhere. The concept is quite young compared to "open 
source" so it is not yet well known. In essence "open standards" are 
very similar to "open source" except for the right to modify: "open 
standards" require modifications to be controlled by a standardization 
body, provided that the standardization process is free, 
non-discriminatory, etc. I think there is legitimate reasons for 
restriction about modifications; a standard is not standard anymore if 
anyone is free to modify it as they want. Hoping that projects will 
behave as good citizens, or that non-compliant projects will be at 
disadvantage compared to compliant projects, is not sufficient; it does 
not happen like that in practice (PROJ 4 itself was an example).

About consumers of EPSG database, I think that ESRI is also a large 
consumer. GeoTools/GeoServer have many users too. Finally Apache SIS has 
between 100,000 and 200,000 downloads per month from Maven Central (not 
counting Apache mirrors around the world) - but I suspect that most of 
those downloads are indirect downloads as dependency of more well known 
project like Apache Tika.

     Regards,

         Martin



From even.rouault at spatialys.com  Fri Jan 24 04:20:26 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 Jan 2020 13:20:26 +0100
Subject: [PROJ] Motion: adopt RFC 5
Message-ID: <2682959.7LonEYz4WA@even-i700>

Hi,

I move to adopt RFC 5 "Adopt GeoTIFF-based grids for grids delivered with 
PROJ"
https://github.com/OSGeo/PROJ/pull/1868

Starting with my +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Fri Jan 24 04:46:50 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 24 Jan 2020 13:46:50 +0100
Subject: [PROJ] OSGeo incubation status
In-Reply-To: <18e8ae27-b80b-b5f8-1d71-8712d2c55143@geomatys.com>
References: <AA1B1545-6662-4F5B-9861-2A8707F290F4@sdfe.dk>
 <7E0BC148-5653-4B85-AFA2-4071FC88890F@sdfe.dk>
 <6d7f70fe-ff3c-7d16-6c3b-f814d5e82273@xs4all.nl>
 <2820421.5RQSEPL7dH@even-i700> <19AECC58-1569-4FD6-B5A3-B9E998399AD6@sdfe.dk>
 <0846a40e-54ff-b59c-096b-eadecb62729b@geomatys.com>
 <012ca336-a53b-13ff-c67a-1bea0039d950@xs4all.nl>
 <54268c90-91b8-0a45-80ef-66a371b28bb7@geomatys.com>
 <b5cf21de-b933-4c6e-71e2-1dbc0436ff16@xs4all.nl>
 <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>
 <ee5b873814974d428558d7ec0e7371cf@sdfe.dk>
 <18e8ae27-b80b-b5f8-1d71-8712d2c55143@geomatys.com>
Message-ID: <73edc977-8de0-fcf3-5f0f-5c368783dc8c@xs4all.nl>

On 1/24/20 1:18 PM, Martin Desruisseaux wrote:
> Le 24/01/2020 à 12:02, Kristian Evers a écrit :
> 
>>> Alternatively we need to convince IOPG to dual license the EPSG data
>>> under and DFSG compatible license.
>>>
>> This is obviously the best option. As far as I am aware all attempts
>> so far has been rejected by the IOGP. We can always try again, this
>> time including a thorough analysis of the effects of PROJ not being
>> able to provide access to the EPSG registry in a simple fashion. I
>> suspect that PROJ indirectly is by far one of the biggest consumers of
>> the registry. Maybe that can provide a bit of leverage?
>>
> I'm not sure that would be the best option. We are talking about
> something more like "open standards" here, which is not the same than
> "open source". There is some definition attempts about "open standards"
> on Wikipedia and elsewhere. The concept is quite young compared to "open
> source" so it is not yet well known. In essence "open standards" are
> very similar to "open source" except for the right to modify: "open
> standards" require modifications to be controlled by a standardization
> body, provided that the standardization process is free,
> non-discriminatory, etc. I think there is legitimate reasons for
> restriction about modifications; a standard is not standard anymore if
> anyone is free to modify it as they want. Hoping that projects will
> behave as good citizens, or that non-compliant projects will be at
> disadvantage compared to compliant projects, is not sufficient; it does
> not happen like that in practice (PROJ 4 itself was an example).

Standards are notorious as well, not have the right to make
modifications makes them non-free as well. We have this issue with OGC
Document License works for example.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kreve at sdfe.dk  Fri Jan 24 05:20:54 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 24 Jan 2020 13:20:54 +0000
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <2682959.7LonEYz4WA@even-i700>
References: <2682959.7LonEYz4WA@even-i700>
Message-ID: <833a2760aa204881942e9e694aa6ebcd@sdfe.dk>

+1

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 24. januar 2020 13:20
To: proj at lists.osgeo.org
Subject: [PROJ] Motion: adopt RFC 5

Hi,

I move to adopt RFC 5 "Adopt GeoTIFF-based grids for grids delivered with 
PROJ"
https://github.com/OSGeo/PROJ/pull/1868

Starting with my +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From martin.desruisseaux at geomatys.com  Fri Jan 24 05:35:58 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Fri, 24 Jan 2020 14:35:58 +0100
Subject: [PROJ] OSGeo incubation status
In-Reply-To: <73edc977-8de0-fcf3-5f0f-5c368783dc8c@xs4all.nl>
References: <AA1B1545-6662-4F5B-9861-2A8707F290F4@sdfe.dk>
 <7E0BC148-5653-4B85-AFA2-4071FC88890F@sdfe.dk>
 <6d7f70fe-ff3c-7d16-6c3b-f814d5e82273@xs4all.nl>
 <2820421.5RQSEPL7dH@even-i700> <19AECC58-1569-4FD6-B5A3-B9E998399AD6@sdfe.dk>
 <0846a40e-54ff-b59c-096b-eadecb62729b@geomatys.com>
 <012ca336-a53b-13ff-c67a-1bea0039d950@xs4all.nl>
 <54268c90-91b8-0a45-80ef-66a371b28bb7@geomatys.com>
 <b5cf21de-b933-4c6e-71e2-1dbc0436ff16@xs4all.nl>
 <aa905dd7-bca2-0b11-589b-1ea8e0b685a9@xs4all.nl>
 <ee5b873814974d428558d7ec0e7371cf@sdfe.dk>
 <18e8ae27-b80b-b5f8-1d71-8712d2c55143@geomatys.com>
 <73edc977-8de0-fcf3-5f0f-5c368783dc8c@xs4all.nl>
Message-ID: <0add2d2c-ba64-9d3a-2f3c-e98a02518f7c@geomatys.com>

Le 24/01/2020 à 13:46, Sebastiaan Couwenberg a écrit :

> Standards are notorious as well, not have the right to make 
> modifications makes them non-free as well. We have this issue with OGC 
> Document License works for example.
>
Right OGC document license is another topic to think about. A short 
discussion can be viewed on 
https://github.com/spdx/license-list-XML/issues/845 (OGC directory 
participated briefly). Actually that license does not forbid 
modifications, but it has a condition saying "if you modify it, then you 
must change the namespace". It is a little bit similar to an Apache 
license condition meaning "if you modify that software, then you can not 
call it "Apache" anymore - use any other name at your choice". Except 
that OGC document license goes one step further by requiring 
programmatic namespace change, not only product name change. If the 
files are XML, this means changing the XML namespace. If the files are 
Java interfaces, this means changing the Java module/package names. If 
the files were C++ headers, I guess it would mean changing the names 
that we specify in "using" statements. The OGC document license said 
that if the developer do such name change, then those files fall 
automatically under OGC software license, which is BSD-like.

OGC welcome feedback about OGC license issues, provided that we keep the 
goal of protecting standard integrity. I plan to start a discussion with 
Apache legal team on this topic later this year, to explore how the 
naming condition of OGC document license is acceptable (or not) to them, 
and bring those feedback to OGC. If OSGeo has feedback to provide too 
that would be good.

     Regards,

         Martin



From howard at hobu.co  Fri Jan 24 08:04:47 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 24 Jan 2020 10:04:47 -0600
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <833a2760aa204881942e9e694aa6ebcd@sdfe.dk>
References: <2682959.7LonEYz4WA@even-i700>
 <833a2760aa204881942e9e694aa6ebcd@sdfe.dk>
Message-ID: <7A8D069B-F2BD-4D31-A2D5-D63EF459E1F1@hobu.co>

+1


> On Jan 24, 2020, at 7:20 AM, Kristian Evers <kreve at sdfe.dk> wrote:
> 
> +1
> 
> /Kristian
> 
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
> Sent: 24. januar 2020 13:20
> To: proj at lists.osgeo.org
> Subject: [PROJ] Motion: adopt RFC 5
> 
> Hi,
> 
> I move to adopt RFC 5 "Adopt GeoTIFF-based grids for grids delivered with 
> PROJ"
> https://github.com/OSGeo/PROJ/pull/1868
> 
> Starting with my +1
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From knudsen.thomas at gmail.com  Fri Jan 24 08:07:05 2020
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Fri, 24 Jan 2020 17:07:05 +0100
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <2682959.7LonEYz4WA@even-i700>
References: <2682959.7LonEYz4WA@even-i700>
Message-ID: <CAH0YoEOHmx+652MLRRwEMxjmxKRznrwtABjgtXNGv+Y3=vQvtQ@mail.gmail.com>

+1

fre. 24. jan. 2020 13.20 skrev Even Rouault <even.rouault at spatialys.com>:

> Hi,
>
> I move to adopt RFC 5 "Adopt GeoTIFF-based grids for grids delivered with
> PROJ"
> https://github.com/OSGeo/PROJ/pull/1868
>
> Starting with my +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200124/5542d9cd/attachment-0001.html>

From schwehr at gmail.com  Fri Jan 24 08:08:16 2020
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 24 Jan 2020 08:08:16 -0800
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <2682959.7LonEYz4WA@even-i700>
References: <2682959.7LonEYz4WA@even-i700>
Message-ID: <CACmBxytsWTpaB5=gFbNkTL=6SDbgzOa_VnraJh+x=QjdWPxkxg@mail.gmail.com>

+1 KurtS

On Fri, Jan 24, 2020 at 4:20 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> I move to adopt RFC 5 "Adopt GeoTIFF-based grids for grids delivered with
> PROJ"
> https://github.com/OSGeo/PROJ/pull/1868
>
> Starting with my +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200124/3c4b8efe/attachment.html>

From even.rouault at spatialys.com  Tue Jan 28 05:48:40 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 14:48:40 +0100
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <2682959.7LonEYz4WA@even-i700>
References: <2682959.7LonEYz4WA@even-i700>
Message-ID: <1885246.ueUNhuAiON@even-i700>

Hi,

> I move to adopt RFC 5 "Adopt GeoTIFF-based grids for grids delivered with
> PROJ"
> https://github.com/OSGeo/PROJ/pull/1868
> 

I declare this motion passed with +1 from PSC members KristianE, HowardB, 
ThomasK, KurtS and me

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Jan 29 04:04:48 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Jan 2020 13:04:48 +0100
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <1885246.ueUNhuAiON@even-i700>
References: <2682959.7LonEYz4WA@even-i700> <1885246.ueUNhuAiON@even-i700>
Message-ID: <17369961.Jjd1lhdbEK@even-i700>

Hi,

RFC 5 implementation has now been merged into PROJ master, and in the 
https://github.com/OSGeo/PROJ-data repository (was known transiently as proj-
datumgrid-geotiff), which is now the new home for grids & similar datasets.

https://github.com/OSGeo/PROJ-data/tree/master/grid_tools contains the tools & 
documentation to create Geodetic TIFF grids (GTG)

And https://github.com/OSGeo/PROJ-data/blob/master/CONTRIBUTING.md contains 
the workflow to follow for adding new data.

For now, https://cdn.proj.org/ contains both the initial grid names (like 
egm96_15.tif), and the new ones following RFC 5 naming scheme 
(us_nga_egm96_15.tif)
I'll remove next week the old files, so for the initial adopters of RFC 4, 
please update to latest master now, so proj.db points to the new names.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Wed Jan 29 04:18:42 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 29 Jan 2020 12:18:42 +0000
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <17369961.Jjd1lhdbEK@even-i700>
References: <2682959.7LonEYz4WA@even-i700> <1885246.ueUNhuAiON@even-i700>
 <17369961.Jjd1lhdbEK@even-i700>
Message-ID: <96bff53960ef4144b586c2058f4325ac@sdfe.dk>

Even,

That is awesome. What is the procedure from now with regards to
releasing PROJ-data packages? The RFC says that we will be producing
a proj-datumgrid-geotiff-1.0 package (I guess we will call that proj-data-1.0?)
but how is that archive produced? Similar to the old grid packages, e.g.

mkdir build
cd build
cmake ..
make dist

Would be nice to have a HOWTORELEASE file to capture this knowledge.

Does the release procedure also require as CDN sync or is that done when
new files are registered?

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 29. januar 2020 13:05
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Motion: adopt RFC 5

Hi,

RFC 5 implementation has now been merged into PROJ master, and in the 
https://github.com/OSGeo/PROJ-data repository (was known transiently as proj-
datumgrid-geotiff), which is now the new home for grids & similar datasets.

https://github.com/OSGeo/PROJ-data/tree/master/grid_tools contains the tools & 
documentation to create Geodetic TIFF grids (GTG)

And https://github.com/OSGeo/PROJ-data/blob/master/CONTRIBUTING.md contains 
the workflow to follow for adding new data.

For now, https://cdn.proj.org/ contains both the initial grid names (like 
egm96_15.tif), and the new ones following RFC 5 naming scheme 
(us_nga_egm96_15.tif)
I'll remove next week the old files, so for the initial adopters of RFC 4, 
please update to latest master now, so proj.db points to the new names.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From even.rouault at spatialys.com  Wed Jan 29 05:11:02 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Jan 2020 14:11:02 +0100
Subject: [PROJ] Motion: adopt RFC 5
In-Reply-To: <96bff53960ef4144b586c2058f4325ac@sdfe.dk>
References: <2682959.7LonEYz4WA@even-i700> <17369961.Jjd1lhdbEK@even-i700>
 <96bff53960ef4144b586c2058f4325ac@sdfe.dk>
Message-ID: <2245598.z4Disd2AMG@even-i700>

Kristian,

>(I guess we will call that proj-data-1.0?)

Just changed to that

> but how is that archive produced? Similar to the old grid
> packages, e.g. 
> mkdir build
> cd build
> cmake ..
> make dist

You guessed correctly ! 

> Would be nice to have a HOWTORELEASE file to capture this knowledge.

Sure, proposed one in https://github.com/OSGeo/PROJ-data/pull/8

> 
> Does the release procedure also require as CDN sync or is that done when
> new files are registered?

I've added in the above HOWTO-RELEASE a step for that. But I'd expect the 
sync_to_cdn.sh script to be run more regularly, once a new grid has been 
merged into PROJ-data & registered in proj.db, so that users tracking PROJ 
master & using network capabilities can immediately use it.

We could probably run it automatically through Travis or a GitHub action once 
a PR is merged, but for now, I think it's probably best if you keep manual 
control on when we resync the CDN. This allows to do manual testing after 
merging a PR & before resynchronizing the CDN.

One thing I didn't mention is that pull requests submitted to PROJ-data run a 
few sanity checks by
https://github.com/OSGeo/PROJ-data/blob/master/travis/check_new_grids.sh (run 
by .travis.yml)
New or modified TIFF grids are first submitted to gdalinfo, so one can see the 
output in the Travis log
And the check_gtiff_grid.py script is run on them. If errors are found, then 
the Travis build fail. Warnings or information are displayed in the log, but 
do not fail the build.

See https://travis-ci.org/rouault/PROJ-data-tmp/builds/643019546 for a 
simulation I did with a test repository

Bottom line is to look at the Travis logs to have a first outlook of what is 
being submitted.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mwtoews at gmail.com  Thu Jan 30 13:14:59 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Fri, 31 Jan 2020 10:14:59 +1300
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
Message-ID: <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>

Any further discussion? Is a bump to CMake 3.9 OK for everyone?

Note there was recently a bit of discussion on a GitHub ticket:
https://github.com/OSGeo/PROJ/issues/1858#issuecomment-576718862

On Tue, 14 Jan 2020 at 09:49, Mike Taves <mwtoews at gmail.com> wrote:
>
> Hi all,
>
> As was suggested in https://github.com/OSGeo/PROJ/pull/1542 this is a
> discussion to bump the minimum CMake version for PROJ 7.0
>
> Based on the default versions of CMake [1], I can see that CMake 3.9
> is installed on most development systems, including Travis CI, so this
> would be an ideal minimum.
>
> CMake 3.9.0 was released [2] July 2017, so is at least 2 years old for
> PROJ RFC 3's requirement.
>
> One feature from this version that I plan to implement is
> CheckIPOSupported [3] module. GoogleTest [4] was added for this
> release, however I don't think it would provide any advantage.
>
> Any other thoughts or suggestions on other CMake versions?
>
> Cheers,
> Mike
>
> [1] https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions
> [2] https://blog.kitware.com/cmake-3-9-0-available-for-download/
> [3] https://cmake.org/cmake/help/v3.9/module/CheckIPOSupported.html
> [4] https://cmake.org/cmake/help/v3.9/module/GoogleTest.html

From kreve at sdfe.dk  Fri Jan 31 00:00:18 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 31 Jan 2020 08:00:18 +0000
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
Message-ID: <c72079d31ad0418b886044110606b640@sdfe.dk>

I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to approve this,
so let's have a motion on the subject. 

I'll start with my +1

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Mike Taves
Sent: 30. januar 2020 22:15
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Bump CMake version for PROJ 7.0

Any further discussion? Is a bump to CMake 3.9 OK for everyone?

Note there was recently a bit of discussion on a GitHub ticket:
https://github.com/OSGeo/PROJ/issues/1858#issuecomment-576718862

On Tue, 14 Jan 2020 at 09:49, Mike Taves <mwtoews at gmail.com> wrote:
>
> Hi all,
>
> As was suggested in https://github.com/OSGeo/PROJ/pull/1542 this is a
> discussion to bump the minimum CMake version for PROJ 7.0
>
> Based on the default versions of CMake [1], I can see that CMake 3.9
> is installed on most development systems, including Travis CI, so this
> would be an ideal minimum.
>
> CMake 3.9.0 was released [2] July 2017, so is at least 2 years old for
> PROJ RFC 3's requirement.
>
> One feature from this version that I plan to implement is
> CheckIPOSupported [3] module. GoogleTest [4] was added for this
> release, however I don't think it would provide any advantage.
>
> Any other thoughts or suggestions on other CMake versions?
>
> Cheers,
> Mike
>
> [1] https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions
> [2] https://blog.kitware.com/cmake-3-9-0-available-for-download/
> [3] https://cmake.org/cmake/help/v3.9/module/CheckIPOSupported.html
> [4] https://cmake.org/cmake/help/v3.9/module/GoogleTest.html
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From knudsen.thomas at gmail.com  Fri Jan 31 00:02:59 2020
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Fri, 31 Jan 2020 09:02:59 +0100
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <c72079d31ad0418b886044110606b640@sdfe.dk>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk>
Message-ID: <CAH0YoEOoOu+NP1+7kOTY1hS-t6Q==ALGPjUG3W2cCwCcpT5wqA@mail.gmail.com>

+1

fre. 31. jan. 2020 09.00 skrev Kristian Evers <kreve at sdfe.dk>:

> I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to approve
> this,
> so let's have a motion on the subject.
>
> I'll start with my +1
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Mike Taves
> Sent: 30. januar 2020 22:15
> To: proj at lists.osgeo.org
> Subject: Re: [PROJ] Bump CMake version for PROJ 7.0
>
> Any further discussion? Is a bump to CMake 3.9 OK for everyone?
>
> Note there was recently a bit of discussion on a GitHub ticket:
> https://github.com/OSGeo/PROJ/issues/1858#issuecomment-576718862
>
> On Tue, 14 Jan 2020 at 09:49, Mike Taves <mwtoews at gmail.com> wrote:
> >
> > Hi all,
> >
> > As was suggested in https://github.com/OSGeo/PROJ/pull/1542 this is a
> > discussion to bump the minimum CMake version for PROJ 7.0
> >
> > Based on the default versions of CMake [1], I can see that CMake 3.9
> > is installed on most development systems, including Travis CI, so this
> > would be an ideal minimum.
> >
> > CMake 3.9.0 was released [2] July 2017, so is at least 2 years old for
> > PROJ RFC 3's requirement.
> >
> > One feature from this version that I plan to implement is
> > CheckIPOSupported [3] module. GoogleTest [4] was added for this
> > release, however I don't think it would provide any advantage.
> >
> > Any other thoughts or suggestions on other CMake versions?
> >
> > Cheers,
> > Mike
> >
> > [1]
> https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions
> > [2] https://blog.kitware.com/cmake-3-9-0-available-for-download/
> > [3] https://cmake.org/cmake/help/v3.9/module/CheckIPOSupported.html
> > [4] https://cmake.org/cmake/help/v3.9/module/GoogleTest.html
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200131/01d866b5/attachment.html>

From even.rouault at spatialys.com  Fri Jan 31 01:01:56 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 31 Jan 2020 10:01:56 +0100
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <c72079d31ad0418b886044110606b640@sdfe.dk>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk>
Message-ID: <35923608.hR2LepVCPz@even-i700>

On vendredi 31 janvier 2020 08:00:18 CET Kristian Evers wrote:
> I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to approve
> this,
 so let's have a motion on the subject.
> 
> I'll start with my +1

+1

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Fri Jan 31 04:27:35 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 31 Jan 2020 08:27:35 -0400
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <c72079d31ad0418b886044110606b640@sdfe.dk>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk>
Message-ID: <5dabcacb-e5d7-7b02-39ff-9bf37bdb2c6c@gatewaygeomatics.com>

On 2020-01-31 4:00 a.m., Kristian Evers wrote:
> I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to approve this,
> so let's have a motion on the subject.
> 
> I'll start with my +1


+1 jeff






From charles.karney at sri.com  Fri Jan 31 06:56:03 2020
From: charles.karney at sri.com (Charles Karney)
Date: Fri, 31 Jan 2020 14:56:03 +0000
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <5dabcacb-e5d7-7b02-39ff-9bf37bdb2c6c@gatewaygeomatics.com>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk>
 <5dabcacb-e5d7-7b02-39ff-9bf37bdb2c6c@gatewaygeomatics.com>
Message-ID: <11c5f749-7af6-3847-9854-d8b12c1620d8@sri.com>

+1 Charles

On 2020-01-31 07:27, Jeff McKenna wrote:
> On 2020-01-31 4:00 a.m., Kristian Evers wrote:
>> I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to 
>> approve this,
>> so let's have a motion on the subject.
>>
>> I'll start with my +1
> 
> 
> +1 jeff
> 

From howard at hobu.co  Fri Jan 31 07:15:06 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 31 Jan 2020 09:15:06 -0600
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <35923608.hR2LepVCPz@even-i700>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk> <35923608.hR2LepVCPz@even-i700>
Message-ID: <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>



> On Jan 31, 2020, at 3:01 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On vendredi 31 janvier 2020 08:00:18 CET Kristian Evers wrote:
>> I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to approve
>> this,
> so let's have a motion on the subject.
>> 
>> I'll start with my +1
> 
> +1

+1

I wonder if we could increase the minimum CMake requirement significantly further due to the fact that PROJ supports both CMake and autoconf for now. Do the packagers have an opinion on the topic? 

Howard


From even.rouault at spatialys.com  Fri Jan 31 07:25:37 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 31 Jan 2020 16:25:37 +0100
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <35923608.hR2LepVCPz@even-i700>
 <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
Message-ID: <3925830.qBmTGDVM1M@even-i700>

On vendredi 31 janvier 2020 09:15:06 CET Howard Butler wrote:
> > On Jan 31, 2020, at 3:01 AM, Even Rouault <even.rouault at spatialys.com>
> > wrote:> 
> > On vendredi 31 janvier 2020 08:00:18 CET Kristian Evers wrote:
> >> I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to approve
> >> this,
> > 
> > so let's have a motion on the subject.
> > 
> >> I'll start with my +1
> > 
> > +1
> 
> +1
> 
> I wonder if we could increase the minimum CMake requirement significantly
> further due to the fact that PROJ supports both CMake and autoconf for now.
> Do the packagers have an opinion on the topic?

Mike mentioned in his inital message
"""
Based on the default versions of CMake [1], I can see that CMake 3.9
is installed on most development systems, including Travis CI, so this
would be an ideal minimum.
"""

but looking now at [1]
https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions

it seems to have been updated very recently to mention 3.12.4 and looking at 
actual Travis logs at
https://api.travis-ci.com/v3/job/281868129/log.txt

I can see that 3.12.4 is indeed installed

So from a pure CI point of view, that could be the version we target.

If there are backports PPA for Xenial with more recent cmake, that would also 
be fine to go further.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Fri Jan 31 07:28:02 2020
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 31 Jan 2020 10:28:02 -0500
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co> (Howard Butler's
 message of "Fri, 31 Jan 2020 09:15:06 -0600")
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk>
 <35923608.hR2LepVCPz@even-i700>
 <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
Message-ID: <rmiy2tny7b1.fsf@s1.lexort.com>

Howard Butler <howard at hobu.co> writes:

> +1
>
> I wonder if we could increase the minimum CMake requirement
> significantly further due to the fact that PROJ supports both CMake
> and autoconf for now. Do the packagers have an opinion on the topic?

I was going to comment that a proposal with no analysis and no rationale
was a little odd...

My opinion is that it's not a good thing to increase the required
version of dependencies for no good reason, unless it is truly free.
So I would look at the places one might want to build proj and see how
old cmake might be.

>From the pkgsrc point of view, we have 3.16.1 in our latest quarterly
release, and I suspect some kind of Ubuntu LTS or Centos LTS will be the
long pole in the tent.   So if there is a shared notion  that some
particular version is the oldest that is likely to be encountered -- on
a platform which can otherwise buidl proj -- then moving to that seems
reasonable, just for housekeeping,


From howard at hobu.co  Fri Jan 31 07:37:46 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 31 Jan 2020 09:37:46 -0600
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <rmiy2tny7b1.fsf@s1.lexort.com>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk> <35923608.hR2LepVCPz@even-i700>
 <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
 <rmiy2tny7b1.fsf@s1.lexort.com>
Message-ID: <018AD359-C406-4447-8099-AA1739D6F89C@hobu.co>



> On Jan 31, 2020, at 9:28 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> Howard Butler <howard at hobu.co> writes:
> 
>> +1
>> 
>> I wonder if we could increase the minimum CMake requirement
>> significantly further due to the fact that PROJ supports both CMake
>> and autoconf for now. Do the packagers have an opinion on the topic?
> 
> I was going to comment that a proposal with no analysis and no rationale
> was a little odd...

https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions is a good breakdown. 


> 
> My opinion is that it's not a good thing to increase the required
> version of dependencies for no good reason, unless it is truly free.
> So I would look at the places one might want to build proj and see how
> old cmake might be.

The cost of old cmake configuration is a consideration too. PDAL, for example, was one of the first geospatial projects to be CMake-only, and our configuration has a lot of cruft as CMake continued to rapidly evolve in fits and starts through 3.0 – 3.10. Packagers have complained about missing features, misbehavior, and frustration, especially for older configurations. It would be best for PROJ to not proliferate old configuration in support of old CMake if it can be avoided.

Compatibility with no disruption of how autconf was working was the desire expressed previously. Since PROJ is still maintaining its autconf configuration, I thought the minimum CMake version could be significantly bumped. Are the packagers using CMake or autoconf? In Conda Forge[1], for example, we are using both – autoconf for linux/osx and cmake for win64 

[1] https://github.com/conda-forge/proj.4-feedstock/tree/master/recipe

Howard

From gdt at lexort.com  Fri Jan 31 09:03:16 2020
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 31 Jan 2020 12:03:16 -0500
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <018AD359-C406-4447-8099-AA1739D6F89C@hobu.co> (Howard Butler's
 message of "Fri, 31 Jan 2020 09:37:46 -0600")
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk>
 <35923608.hR2LepVCPz@even-i700>
 <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
 <rmiy2tny7b1.fsf@s1.lexort.com>
 <018AD359-C406-4447-8099-AA1739D6F89C@hobu.co>
Message-ID: <rmitv4by2wb.fsf@s1.lexort.com>

Howard Butler <howard at hobu.co> writes:

> https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions is a good breakdown. 

That leaves out pkgsrc, FreeBSD, OpenBSD -- but those all tend to be
pretty up to date.

Reading the list, it seems that the breakpoints are (leaving out a few
things that are so old that people in general won't be able to compile
modern things):

3.10.2		Ubuntu 18.04 (which is not really that long ago)
3.11.4          CentOS 8
3.12.{1,4}	lots of things

Interestingly, 3.10.2 was only released in Jannuary of 2018, barely two
years ago.

>> My opinion is that it's not a good thing to increase the required
>> version of dependencies for no good reason, unless it is truly free.
>> So I would look at the places one might want to build proj and see how
>> old cmake might be.
>
> The cost of old cmake configuration is a consideration too. PDAL, for
> example, was one of the first geospatial projects to be CMake-only,
> and our configuration has a lot of cruft as CMake continued to rapidly
> evolve in fits and starts through 3.0 – 3.10. Packagers have
> complained about missing features, misbehavior, and frustration,
> especially for older configurations. It would be best for PROJ to not
> proliferate old configuration in support of old CMake if it can be
> avoided.

Agreed - I merely meant that there was a cost to cutting off old
versions, and that should be balanced with the gains from cleanup.

> Compatibility with no disruption of how autconf was working was the
> desire expressed previously. Since PROJ is still maintaining its
> autconf configuration, I thought the minimum CMake version could be
> significantly bumped. Are the packagers using CMake or autoconf? In
> Conda Forge[1], for example, we are using both – autoconf for
> linux/osx and cmake for win64

I guess if cmake is only for windows, then that's an entirely different
question.

pkgsrc uses autoconf.  That's partly due to bias on my part, as in the
past I found cmake to be a source of difficulty even getting cmake
built.

So would you want to move to 3.10.2 as the requirement?


From mwtoews at gmail.com  Fri Jan 31 15:20:16 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Sat, 1 Feb 2020 12:20:16 +1300
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <3925830.qBmTGDVM1M@even-i700>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <35923608.hR2LepVCPz@even-i700> <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
 <3925830.qBmTGDVM1M@even-i700>
Message-ID: <CAM2FmMp8TGvwL3ZkRSLUcsfHxBS4B3O022s-8q6GLe3iWQny2w@mail.gmail.com>

On Sat, 1 Feb 2020 at 04:25, Even Rouault <even.rouault at spatialys.com> wrote:
> Mike mentioned in his inital message
> """
> Based on the default versions of CMake [1], I can see that CMake 3.9
> is installed on most development systems, including Travis CI, so this
> would be an ideal minimum.
> """
>
> but looking now at [1]
> https://cliutils.gitlab.io/modern-cmake/chapters/intro/installing.html#cmake-default-versions
>
> it seems to have been updated very recently to mention 3.12.4 and looking at
> actual Travis logs at
> https://api.travis-ci.com/v3/job/281868129/log.txt
>
> I can see that 3.12.4 is indeed installed

Yes, this was updated a few days ago:
https://gitlab.com/CLIUtils/modern-cmake/commit/ad364ca2d92cb06747755aeb4c735648bd0e3931

That's great for our Travis CI tests, but not as a suitable minimum
version for RFC 3, as it's less than 2 years old. As I had mentioned
previously, the newest 2-year old version is CMake 3.10, however I
don't see any compelling features from this release to recommend it as
the next minimum version.

