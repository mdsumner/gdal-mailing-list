From alex.weidauer at huckfinn.de  Sat Jun  1 06:33:51 2002
From: alex.weidauer at huckfinn.de (Alexander Weidauer)
Date: Sat, 01 Jun 2002 15:33:51 +0200
Subject: [OSRS-PROJ] geod_api
Message-ID: <3CF8CD3F.8080807@huckfinn.de>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 06:47:59 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 14:47:59 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.145047bst.119045@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 06:59:16 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 14:59:16 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.150153bst.119045@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 07:07:48 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 15:07:48 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.150924bst.119046@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 07:16:00 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 15:16:00 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.151834bst.119045@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 07:30:00 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 15:30:00 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.153246bst.119044@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:16 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 07:39:14 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 15:39:14 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.154122bst.119045@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:30 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:16 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 07:50:09 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 15:50:09 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.155228bst.119044@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:39 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:30 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:16 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 07:59:02 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 15:59:02 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.160137bst.119044@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:50 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:39 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:30 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:16 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 08:13:23 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 16:13:23 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.161510bst.119044@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:50 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:39 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:30 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:16 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 08:21:55 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 16:21:55 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.162414bst.119044@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 16:13 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:50 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:39 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:30 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:16 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Alan.Forster at mouchel.com  Sat Jun  1 08:31:29 2002
From: Alan.Forster at mouchel.com (Alan Forster)
Date: Sat, 01 Jun 2002 16:31:29 +0100
Subject: [OSRS-PROJ] geod_api
Message-ID: <02Jun1.163316bst.119044@gateway-uk.mouchel.com>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 16:21 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 16:13 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:50 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:39 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:30 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:16 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 15:07 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:59 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:47 >>>

Thank you for your e-mail.

I am on leave until 10th June and will reply when I get back!

Regards,

Alan.

>>> osrs-proj 06/01/02 14:33 >>>

Hi Folks,

I work on earthquake relocations at university of potsdam and try to 
change the
coordinate  transformation routines of the USGS to ellipsoid and datum 
variable
routines. Therfore i encapsulate then proj code into a "Transformer 
Class" and
it works well. See ANHANG:

Now iI use also great circle computations to applicate perhaps the 
azimut angle
to the normal correction vectors  of a earthquake event. The routines 
are fixed to
WGS 72 ellipsoid and I want to use the parameter settings like the 
routine GEOD
to create similar Container class.

My question, is there a geod_api.h available like the proj_api.h to 
realize this
or must I investigate the programming code of the geod.c tool.

With friendly geetings A. Weidauer 


I try to create  a class container  for proj tools like this :

ANHANG:

//--- uCoordinates.hpp ----------------------------------------------------
#include "uConst.hpp"
#include "uObject.hpp"
#include <proj_api.h>
 
class cCoordinateTransformer : private cObject {
private:
 projUV p;
 projPJ PlainLL;
 projPJ Src,Dst;
 void SetCoordSystem(const char* aProjection, projPJ& pj);
public:
 cCoordinateTransformer();
 ~cCoordinateTransformer();

 void SetPlainLLSystem(const char* aProjection);
 void SetPlainSrcSystem(const char* aProjection);
 void SetPlainDestSystem(const char* aProjection);

 void cvsLLToPlain (tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XDistanceKM,
            tDouble& YDistanceKM);     

 void cvsPlainToLL(tDouble XDistanceKM,
                    tDouble YDistanceKM,
                    tDouble& Longitude,
                    tDouble& Latitude);

 void cvsPlainToPlain(tDouble XSourceKM, tDouble YSourceKM,
                      tDouble XDestKM,   tDouble YDestKM);
};
typedef  cCoordinateTransformer*  rCoordinateTransformer; 

// --- Class implementation 
---------------------------------------------------------------
 cCoordinateTransformer::cCoordinateTransformer(): cObject() {
  PlainLL=NULL;
  Src=NULL;
  Dst=NULL;
 }
 
 //-----------------------------------------------------------------------
 cCoordinateTransformer::~cCoordinateTransformer() {
  if (PlainLL!=NULL) {  pj_free(PlainLL); }
  if (Src!=NULL)  {  pj_free(Src); }
  if (Dst!=NULL) {  pj_free(Dst); }
 }
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetCoordSystem(const char* aProjection, 
projPJ& pj)
{ char buffer[512];
  if (pj!=NULL) { pj_free(pj);}
  pj = pj_init_plus(aProjection);
  if (pj==NULL) {
   sprintf(buffer,"Cannot set projection \"%s\" !",aProjection);
   FatalError(-1,buffer);
  }
}       

//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainLLSystem(const char* aProjection)
{ SetCoordSystem(aProjection,PlainLL); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainSrcSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Src); }       
//-----------------------------------------------------------------------
void cCoordinateTransformer::SetPlainDestSystem(const char* aProjection)
{ SetCoordSystem(aProjection,Dst); }       

 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsLLToPlain(tDouble Longitude,
                    tDouble Latitude,       
                    tDouble& XKM,
            tDouble& YKM)   
{
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = DEG_TO_RAD * Longitude;
    p.v = DEG_TO_RAD * Latitude;
    p = pj_fwd(p, PlainLL);
    XKM = p.u/1000;
    YKM = p.v/1000;
}       
 //-----------------------------------------------------------------------
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToLL(tDouble XKM,
                    tDouble YKM,
                    tDouble& Longitude,
                    tDouble& Latitude)
 {
    if (PlainLL==NULL) {
      FatalError(-1," lon lat to plain transformer ! Coordinate system 
not specified !");
    }
    p.u = XKM*1000;
    p.v = YKM*1000;
    p = pj_inv(p, PlainLL);
    XKM = p.u * RAD_TO_DEG;
    YKM = p.v * RAD_TO_DEG;
 }
 //-----------------------------------------------------------------------
 void cCoordinateTransformer::cvsPlainToPlain(tDouble XSourceKM, tDouble 
YSourceKM,
                                              tDouble XDestKM,   tDouble 
YDestKM)
 { 
   
    if (Src==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    if (Dst==NULL) {
      FatalError(-1," lon lat to plain transformer ! Source coordinate 
system not specified !");
    }
    p.u = XSourceKM*1000.0;
    p.v = YSourceKM*1000.0;
    p=pj_inv(p,Src);
    p=pj_fwd(p,Dst);
    XDestKM = p.u *1000.0;
    YDestKM = p.v *1000.0;
 }
 

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Sat Jun  1 08:35:45 2002
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sat, 01 Jun 2002 11:35:45 -0400
Subject: [OSRS-PROJ] geod_api
References: <3CF8CD3F.8080807@huckfinn.de>
Message-ID: <3CF8E9D1.8040005@pobox.com>

Alexander Weidauer wrote:
> Hi Folks, >
> My question, is there a geod_api.h available like the proj_api.h to 
> realize this
> or must I investigate the programming code of the geod.c tool.
> 
> With friendly geetings A. Weidauer

Alexander,

The geodesic.h file contains the api and definitions for various shared
variables and structures.  The API is not what I would call clean,
depending on global variables and funky macros as it does but you should
be able to encapsulate it.

PS. I have removed the auto-reply user so we shouldn't get any more of those
messages.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Mon Jun 10 03:45:16 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Mon, 10 Jun 2002 19:45:16 +0900
Subject: [OSRS-PROJ] One more help, please...
Message-ID: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local>

Hello All,
Please help me resolve this macro issue in the Proj4 library:

The PJ struct defines its main members and adds macros for
the individual projections to extend it: the PROJ_PARMS__ below:
(in the projects.h file)

typedef struct PJconsts
{

        .........

#ifdef PROJ_PARMS__
PROJ_PARMS__
#endif /* end of optional extensions */
} PJ;

To this those projections with extra parameters define these as (example):

#define PROJ_PARMS__ \
 double cosphi1; \
 int  mode;
#define PJ_LIB__

#include "projects.h"

These extra members are therefore not available in the interface exposed
by the library. Unfortunately! I wish to get rid of this macro too and I
have
two options:

1. Define global structures in the individual files to hold the extra
parameters with
   a declared global variable each:

 struct foo
 {
      double cosphi1;
     int       mode;
 };

static foo gExtra;

2. Add a long type variable to the PJ to hold pointer to use-defined extra
structures:

typedef struct PJconsts
{

        .........

    long lUserParameter;
} PJ;

The user parameters can then be created from some define structures and with
pointer
saved in the lUserParameter member.

Which is better and why? (I need your views on your preference). Do you have
better
solution to this problem? (please outline it).

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Mon Jun 10 05:36:36 2002
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 10 Jun 2002 08:36:36 -0400
Subject: [OSRS-PROJ] One more help, please...
References: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local>
Message-ID: <3D049D54.5090705@pobox.com>

Paul Selormey wrote:

> 1. Define global structures in the individual files to hold the extra
> parameters with
>    a declared global variable each:
> 
>  struct foo
>  {
>       double cosphi1;
>      int       mode;
>  };
> 
> static foo gExtra;
> 
> 2. Add a long type variable to the PJ to hold pointer to use-defined extra
> structures:
> 
> typedef struct PJconsts
> {
> 
>         .........
> 
>     long lUserParameter;
> } PJ;
> 
> The user parameters can then be created from some define structures and with
> pointer
> saved in the lUserParameter member.

Paul,

Why use a long for lUserParameter instead of a void *?

I would suggest defining a union within the base structure, and using
anonymous structures within that to hold the values for different projections.
This would make the values externally visible which could be useful in some
cases.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Mon Jun 10 07:07:39 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Mon, 10 Jun 2002 23:07:39 +0900
Subject: [OSRS-PROJ] One more help, please...
References: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local> <3D049D54.5090705@pobox.com>
Message-ID: <001501c21088$2fe2bae0$700201c0@MAPQUEST.local>

Hello Frank,
Thanks for the reply.

> Why use a long for lUserParameter instead of a void *?

I thought of that too, but decided on the Windows style! The DWORD
parameter in most Windows structures for user-defined parameters.

> I would suggest defining a union within the base structure, and using
> anonymous structures within that to hold the values for different
projections.
> This would make the values externally visible which could be useful in
some
> cases.

Makes a lot of sense. However, is anonymous structures supported by non-MS
compilers. Sometime ago, it seems to be a problem with the Mingw32/Mingw
compiler (the gcc-based Windows compiler). I do not know about others.

BTW, a little code to illustrate your points will make my friend easier :-)

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From pdjensen at agileimage.com  Mon Jun 10 07:40:17 2002
From: pdjensen at agileimage.com (Paul)
Date: Mon, 10 Jun 2002 08:40:17 -0600
Subject: [OSRS-PROJ] One more help, please...
In-Reply-To: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local>
References: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local>
Message-ID: <20020610144017.27035@smtp.agileimage.com>

You wrote:

>...
>These extra members are therefore not available in the interface exposed
>by the library. Unfortunately! I wish to get rid of this macro too and I
>have
>two options:
>
>1. Define global structures in the individual files to hold the extra
>parameters with
>   a declared global variable each:
>
> struct foo
> {
>      double cosphi1;
>     int       mode;
> };
>
>static foo gExtra;

Static variables prevent the use of the code in multithreaded
applications. There are a few places in the original Proj4 code that use
static where the problem existed. 

    pdj
-- 
Paul Jensen     Agile Image Movers     http://agileimage.com

----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Mon Jun 10 08:42:40 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Tue, 11 Jun 2002 00:42:40 +0900
Subject: [OSRS-PROJ] One more help, please...
References: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local> <20020610144017.27035@smtp.agileimage.com>
Message-ID: <003b01c21095$757998f0$700201c0@MAPQUEST.local>

Hello Paul,
Thanks for the response.

> Static variables prevent the use of the code in multithreaded
> applications. There are a few places in the original Proj4 code that use
> static where the problem existed. 

Glad I asked.

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Mon Jun 10 08:55:01 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Tue, 11 Jun 2002 00:55:01 +0900
Subject: [OSRS-PROJ] One more help, please...
References: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local> <3D049D54.5090705@pobox.com>
Message-ID: <006701c21097$2f576d00$700201c0@MAPQUEST.local>

Hello Frank,

> I see I neglected to explain why this was a concern to me.  There are
> platforms for which a long is smaller than a pointer, and so they can't
> always be cast back and forth freely.

I see. Me no think that far :(

> Hmm, actually now that I think of it, it was only function pointers on
> some of the new 64bit systems that were actually 128 bits long.  Anyways,
> I would encourage keeping pointers as pointers to reduce future possible
> compatibility problems.

That is right. I was using 64-bit Alpha processor machine at school running
32-bit WinNT!

> Hmm.  Actually, I think anonymous structures is the wrong way to describe
this.
> I really mean nested structure definitions within a union, something like
this:
>
> typedef struct {
>    ...
>    union {
>      struct {
>        double central_meridian;
>        double scale_factor;
>      } tmerc;
>      struct {
>        int grid_zone;
>      } nzgrid;
>    } u;
> } PJ;
>

This seems to be the most elegant solution. We might also pull the static
decription text into the structures to avoid the thread issue raised.
However, I did a quick search for projections using the extra parameters
and got over 30 different projections.
The union could be very large. Is it okay?

> So that a value would be reference as pj->u.nzgrid.grid_zone for instance.
> Ideally the union could remain unnamed, but I don't know if this is
portable.

No, this was not the form causing the problem. The Windows headers have
dummy name
for the unions.

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Mon Jun 10 09:25:07 2002
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 10 Jun 2002 12:25:07 -0400
Subject: [OSRS-PROJ] One more help, please...
References: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local> <3D049D54.5090705@pobox.com> <006701c21097$2f576d00$700201c0@MAPQUEST.local>
Message-ID: <3D04D2E3.6050300@pobox.com>

Paul Selormey wrote:
> This seems to be the most elegant solution. We might also pull the static
> decription text into the structures to avoid the thread issue raised.
> However, I did a quick search for projections using the extra parameters
> and got over 30 different projections.
> The union could be very large. Is it okay?

That isn't really harmful, though it does make the structure somewhat less
readable.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Mon Jun 10 16:55:20 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Tue, 11 Jun 2002 08:55:20 +0900
Subject: [OSRS-PROJ] One more help, please...
References: <000901c2106b$e9a9f550$700201c0@MAPQUEST.local> <3D049D54.5090705@pobox.com> <006701c21097$2f576d00$700201c0@MAPQUEST.local> <3D04D2E3.6050300@pobox.com>
Message-ID: <000901c210da$48a19860$700201c0@MAPQUEST.local>

Hello Frank,

> That isn't really harmful, though it does make the structure somewhat less
> readable.

Harmful, no. I think readability will not really be an issue. The union will
appear
as a C++ namespace keyword :-)
I will start coding it now.

Thanks to all who have taken the time to contribute to this thread.

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From Frans.de.Roos at epl.ericsson.se  Wed Jun 12 22:24:30 2002
From: Frans.de.Roos at epl.ericsson.se (Frans de Roos (EPL))
Date: Thu, 13 Jun 2002 07:24:30 +0200
Subject: [OSRS-PROJ] datum shift Gauss Krueger
Message-ID: <9505F6390AA7D311A2D500508B951BEF07F0A50F@esealnt427>

Hello All

I got the same problem as Harald Wehr when tranforming from wgs84 to Gauss-Krueger (zone 4) . My transformation will also be about 55 meters wrong.

I use cs2cs as follow
cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc +ellps=bessel
+lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=583,68,399

What I know from some other program I should use 

Gauss Krueger 4, Bessel, Potsdam_IST_V2_0 
583.00     - Translation dx in meter to WGS84
68.0       - Translation dy in meter to WGS84
399.50     - Translation dz in meter to WGS84
0          - Rotation ro (omega) in Radiant to WGS84
0          - Rotation rf (phi) in radiant to WGS84
13.6e-06   - Rotation rk (Kappa) in Radiant to WGS84
11.3e-06   - Mapscale factor in ppm (parts per million) to WGS84

And tranformation should calculate

ID  lon (WGS84)  lat (WGS84)    X (GK4)      Y (GK4)
1   11.60608768  48.25167084    4470860.075  5346044.934
2   10.96510029  50.25949478    4426313.445  5569780.810
3   7.46         51.57          4185407.951  5724830.919

When I use cs2cs I get the X-value to be about 55 meters wrong! The Y-value will just differ 0 - 3 meter.
I think that I should in some way add the rotation kappa in the calculation! Does anyone know how how I should do this?

If I change the dy value from 68 to 18 I got some better values. Now the X and Y values will differ about 8 meters but I don't think I should do this.

Frans






		Dear Frank,

		The Europeans like to do their rotations in an opposite direction from the
		rest of the world when doing 7-parameter Datum Shifts.  Translation and
		Scale Factors remain the same.  e.g., you will get weird and unexplainable
		results if you rotate in the wrong direction.

		A Helmert transform done with geocentric coordinates in three dimensions is
		called a Helmert Direct from Geodetic to Geocentric, and is called a
		Helmert Inverse from Geocentric to Geodetic.

		Molodensky-Badekas does a 3-d Helmert direct to geocentric coordinates,
		subtracts the geocentric coordinates of the classical Datum origin, then
		does the 7-parameter, then finally does the Helmert inverse back to the new
		Datum's geodetic coordinates.

		Bursa-Wolf does a 3-d Helmert direct to geocentric coordinates, does NOT
		subtract the geocentric coordinates of the classical Datum origin, then
		does the 3-parameter, or 4-parameter, or 7-parameter, then finally does the
		Helmert inverse back to the new Datum's geodetic coordinates.

		How do you tell which direction to rotate?  It is impossible unless you
		have a test point.  Since Harald does have a test point ...

		So now you know.

		Cliff

		Prof. Clifford J. Mugnier (cjmce at LSU.edu)
		Chief of Geodesy
		CENTER FOR GEOINFORMATICS
		Department of Civil Engineering
		LOUISIANA STATE UNIVERSITY
		Baton Rouge, LA  70803
		Voice and Facsimile:  (225) 578-8536
		Pager:              1-(888) 365-5180
		================================
		http://www.ASPRS.org/resources.html
		http://www.ce.LSU.edu/~mugnier/
		================================


		Harald Wehr wrote:
		> Hi Frank,
		>
		> first i apologize, that i contact you directly.
		>
		> In the PROJ.4-mailing-list no one answered to my problem. Attached you
		> find my mail from february 26th that I send to the list.
		...

		> I want to convert some data from latlong/wgs84 to tmerc/bessel with
		> datum shift from wgs84 to potsdam-datum here in germany.  How do i have
		> to use the function? Are helmert-7-parameter as well as
		> molodenski-3-parameter implemented? I tried the following:

		Harald,

		I didn't answer because I am always getting confused about the terminology
		for some of the different transforms.  There is a three and seven
		parameter transform implemented; however, I am not certain that the
		interpretation of the parameters (sign, handedness, etc) is exactly what
		is defined for helmert and molodenski.  I think it is though.

		>
		> --------
		> cs2cs -v +proj=latlong +to +proj=tmerc +ellps=bessel +lat_0=0 +lon_0=12
		> +x_0=4500000 +towgs84=-586,-87,-409 <<EOF
		> 10.69079E 51.86134N
		> EOF
		> --------
		>
		> As result i get the following:
		>
		> ---------
		> # ---- From Coordinate System ----
		> #Lat/long (Geodetic)
		> #
		> # +proj=latlong +ellps=WGS84
		> # ---- To Coordinate System ----
		> #Transverse Mercator
		> # Cyl, Sph&Ell
		> # +proj=tmerc +ellps=bessel +lat_0=0 +lon_0=12 +x_0=4500000
		> # +towgs84=-586,-87,-409
		> #--- following specified but NOT used
		> # +ellps=WGS84
		> 4409820.23 5748070.07 698.769
		>
		> ---------
		>
		> The result is not good enough. I expect something like that:
		> 4409920 5748280.
		>
		> Whats wrong here? I got the "towgs"-parameters from a another
		> helmert-calculation i found in the internet which work in another
		> program i have here and show the results i expected.

		First, no actual datum shift is being applied in this case because PROJ
		doesn't equate +ellps=WGS84 with the WGS84 datum automatically.  I realized
		this when I did the conversion without the +towgs84 parameter and got the
		same results.  Please use +datum=WGS84 to force treatment of the lat/long
		coordinates as being the WGS84 datum.

		Howwever, this doesn't seem to get us any closer to your expected values.

		warmerda at gdal[355]% cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc
		+ellps=bessel
		+lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=-586,-87,-409 < test.dat
		4409793.19      5747857.54 1386.040

		I tried reversing the sign of the offset, as this is a frequent
		incompatibility,
		and get:

		warmerda at gdal[356]% cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc
		+ellps=bessel
		+lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=586,87,409 < test.dat
		4409847.28      5748282.64 11.504

		This is close to what you expect in the northing (2m), but no so close in
		the
		easting - still off by 70m or so.  I am no sure what else to say.

		Best regards,






----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From neteler at itc.it  Thu Jun 13 00:38:03 2002
From: neteler at itc.it (Markus Neteler)
Date: Thu, 13 Jun 2002 09:38:03 +0200
Subject: [OSRS-PROJ] datum shift Gauss Krueger
In-Reply-To: <9505F6390AA7D311A2D500508B951BEF07F0A50F@esealnt427>; from Frans.de.Roos@epl.ericsson.se on Thu, Jun 13, 2002 at 07:24:30AM +0200
References: <9505F6390AA7D311A2D500508B951BEF07F0A50F@esealnt427>
Message-ID: <20020613093803.C7051@itc.it>

Hi,

while not being very familiar with datum transformations, a suggestion
to below problem. The Peter Dana's web site shows a different
Potsdam_Rauenberg_DHDN datum:
http://www.colorado.Edu/geography/gcraft/notes/datum/dlist.html

A quick try:

cs2cs +proj=latlong +datum=WGS84 +to +init=epsg:31494 +towgs84=606,23,413

Some results with above datum:

Frans de Roos tried:
  lat/long    11.60608768  48.25167084
  new cs2cs:  4470850.92   5346045.81
  expected:   4470860.075  5346044.934 (less error than he got, see below)

Harald Wehr tried:
  lat/long   10.69079E   51.86134N
  new cs2cs: 4409913.94  5748285.09
  expected:  4409920     5748280  (less error than he got, see below)

Regards

 Markus Neteler

On Thu, Jun 13, 2002 at 07:24:30AM +0200, Frans de Roos (EPL) wrote:
> Hello All
> 
> I got the same problem as Harald Wehr when tranforming from wgs84 to
> Gauss-Krueger (zone 4) . My transformation will also be about 55 meters
> wrong.
> 
> I use cs2cs as follow
> cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc +ellps=bessel
> +lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=583,68,399
> 
> What I know from some other program I should use 
> 
> Gauss Krueger 4, Bessel, Potsdam_IST_V2_0 
> 583.00     - Translation dx in meter to WGS84
> 68.0       - Translation dy in meter to WGS84
> 399.50     - Translation dz in meter to WGS84
> 0          - Rotation ro (omega) in Radiant to WGS84
> 0          - Rotation rf (phi) in radiant to WGS84
> 13.6e-06   - Rotation rk (Kappa) in Radiant to WGS84
> 11.3e-06   - Mapscale factor in ppm (parts per million) to WGS84
> 
> And tranformation should calculate
> 
> ID  lon (WGS84)  lat (WGS84)    X (GK4)      Y (GK4)
> 1   11.60608768  48.25167084    4470860.075  5346044.934
> 2   10.96510029  50.25949478    4426313.445  5569780.810
> 3   7.46         51.57          4185407.951  5724830.919
> 
> When I use cs2cs I get the X-value to be about 55 meters wrong! The Y-value will just differ 0 - 3 meter.
> I think that I should in some way add the rotation kappa in the calculation! Does anyone know how how I should do this?
> 
> If I change the dy value from 68 to 18 I got some better values. Now the X and Y values will differ about 8 meters but I don't think I should do this.
> 
> Frans
> 
> 
> 
> 
> 
> 
> 		Dear Frank,
> 
> 		The Europeans like to do their rotations in an opposite direction from the
> 		rest of the world when doing 7-parameter Datum Shifts.  Translation and
> 		Scale Factors remain the same.  e.g., you will get weird and unexplainable
> 		results if you rotate in the wrong direction.
> 
> 		A Helmert transform done with geocentric coordinates in three dimensions is
> 		called a Helmert Direct from Geodetic to Geocentric, and is called a
> 		Helmert Inverse from Geocentric to Geodetic.
> 
> 		Molodensky-Badekas does a 3-d Helmert direct to geocentric coordinates,
> 		subtracts the geocentric coordinates of the classical Datum origin, then
> 		does the 7-parameter, then finally does the Helmert inverse back to the new
> 		Datum's geodetic coordinates.
> 
> 		Bursa-Wolf does a 3-d Helmert direct to geocentric coordinates, does NOT
> 		subtract the geocentric coordinates of the classical Datum origin, then
> 		does the 3-parameter, or 4-parameter, or 7-parameter, then finally does the
> 		Helmert inverse back to the new Datum's geodetic coordinates.
> 
> 		How do you tell which direction to rotate?  It is impossible unless you
> 		have a test point.  Since Harald does have a test point ...
> 
> 		So now you know.
> 
> 		Cliff
> 
> 		Prof. Clifford J. Mugnier (cjmce at LSU.edu)
> 		Chief of Geodesy
> 		CENTER FOR GEOINFORMATICS
> 		Department of Civil Engineering
> 		LOUISIANA STATE UNIVERSITY
> 		Baton Rouge, LA  70803
> 		Voice and Facsimile:  (225) 578-8536
> 		Pager:              1-(888) 365-5180
> 		================================
> 		http://www.ASPRS.org/resources.html
> 		http://www.ce.LSU.edu/~mugnier/
> 		================================
> 
> 
> 		Harald Wehr wrote:
> 		> Hi Frank,
> 		>
> 		> first i apologize, that i contact you directly.
> 		>
> 		> In the PROJ.4-mailing-list no one answered to my problem. Attached you
> 		> find my mail from february 26th that I send to the list.
> 		...
> 
> 		> I want to convert some data from latlong/wgs84 to tmerc/bessel with
> 		> datum shift from wgs84 to potsdam-datum here in germany.  How do i have
> 		> to use the function? Are helmert-7-parameter as well as
> 		> molodenski-3-parameter implemented? I tried the following:
> 
> 		Harald,
> 
> 		I didn't answer because I am always getting confused about the terminology
> 		for some of the different transforms.  There is a three and seven
> 		parameter transform implemented; however, I am not certain that the
> 		interpretation of the parameters (sign, handedness, etc) is exactly what
> 		is defined for helmert and molodenski.  I think it is though.
> 
> 		>
> 		> --------
> 		> cs2cs -v +proj=latlong +to +proj=tmerc +ellps=bessel +lat_0=0 +lon_0=12
> 		> +x_0=4500000 +towgs84=-586,-87,-409 <<EOF
> 		> 10.69079E 51.86134N
> 		> EOF
> 		> --------
> 		>
> 		> As result i get the following:
> 		>
> 		> ---------
> 		> # ---- From Coordinate System ----
> 		> #Lat/long (Geodetic)
> 		> #
> 		> # +proj=latlong +ellps=WGS84
> 		> # ---- To Coordinate System ----
> 		> #Transverse Mercator
> 		> # Cyl, Sph&Ell
> 		> # +proj=tmerc +ellps=bessel +lat_0=0 +lon_0=12 +x_0=4500000
> 		> # +towgs84=-586,-87,-409
> 		> #--- following specified but NOT used
> 		> # +ellps=WGS84
> 		> 4409820.23 5748070.07 698.769
> 		>
> 		> ---------
> 		>
> 		> The result is not good enough. I expect something like that:
> 		> 4409920 5748280.
> 		>
> 		> Whats wrong here? I got the "towgs"-parameters from a another
> 		> helmert-calculation i found in the internet which work in another
> 		> program i have here and show the results i expected.
> 
> 		First, no actual datum shift is being applied in this case because PROJ
> 		doesn't equate +ellps=WGS84 with the WGS84 datum automatically.  I realized
> 		this when I did the conversion without the +towgs84 parameter and got the
> 		same results.  Please use +datum=WGS84 to force treatment of the lat/long
> 		coordinates as being the WGS84 datum.
> 
> 		Howwever, this doesn't seem to get us any closer to your expected values.
> 
> 		warmerda at gdal[355]% cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc
> 		+ellps=bessel
> 		+lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=-586,-87,-409 < test.dat
> 		4409793.19      5747857.54 1386.040
> 
> 		I tried reversing the sign of the offset, as this is a frequent
> 		incompatibility,
> 		and get:
> 
> 		warmerda at gdal[356]% cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc
> 		+ellps=bessel
> 		+lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=586,87,409 < test.dat
> 		4409847.28      5748282.64 11.504
> 
> 		This is close to what you expect in the northing (2m), but no so close in
> 		the
> 		easting - still off by 70m or so.  I am no sure what else to say.
> 
> 		Best regards,
> 
> 
> 
> 
> 
> 
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From cjmce at lsu.edu  Thu Jun 13 06:22:49 2002
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Thu, 13 Jun 2002 08:22:49 -0500
Subject: [OSRS-PROJ] datum shift Gauss Krueger
Message-ID: <OFD764E586.2BF081E2-ON86256BD7.00497FD5@lsu.edu>


Gentlemen:

The parameters found in Dr. Dana's Colorado web site were last updated in
1997.  For the latest listing of what's available (from the original
source), see the www.NIMA.mil web site that will have links to the gandg
(Geodesy and Geophysics) web site for "TR8350.2" which is the defining
document for WGS84.  Addtional shift parameters may be garnered from the
EPSG web site somewhere in Switzerland and also from my monthly columns in
"Photogrammetric Engineering and Remote Sensing."  (Listed below my
signature block).

Gauss-Krueger has nothing to do with a datum shift.  It is the basic
projection behind the DHG Grid. (Deutches Herres Gitter).  The Russia Belts
are the same sort of system on a different Datum and ellipsoid.  There are
literally thousands of possible Datum shift parameters that have never been
published.  Each and every one has to be individually solved for, and the
solutions can have a variety of parameters depending on the intended usage.
The most common is the 3-parameter which only involves translations plus
the difference between the ellipsoid dimensions and shapes.

Each solution needs a number of points in which the coordinates are known
on both Datums.  The solution for the systematic error between the two
Datums then yields the parameters for the shift model used.  For military
purposes the accuracy is not that stringent because of the blast radius of
artillery shells.  (Not kidding!)  Some countries have allowed the U.S.
military to use more points in the published (public) solution as a service
to civilian users.  If the published values are not available for the
region of the world that is of interest to you, it is because of one of two
reasons: that country does NOT want the parameters publicly known, or no
one has ever bothered to solve for the parameters because there's little
economic incentive for GIS & mapping in the area.

If you have access to a number of points with coordinates in two Datums,
send the data to me and I'll be happy to solve the parameters for you.  The
more points the better, as long as it is actual survey points on the
ground.  Digitized paper map data is not suitable for such an approach.

Regards,

Prof. Clifford J. Mugnier (cjmce at LSU.edu)
Chief of Geodesy
CENTER FOR GEOINFORMATICS
Department of Civil Engineering
LOUISIANA STATE UNIVERSITY
Baton Rouge, LA  70803
Voice and Facsimile:  (225) 578-8536
Pager:              1-(888) 365-5180
================================
http://www.ASPRS.org/resources.html
http://www.ce.LSU.edu/~mugnier/
================================


Hi,

while not being very familiar with datum transformations, a suggestion
to below problem. The Peter Dana's web site shows a different
Potsdam_Rauenberg_DHDN datum:
http://www.colorado.Edu/geography/gcraft/notes/datum/dlist.html

A quick try:

cs2cs +proj=latlong +datum=WGS84 +to +init=epsg:31494 +towgs84=606,23,413

Some results with above datum:

Frans de Roos tried:
  lat/long    11.60608768  48.25167084
  new cs2cs:  4470850.92   5346045.81
  expected:   4470860.075  5346044.934 (less error than he got, see below)

Harald Wehr tried:
  lat/long   10.69079E   51.86134N
  new cs2cs: 4409913.94  5748285.09
  expected:  4409920     5748280  (less error than he got, see below)

Regards

 Markus Neteler

On Thu, Jun 13, 2002 at 07:24:30AM +0200, Frans de Roos (EPL) wrote:
> Hello All
>
> I got the same problem as Harald Wehr when tranforming from wgs84 to
> Gauss-Krueger (zone 4) . My transformation will also be about 55 meters
> wrong.
>
> I use cs2cs as follow
> cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc +ellps=bessel
> +lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=583,68,399
>
> What I know from some other program I should use
>
> Gauss Krueger 4, Bessel, Potsdam_IST_V2_0
> 583.00     - Translation dx in meter to WGS84
> 68.0       - Translation dy in meter to WGS84
> 399.50     - Translation dz in meter to WGS84
> 0          - Rotation ro (omega) in Radiant to WGS84
> 0          - Rotation rf (phi) in radiant to WGS84
> 13.6e-06   - Rotation rk (Kappa) in Radiant to WGS84
> 11.3e-06   - Mapscale factor in ppm (parts per million) to WGS84
>
> And tranformation should calculate
>
> ID  lon (WGS84)  lat (WGS84)    X (GK4)      Y (GK4)
> 1   11.60608768  48.25167084    4470860.075  5346044.934
> 2   10.96510029  50.25949478    4426313.445  5569780.810
> 3   7.46         51.57          4185407.951  5724830.919
>
> When I use cs2cs I get the X-value to be about 55 meters wrong! The
Y-value will just differ 0 - 3 meter.
> I think that I should in some way add the rotation kappa in the
calculation! Does anyone know how how I should do this?
>
> If I change the dy value from 68 to 18 I got some better values. Now the
X and Y values will differ about 8 meters but I don't think I should do
this.
>
> Frans
>
>
>
>
>
>
>         Dear Frank,
>
>         The Europeans like to do their rotations in an opposite direction
from the
>         rest of the world when doing 7-parameter Datum Shifts.
Translation and
>         Scale Factors remain the same.  e.g., you will get weird and
unexplainable
>         results if you rotate in the wrong direction.
>
>         A Helmert transform done with geocentric coordinates in three
dimensions is
>         called a Helmert Direct from Geodetic to Geocentric, and is
called a
>         Helmert Inverse from Geocentric to Geodetic.
>
>         Molodensky-Badekas does a 3-d Helmert direct to geocentric
coordinates,
>         subtracts the geocentric coordinates of the classical Datum
origin, then
>         does the 7-parameter, then finally does the Helmert inverse back
to the new
>         Datum's geodetic coordinates.
>
>         Bursa-Wolf does a 3-d Helmert direct to geocentric coordinates,
does NOT
>         subtract the geocentric coordinates of the classical Datum
origin, then
>         does the 3-parameter, or 4-parameter, or 7-parameter, then
finally does the
>         Helmert inverse back to the new Datum's geodetic coordinates.
>
>         How do you tell which direction to rotate?  It is impossible
unless you
>         have a test point.  Since Harald does have a test point ...
>
>         So now you know.
>
>         Cliff
>
>         Prof. Clifford J. Mugnier (cjmce at LSU.edu)
>         Chief of Geodesy
>         CENTER FOR GEOINFORMATICS
>         Department of Civil Engineering
>         LOUISIANA STATE UNIVERSITY
>         Baton Rouge, LA  70803
>         Voice and Facsimile:  (225) 578-8536
>         Pager:              1-(888) 365-5180
>         ================================
>         http://www.ASPRS.org/resources.html
>         http://www.ce.LSU.edu/~mugnier/
>         ================================
>
>
>         Harald Wehr wrote:
>         > Hi Frank,
>         >
>         > first i apologize, that i contact you directly.
>         >
>         > In the PROJ.4-mailing-list no one answered to my problem.
Attached you
>         > find my mail from february 26th that I send to the list.
>         ...
>
>         > I want to convert some data from latlong/wgs84 to tmerc/bessel
with
>         > datum shift from wgs84 to potsdam-datum here in germany.  How
do i have
>         > to use the function? Are helmert-7-parameter as well as
>         > molodenski-3-parameter implemented? I tried the following:
>
>         Harald,
>
>         I didn't answer because I am always getting confused about the
terminology
>         for some of the different transforms.  There is a three and seven
>         parameter transform implemented; however, I am not certain that
the
>         interpretation of the parameters (sign, handedness, etc) is
exactly what
>         is defined for helmert and molodenski.  I think it is though.
>
>         >
>         > --------
>         > cs2cs -v +proj=latlong +to +proj=tmerc +ellps=bessel +lat_0=0
+lon_0=12
>         > +x_0=4500000 +towgs84=-586,-87,-409 <<EOF
>         > 10.69079E 51.86134N
>         > EOF
>         > --------
>         >
>         > As result i get the following:
>         >
>         > ---------
>         > # ---- From Coordinate System ----
>         > #Lat/long (Geodetic)
>         > #
>         > # +proj=latlong +ellps=WGS84
>         > # ---- To Coordinate System ----
>         > #Transverse Mercator
>         > # Cyl, Sph&Ell
>         > # +proj=tmerc +ellps=bessel +lat_0=0 +lon_0=12 +x_0=4500000
>         > # +towgs84=-586,-87,-409
>         > #--- following specified but NOT used
>         > # +ellps=WGS84
>         > 4409820.23 5748070.07 698.769
>         >
>         > ---------
>         >
>         > The result is not good enough. I expect something like that:
>         > 4409920 5748280.
>         >
>         > Whats wrong here? I got the "towgs"-parameters from a another
>         > helmert-calculation i found in the internet which work in
another
>         > program i have here and show the results i expected.
>
>         First, no actual datum shift is being applied in this case
because PROJ
>         doesn't equate +ellps=WGS84 with the WGS84 datum automatically.
I realized
>         this when I did the conversion without the +towgs84 parameter and
got the
>         same results.  Please use +datum=WGS84 to force treatment of the
lat/long
>         coordinates as being the WGS84 datum.
>
>         Howwever, this doesn't seem to get us any closer to your expected
values.
>
>         warmerda at gdal[355]% cs2cs +proj=latlong +datum=WGS84 +to
+proj=tmerc
>         +ellps=bessel
>         +lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=-586,-87,-409 < test.dat
>         4409793.19      5747857.54 1386.040
>
>         I tried reversing the sign of the offset, as this is a frequent
>         incompatibility,
>         and get:
>
>         warmerda at gdal[356]% cs2cs +proj=latlong +datum=WGS84 +to
+proj=tmerc
>         +ellps=bessel
>         +lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=586,87,409 < test.dat
>         4409847.28      5748282.64 11.504
>
>         This is close to what you expect in the northing (2m), but no so
close in
>         the
>         easting - still off by 70m or so.  I am no sure what else to say.
>
>         Best regards,
>
>
>
>
>
>
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Thu Jun 13 07:25:40 2002
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 13 Jun 2002 10:25:40 -0400
Subject: [OSRS-PROJ] datum shift Gauss Krueger
References: <9505F6390AA7D311A2D500508B951BEF07F0A50F@esealnt427>
Message-ID: <3D08AB64.70304@pobox.com>

Frans de Roos (EPL) wrote:
> Hello All
> 
> I got the same problem as Harald Wehr when tranforming from wgs84 to Gauss-Krueger (zone 4) . My transformation will also be about 55 meters wrong.
> 
> I use cs2cs as follow
> cs2cs +proj=latlong +datum=WGS84 +to +proj=tmerc +ellps=bessel
> +lat_0=0 +lon_0=12 +x_0=4500000 +towgs84=583,68,399
> 
> What I know from some other program I should use 
> 
> Gauss Krueger 4, Bessel, Potsdam_IST_V2_0 
> 583.00     - Translation dx in meter to WGS84
> 68.0       - Translation dy in meter to WGS84
> 399.50     - Translation dz in meter to WGS84
> 0          - Rotation ro (omega) in Radiant to WGS84
> 0          - Rotation rf (phi) in radiant to WGS84
> 13.6e-06   - Rotation rk (Kappa) in Radiant to WGS84
> 11.3e-06   - Mapscale factor in ppm (parts per million) to WGS84
> 
> And tranformation should calculate
> 
> ID  lon (WGS84)  lat (WGS84)    X (GK4)      Y (GK4)
> 1   11.60608768  48.25167084    4470860.075  5346044.934
> 2   10.96510029  50.25949478    4426313.445  5569780.810
> 3   7.46         51.57          4185407.951  5724830.919
> 
> When I use cs2cs I get the X-value to be about 55 meters wrong! The Y-value will just differ 0 - 3 meter.
> I think that I should in some way add the rotation kappa in the calculation! Does anyone know how how I should do this?
> 
> If I change the dy value from 68 to 18 I got some better values. Now the X and Y values will differ about 8 meters but I don't think I should do this.

Frans,

I am not sure how good the datum shift parameters you received are.  However,
just dropping the rototational and scaling parameters can be unwise.  Also,
the expression (units) of the rotational and scaling parameters are different
than that used for the 7 parameter shift in EPSG transformation 9606.  While
there must be a formula to translate, I don't know it.

I have written up some description of my understanding of the PROJ.4 datum
shifting in:

  http://www.remotesensing.org/proj/gen_parms.html

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From mike at sepia.com  Sat Jun 15 11:48:17 2002
From: mike at sepia.com (Mike Schmidt)
Date: Sat, 15 Jun 2002 14:48:17 -0400
Subject: [OSRS-PROJ] Proj4 documentation
Message-ID: <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com>

Hello,

With Frank Warmerdam's kind permission, and after some email exchanges with 
Gerald Evenden, I have volunteered to take over the documentation for 
Proj4. Sadly, this does not mean there will be a new manual tomorrow, or 
even the next day. It will take me some time to gather and integrate all 
the current information. With a little luck, I hope to have something in 
place by the fall. The new documentation sources will be placed in the 
proj4 cvs, and will therefore be accessible to everyone. The intent is to 
produce pdf output, probably html, and possibly xml. The exact toolset that 
will be used is not definite yet. I am not planning any translations from 
English at this point. You will be welcome and even encouraged to volunteer 
to translate once the originals are in CVS.

I welcome all your suggestions, comments, etc. Please email me at the 
address below or email this list, clearly indicating in the subject line 
that your message is for the proj4 documentation. Please don't mix 
documentation comments with other types of comments, I may miss them in 
that case.

Thanks very much,

Mike

________________________________________________________
Mike Schmidt                        Systèmes Scientifiques SEPIA
President                              SEPIA Scientific Systems
Tel: 450-358-2266                  100 Richelieu, suite 2000
Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
e-mail: mike at sepia.com        Québec, Canada J3B 6X3
http://www.sepia.com             http://www.intello.com

****************************************************************************
This email message is for the sole use of the intended recipient(s)
and may contain confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by
reply email and destroy all copies of the original message.
To reply to our email administrator directly, select the following
<mailto:postmaster at sepia.com>
**************************************************************************** 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020615/4d4283bc/attachment.html>

From paul at toolscenter.org  Sat Jun 15 20:12:11 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Sun, 16 Jun 2002 12:12:11 +0900
Subject: [OSRS-PROJ] Proj4 documentation
References: <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com>
Message-ID: <002101c214e3$9cd212e0$700201c0@MAPQUEST.local>

Hello Mike,
This is a good news. Proj4 is being used in many projects. Therefore updated
and current documentation is very much welcomed.
For the formats you wish to produce, I suggest you use LaTeX. You can get
dvi, pdf, ps outputs for free! Also, there are many converters to html and I
think xml (never used any).

Do you have access to the original documentation sources (not the pdf)?

Best regards,
Paul.

  ----- Original Message -----
  From: Mike Schmidt
  To: osrs-proj at remotesensing.org
  Sent: Sunday, June 16, 2002 3:48 AM
  Subject: [OSRS-PROJ] Proj4 documentation


  Hello,

  With Frank Warmerdam's kind permission, and after some email exchanges
with Gerald Evenden, I have volunteered to take over the documentation for
Proj4. Sadly, this does not mean there will be a new manual tomorrow, or
even the next day. It will take me some time to gather and integrate all the
current information. With a little luck, I hope to have something in place
by the fall. The new documentation sources will be placed in the proj4 cvs,
and will therefore be accessible to everyone. The intent is to produce pdf
output, probably html, and possibly xml. The exact toolset that will be used
is not definite yet. I am not planning any translations from English at this
point. You will be welcome and even encouraged to volunteer to translate
once the originals are in CVS.

  I welcome all your suggestions, comments, etc. Please email me at the
address below or email this list, clearly indicating in the subject line
that your message is for the proj4 documentation. Please don't mix
documentation comments with other types of comments, I may miss them in that
case.

  Thanks very much,

  Mike

  ________________________________________________________
  Mike Schmidt                        Systèmes Scientifiques SEPIA
  President                              SEPIA Scientific Systems
  Tel: 450-358-2266                  100 Richelieu, suite 2000
  Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
  e-mail: mike at sepia.com        Québec, Canada J3B 6X3
  http://www.sepia.com            http://www.intello.com


****************************************************************************
  This email message is for the sole use of the intended recipient(s)
  and may contain confidential and privileged information.
  Any unauthorized review, use, disclosure or distribution is prohibited.
  If you are not the intended recipient, please contact the sender by
  reply email and destroy all copies of the original message.
  To reply to our email administrator directly, select the following
  <mailto:postmaster at sepia.com>

****************************************************************************

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020616/731a95fd/attachment.html>

From mike at sepia.com  Sat Jun 15 20:44:42 2002
From: mike at sepia.com (Mike Schmidt)
Date: Sat, 15 Jun 2002 23:44:42 -0400
Subject: [OSRS-PROJ] Proj4 documentation
In-Reply-To: <002101c214e3$9cd212e0$700201c0@MAPQUEST.local>
References: <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com>
Message-ID: <5.1.0.14.0.20020615233639.031c2908@deepspace.sepia.com>

Hello, Paul

LaTeX will definitely be used. I was thinking more of what to use on top of 
LaTeX. I have quite a few choices, including some of my own LaTeX based 
systems. I'm afraid the original sources aren't currently available. I 
won't have too much trouble ripping the text and images out of the pdfs. In 
any case, all the current manuals have to be integrated together, and that 
will mean reformatting the lot anyway. If anyone has a good system to 
reproduce the graphics, I'd like to hear about it. Otherwise I'll use the 
existing ones until I can do better.

When the time comes, I'll ask for volunteer reviewers.

Mike

At 12:12 PM 16/06/2002 +0900, Paul Selormey wrote:
>Hello Mike,
>This is a good news. Proj4 is being used in many projects. Therefore updated
>and current documentation is very much welcomed.
>For the formats you wish to produce, I suggest you use LaTeX. You can get
>dvi, pdf, ps outputs for free! Also, there are many converters to html and I
>think xml (never used any).
>
>Do you have access to the original documentation sources (not the pdf)?
>
>Best regards,
>Paul.
>
>----- Original Message -----
>From: <mailto:mike at sepia.com>Mike Schmidt
>To: <mailto:osrs-proj at remotesensing.org>osrs-proj at remotesensing.org
>Sent: Sunday, June 16, 2002 3:48 AM
>Subject: [OSRS-PROJ] Proj4 documentation
>
>Hello,
>
>With Frank Warmerdam's kind permission, and after some email exchanges 
>with Gerald Evenden, I have volunteered to take over the documentation for 
>Proj4. Sadly, this does not mean there will be a new manual tomorrow, or 
>even the next day. It will take me some time to gather and integrate all 
>the current information. With a little luck, I hope to have something in 
>place by the fall. The new documentation sources will be placed in the 
>proj4 cvs, and will therefore be accessible to everyone. The intent is to 
>produce pdf output, probably html, and possibly xml. The exact toolset 
>that will be used is not definite yet. I am not planning any translations 
>from English at this point. You will be welcome and even encouraged to 
>volunteer to translate once the originals are in CVS.
>I welcome all your suggestions, comments, etc. Please email me at the 
>address below or email this list, clearly indicating in the subject line 
>that your message is for the proj4 documentation. Please don't mix 
>documentation comments with other types of comments, I may miss them in 
>that case.
>
>Thanks very much,
>
>Mike
>
>________________________________________________________
>Mike Schmidt                        Systèmes Scientifiques SEPIA
>President                              SEPIA Scientific Systems
>Tel: 450-358-2266                  100 Richelieu, suite 2000
>Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
>e-mail: mike at sepia.com        Québec, Canada J3B 6X3
>http://www.sepia.com            http://www.intello.com
>
>****************************************************************************
>This email message is for the sole use of the intended recipient(s)
>and may contain confidential and privileged information.
>Any unauthorized review, use, disclosure or distribution is prohibited.
>If you are not the intended recipient, please contact the sender by
>reply email and destroy all copies of the original message.
>To reply to our email administrator directly, select the following
><mailto:postmaster at sepia.com>
>****************************************************************************

________________________________________________________
Mike Schmidt                        Systèmes Scientifiques SEPIA
President                              SEPIA Scientific Systems
Tel: 450-358-2266                  100 Richelieu, suite 2000
Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
e-mail: mike at sepia.com        Québec, Canada J3B 6X3
http://www.sepia.com             http://www.intello.com

****************************************************************************
This email message is for the sole use of the intended recipient(s)
and may contain confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by
reply email and destroy all copies of the original message.
To reply to our email administrator directly, select the following
<mailto:postmaster at sepia.com>
**************************************************************************** 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020615/f08afed4/attachment.html>

From jrnorman at aone-elexco.com  Mon Jun 17 07:35:55 2002
From: jrnorman at aone-elexco.com (Norman, Jamie)
Date: Mon, 17 Jun 2002 10:35:55 -0400
Subject: [OSRS-PROJ] Proj4 documentation
Message-ID: <AF61F9CCF15AD11197E40060B067D679590865@SERVER_1>

How do I get off of this group mail?

-----Original Message-----
From: Paul Selormey [mailto:paul at toolscenter.org]
Sent: Saturday, June 15, 2002 11:12 PM
To: osrs-proj at remotesensing.org
Subject: Re: [OSRS-PROJ] Proj4 documentation


Hello Mike,
This is a good news. Proj4 is being used in many projects. Therefore updated
and current documentation is very much welcomed.
For the formats you wish to produce, I suggest you use LaTeX. You can get
dvi, pdf, ps outputs for free! Also, there are many converters to html and I
think xml (never used any).
 
Do you have access to the original documentation sources (not the pdf)?
 
Best regards,
Paul.
 

----- Original Message ----- 
From: Mike Schmidt 
To: osrs-proj at remotesensing.org 
Sent: Sunday, June 16, 2002 3:48 AM
Subject: [OSRS-PROJ] Proj4 documentation

Hello, 

With Frank Warmerdam's kind permission, and after some email exchanges with
Gerald Evenden, I have volunteered to take over the documentation for Proj4.
Sadly, this does not mean there will be a new manual tomorrow, or even the
next day. It will take me some time to gather and integrate all the current
information. With a little luck, I hope to have something in place by the
fall. The new documentation sources will be placed in the proj4 cvs, and
will therefore be accessible to everyone. The intent is to produce pdf
output, probably html, and possibly xml. The exact toolset that will be used
is not definite yet. I am not planning any translations from English at this
point. You will be welcome and even encouraged to volunteer to translate
once the originals are in CVS. 

I welcome all your suggestions, comments, etc. Please email me at the
address below or email this list, clearly indicating in the subject line
that your message is for the proj4 documentation. Please don't mix
documentation comments with other types of comments, I may miss them in that
case. 

Thanks very much,

Mike


________________________________________________________
Mike Schmidt                        Systèmes Scientifiques SEPIA
President                              SEPIA Scientific Systems
Tel: 450-358-2266                  100 Richelieu, suite 2000     
Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
e-mail: mike at sepia.com        Québec, Canada J3B 6X3
http://www.sepia.com            http://www.intello.com 

****************************************************************************

This email message is for the sole use of the intended recipient(s)
and may contain confidential and privileged information. 
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by 
reply email and destroy all copies of the original message.
To reply to our email administrator directly, select the following 
< mailto:postmaster at sepia.com> 
****************************************************************************


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020617/54f61288/attachment.html>

From morrisong at cylabinc.com  Mon Jun 17 08:45:17 2002
From: morrisong at cylabinc.com (Greg Morrison)
Date: Mon, 17 Jun 2002 11:45:17 -0400
Subject: [OSRS-PROJ] Proj4 documentation
References: <AF61F9CCF15AD11197E40060B067D679590865@SERVER_1>
Message-ID: <003301c21615$fb10ed30$0a00005a@HAL.cylabinc.com>

Kick me off of this group, too.  I sent an email to the listserv, but I'm still getting email.  This group was helpful, but I am done with my project now...
  ----- Original Message ----- 
  From: Norman, Jamie 
  To: 'osrs-proj at remotesensing.org' 
  Sent: Monday, June 17, 2002 10:35 AM
  Subject: RE: [OSRS-PROJ] Proj4 documentation


  How do I get off of this group mail?
    -----Original Message-----
    From: Paul Selormey [mailto:paul at toolscenter.org]
    Sent: Saturday, June 15, 2002 11:12 PM
    To: osrs-proj at remotesensing.org
    Subject: Re: [OSRS-PROJ] Proj4 documentation


    Hello Mike,
    This is a good news. Proj4 is being used in many projects. Therefore updated
    and current documentation is very much welcomed.
    For the formats you wish to produce, I suggest you use LaTeX. You can get
    dvi, pdf, ps outputs for free! Also, there are many converters to html and I
    think xml (never used any).

    Do you have access to the original documentation sources (not the pdf)?

    Best regards,
    Paul.

      ----- Original Message ----- 
      From: Mike Schmidt 
      To: osrs-proj at remotesensing.org 
      Sent: Sunday, June 16, 2002 3:48 AM
      Subject: [OSRS-PROJ] Proj4 documentation


      Hello, 

      With Frank Warmerdam's kind permission, and after some email exchanges with Gerald Evenden, I have volunteered to take over the documentation for Proj4. Sadly, this does not mean there will be a new manual tomorrow, or even the next day. It will take me some time to gather and integrate all the current information. With a little luck, I hope to have something in place by the fall. The new documentation sources will be placed in the proj4 cvs, and will therefore be accessible to everyone. The intent is to produce pdf output, probably html, and possibly xml. The exact toolset that will be used is not definite yet. I am not planning any translations from English at this point. You will be welcome and even encouraged to volunteer to translate once the originals are in CVS. 

      I welcome all your suggestions, comments, etc. Please email me at the address below or email this list, clearly indicating in the subject line that your message is for the proj4 documentation. Please don't mix documentation comments with other types of comments, I may miss them in that case. 

      Thanks very much,

      Mike

      ________________________________________________________
      Mike Schmidt                        Systèmes Scientifiques SEPIA
      President                              SEPIA Scientific Systems
      Tel: 450-358-2266                  100 Richelieu, suite 2000     
      Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
      e-mail: mike at sepia.com        Québec, Canada J3B 6X3
      http://www.sepia.com            http://www.intello.com 

      **************************************************************************** 
      This email message is for the sole use of the intended recipient(s)
      and may contain confidential and privileged information. 
      Any unauthorized review, use, disclosure or distribution is prohibited.
      If you are not the intended recipient, please contact the sender by 
      reply email and destroy all copies of the original message.
      To reply to our email administrator directly, select the following 
      <mailto:postmaster at sepia.com> 
      **************************************************************************** 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020617/a67f7b9b/attachment.html>

From paul at toolscenter.org  Mon Jun 17 17:49:25 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Tue, 18 Jun 2002 09:49:25 +0900
Subject: [OSRS-PROJ] Proj4 documentation
References: <AF61F9CCF15AD11197E40060B067D679590865@SERVER_1> <003301c21615$fb10ed30$0a00005a@HAL.cylabinc.com>
Message-ID: <003601c21661$ff81ca50$700201c0@MAPQUEST.local>

Sounds a bit selfish. Having finished your project, it is just nice to help
others too.

Best regards,
Paul.

  ----- Original Message -----
  From: Greg Morrison
  To: osrs-proj at remotesensing.org
  Sent: Tuesday, June 18, 2002 12:45 AM
  Subject: Re: [OSRS-PROJ] Proj4 documentation


  Kick me off of this group, too.  I sent an email to the listserv, but I'm
still getting email.  This group was helpful, but I am done with my project
now...
    ----- Original Message -----
    From: Norman, Jamie
    To: 'osrs-proj at remotesensing.org'
    Sent: Monday, June 17, 2002 10:35 AM
    Subject: RE: [OSRS-PROJ] Proj4 documentation


    How do I get off of this group mail?
      -----Original Message-----
      From: Paul Selormey [mailto:paul at toolscenter.org]
      Sent: Saturday, June 15, 2002 11:12 PM
      To: osrs-proj at remotesensing.org
      Subject: Re: [OSRS-PROJ] Proj4 documentation


      Hello Mike,
      This is a good news. Proj4 is being used in many projects. Therefore
updated
      and current documentation is very much welcomed.
      For the formats you wish to produce, I suggest you use LaTeX. You can
get
      dvi, pdf, ps outputs for free! Also, there are many converters to html
and I
      think xml (never used any).

      Do you have access to the original documentation sources (not the
pdf)?

      Best regards,
      Paul.

        ----- Original Message -----
        From: Mike Schmidt
        To: osrs-proj at remotesensing.org
        Sent: Sunday, June 16, 2002 3:48 AM
        Subject: [OSRS-PROJ] Proj4 documentation


        Hello,

        With Frank Warmerdam's kind permission, and after some email
exchanges with Gerald Evenden, I have volunteered to take over the
documentation for Proj4. Sadly, this does not mean there will be a new
manual tomorrow, or even the next day. It will take me some time to gather
and integrate all the current information. With a little luck, I hope to
have something in place by the fall. The new documentation sources will be
placed in the proj4 cvs, and will therefore be accessible to everyone. The
intent is to produce pdf output, probably html, and possibly xml. The exact
toolset that will be used is not definite yet. I am not planning any
translations from English at this point. You will be welcome and even
encouraged to volunteer to translate once the originals are in CVS.

        I welcome all your suggestions, comments, etc. Please email me at
the address below or email this list, clearly indicating in the subject line
that your message is for the proj4 documentation. Please don't mix
documentation comments with other types of comments, I may miss them in that
case.

        Thanks very much,

        Mike

        ________________________________________________________
        Mike Schmidt                        Systèmes Scientifiques SEPIA
        President                              SEPIA Scientific Systems
        Tel: 450-358-2266                  100 Richelieu, suite 2000
        Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
        e-mail: mike at sepia.com        Québec, Canada J3B 6X3
        http://www.sepia.com            http://www.intello.com


****************************************************************************
        This email message is for the sole use of the intended recipient(s)
        and may contain confidential and privileged information.
        Any unauthorized review, use, disclosure or distribution is
prohibited.
        If you are not the intended recipient, please contact the sender by
        reply email and destroy all copies of the original message.
        To reply to our email administrator directly, select the following
        <mailto:postmaster at sepia.com>

****************************************************************************

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020618/d30a1658/attachment.html>

From pramsey at refractions.net  Mon Jun 17 18:46:12 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Mon, 17 Jun 2002 18:46:12 -0700
Subject: [OSRS-PROJ] Proj4 documentation
References: <AF61F9CCF15AD11197E40060B067D679590865@SERVER_1> <003301c21615$fb10ed30$0a00005a@HAL.cylabinc.com> <003601c21661$ff81ca50$700201c0@MAPQUEST.local>
Message-ID: <3D0E90E4.92902107@refractions.net>

Hi Mike,
I have found that XML docbook is a pretty good format for documentaion.
OpenJade can be used to generate HTML online documents from the source,
and there is also a passable docbook to PDF conversion script available.
Since docbook is text based, using it in a CVS context works fine too. I
guess the hardest part you will find with the proj documentation is
handling the many diagrams.
Paul

----- Original Message ----- 
From: Mike Schmidt 
To: osrs-proj at remotesensing.org 
Sent: Sunday, June 16, 2002 3:48 AM
Subject: [OSRS-PROJ] Proj4 documentation

Hello, 

With Frank Warmerdam's kind permission, and after some email
exchanges with Gerald Evenden, I have volunteered to take over the
documentation for Proj4. Sadly, this does not mean there will be a new
manual tomorrow, or even the next day. It will take me some time to
gather and integrate all the current information. With a little luck, I
hope
to have something in place by the fall. The new documentation sources
will be placed in the proj4 cvs, and will therefore be accessible to
everyone. The intent is to produce pdf output, probably html, and
possibly xml. The exact toolset that will be used is not definite yet. I
am
not planning any translations from English at this point. You will be
welcome and even encouraged to volunteer to translate once the
originals are in CVS. 

I welcome all your suggestions, comments, etc. Please email me at the
address below or email this list, clearly indicating in the subject line
that
your message is for the proj4 documentation. Please don't mix
documentation comments with other types of comments, I may miss
them in that case.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Mon Jun 17 19:14:02 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Tue, 18 Jun 2002 11:14:02 +0900
Subject: [OSRS-PROJ] Proj4 documentation
References: <AF61F9CCF15AD11197E40060B067D679590865@SERVER_1> <003301c21615$fb10ed30$0a00005a@HAL.cylabinc.com> <003601c21661$ff81ca50$700201c0@MAPQUEST.local> <3D0E90E4.92902107@refractions.net>
Message-ID: <000701c2166d$d1c721d0$700201c0@MAPQUEST.local>

Hello Paul,
DocBook is really a nice choice, but...

<cut>  :-) </cut>
<problems>

<problem  id = "1">
> I guess the hardest part you will find with the proj documentation is
> handling the many diagrams.
</problem>

<problem id = "2">
...and the projection equations or formulas, with the associated symbols.
</problem>

</problems>

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From pramsey at refractions.net  Mon Jun 17 21:49:33 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Mon, 17 Jun 2002 21:49:33 -0700
Subject: [OSRS-PROJ] Proj4 documentation
References: <AF61F9CCF15AD11197E40060B067D679590865@SERVER_1>
 <003301c21615$fb10ed30$0a00005a@HAL.cylabinc.com>
 <003601c21661$ff81ca50$700201c0@MAPQUEST.local>
 <3D0E90E4.92902107@refractions.net>
 <000701c2166d$d1c721d0$700201c0@MAPQUEST.local>
Message-ID: <3D0EBBDD.84B0C63E@refractions.net>

I'd recommend LaTeX, but LaTeX causes impotence, and blindness in white
mice.

Paul Selormey wrote:
> 
> Hello Paul,
> DocBook is really a nice choice, but...
> 
> <cut>  :-) </cut>
> <problems>
> 
> <problem  id = "1">
> > I guess the hardest part you will find with the proj documentation is
> > handling the many diagrams.
> </problem>
> 
> <problem id = "2">
> ...and the projection equations or formulas, with the associated symbols.
> </problem>
> 
> </problems>
> 
> Best regards,
> Paul.
> 
> ----------------------------------------
> PROJ.4 Discussion List
> See http://www.remotesensing.org/proj for subscription, unsubscription
> and other information.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From GalbraithP at dfo-mpo.gc.ca  Tue Jun 18 09:14:35 2002
From: GalbraithP at dfo-mpo.gc.ca (Peter S Galbraith)
Date: Tue, 18 Jun 2002 12:14:35 -0400
Subject: [OSRS-PROJ] Proj4 documentation 
In-Reply-To: Mike Schmidt's message of Sat, 15 Jun 2002 14:48:17 -0400 
       <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> 
References: <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> 
Message-ID: <20020618161435.B784F294EE@mixing.qc.dfo.ca>

Mike Schmidt <mike at sepia.com> wrote:

> With Frank Warmerdam's kind permission, and after some email exchanges
> with Gerald Evenden, I have volunteered to take over the documentation
> for Proj4.

Great news!

Have you considered what license this work will be placed under?
It would be nice if it were free.  I can certainly try to help with that
when the time comes.

Peter


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From mike at sepia.com  Tue Jun 18 09:41:09 2002
From: mike at sepia.com (Mike Schmidt)
Date: Tue, 18 Jun 2002 12:41:09 -0400
Subject: [OSRS-PROJ] Proj4 documentation 
In-Reply-To: <20020618161435.B784F294EE@mixing.qc.dfo.ca>
References: <Mike Schmidt's message of Sat, 15 Jun 2002 14:48:17 -0400  <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com>
 <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com>
Message-ID: <5.1.0.14.0.20020618123913.0298cf98@deepspace.sepia.com>

Hello Peter

Absolutely. The intent is that the documentation be free, source included. 
Of course, we have to maintain some form of copyright, I think. Exactly 
what license this implies, I don't know yet. If you can help with that, 
I'll appreciate it, having only very little experience in these matters.

At 12:14 PM 18/06/2002 -0400, Peter S Galbraith wrote:
>Mike Schmidt <mike at sepia.com> wrote:
>
> > With Frank Warmerdam's kind permission, and after some email exchanges
> > with Gerald Evenden, I have volunteered to take over the documentation
> > for Proj4.
>
>Great news!
>
>Have you considered what license this work will be placed under?
>It would be nice if it were free.  I can certainly try to help with that
>when the time comes.
>
>Peter
>
>
>----------------------------------------
>PROJ.4 Discussion List
>See http://www.remotesensing.org/proj for subscription, unsubscription
>and other information.

________________________________________________________
Mike Schmidt                        Systèmes Scientifiques SEPIA
President                              SEPIA Scientific Systems
Tel: 450-358-2266                  100 Richelieu, suite 2000
Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
e-mail: mike at sepia.com        Québec, Canada J3B 6X3
http://www.sepia.com             http://www.intello.com

****************************************************************************
This email message is for the sole use of the intended recipient(s)
and may contain confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by
reply email and destroy all copies of the original message.
To reply to our email administrator directly, select the following
<mailto:postmaster at sepia.com>
**************************************************************************** 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020618/92452cd4/attachment.html>

From warmerdam at pobox.com  Tue Jun 18 10:34:40 2002
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 18 Jun 2002 13:34:40 -0400
Subject: [OSRS-PROJ] Proj4 documentation
References: <Mike Schmidt's message of Sat, 15 Jun 2002 14:48:17 -0400  <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> <5.1.0.14.0.20020618123913.0298cf98@deepspace.sepia.com>
Message-ID: <3D0F6F30.5000301@pobox.com>

Mike Schmidt wrote:
> Hello Peter
> 
> Absolutely. The intent is that the documentation be free, source 
> included. Of course, we have to maintain some form of copyright, I 
> think. Exactly what license this implies, I don't know yet. If you can 
> help with that, I'll appreciate it, having only very little experience 
> in these matters.
> 

Mike,

Well, in the interest of simplicity, it would be nice to put it under the
same license as the rest of PROJ.4.  One issue is whether you are willing to
let commercial users of PROJ.4 modify and incorporate the PROJ.4 documentation
into their own documentation sets or not.  I would prefer that this is possible,
but it is up to you (and/or Gerald depending on whether or not the original
documentation was public domain like the rest of PROJ.4).

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From GalbraithP at dfo-mpo.gc.ca  Tue Jun 18 10:50:40 2002
From: GalbraithP at dfo-mpo.gc.ca (Peter S Galbraith)
Date: Tue, 18 Jun 2002 13:50:40 -0400
Subject: [OSRS-PROJ] Proj4 documentation 
In-Reply-To: Mike Schmidt's message of Tue, 18 Jun 2002 12:41:09 -0400 
       <5.1.0.14.0.20020618123913.0298cf98@deepspace.sepia.com> 
References: <Mike Schmidt's message of Sat, 15 Jun 2002 14:48:17 -0400 <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> <5.1.0.14.0.20020618123913.0298cf98@deepspace.sepia.com> 
Message-ID: <20020618175040.35CC4294EE@mixing.qc.dfo.ca>

Mike Schmidt <mike at sepia.com> wrote:

> Hello Peter
> 
> Absolutely. The intent is that the documentation be free, source
> included. Of course, we have to maintain some form of copyright, I
> think. Exactly what license this implies, I don't know yet. If you can
> help with that, I'll appreciate it, having only very little experience
> in these matters.

That's great Mike.  Many people have started to use the GNU FDL (Free
Document License), http://www.gnu.org/copyleft/fdl.html

However this license has some 'optional' features (invariant sections
and cover texts) which can render it non-free (as least according to the
Debian project).

The FDL is fine if these options aren't exercised, and but it's debated
when they are used.

Of course, you can probably use the GPL as well.

I'd be happy to help as quetions arise.  I am not a lawyer, but as a
member of the Debian project, it's a subject that I care about and will
try to help.  I'll want to package the documention for Debian as well.

Thanks,

Peter


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From GalbraithP at dfo-mpo.gc.ca  Tue Jun 18 10:56:16 2002
From: GalbraithP at dfo-mpo.gc.ca (Peter S Galbraith)
Date: Tue, 18 Jun 2002 13:56:16 -0400
Subject: [OSRS-PROJ] Proj4 documentation 
In-Reply-To: Frank Warmerdam's message of Tue, 18 Jun 2002 13:34:40 -0400 
       <3D0F6F30.5000301@pobox.com> 
References: <Mike Schmidt's message of Sat, 15 Jun 2002 14:48:17 -0400 <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> <5.1.0.14.0.20020615143928.0326e550@deepspace.sepia.com> <5.1.0.14.0.20020618123913.0298cf98@deepspace.sepia.com> <3D0F6F30.5000301@pobox.com> 
Message-ID: <20020618175616.C90DD294EE@mixing.qc.dfo.ca>

Frank Warmerdam <warmerdam at pobox.com> wrote:

> Mike Schmidt wrote:
> > Hello Peter
> > 
> > Absolutely. The intent is that the documentation be free, source 
> > included. Of course, we have to maintain some form of copyright, I 
> > think. Exactly what license this implies, I don't know yet. If you can 
> > help with that, I'll appreciate it, having only very little experience 
> > in these matters.
> 
> Mike,
> 
> Well, in the interest of simplicity, it would be nice to put it under
> the same license as the rest of PROJ.4.  One issue is whether you are
> willing to let commercial users of PROJ.4 modify and incorporate the
> PROJ.4 documentation into their own documentation sets or not.  I
> would prefer that this is possible

In the same vein, having a proj-compatible license would allow someone 
to create a GUI capable of displaying parts of the manual in a
context-sensitive manner.  You might consider using the current proj
license verbatim.  It's about as free as a license can get, and it
wouldn't infect a project combined with proj in a way the GPL would.

Peter
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Wed Jun 19 23:26:22 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Thu, 20 Jun 2002 15:26:22 +0900
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
Message-ID: <000d01c21823$6750b660$700201c0@MAPQUEST.local>

Hello All,
I wish to report that the initial part of my work on the Proj4
library is ready. This initial part involves mainly removing the macros
and some of the #defines.
Unfortunately, the proj4 mailing list has no file section like the related
lists being hosted on yahoo.groups so I do not know where to upload the
files.

I could send the files to anyone interested in testing the results, and I
wish
to post them to the related mailing lists file sections like the GDAL
mailing
list so that all can download it.

Please I really need your support to complete this work. I have not yet
started using the library in my projects and therefore cannot provide
effective
testing, please help. Simply use it as the previous and see if there is any
change.
There is no expected change, since the work so far is all about removing the
macros to make the codes more readable.

I am working on Windows and have created VC++6.0 workspace for the
projection
library. The workspace has
1. proj4 DLL project
2. proj4 static library project
3. projects for all the utility programs like cs2cs, proj etc. The utility
programs
   are linked to the static library.
4. A simple console test program, which uses the DLL version.
I have attached a screenshot to show the workspace. I hope this will make it
easier to Windows users with VC++6.0 to play with the sources.

The "zipped" workspace is about 286 KB.

The output of the projects are created in a subfolder/directory, named
"Output".

I have left the macros still in the sources - only commented them out.
After enough test, I will remove all.

Another request, please can you send me some test programs and data. It can
simply
be the proj.exe command line for various projections you use, some values
and
the expected output. These will help me test most of the projections. In
fact, any
other help will be very much appreciated.

Please write directly to me if possible.

Best regards,
Paul.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: wkspace.jpg
Type: image/jpeg
Size: 16490 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020620/6050a702/attachment.jpg>

From mike at sepia.com  Wed Jun 19 23:52:37 2002
From: mike at sepia.com (Mike Schmidt)
Date: Thu, 20 Jun 2002 02:52:37 -0400
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
In-Reply-To: <000d01c21823$6750b660$700201c0@MAPQUEST.local>
Message-ID: <5.1.0.14.0.20020620024702.031bd3b0@deepspace.sepia.com>

Hello All,

In response to Paul's message, my initial thought would be that it would be 
best to
crate a branch for this in the CVS for Proj4. This is the way we do this 
kind of thing in
my company, and it makes the management easy. It definitely makes it easy 
to check for differences
and such, and once the work is complete and tested, it can easily be merged 
into the main branch
by the maintainer. This also allows the maintainer to make changes in the 
main branch that do not get lost
in the final merge.

I don't have any experience at this time with the Proj4 or 
remotesensing.org CVS conventions,
so I don't know if this is a reasonable approach in the circumstances.

Of course, Frank Warmerdam must be in agreement (and maybe create the 
inital brnaching).

Mike

At 03:26 PM 20/06/2002 +0900, Paul Selormey wrote:
>Hello All,
>I wish to report that the initial part of my work on the Proj4
>library is ready. This initial part involves mainly removing the macros
>and some of the #defines.
>Unfortunately, the proj4 mailing list has no file section like the related
>lists being hosted on yahoo.groups so I do not know where to upload the
>files.
>
>I could send the files to anyone interested in testing the results, and I
>wish
>to post them to the related mailing lists file sections like the GDAL
>mailing
>list so that all can download it.
>
>Please I really need your support to complete this work. I have not yet
>started using the library in my projects and therefore cannot provide
>effective
>testing, please help. Simply use it as the previous and see if there is any
>change.
>There is no expected change, since the work so far is all about removing the
>macros to make the codes more readable.
>
>I am working on Windows and have created VC++6.0 workspace for the
>projection
>library. The workspace has
>1. proj4 DLL project
>2. proj4 static library project
>3. projects for all the utility programs like cs2cs, proj etc. The utility
>programs
>    are linked to the static library.
>4. A simple console test program, which uses the DLL version.
>I have attached a screenshot to show the workspace. I hope this will make it
>easier to Windows users with VC++6.0 to play with the sources.
>
>The "zipped" workspace is about 286 KB.
>
>The output of the projects are created in a subfolder/directory, named
>"Output".
>
>I have left the macros still in the sources - only commented them out.
>After enough test, I will remove all.
>
>Another request, please can you send me some test programs and data. It can
>simply
>be the proj.exe command line for various projections you use, some values
>and
>the expected output. These will help me test most of the projections. In
>fact, any
>other help will be very much appreciated.
>
>Please write directly to me if possible.
>
>Best regards,
>Paul.
>

________________________________________________________
Mike Schmidt                        Systèmes Scientifiques SEPIA
President                              SEPIA Scientific Systems
Tel: 450-358-2266                  100 Richelieu, suite 2000
Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
e-mail: mike at sepia.com        Québec, Canada J3B 6X3
http://www.sepia.com             http://www.intello.com

****************************************************************************
This email message is for the sole use of the intended recipient(s)
and may contain confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by
reply email and destroy all copies of the original message.
To reply to our email administrator directly, select the following
<mailto:postmaster at sepia.com>
**************************************************************************** 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020620/08f1f67a/attachment.html>

From Frans.de.Roos at epl.ericsson.se  Thu Jun 20 00:06:48 2002
From: Frans.de.Roos at epl.ericsson.se (Frans de Roos (EPL))
Date: Thu, 20 Jun 2002 09:06:48 +0200
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
Message-ID: <9505F6390AA7D311A2D500508B951BEF07F0A522@esealnt427>

Hello Mike
 
You are taking about CVS. Do you have any information on how to set up the CVS on a windows 2000 machine?
Is it simple?
 
Does it exists any package that sets up the CVS on a W2k-machine?
 
Frans
 

-----Original Message-----
From: Mike Schmidt [mailto:mike at sepia.com]
Sent: den 20 juni 2002 08:53
To: osrs-proj at remotesensing.org; osrs-proj at remotesensing.org
Subject: Re: [OSRS-PROJ] <Update>:Initial step ready for testing


Hello All,

In response to Paul's message, my initial thought would be that it would be best to
crate a branch for this in the CVS for Proj4. This is the way we do this kind of thing in 
my company, and it makes the management easy. It definitely makes it easy to check for differences
and such, and once the work is complete and tested, it can easily be merged into the main branch 
by the maintainer. This also allows the maintainer to make changes in the main branch that do not get lost 
in the final merge. 

I don't have any experience at this time with the Proj4 or remotesensing.org CVS conventions, 
so I don't know if this is a reasonable approach in the circumstances. 

Of course, Frank Warmerdam must be in agreement (and maybe create the inital brnaching). 

Mike

At 03:26 PM 20/06/2002 +0900, Paul Selormey wrote:


Hello All,
I wish to report that the initial part of my work on the Proj4
library is ready. This initial part involves mainly removing the macros
and some of the #defines.
Unfortunately, the proj4 mailing list has no file section like the related
lists being hosted on yahoo.groups so I do not know where to upload the
files.

I could send the files to anyone interested in testing the results, and I
wish
to post them to the related mailing lists file sections like the GDAL
mailing
list so that all can download it.

Please I really need your support to complete this work. I have not yet
started using the library in my projects and therefore cannot provide
effective
testing, please help. Simply use it as the previous and see if there is any
change.
There is no expected change, since the work so far is all about removing the
macros to make the codes more readable.

I am working on Windows and have created VC++6.0 workspace for the
projection
library. The workspace has
1. proj4 DLL project
2. proj4 static library project
3. projects for all the utility programs like cs2cs, proj etc. The utility
programs
   are linked to the static library.
4. A simple console test program, which uses the DLL version.
I have attached a screenshot to show the workspace. I hope this will make it
easier to Windows users with VC++6.0 to play with the sources.

The "zipped" workspace is about 286 KB.

The output of the projects are created in a subfolder/directory, named
"Output".

I have left the macros still in the sources - only commented them out.
After enough test, I will remove all.

Another request, please can you send me some test programs and data. It can
simply
be the proj.exe command line for various projections you use, some values
and
the expected output. These will help me test most of the projections. In
fact, any
other help will be very much appreciated.

Please write directly to me if possible.

Best regards,
Paul.



________________________________________________________
Mike Schmidt                        Systèmes Scientifiques SEPIA
President                              SEPIA Scientific Systems
Tel: 450-358-2266                  100 Richelieu, suite 2000     
Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
e-mail: mike at sepia.com        Québec, Canada J3B 6X3
http://www.sepia.com <http://www.sepia.com            />             http://www.intello.com <http://www.intello.com/>  

**************************************************************************** 
This email message is for the sole use of the intended recipient(s)
and may contain confidential and privileged information. 
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by 
reply email and destroy all copies of the original message.
To reply to our email administrator directly, select the following 
<  <mailto:postmaster at sepia.com> mailto:postmaster at sepia.com> 
**************************************************************************** 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020620/7e1b9550/attachment.html>

From paul at toolscenter.org  Thu Jun 20 00:20:55 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Thu, 20 Jun 2002 16:20:55 +0900
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
References: <5.1.0.14.0.20020620024702.031bd3b0@deepspace.sepia.com>
Message-ID: <003c01c2182b$05daf050$700201c0@MAPQUEST.local>

Hello Frans de Roos,
Sorry, this is off-topic:

I have emailed you the file twice and sent an email after too, all
simply returned back. What is up?

I used
Frans de Roos (EPL) <Frans.de.Roos at epl.ericsson.se>

Here is part of the message returned:

*****************************************************************

This message was created automatically by mail delivery software.

A message that you sent could not be delivered to all of its recipients. The
following address(es) failed:

  Frans.de.Roos at epl.ericsson.se:
    SMTP error from remote mailer after RCPT TO:
    <Frans.de.Roos at epl.ericsson.se>:
    host condor-ext.wise.edt.ericsson.se [193.180.251.37]:
    553 5.3.0 <Frans.de.Roos at epl.ericsson.se>... Mail from 195.20.224.200
rejected;see http://mail-abuse.org/cgi-bin/lookup? 195.20.224.200

------ This is a copy of the message, including all the headers. ------
------ The body of the message is 396595 characters long; only the first
------ 10240 or so are included here.

*****************************************************************

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Thu Jun 20 00:26:24 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Thu, 20 Jun 2002 16:26:24 +0900
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
References: <9505F6390AA7D311A2D500508B951BEF07F0A522@esealnt427>
Message-ID: <004901c2182b$ca209af0$700201c0@MAPQUEST.local>

Hello Frans,
It is simple. You can start with www.wincvs.org for some Windows tools.
If you really want to get into it, a book on CVS is also recommend - there
is
a new book on it. I have it at home but do not remember the exact title now.


Best regards,
Paul.

  ----- Original Message -----
  From: Frans de Roos (EPL)
  To: 'osrs-proj at remotesensing.org'
  Sent: Thursday, June 20, 2002 4:06 PM
  Subject: RE: [OSRS-PROJ] <Update>:Initial step ready for testing


  Hello Mike

  You are taking about CVS. Do you have any information on how to set up the
CVS on a windows 2000 machine?
  Is it simple?

  Does it exists any package that sets up the CVS on a W2k-machine?

  Frans

    -----Original Message-----
    From: Mike Schmidt [mailto:mike at sepia.com]
    Sent: den 20 juni 2002 08:53
    To: osrs-proj at remotesensing.org; osrs-proj at remotesensing.org
    Subject: Re: [OSRS-PROJ] <Update>:Initial step ready for testing


    Hello All,

    In response to Paul's message, my initial thought would be that it would
be best to
    crate a branch for this in the CVS for Proj4. This is the way we do this
kind of thing in
    my company, and it makes the management easy. It definitely makes it
easy to check for differences
    and such, and once the work is complete and tested, it can easily be
merged into the main branch
    by the maintainer. This also allows the maintainer to make changes in
the main branch that do not get lost
    in the final merge.

    I don't have any experience at this time with the Proj4 or
remotesensing.org CVS conventions,
    so I don't know if this is a reasonable approach in the circumstances.

    Of course, Frank Warmerdam must be in agreement (and maybe create the
inital brnaching).

    Mike

    At 03:26 PM 20/06/2002 +0900, Paul Selormey wrote:

      Hello All,
      I wish to report that the initial part of my work on the Proj4
      library is ready. This initial part involves mainly removing the
macros
      and some of the #defines.
      Unfortunately, the proj4 mailing list has no file section like the
related
      lists being hosted on yahoo.groups so I do not know where to upload
the
      files.

      I could send the files to anyone interested in testing the results,
and I
      wish
      to post them to the related mailing lists file sections like the GDAL
      mailing
      list so that all can download it.

      Please I really need your support to complete this work. I have not
yet
      started using the library in my projects and therefore cannot provide
      effective
      testing, please help. Simply use it as the previous and see if there
is any
      change.
      There is no expected change, since the work so far is all about
removing the
      macros to make the codes more readable.

      I am working on Windows and have created VC++6.0 workspace for the
      projection
      library. The workspace has
      1. proj4 DLL project
      2. proj4 static library project
      3. projects for all the utility programs like cs2cs, proj etc. The
utility
      programs
         are linked to the static library.
      4. A simple console test program, which uses the DLL version.
      I have attached a screenshot to show the workspace. I hope this will
make it
      easier to Windows users with VC++6.0 to play with the sources.

      The "zipped" workspace is about 286 KB.

      The output of the projects are created in a subfolder/directory, named
      "Output".

      I have left the macros still in the sources - only commented them out.
      After enough test, I will remove all.

      Another request, please can you send me some test programs and data.
It can
      simply
      be the proj.exe command line for various projections you use, some
values
      and
      the expected output. These will help me test most of the projections.
In
      fact, any
      other help will be very much appreciated.

      Please write directly to me if possible.

      Best regards,
      Paul.


    ________________________________________________________
    Mike Schmidt                        Systèmes Scientifiques SEPIA
    President                              SEPIA Scientific Systems
    Tel: 450-358-2266                  100 Richelieu, suite 2000
    Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
    e-mail: mike at sepia.com        Québec, Canada J3B 6X3
    http://www.sepia.com            http://www.intello.com


****************************************************************************
    This email message is for the sole use of the intended recipient(s)
    and may contain confidential and privileged information.
    Any unauthorized review, use, disclosure or distribution is prohibited.
    If you are not the intended recipient, please contact the sender by
    reply email and destroy all copies of the original message.
    To reply to our email administrator directly, select the following
    <mailto:postmaster at sepia.com>

****************************************************************************

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020620/6b6ec5e6/attachment.html>

From mike at sepia.com  Thu Jun 20 00:31:28 2002
From: mike at sepia.com (Mike Schmidt)
Date: Thu, 20 Jun 2002 03:31:28 -0400
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
In-Reply-To: <9505F6390AA7D311A2D500508B951BEF07F0A522@esealnt427>
Message-ID: <5.1.0.14.0.20020620032559.03223ea8@deepspace.sepia.com>

Hello, Frans

In order to use CVS as a client you only need the client software. The 
server is a remotesensing.org, I believe.
For windows, I use WinCVS (www.wincvs.org) which install easily and is no 
problem to configure. We use this internally
on all our Windows machines (WinNT4, Win2k, and XP) and have done so for 
years.

There are two ways to handle this - Paul can use the cvs server to install 
his code, and then generate a zip file from it, or Frank can permit you to 
use CVS in read-only mode (which is the way it is usually used on 
SourceForge and other systems managing open source.

We'll have to wait for Frank to decide what's best in this case.

Mike

At 09:06 AM 20/06/2002 +0200, Frans de Roos (EPL) wrote:
>Hello Mike
>
>You are taking about CVS. Do you have any information on how to set up the 
>CVS on a windows 2000 machine?
>Is it simple?
>
>Does it exists any package that sets up the CVS on a W2k-machine?
>
>Frans
>
>-----Original Message-----
>From: Mike Schmidt [mailto:mike at sepia.com]
>Sent: den 20 juni 2002 08:53
>To: osrs-proj at remotesensing.org; osrs-proj at remotesensing.org
>Subject: Re: [OSRS-PROJ] <Update>:Initial step ready for testing
>
>Hello All,
>
>In response to Paul's message, my initial thought would be that it would 
>be best to
>crate a branch for this in the CVS for Proj4. This is the way we do this 
>kind of thing in
>my company, and it makes the management easy. It definitely makes it easy 
>to check for differences
>and such, and once the work is complete and tested, it can easily be 
>merged into the main branch
>by the maintainer. This also allows the maintainer to make changes in the 
>main branch that do not get lost
>in the final merge.
>
>I don't have any experience at this time with the Proj4 or 
>remotesensing.org CVS conventions,
>so I don't know if this is a reasonable approach in the circumstances.
>
>Of course, Frank Warmerdam must be in agreement (and maybe create the 
>inital brnaching).
>
>Mike
>
>At 03:26 PM 20/06/2002 +0900, Paul Selormey wrote:
>>Hello All,
>>I wish to report that the initial part of my work on the Proj4
>>library is ready. This initial part involves mainly removing the macros
>>and some of the #defines.
>>Unfortunately, the proj4 mailing list has no file section like the related
>>lists being hosted on yahoo.groups so I do not know where to upload the
>>files.
>>
>>I could send the files to anyone interested in testing the results, and I
>>wish
>>to post them to the related mailing lists file sections like the GDAL
>>mailing
>>list so that all can download it.
>>
>>Please I really need your support to complete this work. I have not yet
>>started using the library in my projects and therefore cannot provide
>>effective
>>testing, please help. Simply use it as the previous and see if there is any
>>change.
>>There is no expected change, since the work so far is all about removing the
>>macros to make the codes more readable.
>>
>>I am working on Windows and have created VC++6.0 workspace for the
>>projection
>>library. The workspace has
>>1. proj4 DLL project
>>2. proj4 static library project
>>3. projects for all the utility programs like cs2cs, proj etc. The utility
>>programs
>>    are linked to the static library.
>>4. A simple console test program, which uses the DLL version.
>>I have attached a screenshot to show the workspace. I hope this will make it
>>easier to Windows users with VC++6.0 to play with the sources.
>>
>>The "zipped" workspace is about 286 KB.
>>
>>The output of the projects are created in a subfolder/directory, named
>>"Output".
>>
>>I have left the macros still in the sources - only commented them out.
>>After enough test, I will remove all.
>>
>>Another request, please can you send me some test programs and data. It can
>>simply
>>be the proj.exe command line for various projections you use, some values
>>and
>>the expected output. These will help me test most of the projections. In
>>fact, any
>>other help will be very much appreciated.
>>
>>Please write directly to me if possible.
>>
>>Best regards,
>>Paul.
>________________________________________________________
>Mike Schmidt                        Systèmes Scientifiques SEPIA
>President                              SEPIA Scientific Systems
>Tel: 450-358-2266                  100 Richelieu, suite 2000
>Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
>e-mail: mike at sepia.com        Québec, Canada J3B 6X3
>http://www.sepia.com            http://www.intello.com
>
>****************************************************************************
>This email message is for the sole use of the intended recipient(s)
>and may contain confidential and privileged information.
>Any unauthorized review, use, disclosure or distribution is prohibited.
>If you are not the intended recipient, please contact the sender by
>reply email and destroy all copies of the original message.
>To reply to our email administrator directly, select the following
><mailto:postmaster at sepia.com>
>****************************************************************************

________________________________________________________
Mike Schmidt                        Systèmes Scientifiques SEPIA
President                              SEPIA Scientific Systems
Tel: 450-358-2266                  100 Richelieu, suite 2000
Fax: 450-358-2267                 Saint-Jean-sur-Richelieu
e-mail: mike at sepia.com        Québec, Canada J3B 6X3
http://www.sepia.com             http://www.intello.com

****************************************************************************
This email message is for the sole use of the intended recipient(s)
and may contain confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited.
If you are not the intended recipient, please contact the sender by
reply email and destroy all copies of the original message.
To reply to our email administrator directly, select the following
<mailto:postmaster at sepia.com>
**************************************************************************** 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20020620/715e58fb/attachment.html>

From Frans.de.Roos at epl.ericsson.se  Thu Jun 20 01:44:51 2002
From: Frans.de.Roos at epl.ericsson.se (Frans de Roos (EPL))
Date: Thu, 20 Jun 2002 10:44:51 +0200
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
Message-ID: <9505F6390AA7D311A2D500508B951BEF07F0A523@esealnt427>

I don't know!

Email the file to:
fdr at algonet.se

Frans

-----Original Message-----
From: Paul Selormey [mailto:paul at toolscenter.org]
Sent: den 20 juni 2002 09:21
To: osrs-proj at remotesensing.org
Subject: Re: [OSRS-PROJ] <Update>:Initial step ready for testing


Hello Frans de Roos,
Sorry, this is off-topic:

I have emailed you the file twice and sent an email after too, all
simply returned back. What is up?

I used
Frans de Roos (EPL) <Frans.de.Roos at epl.ericsson.se>

Here is part of the message returned:

*****************************************************************

This message was created automatically by mail delivery software.

A message that you sent could not be delivered to all of its recipients. The
following address(es) failed:

  Frans.de.Roos at epl.ericsson.se:
    SMTP error from remote mailer after RCPT TO:
    <Frans.de.Roos at epl.ericsson.se>:
    host condor-ext.wise.edt.ericsson.se [193.180.251.37]:
    553 5.3.0 <Frans.de.Roos at epl.ericsson.se>... Mail from 195.20.224.200
rejected;see http://mail-abuse.org/cgi-bin/lookup? 195.20.224.200

------ This is a copy of the message, including all the headers. ------
------ The body of the message is 396595 characters long; only the first
------ 10240 or so are included here.

*****************************************************************

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.
----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From warmerdam at pobox.com  Thu Jun 20 06:28:06 2002
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Thu, 20 Jun 2002 09:28:06 -0400
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
References: <000d01c21823$6750b660$700201c0@MAPQUEST.local>
Message-ID: <3D11D866.3080108@pobox.com>


Folks,

I will provide Mike and Paul with CVS update access, and accounts on
remotesensing.org so they can put stuff on the ftp tree and so forth.

I am not enthusiastic about introducing a CVS branch for Paul's work since
it seems to me it will continue to diverge over time from traditional
PROJ.4.  However, Paul, if you would like I could clone the CVS tree for
PROJ, and make you a proj_nt CVS project to start committing your changes to.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


From paul at toolscenter.org  Thu Jun 20 07:52:13 2002
From: paul at toolscenter.org (Paul Selormey)
Date: Thu, 20 Jun 2002 23:52:13 +0900
Subject: [OSRS-PROJ] <Update>:Initial step ready for testing
References: <000d01c21823$6750b660$700201c0@MAPQUEST.local> <3D11D866.3080108@pobox.com>
Message-ID: <007701c2186a$126a1fa0$700201c0@MAPQUEST.local>

Hello Frank,
Thanks for the response.

> I will provide Mike and Paul with CVS update access, and accounts on
> remotesensing.org so they can put stuff on the ftp tree and so forth.

We will very much appreciate that.

> I am not enthusiastic about introducing a CVS branch for Paul's work since
> it seems to me it will continue to diverge over time from traditional
PROJ.4.

I do not hope to diverge from the traditional PROJ.4 with the current
version.
I will continue to improve the sources but maintained the tradition! Through
this,
I hope to have control over the sources and then start the C++ version,
which
may break the tradition, compatible C interfaces will be maintained for easy
update!

In any case, a different CVS tree is welcomed.

> However, Paul, if you would like I could clone the CVS tree for
> PROJ, and make you a proj_nt CVS project to start committing your changes
to.

Agreed. I will do my best to make the most out of it.

BTW, my response to your email bounced back, I will try to create a new
email account.

I have just found out that my ISP is listed in the blacklist and this might
be the cause of the bouncing back of my emails.

Best regards,
Paul.


----------------------------------------
PROJ.4 Discussion List
See http://www.remotesensing.org/proj for subscription, unsubscription
and other information.


