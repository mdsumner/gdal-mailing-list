From aborruso at gmail.com  Sun Feb  2 15:14:49 2020
From: aborruso at gmail.com (aborruso)
Date: Sun, 2 Feb 2020 16:14:49 -0700 (MST)
Subject: [PROJ] Help in setting proj parameters for an old map
Message-ID: <1580685289784-0.post@n6.nabble.com>

Hi,
I have discovered these fantastic public domains maps
https://legacy.lib.utexas.edu/maps/ams/italy_50k/

If you open a map you can read [1] that the projection is a Lambert Conic
Conformal and you have also the lat_0, lon_0, the Spheroid, the x_0 and the
y_0 of the map.

For a [2] LCC projection the lat_1 parameter (first standard parallel) is
required and it's possible to set also a second standard parallel (lat_2).

First question:

- what's the right lat_1 for this map?
- is it better to set also the lat_2? And if it's yes, what's the right one?

Thank you

[1
]https://user-images.githubusercontent.com/7631137/73595475-78b75080-4519-11ea-9c79-1968126c136d.png
[2] https://proj.org/operations/projections/lcc.html



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From phma at bezitopo.org  Sun Feb  2 16:28:06 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Sun, 02 Feb 2020 19:28:06 -0500
Subject: [PROJ] Help in setting proj parameters for an old map
In-Reply-To: <1580685289784-0.post@n6.nabble.com>
References: <1580685289784-0.post@n6.nabble.com>
Message-ID: <2074474.QNsRjk2YNE@puma>

On Sunday, 2 February 2020 18.14.49 EST aborruso wrote:
> Hi,
> I have discovered these fantastic public domains maps
> https://legacy.lib.utexas.edu/maps/ams/italy_50k/
> 
> If you open a map you can read [1] that the projection is a Lambert Conic
> Conformal and you have also the lat_0, lon_0, the Spheroid, the x_0 and the
> y_0 of the map.
> 
> For a [2] LCC projection the lat_1 parameter (first standard parallel) is
> required and it's possible to set also a second standard parallel (lat_2).
> 
> First question:
> 
> - what's the right lat_1 for this map?
> - is it better to set also the lat_2? And if it's yes, what's the right one?

I pulled up the map of Castelnuovo di Garfagnana. On the right, about a 
quarter of the way down, are the data:
Origin: 45°54'N 14°E
False coordinates of origin: 800000,601000
Scale factor: 0.998992911
With Lambert conformal conic, two parallels and a scale of 1 are equivalent to 
one parallel somewhere between them and a scale less than 1. Since there is a 
scale, which is slightly less than 1, I think that there is one parallel, 
which is 45°54'N.

I tried searching for "zona nord italia lambert" and the like, but didn't find 
it. Hopefully an Italian surveyor will pipe up soon.

Pierre
-- 
When a barnacle settles down, its brain disintegrates.
Já não percebe nada, já não percebe nada.




From aborruso at gmail.com  Sun Feb  2 22:33:26 2020
From: aborruso at gmail.com (aborruso)
Date: Sun, 2 Feb 2020 23:33:26 -0700 (MST)
Subject: [PROJ] Help in setting proj parameters for an old map
In-Reply-To: <2074474.QNsRjk2YNE@puma>
References: <1580685289784-0.post@n6.nabble.com> <2074474.QNsRjk2YNE@puma>
Message-ID: <1580711606035-0.post@n6.nabble.com>

Hi Pierre,
thank you.

And when I have map like this, without any Scale factor, 
located in the same country, can I suppose that it's always nearby 1?

http://legacy.lib.utexas.edu/maps/ams/italy_50k/txu-pclmaps-oclc-6540719-palermo-249-2.jpg

Best regards



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From phma at bezitopo.org  Mon Feb  3 00:22:53 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Mon, 03 Feb 2020 03:22:53 -0500
Subject: [PROJ] Help in setting proj parameters for an old map
In-Reply-To: <1580711606035-0.post@n6.nabble.com>
References: <1580685289784-0.post@n6.nabble.com> <2074474.QNsRjk2YNE@puma>
 <1580711606035-0.post@n6.nabble.com>
Message-ID: <10203690.1FeK4p8ybY@puma>

On Monday, 3 February 2020 01.33.26 EST aborruso wrote:
> Hi Pierre,
> thank you.
> 
> And when I have map like this, without any Scale factor,
> located in the same country, can I suppose that it's always nearby 1?
> 
> http://legacy.lib.utexas.edu/maps/ams/italy_50k/txu-pclmaps-oclc-6540719-pal
> ermo-249-2.jpg

I think it's more likely that the mapmaker forgot to put the scale factor. 
Check the other maps in the south Italy zone.

Pierre
-- 
sei do'anai mi'a djuno puze'e noroi nalselganse srera




From aborruso at gmail.com  Mon Feb  3 00:34:59 2020
From: aborruso at gmail.com (aborruso)
Date: Mon, 3 Feb 2020 01:34:59 -0700 (MST)
Subject: [PROJ] Help in setting proj parameters for an old map
In-Reply-To: <10203690.1FeK4p8ybY@puma>
References: <1580685289784-0.post@n6.nabble.com> <2074474.QNsRjk2YNE@puma>
 <1580711606035-0.post@n6.nabble.com> <10203690.1FeK4p8ybY@puma>
Message-ID: <1580718899235-0.post@n6.nabble.com>

Pierre Abbat wrote
> I think it's more likely that the mapmaker forgot to put the scale factor. 
> Check the other maps in the south Italy zone.

After clicking in a lot I have found this (a 0.99906 scale factor):
https://i.imgur.com/rchBzN9.png

Then I will use in this way in proj:

+proj=lcc +lat_0=39.50 +lon_0=14 +lat_1=39.50 +x_0=700000 +y_0=600000
+ellps=bessel +units=m +no_defs

Am I wrong?

Thank you again Pierre



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From mwtoews at gmail.com  Mon Feb  3 17:32:11 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 4 Feb 2020 14:32:11 +1300
Subject: [PROJ] Bump CMake version for PROJ 7.0
In-Reply-To: <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
References: <CAM2FmMo_K-eEoghyhM=Uta90u7TcZwT6gbO1WfJG9oFOBOa_gA@mail.gmail.com>
 <CAM2FmMoO9dmvy0A=0zYFH3UnPyWGZCTR+p_CJOnGouJy1A4Zyw@mail.gmail.com>
 <c72079d31ad0418b886044110606b640@sdfe.dk> <35923608.hR2LepVCPz@even-i700>
 <4D418CAF-EFA3-4023-BDB2-1B8E8898B810@hobu.co>
Message-ID: <CAM2FmMoq3Sjno2GjNp6_7_NK3wW7Htc4cRTRcX9PSNuBs8L5zg@mail.gmail.com>

Hi all,

The motion to increase the minimum CMake version from 3.5 to 3.9 is
passed with +1 from PSC members Kristian, Thomas, Even, Jeff, Charles,
and Howard.

See https://github.com/OSGeo/PROJ/pull/1907

For 2021 efforts, I'll look at setting CMake 3.13 as the next minimum version:
https://blog.kitware.com/cmake-3-13-0-available-for-download/

Cheers,
Mike

On Sat, 1 Feb 2020 at 04:15, Howard Butler <howard at hobu.co> wrote:
>
>
>
> > On Jan 31, 2020, at 3:01 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> >
> > On vendredi 31 janvier 2020 08:00:18 CET Kristian Evers wrote:
> >> I think a bump to 3.9 is a good idea. Per RFC3 we need the PSC to approve
> >> this,
> > so let's have a motion on the subject.
> >>
> >> I'll start with my +1
> >
> > +1
>
> +1
>
> I wonder if we could increase the minimum CMake requirement significantly further due to the fact that PROJ supports both CMake and autoconf for now. Do the packagers have an opinion on the topic?
>
> Howard
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From nyall.dawson at gmail.com  Mon Feb  3 23:11:58 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 4 Feb 2020 17:11:58 +1000
Subject: [PROJ] "Fallback" support for transformations
Message-ID: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>

Hi list,

Looking for advice on an issue we are seeing reported a lot downstream
at QGIS. Because proj 6 + the other associated changes in the stack
have made use of grid shift files much more transparent and easier for
users, we're seeing an associate uptake in users who are using
coordinate operations which require a grid in their work (which is
great!).

But... one downside of this is that operations based on a grid are
much stricter with respect to area of use -- if you try to transform
coordinates outside of the grid bounds, you (rightly) get null
results. This is in contrast to purely mathematical transforms, where
you still get... some... result outside of the area of use (albeit
possibly meaningless). This manifests in issues like
https://github.com/qgis/QGIS/issues/33929 -- where a user is trying to
use a grid based operation to transform features which fall outside
the grid bounds.

I'm seeking advice on what the best approach is to take with this. I
can see a few options:

1. Stand on the geodesic high-ground, and give null results -- the
selected operation can't be used for those coordinates, so it's a user
error. (the current approach in QGIS)

2. If a transform fails with the specified operation, fallback to
using proj_create_crs_to_crs_from_pj to create a "backup" transform
and let proj decide what to do. Benefits: users always get **some**
result. Downside: users always get **some** result, which may or may
not be using the operation they specified and could potentially be
misleading or inaccurate.

3. As above, but show a user-visible warning that a "fallback"
transformation was used and the results are indicative only. Benefits:
users always get **some** result. Downside: user confusion due to a
complex warning message, we run the risk of desensitising users to
important transformation related warnings and advise.

4. As per 2, but make use of a fallback transform opt-in. When the
selected operation fails, show a user-visible message giving them the
option of using a non-preferred operation. Benefits: no potentially
inaccurate results by default, user-friendly path to overcome the
probem. Downside: as per 3

The other issue is that options 2-4 are not straightforward changes to
make. In order to have the chance to transform using a "backup"
operation, we'd first need to make a temporary of all the original
coordinates, so that if the preferred transform fails we have the
original coordinates to use with the backup transform. We'd have to do
that **always** when transforming, so there's an (unavoidable?)
associated performance cost.

I'm at a bit of a loss which approach would be "best" to take. I'm
personally leaning toward 3, but am not convinced. What's upstream's
advice here?

Nyall

From aborruso at gmail.com  Tue Feb  4 00:48:40 2020
From: aborruso at gmail.com (aborruso)
Date: Tue, 4 Feb 2020 01:48:40 -0700 (MST)
Subject: [PROJ] Help in setting proj parameters for an old map
In-Reply-To: <1580718899235-0.post@n6.nabble.com>
References: <1580685289784-0.post@n6.nabble.com> <2074474.QNsRjk2YNE@puma>
 <1580711606035-0.post@n6.nabble.com> <10203690.1FeK4p8ybY@puma>
 <1580718899235-0.post@n6.nabble.com>
Message-ID: <1580806120542-0.post@n6.nabble.com>

Hi,
I think my proj definition is not correct and/or complete.

If I run in example this script:

curl -sL
"http://legacy.lib.utexas.edu/maps/ams/italy_50k/txu-pclmaps-oclc-6540719-milano-45-iii.jpg"
>./output.jpg
gdal_translate -of GTiff -gcp 532.292 2433.53 405000 551000 -gcp 2618.57
2316.82 424000 551000 -gcp 2388.9 467.338 423000 567000 -gcp 537.666 569.428
407000 567000 -gcp 933.404 1364.4 410000 560000 -gcp 2090.5 1299.92 420000
560000 -gcp 1462.72 517.946 415000 567000 -gcp 1576.18 2376.68 415000 551000
./output.jpg ./output_gcp.tif
gdalwarp -r near -order 1 -co COMPRESS=PACKBITS  -t_srs "+proj=lcc
+lat_0=45.90 +lon_0=14 +lat_1=45.90 +x_0=800000 +y_0=601000 +ellps=bessel
+units=m +no_defs +k_0=0.998992911" ./output_gcp.tif ./output_warped.tif


I have a displacement of about 150 meters (as you can see in this output
https://i.imgur.com/Ulr3GE2.png)

Am I doing something wrong?

Thank you



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From Jochem.Lesparre at kadaster.nl  Tue Feb  4 02:32:29 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Tue, 4 Feb 2020 10:32:29 +0000
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
Message-ID: <VI1P192MB00167B2DA24BDDEF44003A63EF030@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>

Hi Nyall,

For the Netherlands we use a better and (in my opinion) more geodetic sound approach, that gives "correct" results outside the grid. It also prevents getting completely different results between two nearby points if one point is just within and the other point just outside the grid.

What we did:

- We estimated 7 parameters for the "fallback" transformation between the Dutch CRS and ETRS89 as precise as possible.

- We created an official grid shift file for the residuals between the results of the fallback and real Dutch CRS, where we faded out the values to zero in a transition zone outside the Netherlands.

- We redefined the Dutch CRS as the result of the transformation from ETRS89 with these 7 parameters *and* grid shift.

- We created another grid shift file that is the sum of the 7 parameter transformation and the official grid shift file for a second variant of the transformation. 

As a result, the official transformation works for the entire world. The second variant of the transformation, which is easier to implement, gives the same results inside the grid as the official transformation. Outside the grid of the second variant, the fallback can be used, where it gives the same results as the official transformation. I would recommend this approach to all producers of grid shift files. Grid shift files that are not faded out to zero values at the bounds of the grid should not be used, in my opinion. 

So, I would recommend you to choose option 1 and only give results outside a grid for grid shift files that are faded out to zero values at the bounds of the grid. You can tell everyone that complains that a transformation doesn’t give results outside the grid that the cause is a flaw in the grid shift file and they should ask the grid shift files producer to use the Dutch approach instead.

Kind regards, Jochem

 
PS: The official transformation and the second variant of the transformation without 7 parameters transformation, can only give exactly the same results at a fixed height. Therefore, we decided to use a fixed hight (0 m in Dutch CRS) in the 7 parameter transformation. This isn't very elegant and doesn't comply with the ISO standard on CRS. We just do that as long as many software packages can't handle a two-step transformation with a 7 parameter transformation and a grid shift.

 



 

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
Sent: dinsdag 4 februari 2020 08:12
To: PROJ <proj at lists.osgeo.org>
Subject: [PROJ] "Fallback" support for transformations

Hi list,

Looking for advice on an issue we are seeing reported a lot downstream at QGIS. Because proj 6 + the other associated changes in the stack have made use of grid shift files much more transparent and easier for users, we're seeing an associate uptake in users who are using coordinate operations which require a grid in their work (which is great!).

But... one downside of this is that operations based on a grid are much stricter with respect to area of use -- if you try to transform coordinates outside of the grid bounds, you (rightly) get null results. This is in contrast to purely mathematical transforms, where you still get... some... result outside of the area of use (albeit possibly meaningless). This manifests in issues like
https://github.com/qgis/QGIS/issues/33929 -- where a user is trying to use a grid based operation to transform features which fall outside the grid bounds.

I'm seeking advice on what the best approach is to take with this. I can see a few options:

1. Stand on the geodesic high-ground, and give null results -- the selected operation can't be used for those coordinates, so it's a user error. (the current approach in QGIS)

2. If a transform fails with the specified operation, fallback to using proj_create_crs_to_crs_from_pj to create a "backup" transform and let proj decide what to do. Benefits: users always get **some** result. Downside: users always get **some** result, which may or may not be using the operation they specified and could potentially be misleading or inaccurate.

3. As above, but show a user-visible warning that a "fallback"
transformation was used and the results are indicative only. Benefits:
users always get **some** result. Downside: user confusion due to a complex warning message, we run the risk of desensitising users to important transformation related warnings and advise.

4. As per 2, but make use of a fallback transform opt-in. When the selected operation fails, show a user-visible message giving them the option of using a non-preferred operation. Benefits: no potentially inaccurate results by default, user-friendly path to overcome the probem. Downside: as per 3

The other issue is that options 2-4 are not straightforward changes to make. In order to have the chance to transform using a "backup"
operation, we'd first need to make a temporary of all the original coordinates, so that if the preferred transform fails we have the original coordinates to use with the backup transform. We'd have to do that **always** when transforming, so there's an (unavoidable?) associated performance cost.

I'm at a bit of a loss which approach would be "best" to take. I'm personally leaning toward 3, but am not convinced. What's upstream's advice here?

Nyall
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message

From even.rouault at spatialys.com  Tue Feb  4 04:52:25 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 04 Feb 2020 13:52:25 +0100
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
Message-ID: <2517752.DjLhixPJD4@even-i700>

Hi Nyall,

As in QGIS not all coordinate transformations need a geodetic-class level of 
accuracy, one aspect you didn't mention and that should probably be taken into 
account is the desired final accuracy, which can be linked with the current 
map scale.

One factor to also consider is the amount of shift introduced by a 
transformation. But this information is not easily available. This is, I 
believe, at worse 200 meters when transforming from old systems to new ones, 
and much smaller for transformations between more recent systems (at least for 
Earth based transformation... No idea for potential future non-Earth 
transformations ...)

Doing a quick computation, at 1/1,000,000 scale, and 96 DPI screen resolution, 
a pixel represents 1e6 / (96 / 0.0254) = 264 m. So for scales equal or smaller 
to that, the effect of any datum transformation is invisible at screen.

Now, if for a given (A,B) tuple of source and target CRS, you've a grid-based 
transformation and a Helmert one, then the difference in results between both 
is probably at worse of the order of 5 m (and often < 1 m).
So the difference between both would only start being visible for scales equal 
or larger than 1/25,000 ( 25000 / (96 / 0.0254) = 6.6 m)

That would mean that, when doing a coordinate transformation in QGIS, if you 
had a hint of the scale for which it is intended, then you could decide if you 
can just blindly use proj_create_crs_to_crs_from_pj() or not.

(Regarding what Jochem describes for the Dutch transformation, the variant 
with the fading out is indeed a smart approach, but too smart to be encoded in 
the EPSG database (at least currently), and thus being automatically proposed 
by PROJ in a proj_create_crs_to_crs_from_pj() / proj_create_operations() use 
case. Could probably be done with a custom entry in the PROJ db, but that's 
another topic. So for now, you need to specify "at hand" such PROJ pipeline. )

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nicolas.cadieux at archeotec.ca  Tue Feb  4 04:53:41 2020
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Tue, 4 Feb 2020 07:53:41 -0500
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
Message-ID: <41569622-EBA6-4FE5-AD7C-851D59F14568@archeotec.ca>

Hi,

I have not into the issue yet but 3 or 4 would be good.  Whatever option is selected, it would be nice to have the option of seeing the selected grid shift file border (a bit like the Grass region).  Perhaps this grid could be toggled on and off by a bouton on the lower right (near the scale) or at the very least with the error message.

Nicolas

> Le 4 févr. 2020 à 02:12, Nyall Dawson <nyall.dawson at gmail.com> a écrit :
> 
> ﻿Hi list,
> 
> Looking for advice on an issue we are seeing reported a lot downstream
> at QGIS. Because proj 6 + the other associated changes in the stack
> have made use of grid shift files much more transparent and easier for
> users, we're seeing an associate uptake in users who are using
> coordinate operations which require a grid in their work (which is
> great!).
> 
> But... one downside of this is that operations based on a grid are
> much stricter with respect to area of use -- if you try to transform
> coordinates outside of the grid bounds, you (rightly) get null
> results. This is in contrast to purely mathematical transforms, where
> you still get... some... result outside of the area of use (albeit
> possibly meaningless). This manifests in issues like
> https://github.com/qgis/QGIS/issues/33929 -- where a user is trying to
> use a grid based operation to transform features which fall outside
> the grid bounds.
> 
> I'm seeking advice on what the best approach is to take with this. I
> can see a few options:
> 
> 1. Stand on the geodesic high-ground, and give null results -- the
> selected operation can't be used for those coordinates, so it's a user
> error. (the current approach in QGIS)
> 
> 2. If a transform fails with the specified operation, fallback to
> using proj_create_crs_to_crs_from_pj to create a "backup" transform
> and let proj decide what to do. Benefits: users always get **some**
> result. Downside: users always get **some** result, which may or may
> not be using the operation they specified and could potentially be
> misleading or inaccurate.
> 
> 3. As above, but show a user-visible warning that a "fallback"
> transformation was used and the results are indicative only. Benefits:
> users always get **some** result. Downside: user confusion due to a
> complex warning message, we run the risk of desensitising users to
> important transformation related warnings and advise.
> 
> 4. As per 2, but make use of a fallback transform opt-in. When the
> selected operation fails, show a user-visible message giving them the
> option of using a non-preferred operation. Benefits: no potentially
> inaccurate results by default, user-friendly path to overcome the
> probem. Downside: as per 3
> 
> The other issue is that options 2-4 are not straightforward changes to
> make. In order to have the chance to transform using a "backup"
> operation, we'd first need to make a temporary of all the original
> coordinates, so that if the preferred transform fails we have the
> original coordinates to use with the backup transform. We'd have to do
> that **always** when transforming, so there's an (unavoidable?)
> associated performance cost.
> 
> I'm at a bit of a loss which approach would be "best" to take. I'm
> personally leaning toward 3, but am not convinced. What's upstream's
> advice here?
> 
> Nyall
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From Jochem.Lesparre at kadaster.nl  Tue Feb  4 05:37:02 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Tue, 4 Feb 2020 13:37:02 +0000
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <2517752.DjLhixPJD4@even-i700>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
 <2517752.DjLhixPJD4@even-i700>
Message-ID: <VI1P192MB00165D2154D8D3E1F3476DE9EF030@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>

Even,

My understanding is that the approach of the Dutch transformation could have been encoded in the EPSG registry if we didn't use a fixed height in the 7 parameter transformation. This is a bit ironic since we only use a fixed height to get the same results as with the second variant, which we created only because this is more widely supported by software.

Regards, Jochem



-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: dinsdag 4 februari 2020 13:52
To: proj at lists.osgeo.org
Subject: Re: [PROJ] "Fallback" support for transformations

[...]

(Regarding what Jochem describes for the Dutch transformation, the variant with the fading out is indeed a smart approach, but too smart to be encoded in the EPSG database (at least currently), and thus being automatically proposed by PROJ in a proj_create_crs_to_crs_from_pj() / proj_create_operations() use case. Could probably be done with a custom entry in the PROJ db, but that's another topic. So for now, you need to specify "at hand" such PROJ pipeline. )

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message

From nyall.dawson at gmail.com  Tue Feb  4 14:30:54 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 5 Feb 2020 08:30:54 +1000
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <VI1P192MB00167B2DA24BDDEF44003A63EF030@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
 <VI1P192MB00167B2DA24BDDEF44003A63EF030@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>
Message-ID: <CAB28AsixtNeO5Vbi+A2qBki8NBj=EhkT382R2GwSW8ipMsC-uA@mail.gmail.com>

On Tue, 4 Feb 2020 at 20:32, Lesparre, Jochem
<Jochem.Lesparre at kadaster.nl> wrote:
>
> Hi Nyall,
>
> For the Netherlands we use a better and (in my opinion) more geodetic sound approach, that gives "correct" results outside the grid. It also prevents getting completely different results between two nearby points if one point is just within and the other point just outside the grid.
>
> What we did:
>
> - We estimated 7 parameters for the "fallback" transformation between the Dutch CRS and ETRS89 as precise as possible.
>
> - We created an official grid shift file for the residuals between the results of the fallback and real Dutch CRS, where we faded out the values to zero in a transition zone outside the Netherlands.
>
> - We redefined the Dutch CRS as the result of the transformation from ETRS89 with these 7 parameters *and* grid shift.
>
> - We created another grid shift file that is the sum of the 7 parameter transformation and the official grid shift file for a second variant of the transformation.
>
> As a result, the official transformation works for the entire world. The second variant of the transformation, which is easier to implement, gives the same results inside the grid as the official transformation. Outside the grid of the second variant, the fallback can be used, where it gives the same results as the official transformation. I would recommend this approach to all producers of grid shift files. Grid shift files that are not faded out to zero values at the bounds of the grid should not be used, in my opinion.
>
> So, I would recommend you to choose option 1 and only give results outside a grid for grid shift files that are faded out to zero values at the bounds of the grid. You can tell everyone that complains that a transformation doesn’t give results outside the grid that the cause is a flaw in the grid shift file and they should ask the grid shift files producer to use the Dutch approach instead.

It's certainly a great solution (and I'd love to see more authorities
follow your process), but unfortunately getting the required changes
implemented by local authorities is going to be far out of reach of
most end-users...

Nyall





>
> Kind regards, Jochem
>
>
> PS: The official transformation and the second variant of the transformation without 7 parameters transformation, can only give exactly the same results at a fixed height. Therefore, we decided to use a fixed hight (0 m in Dutch CRS) in the 7 parameter transformation. This isn't very elegant and doesn't comply with the ISO standard on CRS. We just do that as long as many software packages can't handle a two-step transformation with a 7 parameter transformation and a grid shift.
>
>
>
>
>
>
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Nyall Dawson
> Sent: dinsdag 4 februari 2020 08:12
> To: PROJ <proj at lists.osgeo.org>
> Subject: [PROJ] "Fallback" support for transformations
>
> Hi list,
>
> Looking for advice on an issue we are seeing reported a lot downstream at QGIS. Because proj 6 + the other associated changes in the stack have made use of grid shift files much more transparent and easier for users, we're seeing an associate uptake in users who are using coordinate operations which require a grid in their work (which is great!).
>
> But... one downside of this is that operations based on a grid are much stricter with respect to area of use -- if you try to transform coordinates outside of the grid bounds, you (rightly) get null results. This is in contrast to purely mathematical transforms, where you still get... some... result outside of the area of use (albeit possibly meaningless). This manifests in issues like
> https://github.com/qgis/QGIS/issues/33929 -- where a user is trying to use a grid based operation to transform features which fall outside the grid bounds.
>
> I'm seeking advice on what the best approach is to take with this. I can see a few options:
>
> 1. Stand on the geodesic high-ground, and give null results -- the selected operation can't be used for those coordinates, so it's a user error. (the current approach in QGIS)
>
> 2. If a transform fails with the specified operation, fallback to using proj_create_crs_to_crs_from_pj to create a "backup" transform and let proj decide what to do. Benefits: users always get **some** result. Downside: users always get **some** result, which may or may not be using the operation they specified and could potentially be misleading or inaccurate.
>
> 3. As above, but show a user-visible warning that a "fallback"
> transformation was used and the results are indicative only. Benefits:
> users always get **some** result. Downside: user confusion due to a complex warning message, we run the risk of desensitising users to important transformation related warnings and advise.
>
> 4. As per 2, but make use of a fallback transform opt-in. When the selected operation fails, show a user-visible message giving them the option of using a non-preferred operation. Benefits: no potentially inaccurate results by default, user-friendly path to overcome the probem. Downside: as per 3
>
> The other issue is that options 2-4 are not straightforward changes to make. In order to have the chance to transform using a "backup"
> operation, we'd first need to make a temporary of all the original coordinates, so that if the preferred transform fails we have the original coordinates to use with the backup transform. We'd have to do that **always** when transforming, so there's an (unavoidable?) associated performance cost.
>
> I'm at a bit of a loss which approach would be "best" to take. I'm personally leaning toward 3, but am not convinced. What's upstream's advice here?
>
> Nyall
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
> Disclaimer:
> De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
> Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
> is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
> dit direct te melden aan de verzender en het bericht te vernietigen.
> Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.
>
> Disclaimer:
> The content of this message is meant to be received by the addressee only.
> Use of the content of this message by anyone other than the addressee without the consent
> of the Kadaster is unlawful. If you have received this message, but are not the addressee,
> please contact the sender immediately and destroy the message.
> No rights can be derived from the content of this message

From nyall.dawson at gmail.com  Tue Feb  4 14:35:00 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 5 Feb 2020 08:35:00 +1000
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <2517752.DjLhixPJD4@even-i700>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
 <2517752.DjLhixPJD4@even-i700>
Message-ID: <CAB28AsgORmR66dog+cEGE-VYgeCazDjyPq3YT-6Qp02DQym7+g@mail.gmail.com>

On Tue, 4 Feb 2020 at 22:52, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi Nyall,
>
> As in QGIS not all coordinate transformations need a geodetic-class level of
> accuracy, one aspect you didn't mention and that should probably be taken into
> account is the desired final accuracy, which can be linked with the current
> map scale.
>
> One factor to also consider is the amount of shift introduced by a
> transformation. But this information is not easily available. This is, I
> believe, at worse 200 meters when transforming from old systems to new ones,
> and much smaller for transformations between more recent systems (at least for
> Earth based transformation... No idea for potential future non-Earth
> transformations ...)
>
> Doing a quick computation, at 1/1,000,000 scale, and 96 DPI screen resolution,
> a pixel represents 1e6 / (96 / 0.0254) = 264 m. So for scales equal or smaller
> to that, the effect of any datum transformation is invisible at screen.
>
> Now, if for a given (A,B) tuple of source and target CRS, you've a grid-based
> transformation and a Helmert one, then the difference in results between both
> is probably at worse of the order of 5 m (and often < 1 m).
> So the difference between both would only start being visible for scales equal
> or larger than 1/25,000 ( 25000 / (96 / 0.0254) = 6.6 m)
>
> That would mean that, when doing a coordinate transformation in QGIS, if you
> had a hint of the scale for which it is intended, then you could decide if you
> can just blindly use proj_create_crs_to_crs_from_pj() or not.

While that approach could work for map rendering, it's not without
issues. E.g. a point layer dataset with some points outside the extent
of the grid -- when viewed at small scales you'll see all points, then
as you zoom in past a certain threshold you'll suddenly lose the
outside points when the grid shift kicks in. That's definitely going
to lead to user confusion. It also won't help with other
transformation tasks like layer exports, because we don't know the
intended scale for the output we'd always have to use the
user-specified grid based operation (and result in more bug reports:
"i can see the points in the canvas, but when I save the layer I only
get some from the centre of my map in the saved file").

Nyall

From even.rouault at spatialys.com  Tue Feb  4 15:08:41 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 05 Feb 2020 00:08:41 +0100
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <CAB28AsgORmR66dog+cEGE-VYgeCazDjyPq3YT-6Qp02DQym7+g@mail.gmail.com>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
 <2517752.DjLhixPJD4@even-i700>
 <CAB28AsgORmR66dog+cEGE-VYgeCazDjyPq3YT-6Qp02DQym7+g@mail.gmail.com>
Message-ID: <2338923.Z3qQ59ixG8@even-i700>

> While that approach could work for map rendering, it's not without
> issues. E.g. a point layer dataset with some points outside the extent
> of the grid -- when viewed at small scales you'll see all points, then
> as you zoom in past a certain threshold you'll suddenly lose the
> outside points when the grid shift kicks in. That's definitely going
> to lead to user confusion. It also won't help with other
> transformation tasks like layer exports, because we don't know the
> intended scale for the output we'd always have to use the
> user-specified grid based operation (and result in more bug reports:
> "i can see the points in the canvas, but when I save the layer I only
> get some from the centre of my map in the saved file").

Hard/impossible to make everybody happy on that subject. I would probably 
suggest going to your 2. behaviour (always return something, which was pretty 
much the behaviour with PROJ < 6), being the default. With an advanced setting 
for advanced users that want maximum geodetic pedantism to go to mode 1.
The cases where the grid based transformation are - generally (see below note) 
- in situations where points are outside of the area of use of the CRS (or are 
of use of the transformation), so you don't care a lot about accuracy of the 
transformation for those, because it is essentially unknown.

Side note:
There are a few cases also where the precise selection of a given transform / 
grid is not the ideal choice. For example (can't really think about another 
one) for the NAD83 -> NAD83(HARN) transformation, the NADCON4 grids used by 
PROJ are per US state. So, with selection of a single transformation, if you 
want to transform a dataset covering more than one US state, you're stuck. 
That's a annoyance that the data producer realized, and NADCON5 grids are for 
the whole conterminous US (but those are not integrated in PROJ for now)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From joel.haasdyk at customerservice.nsw.gov.au  Tue Feb  4 20:01:04 2020
From: joel.haasdyk at customerservice.nsw.gov.au (Joel Haasdyk)
Date: Wed, 5 Feb 2020 04:01:04 +0000
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <2338923.Z3qQ59ixG8@even-i700>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
 <2517752.DjLhixPJD4@even-i700>
 <CAB28AsgORmR66dog+cEGE-VYgeCazDjyPq3YT-6Qp02DQym7+g@mail.gmail.com>
 <2338923.Z3qQ59ixG8@even-i700>
Message-ID: <SYYP282MB100615DB9395FC0ED76899E3E2020@SYYP282MB1006.AUSP282.PROD.OUTLOOK.COM>

Option 4: 'make use of a fallback transform opt-in' 
is what I have heard expressed most often as the  desired functionality when discussing this issue in the past,
and certainly gets my vote.

As already mentioned, Option 4:
    + offers an easy solution to users for the problem encountered,
    + replicates existing options/functionality in other software (such as FME) [which makes it familiar, not necessarily correct].
    + is not likely to return significantly different transformations between adjacent points,
       (if a reasonable backup is suggested and employed)...
       That said, it will still return a (small?) step at the grid extent...  [not many complaints received to date]
        A few ways around this could be to:
        (1) have the grid define its own recommended fall-back transformation, 
              and then have the grid extents equivalent to that fallback. 
        (2) have the software provide an interpolation for a defined distance away from the grid.


The Netherlands approach discussed is interesting indeed. A few questions remain before common adoption:
    + what distance would be appropriate / conventional for the fade to the fallback / null Tf?
    + what extent is appropriate for the fallback portion of the grid. (Did you say global?)
    + How to best define the transformation 'extent'? 
    + I believe that a similar effect could be produced for any grid shift file by employing a sufficiently sparse 'parent grid' (within the same NTv2 gsb file) equivalent to the fallback. The grid interpolator would then correctly fade to the fallback between the original grid and the new.  That said, I'm not sure how many people actually use parent and child grids in their GSB.

Joel Haasdyk | GDA2020 Implementation Program Manager (NSW)
--------------------------------------------------------------------------------------------------
Spatial Services | Department of Customer Service
p (02) 87376322 | m 0427 229 589
e Joel.Haasdyk at customerservice.nsw.gov.au
w www.spatial.nsw.gov.au
Level 14 West, McKell Building, 2-24 Rawson Place, Sydney NSW 2000

https://www.icsm.gov.au/gda2020 (FAQs & Forum)
--------------------------------------------------------------------------------------------------

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: Wednesday, 5 February 2020 10:09 AM
To: Nyall Dawson <nyall.dawson at gmail.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] "Fallback" support for transformations

> While that approach could work for map rendering, it's not without 
> issues. E.g. a point layer dataset with some points outside the extent 
> of the grid -- when viewed at small scales you'll see all points, then 
> as you zoom in past a certain threshold you'll suddenly lose the 
> outside points when the grid shift kicks in. That's definitely going 
> to lead to user confusion. It also won't help with other 
> transformation tasks like layer exports, because we don't know the 
> intended scale for the output we'd always have to use the 
> user-specified grid based operation (and result in more bug reports:
> "i can see the points in the canvas, but when I save the layer I only 
> get some from the centre of my map in the saved file").

Hard/impossible to make everybody happy on that subject. I would probably suggest going to your 2. behaviour (always return something, which was pretty much the behaviour with PROJ < 6), being the default. With an advanced setting for advanced users that want maximum geodetic pedantism to go to mode 1.
The cases where the grid based transformation are - generally (see below note)
- in situations where points are outside of the area of use of the CRS (or are of use of the transformation), so you don't care a lot about accuracy of the transformation for those, because it is essentially unknown.

Side note:
There are a few cases also where the precise selection of a given transform / grid is not the ideal choice. For example (can't really think about another
one) for the NAD83 -> NAD83(HARN) transformation, the NADCON4 grids used by PROJ are per US state. So, with selection of a single transformation, if you want to transform a dataset covering more than one US state, you're stuck. 
That's a annoyance that the data producer realized, and NADCON5 grids are for the whole conterminous US (but those are not integrated in PROJ for now)

Even

-- 
Spatialys - Geospatial professional services
https://clicktime.symantec.com/37K99JRAW4KNFbsYyyR4m177Vc?u=http%3A%2F%2Fwww.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://clicktime.symantec.com/32H699CiEohhsWYWncgFZtW7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj

**********************************************************************************
This email message and any attached files is confidential and intended solely for the use of the individual or entity to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure under applicable law. If you have received this email in error, delete all copies and notify the sender.

This email is subject to copyright. No part of it should be reproduced, published, communicated or adapted without the copyright owner's written consent. No employee or agent is authorised to conclude any binding agreement on behalf of the Department of Customer Service (DCS) by email without express written confirmation.

The views or opinions presented in this email are solely those of the author and do not necessarily represent those of the DCS. DCS accepts no liability for any loss or damage arising from the use of this email and the recipient should check this email and any attached files for the presence of viruses.

**********************************************************************************

From Jochem.Lesparre at kadaster.nl  Wed Feb  5 02:01:57 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Wed, 5 Feb 2020 10:01:57 +0000
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <SYYP282MB100615DB9395FC0ED76899E3E2020@SYYP282MB1006.AUSP282.PROD.OUTLOOK.COM>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
 <2517752.DjLhixPJD4@even-i700>
 <CAB28AsgORmR66dog+cEGE-VYgeCazDjyPq3YT-6Qp02DQym7+g@mail.gmail.com>
 <2338923.Z3qQ59ixG8@even-i700>
 <SYYP282MB100615DB9395FC0ED76899E3E2020@SYYP282MB1006.AUSP282.PROD.OUTLOOK.COM>
Message-ID: <VI1P192MB00160B077B86F86468F27174EF020@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>

Hi Joel,

> (1) have the grid define its own recommended fall-back transformation, 

I very much like your idea of having a grid define its own fallback method. A zero correction could be used as default. 

> + what distance would be appropriate / conventional for the fade to the fallback / null Tf?

If interpolation between grid and fallback is used to create a smooth transition, then the grid itself should also define the width of this transition zone. As default, the width of the transition zone could be based on de maximum grid shift at the outer grid bounds, e.g. if the largest grid shift at the outer grid bounds is 0.25 m, then a transition zone could be 25 km in width. This example is based on the idea that the grid gradient should not exceed 1 cm/km, which is the accuracy of the Dutch CRS itself. This gradient could also be a reasonable value for other grids with a maximum difference with the fallback of a few metres. I believe that in in general a fallback transformation should not differ more than a few metres. When the differences are larger, the fallback should probably be improved. 

> + what extent is appropriate for the fallback portion of the grid. (Did you say global?)

Whatever bound to the extent of the transformation you create, there will always be users that for some strange reason want to use the transformation outside that extent. When you use a 7 parameter transformation as fallback (like we did for the Netherlands), the extend of the fallback is global. Otherwise you would have to find a reasonable area, like the extend of the tectonic plate, or the extend of the EU for a European national CRS, or something much smaller like the extent of the national border plus a buffer of about 0.5 degree to the nearest integer degree. Note that often a map projection is used too for the CRS with the grid shift file and that the projection might not be able to map the entire world.

> + How to best define the transformation 'extent'?

Maybe a distinction should be made between the official extent for the use of the transformation, which should be the official extent of the CRS (e.g. within the national borders) and probably will be smaller than the area covered by the grid shift file, and the practical extent of the transformation discussed above.
 
> + I believe that a similar effect could be produced for any grid shift file by employing a sufficiently sparse 'parent grid' (within the same NTv2 gsb file) equivalent to the fallback. The grid interpolator would then correctly fade to the fallback between the original grid and the new.  That said, I'm not sure how many people actually use parent and child grids in their GSB.

Yes and no. Indeed, it is better to define the transition to the fallback exactly in the grid shift file itself. To model the effect of a 7 parameter transformation with a grid shift file, a sparse resolution is enough (at least locally). However, by using the sparse grid to do the transition too, the width of the transition zone is the same as the resolution of the sparse grid, which might be too small. For the Netherlands we use a sparse grid with a resolution of about 0.1 degree (corresponding to about 10 km) to model the 7 parameter transformation as accurate as we require the transformation to be (1 mm: one order of magnitude better that the relative precision of the national CRS), but to keep the gradient of the grid below 1 cm in the transition zone, a transition zone of 25 km is needed. Therefore, our transition zone is in the dense subgrid. Another constraint for gsb files is that the resolution of the sparse parent grid should be a multiple of the resolution of the dense subgrid and that a subgrid should cover the area of an integer number of parent grid cells.

Kind regards, Jochem


-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Joel Haasdyk
Sent: woensdag 5 februari 2020 05:01
To: Even Rouault <even.rouault at spatialys.com>; Nyall Dawson <nyall.dawson at gmail.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] "Fallback" support for transformations

Option 4: 'make use of a fallback transform opt-in' 
is what I have heard expressed most often as the  desired functionality when discussing this issue in the past, and certainly gets my vote.

As already mentioned, Option 4:
    + offers an easy solution to users for the problem encountered,
    + replicates existing options/functionality in other software (such as FME) [which makes it familiar, not necessarily correct].
    + is not likely to return significantly different transformations between adjacent points,
       (if a reasonable backup is suggested and employed)...
       That said, it will still return a (small?) step at the grid extent...  [not many complaints received to date]
        A few ways around this could be to:
        (1) have the grid define its own recommended fall-back transformation, 
              and then have the grid extents equivalent to that fallback. 
        (2) have the software provide an interpolation for a defined distance away from the grid.


The Netherlands approach discussed is interesting indeed. A few questions remain before common adoption:
    + what distance would be appropriate / conventional for the fade to the fallback / null Tf?
    + what extent is appropriate for the fallback portion of the grid. (Did you say global?)
    + How to best define the transformation 'extent'? 
    + I believe that a similar effect could be produced for any grid shift file by employing a sufficiently sparse 'parent grid' (within the same NTv2 gsb file) equivalent to the fallback. The grid interpolator would then correctly fade to the fallback between the original grid and the new.  That said, I'm not sure how many people actually use parent and child grids in their GSB.

Joel Haasdyk | GDA2020 Implementation Program Manager (NSW)
--------------------------------------------------------------------------------------------------
Spatial Services | Department of Customer Service p (02) 87376322 | m 0427 229 589 e Joel.Haasdyk at customerservice.nsw.gov.au
w www.spatial.nsw.gov.au
Level 14 West, McKell Building, 2-24 Rawson Place, Sydney NSW 2000

https://www.icsm.gov.au/gda2020 (FAQs & Forum)
--------------------------------------------------------------------------------------------------

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: Wednesday, 5 February 2020 10:09 AM
To: Nyall Dawson <nyall.dawson at gmail.com>
Cc: PROJ <proj at lists.osgeo.org>
Subject: Re: [PROJ] "Fallback" support for transformations

> While that approach could work for map rendering, it's not without 
> issues. E.g. a point layer dataset with some points outside the extent 
> of the grid -- when viewed at small scales you'll see all points, then 
> as you zoom in past a certain threshold you'll suddenly lose the 
> outside points when the grid shift kicks in. That's definitely going 
> to lead to user confusion. It also won't help with other 
> transformation tasks like layer exports, because we don't know the 
> intended scale for the output we'd always have to use the 
> user-specified grid based operation (and result in more bug reports:
> "i can see the points in the canvas, but when I save the layer I only 
> get some from the centre of my map in the saved file").

Hard/impossible to make everybody happy on that subject. I would probably suggest going to your 2. behaviour (always return something, which was pretty much the behaviour with PROJ < 6), being the default. With an advanced setting for advanced users that want maximum geodetic pedantism to go to mode 1.
The cases where the grid based transformation are - generally (see below note)
- in situations where points are outside of the area of use of the CRS (or are of use of the transformation), so you don't care a lot about accuracy of the transformation for those, because it is essentially unknown.

Side note:
There are a few cases also where the precise selection of a given transform / grid is not the ideal choice. For example (can't really think about another
one) for the NAD83 -> NAD83(HARN) transformation, the NADCON4 grids used by PROJ are per US state. So, with selection of a single transformation, if you want to transform a dataset covering more than one US state, you're stuck. 
That's a annoyance that the data producer realized, and NADCON5 grids are for the whole conterminous US (but those are not integrated in PROJ for now)

Even

--
Spatialys - Geospatial professional services https://clicktime.symantec.com/37K99JRAW4KNFbsYyyR4m177Vc?u=http%3A%2F%2Fwww.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://clicktime.symantec.com/32H699CiEohhsWYWncgFZtW7Vc?u=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj

**********************************************************************************
This email message and any attached files is confidential and intended solely for the use of the individual or entity to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure under applicable law. If you have received this email in error, delete all copies and notify the sender.

This email is subject to copyright. No part of it should be reproduced, published, communicated or adapted without the copyright owner's written consent. No employee or agent is authorised to conclude any binding agreement on behalf of the Department of Customer Service (DCS) by email without express written confirmation.

The views or opinions presented in this email are solely those of the author and do not necessarily represent those of the DCS. DCS accepts no liability for any loss or damage arising from the use of this email and the recipient should check this email and any attached files for the presence of viruses.

**********************************************************************************
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message

From stefano.iacovella at gmail.com  Wed Feb  5 04:57:04 2020
From: stefano.iacovella at gmail.com (Stefano Iacovella)
Date: Wed, 5 Feb 2020 13:57:04 +0100
Subject: [PROJ] cs2cs and +towgs84
Message-ID: <CAG9OqYr2Sfi-_tN+1p_=gf-RQgV3yzLcg6atkReF6gdOTz+s5w@mail.gmail.com>

Hello,

I already read the cs2cs usage page at [1] but I am still a little bit
confused about the +towgs84 option so I am looking for your help.

I am trying to convert from EPSG:4265 CRS to EPSG:4326 CRS

First of all I used the following syntax

$> cs2cs -d 8 epsg:4265 epsg:4326
41.7447031 15.0618939
41.74535412     15.06180323 0.00000000

this way the coordinate are transformed but I have no control on which
operation is really used, e.g. I don't know which are the towgs84's
parameters

Really I want to use the EPSG:1660 operation, so I tried to add the
+towgs84 option but I got an error:

$> cs2cs -d 8 epsg:4265 epsg:4326
+towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68
proj_create: crs not found
Rel. 6.3.0, January 1st, 2020
<cs2cs>:
cannot instantiate source coordinate system
program abnormally terminated

Which is the correct syntax to be used?

Thank you in advance

Stefano

[1] https://proj.org/apps/cs2cs.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200205/e5bd24b2/attachment.html>

From kreve at sdfe.dk  Wed Feb  5 05:14:07 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 5 Feb 2020 13:14:07 +0000
Subject: [PROJ] cs2cs and +towgs84
In-Reply-To: <CAG9OqYr2Sfi-_tN+1p_=gf-RQgV3yzLcg6atkReF6gdOTz+s5w@mail.gmail.com>
References: <CAG9OqYr2Sfi-_tN+1p_=gf-RQgV3yzLcg6atkReF6gdOTz+s5w@mail.gmail.com>
Message-ID: <44b8acef1dbe44848b25f828cdd3a2d7@sdfe.dk>

Stefano,

cs2cs uses the ”best guestimate” operation between source and destination CRS.
If you want something else you need to specify that yourself. projinfo can help you
find the correct transformation:

$ projinfo -k operation -o PROJ EPSG:1660
PROJ string:
+proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=push +v_3 +step +proj=cart +ellps=intl +step +proj=helmert +x=-104.1 +y=-49.1 +z=-9.9 +rx=0.971 +ry=-2.917 +rz=0.714 +s=-11.68 +convention=position_vector +step +inv +proj=cart +ellps=WGS84 +step +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1

Which you can then use with cct:

$ echo 41.7447031 15.0618939 | cct -z0 -t0 -d8 +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad +step +proj=push +v_3 +step +proj=cart +ellps=intl +step +proj=helmert +x=-104.1 +y=-49.1 +z=-9.9 +rx=0.971 +ry=-2.917 +rz=0.714 +s=-11.68 +convention=position_vector +step +inv +proj=cart +ellps=WGS84 +step +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step +proj=axisswap +order=2,1
  41.74535412    15.06180323    0.00000000        0.0000

That should do the trick :-)

Please don’t use the +towgs84 parameter – it is deprecated and only supported for legacy reasons.

/Kristian

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Stefano Iacovella
Sent: 5. februar 2020 13:57
To: proj at lists.osgeo.org
Subject: [PROJ] cs2cs and +towgs84

Hello,

I already read the cs2cs usage page at [1] but I am still a little bit confused about the +towgs84 option so I am looking for your help.

I am trying to convert from EPSG:4265 CRS to EPSG:4326 CRS

First of all I used the following syntax

$> cs2cs -d 8 epsg:4265 epsg:4326
41.7447031 15.0618939
41.74535412     15.06180323 0.00000000

this way the coordinate are transformed but I have no control on which operation is really used, e.g. I don't know which are the towgs84's parameters

Really I want to use the EPSG:1660 operation, so I tried to add the +towgs84 option but I got an error:

$> cs2cs -d 8 epsg:4265 epsg:4326 +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68
proj_create: crs not found
Rel. 6.3.0, January 1st, 2020
<cs2cs>:
cannot instantiate source coordinate system
program abnormally terminated

Which is the correct syntax to be used?

Thank you in advance

Stefano

[1] https://proj.org/apps/cs2cs.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200205/52d420e7/attachment-0001.html>

From stefano.iacovella at gmail.com  Wed Feb  5 05:28:39 2020
From: stefano.iacovella at gmail.com (Stefano Iacovella)
Date: Wed, 5 Feb 2020 14:28:39 +0100
Subject: [PROJ] cs2cs and +towgs84
In-Reply-To: <44b8acef1dbe44848b25f828cdd3a2d7@sdfe.dk>
References: <CAG9OqYr2Sfi-_tN+1p_=gf-RQgV3yzLcg6atkReF6gdOTz+s5w@mail.gmail.com>
 <44b8acef1dbe44848b25f828cdd3a2d7@sdfe.dk>
Message-ID: <CAG9OqYr7QcARO7o3eph56KDDiVG=Nkj2nhTO3v9CNRyz6DWbkg@mail.gmail.com>

Hi Kristian,

thank you very much for your very clear reply, I was confused by some old
posts where it was possible to force cs2cs using a different operation than
the best estimate.

All the best

Stefano

Il giorno mer 5 feb 2020 alle ore 14:14 Kristian Evers <kreve at sdfe.dk> ha
scritto:

> Stefano,
>
>
>
> cs2cs uses the ”best guestimate” operation between source and destination
> CRS.
>
> If you want something else you need to specify that yourself. projinfo can
> help you
>
> find the correct transformation:
>
>
>
> $ projinfo -k operation -o PROJ EPSG:1660
>
> PROJ string:
>
> +proj=pipeline +step +proj=axisswap +order=2,1 +step +proj=unitconvert
> +xy_in=deg +xy_out=rad +step +proj=push +v_3 +step +proj=cart +ellps=intl
> +step +proj=helmert +x=-104.1 +y=-49.1 +z=-9.9 +rx=0.971 +ry=-2.917
> +rz=0.714 +s=-11.68 +convention=position_vector +step +inv +proj=cart
> +ellps=WGS84 +step +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad
> +xy_out=deg +step +proj=axisswap +order=2,1
>
>
>
> Which you can then use with cct:
>
>
>
> $ echo 41.7447031 15.0618939 | cct -z0 -t0 -d8 +proj=pipeline +step
> +proj=axisswap +order=2,1 +step +proj=unitconvert +xy_in=deg +xy_out=rad
> +step +proj=push +v_3 +step +proj=cart +ellps=intl +step +proj=helmert
> +x=-104.1 +y=-49.1 +z=-9.9 +rx=0.971 +ry=-2.917 +rz=0.714 +s=-11.68
> +convention=position_vector +step +inv +proj=cart +ellps=WGS84 +step
> +proj=pop +v_3 +step +proj=unitconvert +xy_in=rad +xy_out=deg +step
> +proj=axisswap +order=2,1
>
>   41.74535412    15.06180323    0.00000000        0.0000
>
>
>
> That should do the trick :-)
>
>
>
> Please don’t use the +towgs84 parameter – it is deprecated and only
> supported for legacy reasons.
>
>
>
> /Kristian
>
>
>
> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Stefano
> Iacovella
> *Sent:* 5. februar 2020 13:57
> *To:* proj at lists.osgeo.org
> *Subject:* [PROJ] cs2cs and +towgs84
>
>
>
> Hello,
>
> I already read the cs2cs usage page at [1] but I am still a little bit
> confused about the +towgs84 option so I am looking for your help.
>
> I am trying to convert from EPSG:4265 CRS to EPSG:4326 CRS
>
> First of all I used the following syntax
>
> $> cs2cs -d 8 epsg:4265 epsg:4326
> 41.7447031 15.0618939
> 41.74535412     15.06180323 0.00000000
>
> this way the coordinate are transformed but I have no control on which
> operation is really used, e.g. I don't know which are the towgs84's
> parameters
>
> Really I want to use the EPSG:1660 operation, so I tried to add the
> +towgs84 option but I got an error:
>
> $> cs2cs -d 8 epsg:4265 epsg:4326
> +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68
> proj_create: crs not found
> Rel. 6.3.0, January 1st, 2020
> <cs2cs>:
> cannot instantiate source coordinate system
> program abnormally terminated
>
> Which is the correct syntax to be used?
>
> Thank you in advance
>
> Stefano
>
> [1] https://proj.org/apps/cs2cs.html
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200205/2c64cb00/attachment.html>

From even.rouault at spatialys.com  Wed Feb  5 13:15:27 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 05 Feb 2020 22:15:27 +0100
Subject: [PROJ] Releasing PROJ 6.3.1 ?
Message-ID: <1709778.gxPGYDuCCK@even-i700>

Hi,

I believe we should release a 6.3.1 soon from the 6.3 branch.

When investigating the issue(s) raised in the following MapServer message
https://lists.osgeo.org/pipermail/mapserver-users/2020-February/081574.html,
I tried MapServer master (future 7.6) with PROJ 6.3.0 (using proj.h) and I get 
crashes (or completely erroneous results) in a number of MapServer regression 
tests. Those crashes are fixed by the following commit
https://github.com/OSGeo/PROJ/commit/79eed0da28abdc41c996dc55ee231f1fcffe4fd2
that was pushed post 6.3.0.
This commit also fixes issues with spatial R packages.

This is a bug dating back to 6.0.0 AFAIR but for some reason later 6.x 
versions exhibit it much more easily than before. It is connected with the use 
of the legacy +init=epsg:XXXX syntax that is still heavily used by MapServer 
tests (and likely user mapfiles). It could probably be workaround on MapServer 
side, but I'd feel more relieved if we issued a 6.3.1

"Celui qui dit, c'est celui qui fait" as one says here, which probably means 
I'm volunteering to do that release.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Wed Feb  5 19:20:03 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 6 Feb 2020 13:20:03 +1000
Subject: [PROJ] Releasing PROJ 6.3.1 ?
In-Reply-To: <1709778.gxPGYDuCCK@even-i700>
References: <1709778.gxPGYDuCCK@even-i700>
Message-ID: <CAB28AsigEwdc5AOaGjsxqFOvHTYYMEW-SY=pS8qPDd4e6wyJOw@mail.gmail.com>

On Thu, 6 Feb 2020 at 07:15, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> I believe we should release a 6.3.1 soon from the 6.3 branch.

I'd love to see this, especially if
https://github.com/OSGeo/PROJ/pull/1915 is included...

Nyall

From kreve at sdfe.dk  Thu Feb  6 00:09:41 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 6 Feb 2020 08:09:41 +0000
Subject: [PROJ] Releasing PROJ 6.3.1 ?
In-Reply-To: <1709778.gxPGYDuCCK@even-i700>
References: <1709778.gxPGYDuCCK@even-i700>
Message-ID: <8cef371626eb4ca1928b41c0c78e2207@sdfe.dk>

> "Celui qui dit, c'est celui qui fait" as one says here, which probably means 
I'm volunteering to do that release.

In that case, no problem for me :-) When do you want to release it? Alongside 7.0.0?
It would probably be a good idea to go through pull request from the last couple of
weeks and backport whatever applies to 6.3.x. I stopped doing that after the decision
to keep proj_api.h, so there may be a few fixes missing in the 6.3 branch.

/Kristian


-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 5. februar 2020 22:15
To: proj at lists.osgeo.org
Subject: [PROJ] Releasing PROJ 6.3.1 ?

Hi,

I believe we should release a 6.3.1 soon from the 6.3 branch.

When investigating the issue(s) raised in the following MapServer message
https://lists.osgeo.org/pipermail/mapserver-users/2020-February/081574.html,
I tried MapServer master (future 7.6) with PROJ 6.3.0 (using proj.h) and I get 
crashes (or completely erroneous results) in a number of MapServer regression 
tests. Those crashes are fixed by the following commit
https://github.com/OSGeo/PROJ/commit/79eed0da28abdc41c996dc55ee231f1fcffe4fd2
that was pushed post 6.3.0.
This commit also fixes issues with spatial R packages.

This is a bug dating back to 6.0.0 AFAIR but for some reason later 6.x 
versions exhibit it much more easily than before. It is connected with the use 
of the legacy +init=epsg:XXXX syntax that is still heavily used by MapServer 
tests (and likely user mapfiles). It could probably be workaround on MapServer 
side, but I'd feel more relieved if we issued a 6.3.1

"Celui qui dit, c'est celui qui fait" as one says here, which probably means 
I'm volunteering to do that release.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From aborruso at gmail.com  Thu Feb  6 01:08:11 2020
From: aborruso at gmail.com (aborruso)
Date: Thu, 6 Feb 2020 02:08:11 -0700 (MST)
Subject: [PROJ] Help in setting proj parameters for an old map
In-Reply-To: <1580685289784-0.post@n6.nabble.com>
References: <1580685289784-0.post@n6.nabble.com>
Message-ID: <1580980091864-0.post@n6.nabble.com>

Hi all,
I have had a good reply here https://gis.stackexchange.com/a/349739/466

Best regards



--
Sent from: http://osgeo-org.1560.x6.nabble.com/PROJ-4-f3840930.html

From even.rouault at spatialys.com  Thu Feb  6 04:37:40 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Feb 2020 13:37:40 +0100
Subject: [PROJ] Releasing PROJ 6.3.1 ?
In-Reply-To: <8cef371626eb4ca1928b41c0c78e2207@sdfe.dk>
References: <1709778.gxPGYDuCCK@even-i700>
 <8cef371626eb4ca1928b41c0c78e2207@sdfe.dk>
Message-ID: <5773408.4MOSnupNTn@even-i700>

On jeudi 6 février 2020 08:09:41 CET Kristian Evers wrote:
> > "Celui qui dit, c'est celui qui fait" as one says here, which probably
> > means 
> I'm volunteering to do that release.
> 
> In that case, no problem for me :-) When do you want to release it?
> Alongside 7.0.0?

I was thinking to next week.

> It would probably be a good idea to go through pull
> request from the last couple of weeks and backport whatever applies to
> 6.3.x. I stopped doing that after the decision to keep proj_api.h, so there
> may be a few fixes missing in the 6.3 branch. 

The list of remaining to backports seems to be:
https://github.com/OSGeo/PROJ/pull/1884
https://github.com/OSGeo/PROJ/pull/1914
https://github.com/OSGeo/PROJ/pull/1915

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Jochem.Lesparre at kadaster.nl  Thu Feb  6 05:00:22 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Thu, 6 Feb 2020 13:00:22 +0000
Subject: [PROJ] Releasing PROJ 6.3.1 ?
In-Reply-To: <5773408.4MOSnupNTn@even-i700>
References: <1709778.gxPGYDuCCK@even-i700>
 <8cef371626eb4ca1928b41c0c78e2207@sdfe.dk> <5773408.4MOSnupNTn@even-i700>
Message-ID: <HE1P192MB00123FC6DE66BA80F7FDEE3EEF1D0@HE1P192MB0012.EURP192.PROD.OUTLOOK.COM>

Is this one already included?
https://github.com/OSGeo/PROJ/pull/1896



Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message

From kreve at sdfe.dk  Thu Feb  6 05:02:07 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 6 Feb 2020 13:02:07 +0000
Subject: [PROJ] Releasing PROJ 6.3.1 ?
In-Reply-To: <HE1P192MB00123FC6DE66BA80F7FDEE3EEF1D0@HE1P192MB0012.EURP192.PROD.OUTLOOK.COM>
References: <1709778.gxPGYDuCCK@even-i700>
 <8cef371626eb4ca1928b41c0c78e2207@sdfe.dk> <5773408.4MOSnupNTn@even-i700>
 <HE1P192MB00123FC6DE66BA80F7FDEE3EEF1D0@HE1P192MB0012.EURP192.PROD.OUTLOOK.COM>
Message-ID: <ba8b6277c79e4b338335242e66aee0e5@sdfe.dk>

Jochem,

PROJ 6.3.1 is a patch release, so no new features will be included, only bug fixes.
You'll have to wait for 7.0.0 for that one.

/Kristian

-----Original Message-----
From: Lesparre, Jochem <Jochem.Lesparre at kadaster.nl> 
Sent: 6. februar 2020 14:00
To: Even Rouault <even.rouault at spatialys.com>; Kristian Evers <kreve at sdfe.dk>
Cc: proj at lists.osgeo.org
Subject: RE: [PROJ] Releasing PROJ 6.3.1 ?

Is this one already included?
https://github.com/OSGeo/PROJ/pull/1896



Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message

From even.rouault at spatialys.com  Thu Feb  6 06:48:27 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Feb 2020 15:48:27 +0100
Subject: [PROJ] "Fallback" support for transformations
In-Reply-To: <VI1P192MB00160B077B86F86468F27174EF020@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>
References: <CAB28AsjRPpjYdP1d=z+CqSEUhm=hLR8wydzOnsGAcfYH7u=W9g@mail.gmail.com>
 <SYYP282MB100615DB9395FC0ED76899E3E2020@SYYP282MB1006.AUSP282.PROD.OUTLOOK.COM>
 <VI1P192MB00160B077B86F86468F27174EF020@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>
Message-ID: <2166621.8c2eZ83opS@even-i700>

> Another constraint
> for gsb files is that the resolution of the sparse parent grid should be a
> multiple of the resolution of the dense subgrid and that a subgrid should
> cover the area of an integer number of parent grid cells.

For what is worth, the Geodetic TIFF grids (GTG) format resulting from RFC4 
doesn't have those NTv2 specific constraints: a subgrid must just fall inside 
the extent of its parent.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Jelmer.Baas at speerit.nl  Fri Feb  7 07:00:34 2020
From: Jelmer.Baas at speerit.nl (Jelmer Baas)
Date: Fri, 7 Feb 2020 15:00:34 +0000
Subject: [PROJ] Proper projection system for Aruba
Message-ID: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>

Hello,

I'm trying to convert coordinates from what seems to be a custom projection system in Aruba, without much luck.

In their drawings, they have data around 3000, 18000. Whatever existing projection system I use (EPSG 24819, EPSG 32619), I end up at a completely different location.

For example:
echo 2936 18088 | cs2cs +proj=utm +zone=19 +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84
-8178296.58     17850.76 22.52

echo 2936 18088 | cs2cs +proj=utm +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84
-830835.88      16729.91 101.08

This is way outside the expected area. In 3857, the data should be somewhere between
-7800000, 1417000
-7777000, 1393000

I do have the attached ".gtf" files, but I'm unsure how to apply this in proj. Is the above string correct? What am I missing?

Any help would be greatly appreciated.

Regards,
Jelmer Baas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/6f8bb8d0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: WGS_1984_to_Transverse_Mercator_Aruba_RC.gtf
Type: application/octet-stream
Size: 661 bytes
Desc: WGS_1984_to_Transverse_Mercator_Aruba_RC.gtf
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/6f8bb8d0/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Transverse_Mercator_Aruba_to_WGS_1984_RC.gtf
Type: application/octet-stream
Size: 662 bytes
Desc: Transverse_Mercator_Aruba_to_WGS_1984_RC.gtf
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/6f8bb8d0/attachment-0001.obj>

From cjmce at lsu.edu  Fri Feb  7 07:04:59 2020
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 7 Feb 2020 15:04:59 +0000
Subject: [PROJ] Proper projection system for Aruba
In-Reply-To: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
References: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
Message-ID: <DM6PR06MB62359AFB86278FD6518793C3A81C0@DM6PR06MB6235.namprd06.prod.outlook.com>

You might be in the old French System as I recall.  Check out my Grids & Datums from PE&RS, July 2002.
C. Mugnier

Get Outlook for iOS<https://aka.ms/o0ukef>
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Jelmer Baas <Jelmer.Baas at speerit.nl>
Sent: Friday, February 7, 2020 9:00:34 AM
To: proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: [PROJ] Proper projection system for Aruba


Hello,



I’m trying to convert coordinates from what seems to be a custom projection system in Aruba, without much luck.



In their drawings, they have data around 3000, 18000. Whatever existing projection system I use (EPSG 24819, EPSG 32619), I end up at a completely different location.



For example:

echo 2936 18088 | cs2cs +proj=utm +zone=19 +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84

-8178296.58     17850.76 22.52



echo 2936 18088 | cs2cs +proj=utm +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84

-830835.88      16729.91 101.08



This is way outside the expected area. In 3857, the data should be somewhere between

-7800000, 1417000

-7777000, 1393000



I do have the attached “.gtf” files, but I’m unsure how to apply this in proj. Is the above string correct? What am I missing?



Any help would be greatly appreciated.



Regards,

Jelmer Baas


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/9d236e64/attachment.html>

From cjmce at lsu.edu  Fri Feb  7 07:08:52 2020
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 7 Feb 2020 15:08:52 +0000
Subject: [PROJ] Proper projection system for Aruba
In-Reply-To: <DM6PR06MB62359AFB86278FD6518793C3A81C0@DM6PR06MB6235.namprd06.prod.outlook.com>
References: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>,
 <DM6PR06MB62359AFB86278FD6518793C3A81C0@DM6PR06MB6235.namprd06.prod.outlook.com>
Message-ID: <DM6PR06MB62357F7F412F5D850EADC4CDA81C0@DM6PR06MB6235.namprd06.prod.outlook.com>

Oops; bad memory-that was Sint Maartin.
CJM

Get Outlook for iOS<https://aka.ms/o0ukef>
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Clifford J Mugnier <cjmce at lsu.edu>
Sent: Friday, February 7, 2020 9:04:59 AM
To: Jelmer Baas <Jelmer.Baas at speerit.nl>; proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: Re: [PROJ] Proper projection system for Aruba

You might be in the old French System as I recall.  Check out my Grids & Datums from PE&RS, July 2002.
C. Mugnier

Get Outlook for iOS<https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Faka.ms%2Fo0ukef&data=02%7C01%7Ccjmce%40lsu.edu%7C00cab91fa7924c1a168208d7abdf1bfa%7C2d4dad3f50ae47d983a09ae2b1f466f8%7C0%7C0%7C637166847045444951&sdata=KB86J0YfHC6TGGSBS3sT7VsGZcC1YpExcGNiyZWuqAQ%3D&reserved=0>
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Jelmer Baas <Jelmer.Baas at speerit.nl>
Sent: Friday, February 7, 2020 9:00:34 AM
To: proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: [PROJ] Proper projection system for Aruba


Hello,



I’m trying to convert coordinates from what seems to be a custom projection system in Aruba, without much luck.



In their drawings, they have data around 3000, 18000. Whatever existing projection system I use (EPSG 24819, EPSG 32619), I end up at a completely different location.



For example:

echo 2936 18088 | cs2cs +proj=utm +zone=19 +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84

-8178296.58     17850.76 22.52



echo 2936 18088 | cs2cs +proj=utm +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84

-830835.88      16729.91 101.08



This is way outside the expected area. In 3857, the data should be somewhere between

-7800000, 1417000

-7777000, 1393000



I do have the attached “.gtf” files, but I’m unsure how to apply this in proj. Is the above string correct? What am I missing?



Any help would be greatly appreciated.



Regards,

Jelmer Baas


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/fdf6dd06/attachment-0001.html>

From Jochem.Lesparre at kadaster.nl  Fri Feb  7 08:30:42 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Fri, 7 Feb 2020 16:30:42 +0000
Subject: [PROJ] Proper projection system for Aruba
In-Reply-To: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
References: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
Message-ID: <VI1P192MB0016730B5C33B90A07878FFAEF1C0@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>

Hi Jelmer,

Aruba's CRS is a local TM projection with its central meridian through the Hooiberg. Unfortunately it is not in the EPSG registry.

An approximate transformation is available in the PCTrans software by the Dutch Hydrographic Service:
https://english.defensie.nl/topics/hydrography/documents/applications/2018/06/06/pctrans5_20180601

If you want to use PROJ, the transformation parameters of PCTrans can probably be found in de documentation of the software or obtained by sending a message to NSGI:
https://www.nsgi.nl/over-ons/nsgi/contact

Precise (sub metre) transformation parameters are available at the local authorities DLV, and more precise (centimetre) transformation parameters should be computed for DLV this year. However, I'm not sure if they share these. Contact information can be found here:
https://www.overheid.aw/home-ned/departementen_46763/item/dienst-landmeetkunde-en-vastgoedregistratie-dlv_4615.html
If this contact information is outdated, you can contact NSGI (see above) to ask to get you in touch with DLV.

Kind regards, Jochem


From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Jelmer Baas
Sent: vrijdag 7 februari 2020 16:01
To: proj at lists.osgeo.org
Subject: [PROJ] Proper projection system for Aruba

Hello,

I'm trying to convert coordinates from what seems to be a custom projection system in Aruba, without much luck.

In their drawings, they have data around 3000, 18000. Whatever existing projection system I use (EPSG 24819, EPSG 32619), I end up at a completely different location.

For example:
echo 2936 18088 | cs2cs +proj=utm +zone=19 +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84
-8178296.58     17850.76 22.52

echo 2936 18088 | cs2cs +proj=utm +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84
-830835.88      16729.91 101.08

This is way outside the expected area. In 3857, the data should be somewhere between
-7800000, 1417000
-7777000, 1393000

I do have the attached ".gtf" files, but I'm unsure how to apply this in proj. Is the above string correct? What am I missing?

Any help would be greatly appreciated.

Regards,
Jelmer Baas



Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/a48784c2/attachment.html>

From phma at bezitopo.org  Fri Feb  7 11:30:10 2020
From: phma at bezitopo.org (Pierre Abbat)
Date: Fri, 07 Feb 2020 14:30:10 -0500
Subject: [PROJ] GRS80 ellipsoid off-center
Message-ID: <2149050.AmXivRcvI7@mooncat>

I'm at the North Carolina surveyors' conference, and yesterday I attended the 
talk about the new coordinate systems coming in 2022. The projection will 
still be conformal conic, with some changes. There will be one parallel and a 
scale factor instead of two parallels. (The representations are equivalent, 
and I've written code that converts two parallels into one parallel and a 
scale factor.) The false easting will be a round number in metric rather than 
feet converted to meters and rounded to the centimeter. And the ellipsoid will 
be centered at the center of mass of the earth, rather than a few meters off.

I asked the speaker what name to use to distinguish the two ellipsoids. He 
didn't know, said they're both GRS80. I mentioned that the Greek ellipsoid 
(HGRS87, but I didn't remember the name at the moment) has the same shape, but 
is offset to fit Greece better, and has its own name. Is there a retronym to 
distinguish the previous GRS80, which turned out to be slightly offset, from 
GRS80 centered at the center of the earth?

Pierre
-- 
La sal en el mar es más que en la sangre.
Le sel dans la mer est plus que dans le sang.




From cjmce at lsu.edu  Fri Feb  7 11:44:23 2020
From: cjmce at lsu.edu (Clifford J Mugnier)
Date: Fri, 7 Feb 2020 19:44:23 +0000
Subject: [PROJ] GRS80 ellipsoid off-center
In-Reply-To: <2149050.AmXivRcvI7@mooncat>
References: <2149050.AmXivRcvI7@mooncat>
Message-ID: <DM6PR06MB623528523A308944BF6CE878A81C0@DM6PR06MB6235.namprd06.prod.outlook.com>

No.  Same ellipsoid, same name.  Different DATUMS, different names.

Get Outlook for iOS<https://aka.ms/o0ukef>
________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Pierre Abbat <phma at bezitopo.org>
Sent: Friday, February 7, 2020 1:30:10 PM
To: proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: [PROJ] GRS80 ellipsoid off-center

I'm at the North Carolina surveyors' conference, and yesterday I attended the
talk about the new coordinate systems coming in 2022. The projection will
still be conformal conic, with some changes. There will be one parallel and a
scale factor instead of two parallels. (The representations are equivalent,
and I've written code that converts two parallels into one parallel and a
scale factor.) The false easting will be a round number in metric rather than
feet converted to meters and rounded to the centimeter. And the ellipsoid will
be centered at the center of mass of the earth, rather than a few meters off.

I asked the speaker what name to use to distinguish the two ellipsoids. He
didn't know, said they're both GRS80. I mentioned that the Greek ellipsoid
(HGRS87, but I didn't remember the name at the moment) has the same shape, but
is offset to fit Greece better, and has its own name. Is there a retronym to
distinguish the previous GRS80, which turned out to be slightly offset, from
GRS80 centered at the center of the earth?

Pierre
--
La sal en el mar es más que en la sangre.
Le sel dans la mer est plus que dans le sang.



_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://nam04.safelinks.protection.outlook.com/?url=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fproj&amp;data=02%7C01%7Ccjmce%40lsu.edu%7Cef52dce1f4474253c66f08d7ac0434c1%7C2d4dad3f50ae47d983a09ae2b1f466f8%7C0%7C0%7C637167006377571486&amp;sdata=uDIfzYAQrFDJuIoQ1zsuUjy3vf1l8oPpEmCZiID4jSM%3D&amp;reserved=0
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/f372fe32/attachment-0001.html>

From Jochem.Lesparre at kadaster.nl  Fri Feb  7 12:04:46 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Fri, 7 Feb 2020 20:04:46 +0000
Subject: [PROJ] GRS80 ellipsoid off-center
In-Reply-To: <2149050.AmXivRcvI7@mooncat>
References: <2149050.AmXivRcvI7@mooncat>
Message-ID: <VI1P192MB0016D3EABA63790ACAACA371EF1C0@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>

Hi Pierre,

It is normal that ellipsoids with the same shape but different centre have the same name. An ellipsoid is defined by the semi-major axis (a) and the flattening (f). The location of the centre, orientation and scale are part of the geodetic datum, not of the ellipsoid.

To make it even more complicated, slight changes in the datum transformation parameters due no new measurements are often considered a new realisation. But not always a new name is used for the datum.

Often, the distinction between reference system, ellipsoid and datum is not clearly made and they get the same name or people consider (wrongly according to me) that the ellipsoid is part of the datum. Differences between reference frames (=realisation) and the reference system are seldomly made. ITRS being the most important exception.

So the solution is not to use a different names for the same ellipsoid, but to introduce clear unique names for the different datums and realisations.

Kind regards, Jochem

Get Outlook for Android<https://aka.ms/ghei36>

________________________________
From: PROJ <proj-bounces at lists.osgeo.org> on behalf of Pierre Abbat <phma at bezitopo.org>
Sent: Friday, February 7, 2020 8:30:10 PM
To: proj at lists.osgeo.org <proj at lists.osgeo.org>
Subject: [PROJ] GRS80 ellipsoid off-center

I'm at the North Carolina surveyors' conference, and yesterday I attended the
talk about the new coordinate systems coming in 2022. The projection will
still be conformal conic, with some changes. There will be one parallel and a
scale factor instead of two parallels. (The representations are equivalent,
and I've written code that converts two parallels into one parallel and a
scale factor.) The false easting will be a round number in metric rather than
feet converted to meters and rounded to the centimeter. And the ellipsoid will
be centered at the center of mass of the earth, rather than a few meters off.

I asked the speaker what name to use to distinguish the two ellipsoids. He
didn't know, said they're both GRS80. I mentioned that the Greek ellipsoid
(HGRS87, but I didn't remember the name at the moment) has the same shape, but
is offset to fit Greece better, and has its own name. Is there a retronym to
distinguish the previous GRS80, which turned out to be slightly offset, from
GRS80 centered at the center of the earth?

Pierre
--
La sal en el mar es más que en la sangre.
Le sel dans la mer est plus que dans le sang.



_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200207/52750e60/attachment.html>

From even.rouault at spatialys.com  Fri Feb  7 12:10:15 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 07 Feb 2020 21:10:15 +0100
Subject: [PROJ] GRS80 ellipsoid off-center
In-Reply-To: <DM6PR06MB623528523A308944BF6CE878A81C0@DM6PR06MB6235.namprd06.prod.outlook.com>
References: <2149050.AmXivRcvI7@mooncat>
 <DM6PR06MB623528523A308944BF6CE878A81C0@DM6PR06MB6235.namprd06.prod.outlook.com>
Message-ID: <2629131.adBQHvXYUk@even-i700>

On vendredi 7 février 2020 19:44:23 CET Clifford J Mugnier wrote:
> No.  Same ellipsoid, same name.  Different DATUMS, different names.

Indeed. And those will be time-dependent datums.

All details in
https://geodesy.noaa.gov/library/pdfs/NOAA_TR_NOS_NGS_0062.pdf
https://geodesy.noaa.gov/library/pdfs/NOAA_TR_NOS_NGS_0064.pdf
https://geodesy.noaa.gov/PUBS_LIB/NOAA_TR_NOS_NGS_0067.pdf

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From brian.shaw at noaa.gov  Fri Feb  7 14:25:10 2020
From: brian.shaw at noaa.gov (Brian Shaw)
Date: Fri, 7 Feb 2020 17:25:10 -0500
Subject: [PROJ] GRS80 ellipsoid off-center
In-Reply-To: <2629131.adBQHvXYUk@even-i700>
References: <2149050.AmXivRcvI7@mooncat>
 <DM6PR06MB623528523A308944BF6CE878A81C0@DM6PR06MB6235.namprd06.prod.outlook.com>
 <2629131.adBQHvXYUk@even-i700>
Message-ID: <2f49dec1-780a-65df-b03b-b76d5ad05b8b@noaa.gov>

As others of stated it is the same ellipsoid, only the origin of the 
ellipsoid is being shifted 2.2 meters to what is considered the center 
of mass today (what ITRF determines).  While NAD 83 and the original 
WGS84 were off center, 2.2 meters was not bad considering this was 
mostly determined using Doppler and other measurements prior to GPS.

As for your projection parameters I believe you are referencing SPCS 
changes coming with NSRS Modernization.   Assuming so you would be 
interested to know that SPCS2022 will now develop the projections based 
on the surface of land where SPCS83 was developed on the ellipsoid.  
Many states are planning to develop (or already have) Low Distortion 
Projections for their states in addition to the zones NGS will develop.

Addition resources about SPCS:

Home page with links to many maps and data:
https://geodesy.noaa.gov/SPCS/index.shtml

The State Plane Coordinate System History, Policy, and Future Directions
https://geodesy.noaa.gov/library/pdfs/SP_NOS_NGS_13.pdf

2 most recent Recorded Webinars on SPCS
https://geodesy.noaa.gov/web/science_edu/webinar_series/guide-customizing-spcs-2022.shtml
https://geodesy.noaa.gov/web/science_edu/webinar_series/state-plane-coordinates-3.shtml

Cheers
Brian

On 2/7/2020 3:10 PM, Even Rouault wrote:
> On vendredi 7 février 2020 19:44:23 CET Clifford J Mugnier wrote:
>> No.  Same ellipsoid, same name.  Different DATUMS, different names.
> Indeed. And those will be time-dependent datums.
>
> All details in
> https://geodesy.noaa.gov/library/pdfs/NOAA_TR_NOS_NGS_0062.pdf
> https://geodesy.noaa.gov/library/pdfs/NOAA_TR_NOS_NGS_0064.pdf
> https://geodesy.noaa.gov/PUBS_LIB/NOAA_TR_NOS_NGS_0067.pdf
>

-- 
*************************************
Brian Shaw
Geodesist
NOAA/NOS/National Geodetic Survey
Phone # 240-533-9522


From Jelmer.Baas at speerit.nl  Sun Feb  9 11:18:04 2020
From: Jelmer.Baas at speerit.nl (Jelmer Baas)
Date: Sun, 9 Feb 2020 19:18:04 +0000
Subject: [PROJ] Proper projection system for Aruba
In-Reply-To: <VI1P192MB0016730B5C33B90A07878FFAEF1C0@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>
References: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
 <VI1P192MB0016730B5C33B90A07878FFAEF1C0@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>
Message-ID: <AM0P191MB0676A2B532210CCC363513BC9C1E0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>

Hi Jochem,

Thank you for the information. I'll dig through their documentation and contact them.

Here's to hoping I can provide the proj string, later on.

Regards,
Jelmer Baas

From: Lesparre, Jochem <Jochem.Lesparre at kadaster.nl>
Sent: vrijdag 7 februari 2020 17:31
To: Jelmer Baas <Jelmer.Baas at speerit.nl>; proj at lists.osgeo.org
Subject: RE: Proper projection system for Aruba

Hi Jelmer,

Aruba's CRS is a local TM projection with its central meridian through the Hooiberg. Unfortunately it is not in the EPSG registry.

An approximate transformation is available in the PCTrans software by the Dutch Hydrographic Service:
https://english.defensie.nl/topics/hydrography/documents/applications/2018/06/06/pctrans5_20180601

If you want to use PROJ, the transformation parameters of PCTrans can probably be found in de documentation of the software or obtained by sending a message to NSGI:
https://www.nsgi.nl/over-ons/nsgi/contact

Precise (sub metre) transformation parameters are available at the local authorities DLV, and more precise (centimetre) transformation parameters should be computed for DLV this year. However, I'm not sure if they share these. Contact information can be found here:
https://www.overheid.aw/home-ned/departementen_46763/item/dienst-landmeetkunde-en-vastgoedregistratie-dlv_4615.html
If this contact information is outdated, you can contact NSGI (see above) to ask to get you in touch with DLV.

Kind regards, Jochem


From: PROJ <proj-bounces at lists.osgeo.org<mailto:proj-bounces at lists.osgeo.org>> On Behalf Of Jelmer Baas
Sent: vrijdag 7 februari 2020 16:01
To: proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>
Subject: [PROJ] Proper projection system for Aruba

Hello,

I'm trying to convert coordinates from what seems to be a custom projection system in Aruba, without much luck.

In their drawings, they have data around 3000, 18000. Whatever existing projection system I use (EPSG 24819, EPSG 32619), I end up at a completely different location.

For example:
echo 2936 18088 | cs2cs +proj=utm +zone=19 +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84
-8178296.58     17850.76 22.52

echo 2936 18088 | cs2cs +proj=utm +ellps=intl +towgs84=-216.408,279.243,-203.231,-8.56912,40.8756,-12.5593,15.8909 +units=m +to +proj=webmerc +datum=WGS84
-830835.88      16729.91 101.08

This is way outside the expected area. In 3857, the data should be somewhere between
-7800000, 1417000
-7777000, 1393000

I do have the attached ".gtf" files, but I'm unsure how to apply this in proj. Is the above string correct? What am I missing?

Any help would be greatly appreciated.

Regards,
Jelmer Baas



Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u
dit direct te melden aan de verzender en het bericht te vernietigen.
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent
of the Kadaster is unlawful. If you have received this message, but are not the addressee,
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200209/03d2f986/attachment.html>

From pierrechapo at gmail.com  Mon Feb 10 01:11:03 2020
From: pierrechapo at gmail.com (Pierre Chaponniere)
Date: Mon, 10 Feb 2020 10:11:03 +0100
Subject: [PROJ] Transformation for local grid
Message-ID: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>

Dear all,

I am struggling to elaborate a pipeline with proj v6.3 that would transform
lat long coordinates to a local grid system.
>From what I see, I have all the required parameters, so I did a 3 step
pipeline :

1/ transform from lat long wgs84 to projected using tmerc.

2/ run horizontal transformation which is a rotation around an origin - I
was thinking of using the the Molobadekas transform for this purpose

3/ vertical shift for which I have an origin as well, east and north slope
entries in ppm - i still need to figure how I'll pass this one...

So my proj line so far looks like this :

proj +proj=pipeline +step +proj=tmerc +lat_0=-1.90 +lon_0=115.90
+y_0=538.374 +x_0=5200.27 +ellps=GRS80 +step +proj=molobadekas
+convention=coordinate_frame +x=-9.85881089465147 +y=-0.172038726321603
+s=17.60710142 +rz=1485.3205006576768028 +px=5225.30897756133
+py=-830.070127940344

But I keep on having errors as 'malformed pipeline' or 'non-angular input
coordinates'...
Even trying to pass the Molobadekas transform on its own, I struggle...

Do you see anything that I am doing totally wrong here ?
Would be really appreciated to have your insight on this !

Thanks heaps,

Best regards,

Pierre C
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200210/b6f7c11e/attachment.html>

From even.rouault at spatialys.com  Mon Feb 10 01:23:53 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 10 Feb 2020 10:23:53 +0100
Subject: [PROJ] Transformation for local grid
In-Reply-To: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>
References: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>
Message-ID: <1783328.NGVPz3WUTz@even-i700>

Pierre,

> I am struggling to elaborate a pipeline with proj v6.3 that would transform
> lat long coordinates to a local grid system.
> From what I see, I have all the required parameters, so I did a 3 step
> pipeline :
> 
> 1/ transform from lat long wgs84 to projected using tmerc.
> 
> 2/ run horizontal transformation which is a rotation around an origin - I
> was thinking of using the the Molobadekas transform for this purpose
> 

No, Molobadekas operates on cartesian/geocentric coordinates. Which explains 
that your pipeline doesn't work: the output of +proj=tmerc is projected 
coordinates which are rejected by +proj=molobadekas (admitedly error reporting 
is rather raw)

You likely want to use
https://proj.org/operations/transformations/affine.html
instead . Can be used for translation and rotation. If you don't want to 
compute the combined affine transform matrix (*), the simplest is probably to 
chain it 3 times: one time to shift coordinates to the rotation center, one to 
apply the rotation, and the last time to undo the shift.

Even

(*) A formula for that at:
https://www.euclideanspace.com/maths/geometry/affine/aroundPoint/matrix2d/
index.htm

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Jochem.Lesparre at kadaster.nl  Mon Feb 10 01:23:19 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Mon, 10 Feb 2020 09:23:19 +0000
Subject: [PROJ] Transformation for local grid
In-Reply-To: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>
References: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>
Message-ID: <AM6P192MB047017D0B1F6E6EFD0601CC7EF190@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>

Hi Pierre,

Your horizontal transformation is in geographic (angular) coordinates. So you have to do that before the projection to coordinates in metres.

Regard, Jochem


From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Pierre Chaponniere
Sent: maandag 10 februari 2020 10:11
To: proj at lists.osgeo.org
Subject: [PROJ] Transformation for local grid

Dear all,

I am struggling to elaborate a pipeline with proj v6.3 that would transform lat long coordinates to a local grid system.
From what I see, I have all the required parameters, so I did a 3 step pipeline :

1/ transform from lat long wgs84 to projected using tmerc.

2/ run horizontal transformation which is a rotation around an origin - I was thinking of using the the Molobadekas transform for this purpose

3/ vertical shift for which I have an origin as well, east and north slope entries in ppm - i still need to figure how I'll pass this one...

So my proj line so far looks like this :

proj +proj=pipeline +step +proj=tmerc +lat_0=-1.90 +lon_0=115.90 +y_0=538.374 +x_0=5200.27 +ellps=GRS80 +step +proj=molobadekas +convention=coordinate_frame +x=-9.85881089465147 +y=-0.172038726321603 +s=17.60710142 +rz=1485.3205006576768028 +px=5225.30897756133 +py=-830.070127940344

But I keep on having errors as 'malformed pipeline' or 'non-angular input coordinates'...
Even trying to pass the Molobadekas transform on its own, I struggle...

Do you see anything that I am doing totally wrong here ?
Would be really appreciated to have your insight on this !

Thanks heaps,

Best regards,

Pierre C




Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200210/fdeddd08/attachment.html>

From even.rouault at spatialys.com  Mon Feb 10 02:24:34 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 10 Feb 2020 11:24:34 +0100
Subject: [PROJ] PROJ 6.3.1RC1
Message-ID: <2431239.6HfofEmKSU@even-i700>

Hi,

I've prepared a PROJ 6.3.1 RC1:

https://download.osgeo.org/proj/proj-6.3.1RC1.tar.gz
https://download.osgeo.org/proj/proj-6.3.1RC1.tar.gz.md5
https://download.osgeo.org/proj/proj-6.3.1RC1.zip
https://download.osgeo.org/proj/proj-6.3.1RC1.zip.md5

See the release notes below.

Please test the release candidates and report back any problems you
may encounter. 

Even

————————————

6.3.1 Release Notes
-------------------

 Updates
 -------

 o Update the EPSG database to version 9.8.6

 o Database: add mapping for gg10_smv2.mnt and gg10_sbv2.mnt French grids

 o Database: add mapping for TOR27CSv1.GSB

 Bug fixes
 ---------

 o Fix wrong use of derivingConversionRef() that caused issues with use of
   +init=epsg:XXXX by GDAL (affecting R spatial libraries) or in MapServer

 o fix exporting CoordinateSystem to PROJ JSON with ID

 o projinfo: use No. abbreviation instead of UTF-8 character (#1828)

 o CompoundCRS::identify(): avoid exception when horiz/vertical part is a
   BoundCRS

 o createOperations(): fix dealing with projected 3D CRS whose Z units != 
metre

 o WKT1_GDAL export: limit datum name massaging to names matching EPSG (#1835)

 o unitconvert with mjd time format: avoid potential integer overflow
  (ossfuzz 20072)

 o ProjectedCRS::identify(): fix wrong identification of some ESRI WKT linked
   to units

 o Database: add a geoid_like value for proj_method column of 
grid_alternatives,
   fix related entries and simplify/robustify logic to deal with EPSG
   'Geographic3D to GravityRelatedHeight' methods

 o Fix ingestion of +proj=cea with +k_0 (#1881)

 o Fix performance issue, affecting PROJ.4 string generation of EPSG:7842
   (#1913)

 o Fix identification of ESRI-style datum names starting with D_ but without
   alias (#1911)

 o cart: Avoid discontinuity at poles in the inverse case (#1906)

 o Various updates to make regression test suite pass with gcc on i386 (#1906)


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pierrechapo at gmail.com  Mon Feb 10 03:07:31 2020
From: pierrechapo at gmail.com (Pierre Chaponniere)
Date: Mon, 10 Feb 2020 12:07:31 +0100
Subject: [PROJ] Transformation for local grid
In-Reply-To: <1783328.NGVPz3WUTz@even-i700>
References: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>
 <1783328.NGVPz3WUTz@even-i700>
Message-ID: <CAAKeCHaEo9k2Ams2sQaRaXN5z0cvoBWVgyBmuSEhN9K2iZ_W3Q@mail.gmail.com>

Dear all,

thanks heaps to Jochem and Even, this is great ! What a reactivity !
I managed to run my translation, rotation and back - all went well.

I thought the easiest would have been the z but somehow proj does not
recognize my +zoff argument for an affine transformation.

For example in my below proj command, the +zoff is ignored...Have you
encountered this before?

echo 115.90428843055600 -1.92307681111111 126.014 0 | proj +proj=pipeline
+step +proj=tmerc +lat_0=-1.90355333888889 +lon_0=115.900912891667
+y_0=538.374 +x_0=5200.27 +ellps=GRS80 +step +proj=affine
+xoff=-5225.30897756133 +yoff=830.070127940344 +step +proj=affine
+s21=-0.0072010369955164367159  +s12=0.0072010369955164367159
+tscale=1.00001760710142 +step +proj=affine +xoff=5225.30897756133
+yoff=-830.070127940344 +step +proj=affine +xoff=-9.85881089465147
+yoff=-0.172038726321603 +zoff=-18.541

If you have a suggestion...
Thanks !
Best regards,

Pierre C


Le lun. 10 févr. 2020 à 10:23, Even Rouault <even.rouault at spatialys.com> a
écrit :

> Pierre,
>
> > I am struggling to elaborate a pipeline with proj v6.3 that would
> transform
> > lat long coordinates to a local grid system.
> > From what I see, I have all the required parameters, so I did a 3 step
> > pipeline :
> >
> > 1/ transform from lat long wgs84 to projected using tmerc.
> >
> > 2/ run horizontal transformation which is a rotation around an origin - I
> > was thinking of using the the Molobadekas transform for this purpose
> >
>
> No, Molobadekas operates on cartesian/geocentric coordinates. Which
> explains
> that your pipeline doesn't work: the output of +proj=tmerc is projected
> coordinates which are rejected by +proj=molobadekas (admitedly error
> reporting
> is rather raw)
>
> You likely want to use
> https://proj.org/operations/transformations/affine.html
> instead . Can be used for translation and rotation. If you don't want to
> compute the combined affine transform matrix (*), the simplest is probably
> to
> chain it 3 times: one time to shift coordinates to the rotation center,
> one to
> apply the rotation, and the last time to undo the shift.
>
> Even
>
> (*) A formula for that at:
> https://www.euclideanspace.com/maths/geometry/affine/aroundPoint/matrix2d/
> index.htm
> <https://www.euclideanspace.com/maths/geometry/affine/aroundPoint/matrix2d/index.htm>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200210/aff19d29/attachment.html>

From even.rouault at spatialys.com  Mon Feb 10 03:45:25 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 10 Feb 2020 12:45:25 +0100
Subject: [PROJ] Transformation for local grid
In-Reply-To: <CAAKeCHaEo9k2Ams2sQaRaXN5z0cvoBWVgyBmuSEhN9K2iZ_W3Q@mail.gmail.com>
References: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>
 <1783328.NGVPz3WUTz@even-i700>
 <CAAKeCHaEo9k2Ams2sQaRaXN5z0cvoBWVgyBmuSEhN9K2iZ_W3Q@mail.gmail.com>
Message-ID: <2691013.tkk97xiSZV@even-i700>

On lundi 10 février 2020 12:07:31 CET Pierre Chaponniere wrote:
> Dear all,
> 
> thanks heaps to Jochem and Even, this is great ! What a reactivity !
> I managed to run my translation, rotation and back - all went well.
> 
> I thought the easiest would have been the z but somehow proj does not
> recognize my +zoff argument for an affine transformation.
> 
> For example in my below proj command, the +zoff is ignored...Have you
> encountered this before?

"proj" is the ancient way of transforming coordinates, and as its name 
suggests (or not), it is only meant at dealing with plain cartographic 
projections, and 2D coords only, and generally not pipeline strings. That it 
works a bit for you is a bit by accident. It copies blindly any numeric or 
non-numeric values after the first 2 ones.

Just replace "proj" by "cct" and you'll get the expected result.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From vanadovv at hetnet.nl  Mon Feb 10 05:25:16 2020
From: vanadovv at hetnet.nl (Oscar van Vlijmen)
Date: Mon, 10 Feb 2020 14:25:16 +0100 (CET)
Subject: [PROJ] Proper projection system for Aruba
In-Reply-To: <AM0P191MB0676A2B532210CCC363513BC9C1E0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
References: <AM0P191MB067678E2B25039EC1378AC919C1C0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
 <VI1P192MB0016730B5C33B90A07878FFAEF1C0@VI1P192MB0016.EURP192.PROD.OUTLOOK.COM>
 <AM0P191MB0676A2B532210CCC363513BC9C1E0@AM0P191MB0676.EURP191.PROD.OUTLOOK.COM>
Message-ID: <1843018987.250133.1581341117149@kpc.webmail.kpnmail.nl>

Interestingly,

In the Excel from Het Kadaster with the TM parameters for Aruba, Mugnier 2002 is mentioned as source.
Grids & Datums of July 2002.
The used source for the transformation parameters is Doyle 2006 (NGS, NOAA, October 2006).
The mentioned Excel is part of PCTRANS.

Oscar van Vlijmen





> Op 9 februari 2020 om 20:18 schreef Jelmer Baas <Jelmer.Baas at speerit.nl>:
> 
> 
>     Hi Jochem,
> 
> 
>     Thank you for the information. I’ll dig through their documentation and contact them.
> 
> 
>     Here’s to hoping I can provide the proj string, later on.
> 
> 
>     Regards,
>     Jelmer Baas
> 
> 
>     From: Lesparre, Jochem <Jochem.Lesparre at kadaster.nl>
>     Sent: vrijdag 7 februari 2020 17:31
>     To: Jelmer Baas <Jelmer.Baas at speerit.nl>; proj at lists.osgeo.org
>     Subject: RE: Proper projection system for Aruba
> 
> 
>     Hi Jelmer,
> 
> 
>     Aruba’s CRS is a local TM projection with its central meridian through the Hooiberg. Unfortunately it is not in the EPSG registry.
> 
> 
>     An approximate transformation is available in the PCTrans software by the Dutch Hydrographic Service:
> 
>     https://english.defensie.nl/topics/hydrography/documents/applications/2018/06/06/pctrans5_20180601
> 
> 
>     If you want to use PROJ, the transformation parameters of PCTrans can probably be found in de documentation of the software or obtained by sending a message to NSGI:
> 
>     https://www.nsgi.nl/over-ons/nsgi/contact
> 
> 
>     Precise (sub metre) transformation parameters are available at the local authorities DLV, and more precise (centimetre) transformation parameters should be computed for DLV this year. However, I’m not sure if they share these. Contact information can be found here:
> 
>     https://www.overheid.aw/home-ned/departementen_46763/item/dienst-landmeetkunde-en-vastgoedregistratie-dlv_4615.html
> 
>     If this contact information is outdated, you can contact NSGI (see above) to ask to get you in touch with DLV.
> 
> 
>     Kind regards, Jochem
> 

> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200210/06ebbfba/attachment.html>

From pierrechapo at gmail.com  Tue Feb 11 04:17:14 2020
From: pierrechapo at gmail.com (Pierre Chaponniere)
Date: Tue, 11 Feb 2020 13:17:14 +0100
Subject: [PROJ] Transformation for local grid
In-Reply-To: <2691013.tkk97xiSZV@even-i700>
References: <CAAKeCHZaC3D=DyT27Pq=jsgijCQcS+G0Y4CzR=08mvOuA7b9pA@mail.gmail.com>
 <1783328.NGVPz3WUTz@even-i700>
 <CAAKeCHaEo9k2Ams2sQaRaXN5z0cvoBWVgyBmuSEhN9K2iZ_W3Q@mail.gmail.com>
 <2691013.tkk97xiSZV@even-i700>
Message-ID: <CAAKeCHZFjTVi4T8F1SVZ8bZTH_fmESChC_j6VLzoLa2F0c0x_w@mail.gmail.com>

Hi Even & all,

thanks a lot, the change does the trick and I am able to consider my +zoff
argument.

A subsequent issue has emerged since then...

I want to add a cs2cs transform in my pipeline where I already use cct.
Appears there is a conflict in doing so.
What I would like to do is to pipe the following

cct +proj=pipeline
+step +proj=cs2cs EPSG:4978 EPSG:4326
+step +proj=tmerc +lat_0=-1.90355333888889 +lon_0=115.900912891667
+y_0=538.374 +x_0=5200.27 +ellps=GRS80
+step +proj=affine +xoff=-5225.30897756133 +yoff=830.070127940344
+step +proj=affine +s21=-0.0072010369955164367159
+s12=0.0072010369955164367159
+step +proj=affine +xoff=5225.30897756133 +yoff=-830.070127940344
+step +proj=affine +xoff=-9.85881089465147 +yoff=-0.172038726321603
+zoff=-18.541

But my issue is that cct does not seem to 'like' my cs2cs argument - I get
a bad transformation argument error
How could I specify this transformation inside the pipeline ? I would like
as much as possible not to use 2 pipes, just a single one.
The other issue is that cct seems to consider the order long/lat while
cs2cs accepts lat/long - is there a way to modify the formating or I need
to use the -c argument to sepcify the field order ?

Thanks again for your help on this subject !
Hopefully this will be my last request.

Best regards,

Pierre C


Le lun. 10 févr. 2020 à 12:45, Even Rouault <even.rouault at spatialys.com> a
écrit :

> On lundi 10 février 2020 12:07:31 CET Pierre Chaponniere wrote:
> > Dear all,
> >
> > thanks heaps to Jochem and Even, this is great ! What a reactivity !
> > I managed to run my translation, rotation and back - all went well.
> >
> > I thought the easiest would have been the z but somehow proj does not
> > recognize my +zoff argument for an affine transformation.
> >
> > For example in my below proj command, the +zoff is ignored...Have you
> > encountered this before?
>
> "proj" is the ancient way of transforming coordinates, and as its name
> suggests (or not), it is only meant at dealing with plain cartographic
> projections, and 2D coords only, and generally not pipeline strings. That
> it
> works a bit for you is a bit by accident. It copies blindly any numeric or
> non-numeric values after the first 2 ones.
>
> Just replace "proj" by "cct" and you'll get the expected result.
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200211/e2d43897/attachment.html>

From even.rouault at spatialys.com  Tue Feb 11 06:45:05 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 11 Feb 2020 15:45:05 +0100
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
Message-ID: <5817136.eLAqEMP8co@even-i700>

PSC Members,

Issue https://github.com/OSGeo/PROJ/issues/1925 has been raised regarding a 
change of behavior related to Dutch grids. The EPSG v9.8.6 upgrade in 6.3.1 
now supersedes the 2008 Dutch (non free) grids by the 2018 ones (CC BY 4.0). 
That change impact results when using the automatic pipeline computations like 
cs2cs, hopefully for the best. We didn't ship the 2008 grids in
proj-datumgrid-europe because of their license, and we don't yet ship the 2018 
ones in proj-datumgrid-europe (the update has been done only in the new PROJ-
data geotiff based directory), so users have to manually install them directly 
from the data producer or the Debian proj-rdnap package, which doesn't change 
a lot the situation since they already had to do that for the 2008 grids.

So all in all,

Motion: promote PROJ 6.3.1RC1 to final release

Starting with my +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Tue Feb 11 07:14:35 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 11 Feb 2020 15:14:35 +0000
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <5817136.eLAqEMP8co@even-i700>
References: <5817136.eLAqEMP8co@even-i700>
Message-ID: <8337c27e20144e91ada7671c2175e0b2@sdfe.dk>

+1

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 11. februar 2020 15:45
To: proj at lists.osgeo.org
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release

PSC Members,

Issue https://github.com/OSGeo/PROJ/issues/1925 has been raised regarding a 
change of behavior related to Dutch grids. The EPSG v9.8.6 upgrade in 6.3.1 
now supersedes the 2008 Dutch (non free) grids by the 2018 ones (CC BY 4.0). 
That change impact results when using the automatic pipeline computations like 
cs2cs, hopefully for the best. We didn't ship the 2008 grids in
proj-datumgrid-europe because of their license, and we don't yet ship the 2018 
ones in proj-datumgrid-europe (the update has been done only in the new PROJ-
data geotiff based directory), so users have to manually install them directly 
from the data producer or the Debian proj-rdnap package, which doesn't change 
a lot the situation since they already had to do that for the 2008 grids.

So all in all,

Motion: promote PROJ 6.3.1RC1 to final release

Starting with my +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From howard at hobu.co  Tue Feb 11 07:17:54 2020
From: howard at hobu.co (Howard Butler)
Date: Tue, 11 Feb 2020 09:17:54 -0600
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <8337c27e20144e91ada7671c2175e0b2@sdfe.dk>
References: <5817136.eLAqEMP8co@even-i700>
 <8337c27e20144e91ada7671c2175e0b2@sdfe.dk>
Message-ID: <CAKyBbG4yJtJ+_uVR=LSxy0z_whCFqaR6T6nzzC4UVOp0pH5EhQ@mail.gmail.com>

+1

On Tue, Feb 11, 2020 at 9:14 AM Kristian Evers <kreve at sdfe.dk> wrote:

> +1
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Even Rouault
> Sent: 11. februar 2020 15:45
> To: proj at lists.osgeo.org
> Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
>
> PSC Members,
>
> Issue https://github.com/OSGeo/PROJ/issues/1925 has been raised regarding
> a
> change of behavior related to Dutch grids. The EPSG v9.8.6 upgrade in
> 6.3.1
> now supersedes the 2008 Dutch (non free) grids by the 2018 ones (CC BY
> 4.0).
> That change impact results when using the automatic pipeline computations
> like
> cs2cs, hopefully for the best. We didn't ship the 2008 grids in
> proj-datumgrid-europe because of their license, and we don't yet ship the
> 2018
> ones in proj-datumgrid-europe (the update has been done only in the new
> PROJ-
> data geotiff based directory), so users have to manually install them
> directly
> from the data producer or the Debian proj-rdnap package, which doesn't
> change
> a lot the situation since they already had to do that for the 2008 grids.
>
> So all in all,
>
> Motion: promote PROJ 6.3.1RC1 to final release
>
> Starting with my +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200211/199a501e/attachment.html>

From sebastic at xs4all.nl  Tue Feb 11 20:42:17 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 12 Feb 2020 05:42:17 +0100
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <5817136.eLAqEMP8co@even-i700>
References: <5817136.eLAqEMP8co@even-i700>
Message-ID: <10ad0b48-ebc2-fde1-47fa-f977d2d04c65@xs4all.nl>

On 2/11/20 3:45 PM, Even Rouault wrote:
> Issue https://github.com/OSGeo/PROJ/issues/1925 has been raised regarding a 
> change of behavior related to Dutch grids. The EPSG v9.8.6 upgrade in 6.3.1 
> now supersedes the 2008 Dutch (non free) grids by the 2018 ones (CC BY 4.0). 

Only EPSG:7001 for naptrans2008.gtx it seems (which was replaced by
EPSG:9283 for nlgeo2018.gtx), EPSG:7000 for rdtrans2008.gsb is unchanged
between 9.8.4 & 9.8.6.

EPSG:7415 (which is used in the tests) is also unchanged, this uses
EPSG:5709 for NAP for which EPSG:7001 was a coordinate operation.


The Debian packaging revealed another issue in 6.3.1RC1,
`make distclean` is buggy:

 https://github.com/OSGeo/PROJ/issues/1927

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From Jochem.Lesparre at kadaster.nl  Wed Feb 12 03:47:34 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Wed, 12 Feb 2020 11:47:34 +0000
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <10ad0b48-ebc2-fde1-47fa-f977d2d04c65@xs4all.nl>
References: <5817136.eLAqEMP8co@even-i700>
 <10ad0b48-ebc2-fde1-47fa-f977d2d04c65@xs4all.nl>
Message-ID: <AM6P192MB047007EB4D4D534A9955A548EF1B0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>

Why aren't the Dutch 2018 grids included? And why aren't at least the 2008 grids used instead? It looks like cs2cs EPSG:4937 +to EPSG:7415 uses no grid at all, but a 7 parameter transformation, introducing errors up to 25 cm horizontally and large errors vertically.

What can I do to help to make cs2cs EPSG:4937 +to EPSG:7415 give the correct results in 6.3.1 or 7.0.0?

Kind regards, Jochem




Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message

From sebastic at xs4all.nl  Wed Feb 12 04:07:43 2020
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Wed, 12 Feb 2020 13:07:43 +0100
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <AM6P192MB047007EB4D4D534A9955A548EF1B0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>
References: <5817136.eLAqEMP8co@even-i700>
 <10ad0b48-ebc2-fde1-47fa-f977d2d04c65@xs4all.nl>
 <AM6P192MB047007EB4D4D534A9955A548EF1B0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>
Message-ID: <35f3ea517bd35fab7b2eee7f13e88302@xs4all.nl>

On 2020-02-12 12:47, Lesparre, Jochem wrote:
> Why aren't the Dutch 2018 grids included?

Because there is no new release of proj-datumgrids-europe yet which does 
include them.

If proj-datumgrids-europe-1.6 gets released the 2018 grids will be 
included.

With the new CDN the regional datumgrid archives are deprecated, so 
there is less demand for the them.

It would be nice to see new regional datumgrid releases along with PROJ 
6.3.1, and for another year or so (assuming there are changes) until 
PROJ 7 and its CDN support is more widely adopted.

> And why aren't at least the
> 2008 grids used instead? It looks like cs2cs EPSG:4937 +to EPSG:7415
> uses no grid at all, but a 7 parameter transformation, introducing
> errors up to 25 cm horizontally and large errors vertically.

If I understand correctly the grids will only be used by cs2cs if they 
are locally available, so you need to have the grids installed in 
PROJ_LIB already.

The first option suggested by projinfo 6.3.1 used the 2018 grids, but 
this may not have been the solution used by cs2cs.

Kind Regards,

Bas

From sebastic at xs4all.nl  Wed Feb 12 04:29:27 2020
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Wed, 12 Feb 2020 13:29:27 +0100
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <35f3ea517bd35fab7b2eee7f13e88302@xs4all.nl>
References: <5817136.eLAqEMP8co@even-i700>
 <10ad0b48-ebc2-fde1-47fa-f977d2d04c65@xs4all.nl>
 <AM6P192MB047007EB4D4D534A9955A548EF1B0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>
 <35f3ea517bd35fab7b2eee7f13e88302@xs4all.nl>
Message-ID: <04961a9ca1ecc7631dab1cf05debc4f6@xs4all.nl>

On 2020-02-12 13:07, Bas Couwenberg wrote:
> On 2020-02-12 12:47, Lesparre, Jochem wrote:
>> And why aren't at least the
>> 2008 grids used instead? It looks like cs2cs EPSG:4937 +to EPSG:7415
>> uses no grid at all, but a 7 parameter transformation, introducing
>> errors up to 25 cm horizontally and large errors vertically.
> 
> If I understand correctly the grids will only be used by cs2cs if they
> are locally available, so you need to have the grids installed in
> PROJ_LIB already.
> 
> The first option suggested by projinfo 6.3.1 used the 2018 grids, but
> this may not have been the solution used by cs2cs.

Just tested with PROJ_DEBUG=5 and it uses the 2018 grids if available, 
but the margin is still exceeded.

  Test:   01 Texel
  Exec:   cs2cs EPSG:4937 +to EPSG:7415 -f %.4f
  Input:  53.160753042 4.824761912 42.8614
  STDERR: pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - 
succeeded
  pj_open_lib(rdtrans2018.gsb): call 
fopen(/usr/share/proj/rdtrans2018.gsb) - succeeded
  pj_open_lib(nlgeo2018.gtx): call fopen(/usr/share/proj/nlgeo2018.gtx) - 
succeeded
  [...]
  Output: 117380.1232     575040.3400 0.9794
  Expect: 117380.1200     575040.3400 1.0000
  x coordinate exceeds 0.001 meters: 0.00320000000647269
  NAP exceeds 0.001 meters: 0.0206
  Test FAILED: From ETRS89 to RD/NAP - 01 Texel

These are the expected values as documented in the 2008 documentation:

  
https://salsa.debian.org/debian-gis-team/proj-rdnap/raw/upstream/2008/Use%20of%20RDTRANS2008%20and%20NAPTRANS2008.pdf

Kind Regards,

Bas

From Jochem.Lesparre at kadaster.nl  Wed Feb 12 04:55:42 2020
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Wed, 12 Feb 2020 12:55:42 +0000
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <04961a9ca1ecc7631dab1cf05debc4f6@xs4all.nl>
References: <5817136.eLAqEMP8co@even-i700>
 <10ad0b48-ebc2-fde1-47fa-f977d2d04c65@xs4all.nl>
 <AM6P192MB047007EB4D4D534A9955A548EF1B0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>
 <35f3ea517bd35fab7b2eee7f13e88302@xs4all.nl>
 <04961a9ca1ecc7631dab1cf05debc4f6@xs4all.nl>
Message-ID: <AM6P192MB0470A8F0E562EC0D216D80C3EF1B0@AM6P192MB0470.EURP192.PROD.OUTLOOK.COM>

Bas, Thanks for the explanation.

That the test exceeds the 0.001 m margin, was expected. The 2018 horizontal grid includes a redefinition of RD, that results in changes up to 0.010 m within the land borders of the Netherlands. The 2018 vertical grid is a new estimate of the geoid which can differ up to 0.025 m with the 2004 estimate of the 2008 grid. For the 2018 grids, the new self-validation data should be used instead.

Regards, Jochem


-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Bas Couwenberg
Sent: woensdag 12 februari 2020 13:29
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release

On 2020-02-12 13:07, Bas Couwenberg wrote:
> On 2020-02-12 12:47, Lesparre, Jochem wrote:
>> And why aren't at least the
>> 2008 grids used instead? It looks like cs2cs EPSG:4937 +to EPSG:7415 
>> uses no grid at all, but a 7 parameter transformation, introducing 
>> errors up to 25 cm horizontally and large errors vertically.
> 
> If I understand correctly the grids will only be used by cs2cs if they 
> are locally available, so you need to have the grids installed in 
> PROJ_LIB already.
> 
> The first option suggested by projinfo 6.3.1 used the 2018 grids, but 
> this may not have been the solution used by cs2cs.

Just tested with PROJ_DEBUG=5 and it uses the 2018 grids if available, but the margin is still exceeded.

  Test:   01 Texel
  Exec:   cs2cs EPSG:4937 +to EPSG:7415 -f %.4f
  Input:  53.160753042 4.824761912 42.8614
  STDERR: pj_open_lib(proj.db): call fopen(/usr/share/proj/proj.db) - succeeded
  pj_open_lib(rdtrans2018.gsb): call
fopen(/usr/share/proj/rdtrans2018.gsb) - succeeded
  pj_open_lib(nlgeo2018.gtx): call fopen(/usr/share/proj/nlgeo2018.gtx) - succeeded
  [...]
  Output: 117380.1232     575040.3400 0.9794
  Expect: 117380.1200     575040.3400 1.0000
  x coordinate exceeds 0.001 meters: 0.00320000000647269
  NAP exceeds 0.001 meters: 0.0206
  Test FAILED: From ETRS89 to RD/NAP - 01 Texel

These are the expected values as documented in the 2008 documentation:

  
https://salsa.debian.org/debian-gis-team/proj-rdnap/raw/upstream/2008/Use%20of%20RDTRANS2008%20and%20NAPTRANS2008.pdf

Kind Regards,

Bas
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj


Disclaimer:
De inhoud van dit bericht is uitsluitend bestemd voor geadresseerde.
Gebruik van de inhoud van dit bericht door anderen zonder toestemming van het Kadaster 
is onrechtmatig. Mocht dit bericht ten onrechte bij u terecht komen, dan verzoeken wij u 
dit direct te melden aan de verzender en het bericht te vernietigen. 
Aan de inhoud van dit bericht kunnen geen rechten worden ontleend.

Disclaimer:
The content of this message is meant to be received by the addressee only.
Use of the content of this message by anyone other than the addressee without the consent 
of the Kadaster is unlawful. If you have received this message, but are not the addressee, 
please contact the sender immediately and destroy the message.
No rights can be derived from the content of this message

From even.rouault at spatialys.com  Thu Feb 13 07:10:03 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 13 Feb 2020 16:10:03 +0100
Subject: [PROJ] Motion: promote PROJ 6.3.1RC1 to final release
In-Reply-To: <5817136.eLAqEMP8co@even-i700>
References: <5817136.eLAqEMP8co@even-i700>
Message-ID: <3101399.gTySFeLS95@even-i700>

> Motion: promote PROJ 6.3.1RC1 to final release
> 

This motion is passed with +1 from PSC members KristianE, HowardB and myself

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Thu Feb 13 07:36:50 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 13 Feb 2020 16:36:50 +0100
Subject: [PROJ] PROJ 6.3.1 is released
Message-ID: <33675582.I2QA5PP0e9@even-i700>

Hi,

The bugfix release PROJ 6.3.1 is released. 
Download the archives here:

https://download.osgeo.org/proj/proj-6.3.1.tar.gz
( https://download.osgeo.org/proj/proj-6.3.1.tar.gz.md5 ) 
https://download.osgeo.org/proj/proj-6.3.1.zip 
( https://download.osgeo.org/proj/proj-6.3.1.zip.md5 )

See the release notes below.

Updating from 6.3.0 is strongly encouraged, particularly to get the following 
fix:
https://github.com/OSGeo/PROJ/commit/79eed0da28abdc41c996dc55ee231f1fcffe4fd2

Even


————————————

6.3.1 Release Notes
-------------------

 Updates
 -------

 o Update the EPSG database to version 9.8.6

 o Database: add mapping for gg10_smv2.mnt and gg10_sbv2.mnt French grids

 o Database: add mapping for TOR27CSv1.GSB

 Bug fixes
 ---------

 o Fix wrong use of derivingConversionRef() that caused issues with use of
   +init=epsg:XXXX by GDAL (affecting R spatial libraries) or in MapServer

 o fix exporting CoordinateSystem to PROJ JSON with ID

 o projinfo: use No. abbreviation instead of UTF-8 character (#1828)

 o CompoundCRS::identify(): avoid exception when horiz/vertical part is a
   BoundCRS

 o createOperations(): fix dealing with projected 3D CRS whose Z units != 
metre

 o WKT1_GDAL export: limit datum name massaging to names matching EPSG (#1835)

 o unitconvert with mjd time format: avoid potential integer overflow
  (ossfuzz 20072)

 o ProjectedCRS::identify(): fix wrong identification of some ESRI WKT linked
   to units

 o Database: add a geoid_like value for proj_method column of 
grid_alternatives,
   fix related entries and simplify/robustify logic to deal with EPSG
   'Geographic3D to GravityRelatedHeight' methods

 o Fix ingestion of +proj=cea with +k_0 (#1881)

 o Fix performance issue, affecting PROJ.4 string generation of EPSG:7842
   (#1913)

 o Fix identification of ESRI-style datum names starting with D_ but without
   alias (#1911)

 o cart: Avoid discontinuity at poles in the inverse case (#1906)

 o Various updates to make regression test suite pass with gcc on i386 (#1906)


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Alessandro.Burini at eumetsat.int  Sat Feb 15 23:38:30 2020
From: Alessandro.Burini at eumetsat.int (Alessandro Burini)
Date: Sun, 16 Feb 2020 07:38:30 +0000
Subject: [PROJ] Adding new projection to Proj4
Message-ID: <8f57ffe319684974814d876e9dcbfbdb@oemlcam02.eum.root.eumetsat.int>

Hello,

My name is Alessandro Burini and I am working at Eumetsat, Germany. I have been a user of proj4 for many years and I am now facing a new challenge.
Starting from the work of S. Millis (https://www.spiedigitallibrary.org/conference-proceedings-of-spie/9218/92180C/The-ground-track-oblique-Cassini-projection-used-for-producing-VIIRS/10.1117/12.2060760.short?SSO=1), we prototyped a C++ and python version of the Ground Track Oblique Cassini projection and we would like to integrate it into proj4. Is this something feasible?
We have already contacted the author of the paper to request the permission of implementing such projection and, since we started from a published paper, we had the permission to use it.
We think that the integration of such projection into proj4 would benefit us and the entire user community.
Regards

Alessandro



Sent from my Samsung Galaxy smartphone.


Any email message from EUMETSAT is sent in good faith but shall neither be binding nor construed as constituting a commitment by EUMETSAT, except where provided for in a written agreement or contract or if explicitly stated in the email. Please note that any views or opinions presented in this email are solely those of the sender and do not necessarily represent those of EUMETSAT. This message and any attachments are intended for the sole use of the addressee(s) and may contain confidential and privileged information. Any unauthorised use, disclosure, dissemination or distribution (in whole or in part) of its contents is not permitted. If you received this message in error, please notify the sender and delete it from your system.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200216/413227c8/attachment.html>

From jmckenna at gatewaygeomatics.com  Sun Feb 16 04:41:33 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sun, 16 Feb 2020 08:41:33 -0400
Subject: [PROJ] Adding new projection to Proj4
In-Reply-To: <8f57ffe319684974814d876e9dcbfbdb@oemlcam02.eum.root.eumetsat.int>
References: <8f57ffe319684974814d876e9dcbfbdb@oemlcam02.eum.root.eumetsat.int>
Message-ID: <a6be5583-3787-bf6a-f8a5-ca2c07806544@gatewaygeomatics.com>

Hi Alessandro,

A new projection can be added into the EPSG registry by filing a change 
request at: http://www.epsg.org/EPSGDataset/Makechangerequest.aspx

I have went through that process several times now, to add a new 
projection into EPSG, that is then automatically leveraged by software 
projects, such as PROJ.  Of course it takes time, first for the EPSG 
committee to review your request, and then also for the new projection 
to propagate to all software projects.

-jeff




-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/


On 2020-02-16 3:38 a.m., Alessandro Burini wrote:
> Hello,
> 
> My name is Alessandro Burini and I am working at Eumetsat, Germany. I 
> have been a user of proj4 for many years and I am now facing a new 
> challenge.
> Starting from the work of S. Millis 
> (https://www.spiedigitallibrary.org/conference-proceedings-of-spie/9218/92180C/The-ground-track-oblique-Cassini-projection-used-for-producing-VIIRS/10.1117/12.2060760.short?SSO=1), 
> we prototyped a C++ and python version of the Ground Track Oblique 
> Cassini projection and we would like to integrate it into proj4. Is this 
> something feasible?
> We have already contacted the author of the paper to request the 
> permission of implementing such projection and, since we started from a 
> published paper, we had the permission to use it.
> We think that the integration of such projection into proj4 would 
> benefit us and the entire user community.
> Regards
> 


From martin.desruisseaux at geomatys.com  Sun Feb 16 05:52:01 2020
From: martin.desruisseaux at geomatys.com (Martin Desruisseaux)
Date: Sun, 16 Feb 2020 14:52:01 +0100
Subject: [PROJ] Adding new projection to Proj4
In-Reply-To: <a6be5583-3787-bf6a-f8a5-ca2c07806544@gatewaygeomatics.com>
References: <8f57ffe319684974814d876e9dcbfbdb@oemlcam02.eum.root.eumetsat.int>
 <a6be5583-3787-bf6a-f8a5-ca2c07806544@gatewaygeomatics.com>
Message-ID: <503a9ed2-a7b0-71e6-3961-a12e3db6ae1d@geomatys.com>

I think Alessandro was proposing to add a new "projection method" (i.e. 
another set of mathematical formulas for doing the projection). This is 
a different work than assigning an EPSG code, which is more about 
setting parameter values to use with pre-existing formulas. If this is 
the case, then Alessandro's proposal and EPSG change request would be 
orthogonal tasks.

     Martin

Le 16/02/2020 à 13:41, Jeff McKenna a écrit :

> Hi Alessandro,
>
> A new projection can be added into the EPSG registry by filing a 
> change request at: http://www.epsg.org/EPSGDataset/Makechangerequest.aspx
>
> I have went through that process several times now, to add a new 
> projection into EPSG, that is then automatically leveraged by software 
> projects, such as PROJ.  Of course it takes time, first for the EPSG 
> committee to review your request, and then also for the new projection 
> to propagate to all software projects.
>
> -jeff



From jmckenna at gatewaygeomatics.com  Sun Feb 16 06:49:56 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sun, 16 Feb 2020 10:49:56 -0400
Subject: [PROJ] Adding new projection to Proj4
In-Reply-To: <503a9ed2-a7b0-71e6-3961-a12e3db6ae1d@geomatys.com>
References: <8f57ffe319684974814d876e9dcbfbdb@oemlcam02.eum.root.eumetsat.int>
 <a6be5583-3787-bf6a-f8a5-ca2c07806544@gatewaygeomatics.com>
 <503a9ed2-a7b0-71e6-3961-a12e3db6ae1d@geomatys.com>
Message-ID: <1477b689-485e-3fe0-4b72-852761771319@gatewaygeomatics.com>

ok thanks for clarifying Martin.  -jeff



On 2020-02-16 9:52 a.m., Martin Desruisseaux wrote:
> I think Alessandro was proposing to add a new "projection method" (i.e. 
> another set of mathematical formulas for doing the projection). This is 
> a different work than assigning an EPSG code, which is more about 
> setting parameter values to use with pre-existing formulas. If this is 
> the case, then Alessandro's proposal and EPSG change request would be 
> orthogonal tasks.
> 
>      Martin
> 
> Le 16/02/2020 à 13:41, Jeff McKenna a écrit :
> 
>> Hi Alessandro,
>>
>> A new projection can be added into the EPSG registry by filing a 
>> change request at: http://www.epsg.org/EPSGDataset/Makechangerequest.aspx
>>
>> I have went through that process several times now, to add a new 
>> projection into EPSG, that is then automatically leveraged by software 
>> projects, such as PROJ.  Of course it takes time, first for the EPSG 
>> committee to review your request, and then also for the new projection 
>> to propagate to all software projects.
>>
>> -jeff
> 
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/

From Alessandro.Burini at eumetsat.int  Sun Feb 16 08:06:49 2020
From: Alessandro.Burini at eumetsat.int (Alessandro Burini)
Date: Sun, 16 Feb 2020 16:06:49 +0000
Subject: [PROJ] Adding new projection to Proj4
In-Reply-To: <1477b689-485e-3fe0-4b72-852761771319@gatewaygeomatics.com>
References: <8f57ffe319684974814d876e9dcbfbdb@oemlcam02.eum.root.eumetsat.int>
 <a6be5583-3787-bf6a-f8a5-ca2c07806544@gatewaygeomatics.com>
 <503a9ed2-a7b0-71e6-3961-a12e3db6ae1d@geomatys.com>,
 <1477b689-485e-3fe0-4b72-852761771319@gatewaygeomatics.com>
Message-ID: <e96bde90f64743e38cfc617b70b9f2df@oemlcam02.eum.root.eumetsat.int>

Dear Jeff,

I confirm Martin's interpretation. The Ground Track Oblique Cassini is a new projection method which we would like to have it included in proj4, as done for the landsat projection (https://proj.org/operations/projections/lsat.html). Is this something that can be done?

Alessandro


Sent from my Samsung Galaxy smartphone.



-------- Original message --------
From: Jeff McKenna <jmckenna at gatewaygeomatics.com>
Date: 16/02/2020 15:50 (GMT+01:00)
To: proj at lists.osgeo.org
Subject: Re: [PROJ] Adding new projection to Proj4

ok thanks for clarifying Martin.  -jeff



On 2020-02-16 9:52 a.m., Martin Desruisseaux wrote:
> I think Alessandro was proposing to add a new "projection method" (i.e.
> another set of mathematical formulas for doing the projection). This is
> a different work than assigning an EPSG code, which is more about
> setting parameter values to use with pre-existing formulas. If this is
> the case, then Alessandro's proposal and EPSG change request would be
> orthogonal tasks.
>
>      Martin
>
> Le 16/02/2020 à 13:41, Jeff McKenna a écrit :
>
>> Hi Alessandro,
>>
>> A new projection can be added into the EPSG registry by filing a
>> change request at: http://www.epsg.org/EPSGDataset/Makechangerequest.aspx
>>
>> I have went through that process several times now, to add a new
>> projection into EPSG, that is then automatically leveraged by software
>> projects, such as PROJ.  Of course it takes time, first for the EPSG
>> committee to review your request, and then also for the new projection
>> to propagate to all software projects.
>>
>> -jeff
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


--
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

Any email message from EUMETSAT is sent in good faith but shall neither be binding nor construed as constituting a commitment by EUMETSAT, except where provided for in a written agreement or contract or if explicitly stated in the email. Please note that any views or opinions presented in this email are solely those of the sender and do not necessarily represent those of EUMETSAT. This message and any attachments are intended for the sole use of the addressee(s) and may contain confidential and privileged information. Any unauthorised use, disclosure, dissemination or distribution (in whole or in part) of its contents is not permitted. If you received this message in error, please notify the sender and delete it from your system.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200216/3a5c2546/attachment-0001.html>

From kreve at sdfe.dk  Mon Feb 17 02:29:26 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 17 Feb 2020 10:29:26 +0000
Subject: [PROJ] Adding new projection to Proj4
In-Reply-To: <e96bde90f64743e38cfc617b70b9f2df@oemlcam02.eum.root.eumetsat.int>
References: <8f57ffe319684974814d876e9dcbfbdb@oemlcam02.eum.root.eumetsat.int>
 <a6be5583-3787-bf6a-f8a5-ca2c07806544@gatewaygeomatics.com>
 <503a9ed2-a7b0-71e6-3961-a12e3db6ae1d@geomatys.com>,
 <1477b689-485e-3fe0-4b72-852761771319@gatewaygeomatics.com>
 <e96bde90f64743e38cfc617b70b9f2df@oemlcam02.eum.root.eumetsat.int>
Message-ID: <fb39a8d57aac4208bf2d2910086a9033@sdfe.dk>

Alessandro,

It sounds like this is a good candidate for a new projection in PROJ. Unfortunately I can't access the paper so I can't comment on the details. How is the ground track oblique cassini different from the landsat equivalent?

If you want to add the projection to PROJ I suggest you add a pull request with your implementation. Since you already have written the code this shouldn't be a big task. Here's a previous pull request to get an idea of where to start: https://github.com/OSGeo/PROJ/pull/1133

/Kristian

From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Alessandro Burini
Sent: 16. februar 2020 17:07
To: Jeff McKenna <jmckenna at gatewaygeomatics.com>; proj at lists.osgeo.org
Subject: Re: [PROJ] Adding new projection to Proj4

Dear Jeff,

I confirm Martin's interpretation. The Ground Track Oblique Cassini is a new projection method which we would like to have it included in proj4, as done for the landsat projection (https://proj.org/operations/projections/lsat.html). Is this something that can be done?

Alessandro


Sent from my Samsung Galaxy smartphone.



-------- Original message --------
From: Jeff McKenna <jmckenna at gatewaygeomatics.com<mailto:jmckenna at gatewaygeomatics.com>>
Date: 16/02/2020 15:50 (GMT+01:00)
To: proj at lists.osgeo.org<mailto:proj at lists.osgeo.org>
Subject: Re: [PROJ] Adding new projection to Proj4

ok thanks for clarifying Martin.  -jeff



On 2020-02-16 9:52 a.m., Martin Desruisseaux wrote:
> I think Alessandro was proposing to add a new "projection method" (i.e.
> another set of mathematical formulas for doing the projection). This is
> a different work than assigning an EPSG code, which is more about
> setting parameter values to use with pre-existing formulas. If this is
> the case, then Alessandro's proposal and EPSG change request would be
> orthogonal tasks.
>
>      Martin
>
> Le 16/02/2020 à 13:41, Jeff McKenna a écrit :
>
>> Hi Alessandro,
>>
>> A new projection can be added into the EPSG registry by filing a
>> change request at: http://www.epsg.org/EPSGDataset/Makechangerequest.aspx
>>
>> I have went through that process several times now, to add a new
>> projection into EPSG, that is then automatically leveraged by software
>> projects, such as PROJ.  Of course it takes time, first for the EPSG
>> committee to review your request, and then also for the new projection
>> to propagate to all software projects.
>>
>> -jeff
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/proj


--
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org<mailto:PROJ at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/proj

Any email message from EUMETSAT is sent in good faith but shall neither be binding nor construed as constituting a commitment by EUMETSAT, except where provided for in a written agreement or contract or if explicitly stated in the email. Please note that any views or opinions presented in this email are solely those of the sender and do not necessarily represent those of EUMETSAT. This message and any attachments are intended for the sole use of the addressee(s) and may contain confidential and privileged information. Any unauthorised use, disclosure, dissemination or distribution (in whole or in part) of its contents is not permitted. If you received this message in error, please notify the sender and delete it from your system.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200217/c5dd343f/attachment.html>

From kreve at sdfe.dk  Mon Feb 17 13:11:38 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 17 Feb 2020 21:11:38 +0000
Subject: [PROJ] PROJ 7.0.0RC1
Message-ID: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>

All,

We are closing in on the release date for PROJ 7.0.0 which means that it is time for a new round
of release candidates.

I have prepared release candidates for PROJ 7.0.0, proj-data-1.0, proj-datumgrid-oceania-1.2
 proj-datumgrid-europ-1.6 and proj-datumgrid-north-america-1.4.

Note that this marks the first release of the new proj-data package, which includes all available
resource files for PROJ. Gridded models come in the newly introduced Geodetic Tiff Grid format.
The content of the proj-data package is also available through https://cdn.proj.org/.

This also marks the last release of the proj-datumgrid series which has been superseded by
proj-data. The proj-datumgrid repository will be archive once PROJ 7.0.0 is released in its final
form. The proj-datumgrid packages are updated this last time to extent the lifetime of the PROJ 6
branch a little bit.

Since this is a major release version I expect there to be issues with the first release candidate.
My plan is to publish a second release candidate in a week's time around Monday the 24th. Please
make sure to test the release candidates where ever you depend on PROJ and report back your
findings.

The archives can be download from https://download.osgeo.org/proj/ as usual:

http://download.osgeo.org/proj/proj-7.0.0RC1.tar.gz
http://download.osgeo.org/proj/proj-7.0.0RC1.zip

http://download.osgeo.org/proj/proj-data-1.0RC1.tar.gz
http://download.osgeo.org/proj/proj-data-1.0RC1.zip

http://download.osgeo.org/proj/proj-datumgrid-europe-1.6RC1.tar.gz
http://download.osgeo.org/proj/proj-datumgrid-europe-1.6RC1.zip

http://download.osgeo.org/proj/proj-datumgrid-north-america-1.4RC1.tar.gz
http://download.osgeo.org/proj/proj-datumgrid-north-america-1.4RC1.zip

http://download.osgeo.org/proj/proj-datumgrid-oceania-1.2RC1.tar.gz
http://download.osgeo.org/proj/proj-datumgrid-oceania-1.2RC1.zip

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200217/1bf005f7/attachment.html>

From sebastic at xs4all.nl  Mon Feb 17 20:32:23 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Tue, 18 Feb 2020 05:32:23 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
Message-ID: <5a0f4068-b6e4-c6c6-313e-2f690f979fc2@xs4all.nl>

On 2/17/20 10:11 PM, Kristian Evers wrote:
> This also marks the last release of the proj-datumgrid series which has been superseded by
> proj-data. The proj-datumgrid repository will be archive once PROJ 7.0.0 is released in its final
> form. The proj-datumgrid packages are updated this last time to extent the lifetime of the PROJ 6
> branch a little bit.

What about possible future changes to the grids in proj-datumgrid
itself? Those are still required for the PROJ tests are they not?

The primary purpose of the proj-datumgrid was to have that content
version controlled, the secondary purpose was to collect more regional
grids to have them more easily available to users. The latter is now
provided by the CDN, which just leaves the former use case.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From nyall.dawson at gmail.com  Mon Feb 17 23:03:04 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 18 Feb 2020 17:03:04 +1000
Subject: [PROJ] OSGEO4W proj build missing grid info
Message-ID: <CAB28AshTwqAZrKn-xtjvkLXOb=b+o2jbc096UsGzxahomtpFkA@mail.gmail.com>

Hi list,

On the recent osgeo4w proj-dev builds (7.0) I no longer get any the
usual results from proj_grid_get_info_from_database. The package name,
url, and other metadata properties are always empty.

The same code works fine when built against proj master on linux, and
was working on osgeo4w until recently. Any ideas what may have
changed/caused this?

Nyall

From kristianevers at gmail.com  Mon Feb 17 23:08:35 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Tue, 18 Feb 2020 08:08:35 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <5a0f4068-b6e4-c6c6-313e-2f690f979fc2@xs4all.nl>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <5a0f4068-b6e4-c6c6-313e-2f690f979fc2@xs4all.nl>
Message-ID: <C234F4AE-1DEE-42B8-9644-378E9DD51653@gmail.com>



> On 18 Feb 2020, at 05:32, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> On 2/17/20 10:11 PM, Kristian Evers wrote:
>> This also marks the last release of the proj-datumgrid series which has been superseded by
>> proj-data. The proj-datumgrid repository will be archive once PROJ 7.0.0 is released in its final
>> form. The proj-datumgrid packages are updated this last time to extent the lifetime of the PROJ 6
>> branch a little bit.
> 
> What about possible future changes to the grids in proj-datumgrid
> itself? Those are still required for the PROJ tests are they not?
> 
> The primary purpose of the proj-datumgrid was to have that content
> version controlled, the secondary purpose was to collect more regional
> grids to have them more easily available to users. The latter is now
> provided by the CDN, which just leaves the former use case.

The grids provided on the CDN are versioned controlled in the PROJ-data
repository: https://github.com/OSGeo/proj-data <https://github.com/OSGeo/proj-data>

The purpose is the same as for the proj-datumgrid, this is just a fresh start
following the changes caused by RFC4.

/Kristian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200218/bbbce910/attachment.html>

From sebastic at xs4all.nl  Mon Feb 17 23:32:58 2020
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 18 Feb 2020 08:32:58 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <C234F4AE-1DEE-42B8-9644-378E9DD51653@gmail.com>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <5a0f4068-b6e4-c6c6-313e-2f690f979fc2@xs4all.nl>
 <C234F4AE-1DEE-42B8-9644-378E9DD51653@gmail.com>
Message-ID: <fef77586ffa9dc5db954f51430933977@xs4all.nl>

On 2020-02-18 08:08, Kristian Evers wrote:
>> On 18 Feb 2020, at 05:32, Sebastiaan Couwenberg <sebastic at xs4all.nl> 
>> wrote:
>> 
>> On 2/17/20 10:11 PM, Kristian Evers wrote:
>>> This also marks the last release of the proj-datumgrid series which 
>>> has been superseded by
>>> proj-data. The proj-datumgrid repository will be archive once PROJ 
>>> 7.0.0 is released in its final
>>> form. The proj-datumgrid packages are updated this last time to 
>>> extent the lifetime of the PROJ 6
>>> branch a little bit.
>> 
>> What about possible future changes to the grids in proj-datumgrid
>> itself? Those are still required for the PROJ tests are they not?
>> 
>> The primary purpose of the proj-datumgrid was to have that content
>> version controlled, the secondary purpose was to collect more regional
>> grids to have them more easily available to users. The latter is now
>> provided by the CDN, which just leaves the former use case.
> 
> The grids provided on the CDN are versioned controlled in the PROJ-data
> repository: https://github.com/OSGeo/proj-data
> <https://github.com/OSGeo/proj-data>

I know.

This is about the small subset of grids that are required for the PROJ 
testsuite which are included in the main proj-datumgrid archive and for 
which the proj-datumgrid repository was initially created.

> The purpose is the same as for the proj-datumgrid, this is just a fresh 
> start
> following the changes caused by RFC4.

That doesn't answer my question.

There is still code to handle the files from proj-datumgrid when 
unpacked in the data subdirectory, as some of those grids are required 
for tests.

Hence it seems that proj-datumgrid itself is not entirely superseded by 
proj-data, unlike the regional archives.

For the Debian package this is especially important because there is no 
network in the package build environment which prevents the use of the 
CDN to fetch the grids on demand.

If future changes to grids required for tests are only available in 
proj-data this will need to be packaged or otherwise made available in 
the Debian package build environment.

Packaging proj-data has the same problem as proj-datumgrid regional 
archive, it's a PITA to maintain the copyright file for the various 
grids, and its fairly large size is inconvenient when only a small 
subset is required for the PROJ testsuite.

In my opinion it would be good to not deprecated the proj-datumgrid 
repository entirely, and keep it for it's primary purpose: version 
control for the grids required for the PROJ testsuite to not have to 
rely on the CDN for those grids.

Kind Regards,

Bas

From a.furieri at lqt.it  Tue Feb 18 03:15:51 2020
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Tue, 18 Feb 2020 12:15:51 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
Message-ID: <4e2e4c0275c995b014187056d82e5639@lqt.it>

On Mon, 17 Feb 2020 21:11:38 +0000, Kristian Evers wrote:
> All,
>
> We are closing in on the release date for PROJ 7.0.0 which means that
> it is time for a new round of release candidates.
>
> -------------- <snip> -------------------------
>
> Please make sure to test the release candidates where ever you depend
> on PROJ and report back your findings.
>

Hi Kristian,

anything works nicely on SpatiaLite (both on Linux and Windows/MinGW)
and the testcoverage doesn't evidentiate any regression.

I've just a practically negligible issue to report: now
PROJ depends on libcurl, and at least on Windows/MinGW
-DCURL_STATICLIB must be explicitly defined when configuring
libproj before building in order to get an usable static
library (due to name mangling issues of link symbols).
but it's just a small annoyance, not a serious trouble.

bye Sandro

From even.rouault at spatialys.com  Tue Feb 18 04:45:51 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Feb 2020 13:45:51 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <fef77586ffa9dc5db954f51430933977@xs4all.nl>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <C234F4AE-1DEE-42B8-9644-378E9DD51653@gmail.com>
 <fef77586ffa9dc5db954f51430933977@xs4all.nl>
Message-ID: <8575857.rNkbQY3szs@even-i700>

> Hence it seems that proj-datumgrid itself is not entirely superseded by
> proj-data, unlike the regional archives.

For "normal" users, proj-datumgrid should be deprecated. We indeed need a few 
"old" grids for the tests, that can be fetched for there. We could potentially 
consider just dumping them, or a spatial subset of them, in PROJ main repo, 
now that we have a data/for_tests subdirectory.

> Packaging proj-data has the same problem as proj-datumgrid regional
> archive, it's a PITA to maintain the copyright file for the various
> grids

How can we help for that ? We have the README files with all copyright and 
licensing information. I guess you may have some required formalism for the 
sake of Debian packaging. Would a CSV file like
https://github.com/OSGeo/proj-datumgrid/blob/master/filelist.csv be helpful, 
with filename, copyright and license columns, so that you can automate the 
building of the Debian copyright file ? That .csv file was created to automate 
the mass conversion of GTX & NTv2 grids to GeoTIFF files. It could be a good 
start if we wanted to resurect it in PROJ-data repository for the sake of 
easing maintaining copyright informatio
I'd note also that all GeoTIFF file in PROJ-data embed copyright & licensing 
info in TIFF metadata.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Feb 18 04:56:28 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Feb 2020 13:56:28 +0100
Subject: [PROJ] OSGEO4W proj build missing grid info
In-Reply-To: <CAB28AshTwqAZrKn-xtjvkLXOb=b+o2jbc096UsGzxahomtpFkA@mail.gmail.com>
References: <CAB28AshTwqAZrKn-xtjvkLXOb=b+o2jbc096UsGzxahomtpFkA@mail.gmail.com>
Message-ID: <2089658.yMY1YNFCpF@even-i700>

Hi Nyall,

> On the recent osgeo4w proj-dev builds (7.0) I no longer get any the
> usual results from proj_grid_get_info_from_database. The package name,
> url, and other metadata properties are always empty.

package name should now always been empty, but not url.

> 
> The same code works fine when built against proj master on linux, and
> was working on osgeo4w until recently. Any ideas what may have
> changed/caused this?

The only thing that I can think of that could be loosely related would be
https://github.com/OSGeo/PROJ/commit/29583196dfae2565a35c7a8759cc8a5640d6a2b1
that could affect how proj.db is located (there is some small Windows changes 
that the commit message probably doesn't reflect correctly), and possibly make 
that your PROJ uses an older proj.db that the intended one, if you don't have 
PROJ_LIB set. This commit was merged last Sunday.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Tue Feb 18 05:10:30 2020
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 18 Feb 2020 14:10:30 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <8575857.rNkbQY3szs@even-i700>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <C234F4AE-1DEE-42B8-9644-378E9DD51653@gmail.com>
 <fef77586ffa9dc5db954f51430933977@xs4all.nl> <8575857.rNkbQY3szs@even-i700>
Message-ID: <c05f4eaf0a8a5db92858e14ee607580b@xs4all.nl>

On 2020-02-18 13:45, Even Rouault wrote:
>> Hence it seems that proj-datumgrid itself is not entirely superseded 
>> by
>> proj-data, unlike the regional archives.
> 
> For "normal" users, proj-datumgrid should be deprecated. We indeed need 
> a few
> "old" grids for the tests, that can be fetched for there. We could 
> potentially
> consider just dumping them, or a spatial subset of them, in PROJ main 
> repo,
> now that we have a data/for_tests subdirectory.

Including the grids required for tests in the proj tree is a good idea, 
although it's also nice to have them automatically installed in 
/usr/share/proj to not need the CDN for those grids.

>> Packaging proj-data has the same problem as proj-datumgrid regional
>> archive, it's a PITA to maintain the copyright file for the various
>> grids
> 
> How can we help for that ? We have the README files with all copyright 
> and
> licensing information.

What's documented in the README currently is good enough to know which 
license applies to which file, but it lacks a copyright statement like 
you'll find in source code.

> I guess you may have some required formalism for the
> sake of Debian packaging.

We use the machine readable format for the packages maintained by the 
Debian GIS team:

  https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/

The file generally consists of blocks of files grouped by license, e.g.:

  Files: *
  Copyright: 2019-2020, John Doe <jdoe at example.com>
                  2020, Alice Bob <alice at example.com>
  License: GPL-3+

  Files: foo.c
   bar.c
  Copyright: 1980-1995, Foo Corp
  License: BSD-3-Clause

The above is a common case where most of the project code has common 
copyright holders, and a few sources from other origins are included 
with their own license & copyright.

For the datumgrids the copyright holders & license differs for most 
files, requiring Files blocks for every agency which is doable, but we 
can't rely on the licensecheck tool to generate most of the copyright 
file for us.

> Would a CSV file like
> https://github.com/OSGeo/proj-datumgrid/blob/master/filelist.csv be 
> helpful,
> with filename, copyright and license columns, so that you can automate 
> the
> building of the Debian copyright file ?

It would be helpful if it had a copyright column, that's the biggest 
piece of missing information we'd need to hunt down if we were to 
package proj-data for Debian.

> That .csv file was created to automate
> the mass conversion of GTX & NTv2 grids to GeoTIFF files. It could be a 
> good
> start if we wanted to resurect it in PROJ-data repository for the sake 
> of
> easing maintaining copyright informatio
> I'd note also that all GeoTIFF file in PROJ-data embed copyright & 
> licensing
> info in TIFF metadata.

If adding grids to proj-data not only requires the license to be 
documented but also the copyright statement, that would at least make 
sure that packages don't need to hunt for that information every time 
grids are added. We still need to do that for all the grids currently 
included. And that's not a task I'm want to spend my time on.

Kind Regards,

Bas

From kreve at sdfe.dk  Wed Feb 19 00:09:45 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 19 Feb 2020 08:09:45 +0000
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <4e2e4c0275c995b014187056d82e5639@lqt.it>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <4e2e4c0275c995b014187056d82e5639@lqt.it>
Message-ID: <C6B4DE52-B07A-4A98-8433-1A259BBB5545@sdfe.dk>

Sandro,

> 
> anything works nicely on SpatiaLite (both on Linux and Windows/MinGW)
> and the testcoverage doesn't evidentiate any regression.
> 

Thanks for the feedback, it is good to know that the release works for at
least some projects.

> I've just a practically negligible issue to report: now
> PROJ depends on libcurl, and at least on Windows/MinGW
> -DCURL_STATICLIB must be explicitly defined when configuring
> libproj before building in order to get an usable static
> library (due to name mangling issues of link symbols).
> but it's just a small annoyance, not a serious trouble.
> 

Sounds like something we should try to get fixed before the final release
is out. Do you mind opening a issue on GitHub that describes the problem
and how you would want PROJ to behave instead?

/Kristian

From kreve at sdfe.dk  Wed Feb 19 00:11:55 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 19 Feb 2020 08:11:55 +0000
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <8575857.rNkbQY3szs@even-i700>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <C234F4AE-1DEE-42B8-9644-378E9DD51653@gmail.com>
 <fef77586ffa9dc5db954f51430933977@xs4all.nl> <8575857.rNkbQY3szs@even-i700>
Message-ID: <98742DCC-CFCF-4851-B3F8-0AD2BD305E7A@sdfe.dk>



> On 18 Feb 2020, at 13:45, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> Hence it seems that proj-datumgrid itself is not entirely superseded by
>> proj-data, unlike the regional archives.
> 
> For "normal" users, proj-datumgrid should be deprecated. We indeed need a few 
> "old" grids for the tests, that can be fetched for there. We could potentially 
> consider just dumping them, or a spatial subset of them, in PROJ main repo, 
> now that we have a data/for_tests subdirectory.

That is probably the simplest solution. Do you have clear image of which grids
that would be? Also, should these test files be added to the release tarballs?

/Kristian

From sebastic at xs4all.nl  Wed Feb 19 08:55:07 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 19 Feb 2020 17:55:07 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
Message-ID: <06411cf2-a073-6dbd-314f-0ab57f5ffba4@xs4all.nl>

On 2/17/20 10:11 PM, Kristian Evers wrote:
> Since this is a major release version I expect there to be issues with the first release candidate.
> My plan is to publish a second release candidate in a week's time around Monday the 24th. Please
> make sure to test the release candidates where ever you depend on PROJ and report back your
> findings.

In preparation of the transition in Debian the reverse dependencies were
rebuilt with RC1, and some fail due to test failures. See:

 https://lists.debian.org/debian-gis/2020/02/msg00004.html

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Wed Feb 19 14:02:19 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Feb 2020 23:02:19 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <98742DCC-CFCF-4851-B3F8-0AD2BD305E7A@sdfe.dk>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <8575857.rNkbQY3szs@even-i700> <98742DCC-CFCF-4851-B3F8-0AD2BD305E7A@sdfe.dk>
Message-ID: <2100655.kV0ICJzIAJ@even-i700>

On mercredi 19 février 2020 08:11:55 CET Kristian Evers wrote:
> > On 18 Feb 2020, at 13:45, Even Rouault <even.rouault at spatialys.com> wrote:
> >> Hence it seems that proj-datumgrid itself is not entirely superseded by
> >> proj-data, unlike the regional archives.
> > 
> > For "normal" users, proj-datumgrid should be deprecated. We indeed need a
> > few "old" grids for the tests, that can be fetched for there. We could
> > potentially consider just dumping them, or a spatial subset of them, in
> > PROJ main repo, now that we have a data/for_tests subdirectory.
> 
> That is probably the simplest solution. Do you have clear image of which
> grids that would be?

From the checks in test/cli/Makefile.am:
- conus
- ntv1_can.dat
- MD
- ntf_r93.gsb
- egm96_15.gtx
- ntv2_0.gsb

The 2 later are a bit big though. We may need to extract a subset of them to 
the area(s) actually tested. A simple gdal_translate would do for 
egm96_15.gtx. Would be a bit more tricky with ntv2_0.gsb and its subgrids.
I can potentially have a try at that next week.

> Also, should these test files be added to the release
> tarballs?

Ideally yes, I'd say. That could simplify test/cli/Makefile.am logic to 
unconditionally run the tests.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Wed Feb 19 21:51:48 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 20 Feb 2020 15:51:48 +1000
Subject: [PROJ] Patterson projection - supported?
Message-ID: <CAB28Ashrs6n+k5v=tbyFZEV0QEzG2ih=RDMXX0M5Lt9wLPwGRA@mail.gmail.com>

Hi list,

I'm curious as to the state of the "patterson" projections in proj.
https://proj.org/operations/projections/patterson.html suggests that
proj fully supports these projections, and the corresponding entries
are present in the proj db (ESRI 53079 and ESRI 54079)

Question 1:

If I run "projinfo -s EPSG:4326 -t ESRI:54079" I get a warning: "PROJ string:
Error when exporting to PROJ string: Unsupported conversion method: Patterson"

Does this mean that:
a. converting the coordinate operation between EPSG:4326 and
ESRI:54079 to a **proj** string is not supported
or
b. creating a coordinate operation for this transform isn't possible at all?

Question 2:

if I try to use gdal/proj master to transform a natural earth dataset
to ESRI:54079, using:
ogr2ogr -f "ESRI Shapefile" output.shp ne_110m_admin_0_countries.shp
-t_srs "ESRI:54079" I only get a bunch of "failed to reproject
feature" errors.

Is this expected? Or a bug somewhere along the way?

Nyall

From even.rouault at spatialys.com  Thu Feb 20 11:28:00 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 20 Feb 2020 20:28:00 +0100
Subject: [PROJ] Patterson projection - supported?
In-Reply-To: <CAB28Ashrs6n+k5v=tbyFZEV0QEzG2ih=RDMXX0M5Lt9wLPwGRA@mail.gmail.com>
References: <CAB28Ashrs6n+k5v=tbyFZEV0QEzG2ih=RDMXX0M5Lt9wLPwGRA@mail.gmail.com>
Message-ID: <4677952.TG49mhTFoq@even-i700>

Nyall,

> Does this mean that:
> a. converting the coordinate operation between EPSG:4326 and
> ESRI:54079 to a **proj** string is not supported
> b. creating a coordinate operation for this transform isn't possible at all?

Yes to both. They are strongly related.

The "metadata" part of PROJ lacks currently the mapping between the WKT 
representation of this projection and a corresponding PROJ string. Grepping 
for PROJ_WKT2_NAME_METHOD_ECKERT_I / eck1 in the source tree could likely 
serve as inspiration to find the various locations to patch.

Regarding export to PROJ.4 strings of a CRS definition using this projection 
(to be opposed to building coordinate operation PROJ strings), we should 
probably not do it, because it wouldn't be recognized by the GDAL < 3 
ecosystem.

> 
> Question 2:
> 
> if I try to use gdal/proj master to transform a natural earth dataset
> to ESRI:54079, using:
> ogr2ogr -f "ESRI Shapefile" output.shp ne_110m_admin_0_countries.shp
> -t_srs "ESRI:54079" I only get a bunch of "failed to reproject
> feature" errors.
> 
> Is this expected?

For the impossibility to reproject, yes, given the reasons for the issues of 
Question 1.
For the error message itself, not sure. GDAL might not have all the needed 
clues to issue a more explicit one. I haven't dug.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Thu Feb 20 14:20:59 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 21 Feb 2020 08:20:59 +1000
Subject: [PROJ] Patterson projection - supported?
In-Reply-To: <4677952.TG49mhTFoq@even-i700>
References: <CAB28Ashrs6n+k5v=tbyFZEV0QEzG2ih=RDMXX0M5Lt9wLPwGRA@mail.gmail.com>
 <4677952.TG49mhTFoq@even-i700>
Message-ID: <CAB28Asi5YprpHJ13CkFqq7yApq2jcXcc3mEzdnioZJ6aRxUBUQ@mail.gmail.com>

On Fri, 21 Feb 2020 at 05:28, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Nyall,
>
> > Does this mean that:
> > a. converting the coordinate operation between EPSG:4326 and
> > ESRI:54079 to a **proj** string is not supported
> > b. creating a coordinate operation for this transform isn't possible at all?
>
> Yes to both. They are strongly related.
>
> The "metadata" part of PROJ lacks currently the mapping between the WKT
> representation of this projection and a corresponding PROJ string. Grepping
> for PROJ_WKT2_NAME_METHOD_ECKERT_I / eck1 in the source tree could likely
> serve as inspiration to find the various locations to patch.
>
> Regarding export to PROJ.4 strings of a CRS definition using this projection
> (to be opposed to building coordinate operation PROJ strings), we should
> probably not do it, because it wouldn't be recognized by the GDAL < 3
> ecosystem.

Perfect -- thanks for the pointers!

Nyall
>
> Even
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From nyall.dawson at gmail.com  Thu Feb 20 20:00:26 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 21 Feb 2020 14:00:26 +1000
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <06411cf2-a073-6dbd-314f-0ab57f5ffba4@xs4all.nl>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <06411cf2-a073-6dbd-314f-0ab57f5ffba4@xs4all.nl>
Message-ID: <CAB28Asjjaj=gHZ9tmvD+mVbVyVEOCv=zT9SYT_FAmtkUSQKABw@mail.gmail.com>

On Thu, 20 Feb 2020 at 02:55, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>
> On 2/17/20 10:11 PM, Kristian Evers wrote:
> > Since this is a major release version I expect there to be issues with the first release candidate.
> > My plan is to publish a second release candidate in a week's time around Monday the 24th. Please
> > make sure to test the release candidates where ever you depend on PROJ and report back your
> > findings.
>
> In preparation of the transition in Debian the reverse dependencies were
> rebuilt with RC1, and some fail due to test failures. See:
>
>  https://lists.debian.org/debian-gis/2020/02/msg00004.html

"QGIS 3.10 doesn't support it yet, so may want to keep proj in
experimental for a while until it does, or just live with it not
supporting it fully."

Can you elaborate on this? It hasn't been widely tested, but it
**should** still work OK under proj 7.

Nyall

From sebastic at xs4all.nl  Thu Feb 20 21:47:40 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 21 Feb 2020 06:47:40 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <CAB28Asjjaj=gHZ9tmvD+mVbVyVEOCv=zT9SYT_FAmtkUSQKABw@mail.gmail.com>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <06411cf2-a073-6dbd-314f-0ab57f5ffba4@xs4all.nl>
 <CAB28Asjjaj=gHZ9tmvD+mVbVyVEOCv=zT9SYT_FAmtkUSQKABw@mail.gmail.com>
Message-ID: <fa2f3c52-1946-ad0f-d925-eb10e7de739d@xs4all.nl>

On 2/21/20 5:00 AM, Nyall Dawson wrote:
> On Thu, 20 Feb 2020 at 02:55, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>> On 2/17/20 10:11 PM, Kristian Evers wrote:
>>> Since this is a major release version I expect there to be issues with the first release candidate.
>>> My plan is to publish a second release candidate in a week's time around Monday the 24th. Please
>>> make sure to test the release candidates where ever you depend on PROJ and report back your
>>> findings.
>>
>> In preparation of the transition in Debian the reverse dependencies were
>> rebuilt with RC1, and some fail due to test failures. See:
>>
>>  https://lists.debian.org/debian-gis/2020/02/msg00004.html
> 
> "QGIS 3.10 doesn't support it yet, so may want to keep proj in
> experimental for a while until it does, or just live with it not
> supporting it fully."
> 
> Can you elaborate on this? It hasn't been widely tested, but it
> **should** still work OK under proj 7.

You argued for QGIS 3.10 releases to ship with PROJ 6 and not 7:

 https://lists.osgeo.org/pipermail/qgis-developer/2020-February/060259.html

Due to an issue caused by switching to the TIFF grids in PROJ 7.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From nyall.dawson at gmail.com  Thu Feb 20 21:50:28 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 21 Feb 2020 15:50:28 +1000
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <fa2f3c52-1946-ad0f-d925-eb10e7de739d@xs4all.nl>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <06411cf2-a073-6dbd-314f-0ab57f5ffba4@xs4all.nl>
 <CAB28Asjjaj=gHZ9tmvD+mVbVyVEOCv=zT9SYT_FAmtkUSQKABw@mail.gmail.com>
 <fa2f3c52-1946-ad0f-d925-eb10e7de739d@xs4all.nl>
Message-ID: <CAB28Ash-O_X6NjMnLxik8B5B0h7vCuLbT-qjWvV5LF5T5RsEGg@mail.gmail.com>

On Fri, 21 Feb 2020 at 15:47, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>
> On 2/21/20 5:00 AM, Nyall Dawson wrote:
> > On Thu, 20 Feb 2020 at 02:55, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> >> On 2/17/20 10:11 PM, Kristian Evers wrote:
> >>> Since this is a major release version I expect there to be issues with the first release candidate.
> >>> My plan is to publish a second release candidate in a week's time around Monday the 24th. Please
> >>> make sure to test the release candidates where ever you depend on PROJ and report back your
> >>> findings.
> >>
> >> In preparation of the transition in Debian the reverse dependencies were
> >> rebuilt with RC1, and some fail due to test failures. See:
> >>
> >>  https://lists.debian.org/debian-gis/2020/02/msg00004.html
> >
> > "QGIS 3.10 doesn't support it yet, so may want to keep proj in
> > experimental for a while until it does, or just live with it not
> > supporting it fully."
> >
> > Can you elaborate on this? It hasn't been widely tested, but it
> > **should** still work OK under proj 7.
>
> You argued for QGIS 3.10 releases to ship with PROJ 6 and not 7:
>
>  https://lists.osgeo.org/pipermail/qgis-developer/2020-February/060259.html
>
> Due to an issue caused by switching to the TIFF grids in PROJ 7.

Ah yes -- that was since fixed by Even in
https://github.com/OSGeo/PROJ/commit/71e6438ba2173ee7c05ade1c395bd5949023cadc

I'm advocating for a conservative approach for our Windows builds
because for those builds the QGIS project completely controls the
environment, and we're free to make those choices based on QGIS' needs
alone. I totally understand if other factors push a distro to move to
the newer release quickly.

Nyall

>
> Kind Regards,
>
> Bas
>
> --
>  GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

From jgpallero at gmail.com  Fri Feb 21 03:39:14 2020
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Fri, 21 Feb 2020 12:39:14 +0100
Subject: [PROJ] Check if a definition if a cartographic projection
Message-ID: <CAFemY3ag4hWTvj135tLAcDyKMq_Bmx7ecvD+QXHxH=YUGdVyJA@mail.gmail.com>

Hello:

I'm porting an old PROJ4 code for strictly cartographic projections
(forward and inverse steps) to version 6 and I'm a bit confused about
the definition. I see that I must substitute the old pj_fwd() and
pj_inv() by theproj_trans() function, where I set the forward or
inverse step via the PJ_DIRECTION input argument. My questions are:

1. Is it possible (has PROJ6 any function or other method) to check
the definition in order to guarantee it is strictly a cartographic
projection?

2. Must be the geodesic coordinates for the forward cartographic
problem always radians?

On the other hand, I can read in https://proj.org/operations/index.html

"
Projections are purely cartographic mappings of the sphere onto the plane
"

But PROJ also works in the ellipsoid, so I suppose it is a mistake

Best regards

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************

From kreve at sdfe.dk  Fri Feb 21 04:42:11 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 21 Feb 2020 12:42:11 +0000
Subject: [PROJ] Check if a definition if a cartographic projection
In-Reply-To: <CAFemY3ag4hWTvj135tLAcDyKMq_Bmx7ecvD+QXHxH=YUGdVyJA@mail.gmail.com>
References: <CAFemY3ag4hWTvj135tLAcDyKMq_Bmx7ecvD+QXHxH=YUGdVyJA@mail.gmail.com>
Message-ID: <b601a033f03d496e9f001add5ea6d87f@sdfe.dk>

Hi José

Congrats on taking the big step towards PRO 6! As you've already found out
there are a few changes in how to work with projections. I'll try to answer your
questions:

1. I don't think so if you are strictly using proj_create(), but you can use
proj_angular_input() and proj_angular_output() to check if the operation
you've created with proj_create() behaves as a projection usually do:
angular in, non-angular out. You won't catch all situations like that, but
most of them. 
Alternatively you can use proj_create_crs_to_crs() and define the input
and output CRS's in terms of EPSG-codes or WKT(2) definitions. In that
case you can use proj_get_type() to get an idea about what you are dealing
with.

2. If your operation purely consist of "+proj=<projection", then yes. If you
expand that into a pipeline like 
"+proj=pipeline +step +unitconvert +xy_in=rad +xy_out=deg +step +proj=<projection>",
then you can use degress.

3. Yes, that phrasing is incorrect and could be improved by mentioning ellipsoids
as well.

/Kristian

-----Original Message-----
From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of José Luis García Pallero
Sent: 21. februar 2020 12:39
To: proj at lists.osgeo.org
Subject: [PROJ] Check if a definition if a cartographic projection

Hello:

I'm porting an old PROJ4 code for strictly cartographic projections
(forward and inverse steps) to version 6 and I'm a bit confused about
the definition. I see that I must substitute the old pj_fwd() and
pj_inv() by theproj_trans() function, where I set the forward or
inverse step via the PJ_DIRECTION input argument. My questions are:

1. Is it possible (has PROJ6 any function or other method) to check
the definition in order to guarantee it is strictly a cartographic
projection?

2. Must be the geodesic coordinates for the forward cartographic
problem always radians?

On the other hand, I can read in https://proj.org/operations/index.html

"
Projections are purely cartographic mappings of the sphere onto the plane
"

But PROJ also works in the ellipsoid, so I suppose it is a mistake

Best regards

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************
_______________________________________________
PROJ mailing list
PROJ at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/proj

From jgpallero at gmail.com  Fri Feb 21 07:19:32 2020
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Fri, 21 Feb 2020 16:19:32 +0100
Subject: [PROJ] Check if a definition if a cartographic projection
In-Reply-To: <b601a033f03d496e9f001add5ea6d87f@sdfe.dk>
References: <CAFemY3ag4hWTvj135tLAcDyKMq_Bmx7ecvD+QXHxH=YUGdVyJA@mail.gmail.com>
 <b601a033f03d496e9f001add5ea6d87f@sdfe.dk>
Message-ID: <CAFemY3a+9Ti=0-Zi0-OZX=nBZFjenNfg-gknVj8M8b7gj+d8bg@mail.gmail.com>

Thank you for your answer, Kristian. I've made some tests, and I have
more questions in order to clarification the task of detecting pure
cartographic projections (I understand as pure cartographic projection
a definition such that in the FWD step transforms geodetic coordinates
into projected XY coordinates and vice verda for the INV stap, always
using the ellipsoid stated in the definition, i.e., in any case a
transformation between ellipsoids is performed):

1. If I use a definition based on the "plus" form ("+proj=utm
+lon_0=3w +ellps=GRS80", i.e., UTM30, ellipsoid GRS80):

In all cases I've checked, the proj_get_type() function always returns
the identifier PJ_TYPE_OTHER_COORDINATE_OPERATION. Then, I use the
function proj_angular_input() with the PJ_FWD argument in order to
check for radians. So the couple
(PJ_TYPE_OTHER_COORDINATE_OPERATION,1) identifies a definition as a
pure cartographic projection, i.e. geodetic coordinates as input and
XY projected as output in PJ_FWD, and vice versa in PJ_INV. Is this
correct? From your previous message I understand that I won't catch
all situations like that, but most of them, but the question is: can
exist any situation of (PJ_TYPE_OTHER_COORDINATE_OPERATION,1) does not
corresponding to a pure cartographic projection?

I've tried also the +pipeline form you suggested "+proj=pipeline +step
+unitconvert +xy_in=rad +xy_out=deg +step +proj=<projection>" as

"+proj=pipeline +step +unitconvert +xy_in=rad +xy_out=deg +step
+proj=utm +lon_0=3w +ellps=GRS80"

in order to work with UTM30 using the GRS80 ellipsoid. Using this
definition I understand that in the FWD step the input coordinates are
defined in radians, but for the INV step the output mus be in degrees.
But when I execute proj_create() with the previous definition I obtain
the message "proj_create: Error -4: projection not named". Is there
any error in the definition?

2. If I use a definition based on the EPSG code:

I've used for example the "EPSG:25830", corresponding to ETRS89 UTM30,
i.e., the same projection as the previously used ("+proj=utm +lon_0=3w
+ellps=GRS80"). The proj_get_type() function returns the identifier
PJ_TYPE_PROJECTED_CRS. Is this type the unique identificator for a
pure cartographic projection? But in this case the
proj_angular_input() for FWD returns 0, so it means that the input
angular coordinates units are not radians. Am I right? But if I try
the projection I obtain always (Inf,Inf), whether if I use the data in
radians or in degrees. I suppose I've made a mistake, but I can't
understand where

Best regards

El vie., 21 feb. 2020 a las 13:42, Kristian Evers (<kreve at sdfe.dk>) escribió:
>
> Hi José
>
> Congrats on taking the big step towards PRO 6! As you've already found out
> there are a few changes in how to work with projections. I'll try to answer your
> questions:
>
> 1. I don't think so if you are strictly using proj_create(), but you can use
> proj_angular_input() and proj_angular_output() to check if the operation
> you've created with proj_create() behaves as a projection usually do:
> angular in, non-angular out. You won't catch all situations like that, but
> most of them.
> Alternatively you can use proj_create_crs_to_crs() and define the input
> and output CRS's in terms of EPSG-codes or WKT(2) definitions. In that
> case you can use proj_get_type() to get an idea about what you are dealing
> with.
>
> 2. If your operation purely consist of "+proj=<projection", then yes. If you
> expand that into a pipeline like
> "+proj=pipeline +step +unitconvert +xy_in=rad +xy_out=deg +step +proj=<projection>",
> then you can use degress.
>
> 3. Yes, that phrasing is incorrect and could be improved by mentioning ellipsoids
> as well.
>
> /Kristian
>
> -----Original Message-----
> From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of José Luis García Pallero
> Sent: 21. februar 2020 12:39
> To: proj at lists.osgeo.org
> Subject: [PROJ] Check if a definition if a cartographic projection
>
> Hello:
>
> I'm porting an old PROJ4 code for strictly cartographic projections
> (forward and inverse steps) to version 6 and I'm a bit confused about
> the definition. I see that I must substitute the old pj_fwd() and
> pj_inv() by theproj_trans() function, where I set the forward or
> inverse step via the PJ_DIRECTION input argument. My questions are:
>
> 1. Is it possible (has PROJ6 any function or other method) to check
> the definition in order to guarantee it is strictly a cartographic
> projection?
>
> 2. Must be the geodesic coordinates for the forward cartographic
> problem always radians?
>
> On the other hand, I can read in https://proj.org/operations/index.html
>
> "
> Projections are purely cartographic mappings of the sphere onto the plane
> "
>
> But PROJ also works in the ellipsoid, so I suppose it is a mistake
>
> Best regards
>
> --
> *****************************************
> José Luis García Pallero
> jgpallero at gmail.com
> (o<
> / / \
> V_/_
> Use Debian GNU/Linux and enjoy!
> *****************************************
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj



-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************

From jgpallero at gmail.com  Fri Feb 21 09:31:53 2020
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Fri, 21 Feb 2020 18:31:53 +0100
Subject: [PROJ] Check if a definition if a cartographic projection
In-Reply-To: <CAFemY3a+9Ti=0-Zi0-OZX=nBZFjenNfg-gknVj8M8b7gj+d8bg@mail.gmail.com>
References: <CAFemY3ag4hWTvj135tLAcDyKMq_Bmx7ecvD+QXHxH=YUGdVyJA@mail.gmail.com>
 <b601a033f03d496e9f001add5ea6d87f@sdfe.dk>
 <CAFemY3a+9Ti=0-Zi0-OZX=nBZFjenNfg-gknVj8M8b7gj+d8bg@mail.gmail.com>
Message-ID: <CAFemY3aJ8ZN6vpHUM+8YGkcztfN6YTLM=SKmas-zZJVuzJbbTQ@mail.gmail.com>

Well, I did more tests, and I think I understand the situation better.

1. The EPSG:XXXXX input mode works only for transformation between
CRS, but not fpr pure projection. This is the reason why although I
can initialize a projection using proj_create(context,proj_definition)
I can't perform the projection. So for cartographic projections it is
necessary to use the "+proj" syntax. Well, I suppose I could perform
the projection defining as the start CRS an ellipsoid as EPSG:4326
(WGS84 ellipsoide, for example) and end CRS any other code
corresponding to a projection onto the same ellipsoid. But I would
like not to use this method in order to avoid the twice definition of
the same ellipsoid. So I think that for my personal FWD and INV
functions for cartographic projection the "+proj" definition method
plus checking for proj_get_type()==PJ_TYPE_OTHER_COORDINATE_OPERATION
and proj_angular_input()==1 for the forward step, and
proj_angular_output()==1 for INV is better.

2. I found that for my interests the most adequate function for
computations is proj_trans_generic(), as it can work with arrays. I
suppose in the FWD step the first two arguments (x,y) ate ALWAYS
(longitude,latitude). Am I right? Also, according to documentation it
returns the number of transformations successfully completed, so if
this number is lower than the number of elements I must found for the
points not transformed. For such finding, is the correct way the test
x[i]==HUGE_VAL or must I check both the x and the y?

Best regards

El vie., 21 feb. 2020 a las 16:19, José Luis García Pallero
(<jgpallero at gmail.com>) escribió:
>
> Thank you for your answer, Kristian. I've made some tests, and I have
> more questions in order to clarification the task of detecting pure
> cartographic projections (I understand as pure cartographic projection
> a definition such that in the FWD step transforms geodetic coordinates
> into projected XY coordinates and vice verda for the INV stap, always
> using the ellipsoid stated in the definition, i.e., in any case a
> transformation between ellipsoids is performed):
>
> 1. If I use a definition based on the "plus" form ("+proj=utm
> +lon_0=3w +ellps=GRS80", i.e., UTM30, ellipsoid GRS80):
>
> In all cases I've checked, the proj_get_type() function always returns
> the identifier PJ_TYPE_OTHER_COORDINATE_OPERATION. Then, I use the
> function proj_angular_input() with the PJ_FWD argument in order to
> check for radians. So the couple
> (PJ_TYPE_OTHER_COORDINATE_OPERATION,1) identifies a definition as a
> pure cartographic projection, i.e. geodetic coordinates as input and
> XY projected as output in PJ_FWD, and vice versa in PJ_INV. Is this
> correct? From your previous message I understand that I won't catch
> all situations like that, but most of them, but the question is: can
> exist any situation of (PJ_TYPE_OTHER_COORDINATE_OPERATION,1) does not
> corresponding to a pure cartographic projection?
>
> I've tried also the +pipeline form you suggested "+proj=pipeline +step
> +unitconvert +xy_in=rad +xy_out=deg +step +proj=<projection>" as
>
> "+proj=pipeline +step +unitconvert +xy_in=rad +xy_out=deg +step
> +proj=utm +lon_0=3w +ellps=GRS80"
>
> in order to work with UTM30 using the GRS80 ellipsoid. Using this
> definition I understand that in the FWD step the input coordinates are
> defined in radians, but for the INV step the output mus be in degrees.
> But when I execute proj_create() with the previous definition I obtain
> the message "proj_create: Error -4: projection not named". Is there
> any error in the definition?
>
> 2. If I use a definition based on the EPSG code:
>
> I've used for example the "EPSG:25830", corresponding to ETRS89 UTM30,
> i.e., the same projection as the previously used ("+proj=utm +lon_0=3w
> +ellps=GRS80"). The proj_get_type() function returns the identifier
> PJ_TYPE_PROJECTED_CRS. Is this type the unique identificator for a
> pure cartographic projection? But in this case the
> proj_angular_input() for FWD returns 0, so it means that the input
> angular coordinates units are not radians. Am I right? But if I try
> the projection I obtain always (Inf,Inf), whether if I use the data in
> radians or in degrees. I suppose I've made a mistake, but I can't
> understand where
>
> Best regards
>
> El vie., 21 feb. 2020 a las 13:42, Kristian Evers (<kreve at sdfe.dk>) escribió:
> >
> > Hi José
> >
> > Congrats on taking the big step towards PRO 6! As you've already found out
> > there are a few changes in how to work with projections. I'll try to answer your
> > questions:
> >
> > 1. I don't think so if you are strictly using proj_create(), but you can use
> > proj_angular_input() and proj_angular_output() to check if the operation
> > you've created with proj_create() behaves as a projection usually do:
> > angular in, non-angular out. You won't catch all situations like that, but
> > most of them.
> > Alternatively you can use proj_create_crs_to_crs() and define the input
> > and output CRS's in terms of EPSG-codes or WKT(2) definitions. In that
> > case you can use proj_get_type() to get an idea about what you are dealing
> > with.
> >
> > 2. If your operation purely consist of "+proj=<projection", then yes. If you
> > expand that into a pipeline like
> > "+proj=pipeline +step +unitconvert +xy_in=rad +xy_out=deg +step +proj=<projection>",
> > then you can use degress.
> >
> > 3. Yes, that phrasing is incorrect and could be improved by mentioning ellipsoids
> > as well.
> >
> > /Kristian
> >
> > -----Original Message-----
> > From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of José Luis García Pallero
> > Sent: 21. februar 2020 12:39
> > To: proj at lists.osgeo.org
> > Subject: [PROJ] Check if a definition if a cartographic projection
> >
> > Hello:
> >
> > I'm porting an old PROJ4 code for strictly cartographic projections
> > (forward and inverse steps) to version 6 and I'm a bit confused about
> > the definition. I see that I must substitute the old pj_fwd() and
> > pj_inv() by theproj_trans() function, where I set the forward or
> > inverse step via the PJ_DIRECTION input argument. My questions are:
> >
> > 1. Is it possible (has PROJ6 any function or other method) to check
> > the definition in order to guarantee it is strictly a cartographic
> > projection?
> >
> > 2. Must be the geodesic coordinates for the forward cartographic
> > problem always radians?
> >
> > On the other hand, I can read in https://proj.org/operations/index.html
> >
> > "
> > Projections are purely cartographic mappings of the sphere onto the plane
> > "
> >
> > But PROJ also works in the ellipsoid, so I suppose it is a mistake
> >
> > Best regards
> >
> > --
> > *****************************************
> > José Luis García Pallero
> > jgpallero at gmail.com
> > (o<
> > / / \
> > V_/_
> > Use Debian GNU/Linux and enjoy!
> > *****************************************
> > _______________________________________________
> > PROJ mailing list
> > PROJ at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
> --
> *****************************************
> José Luis García Pallero
> jgpallero at gmail.com
> (o<
> / / \
> V_/_
> Use Debian GNU/Linux and enjoy!
> *****************************************



-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************

From jgpallero at gmail.com  Fri Feb 21 13:07:11 2020
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Fri, 21 Feb 2020 22:07:11 +0100
Subject: [PROJ] Default units for time coordinate
Message-ID: <CAFemY3ZeNPk6AD9onTs_F2age9gOmU77bAfCMv4J5a6NYuPqkw@mail.gmail.com>

I can see in the documentation that the supported time units are mjd,
decimalyear, gps_week, and yyyymmdd
(https://proj.org/operations/conversions/unitconvert.html). But in the
code example presented in the proj_trans_generic() documentation
(https://proj.org/development/reference/functions.html#c.proj_trans_generic)
it can be sees as comment that

"
/*  and the time is the constant 0.00 s */
"
So apparently the default units are seconds. Are seconds supported?
Which is the default unit time in PROJ? The same question for the
other units. Are angular default values radians and linear meters? I
find this not clear in the documentation

Cheers
-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************

From Roger.Bivand at nhh.no  Sun Feb 23 06:12:49 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 23 Feb 2020 15:12:49 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
Message-ID: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>

Hi,

Trying out the RC with R package rgdal (Fedora 31), I see 
proj_info().searchpath returning:

"/home/rsb/.local/share/proj:/usr/local/share/proj:/usr/local/share/proj"

Where in the documentation or code is the recipe for disabling the 
creation of and writing of cache.db to .local/share/proj? No R package is 
permitted to write anything without positive user confirmation to anywhere 
other than R's per-session temporary directory.

Consequently, I must be able to prevent PROJ making assumptions about the 
preferred directory location (if any at all) before the user has had the 
opportunity to intervene.

I do not think an environment variable is enough, if that was going to be 
the answer, I think software using PROJ has to be able to control this 
from the C API (is there a list of environment variables in the 
documentation?).

All I can see is unconditional code in src/filemanager.cpp from line 1185, 
pj_context_get_user_writable_directory(), which only takes the context and 
a boolean set defauly TRUE I think. This function seems to be called by 
pj_open_lib_internal() - the code in rgdal calles none of these 
explicitly. All that happens when rgdal loads into R is that 
proj_info().searchpath is called, which presumably provokes a cascade of 
consequences over which there is no obvious control. Please DO NOT release 
7.0.0 until there is clear guidance on how to stop this.

I have been running against PROJ master for some time, but had not noticed 
this - for us - regression; maybe I hadn't pulled recently enough after 
RC4 was merged. 7.0.0 is unusable for R unless there is full control over 
the creation of any directories in locations not given by the calling 
program.

The .local/share/proj directory name (or equivalents on other OS) needs to 
be proposed to the calling program with an indication of whether it was 
populated before or needs to be created. Obviously, if other applications 
are using it, a user of R may choose to use it themselves, but we should 
not force their choice.

Best wishes,

Roger

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Sun Feb 23 07:03:59 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 23 Feb 2020 16:03:59 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
Message-ID: <15388132.PmkdTslAnj@even-i700>

Roger,

> Trying out the RC with R package rgdal (Fedora 31), I see
> proj_info().searchpath returning:
> 
> "/home/rsb/.local/share/proj:/usr/local/share/proj:/usr/local/share/proj"
> 
> Where in the documentation or code is the recipe for disabling the
> creation of and writing of cache.db to .local/share/proj? No R package is
> permitted to write anything without positive user confirmation to anywhere
> other than R's per-session temporary directory.

Nothing is written in this directory, nor it is created, unless you enable 
explicitly network functionality or use the new projsync utility.

If you don't want this directory to be looked for at all, you may call 
proj_context_set_search_paths() to override the default search paths.

> pj_context_get_user_writable_directory(), which only takes the context and 
> a boolean set defauly TRUE I think

No, the boolean has no default value. It is always called with create=false in 
filemanager.cpp. Only with create=true in networkfilemanager.cpp when network 
functionality is enabled

Obviously this should reassure you. PROJ 7 will hopefully not eat your 
children :-)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Roger.Bivand at nhh.no  Sun Feb 23 07:23:26 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 23 Feb 2020 16:23:26 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <15388132.PmkdTslAnj@even-i700>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <15388132.PmkdTslAnj@even-i700>
Message-ID: <alpine.LFD.2.21.2002231605450.1428943@reclus.nhh.no>

Even,

On Sun, 23 Feb 2020, Even Rouault wrote:

> Roger,
>
>> Trying out the RC with R package rgdal (Fedora 31), I see
>> proj_info().searchpath returning:
>>
>> "/home/rsb/.local/share/proj:/usr/local/share/proj:/usr/local/share/proj"
>>
>> Where in the documentation or code is the recipe for disabling the
>> creation of and writing of cache.db to .local/share/proj? No R package is
>> permitted to write anything without positive user confirmation to anywhere
>> other than R's per-session temporary directory.
>
> Nothing is written in this directory, nor it is created, unless you enable
> explicitly network functionality or use the new projsync utility.

Where are these functions, and can they be securely turned off (confirmed 
on load that CDN will not be used)? Later users or labs may turn them on, 
but positive confirmation that they are off matters.

>
> If you don't want this directory to be looked for at all, you may call
> proj_context_set_search_paths() to override the default search paths.
>

On load, proj_info().searchpath regularly returns the string I reported 
with 7.0.0RC, rather than /usr/local/share/proj (expected). I think that 
the reporting needs to be more fine-grained (proj.db found in directory; 
the directory where PROJ will cache CDN grids if enabled; other 
directories). I've seen transient cases of rgdal loading, creating the 
directory and putting cache.db in it, and other cases where no directory 
is created, in otherwise identical settings.

>> pj_context_get_user_writable_directory(), which only takes the context and
>> a boolean set defauly TRUE I think
>
> No, the boolean has no default value. It is always called with 
> create=false in filemanager.cpp. Only with create=true in 
> networkfilemanager.cpp when network functionality is enabled
>
> Obviously this should reassure you. PROJ 7 will hopefully not eat your
> children :-)
>

Not my children, just CRAN admins needing to know that no package ever 
creates files or directories outside controlled space (best the tempdir of 
the R session) by simply being loaded and tests and examples run. Then 
almost 1000 packages using sf or rgdal directly or indirectly for 
production work, teaching and research, over which we have little or no 
control, and who are not ready for 6 or 7.

Earlier, you asked for views from institutional users about RFC4. I asked, 
but none replied, because I'm sure they do not grasp what the impact on 
their workflows will be. We'll have to tag each executed coordinate 
operation with metadata not just from the pipline used (done in rgdal), 
but if grids come into play, with a hash tag or similar of the specific 
grid used - to be able to reproduce the output of the coordinate 
operation. Will that be visible in the pipeline string returned?

R packages do need this for reproducibility of results, so that we know 
when differences in output from the same input and code come from changes 
in the package interfacing the PROJ API, PROJ itself, or a grid section 
grabbed from the CDN at two different points in time.

Roger

> Even
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Sun Feb 23 07:44:02 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 23 Feb 2020 16:44:02 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <alpine.LFD.2.21.2002231605450.1428943@reclus.nhh.no>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <15388132.PmkdTslAnj@even-i700>
 <alpine.LFD.2.21.2002231605450.1428943@reclus.nhh.no>
Message-ID: <1634183.xtHJirAckV@even-i700>

> Where are these functions,

This is documented in
https://github.com/OSGeo/PROJ/blob/master/docs/source/usage/network.rst
This will go live on proj.org once 7.0 has ben released.

> and can they be securely turned off (confirmed
> on load that CDN will not be used)? Later users or labs may turn them on,
> but positive confirmation that they are off matters.

The settings are off by default.

> I've seen transient cases of rgdal loading, creating the
> directory and putting cache.db in it, and other cases where no directory
> is created, in otherwise identical settings.

If you run "make check", as projsync is tested and other network functionality 
too, the directory will be created and cache.db as well. But for other uses 
when those functionality isn't enabled, they should not.

> but if grids come into play, with a hash tag or similar of the specific
> grid used - to be able to reproduce the output of the coordinate
> operation. Will that be visible in the pipeline string returned?

Only grids appearing explicitly in a pipeline string will be used (if 
providing explict pipelines. When using 'black-box' mode with 
proj_create_crs_to_crs(), grids may or may not be used). For a given 
coordinate operation returned by proj_create_operations(), you can get the 
grids used with proj_coordoperation_get_grid_used_count() + 
proj_coordoperation_get_grid_used())

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Roger.Bivand at nhh.no  Sun Feb 23 10:01:21 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 23 Feb 2020 19:01:21 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <1634183.xtHJirAckV@even-i700>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <15388132.PmkdTslAnj@even-i700>
 <alpine.LFD.2.21.2002231605450.1428943@reclus.nhh.no>
 <1634183.xtHJirAckV@even-i700>
Message-ID: <alpine.LFD.2.21.2002231848040.1435684@reclus.nhh.no>

On Sun, 23 Feb 2020, Even Rouault wrote:

>> Where are these functions,
>
> This is documented in
> https://github.com/OSGeo/PROJ/blob/master/docs/source/usage/network.rst
> This will go live on proj.org once 7.0 has ben released.

Thanks, I guess the links will work once it is live - proj-ini isn't a 
function and grep doesn't find it in the 7.0.0 source, environment 
variables are potentially fragile (multiple loaded packages in an R 
session may try to set them), so the proj_context_set_enable_network() 
function may work.

However, in a long-running session is also not great. I've been creating 
and closing ctx handles before and after each use of PRØJ, I'll need to 
preserve the context for the duration of the session, I suppose, will I 
not? I think Edzer preseves a variable for axis order in the R sf package 
CPP namespace, but for rgdal, PRØJ was never "kept running".


>
>> and can they be securely turned off (confirmed
>> on load that CDN will not be used)? Later users or labs may turn them on,
>> but positive confirmation that they are off matters.
>
> The settings are off by default.
>
>> I've seen transient cases of rgdal loading, creating the
>> directory and putting cache.db in it, and other cases where no directory
>> is created, in otherwise identical settings.
>
> If you run "make check", as projsync is tested and other network 
> functionality too, the directory will be created and cache.db as well. 
> But for other uses when those functionality isn't enabled, they should 
> not.

Yes, this feels like the right explanation, I run make check often.

>
>> but if grids come into play, with a hash tag or similar of the specific
>> grid used - to be able to reproduce the output of the coordinate
>> operation. Will that be visible in the pipeline string returned?
>
> Only grids appearing explicitly in a pipeline string will be used (if
> providing explict pipelines. When using 'black-box' mode with
> proj_create_crs_to_crs(), grids may or may not be used). For a given
> coordinate operation returned by proj_create_operations(), you can get the
> grids used with proj_coordoperation_get_grid_used_count() +
> proj_coordoperation_get_grid_used())

I use this in the alternative workflow - list candidates and choose the 
best available, and go to proj_trans_* with a prepared pipeline. For 6, 
this was just giving the name of the grid - will 7 encode the part of the 
grid used, or will this also use the area of interest?

Roger

>
> Even
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From even.rouault at spatialys.com  Sun Feb 23 10:18:38 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 23 Feb 2020 19:18:38 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <alpine.LFD.2.21.2002231848040.1435684@reclus.nhh.no>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <1634183.xtHJirAckV@even-i700>
 <alpine.LFD.2.21.2002231848040.1435684@reclus.nhh.no>
Message-ID: <2273597.vuzHxTNkvj@even-i700>

> Thanks, I guess the links will work once it is live

Yes

> - proj-ini isn't a function and grep doesn't find it in the 7.0.0 source

There:
https://github.com/OSGeo/PROJ/blob/master/docs/source/resource_files.rst#projini

> , environment
> variables are potentially fragile (multiple loaded packages in an R
> session may try to set them), so the proj_context_set_enable_network()
> function may work.
> 
> However, in a long-running session is also not great. I've been creating
> and closing ctx handles before and after each use of PRØJ, I'll need to
> preserve the context for the duration of the session, I suppose, will I
> not?

Do you mean: if you want to enable network functionality ? You're not obliged to
change the way you manage PROJ contexts in that regard. But maintaining PROJ context
alive as long as possible is strongly encouraged for more performance if instanciating
many coordinate operations, independently of network functionality.

> I use this in the alternative workflow - list candidates and choose the
> best available, and go to proj_trans_* with a prepared pipeline. For 6,
> this was just giving the name of the grid - will 7 encode the part of the
> grid used, or will this also use the area of interest?

A grid should be considered as a single object. PROJ 7 with network functionality
enabled can download only the part of the grids needed, but this is an
implementation & optimization detail, not aimed to be user visible.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Roger.Bivand at nhh.no  Sun Feb 23 10:30:20 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 23 Feb 2020 19:30:20 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <2273597.vuzHxTNkvj@even-i700>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <1634183.xtHJirAckV@even-i700>
 <alpine.LFD.2.21.2002231848040.1435684@reclus.nhh.no>
 <2273597.vuzHxTNkvj@even-i700>
Message-ID: <alpine.LFD.2.21.2002231923540.1435684@reclus.nhh.no>

On Sun, 23 Feb 2020, Even Rouault wrote:

>> Thanks, I guess the links will work once it is live
>
> Yes
>
>> - proj-ini isn't a function and grep doesn't find it in the 7.0.0 source
>
> There:
> https://github.com/OSGeo/PROJ/blob/master/docs/source/resource_files.rst#projini

OK, probably not the R package case.

>
>> , environment
>> variables are potentially fragile (multiple loaded packages in an R
>> session may try to set them), so the proj_context_set_enable_network()
>> function may work.
>>
>> However, in a long-running session is also not great. I've been creating
>> and closing ctx handles before and after each use of PRØJ, I'll need to
>> preserve the context for the duration of the session, I suppose, will I
>> not?
>
> Do you mean: if you want to enable network functionality ? You're not obliged to
> change the way you manage PROJ contexts in that regard. But maintaining PROJ context
> alive as long as possible is strongly encouraged for more performance if instanciating
> many coordinate operations, independently of network functionality.
>

I'll look at this carefully - it has always been the case for GDAL that we 
use object handles, so code to preserve a pointer to a GDAL object or 
GEOS context exists.

>> I use this in the alternative workflow - list candidates and choose the
>> best available, and go to proj_trans_* with a prepared pipeline. For 6,
>> this was just giving the name of the grid - will 7 encode the part of the
>> grid used, or will this also use the area of interest?
>
> A grid should be considered as a single object. PROJ 7 with network 
> functionality enabled can download only the part of the grids needed, 
> but this is an implementation & optimization detail, not aimed to be 
> user visible.

This is a very useful clarification, thanks. Looking at 
networkfilemanager.cpp, I can see plenty of functions giving insight when 
I need it. For now, I can add an rgdal load-time comment from 
pj_context_is_network_enabled() to confirm that the network functionality 
is disabled.

Roger

>
> Even
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From jgpallero at gmail.com  Sun Feb 23 10:45:15 2020
From: jgpallero at gmail.com (=?UTF-8?Q?Jos=C3=A9_Luis_Garc=C3=ADa_Pallero?=)
Date: Sun, 23 Feb 2020 19:45:15 +0100
Subject: [PROJ] Angular units in PROJ for +proj=latlong when using
 proj_create_crs_to_crs() and proj_create()
Message-ID: <CAFemY3Z1AqX1cgf6p86ebPA5hWBp0TfQ0OJOw1ToPmKzdCWDvQ@mail.gmail.com>

Hello:

Attached I send a program that uses pj_trans() in order to perform a
crs to crs transformation and a cartographic projection which are both
the same operation. The projection is defined as "+proj=utm +lon_0=3w
+ellps=GRS80", and the crs to crs as origin: "+proj=longlat
+ellps=GRS80", destination "+proj=utm +lon_0=3w +ellps=GRS80". In both
cases the PJ_FWD step is used

But I found that when I use pj_trans() as projection the geodetic
coordinates must be given in radians, but when the crs2crs operation
is performed the angular units must be degrees. The PROJ documentation
says (https://proj.org/usage/projections.html?highlight=latlong):

"
A few special projections deviate from this behaviour, most notably
the latlong pseudo-projection that returns degrees.
"

But as it can be seen in the attached code this behavior is only in
the crs2crs operation, so I suppose the documentation at this point is
not exact. But also the "most notably" text suggest that there are
other definitions that works in degrees? What is the reason for this
"inconsistency"? Wouldn't it be more practical to work always in
radians, at least at API level?

Best regards

#include<stdio.h>
#include<math.h>
#include<proj.h>
main(int argc, char **argv)
{
    PJ *P1,*P2;
    PJ_COORD c1,c2,c1_out,c2_out;
    P1 = proj_create_crs_to_crs(PJ_DEFAULT_CTX,
                               "+proj=longlat +ellps=GRS80",
                               "+proj=utm +lon_0=3w +ellps=GRS80",
                               NULL);
    P2 = proj_create(PJ_DEFAULT_CTX,"+proj=utm +lon_0=3w +ellps=GRS80");
    PJ* P_for_GIS = proj_normalize_for_visualization(PJ_DEFAULT_CTX,P1);
    proj_destroy(P1);
    P1 = P_for_GIS;
    c1.lpz.lam = -3.0;
    c1.lpz.phi = 45.0;
    c1.lpz.z = 100.0;
    c2.lpz.lam = -3.0*M_PI/180.0;
    c2.lpz.phi = 45.0*M_PI/180.0;
    c2.lpz.z = 100.0;
    c1_out = proj_trans(P1,PJ_FWD,c1);
    c2_out = proj_trans(P2,PJ_FWD,c2);
    printf("P1: x=%.3f y=%.3f z=%.3f\n",
           c1_out.xyz.x,c1_out.xyz.y,c1_out.xyz.z);
    printf("P2: x=%.3f y=%.3f z=%.3f\n",
           c2_out.xyz.x,c2_out.xyz.y,c2_out.xyz.z);
    proj_destroy(P1);
    proj_destroy(P2);
    return 0;
}

-- 
*****************************************
José Luis García Pallero
jgpallero at gmail.com
(o<
/ / \
V_/_
Use Debian GNU/Linux and enjoy!
*****************************************
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_proj_units.c
Type: text/x-csrc
Size: 1016 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200223/9e2cfb16/attachment-0001.c>

From even.rouault at spatialys.com  Sun Feb 23 10:47:23 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 23 Feb 2020 19:47:23 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <alpine.LFD.2.21.2002231923540.1435684@reclus.nhh.no>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <2273597.vuzHxTNkvj@even-i700>
 <alpine.LFD.2.21.2002231923540.1435684@reclus.nhh.no>
Message-ID: <1749254.ZlxtyDKDkf@even-i700>

> This is a very useful clarification, thanks. Looking at
> networkfilemanager.cpp, I can see plenty of functions giving insight when
> I need it. For now, I can add an rgdal load-time comment from
> pj_context_is_network_enabled() to confirm that the network functionality
> is disabled.

This is an internal function. I've just submitted
https://github.com/OSGeo/PROJ/pull/1967 to expose it as an exported function

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Roger.Bivand at nhh.no  Sun Feb 23 10:50:36 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sun, 23 Feb 2020 19:50:36 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <1749254.ZlxtyDKDkf@even-i700>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <2273597.vuzHxTNkvj@even-i700>
 <alpine.LFD.2.21.2002231923540.1435684@reclus.nhh.no>
 <1749254.ZlxtyDKDkf@even-i700>
Message-ID: <alpine.LFD.2.21.2002231949460.1436059@reclus.nhh.no>

On Sun, 23 Feb 2020, Even Rouault wrote:

>> This is a very useful clarification, thanks. Looking at
>> networkfilemanager.cpp, I can see plenty of functions giving insight when
>> I need it. For now, I can add an rgdal load-time comment from
>> pj_context_is_network_enabled() to confirm that the network functionality
>> is disabled.
>
> This is an internal function. I've just submitted
> https://github.com/OSGeo/PROJ/pull/1967 to expose it as an exported function
>

Thanks very much, just got there. Will this get into 7.0.0RC2?

Roger

>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From nyall.dawson at gmail.com  Sun Feb 23 15:12:40 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 24 Feb 2020 09:12:40 +1000
Subject: [PROJ] Questions about ESRI WKT -> proj operation mappings
Message-ID: <CAB28Ashtpi4zs6ebOL7kjPheUsDrLD+fnrzuEvcmfPD9R1akVw@mail.gmail.com>

Hi list,

While attempting to fill some of the gaps in the ESRI WKT to proj
operation mapping file
(https://github.com/OSGeo/PROJ/blob/master/scripts/build_esri_projection_mapping.py)
I've hit some questions:

- ESRI Hammer_Aitoff projection: is this the same as proj's "hammer",
but with the fixed W=0. parameter mentioned in
https://proj.org/operations/projections/hammer.html?

- Flat_Polar_Quartic: is this the same as the McBryde-Thomas
Flat-Polar Quartic exposed by proj?

- "Cube": I'm guessing this is
https://pro.arcgis.com/en/pro-app/help/mapping/properties/cube.htm,
and differs from https://proj.org/operations/projections/qsc.html
because qsc only supports a single face at a time..?

Anyone able to assist here?

Nyall

From kreve at sdfe.dk  Sun Feb 23 23:25:10 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Mon, 24 Feb 2020 07:25:10 +0000
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <alpine.LFD.2.21.2002231949460.1436059@reclus.nhh.no>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <2273597.vuzHxTNkvj@even-i700>
 <alpine.LFD.2.21.2002231923540.1435684@reclus.nhh.no>
 <1749254.ZlxtyDKDkf@even-i700>
 <alpine.LFD.2.21.2002231949460.1436059@reclus.nhh.no>
Message-ID: <1287D54E-04FB-47E3-89B6-3D0DEC04C5FB@sdfe.dk>



> On 23 Feb 2020, at 19:50, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> On Sun, 23 Feb 2020, Even Rouault wrote:
> 
>>> This is a very useful clarification, thanks. Looking at
>>> networkfilemanager.cpp, I can see plenty of functions giving insight when
>>> I need it. For now, I can add an rgdal load-time comment from
>>> pj_context_is_network_enabled() to confirm that the network functionality
>>> is disabled.
>> 
>> This is an internal function. I've just submitted
>> https://github.com/OSGeo/PROJ/pull/1967 to expose it as an exported function
>> 
> 
> Thanks very much, just got there. Will this get into 7.0.0RC2?

Yes.

/Kristian

From Roger.Bivand at nhh.no  Mon Feb 24 04:05:49 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 24 Feb 2020 13:05:49 +0100
Subject: [PROJ] Disable .local in 7.0.0RC default search paths
In-Reply-To: <1287D54E-04FB-47E3-89B6-3D0DEC04C5FB@sdfe.dk>
References: <alpine.LFD.2.21.2002231445050.1428458@reclus.nhh.no>
 <2273597.vuzHxTNkvj@even-i700>
 <alpine.LFD.2.21.2002231923540.1435684@reclus.nhh.no>
 <1749254.ZlxtyDKDkf@even-i700>
 <alpine.LFD.2.21.2002231949460.1436059@reclus.nhh.no>
 <1287D54E-04FB-47E3-89B6-3D0DEC04C5FB@sdfe.dk>
Message-ID: <alpine.LFD.2.21.2002241303410.137224@reclus.nhh.no>

On Mon, 24 Feb 2020, Kristian Evers wrote:

>
>
>> On 23 Feb 2020, at 19:50, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> On Sun, 23 Feb 2020, Even Rouault wrote:
>>
>>>> This is a very useful clarification, thanks. Looking at
>>>> networkfilemanager.cpp, I can see plenty of functions giving insight when
>>>> I need it. For now, I can add an rgdal load-time comment from
>>>> pj_context_is_network_enabled() to confirm that the network functionality
>>>> is disabled.
>>>
>>> This is an internal function. I've just submitted
>>> https://github.com/OSGeo/PROJ/pull/1967 to expose it as an exported function
>>>
>>
>> Thanks very much, just got there. Will this get into 7.0.0RC2?
>
> Yes.

Great! Building rgdal from the PROJ master, I can now report status:

> library(rgdal)
Loading required package: sp
rgdal: version: 1.5-6, (SVN revision 944)
  Geospatial Data Abstraction Library extensions to R successfully loaded
  Loaded GDAL runtime: GDAL 3.1.0dev-e52a02d452, released 2020/02/21
  Path to GDAL shared files: /usr/local/share/gdal
  GDAL binary built with GEOS: TRUE
  Loaded PROJ.4 runtime: Rel. 7.0.0, March 1st, 2020, [PJ_VERSION: 700]
  Path to PROJ.4 shared files: 
/home/rsb/.local/share/proj:/usr/local/share/proj:/usr/local/share/proj
  PROJ CDN enabled: FALSE
  Linking to sp version: 1.4-0

Roger

>
> /Kristian

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From sebastic at xs4all.nl  Mon Feb 24 10:40:17 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Mon, 24 Feb 2020 19:40:17 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
Message-ID: <5ba9b597-a59e-6578-8618-31498605475d@xs4all.nl>

On 2/17/20 10:11 PM, Kristian Evers wrote:
> http://download.osgeo.org/proj/proj-7.0.0RC1.tar.gz
> http://download.osgeo.org/proj/proj-7.0.0RC1.zip
> 
> http://download.osgeo.org/proj/proj-data-1.0RC1.tar.gz
> http://download.osgeo.org/proj/proj-data-1.0RC1.zip
> 
> http://download.osgeo.org/proj/proj-datumgrid-europe-1.6RC1.tar.gz
> http://download.osgeo.org/proj/proj-datumgrid-europe-1.6RC1.zip
> 
> http://download.osgeo.org/proj/proj-datumgrid-north-america-1.4RC1.tar.gz
> http://download.osgeo.org/proj/proj-datumgrid-north-america-1.4RC1.zip
> 
> http://download.osgeo.org/proj/proj-datumgrid-oceania-1.2RC1.tar.gz
> http://download.osgeo.org/proj/proj-datumgrid-oceania-1.2RC1.zip

Tags are missing for the RCs in all three git repos.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From kristianevers at gmail.com  Mon Feb 24 12:24:56 2020
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 24 Feb 2020 21:24:56 +0100
Subject: [PROJ] PROJ 7.0.0RC1
In-Reply-To: <5ba9b597-a59e-6578-8618-31498605475d@xs4all.nl>
References: <973DC3AA-24E3-477D-B28D-2C57188B13EA@sdfe.dk>
 <5ba9b597-a59e-6578-8618-31498605475d@xs4all.nl>
Message-ID: <CALECs+co30A=n0QGqkMVN7vcv7gdauT==cRkC24tDcA2j3EXUg@mail.gmail.com>

Bas,

We only tag the commits of the final releases.

/Kristian

man. 24. feb. 2020 19.40 skrev Sebastiaan Couwenberg <sebastic at xs4all.nl>:

> On 2/17/20 10:11 PM, Kristian Evers wrote:
> > http://download.osgeo.org/proj/proj-7.0.0RC1.tar.gz
> > http://download.osgeo.org/proj/proj-7.0.0RC1.zip
> >
> > http://download.osgeo.org/proj/proj-data-1.0RC1.tar.gz
> > http://download.osgeo.org/proj/proj-data-1.0RC1.zip
> >
> > http://download.osgeo.org/proj/proj-datumgrid-europe-1.6RC1.tar.gz
> > http://download.osgeo.org/proj/proj-datumgrid-europe-1.6RC1.zip
> >
> >
> http://download.osgeo.org/proj/proj-datumgrid-north-america-1.4RC1.tar.gz
> > http://download.osgeo.org/proj/proj-datumgrid-north-america-1.4RC1.zip
> >
> > http://download.osgeo.org/proj/proj-datumgrid-oceania-1.2RC1.tar.gz
> > http://download.osgeo.org/proj/proj-datumgrid-oceania-1.2RC1.zip
>
> Tags are missing for the RCs in all three git repos.
>
> Kind Regards,
>
> Bas
>
> --
>  GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200224/30a028dc/attachment.html>

From kreve at sdfe.dk  Tue Feb 25 11:37:06 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Tue, 25 Feb 2020 19:37:06 +0000
Subject: [PROJ] PROJ 7.0.0RC2
Message-ID: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>

All,

I’ve just uploaded PROJ 7.0.0RC2 and proj-data-1.0.0RC2. All reported issues
should be resolved in the new release candidates. As always, we welcome your
feedback after testing the release candidates. No problems has been reported
with the proj-datumgrid series of release candidates so they are still at RC1.

Download the packages here:

http://download.osgeo.org/proj/proj-7.0.0RC2.tar.gz
http://download.osgeo.org/proj/proj-7.0.0RC2.zip

http://download.osgeo.org/proj/proj-data-1.0RC2.tar.gz
http://download.osgeo.org/proj/proj-data-1.0RC2.zip

It has been highlighted that for builds on computers without internet access
‘make check’ will fail because of missing grid files. If you are building on
such a system we advice to install the now legacy proj-datumgrid-1.8 package,
which can be downloaded here:

http://download.osgeo.org/proj/proj-datumgrid-1.8.tar.gz

If no serious issues are found within the next couple of days I will call for a vote
for promotion to final release on Friday the 28th with the aim of releasing the
final version on March 1st.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200225/f59f22b7/attachment.html>

From even.rouault at spatialys.com  Tue Feb 25 11:55:58 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Feb 2020 20:55:58 +0100
Subject: [PROJ] PROJ 7.0.0RC2
In-Reply-To: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>
References: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>
Message-ID: <58623488.Sx7FpQMdIy@even-i700>

> It has been highlighted that for builds on computers without internet
> access ‘make check’ will fail because of missing grid files. If you are
> building on such a system we advice to install the now legacy
> proj-datumgrid-1.8 package

Some clarification about the above:
- 'make check' will succeed on a compilation of the bare 7.0.0RC2 tarball. 
Only some optional tests will be cleanly skipped if proj-datumgrid-1.8 (and 
the additional grid ntv2_0.gsb from proj-datumgrid-north-america) is not 
installed
- so, there's no need to install proj-datumgrid-1.8 to prepare for a 
production build.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Tue Feb 25 12:37:42 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 26 Feb 2020 06:37:42 +1000
Subject: [PROJ] idea: projection metadata
Message-ID: <CAB28AsiJFgJE7YAWvVD8c+D=qbajhKcLieR3xompww0F9ckWNw@mail.gmail.com>

Hi list,

Just wanted to bounce an idea I had recently. I'd love to see proj
gain an API for querying projection metadata, specifically:

- retrieve a list of all available projection methods
- given a a projection, retrieve the description, classification,
available forms, defined area, etc metadata listed at the top of
projection documentation page
- given a projection, retrieve a list of parameters and their
descriptions, optionality, and default value

Does this sound like a desirable inclusion in the proj API? I'm
willing to chip away at this in spare time, but would love some
pointers on a recommended approach to take to implement it...

Nyall

From even.rouault at spatialys.com  Tue Feb 25 13:30:18 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Feb 2020 22:30:18 +0100
Subject: [PROJ] idea: projection metadata
In-Reply-To: <CAB28AsiJFgJE7YAWvVD8c+D=qbajhKcLieR3xompww0F9ckWNw@mail.gmail.com>
References: <CAB28AsiJFgJE7YAWvVD8c+D=qbajhKcLieR3xompww0F9ckWNw@mail.gmail.com>
Message-ID: <1674150.XmmVGNM4J5@even-i700>

Nyall,

> Just wanted to bounce an idea I had recently. I'd love to see proj
> gain an API for querying projection metadata, specifically:
> 
> - retrieve a list of all available projection methods
> - given a a projection, retrieve the description, classification,
> available forms, defined area, etc metadata listed at the top of
> projection documentation page

"defined area" wouldn't be directly possible on a projection method, as this 
depends on the value of the projection parameters.
And it is tricky to define. There is the conventional/typical area of use (as 
typically found in the EPSG database in the 'area_of_use_code' column of the 
'epsg_coordoperation' table), but sometimes the implementation is accurate 
enough so that you can use it on whole Earth with excellent numeric accuracy 
(like tmerc now).

> Does this sound like a desirable inclusion in the proj API?

I think that would be a nice addition.

If we push the idea to its limits, we could even consider generating the 
documentation pages entirely, or substantially, from that (but would require 
to embed substantial prose & formulas sometimes)

> I'm willing to chip away at this in spare time, but would love some
> pointers on a recommended approach to take to implement it...

I don't have a ready-made design for this, but some thoughts to consider to 
design one:

- the computational part of PROJ (src/projections/) hasn't changed much in its 
architecture since original PROJ from 40 years ago. So it is mostly C based, 
and relies on instanciating a PJ* object (a coordinate operation) from PROJ 
string parameters. So there is currently no separation between the projection 
method itself, and its instanciation has a coordinate operation. Some
C++ification could be envisionned, but would be a quite substantial task

Maybe something like:
class TMercProjectionMethod : public AbstractProjectionMethod
{
	getPROJNick() { return "tmerc"; }
   getName() { return "Transverse Mercator"; }
   getParameters() { return { { "lat_0", "Latitude of natural origin", 0.0 }, 
... } };
   other metadata methods

   // Not completely sure about below. They are more concepts associated to a 
projection / coordinate operation instance than the method itself.
   bool setup(PJ*); // equivalent of existing PJ *PROJECTION(utm) 
   // what to do with fwd, fwd3d, fwd4D, inv, etc... function pointers. 
virtual methods ?
}

- (I'm thinking that the above proposal is somehow wheel reinvention, but for 
the sake of brainstorming, I've let it...)
In the 'metadata' / ISO19111 part of PROJ, we have a OperationMethod class 
(which comes from http://docs.opengeospatial.org/as/18-005r4/18-005r4.html#58) 
in include/proj/coordinateoperation.hpp that would be the natural candidate 
for a standard-based solution.

- GDALbarn work hasn't tried to integrate intimately the historic 
computational part of PROJ and the metadata/WKT one. They're bridged together 
in the most minimal possible way. Mostly because there was already plenty 
enough to do with the new functionality, and trying to 'merge' everything in a 
consistent way would have been a good recipee to have nothing working at the 
end :-)

- PROJ 6 work has brought some metadata, by matching EPSG parameters for EPSG 
recognized projection methods (and a few PROJ specific ones added with the 
same formalism) to PROJ parameter names. This is done through hard-coded 
tables as you've seen recently. The EPSG metadata exists in the original EPSG 
postgresql dump, but isn't imported in proj.db. proj.db conversion_table mixes 
a bit content from original epsg_coordoperation, epsg_coordoperationmethod, 
epsg_coordoperationparam, epsg_coordoperationparamusage and 
epsg_coordoperationparamvalue tables.
(if you want to see the original epsg database, import the PostgreSQL dumps at 
the upper right of https://www.epsg-registry.org/)

- Database-based vs hard-coded: regarding the previous item, I decided for 
hard-coded tables, because I wanted proj.db to be optional for a number of 
simple situations. That is if you ingest a CRS WKT, you should be able to use 
it to create coordinate operations that don't require datum transformations 
without requiring the database (accesses to it will be attempted, and warnings 
will be issued if it is not found, but you'll get a valid result)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Tue Feb 25 14:54:05 2020
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Wed, 26 Feb 2020 08:54:05 +1000
Subject: [PROJ] idea: projection metadata
In-Reply-To: <1674150.XmmVGNM4J5@even-i700>
References: <CAB28AsiJFgJE7YAWvVD8c+D=qbajhKcLieR3xompww0F9ckWNw@mail.gmail.com>
 <1674150.XmmVGNM4J5@even-i700>
Message-ID: <CAB28AsgprNeg4rK2FOkaLhUsr1oeiCxBOHTxjG92NT3G4OnqGw@mail.gmail.com>

On Wed, 26 Feb 2020 at 07:30, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Nyall,
>
> > Just wanted to bounce an idea I had recently. I'd love to see proj
> > gain an API for querying projection metadata, specifically:
> >
> > - retrieve a list of all available projection methods
> > - given a a projection, retrieve the description, classification,
> > available forms, defined area, etc metadata listed at the top of
> > projection documentation page
>
> "defined area" wouldn't be directly possible on a projection method, as this
> depends on the value of the projection parameters.
> And it is tricky to define. There is the conventional/typical area of use (as
> typically found in the EPSG database in the 'area_of_use_code' column of the
> 'epsg_coordoperation' table), but sometimes the implementation is accurate
> enough so that you can use it on whole Earth with excellent numeric accuracy
> (like tmerc now).

I'm referring to the "defined area" described at the top of pages like
https://proj.org/operations/projections/ccon.html


> > Does this sound like a desirable inclusion in the proj API?
>
> I think that would be a nice addition.
>
> If we push the idea to its limits, we could even consider generating the
> documentation pages entirely, or substantially, from that (but would require
> to embed substantial prose & formulas sometimes)
>
> > I'm willing to chip away at this in spare time, but would love some
> > pointers on a recommended approach to take to implement it...
>
> I don't have a ready-made design for this, but some thoughts to consider to
> design one:
>

*snip* thanks! I'll digest this ...

Nyall

From kreve at sdfe.dk  Wed Feb 26 06:55:27 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 26 Feb 2020 14:55:27 +0000
Subject: [PROJ] Release schedule
Message-ID: <450ad4c658714cdcaeb02dd147018e6a@sdfe.dk>

All,

With the release of PROJ 7 we are out of scheduled releases. I want to put in place a new schedule so that downstream projects can plan their own releases accordingly. Lately we've seen a few interconnected bugs in QGIS where an unfortunate combination of new PROJ and GDAL was used in a QGIS version build for an older combination of PROJ/GDAL. This was no-ones fault but could have been avoided with a bit of planning across the projects. This is a step in that direction.

I propose we continue the release frequency that was used between 6.0.0 and 7.0.0. That is, bimonthly releases alternating between bug fix releases (patch) and new-feature releases (minor version number) culminating in a major release version in March. Of course with the option of promoting a bug fix release to a minor version release if that is deemed preferable. Ad hoc releases like 6.3.1 will also be a possibility but only for bug fixes and shouldn't mess up the overall schedule.

I've looked into other OSGeo projects release schedules but unfortunately it seems to be only QGIS that has a long-term plan for their releases [0]. I haven't been able to find the same for projects like GDAL, PostGIS, Mapserver, etc. 

Below I have made a list of up-coming my proposed PROJ release and intertwined them with planned (or presumed [1]) QGIS releases in the future:

PROJ 6.3.1:  2020-02-13
QGIS 3.12.0: 2020-02-21
PROJ 7.0.0:  2020-03-01
PROJ 7.0.1:  2020-05-01
QGIS 3.14.0: 2020-06-19
PROJ 7.1.0:  2020-07-01
PROJ 7.1.1:  2020-09-01
QGIS 3.16.0: 2020-10-23 (LTR)
PROJ 7.2.0:  2020-11-01
PROJ 7.2.1:  2021-01-01
QGIS 3.18.0: 2021-02-xx
PROJ 8.0.0:  2021-03-01
PROJ 8.0.1:  2021-05-01
QGIS 3.20.0: 2021-06-xx
PROJ 8.1.0:  2021-07-01
PROJ 8.1.1:  2021-09-01
QGIS 3.22.0: 2021-10-xx (LTR)
PROJ 8.2.0:  2021-11-01
PROJ 8.2.1:  2022-01-01
PROJ 8.3.0:  2022-03-01

As it can be seen from the list the two schedules generally fit well together with QGIS long-term releases being issued roughly two months after PROJ as had the fix bug fix release of a new minor version branch. Or put in another way, we've had four releases to weed out bugs in a new major version release, which should provide a solid release for QGIS to build on.

I tried to look up the release schedules of various Linux distributions to see how those would fit since in the end the packaging systems will be the limiting factor for the whole OSGeo stack. I found it hard to come to any form of conclusion that could guide our release schedule though. I assume most distributions will be a major version branch behind when it comes to PROJ for the next year or two, until we have weeded out proj_api.h for good.

It would be great to get feedback on the release schedule from PROJ developers, developers of other packages depending on PROJ and the packagers as well.

/Kristian

[0] https://www.qgis.org/en/site/getinvolved/development/roadmap.html
[1] QGIS release dates ending in xx are presumed releases that doesn't figure in the road map


From peter at cesium.com  Thu Feb 27 08:00:13 2020
From: peter at cesium.com (Peter Gagliardi)
Date: Thu, 27 Feb 2020 11:00:13 -0500
Subject: [PROJ] How to add custom grid shift to proj.db?
Message-ID: <CAEF9c72RyRxaNxUrNL=0BFo9f_E=gw+6XuwCPPr2n11DseyXGQ@mail.gmail.com>

Hi everyone,

Suppose I wanted to create a compound CRS using a 2D projection + custom
geoid file (let's call it foo.gtx), not included in proj-datumgrid. What
table(s) in proj.db would I have to update so PROJ would know to open the
right geoid file? I'm guessing `grid_transformation` is relevant here, but
I'm not sure what else (maybe vertical_crs?). Also, if it is possible to
update the database like this, how would I select this custom CRS on the
command line, whether as a WKT or something else?

A few months ago, I asked about how to do this in a WKT, and it helped me
create a WKT like the one in the postscript. In the example, all I'm
trying to specify is EPSG:31370 + a hBG18.gtx geoid heights (file provided
by a client, but not in the list of geoids in proj-datumgrid-europe). This
does seem to work correctly.

However, we're using this as part of a REST API, so my team's a little
concerned about the security implications of specifying the grid shift
filename in the WKT. We want to know if updating the database is a better
approach.

Note that I am using PROJ 6.3.1 right now.

Thank you,
Peter Gagliardi

PS: Here's what I'm using currently to make my custom compound CRS:

COMPOUNDCRS["User-Defined Projection", PROJCRS["Belge 1972 / Belgian
Lambert 72",
    BASEGEOGCRS["Belge 1972",
        DATUM["Reseau National Belge 1972",
            ELLIPSOID["International 1924",6378388,297,
                LENGTHUNIT["metre",1]]],
        PRIMEM["Greenwich",0,
            ANGLEUNIT["degree",0.0174532925199433]],
        ID["EPSG",4313]],
    CONVERSION["Belgian Lambert 72",
        METHOD["Lambert Conic Conformal (2SP)",
            ID["EPSG",9802]],
        PARAMETER["Latitude of false origin",90,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8821]],
        PARAMETER["Longitude of false origin",4.36748666666667,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8822]],
        PARAMETER["Latitude of 1st standard parallel",51.1666672333333,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8823]],
        PARAMETER["Latitude of 2nd standard parallel",49.8333339,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8824]],
        PARAMETER["Easting at false origin",150000.013,
            LENGTHUNIT["metre",1],
            ID["EPSG",8826]],
        PARAMETER["Northing at false origin",5400088.438,
            LENGTHUNIT["metre",1],
            ID["EPSG",8827]]],
    CS[Cartesian,2],
        AXIS["easting (X)",east,
            ORDER[1],
            LENGTHUNIT["metre",1]],
        AXIS["northing (Y)",north,
            ORDER[2],
            LENGTHUNIT["metre",1]],
    USAGE[
        SCOPE["unknown"],
        AREA["Belgium - onshore"],
        BBOX[49.5,2.5,51.51,6.4]],
    ID["EPSG",31370]], BOUNDCRS[
         SOURCECRS[
            VERTCRS["unknown",
                VDATUM["unknown"],
                CS[vertical,1],
                    AXIS["gravity-related height (H)",up,
                        LENGTHUNIT["metre",1,
                            ID["EPSG",9001]]]]],
        TARGETCRS[
            GEOGCRS["WGS 84",
                DATUM["World Geodetic System 1984",
                    ELLIPSOID["WGS 84",6378137,298.257223563,
                        LENGTHUNIT["metre",1]]],
                PRIMEM["Greenwich",0,
                    ANGLEUNIT["degree",0.0174532925199433]],
                CS[ellipsoidal,3],
                    AXIS["latitude",north,
                        ORDER[1],
                        ANGLEUNIT["degree",0.0174532925199433]],
                    AXIS["longitude",east,
                        ORDER[2],
                        ANGLEUNIT["degree",0.0174532925199433]],
                    AXIS["ellipsoidal height",up,
                        ORDER[3],
                        LENGTHUNIT["metre",1]],
                ID["EPSG",4979]]],
   ABRIDGEDTRANSFORMATION["unknown to WGS84 ellipsoidal height",
            METHOD["GravityRelatedHeight to Geographic3D"],
            PARAMETERFILE["Geoid (height correction) model
file","hBG18.gtx",
                ID["EPSG",8666]]]]]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200227/a6be2ac5/attachment.html>

From peter at cesium.com  Thu Feb 27 08:28:45 2020
From: peter at cesium.com (Peter Gagliardi)
Date: Thu, 27 Feb 2020 11:28:45 -0500
Subject: [PROJ] Some questions about UK CRS
Message-ID: <CAEF9c706RCHxHy9PYEtrDYAHkwxMxKtKDmP2OkLia+ysr14=7Q@mail.gmail.com>

Hi everyone,

I have a separate question about some CRS in the UK that a client wanted us
to support.

1. For EPSG:7405 OSGB36, it looks like it tries to open
`OSTN15_OSGM15_GB.txt` and fails. From
https://www.ordnancesurvey.co.uk/business-government/tools-support/os-net/for-developers,
the developer pack includes a `OSTN15_OSGM15_DataFile.txt`, is this
related, or are they two different files for two different purposes?

2. I see that EPSG:7952 and EPSG:7953 are not listed in the database. From
the developer pack, it looks like this isn't a projection, but rather a
horizontal shift + a vertical shift. Our client provided .gsb and
.gtx files for us to use, but now... how do I specify both horizontal and
vertical shift at once? I tried using the following:

cs2cs +proj=pipeline +step +proj=hgridshift +grids=OSTN15_NTv2.gsb
+step +proj=vgridshift +grids=OSGM15.gtx +to
EPSG:4979

However, I get the error:
proj_create_operations: source_crs is not a CRS
Rel. 6.3.1, February 10th, 2020
<cs2cs>:
cannot initialize transformation
cause: generic error of unknown origin
program abnormally terminated

which sounds like I'm not specifying enough information about the CRS, but
I'm not quite sure what the correct input string would look like. Also, I
am fine with using a WKT instead if it makes for a more accurate
description of the transformation.

I appreciate any help you can provide on learning how to implement the
above.

Thank you,
Peter Gagliardi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200227/0505d18f/attachment.html>

From even.rouault at spatialys.com  Thu Feb 27 09:08:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 27 Feb 2020 18:08:30 +0100
Subject: [PROJ] How to add custom grid shift to proj.db?
In-Reply-To: <CAEF9c72RyRxaNxUrNL=0BFo9f_E=gw+6XuwCPPr2n11DseyXGQ@mail.gmail.com>
References: <CAEF9c72RyRxaNxUrNL=0BFo9f_E=gw+6XuwCPPr2n11DseyXGQ@mail.gmail.com>
Message-ID: <2097346.x1qiXAfxu9@even-i700>

Peter,

> Suppose I wanted to create a compound CRS using a 2D projection + custom
> geoid file (let's call it foo.gtx), not included in proj-datumgrid. What
> table(s) in proj.db would I have to update so PROJ would know to open the
> right geoid file? I'm guessing `grid_transformation` is relevant here, but
> I'm not sure what else (maybe vertical_crs?).

Yes, you'd need to define a record in grid_transformation that relates a 
geographic 3D CRS (existing or to create) and a vertical CRS (existing or to 
create).

You can take inspiration for example from EPSG:9325 'NZGD2000 to NZVD2009 
height (2)' to define one.

Looking for "hBG18", I've found http://www.ngi.be/agn/FR/FR3.jsp . So the 
geographic crs would be ETRS89. I don't see in EPSG a vertical CRS that would 
correspond to DNG heights.
Perhaps our Belgium friends could help / contribute that to PROJ upstream and 
ask EPSG to add the required entries ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Thu Feb 27 09:20:49 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 27 Feb 2020 18:20:49 +0100
Subject: [PROJ] Some questions about UK CRS
In-Reply-To: <CAEF9c706RCHxHy9PYEtrDYAHkwxMxKtKDmP2OkLia+ysr14=7Q@mail.gmail.com>
References: <CAEF9c706RCHxHy9PYEtrDYAHkwxMxKtKDmP2OkLia+ysr14=7Q@mail.gmail.com>
Message-ID: <2567634.jv8zPpd6Rb@even-i700>

On jeudi 27 février 2020 11:28:45 CET Peter Gagliardi wrote:
> Hi everyone,
> 
> I have a separate question about some CRS in the UK that a client wanted us
> to support.
> 
> 1. For EPSG:7405 OSGB36, it looks like it tries to open
> `OSTN15_OSGM15_GB.txt` and fails. From
> https://www.ordnancesurvey.co.uk/business-government/tools-support/os-net/fo
> r-developers, the developer pack includes a `OSTN15_OSGM15_DataFile.txt`, is
> this related, or are they two different files for two different purposes?

I had looked a bit at that some months ago. OS delivers grids in a specific 
format that would require further processing to be usable by PROJ. So 
typically proj.db has records for the geoid conversion OSTN15_OSGM15_GB.txt, 
but has no mapping to a file it would know how to handle (a .gtx typically)

> 
> 2. I see that EPSG:7952 and EPSG:7953 are not listed in the database.

They are in EPSG, but not imported in proj.db, as they use a METHOD["Ordnance 
Survey National Transformation",ID["EPSG",9633]] that PROJ doesn't know how to 
use. If I remember well, the issue is that the grid is referenced in projected 
coordinates, and not geographic one. Processing would be needed.

> From
> the developer pack, it looks like this isn't a projection, but rather a
> horizontal shift + a vertical shift. Our client provided .gsb and
> .gtx files for us to use, but now... how do I specify both horizontal and
> vertical shift at once? I tried using the following:
> 
> cs2cs +proj=pipeline +step +proj=hgridshift +grids=OSTN15_NTv2.gsb
> +step +proj=vgridshift +grids=OSGM15.gtx +to
> EPSG:4979
> 
> However, I get the error:

Yes, "+proj=pipeline +step +proj=hgridshift +grids=OSTN15_NTv2.gsb +step 
+proj=vgridshift +grids=OSGM15.gtx" expresses a transformation not a CRS, so 
you cannot use that as the source CRS of cs2cs.
You may want to use that pipeline directly in the 'cct' utility
Also be careful about the direction of +proj=vgridshift. By default, it 
subtracts the value found in the grid (that is it goes from ellipsoidal height 
to orthometric height)


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kreve at sdfe.dk  Fri Feb 28 01:17:28 2020
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 28 Feb 2020 09:17:28 +0000
Subject: [PROJ] PROJ 7.0.0RC2
In-Reply-To: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>
References: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>
Message-ID: <db776eabd9e846828d4ed9b50e1b13a9@sdfe.dk>

We have not received any feedback on the second release candidates. I take that as
a sign that we’ve taken care of all the immediate issues and that they are ready for
final release.

So, I hereby motion that we promote the following release candidate to their final
versions:

proj-7.0.0RC2
proj-data-1.0RC2
proj-datumgrid-europe-1.6RC1
proj-datumgrid-north-america-1.4RC1
proj-datumgrid-oceania-1.2RC1

I’ll start with my +1

/Kristian


From: PROJ <proj-bounces at lists.osgeo.org> On Behalf Of Kristian Evers
Sent: 25. februar 2020 20:37
To: PROJ <proj at lists.osgeo.org>
Subject: [PROJ] PROJ 7.0.0RC2

All,

I’ve just uploaded PROJ 7.0.0RC2 and proj-data-1.0.0RC2. All reported issues
should be resolved in the new release candidates. As always, we welcome your
feedback after testing the release candidates. No problems has been reported
with the proj-datumgrid series of release candidates so they are still at RC1.

Download the packages here:

http://download.osgeo.org/proj/proj-7.0.0RC2.tar.gz
http://download.osgeo.org/proj/proj-7.0.0RC2.zip

http://download.osgeo.org/proj/proj-data-1.0RC2.tar.gz
http://download.osgeo.org/proj/proj-data-1.0RC2.zip

It has been highlighted that for builds on computers without internet access
‘make check’ will fail because of missing grid files. If you are building on
such a system we advice to install the now legacy proj-datumgrid-1.8 package,
which can be downloaded here:

http://download.osgeo.org/proj/proj-datumgrid-1.8.tar.gz

If no serious issues are found within the next couple of days I will call for a vote
for promotion to final release on Friday the 28th with the aim of releasing the
final version on March 1st.

/Kristian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200228/429a1c0b/attachment.html>

From even.rouault at spatialys.com  Fri Feb 28 03:20:53 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Feb 2020 12:20:53 +0100
Subject: [PROJ] PROJ 7.0.0RC2
In-Reply-To: <db776eabd9e846828d4ed9b50e1b13a9@sdfe.dk>
References: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>
 <db776eabd9e846828d4ed9b50e1b13a9@sdfe.dk>
Message-ID: <1634917.YDZnoeTQ6n@even-i700>

> So, I hereby motion that we promote the following release candidate to their
> final versions:
> 
> proj-7.0.0RC2
> proj-data-1.0RC2
> proj-datumgrid-europe-1.6RC1
> proj-datumgrid-north-america-1.4RC1
> proj-datumgrid-oceania-1.2RC1
> 
> I’ll start with my +1

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From knudsen.thomas at gmail.com  Fri Feb 28 03:21:41 2020
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Fri, 28 Feb 2020 12:21:41 +0100
Subject: [PROJ] PROJ 7.0.0RC2
In-Reply-To: <db776eabd9e846828d4ed9b50e1b13a9@sdfe.dk>
References: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>
 <db776eabd9e846828d4ed9b50e1b13a9@sdfe.dk>
Message-ID: <CAH0YoEP5=oYuv_djRAHVBZqoNXF4J8GijcJcuD4YJV+BLxUXUQ@mail.gmail.com>

+1

fre. 28. feb. 2020 10.17 skrev Kristian Evers <kreve at sdfe.dk>:

> We have not received any feedback on the second release candidates. I take
> that as
>
> a sign that we’ve taken care of all the immediate issues and that they are
> ready for
>
> final release.
>
>
>
> So, I hereby motion that we promote the following release candidate to
> their final
>
> versions:
>
>
>
> proj-7.0.0RC2
>
> proj-data-1.0RC2
>
> proj-datumgrid-europe-1.6RC1
>
> proj-datumgrid-north-america-1.4RC1
>
> proj-datumgrid-oceania-1.2RC1
>
>
>
> I’ll start with my +1
>
>
>
> /Kristian
>
>
>
>
>
> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Kristian Evers
> *Sent:* 25. februar 2020 20:37
> *To:* PROJ <proj at lists.osgeo.org>
> *Subject:* [PROJ] PROJ 7.0.0RC2
>
>
>
> All,
>
>
>
> I’ve just uploaded PROJ 7.0.0RC2 and proj-data-1.0.0RC2. All reported
> issues
>
> should be resolved in the new release candidates. As always, we welcome
> your
>
> feedback after testing the release candidates. No problems has been
> reported
>
> with the proj-datumgrid series of release candidates so they are still at
> RC1.
>
>
>
> Download the packages here:
>
>
>
> http://download.osgeo.org/proj/proj-7.0.0RC2.tar.gz
>
> http://download.osgeo.org/proj/proj-7.0.0RC2.zip
>
>
>
> http://download.osgeo.org/proj/proj-data-1.0RC2.tar.gz
>
> http://download.osgeo.org/proj/proj-data-1.0RC2.zip
>
>
>
> It has been highlighted that for builds on computers without internet
> access
>
> ‘make check’ will fail because of missing grid files. If you are building
> on
>
> such a system we advice to install the now legacy proj-datumgrid-1.8
> package,
>
> which can be downloaded here:
>
>
>
> http://download.osgeo.org/proj/proj-datumgrid-1.8.tar.gz
>
>
>
> If no serious issues are found within the next couple of days I will call
> for a vote
>
> for promotion to final release on Friday the 28th with the aim of
> releasing the
>
> final version on March 1st.
>
>
>
> /Kristian
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200228/e8047324/attachment-0001.html>

From howard at hobu.co  Fri Feb 28 06:38:36 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 28 Feb 2020 08:38:36 -0600
Subject: [PROJ] PROJ 7.0.0RC2
In-Reply-To: <CAH0YoEP5=oYuv_djRAHVBZqoNXF4J8GijcJcuD4YJV+BLxUXUQ@mail.gmail.com>
References: <D5DFB69D-D789-403A-81A3-C6FFB5637A22@sdfe.dk>
 <db776eabd9e846828d4ed9b50e1b13a9@sdfe.dk>
 <CAH0YoEP5=oYuv_djRAHVBZqoNXF4J8GijcJcuD4YJV+BLxUXUQ@mail.gmail.com>
Message-ID: <CAKyBbG7FbNaMeu26SYnY8k1uZSv26yXQBjOq0kcYHL2dewtFWg@mail.gmail.com>

+1

On Fri, Feb 28, 2020 at 5:27 AM Thomas Knudsen <knudsen.thomas at gmail.com>
wrote:

> +1
>
> fre. 28. feb. 2020 10.17 skrev Kristian Evers <kreve at sdfe.dk>:
>
>> We have not received any feedback on the second release candidates. I
>> take that as
>>
>> a sign that we’ve taken care of all the immediate issues and that they
>> are ready for
>>
>> final release.
>>
>>
>>
>> So, I hereby motion that we promote the following release candidate to
>> their final
>>
>> versions:
>>
>>
>>
>> proj-7.0.0RC2
>>
>> proj-data-1.0RC2
>>
>> proj-datumgrid-europe-1.6RC1
>>
>> proj-datumgrid-north-america-1.4RC1
>>
>> proj-datumgrid-oceania-1.2RC1
>>
>>
>>
>> I’ll start with my +1
>>
>>
>>
>> /Kristian
>>
>>
>>
>>
>>
>> *From:* PROJ <proj-bounces at lists.osgeo.org> *On Behalf Of *Kristian Evers
>> *Sent:* 25. februar 2020 20:37
>> *To:* PROJ <proj at lists.osgeo.org>
>> *Subject:* [PROJ] PROJ 7.0.0RC2
>>
>>
>>
>> All,
>>
>>
>>
>> I’ve just uploaded PROJ 7.0.0RC2 and proj-data-1.0.0RC2. All reported
>> issues
>>
>> should be resolved in the new release candidates. As always, we welcome
>> your
>>
>> feedback after testing the release candidates. No problems has been
>> reported
>>
>> with the proj-datumgrid series of release candidates so they are still at
>> RC1.
>>
>>
>>
>> Download the packages here:
>>
>>
>>
>> http://download.osgeo.org/proj/proj-7.0.0RC2.tar.gz
>>
>> http://download.osgeo.org/proj/proj-7.0.0RC2.zip
>>
>>
>>
>> http://download.osgeo.org/proj/proj-data-1.0RC2.tar.gz
>>
>> http://download.osgeo.org/proj/proj-data-1.0RC2.zip
>>
>>
>>
>> It has been highlighted that for builds on computers without internet
>> access
>>
>> ‘make check’ will fail because of missing grid files. If you are building
>> on
>>
>> such a system we advice to install the now legacy proj-datumgrid-1.8
>> package,
>>
>> which can be downloaded here:
>>
>>
>>
>> http://download.osgeo.org/proj/proj-datumgrid-1.8.tar.gz
>>
>>
>>
>> If no serious issues are found within the next couple of days I will call
>> for a vote
>>
>> for promotion to final release on Friday the 28th with the aim of
>> releasing the
>>
>> final version on March 1st.
>>
>>
>>
>> /Kristian
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200228/58e9e1aa/attachment.html>

From sean at cesium.com  Fri Feb 28 09:26:09 2020
From: sean at cesium.com (Sean Lilley)
Date: Fri, 28 Feb 2020 12:26:09 -0500
Subject: [PROJ] Best practices for converting 2D CRS to 3D CRS
Message-ID: <CABKG1zU7eau3pxpFHa8nP7+zcA_0=SQOHtotbxHRy=m=2P_xsA@mail.gmail.com>

We occasionally receive datasets that have height values in feet and only
specify a 2D CRS. It seems that recent versions of proj/gdal (6.3.0/3.0.3)
promote to 3D by assuming the z-axis is meters rather than inferring the
height units from other components. Earlier versions would infer the units
as feet which was what we expected for those datasets.

I want to confirm if this change is intentional. I'm guessing that it is
and that promoting 2D to 3D is not a simple problem. Nevertheless does
anyone have a workaround that infers the expected vertical units from the
2D CRS most of the time?

I'm using the gdal C++ api and inferring the height units from the 2D CRS's
linear units. I haven't tried building this exact snippet so there may be
compiler errors, but it gives the general idea.

            int inputEpsg = 2263;
            int outputEpsg = 4979;
            double x = 1002759.79006824;
            double y = 220148.669988647;
            double z = 1797.1066;
            double expectedHeight = 547.759;

            OGRSpatialReference inputSpatialReference;
            inputSpatialReference.importFromEPSG(inputEpsg);

inputSpatialReference.SetAxisMappingStrategy(OAMS_TRADITIONAL_GIS_ORDER);

            // Guess the units of the vertical axis for 2D CRS
            double verticalToMeters = 1.0;
            int axesCount = inputSpatialReference.GetAxesCount();
            if (axesCount == 2)
            {
                verticalToMeters = inputSpatialReference.GetLinearUnits();
            }

            OGRSpatialReference outputSpatialReference;
            outputSpatialReference.importFromEPSG(outputEpsg);

outputSpatialReference.SetAxisMappingStrategy(OAMS_TRADITIONAL_GIS_ORDER);

            OGRCoordinateTransformation* transformation
= OGRCreateCoordinateTransformation(&inputSpatialReference,
&outputSpatialReference);
            transformation->Transform(1, &x, &y, &z);

            z *= verticalToMeters;
            assert(z == expectedHeight);

Is there a cleaner way for me to achieve what I want to do in the gdal C++
API? Is inferring the height units from the 2D CRS linear units generally
an ok approach?

Thanks,
Sean
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20200228/afd5fb1c/attachment.html>

From even.rouault at spatialys.com  Fri Feb 28 09:47:27 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Feb 2020 18:47:27 +0100
Subject: [PROJ] Best practices for converting 2D CRS to 3D CRS
In-Reply-To: <CABKG1zU7eau3pxpFHa8nP7+zcA_0=SQOHtotbxHRy=m=2P_xsA@mail.gmail.com>
References: <CABKG1zU7eau3pxpFHa8nP7+zcA_0=SQOHtotbxHRy=m=2P_xsA@mail.gmail.com>
Message-ID: <35981704.u3MmqRr869@even-i700>

Sean,

> I want to confirm if this change is intentional. 

Not really, but the previous behaviour wasn't fully intentional either.

> I'm guessing that it is and that promoting 2D to 3D is not a simple problem.

Any choice you make, using the same unit as the horizontal component or metre 
is somewhat arbitrary...

> Nevertheless does
> anyone have a workaround that infers the expected vertical units from the
> 2D CRS most of the time?

If you use PROJ C API, you can use proj_cs_get_axis_info() + 
proj_crs_promote_to_3D() + proj_crs_alter_cs_linear_unit() (in 
proj_experimental.h)

If you want to integrate this with GDAL, you'll have to use an export / import 
from/to WKT.

As you mention EPSG:2263, which relies on NAD83(86), I think I've read in some 
NOAA documentation that NAD83(86) is not well defined for ellipsoidal heights. 
At least, there is only a EPSG code for the NAD83 Geographic 2D CRS, but not 
for a corresponding Geographic 3D CRS. PROJ cannot find any non-ballpark 
transformation between NAD83 and WGS84 regarding the Z component, so the 
accuracy you'll get on it is likely to be greater than 1 metre

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

