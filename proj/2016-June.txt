From dzengiz.tafa at telenet.be  Wed Jun  1 01:51:27 2016
From: dzengiz.tafa at telenet.be (dzengiz.tafa at telenet.be)
Date: Wed, 1 Jun 2016 10:51:27 +0200 (CEST)
Subject: [Proj] placing a matplotlib basemap plot on a google map
Message-ID: <1780502874.16437018.1464771087866.JavaMail.root@telenet.be>

Hi 

For quite some time now I've been wresteling with a problem concerning projections. I was wondering if the experts on this forum/mailinglist could be of any help, since (let's face it) the material is quite frankly over my head. 

The short story is that I have got an hdf5 radar image, which contains an x-y grid of pixelvalues and I have to place it on a google map. Already there's a problem because the data is purely an x-y grid and google maps uses the EPSG 3857projection. The proj4 string provided in the hdf5 file is one of the RD-coordinate system, a system used in the Netherlands. 

The rest of the information I can find is listed here 


cal_data_count = 0 
cal_method = None 
cal_stations_count = 0 
composite_count = 288 
declutter_history = 0.1 
declutter_size = 4.0 
fill_value = -9999 
grid_extent = -110000,390000,700000,210000 
grid_projection = PROJCS["unnamed",GEOGCS["Bessel 1841",DATUM["unknown",SPHEROID["bessel",6377397.155,299.1528128],TOWGS84[565.237,50.0087,465.658,-0.406857,0.350733,-1.87035,4.0812]],PRIMEM["Greenwich",0],UNIT["degree",0.0174532925199433]],PROJECTION["Oblique_Stereographic"],PARAMETER["latitude_of_origin",52.15616055555555],PARAMETER["central_meridian",5.38763888888889],PARAMETER["scale_factor",0.999908],PARAMETER["false_easting",155000],PARAMETER["false_northing",463000],UNIT["Meter",1]] 
grid_size = 500,490 
locations = -7384.887748796755,358296.0214553905,140661.4380856066,456959.9690822229,115509.8972636278,551852.1442379927,263965.23587302887,595812.4921183779,264883.22682543105,380702.99609763426,238048.54530185566,236013.44861746818 
method = weighted lowest altitudes 
radars = JAB,NL60,NL61,emd,ess,nhb 
ranges = 298.75,239.5,239.5,127.5,127.5,127.5 
timestamp_first_composite = 20151211080000 
timestamp_last_composite = 20151212075500 

map_projection (6024, 2) 
Group size = 0 
Number of attributes = 3 
projection_indication = Y 
projection_name = STEREOGRAPHIC 
projection_proj4_params = +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.999908 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.237,50.0087,465.658,-0.406857,0.350733,-1.87035,4.0812 +units=m +no_defs 

geographic (5200, 2) 
Group size = 1 
Number of attributes = 8 
geo_dim_pixel = KM,KM 
geo_number_columns = 500 
geo_number_rows = 490 
geo_par_pixel = X,Y 
geo_pixel_def = CENTRE 
geo_pixel_size_x = 1.0 
geo_pixel_size_y = -1.0 
geo_product_corners = -110000,210000,-110000,700000,390000,700000,390000,210000 
Right now I am using a complex code to rewrite each of the pixels to lat/lon & I plot them with matplotlib (python) on a mpl basemap without landcontours, coast-contours so I have an image on an mpl-basemap, but as said, without the countrycontours & such. The projecction used for the Basemap is "mercator". The result gives the desired radarimage & seems to match the locations... so far so good but with the python mapping of pixels to lat/lons... 

I then run the output (a png file) through gdal to tile it, & warp it to the EPSG 3857 projection (Gmaps). When turning on the country-contours to check the result, the result is not correct, although it comes close to what it should be. 

http://postimg.org/image/ly01obb1n/ 

I am starting to wonder if there's another way I can make this work, perhaps without the use of matplotlib python? Eg, going from the standard x-y grid Hdf5 data straight to a warp using gdal or whichever way possible. I have run out of ideas & the information I can find to help me get passed this is really confusing. 


I am looking forward to the reply of the masters in this forum. 


Best regards 

D. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160601/c8c79b1d/attachment.html>

From jmfluis at gmail.com  Wed Jun  1 10:33:32 2016
From: jmfluis at gmail.com (Joaquim Luis)
Date: Wed, 01 Jun 2016 18:33:32 +0100
Subject: [Proj] placing a matplotlib basemap plot on a google map
In-Reply-To: <1780502874.16437018.1464771087866.JavaMail.root@telenet.be>
References: <1780502874.16437018.1464771087866.JavaMail.root@telenet.be>
Message-ID: <op.yid216s6q5usb8@macmarilu>

If you are on Windows and you are lucky that the file internals are  
recognized the easiest way is to use Mirone (w3.ualg.pt/~jluis/mirone). A  
simple drag-n-drop plus a click on the GE icon should do the job. (but  
you'll need to update with "Help -> check for updates).

Another option is to reproject  with gdalwarp and use GMT to produce a  
nice image and a kml (the ps2raster (now called psconvert) module)

Joaquim

> Hi
>
> For quite some time now I've been wresteling with a problem concerning  
> projections. I was wondering if the experts on >this forum/mailinglist  
> could be of any help, since (let's face it) the material is quite  
> frankly over my head.
>
> The short story is that I have got an hdf5 radar image, which contains  
> an x-y grid of pixelvalues and I have to place it >on a google map.  
> Already there's a problem because the data is purely an x-y grid and  
> google maps uses the EPSG >3857projection. The proj4 string provided in  
> the hdf5 file is one of the RD-coordinate system, a system used in the  
> >Netherlands.
>
> The rest of the information I can find is listed here
>
> cal_data_count = 0
> cal_method = None
> cal_stations_count = 0
> composite_count = 288
> declutter_history = 0.1
> declutter_size = 4.0
> fill_value = -9999
> grid_extent = -110000,390000,700000,210000
> grid_projection = PROJCS["unnamed",GEOGCS["Bessel  
> 1841",DATUM["unknown",SPHEROID>["bessel",6377397.155,299.1528128],TOWGS84[565.237,50.0087,465.658,-0.406857,0.350733,-1.87035,4.0812]],PRIMEM>["Greenwich",0],UNIT["degree",0.0174532925199433]],PROJECTION["Oblique_Stereographic"],PARAMETER>["latitude_of_origin",52.15616055555555],PARAMETER["central_meridian",5.38763888888889],PARAMETER>["scale_factor",0.999908],PARAMETER["false_easting",155000],PARAMETER["false_northing",463000],UNIT["Meter",1]]
> grid_size = 500,490
> locations =  
> >-7384.887748796755,358296.0214553905,140661.4380856066,456959.9690822229,115509.8972636278,551852.1442379927,263965.23587302887,595812.4921183779,264883.22682543105,380702.99609763426,238048.54530185566,236013.44861746818
> method = weighted lowest altitudes
> radars = JAB,NL60,NL61,emd,ess,nhb
> ranges = 298.75,239.5,239.5,127.5,127.5,127.5
> timestamp_first_composite = 20151211080000
> timestamp_last_composite = 20151212075500
>
> map_projection (6024, 2)
> Group size = 0
> Number of attributes = 3
> projection_indication = Y
> projection_name = STEREOGRAPHIC
> projection_proj4_params = +proj=sterea +lat_0=52.15616055555555  
> +lon_0=5.38763888888889 +k=0.999908 >+x_0=155000 +y_0=463000  
> +ellps=bessel  
> +towgs84=565.237,50.0087,465.658,-0.406857,0.350733,-1.87035,4.0812  
> >+units=m +no_defs
>
> geographic (5200, 2)
> Group size = 1
> Number of attributes = 8
> geo_dim_pixel = KM,KM
> geo_number_columns = 500
> geo_number_rows = 490
> geo_par_pixel = X,Y
> geo_pixel_def = CENTRE
> geo_pixel_size_x = 1.0
> geo_pixel_size_y = -1.0
> geo_product_corners =  
> -110000,210000,-110000,700000,390000,700000,390000,210000
> Right now I am using a complex code to rewrite each of the pixels to  
> lat/lon & I plot them with matplotlib (python) on a >mpl basemap without  
> landcontours, coast-contours so I have an image on an mpl-basemap, but  
> as said, without the >countrycontours & such. The projecction used for  
> the Basemap is "mercator". The result gives the desired radarimage &  
> >seems to match the locations... so far so good but with the python  
> mapping of pixels to lat/lons...
>
> I then run the output (a png file) through gdal to tile it, & warp it to  
> the EPSG 3857 projection (Gmaps). When turning >on the country-contours  
> to check the result, the result is not correct, although it comes close  
> to what it should be.
>
> http://postimg.org/image/ly01obb1n/
>
> I am starting to wonder if there's another way I can make this work,  
> perhaps without the use of matplotlib python? Eg, >going from the  
> standard x-y grid Hdf5 data straight to a warp using gdal or whichever  
> way possible. I have run out of >ideas & the information I can find to  
> help me get passed this is really confusing.
>
>
> I am looking forward to the reply of the masters in this forum.
>
>
> Best regards
>
> D.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160601/1812e644/attachment.html>

From knudsen.thomas at gmail.com  Sat Jun  4 20:46:08 2016
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Sun, 5 Jun 2016 05:46:08 +0200
Subject: [Proj] Transformation pipelines - your opinion?
Message-ID: <CAH0YoENp1A9QQL-ytbieWSbN5MTieqmaQ4P1ka4how=EghmbFA@mail.gmail.com>

All,

I have recently opened a new pull request over at
https://github.com/OSGeo/proj.4/pull/388 ...

It introduces projection pipelines (i.e. multi-step transformations),
and, at the end-user facing side of things, a new 3D transformation
program called “tran”, which directly supports transformation
pipelines.

While the pull request expands the capabilities of proj.4
dramatically, the code is not very intrusive: Technically, the
pipeline driver is just a new projection, and hence a transformation
pipeline is introduced with the incantation “+proj=pipeline”.

I agree that at first, this may seem a bit odd, so I hope to initiate
a discussion here about e.g. the syntax, and aboult potentially useful
pipeline primitives: The code is still in its infancy, so a lot will
happen before it is ready for merging into the proj.4 master branch
(although I hope it can be done in time for version 4.10)

You can contribute to the discussion here and/or over at the github
page already mentioned. Also, you can read more about syntactic
details at my proj.4 page http://thomasknudsen.net/proj4.html, where
you can also find instructions for downloading a recent Windows build
of the “tran” tool.

/thomas


From howard at hobu.co  Sun Jun  5 15:56:43 2016
From: howard at hobu.co (Howard Butler)
Date: Sun, 5 Jun 2016 17:56:43 -0500
Subject: [Proj] Transformation pipelines - your opinion?
In-Reply-To: <CAH0YoENp1A9QQL-ytbieWSbN5MTieqmaQ4P1ka4how=EghmbFA@mail.gmail.com>
References: <CAH0YoENp1A9QQL-ytbieWSbN5MTieqmaQ4P1ka4how=EghmbFA@mail.gmail.com>
Message-ID: <AB629BD0-74DD-446A-918F-853E42606946@hobu.co>


> On Jun 4, 2016, at 10:46 PM, Thomas Knudsen <knudsen.thomas at gmail.com> wrote:
> 
> All,
> 
> I have recently opened a new pull request over at
> https://github.com/OSGeo/proj.4/pull/388 ...
> 
> It introduces projection pipelines (i.e. multi-step transformations),
> and, at the end-user facing side of things, a new 3D transformation
> program called “tran”, which directly supports transformation
> pipelines.
> 
> While the pull request expands the capabilities of proj.4
> dramatically, the code is not very intrusive: Technically, the
> pipeline driver is just a new projection, and hence a transformation
> pipeline is introduced with the incantation “+proj=pipeline”.
> 
> I agree that at first, this may seem a bit odd, so I hope to initiate
> a discussion here about e.g. the syntax, and aboult potentially useful
> pipeline primitives: The code is still in its infancy, so a lot will
> happen before it is ready for merging into the proj.4 master branch
> (although I hope it can be done in time for version 4.10)
> 
> You can contribute to the discussion here and/or over at the github
> page already mentioned. Also, you can read more about syntactic
> details at my proj.4 page http://thomasknudsen.net/proj4.html, where
> you can also find instructions for downloading a recent Windows build
> of the “tran” tool.

This looks like a really great addition! I've been watching the pull request with excitement that this approach will provide more avenues for these kinds of challenging problems. As a point cloud and LiDAR person, these capabilities will be very useful, and the momentum you and Kristian have been building to improve Proj.4 maintenance and feature set is greatly appreciated.

Carry on!

Howard

From kreve at sdfe.dk  Thu Jun  9 03:24:07 2016
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 9 Jun 2016 10:24:07 +0000
Subject: [Proj] Support for Modified Krovak projection
In-Reply-To: <56D17C77.2080709@gmail.com>
References: <56D17C77.2080709@gmail.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0E79E5BC11@S000014.PROD.SITAD.DK>

Hi Michael,

Sorry for the late reply. Im giving the Krovak projection code a big overhaul at the moment (see https://github.com/OSGeo/proj.4/pull/385) and while searching for more information about the projection I stumbled across your kind offer to supply the code for the modified versions of the projection.

The best way for you to contribute is to make a pull request on Github. If you're not familiar with git and Github I'll do my best to help you get started. 

Regards,
Kristian Evers

> -----Oprindelig meddelelse-----
> Fra: proj-bounces at lists.maptools.org [mailto:proj-
> bounces at lists.maptools.org] På vegne af Michal Seidl
> Sendt: 27. februar 2016 11:38
> Til: PROJ.4 and general Projections Discussions
> Emne: [Proj] Support for Modified Krovak projection
> 
> Hello,
> I have implemented in my local fork of proj source code Modified Krovak
> projection. I have given krovak-m proj.4 code for this projection.
> 
> It can be used to fix missing EPSG codes 5221,5224,5225... in epsg
> transformation file.
> 
> If the proj community is interested or someone else is already working
> on it please let me know how can I correctly contribute to project.
> 
> Michal S.
> 
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj


From mpasquini at navionics.com  Thu Jun  9 05:51:05 2016
From: mpasquini at navionics.com (Matteo Pasquini)
Date: Thu, 9 Jun 2016 12:51:05 +0000
Subject: [Proj] help
Message-ID: <HE1PR04MB086059721193A92EBB2EFD33B85F0@HE1PR04MB0860.eurprd04.prod.outlook.com>

Hi,

I've added a new projection to the code, tested and installed on my laptop. It works.

I would like to push it for you approval but, following the instructions from https://github.com/OSGeo/proj.4/blob/master/HOWTO-RELEASE ,
I'm unable to perform latest passages.
I'm stuck after the "make dist-all"

Which is the way to send those changes to you ?


Matteo Pasquini
OPS - Production Agent
Skype :[world_modern_art_29x44]<skype:pasquini.matteo?chat> Pasquini.Matteo<skype:pasquini.matteo?chat>
Mobile: 331-595-8761
[NAV271_NAV+Updates_EmailSig_v5b.jpg]<http://www.navionics.com/>

[cid:13DDE468-0357-42D2-B644-AE4A1507679B at home]<http://itunes.com/apps/Navionics> [cid:D0557F7B-6DD1-4F22-B08E-4AEEFDADC756 at home] <https://play.google.com/store/apps/developer?id=Navionics>                 [cid:22AC4E59-369F-4951-9B9B-F9C9EE333661 at home] <https://www.facebook.com/pages/Navionics/111050969965?id=111050969965&sk=app_553929257971315>  [cid:F9C3FA33-5EC5-4873-A21A-65A9B632BAA0 at home] <http://twitter.com/Navionics>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/fb4fb23c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 1093 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/fb4fb23c/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.jpg
Type: image/jpeg
Size: 2366 bytes
Desc: image004.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/fb4fb23c/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.jpg
Type: image/jpeg
Size: 2177 bytes
Desc: image005.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/fb4fb23c/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.jpg
Type: image/jpeg
Size: 1592 bytes
Desc: image006.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/fb4fb23c/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 1605 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/fb4fb23c/attachment-0003.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 5193 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/fb4fb23c/attachment-0004.jpg>

From kreve at sdfe.dk  Thu Jun  9 06:02:12 2016
From: kreve at sdfe.dk (Kristian Evers)
Date: Thu, 9 Jun 2016 13:02:12 +0000
Subject: [Proj] help
In-Reply-To: <HE1PR04MB086059721193A92EBB2EFD33B85F0@HE1PR04MB0860.eurprd04.prod.outlook.com>
References: <HE1PR04MB086059721193A92EBB2EFD33B85F0@HE1PR04MB0860.eurprd04.prod.outlook.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0E79E5BD01@S000014.PROD.SITAD.DK>

Hi Matteo.

You don't really need to follow the instructions in that list, as it is a playbook for creating an official release of proj.4. Just create a pull request on Github and your code will be reviewed and accepted into the repository if it brings value to the project.

Kristian

Fra: proj-bounces at lists.maptools.org [mailto:proj-bounces at lists.maptools.org] På vegne af Matteo Pasquini
Sendt: 9. juni 2016 14:51
Til: proj at lists.maptools.org
Cc: Marco Favale
Emne: [Proj] help

Hi,

I've added a new projection to the code, tested and installed on my laptop. It works.

I would like to push it for you approval but, following the instructions from https://github.com/OSGeo/proj.4/blob/master/HOWTO-RELEASE ,
I'm unable to perform latest passages.
I'm stuck after the "make dist-all"

Which is the way to send those changes to you ?


Matteo Pasquini
OPS - Production Agent
Skype :[world_modern_art_29x44]<skype:pasquini.matteo?chat> Pasquini.Matteo<skype:pasquini.matteo?chat>
Mobile: 331-595-8761
[NAV271_NAV+Updates_EmailSig_v5b.jpg]<http://www.navionics.com/>

[cid:13DDE468-0357-42D2-B644-AE4A1507679B at home]<http://itunes.com/apps/Navionics>[cid:D0557F7B-6DD1-4F22-B08E-4AEEFDADC756 at home]<https://play.google.com/store/apps/developer?id=Navionics>                [cid:22AC4E59-369F-4951-9B9B-F9C9EE333661 at home] <https://www.facebook.com/pages/Navionics/111050969965?id=111050969965&sk=app_553929257971315>  [cid:F9C3FA33-5EC5-4873-A21A-65A9B632BAA0 at home] <http://twitter.com/Navionics>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/650266a1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 1093 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/650266a1/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.jpg
Type: image/jpeg
Size: 5193 bytes
Desc: image002.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/650266a1/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.jpg
Type: image/jpeg
Size: 2366 bytes
Desc: image003.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/650266a1/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.jpg
Type: image/jpeg
Size: 2177 bytes
Desc: image004.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/650266a1/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.jpg
Type: image/jpeg
Size: 1592 bytes
Desc: image005.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/650266a1/attachment-0003.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.jpg
Type: image/jpeg
Size: 1605 bytes
Desc: image006.jpg
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160609/650266a1/attachment-0004.jpg>

From vanadovv at hetnet.nl  Sun Jun 26 05:41:20 2016
From: vanadovv at hetnet.nl (vanadovv at hetnet.nl)
Date: Sun, 26 Jun 2016 14:41:20 +0200 (CEST)
Subject: [Proj] Selftest only partly reliable, example PJ_mod_ster
Message-ID: <21071309.8114.1466944880894.JavaMail.defaultUser@defaultHost>

Hello,
It is probably wise to give a warning against the new selftest function in the PROJ projection modules.
If the projection code is wrong, the selftest results are in absolute sense completely wrong,
but the selftest could verify the computer code as perfectly correct.
Example: PJ_mod_ster.c, as found in the repository on https://github.com/OSGeo/proj.4/tree/master/src
What is the problem?
Please refer to earlier PROJ list messages:
My message from Feb 17, 2008; 9:31am; subject: Small errors in modified stereographic
And a repeat from Frank Willett, Sep 10 2011, 10:36:42 EST, subject: Projection gs48 error?
The Lee code has an incorrect coefficient and the GS48 code has an incorrect phi0.
Assuming Snyder is correct (Map projections a working manual).
For Lee, the first selftest produces:
-25564478.9526050538, 154490848.8286255
but it should be:
-25448425.343461025, 153791681.09640324
For GS48, the first selftest produces:
-12110635.970867658000, 11668127.145744404000
but it should be:
-1923908.4465293458, 355874.65894447843
No, I cannot file a ticket, I cannot produce a patch, I cannot give a working example of command line input and output from a compiled PROJ version.
Please do whatever you want with the above information, but at the moment the PJ_mod_ster.c code is still in error.
Yours,
Oscar van Vlijmen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160626/88c2af69/attachment.html>

From damian.rakowski at yahoo.com  Mon Jun 27 02:43:18 2016
From: damian.rakowski at yahoo.com (Damian Rakowski)
Date: Mon, 27 Jun 2016 09:43:18 +0000 (UTC)
Subject: [Proj] Projection conversion problem
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>
Message-ID: <1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>

Hi,

my names is Damian, I'm new to proj and projections topic. 
I need to perform transformation between two projections, and I have a problem defining projection string properly. 

I have coordinates in WGS84 like:

2.2945 48.858222

and I need to transform them to WGS84-like projection with different unit - encoded on integer. 
Basically what I need to do is to transform coordinates in the following way:

floor(coordinate * 2^32/360)
2^32/360 = 11930464,711111111111111111111111


After conversion I expect to get the following coordinates:

27374451 582901293


I tried:

cs2cs +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs  +to +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +k_0=11930464,711111111111111111111111 << EOF
> 2.2945 48.858222
> EOF
2d17'40.2"E    48d51'29.599"N 0.000


cs2cs +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs  +to +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +k=11930464,711111111111111111111111 << EOF
>2.2945 48.858222
>EOF

2d17'40.2"E    48d51'29.599"N 0.000

cs2cs +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs  +to +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +m=11930464,711111111111111111111111 << EOF
2.2945 48.858222
EOF

The same for reverse conversion:

cs2cs +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +k_0=11930464,711111111111111111111111  +to +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs << EOF         
27374451 582901293
EOF

27374451dE    582901293dN 0.000


So it seems that k, k_0, m does not bring any effect. I must not understand or missing something. Could you please help me?

Best Regards,

Damian 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160627/a660bd90/attachment.html>

From peifer at gmx.eu  Mon Jun 27 11:14:54 2016
From: peifer at gmx.eu (Hermann Peifer)
Date: Mon, 27 Jun 2016 20:14:54 +0200
Subject: [Proj] Projection conversion problem
In-Reply-To: <1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>
	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <57716D1E.2050903@gmx.eu>

On 2016-06-27 11:43, Damian Rakowski wrote:
> 
> I have coordinates in WGS84 like:
> 
> 2.2945 48.858222
> 
> and I need to transform them to WGS84-like projection with different
> unit - encoded on integer.
> Basically what I need to do is to transform coordinates in the following
> way:
> 
> floor(coordinate * 2^32/360)
> 2^32/360 = 11930464,711111111111111111111111
> 
> 
> After conversion I expect to get the following coordinates:
> 
> 27374451 582901293
> 

This looks like Garmin's "semicircle units". You don't need proj for
calculating them. Any of awk/perl/python/ruby/... will do.

Hermann


From andre+joost at nurfuerspam.de  Mon Jun 27 22:40:43 2016
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Tue, 28 Jun 2016 07:40:43 +0200
Subject: [Proj] Projection conversion problem
In-Reply-To: <1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>
	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <nkt31m$mqa$1@ger.gmane.org>

Am 27.06.2016 um 11:43 schrieb Damian Rakowski:

>
> So it seems that k, k_0, m does not bring any effect. I must not
> understand or missing something. Could you please help me?
>

These scale factors are only useful for certain projected coordinate
systems, like tmerc.

Since you are projecting from longlat to longlat, they will not be used
in the underlying code.

Just scale your coordinates without using proj.

HTH,
André Joost




From damian.rakowski at yahoo.com  Tue Jun 28 08:43:21 2016
From: damian.rakowski at yahoo.com (Damian Rakowski)
Date: Tue, 28 Jun 2016 17:43:21 +0200
Subject: [Proj] Projection conversion problem
In-Reply-To: <57716D1E.2050903@gmx.eu>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>
	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
	<57716D1E.2050903@gmx.eu>
Message-ID: <056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>

Thank you for your reply. That's true i can convert it using scripts, 
but I was thinking about different use case. I had a hope that thanks to 
proj integration in postgis I could define new coordinate system with 
proper proj configuration string (similar to this one: 
http://spatialreference.org/ref/epsg/4326/postgis/), and use such 
encoded coordinates directly in postgis.

Best Regards,

Damian

W dniu 2016-06-27 o 20:14, Hermann Peifer pisze:
> On 2016-06-27 11:43, Damian Rakowski wrote:
>> I have coordinates in WGS84 like:
>>
>> 2.2945 48.858222
>>
>> and I need to transform them to WGS84-like projection with different
>> unit - encoded on integer.
>> Basically what I need to do is to transform coordinates in the following
>> way:
>>
>> floor(coordinate * 2^32/360)
>> 2^32/360 = 11930464,711111111111111111111111
>>
>>
>> After conversion I expect to get the following coordinates:
>>
>> 27374451 582901293
>>
> This looks like Garmin's "semicircle units". You don't need proj for
> calculating them. Any of awk/perl/python/ruby/... will do.
>
> Hermann



From nhv at cape.com  Tue Jun 28 09:06:30 2016
From: nhv at cape.com (Norman Vine)
Date: Tue, 28 Jun 2016 12:06:30 -0400
Subject: [Proj] Projection conversion problem
In-Reply-To: <056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>
	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
	<57716D1E.2050903@gmx.eu>
	<056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>
Message-ID: <BB1E515A-E4AF-4ED4-AEC6-5776E72002BE@cape.com>

I believe you are looking for the plate caree projection
https://epsg.io/32662

   from: +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
   to:     +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs

"eqc" above is "Equidistant Cylindrical (Plate Caree)" - which is an alias of OGC WKT Name: "Equirectangular"

You will need to truncate this to integer

Norman


> On Jun 28, 2016, at 11:43 AM, Damian Rakowski <damian.rakowski at yahoo.com> wrote:
> 
> Thank you for your reply. That's true i can convert it using scripts, 
> but I was thinking about different use case. I had a hope that thanks to 
> proj integration in postgis I could define new coordinate system with 
> proper proj configuration string (similar to this one: 
> http://spatialreference.org/ref/epsg/4326/postgis/), and use such 
> encoded coordinates directly in postgis.
> 
> Best Regards,
> 
> Damian
> 
> W dniu 2016-06-27 o 20:14, Hermann Peifer pisze:
>> On 2016-06-27 11:43, Damian Rakowski wrote:
>>> I have coordinates in WGS84 like:
>>> 
>>> 2.2945 48.858222
>>> 
>>> and I need to transform them to WGS84-like projection with different
>>> unit - encoded on integer.
>>> Basically what I need to do is to transform coordinates in the following
>>> way:
>>> 
>>> floor(coordinate * 2^32/360)
>>> 2^32/360 = 11930464,711111111111111111111111
>>> 
>>> 
>>> After conversion I expect to get the following coordinates:
>>> 
>>> 27374451 582901293
>>> 
>> This looks like Garmin's "semicircle units". You don't need proj for
>> calculating them. Any of awk/perl/python/ruby/... will do.
>> 
>> Hermann
> 
> _______________________________________________
> Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj



From peifer at gmx.eu  Tue Jun 28 10:40:04 2016
From: peifer at gmx.eu (Hermann Peifer)
Date: Tue, 28 Jun 2016 19:40:04 +0200
Subject: [Proj] Projection conversion problem
In-Reply-To: <BB1E515A-E4AF-4ED4-AEC6-5776E72002BE@cape.com>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>
	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
	<57716D1E.2050903@gmx.eu>
	<056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>
	<BB1E515A-E4AF-4ED4-AEC6-5776E72002BE@cape.com>
Message-ID: <5772B674.3060000@gmx.eu>

On 2016-06-28 18:06, Norman Vine wrote:
> I believe you are looking for the plate caree projection
> https://epsg.io/32662
> 
>    from: +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
>    to:     +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs
> 
> "eqc" above is "Equidistant Cylindrical (Plate Caree)" - which is an alias of OGC WKT Name: "Equirectangular"
> 
> You will need to truncate this to integer
> 

With the given sample coordinates, this will give:

$ echo 2.2945 48.858222 | cs2cs -v +proj=longlat +datum=WGS84 +no_defs
+to +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84
+units=m +no_defs
# ---- From Coordinate System ----
#Lat/long (Geodetic alias)
#
# +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0
# ---- To Coordinate System ----
#Equidistant Cylindrical (Plate Caree)
#	Cyl, Sph
#	lat_ts=[, lat_0=0]
# +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m
# +no_defs +ellps=WGS84 +towgs84=0,0,0
255422.57	5438872.39 0.00

The expected result was: 27374451 582901293

Hermann


From andre+joost at nurfuerspam.de  Wed Jun 29 10:18:57 2016
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Wed, 29 Jun 2016 19:18:57 +0200
Subject: [Proj] Projection conversion problem
In-Reply-To: <5772B674.3060000@gmx.eu>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>	<57716D1E.2050903@gmx.eu>	<056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>	<BB1E515A-E4AF-4ED4-AEC6-5776E72002BE@cape.com>
	<5772B674.3060000@gmx.eu>
Message-ID: <nl1004$n70$1@ger.gmane.org>

Am 28.06.2016 um 19:40 schrieb Hermann Peifer:

>
> With the given sample coordinates, this will give:
>
> $ echo 2.2945 48.858222 | cs2cs -v +proj=longlat +datum=WGS84 +no_defs
> +to +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84
> +units=m +no_defs
> # ---- From Coordinate System ----
> #Lat/long (Geodetic alias)
> #
> # +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0
> # ---- To Coordinate System ----
> #Equidistant Cylindrical (Plate Caree)
> #	Cyl, Sph
> #	lat_ts=[, lat_0=0]
> # +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m
> # +no_defs +ellps=WGS84 +towgs84=0,0,0
> 255422.57	5438872.39 0.00
>
> The expected result was: 27374451 582901293
>

I suggest to take a sphere, and scale with the units:

+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R=6371000 
+to_meter=0.0093202511 +no_defs

which results to 27374451.23	582901292.36 0.00

HTH,
André Joost




From damian.rakowski at yahoo.com  Thu Jun 30 01:20:48 2016
From: damian.rakowski at yahoo.com (Damian Rakowski)
Date: Thu, 30 Jun 2016 08:20:48 +0000 (UTC)
Subject: [Proj] Projection conversion problem
In-Reply-To: <nl1004$n70$1@ger.gmane.org>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>
	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>
	<57716D1E.2050903@gmx.eu>
	<056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>
	<BB1E515A-E4AF-4ED4-AEC6-5776E72002BE@cape.com>
	<5772B674.3060000@gmx.eu> <nl1004$n70$1@ger.gmane.org>
Message-ID: <1285347434.6577402.1467274848095.JavaMail.yahoo@mail.yahoo.com>

That  looks very interesting, thank you for your reply.
One more question:
6371000 - this is an Earth radius0.0093202511 - how did you got this value? I just want to understand :)
Best Regards,
Damian
 

    19:18 środa, 2016-6-29, Andre Joost <andre+joost at nurfuerspam.de> napisał(a):
 

 Am 28.06.2016 um 19:40 schrieb Hermann Peifer:

>
> With the given sample coordinates, this will give:
>
> $ echo 2.2945 48.858222 | cs2cs -v +proj=longlat +datum=WGS84 +no_defs
> +to +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84
> +units=m +no_defs
> # ---- From Coordinate System ----
> #Lat/long (Geodetic alias)
> #
> # +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0
> # ---- To Coordinate System ----
> #Equidistant Cylindrical (Plate Caree)
> #    Cyl, Sph
> #    lat_ts=[, lat_0=0]
> # +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m
> # +no_defs +ellps=WGS84 +towgs84=0,0,0
> 255422.57    5438872.39 0.00
>
> The expected result was: 27374451 582901293
>

I suggest to take a sphere, and scale with the units:

+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R=6371000 
+to_meter=0.0093202511 +no_defs

which results to 27374451.23    582901292.36 0.00

HTH,
André Joost


_______________________________________________
Proj mailing list
Proj at lists.maptools.org
http://lists.maptools.org/mailman/listinfo/proj

  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20160630/380c003f/attachment.html>

From andre+joost at nurfuerspam.de  Thu Jun 30 04:24:12 2016
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Thu, 30 Jun 2016 13:24:12 +0200
Subject: [Proj] Projection conversion problem
In-Reply-To: <1285347434.6577402.1467274848095.JavaMail.yahoo@mail.yahoo.com>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>	<57716D1E.2050903@gmx.eu>	<056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>	<BB1E515A-E4AF-4ED4-AEC6-5776E72002BE@cape.com>	<5772B674.3060000@gmx.eu>
	<nl1004$n70$1@ger.gmane.org>
	<1285347434.6577402.1467274848095.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <nl2vjs$9ne$1@ger.gmane.org>

Am 30.06.2016 um 10:20 schrieb Damian Rakowski:
> That  looks very interesting, thank you for your reply. One more
> question: 6371000 - this is an Earth radius0.0093202511 - how did you
> got this value? I just want to understand :) Best Regards, Damian
>


In a first round, I substituted the ellipsoid by the radius:

echo 2.2945 48.858222   | cs2cs -v +proj=longlat +R=6371000 +no_defs +to 
+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R=6371000 +units=m 
+no_defs

255136.76	5432786.41

then divided the result in meters by the expected result. Since it is 
the same for both coordinates, it seems to be right.

 From John P. Snyders "Map Projections - A Working Manual" p.91, you can 
take the exact formulas for the sphere:

x = R (lambda-lambda0) cos phi1
y = R phi

with angles in radians. This is linear to the angles, and you just have 
to compare them with your scale factor.


Feel free to test it with other coordinate pairs around the globe.

HTH,
André Joost

> Am 28.06.2016 um 19:40 schrieb Hermann Peifer:
>
>>
>> With the given sample coordinates, this will give:
>>
>> $ echo 2.2945 48.858222 | cs2cs -v +proj=longlat +datum=WGS84
>> +no_defs +to +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0
>> +datum=WGS84 +units=m +no_defs # ---- From Coordinate System ----
>> #Lat/long (Geodetic alias) # # +proj=longlat +datum=WGS84 +no_defs
>> +ellps=WGS84 +towgs84=0,0,0 # ---- To Coordinate System ----
>> #Equidistant Cylindrical (Plate Caree) #    Cyl, Sph #    lat_ts=[,
>> lat_0=0] # +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0
>> +datum=WGS84 +units=m # +no_defs +ellps=WGS84 +towgs84=0,0,0
>> 255422.57    5438872.39 0.00
>>
>> The expected result was: 27374451 582901293
>>
>
> I suggest to take a sphere, and scale with the units:
>
> +proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R=6371000
> +to_meter=0.0093202511 +no_defs
>
> which results to 27374451.23    582901292.36 0.00
>
> HTH, André Joost
>
>
> _______________________________________________ Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>
>
>
>
>
> _______________________________________________ Proj mailing list
> Proj at lists.maptools.org
> http://lists.maptools.org/mailman/listinfo/proj
>




From andre+joost at nurfuerspam.de  Thu Jun 30 09:16:43 2016
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Thu, 30 Jun 2016 18:16:43 +0200
Subject: [Proj] Projection conversion problem
In-Reply-To: <nl2vjs$9ne$1@ger.gmane.org>
References: <1998751556.3275714.1467020598248.JavaMail.yahoo.ref@mail.yahoo.com>	<1998751556.3275714.1467020598248.JavaMail.yahoo@mail.yahoo.com>	<57716D1E.2050903@gmx.eu>	<056947b7-8790-8b3d-095e-eae0e87a31e0@yahoo.com>	<BB1E515A-E4AF-4ED4-AEC6-5776E72002BE@cape.com>	<5772B674.3060000@gmx.eu>	<nl1004$n70$1@ger.gmane.org>	<1285347434.6577402.1467274848095.JavaMail.yahoo@mail.yahoo.com>
	<nl2vjs$9ne$1@ger.gmane.org>
Message-ID: <nl3gm8$asj$1@ger.gmane.org>

Am 30.06.2016 um 13:24 schrieb Andre Joost:
> Am 30.06.2016 um 10:20 schrieb Damian Rakowski:
>> That  looks very interesting, thank you for your reply. One more
>> question: 6371000 - this is an Earth radius0.0093202511 - how did you
>> got this value? I just want to understand :) Best Regards, Damian
>>

>
>   From John P. Snyders "Map Projections - A Working Manual" p.91, you can
> take the exact formulas for the sphere:
>
> x = R (lambda-lambda0) cos phi1
> y = R phi
>
> with angles in radians. This is linear to the angles, and you just have
> to compare them with your scale factor.
>

So my to_meter factor is:

PI() * 6371000 / 2^31 = 0.009320251

Greetings,
André Joost




